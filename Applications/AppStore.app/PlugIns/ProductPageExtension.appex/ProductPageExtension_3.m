void sub_1001BC544(double a1, double a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;

  v5 = v4;
  v8 = type metadata accessor for Artwork.Style(0, a4);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for ArtworkView(0);
  v12 = objc_msgSend(objc_allocWithZone(v11), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, a1, a2);
  Artwork.style.getter(v13);
  v14 = ArtworkView.style.setter(v10);
  *(_QWORD *)&v15 = Artwork.contentMode.getter(v14).n128_u64[0];
  v17 = ArtworkLoaderConfig.size.getter(objc_msgSend(v12, "setContentMode:", v16, v15));
  v19 = ArtworkView.imageSize.setter(v17, v18);
  v20 = Artwork.backgroundColor.getter(v19);
  if (!v20)
  {
    v21 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v20 = static UIColor.placeholderBackground.getter(v21);
  }
  ArtworkView.backgroundColor.setter(v20);
  v22 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v13, 2, 1, v12, v11, v22);
  v23 = OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_contentView;
  v24 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_contentView];
  v25 = v12;
  if (v24)
  {
    objc_msgSend(v24, "removeFromSuperview");
    v26 = *(void **)&v5[v23];
  }
  else
  {
    v26 = 0;
  }
  *(_QWORD *)&v5[v23] = v12;
  v27 = v12;

  if (*(_QWORD *)&v5[v23])
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_scrollView], "addSubview:");
  objc_msgSend(v5, "setNeedsLayout");
  swift_release();

}

void sub_1001BC744(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  Class v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;

  v56 = a3;
  v60 = a2;
  v7 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v7);
  v61 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ImpressionMetrics(0);
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  __chkstk_darwin(v9);
  v55 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.Style(0, v11);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork.Crop(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AspectRatio(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = a1;
  ImpressionableArtwork.art.getter(v24);
  v57 = (Class)type metadata accessor for ArtworkView(0);
  v25 = objc_msgSend(objc_allocWithZone(v57), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  Artwork.size.getter(v25);
  AspectRatio.init(_:_:)(v26);
  v27 = AspectRatio.width(fromHeight:)(a5);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v29 = Artwork.crop.getter(v28);
  v30 = Artwork.Crop.preferredContentMode.getter(v29);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v31 = Artwork.config(_:mode:prefersLayeredImage:)(v30, 0, v27, a5);
  Artwork.style.getter(v31);
  v32 = ArtworkView.style.setter(v15);
  *(_QWORD *)&v33 = Artwork.contentMode.getter(v32).n128_u64[0];
  v35 = ArtworkLoaderConfig.size.getter(objc_msgSend(v25, "setContentMode:", v34, v33));
  v37 = ArtworkView.imageSize.setter(v35, v36);
  v38 = Artwork.backgroundColor.getter(v37);
  if (!v38)
  {
    v39 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v38 = static UIColor.placeholderBackground.getter(v39);
  }
  ArtworkView.backgroundColor.setter(v38);
  v40 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v25, v57, v40);
  v41 = (uint64_t)v61;
  ImpressionableArtwork.impressionMetrics.getter(v42);
  v44 = v58;
  v43 = v59;
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v41, 1, v59);
  v46 = v63;
  v47 = v41;
  if (v45 == 1)
  {
    sub_100010F2C(v41, &qword_1008131E0);
  }
  else
  {
    v48 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v55, v47, v43);
    if (v56)
      ImpressionsCalculator.addElement(_:at:)(v48, 0.0, 0.0, v27, a5);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v43);
  }
  v49 = OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_contentView;
  v50 = *(void **)&v46[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_contentView];
  v51 = v25;
  if (v50)
  {
    objc_msgSend(v50, "removeFromSuperview");
    v52 = *(void **)&v46[v49];
  }
  else
  {
    v52 = 0;
  }
  *(_QWORD *)&v46[v49] = v25;
  v53 = v25;

  if (*(_QWORD *)&v46[v49])
    objc_msgSend(*(id *)&v46[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_scrollView], "addSubview:");
  objc_msgSend(v46, "setNeedsLayout");
  swift_release();
  swift_release();

}

uint64_t type metadata accessor for ArcadeSubscribePageView()
{
  return objc_opt_self(_TtC20ProductPageExtension23ArcadeSubscribePageView);
}

uint64_t storeEnumTagSinglePayload for ArcadeSubscribePageView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001BCD64 + 4 * byte_100650145[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001BCD98 + 4 * byte_100650140[v4]))();
}

uint64_t sub_1001BCD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001BCDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001BCDA8);
  return result;
}

uint64_t sub_1001BCDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001BCDBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001BCDC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001BCDC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscribePageView.Style()
{
  return &type metadata for ArcadeSubscribePageView.Style;
}

unint64_t sub_1001BCDE8()
{
  unint64_t result;

  result = qword_100814458;
  if (!qword_100814458)
  {
    result = swift_getWitnessTable(&unk_1006501D0, &type metadata for ArcadeSubscribePageView.Style);
    atomic_store(result, (unint64_t *)&qword_100814458);
  }
  return result;
}

uint64_t sub_1001BCE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BreakoutDetailsView.Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1001BCE70(_QWORD *a1)
{
  destroy for ArcadeSubscribePageLayout(a1);
  return a1;
}

_QWORD *sub_1001BCEA4(_QWORD *a1)
{
  destroy for AXArcadeSubscribePageLayout(a1);
  return a1;
}

double sub_1001BCED8(void *a1, _BYTE *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  char v14;
  char v15;
  id v16;
  char v17;
  id v18;
  void *v19;
  double Width;
  double v21;
  char v22;
  id v23;
  char v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  void *v68;
  double v69[50];
  uint64_t v70[50];
  _QWORD v71[5];
  _QWORD v72[20];
  __int128 v73;
  __int128 v74;
  void *v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "traitCollection", v10);
  v14 = UITraitCollection.prefersAccessibilityLayouts.getter(v13);

  if ((v14 & 1) != 0)
  {
    v15 = a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_style];
    v16 = objc_msgSend(a2, "traitCollection");
    v17 = UITraitCollection.isSizeClassCompact.getter(v16);

    if ((v17 & 1) != 0)
    {
      v18 = objc_msgSend(a2, "window");
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, "frame");
        Width = CGRectGetWidth(v76);
        objc_msgSend(a2, "bounds");
        v21 = CGRectGetWidth(v77);

        LOBYTE(v18) = v21 < Width;
      }
    }
    else
    {
      LOBYTE(v18) = 1;
    }
    sub_1001B9C7C((char)v18, v15, v69);
    v29 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_headerView];
    v63 = v9;
    if (v29)
    {
      *((_QWORD *)&v74 + 1) = type metadata accessor for LinkableHeaderView();
      v75 = &protocol witness table for UIView;
      *(_QWORD *)&v73 = v29;
    }
    else
    {
      v75 = 0;
      v73 = 0u;
      v74 = 0u;
    }
    v31 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_contentView];
    v64 = v8;
    v65 = (uint64_t)a1;
    if (v31)
    {
      *((_QWORD *)&v67 + 1) = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v68 = &protocol witness table for UIView;
      *(_QWORD *)&v66 = v31;
    }
    else
    {
      v68 = 0;
      v66 = 0u;
      v67 = 0u;
    }
    v45 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_detailsView];
    v46 = type metadata accessor for BreakoutDetailsView(0);
    v72[9] = &protocol witness table for UIView;
    v72[8] = v46;
    v72[5] = v45;
    v47 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_offerButton];
    v72[13] = type metadata accessor for OfferButton();
    v72[14] = &protocol witness table for UIView;
    v72[10] = v47;
    v48 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_dismissButton];
    v72[18] = type metadata accessor for DynamicTypeButton(0);
    v72[19] = &protocol witness table for UIView;
    v72[15] = v48;
    memcpy(v70, v69, sizeof(v70));
    sub_1000A4E3C((uint64_t)&v73, (uint64_t)v71);
    sub_1000A4E3C((uint64_t)&v66, (uint64_t)v72);
    v49 = v70[3];
    v50 = v70[4];
    sub_100010F08(v70, v70[3]);
    v51 = v29;
    v52 = v31;
    v53 = v45;
    v54 = v47;
    v55 = v48;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49);
    v56 = v65;
    AnyDimension.value(in:rounded:)(v65, v12, v49, v50);
    v57 = v64;
    v58 = *(void (**)(char *, uint64_t))(v63 + 8);
    v58(v12, v64);
    sub_1001BD404(v56, (uint64_t)v70, a3, a4);
    v59 = v70[8];
    v60 = v70[9];
    sub_100010F08(&v70[5], v70[8]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v59);
    AnyDimension.value(in:rounded:)(v56, v12, v59, v60);
    v58(v12, v57);
    sub_1001BCEA4(v70);
  }
  else
  {
    v22 = a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_style];
    v23 = objc_msgSend(a2, "traitCollection");
    v24 = UITraitCollection.isSizeClassCompact.getter(v23);

    if ((v24 & 1) != 0)
    {
      v25 = objc_msgSend(a2, "window");
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v25, "frame");
        v27 = CGRectGetWidth(v78);
        objc_msgSend(a2, "bounds");
        v28 = CGRectGetWidth(v79);

        LOBYTE(v25) = v28 < v27;
      }
    }
    else
    {
      LOBYTE(v25) = 1;
    }
    sub_1001BA9EC((char)v25, v22, (uint64_t)v69, a3);
    v30 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_headerView];
    if (v30)
    {
      *((_QWORD *)&v74 + 1) = type metadata accessor for LinkableHeaderView();
      v75 = &protocol witness table for UIView;
      *(_QWORD *)&v73 = v30;
    }
    else
    {
      v75 = 0;
      v73 = 0u;
      v74 = 0u;
    }
    v32 = type metadata accessor for LayoutViewPlaceholder(0);
    v33 = v30;
    v35 = static LayoutViewPlaceholder.withIdentityMeasurement.getter(v34);
    v70[42] = (uint64_t)&protocol witness table for LayoutViewPlaceholder;
    v70[41] = v32;
    v70[38] = v35;
    v36 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_detailsView];
    v37 = type metadata accessor for BreakoutDetailsView(0);
    v70[47] = (uint64_t)&protocol witness table for UIView;
    v70[46] = v37;
    v70[43] = (uint64_t)v36;
    v38 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_offerButton];
    v39 = type metadata accessor for OfferButton();
    v71[2] = &protocol witness table for UIView;
    v71[1] = v39;
    v70[48] = (uint64_t)v38;
    v40 = *(void **)&a2[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_dismissButton];
    v41 = type metadata accessor for DynamicTypeButton(0);
    v72[2] = &protocol witness table for UIView;
    v72[1] = v41;
    v71[3] = v40;
    memcpy(v70, v69, 0x108uLL);
    sub_1000A4E3C((uint64_t)&v73, (uint64_t)&v70[33]);
    v42 = v36;
    v43 = v38;
    v44 = v40;
    a3 = sub_1001BD72C((uint64_t)a1, (uint64_t)v70, a3, a4);
    sub_1001BCE70(v70);
  }
  return a3;
}

double sub_1001BD404(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[24];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];
  _BYTE v45[56];
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 184);
  v13 = *(_QWORD *)(a2 + 192);
  sub_100010F08((_QWORD *)(a2 + 160), v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  v14 = AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v16 = *(_QWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  sub_100010F08((_QWORD *)(a2 + 120), v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  v18 = AnyDimension.value(in:rounded:)(a1, v11, v16, v17);
  v15(v11, v8);
  v19 = *(_QWORD *)(a2 + 224);
  v20 = *(_QWORD *)(a2 + 232);
  sub_100010F08((_QWORD *)(a2 + 200), v19);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19);
  v21 = AnyDimension.value(in:rounded:)(a1, v11, v19, v20);
  v15(v11, v8);
  sub_10000EF80(a2 + 240, (uint64_t)v45);
  v34 = *(_OWORD *)(a2 + 280);
  v22 = *(_QWORD *)(a2 + 296);
  v23 = *(_QWORD *)(a2 + 304);
  LOBYTE(v20) = *(_BYTE *)(a2 + 312);
  sub_10000EF80(a2 + 320, (uint64_t)&v49);
  sub_10000EF80(a2 + 360, (uint64_t)&v50);
  *(double *)v44 = v18;
  *(double *)&v44[1] = v14;
  *(double *)&v44[2] = v21;
  *(double *)&v44[3] = v14;
  *(_OWORD *)&v45[40] = v34;
  v46 = v22;
  v47 = v23;
  v48 = v20;
  sub_1001BE074((uint64_t)v44, (uint64_t)v40);
  sub_10000EF80(a2 + 480, (uint64_t)&v41);
  sub_10000EF80(a2 + 520, (uint64_t)&v42);
  sub_10000EF80(a2 + 560, (uint64_t)&v43);
  v24 = *(_QWORD *)(a2 + 104);
  v25 = *(_QWORD *)(a2 + 112);
  sub_100010F08((_QWORD *)(a2 + 80), v24);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v24);
  v26 = AnyDimension.value(in:rounded:)(a1, v11, v24, v25);
  v15(v11, v8);
  sub_1001BDCB0(a1, (uint64_t)v40, a3, a4);
  v28 = a4 - v26 - v27;
  sub_100018ADC(a2 + 400, (uint64_t)&v35, (uint64_t *)&unk_10080CE00);
  if (v36)
  {
    sub_100010E24(&v35, (uint64_t)v37);
    v29 = v38;
    v30 = v39;
    sub_100010F08(v37, v38);
    Measurable.measuredSize(fitting:in:)(a1, v29, *(_QWORD *)(v30 + 8), a3, a4);
    v32 = v31;
    sub_1001BE0B0(v40);
    sub_1001BE0E4(v44);
    v28 = v28 - v32;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v37);
  }
  else
  {
    sub_1001BE0B0(v40);
    sub_1001BE0E4(v44);
    sub_100010F2C((uint64_t)&v35, (uint64_t *)&unk_10080CE00);
  }
  return v28;
}

double sub_1001BD72C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[11];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[56];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_OWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  sub_10000EF80(a2 + 112, (uint64_t)v39);
  v25 = *(_OWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 168);
  v15 = *(_QWORD *)(a2 + 176);
  sub_10000EF80(a2 + 184, (uint64_t)&v42);
  sub_10000EF80(a2 + 224, (uint64_t)&v43);
  v36 = v26;
  v37 = v12;
  v38 = v13;
  *(_OWORD *)&v39[40] = v25;
  v40 = v14;
  v41 = v15;
  sub_1001BE154(&v36, v32);
  sub_10000EF80(a2 + 344, (uint64_t)&v33);
  sub_10000EF80(a2 + 384, (uint64_t)&v34);
  sub_10000EF80(a2 + 424, (uint64_t)&v35);
  v16 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  sub_100010F08((_QWORD *)a2, v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  AnyDimension.value(in:rounded:)(a1, v11, v16, v17);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  sub_1001BD9B8(a1, (uint64_t)v32, a3, a4);
  sub_100018ADC(a2 + 264, (uint64_t)&v27, (uint64_t *)&unk_10080CE00);
  if (v28)
  {
    sub_100010E24(&v27, (uint64_t)v29);
    v19 = v30;
    v20 = v31;
    sub_100010F08(v29, v30);
    Measurable.measuredSize(fitting:in:)(a1, v19, *(_QWORD *)(v20 + 8), a3, a4);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v29);
  }
  else
  {
    sub_100010F2C((uint64_t)&v27, (uint64_t *)&unk_10080CE00);
  }
  v21 = (_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  sub_100010F08(v21, v22);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
  AnyDimension.value(in:rounded:)(a1, v11, v22, v23);
  v18(v11, v8);
  sub_1001BE190(v32);
  sub_1001BE1C4(&v36);
  return a3;
}

double sub_1001BD9B8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  _OWORD v40[16];
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 - *(double *)(a2 + 8) - *(double *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 208);
  v14 = *(_QWORD *)(a2 + 216);
  sub_100010F08((_QWORD *)(a2 + 184), v13);
  Measurable.measuredSize(fitting:in:)(a1, v13, *(_QWORD *)(v14 + 8), v12, a4);
  v15 = *(_QWORD *)(a2 + 168);
  v16 = *(_QWORD *)(a2 + 176);
  sub_100010F08((_QWORD *)(a2 + 144), v15);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15);
  AnyDimension.value(in:rounded:)(a1, v11, v15, v16);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v18 = *(_QWORD *)(a2 + 248);
  v19 = *(_QWORD *)(a2 + 256);
  sub_100010F08((_QWORD *)(a2 + 224), v18);
  v20 = dispatch thunk of LayoutView.isHidden.getter(v18, v19);
  v39 = v8;
  if ((v20 & 1) != 0)
  {
    v21 = v17;
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 56);
    v23 = *(_QWORD *)(a2 + 64);
    sub_100010F08((_QWORD *)(a2 + 32), v22);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    AnyDimension.value(in:rounded:)(a1, v11, v22, v23);
    v24 = v8;
    v21 = v17;
    v17(v11, v24);
  }
  v25 = *(_QWORD *)(a2 + 288);
  v26 = *(_QWORD *)(a2 + 296);
  sub_100010F08((_QWORD *)(a2 + 264), v25);
  if ((dispatch thunk of LayoutView.isHidden.getter(v25, v26) & 1) == 0)
  {
    v27 = *(_QWORD *)(a2 + 288);
    v28 = *(_QWORD *)(a2 + 296);
    sub_100010F08((_QWORD *)(a2 + 264), v27);
    Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  }
  v29 = *(_QWORD *)(a2 + 248);
  v30 = *(_QWORD *)(a2 + 256);
  sub_100010F08((_QWORD *)(a2 + 224), v29);
  v31 = dispatch thunk of LayoutView.isHidden.getter(v29, v30);
  sub_1001BE1F8((_OWORD *)a2, v40);
  if ((v31 & 1) != 0)
  {
    sub_1001BE190(v40);
  }
  else
  {
    v32 = v42;
    v33 = v43;
    sub_100010F08(v41, v42);
    v34 = dispatch thunk of LayoutView.isHidden.getter(v32, v33);
    sub_1001BE190(v40);
    if ((v34 & 1) == 0)
    {
      v35 = (_QWORD *)(a2 + 104);
      v36 = *(_QWORD *)(a2 + 128);
      v37 = *(_QWORD *)(a2 + 136);
      sub_100010F08(v35, v36);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v36);
      AnyDimension.value(in:rounded:)(a1, v11, v36, v37);
      v21(v11, v39);
    }
  }
  return a3;
}

double sub_1001BDCB0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[34];
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 - *(double *)(a2 + 8) - *(double *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 216);
  v14 = *(_QWORD *)(a2 + 224);
  sub_100010F08((_QWORD *)(a2 + 192), v13);
  Measurable.measuredSize(fitting:in:)(a1, v13, *(_QWORD *)(v14 + 8), v12, a4);
  v15 = *(_QWORD *)(a2 + 176);
  v16 = *(_QWORD *)(a2 + 184);
  sub_100010F08((_QWORD *)(a2 + 152), v15);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v15);
  AnyDimension.value(in:rounded:)(a1, v11, v15, v16);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v18 = *(_QWORD *)(a2 + 256);
  v19 = *(_QWORD *)(a2 + 264);
  sub_100010F08((_QWORD *)(a2 + 232), v18);
  v20 = dispatch thunk of LayoutView.isHidden.getter(v18, v19);
  v40 = v8;
  if ((v20 & 1) != 0)
  {
    v21 = v17;
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 56);
    v23 = *(_QWORD *)(a2 + 64);
    sub_100010F08((_QWORD *)(a2 + 32), v22);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    AnyDimension.value(in:rounded:)(a1, v11, v22, v23);
    v24 = v8;
    v21 = v17;
    v17(v11, v24);
  }
  v25 = *(_QWORD *)(a2 + 296);
  v26 = *(_QWORD *)(a2 + 304);
  sub_100010F08((_QWORD *)(a2 + 272), v25);
  if ((dispatch thunk of LayoutView.isHidden.getter(v25, v26) & 1) == 0)
  {
    v27 = *(_QWORD *)(a2 + 296);
    v28 = *(_QWORD *)(a2 + 304);
    sub_100010F08((_QWORD *)(a2 + 272), v27);
    Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  }
  v29 = *(_QWORD *)(a2 + 256);
  v30 = *(_QWORD *)(a2 + 264);
  sub_100010F08((_QWORD *)(a2 + 232), v29);
  v31 = dispatch thunk of LayoutView.isHidden.getter(v29, v30);
  sub_1001BE118(a2, (uint64_t)v41);
  if ((v31 & 1) != 0)
  {
    sub_1001BE0B0(v41);
  }
  else
  {
    v32 = v43;
    v33 = v44;
    sub_100010F08(v42, v43);
    v34 = dispatch thunk of LayoutView.isHidden.getter(v32, v33);
    sub_1001BE0B0(v41);
    if ((v34 & 1) == 0)
    {
      v35 = (_QWORD *)(a2 + 112);
      v36 = *(_QWORD *)(a2 + 136);
      v37 = *(_QWORD *)(a2 + 144);
      sub_100010F08(v35, v36);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v36);
      AnyDimension.value(in:rounded:)(a1, v11, v36, v37);
      v21(v11, v40);
    }
  }
  return a3;
}

id sub_1001BDFA8(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  _BOOL8 v7;

  v3 = OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_headerView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_headerView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  if (*(_QWORD *)&v1[v3])
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_scrollView], "addSubview:");
    v7 = *(_QWORD *)&v1[v3] != 0;
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_offerButton], "setHidden:", v7);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension23ArcadeSubscribePageView_dismissButton], "setHidden:", v7);
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1001BE074(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1001BE0B0(_QWORD *a1)
{
  destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(a1);
  return a1;
}

_QWORD *sub_1001BE0E4(_QWORD *a1)
{
  destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(a1);
  return a1;
}

uint64_t sub_1001BE118(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(a2, a1);
  return a2;
}

_OWORD *sub_1001BE154(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1001BE190(_QWORD *a1)
{
  destroy for ArcadeSubscribePageLayout.OfferDetailsSublayout(a1);
  return a1;
}

_QWORD *sub_1001BE1C4(_QWORD *a1)
{
  destroy for ArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(a1);
  return a1;
}

_OWORD *sub_1001BE1F8(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ArcadeSubscribePageLayout.OfferDetailsSublayout(a2, a1);
  return a2;
}

uint64_t MetadataRibbonTagViewLayout.Metrics.standard.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_100804D40 != -1)
    swift_once(&qword_100804D40, sub_1001BEE20);
  v0 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  return sub_10000EFC4(v0, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
}

char *sub_1001BE27C(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  double left;
  double bottom;
  double right;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v41[5];
  objc_super v42;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v4[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_metrics];
  v16 = qword_100804D40;
  v17 = v5;
  if (v16 != -1)
    swift_once(&qword_100804D40, sub_1001BEE20);
  v18 = sub_10000EFC4(v11, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v15, v18, v11);
  v20 = &v17[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_id];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = &v17[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_itemType];
  v22 = type metadata accessor for MetadataRibbonItemType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = &v17[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_labelMaxWidth];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_tagLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);

  v42.receiver = v17;
  v42.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v42, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v28 = (char *)v24;
  objc_msgSend(v28, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v29 = OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_tagLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_tagLabel];
  sub_100035178();
  v31 = v30;
  v32 = (void *)static UIColor.secondaryText.getter(v31);
  objc_msgSend(v31, "setTextColor:", v32);

  v33 = *(void **)&v28[v29];
  v34 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v14, &v28[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_metrics], v11);
  v35 = MetadataRibbonTagViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v34);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static CustomTextStyle<>.metadataRibbon.getter(objc_msgSend(v33, "setNumberOfLines:", v35));
  if (qword_100804810 != -1)
    swift_once(&qword_100804810, sub_1000BFD38);
  v36 = type metadata accessor for MetadataRibbonTextStyle(0);
  v37 = sub_10000EFC4(v36, (uint64_t)qword_100864DC0);
  v41[3] = v36;
  v41[4] = sub_10014BE64();
  v38 = sub_1000119C0(v41);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v38, v37, v36);
  dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v41);
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v28[v29]);

  return v28;
}

uint64_t sub_1001BE6DC(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for LayoutRect(0);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetadataRibbonTagViewLayout(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v2;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "layoutSubviews");
  v15 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_tagLabel];
  v22[3] = type metadata accessor for DynamicTypeLabel(0);
  v22[4] = &protocol witness table for UILabel;
  v22[0] = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v2[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_metrics], v7);
  v16 = v15;
  MetadataRibbonTagViewLayout.init(descriptionLabelTextView:metrics:)(v22, v10);
  v17 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  MetadataRibbonTagViewLayout.placeChildren(relativeTo:in:)(v2, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1001BEAC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;

  v1 = v0;
  MetadataRibbonItem.labelText.getter();
  v3 = v2;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_tagLabel];
  if (v2)
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  objc_msgSend(v4, "setText:", v5);

  objc_msgSend(v1, "setNeedsLayout");
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1001BEB40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_itemType;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, &qword_100809018);
}

uint64_t sub_1001BEB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_itemType;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000393D8(a1, v3, &qword_100809018);
  return swift_endAccess(v5);
}

uint64_t (*sub_1001BEBF8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_itemType, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1001BEC3C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_labelMaxWidth;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_labelMaxWidth, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_1001BEC84(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_labelMaxWidth;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_1001BECE0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_labelMaxWidth, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1001BED24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_id;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, &qword_100809010);
}

uint64_t sub_1001BED7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_id;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000393D8(a1, v3, &qword_100809010);
  return swift_endAccess(v5);
}

uint64_t (*sub_1001BEDDC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21MetadataRibbonTagView_id, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1001BEE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  sub_100011980(v4, static MetadataRibbonTagViewLayout.Metrics.standard);
  sub_10000EFC4(v4, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  Conditional.init(_:)(sub_1000390F8, 0, v5, &type metadata for Double);
  MetadataRibbonTagViewLayout.Metrics.init(maximumNumberofLinesForDescriptionLabel:)(1);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static MetadataRibbonTagViewLayout.Metrics.standard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100804D40 != -1)
    swift_once(&qword_100804D40, sub_1001BEE20);
  v2 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v3 = sub_10000EFC4(v2, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1001BEF6C()
{
  return type metadata accessor for MetadataRibbonTagView(0);
}

uint64_t type metadata accessor for MetadataRibbonTagView(uint64_t a1)
{
  uint64_t result;

  result = qword_100814498;
  if (!qword_100814498)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetadataRibbonTagView);
  return result;
}

void sub_1001BEFB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "(";
    sub_100039384(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100650250;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

double sub_1001BF058(uint64_t a1, uint64_t a2, double a3, double a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  double v45;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[6];

  v56 = a2;
  v51 = a1;
  v57 = type metadata accessor for MetadataRibbonTagViewLayout(0);
  v55 = *(_QWORD *)(v57 - 8);
  v6 = __chkstk_darwin(v57);
  v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LabelPlaceholder(0, v6);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTextAppearance(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - v20;
  v22 = type metadata accessor for MetadataRibbonTagViewLayout.Metrics(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v50 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v47 - v26;
  if (qword_100804D40 != -1)
    swift_once(&qword_100804D40, sub_1001BEE20);
  v28 = sub_10000EFC4(v22, (uint64_t)static MetadataRibbonTagViewLayout.Metrics.standard);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v29 = v48(v27, v28, v22);
  v30 = DynamicTextAppearance.init()(v29);
  static CustomTextStyle<>.metadataRibbon.getter(v30);
  v49 = v23;
  if (qword_100804810 != -1)
    swift_once(&qword_100804810, sub_1000BFD38);
  v31 = type metadata accessor for MetadataRibbonTextStyle(0);
  v32 = sub_10000EFC4(v31, (uint64_t)qword_100864DC0);
  v59[3] = v31;
  v59[4] = sub_10014BE64();
  v33 = sub_1000119C0(v59);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v33, v32, v31);
  DynamicTextAppearance.withCustomTextStyle(_:)(v59);
  v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34(v15, v12);
  v35 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  v36 = MetadataRibbonTagViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v35);
  DynamicTextAppearance.withNumberOfLines(_:)(v36);
  v37 = ((uint64_t (*)(char *, uint64_t))v34)(v18, v12);
  v38 = MetadataRibbonItem.labelText.getter(v37);
  v40 = v39;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v21, v12);
  v41 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v38, v40, v18, v41);
  LabelPlaceholder.layoutTextView.getter(v59, v42);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  sub_10000EF80((uint64_t)v59, (uint64_t)v58);
  v43 = v50;
  v48(v50, (uint64_t)v27, v22);
  v44 = v54;
  MetadataRibbonTagViewLayout.init(descriptionLabelTextView:metrics:)(v58, v43);
  v45 = MetadataRibbonTagViewLayout.measurements(fitting:in:)(v56, a3, a4);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v57);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  v34(v21, v12);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v22);
  return v45;
}

uint64_t sub_1001BF424()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v6 = swift_allocObject(v5, 40, 7);
  v23 = xmmword_100640AE0;
  *(_OWORD *)(v6 + 16) = xmmword_100640AE0;
  v7 = swift_allocObject(&unk_100743918, 24, 7);
  *(_QWORD *)(v7 + 16) = v0;
  v8 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v8, 120, 7);
  v9 = v0;
  v10 = sub_1004A7A88(0xD000000000000016, 0x80000001006923C0, 0xD000000000000019, 0x80000001006923E0, 0, 0, (uint64_t)sub_1001BF7B4, v7);
  swift_release();
  *(_QWORD *)(v6 + 32) = v10;
  v24 = v6;
  specialized Array._endMutation()(v11);
  v12 = v24;
  v13 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v13 + 16) = v23;
  v14 = type metadata accessor for DebugSection();
  v15 = swift_allocObject(v14, 56, 7);
  v17 = UUID.init()(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = v20;
  strcpy((char *)(v15 + 32), "Product Page");
  *(_BYTE *)(v15 + 45) = 0;
  *(_WORD *)(v15 + 46) = -5120;
  *(_QWORD *)(v15 + 48) = v12;
  *(_QWORD *)(v13 + 32) = v15;
  v24 = v13;
  specialized Array._endMutation()(v21);
  return v24;
}

void sub_1001BF604(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  Class isa;
  _QWORD v11[2];
  _BYTE v12[104];

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = (void *)static AskToBuyRequestNotificationDetails.notificationName.getter();
  v4 = sub_10000DAF8((uint64_t *)&unk_100809530);
  inited = swift_initStackObject(v4, v12);
  *(_OWORD *)(inited + 16) = xmmword_100640720;
  v11[0] = static AskToBuyRequestNotificationDetails.adamIdKey.getter();
  v11[1] = v6;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  v7 = type metadata accessor for AdamId(0);
  *(_QWORD *)(inited + 96) = v7;
  v8 = sub_1000119C0((_QWORD *)(inited + 72));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v8, a1, v7);
  v9 = sub_10050A000(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v3, 0, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

}

id sub_1001BF740()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductPageSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductPageSettings()
{
  return objc_opt_self(_TtC20ProductPageExtension19ProductPageSettings);
}

uint64_t sub_1001BF790()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001BF7B4()
{
  sub_1001BF7D4();
}

void sub_1001BF7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  void (*v29)(char *, char *, uint64_t);
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  _QWORD aBlock[6];

  v1 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AdamId(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - v9;
  v11 = v0 + OBJC_IVAR____TtC20ProductPageExtension21DebugSettingsProvider_debugSettingsViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension21DebugSettingsProvider_debugSettingsViewController);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "presentingViewController");

    if (v14)
    {
      v15 = objc_opt_self(UITabBarController);
      v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
      if (!v16)
      {
LABEL_6:

        goto LABEL_7;
      }
      v17 = objc_msgSend(v16, "selectedViewController");

      if (v17)
      {
        v18 = objc_opt_self(UINavigationController);
        v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
        v14 = v17;
        if (v19)
          goto LABEL_10;
        goto LABEL_6;
      }
    }
  }
LABEL_7:
  v20 = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (!v20)
    return;
  v21 = v20;
  v38 = objc_msgSend(v20, "presentingViewController");

  if (!v38)
    return;
  v22 = objc_opt_self(UINavigationController);
  v19 = (void *)swift_dynamicCastObjCClass(v38, v22);
  if (!v19)
  {
LABEL_15:

    return;
  }
LABEL_10:
  v38 = v19;
  v23 = objc_msgSend(v19, "topViewController");
  if (!v23)
    goto LABEL_15;
  v24 = v23;
  v25 = type metadata accessor for ProductDiffablePageViewController(0);
  v26 = swift_dynamicCastClass(v24, v25);
  if (!v26)
  {

    goto LABEL_15;
  }
  v27 = swift_retain(*(_QWORD *)(v26 + qword_1008664F0));
  ProductDiffablePagePresenter.adamId.getter(v27);
  v28 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v28) == 1)
  {

    sub_1001BFB7C((uint64_t)v3);
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v29(v10, v3, v4);
    v30 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    if (v30
      && (v31 = v30,
          v32 = objc_msgSend(v30, "presentingViewController"),
          v31,
          v32))
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
      v33 = *(unsigned __int8 *)(v5 + 80);
      v34 = (v33 + 16) & ~v33;
      v35 = swift_allocObject(&unk_100743940, v34 + v6, v33 | 7);
      v29((char *)(v35 + v34), v7, v4);
      aBlock[4] = sub_1001BFC1C;
      aBlock[5] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000924A0;
      aBlock[3] = &unk_100743958;
      v36 = _Block_copy(aBlock);
      objc_msgSend(v32, "dismissViewControllerAnimated:completion:", 1, v36, swift_release().n128_f64[0]);
      _Block_release(v36);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

    }
  }
}

uint64_t sub_1001BFB7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_100808390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001BFBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001BFC1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  sub_1001BF604(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1001BFC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001BFC58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1001BFC60(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(char *, uint64_t);
  _QWORD *v14;
  double result;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(_QWORD *, char *, uint64_t);
  __int128 v21;
  __int128 v22;
  _OWORD v23[3];
  _OWORD v24[2];
  _OWORD v25[3];
  _QWORD v26[5];
  __int128 v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  void *v34;
  void *v35;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = &type metadata for Double;
  v35 = &protocol witness table for Double;
  *(_QWORD *)&v33 = 0x4044000000000000;
  if (qword_100806168 != -1)
    swift_once(&qword_100806168, sub_1004C6D9C);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_10000EFC4(v5, (uint64_t)qword_100869510);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v7(v4, v6, v5);
  v8 = enum case for FontSource.useCase(_:);
  v19 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v19(v4, enum case for FontSource.useCase(_:), v1);
  v18 = type metadata accessor for StaticDimension(0);
  v31 = v18;
  v32 = &protocol witness table for StaticDimension;
  sub_1000119C0(&v30);
  *((_QWORD *)&v22 + 1) = v1;
  *(_QWORD *)&v23[0] = &protocol witness table for FontSource;
  v9 = sub_1000119C0(&v21);
  v20 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v20(v9, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v21, 30.0);
  v17 = (void (*)(char *, uint64_t))v2[1];
  v17(v4, v1);
  v7(v4, v6, v5);
  v10 = v19;
  v19(v4, v8, v1);
  v11 = v18;
  v28 = v18;
  v29 = &protocol witness table for StaticDimension;
  sub_1000119C0(&v27);
  *((_QWORD *)&v22 + 1) = v1;
  *(_QWORD *)&v23[0] = &protocol witness table for FontSource;
  v12 = sub_1000119C0(&v21);
  v20(v12, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v21, 20.0);
  v13 = v17;
  v17(v4, v1);
  v7(v4, v6, v5);
  v10(v4, v8, v1);
  v26[3] = v11;
  v26[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v26);
  *((_QWORD *)&v22 + 1) = v1;
  *(_QWORD *)&v23[0] = &protocol witness table for FontSource;
  v14 = sub_1000119C0(&v21);
  v20(v14, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v21, 20.0);
  v13(v4, v1);
  *((_QWORD *)&v25[2] + 1) = 0;
  *(_OWORD *)((char *)v25 + 8) = 0u;
  *(_OWORD *)((char *)&v25[1] + 8) = 0u;
  sub_100010E24(&v33, (uint64_t)&v21);
  sub_100010E24(&v30, (uint64_t)v23 + 8);
  sub_100010E24(&v27, (uint64_t)v24);
  sub_1001C0B38((uint64_t)v26, (uint64_t)v25 + 8);
  xmmword_100814530 = v24[1];
  unk_100814540 = v25[0];
  xmmword_100814550 = v25[1];
  unk_100814560 = v25[2];
  xmmword_1008144F0 = v23[0];
  unk_100814500 = v23[1];
  xmmword_100814510 = v23[2];
  unk_100814520 = v24[0];
  result = *(double *)&v21;
  xmmword_1008144D0 = v21;
  unk_1008144E0 = v22;
  return result;
}

char *sub_1001BFF7C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  objc_class *v24;
  uint64_t v25;
  id v26;
  double left;
  double bottom;
  double right;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  __int128 v43;
  void *v44;
  _BYTE v47[24];
  objc_super v48;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DividerView.Style(0);
  __chkstk_darwin(v11);
  v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for FontUseCase(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v18 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_label;
  v19 = qword_100806168;
  v20 = v5;
  if (v19 != -1)
    swift_once(&qword_100806168, sub_1004C6D9C);
  v21 = sub_10000EFC4(v14, (uint64_t)qword_100869510);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
  v22 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedLabel(0));
  *(_QWORD *)&v5[v18] = sub_10043D680((uint64_t)v17, 0, 0, 1);
  v23 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_topDivider;
  v24 = (objc_class *)type metadata accessor for DividerView(0);
  *(_QWORD *)&v20[v23] = objc_msgSend(objc_allocWithZone(v24), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v25 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_bottomDivider;
  *(_QWORD *)&v20[v25] = objc_msgSend(objc_allocWithZone(v24), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v48.receiver = v20;
  v48.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v30 = (char *)v26;
  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v31 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_topDivider;
  v32 = qword_100805EE0;
  v33 = (char *)*(id *)&v30[OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_topDivider];
  if (v32 != -1)
    swift_once(&qword_100805EE0, sub_1004B2F10);
  v34 = sub_10000EFC4(v11, (uint64_t)qword_100868DD8);
  sub_1001C0D08(v34, (uint64_t)v13);
  v35 = &v33[OBJC_IVAR____TtC20ProductPageExtension11DividerView_style];
  swift_beginAccess(&v33[OBJC_IVAR____TtC20ProductPageExtension11DividerView_style], v47, 33, 0);
  sub_1001C0D4C((uint64_t)v13, (uint64_t)v35);
  swift_endAccess(v47);
  v36 = &v33[OBJC_IVAR____TtC20ProductPageExtension11DividerView_separatorInset];
  v37 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v35;
  *((_OWORD *)v36 + 1) = v37;
  objc_msgSend(v33, "setNeedsLayout");
  objc_msgSend(v33, "setNeedsLayout");
  sub_1001C0D90((uint64_t)v13);

  v38 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_bottomDivider;
  v39 = *(char **)&v30[OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_bottomDivider];
  sub_1001C0D08(v34, (uint64_t)v13);
  v40 = &v39[OBJC_IVAR____TtC20ProductPageExtension11DividerView_style];
  swift_beginAccess(&v39[OBJC_IVAR____TtC20ProductPageExtension11DividerView_style], v47, 33, 0);
  v41 = v39;
  sub_1001C0D4C((uint64_t)v13, (uint64_t)v40);
  swift_endAccess(v47);
  v42 = &v41[OBJC_IVAR____TtC20ProductPageExtension11DividerView_separatorInset];
  v43 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v40;
  *((_OWORD *)v42 + 1) = v43;
  objc_msgSend(v41, "setNeedsLayout");
  objc_msgSend(v41, "setNeedsLayout");
  sub_1001C0D90((uint64_t)v13);

  v44 = *(void **)&v30[OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_label];
  objc_msgSend(v44, "setTextAlignment:", 1);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[v31]);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[v38]);
  objc_msgSend(v30, "addSubview:", v44);

  return v30;
}

_QWORD *sub_1001C0390()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  CGFloat v14;
  CGFloat v15;
  double v16;
  double v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[35];
  objc_super v22;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v20 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v20).n128_u64[0];
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.receiver = v1;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "layoutSubviews", v4);
  if (qword_100804D48 != -1)
    swift_once(&qword_100804D48, sub_1001BFC60);
  sub_100037E90((uint64_t)&xmmword_1008144D0, (uint64_t)v21);
  v7 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_topDivider];
  v8 = type metadata accessor for DividerView(0);
  v21[23] = v8;
  v21[24] = &protocol witness table for UIView;
  v21[20] = v7;
  v9 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_label];
  v21[28] = type metadata accessor for DynamicTypeLinkedLabel(0);
  v21[29] = &protocol witness table for UILabel;
  v21[25] = v9;
  v10 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_bottomDivider];
  v21[33] = v8;
  v21[34] = &protocol witness table for UIView;
  v21[30] = v10;
  v11 = v7;
  v12 = v9;
  v13 = v10;
  v14 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  LinkableHeaderViewLayout.placeChildren(relativeTo:in:)((uint64_t)v1, v14, v15, v16, v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v20);
  return sub_100037ECC(v21);
}

double sub_1001C053C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  double v14;
  _QWORD v16[35];

  if (qword_100804D48 != -1)
    swift_once(&qword_100804D48, sub_1001BFC60);
  sub_100037E90((uint64_t)&xmmword_1008144D0, (uint64_t)v16);
  v7 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_topDivider);
  v8 = type metadata accessor for DividerView(0);
  v16[23] = v8;
  v16[24] = &protocol witness table for UIView;
  v16[20] = v7;
  v9 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_label);
  v16[28] = type metadata accessor for DynamicTypeLinkedLabel(0);
  v16[29] = &protocol witness table for UILabel;
  v16[25] = v9;
  v10 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_bottomDivider);
  v16[33] = v8;
  v16[34] = &protocol witness table for UIView;
  v16[30] = v10;
  swift_getObjectType();
  v11 = v7;
  v12 = v9;
  v13 = v10;
  v14 = sub_10061ABBC(a1, v16, a2, a3);
  sub_100037ECC(v16);
  return v14;
}

double sub_1001C0704(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DividerView(0);
  if (qword_100805EE0 != -1)
    swift_once(&qword_100805EE0, sub_1004B2F10);
  v4 = type metadata accessor for DividerView.Style(0);
  v5 = sub_10000EFC4(v4, (uint64_t)qword_100868DD8);
  swift_getObjectType();
  sub_1004B3A78(v5, a1);
  return a2;
}

uint64_t type metadata accessor for LinkableHeaderView()
{
  return objc_opt_self(_TtC20ProductPageExtension18LinkableHeaderView);
}

double sub_1001C0814(uint64_t a1, uint64_t a2, char a3, void *a4, __n128 a5, double a6, uint64_t a7, uint64_t a8)
{
  double v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  double v30;
  _QWORD v32[2];
  __int128 v33[2];
  __int128 v34;
  uint64_t v35;
  void *v36;
  _OWORD v37[10];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[11];
  _QWORD v50[15];
  _BYTE v51[32];
  uint64_t v52;

  v32[0] = a1;
  v32[1] = a8;
  v9 = a5.n128_f64[0];
  v13 = type metadata accessor for LabelPlaceholderCompatibility(0, a5);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804D48 != -1)
    swift_once(&qword_100804D48, sub_1001BFC60);
  sub_100037E90((uint64_t)&xmmword_1008144D0, (uint64_t)v50);
  if ((a3 & 1) == 0)
  {
    sub_1000CBFFC((uint64_t)v51);
    memset(v51, 0, sizeof(v51));
    v52 = 0;
  }
  sub_10005BD18();
  if (qword_100806168 != -1)
    swift_once(&qword_100806168, sub_1004C6D9C);
  v17 = type metadata accessor for FontUseCase(0);
  v18 = sub_10000EFC4(v17, (uint64_t)qword_100869510);
  v19 = objc_msgSend(a4, "traitCollection");
  v20 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v18, v19);

  sub_100037E90((uint64_t)v50, (uint64_t)v37);
  v21 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = LayoutViewPlaceholder.init(measureWith:)(sub_1001C0704, 0, v22);
  v35 = v21;
  v36 = &protocol witness table for LayoutViewPlaceholder;
  *(_QWORD *)&v34 = v23;
  v24 = type metadata accessor for Feature(0);
  *((_QWORD *)&v39 + 1) = v24;
  *(_QWORD *)&v40 = sub_1000695B8();
  v25 = sub_1000119C0(&v38);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v25, enum case for Feature.measurement_with_labelplaceholder(_:), v24);
  v26 = v20;
  LOBYTE(v24) = isFeatureEnabled(_:)(&v38);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v38);
  swift_bridgeObjectRetain(a2);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v32[0], a2, v26, 4, 0, 0, 0, 0, v24 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v33, v27);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v29 = LayoutViewPlaceholder.init(measureWith:)(sub_1001C0704, 0, v28);
  v49[9] = &protocol witness table for LayoutViewPlaceholder;
  v49[8] = v21;
  v49[5] = v29;
  v44 = v37[6];
  v45 = v37[7];
  v46 = v37[8];
  v47 = v37[9];
  v40 = v37[2];
  v41 = v37[3];
  v42 = v37[4];
  v43 = v37[5];
  v38 = v37[0];
  v39 = v37[1];
  sub_100010E24(&v34, (uint64_t)&v48);
  sub_100010E24(v33, (uint64_t)v49);
  v30 = sub_10061ABBC((uint64_t)a4, &v38, v9, a6);

  sub_100037ECC(&v38);
  sub_100037F00(v50);
  return v30;
}

uint64_t sub_1001C0B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814FB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1001C0B80()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_label;
  if (qword_100806168 != -1)
    swift_once(&qword_100806168, sub_1004C6D9C);
  v7 = sub_10000EFC4(v2, (uint64_t)qword_100869510);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedLabel(0));
  *(_QWORD *)&v1[v6] = sub_10043D680((uint64_t)v5, 0, 0, 1);
  v9 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_topDivider;
  v10 = (objc_class *)type metadata accessor for DividerView(0);
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone(v10), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_bottomDivider;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone(v10), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/LinkableHeaderView.swift", 45, 2, 57, 0);
  __break(1u);
}

uint64_t sub_1001C0D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DividerView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C0D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DividerView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C0D90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DividerView.Style(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for TodayCardLabelsLayout(uint64_t a1)
{

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 64));
  if (*(_QWORD *)(a1 + 128))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 104));

}

uint64_t initializeWithCopy for TodayCardLabelsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  id v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  id v20;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  v7 = a1 + 64;
  v8 = a2 + 64;
  v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v5;
  v13 = v6;
  v11(v7, v8, v10);
  v14 = (_OWORD *)(a1 + 104);
  v15 = (_OWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 128);
  if (v16)
  {
    v17 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = v16;
    *(_QWORD *)(a1 + 136) = v17;
    (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v14, v15);
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 120);
    *v14 = *v15;
    *(_OWORD *)(a1 + 120) = v18;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  }
  v19 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v19;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v20 = v19;
  return a1;
}

uint64_t assignWithCopy for TodayCardLabelsLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  void *v15;
  id v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = v5;

  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v10 = v8;

  sub_10002D2D4((_QWORD *)(a1 + 64), (_QWORD *)(a2 + 64));
  v11 = *(_QWORD *)(a2 + 128);
  if (!*(_QWORD *)(a1 + 128))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 128) = v11;
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 104, a2 + 104);
      goto LABEL_8;
    }
LABEL_7:
    v12 = *(_OWORD *)(a2 + 104);
    v13 = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v12;
    *(_OWORD *)(a1 + 120) = v13;
    goto LABEL_8;
  }
  if (!v11)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 104));
    goto LABEL_7;
  }
  sub_10002D2D4((_QWORD *)(a1 + 104), (_QWORD *)(a2 + 104));
LABEL_8:
  v14 = *(void **)(a2 + 144);
  v15 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v14;
  v16 = v14;

  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

__n128 initializeWithTake for TodayCardLabelsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for TodayCardLabelsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 64));
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 128))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 104));
  v8 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v8;
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v10 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v9;

  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayCardLabelsLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayCardLabelsLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayCardLabelsLayout()
{
  return &type metadata for TodayCardLabelsLayout;
}

__n128 initializeWithCopy for TodayCardLabelsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TodayCardLabelsLayout.Metrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TodayCardLabelsLayout.Metrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TodayCardLabelsLayout.Metrics()
{
  return &type metadata for TodayCardLabelsLayout.Metrics;
}

void *sub_1001C1224@<X0>(void *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  _BYTE *v29;
  unsigned int v30;
  unsigned __int8 v31;
  unsigned int v32;
  unsigned __int8 v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(double *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  __n128 v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _BYTE *v50;
  void (*v51)(_BYTE *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _QWORD *v59;
  void *result;
  __n128 v61;
  uint64_t v62;
  void (*v63)(double *);
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  double (**v75)(double);
  void *v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _QWORD *v81;
  _OWORD *v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t (*v88)(uint64_t);
  _OWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  double v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  void *v102;
  double v103;
  double v104;
  double v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _OWORD *v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _QWORD *v123;
  _BYTE v124[4];
  unsigned int v125;
  void *v126;
  _BYTE *v127;
  _BYTE *v128;
  double (**v129)(double);
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  unsigned int v136;
  _BYTE *v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD v141[5];
  _QWORD v142[5];
  _QWORD v143[5];
  _QWORD v144[5];
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  _OWORD v153[2];
  _QWORD v154[3];
  uint64_t v155;
  _QWORD *v156;
  id v157[20];
  _QWORD v158[20];
  _QWORD v159[20];
  id v160[21];

  v5 = v4;
  v126 = a1;
  v131 = a2;
  v132 = type metadata accessor for VerticalStack(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v134 = &v124[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v127 = &v124[-v10];
  __chkstk_darwin(v11);
  v128 = &v124[-v12];
  v13 = type metadata accessor for Resize.Rule(0);
  v140 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v129 = (double (**)(double))&v124[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v138 = &v124[-v16];
  __chkstk_darwin(v17);
  v137 = &v124[-v18];
  __chkstk_darwin(v19);
  v21 = (double *)&v124[-v20];
  __chkstk_darwin(v22);
  v24 = (double *)&v124[-v23];
  v139 = type metadata accessor for Resize(0);
  v135 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v133 = &v124[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v27 = __chkstk_darwin(v26).n128_u64[0];
  v29 = &v124[-v28];
  v30 = objc_msgSend(*(id *)(*(_QWORD *)(v4 + 144)+ OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_label), "hasContent", v27);
  sub_1001C20D0(v5, (uint64_t)v160);
  if (v30)
  {
    v31 = objc_msgSend(v160[18], "isHidden");
    sub_1001B0738((uint64_t)v160);
    sub_1001C20D0(v5, (uint64_t)v159);
    if ((v31 & 1) == 0)
    {
      v136 = objc_msgSend(*(id *)(v159[18] + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_label), "isHidden");
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001B0738((uint64_t)v160);
    sub_1001C20D0(v5, (uint64_t)v159);
  }
  v136 = 1;
LABEL_6:
  sub_1001B0738((uint64_t)v159);
  v32 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 48)+ OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_label), "hasContent");
  sub_1001C20D0(v5, (uint64_t)v158);
  if (v32)
  {
    v33 = objc_msgSend(*(id *)(v158[6] + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_label), "isHidden");
    sub_1001B0738((uint64_t)v158);
    sub_1001C20D0(v5, (uint64_t)v157);
    v34 = v140;
    if ((v33 & 1) != 0)
      v35 = 1;
    else
      v35 = objc_msgSend(v157[6], "isHidden");
  }
  else
  {
    sub_1001B0738((uint64_t)v158);
    sub_1001C20D0(v5, (uint64_t)v157);
    v35 = 1;
    v34 = v140;
  }
  sub_1001B0738((uint64_t)v157);
  sub_1000A39F4(v5 + 104, (uint64_t)&v145);
  if (*((_QWORD *)&v146 + 1))
  {
    sub_100010E24(&v145, (uint64_t)v154);
    v36 = v155;
    v37 = v156;
    sub_100010F08(v154, v155);
    Measurable.placeable.getter(&v145, v36, v37[1]);
    v38 = *(_QWORD *)(v5 + 8);
    *((_QWORD *)v24 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v24 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v24 = v38;
    v39 = enum case for Resize.Rule.replaced(_:);
    v40 = *(void (**)(double *, uint64_t, uint64_t))(v34 + 104);
    v40(v24, enum case for Resize.Rule.replaced(_:), v13);
    v41 = *(_QWORD *)(v5 + 16);
    *((_QWORD *)v21 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v21 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v21 = v41;
    v40(v21, v39, v13);
    v42 = enum case for Resize.Rule.unchanged(_:);
    v43 = v137;
    v40((double *)v137, enum case for Resize.Rule.unchanged(_:), v13);
    v44 = v138;
    v40((double *)v138, v42, v13);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(&v145, v24, v21, v43, v44);
    v45 = v127;
    VerticalStack.init(with:)(0, 0, v46);
    v47 = v139;
    *((_QWORD *)&v146 + 1) = v139;
    *(_QWORD *)&v147 = &protocol witness table for Resize;
    v48 = sub_1000119C0(&v145);
    v49 = v135;
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v135 + 16))(v48, v29, v47);
    v50 = v128;
    VerticalStack.adding(_:with:)(&v145, 0, 0);
    v51 = *(void (**)(_BYTE *, uint64_t))(v130 + 8);
    v52 = v132;
    v51(v45, v132);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v145);
    *(_QWORD *)&v145 = *(_QWORD *)(v5 + 144);
    v53 = type metadata accessor for TodayTransitioningLabelView();
    Measurable.placeable.getter(v144, v53, &protocol witness table for UIView);
    sub_1001C20D0(v5, (uint64_t)&v145);
    v54 = swift_allocObject(&unk_100743B90, 170, 7);
    v55 = v152;
    *(_OWORD *)(v54 + 112) = v151;
    *(_OWORD *)(v54 + 128) = v55;
    *(_OWORD *)(v54 + 144) = v153[0];
    *(_OWORD *)(v54 + 153) = *(_OWORD *)((char *)v153 + 9);
    v56 = v148;
    *(_OWORD *)(v54 + 48) = v147;
    *(_OWORD *)(v54 + 64) = v56;
    v57 = v150;
    *(_OWORD *)(v54 + 80) = v149;
    *(_OWORD *)(v54 + 96) = v57;
    v58 = v146;
    *(_OWORD *)(v54 + 16) = v145;
    *(_OWORD *)(v54 + 32) = v58;
    *(_BYTE *)(v54 + 169) = v136;
    v59 = v131;
    v131[3] = v52;
    v59[4] = &protocol witness table for VerticalStack;
    sub_1000119C0(v59);
    VerticalStack.adding(_:with:)(v144, sub_1001C21F0, v54);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v144);
    v51(v50, v52);
    (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v29, v47);
    return (void *)_s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v154);
  }
  sub_1000D6304((uint64_t)&v145);
  VerticalStack.init(with:)(0, 0, v61);
  *(_QWORD *)&v145 = *(_QWORD *)(v5 + 48);
  v62 = type metadata accessor for TodayTransitioningLabelView();
  v125 = v35;
  v128 = (_BYTE *)v62;
  Measurable.placeable.getter(v154, v62, &protocol witness table for UIView);
  *((_QWORD *)v24 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v24 + 4) = &protocol witness table for CGFloat;
  *v24 = a3;
  v63 = *(void (**)(double *))(v34 + 104);
  LODWORD(v127) = enum case for Resize.Rule.replaced(_:);
  v64 = v13;
  v63(v24);
  v65 = enum case for Resize.Rule.unchanged(_:);
  ((void (*)(double *, _QWORD, uint64_t))v63)(v21, enum case for Resize.Rule.unchanged(_:), v13);
  v66 = v137;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v63)(v137, v65, v64);
  v67 = v138;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v63)(v138, v65, v64);
  *((_QWORD *)&v146 + 1) = v139;
  *(_QWORD *)&v147 = &protocol witness table for Resize;
  sub_1000119C0(&v145);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v154, v24, v21, v66, v67);
  v68 = swift_allocObject(&unk_100743AC8, 17, 7);
  *(_BYTE *)(v68 + 16) = v125;
  v69 = v64;
  VerticalStack.add(_:with:)(&v145, sub_1001C2114, v68);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v145);
  sub_1001C20D0(v5, (uint64_t)&v145);
  v70 = (_OWORD *)swift_allocObject(&unk_100743AF0, 169, 7);
  v71 = v152;
  v70[7] = v151;
  v70[8] = v71;
  v70[9] = v153[0];
  *(_OWORD *)((char *)v70 + 153) = *(_OWORD *)((char *)v153 + 9);
  v72 = v148;
  v70[3] = v147;
  v70[4] = v72;
  v73 = v150;
  v70[5] = v149;
  v70[6] = v73;
  v74 = v146;
  v70[1] = v145;
  v70[2] = v74;
  v75 = v129;
  *v129 = sub_1001C2144;
  v75[1] = (double (*)(double))v70;
  ((void (*)(double (**)(double), _QWORD, uint64_t))v63)(v75, enum case for Resize.Rule.recalculated(_:), v64);
  v76 = *(void **)(v5 + 56);
  if (v136 & 1 | ((*(_BYTE *)(v5 + 152) & 1) == 0))
  {
    v154[0] = *(_QWORD *)(v5 + 56);
    Measurable.placeable.getter(&v145, v128, &protocol witness table for UIView);
    *((_QWORD *)v24 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v24 + 4) = &protocol witness table for CGFloat;
    *v24 = a3;
    ((void (*)(double *, _QWORD, uint64_t))v63)(v24, v127, v64);
    ((void (*)(double *, uint64_t, uint64_t))v63)(v21, v65, v64);
  }
  else
  {
    v154[0] = *(_QWORD *)(v5 + 56);
    Measurable.placeable.getter(&v145, v128, &protocol witness table for UIView);
    *((_QWORD *)v24 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v24 + 4) = &protocol witness table for CGFloat;
    *v24 = a3;
    ((void (*)(double *, _QWORD, uint64_t))v63)(v24, v127, v64);
    (*(void (**)(double *, double (**)(double), uint64_t))(v140 + 16))(v21, v75, v64);
  }
  v77 = v137;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v63)(v137, v65, v69);
  v78 = v138;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v63)(v138, v65, v69);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(&v145, v24, v21, v77, v78);
  v79 = v134;
  v80 = v139;
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
  {
    v155 = v139;
    v156 = &protocol witness table for Resize;
    v81 = sub_1000119C0(v154);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v135 + 16))(v81, v133, v80);
    sub_1001C20D0(v5, (uint64_t)&v145);
    v82 = (_OWORD *)swift_allocObject(&unk_100743B18, 169, 7);
    v83 = v152;
    v82[7] = v151;
    v82[8] = v83;
    v82[9] = v153[0];
    v84 = v80;
    *(_OWORD *)((char *)v82 + 153) = *(_OWORD *)((char *)v153 + 9);
    v85 = v148;
    v82[3] = v147;
    v82[4] = v85;
    v86 = v150;
    v82[5] = v149;
    v82[6] = v86;
    v87 = v146;
    v82[1] = v145;
    v82[2] = v87;
    v88 = sub_1001C2250;
    v89 = v82;
LABEL_23:
    VerticalStack.add(_:with:)(v154, v88, v89);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v154);
    v117 = v131;
    v116 = v132;
    *(_QWORD *)&v145 = *(_QWORD *)(v5 + 144);
    Measurable.placeable.getter(v154, v128, &protocol witness table for UIView);
    sub_1001C20D0(v5, (uint64_t)&v145);
    v118 = swift_allocObject(&unk_100743B40, 170, 7);
    v119 = v152;
    *(_OWORD *)(v118 + 112) = v151;
    *(_OWORD *)(v118 + 128) = v119;
    *(_OWORD *)(v118 + 144) = v153[0];
    *(_OWORD *)(v118 + 153) = *(_OWORD *)((char *)v153 + 9);
    v120 = v148;
    *(_OWORD *)(v118 + 48) = v147;
    *(_OWORD *)(v118 + 64) = v120;
    v121 = v150;
    *(_OWORD *)(v118 + 80) = v149;
    *(_OWORD *)(v118 + 96) = v121;
    v122 = v146;
    *(_OWORD *)(v118 + 16) = v145;
    *(_OWORD *)(v118 + 32) = v122;
    *(_BYTE *)(v118 + 169) = v136;
    VerticalStack.add(_:with:)(v154, sub_1001C2164, v118);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v154);
    v117[3] = v116;
    v117[4] = &protocol witness table for VerticalStack;
    v123 = sub_1000119C0(v117);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v130 + 32))(v123, v79, v116);
    (*(void (**)(_BYTE *, uint64_t))(v135 + 8))(v133, v84);
    return (void *)(*(uint64_t (**)(double (**)(double), uint64_t))(v140 + 8))(v129, v69);
  }
  v90 = *(_QWORD *)(v5 + 32);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v91 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v92 = swift_allocObject(v91, 40, 7);
  *(_OWORD *)(v92 + 16) = xmmword_100640AE0;
  v93 = v126;
  *(_QWORD *)(v92 + 32) = v126;
  v94 = v76;
  v95 = v93;
  v96 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v92);
  objc_msgSend(v94, "measurementsWithFitting:in:", v96, a3, a4);
  v98 = v97;

  v99 = *(_QWORD *)(v5 + 88);
  v100 = *(_QWORD *)(v5 + 96);
  sub_100010F08((_QWORD *)(v5 + 64), v99);
  result = (void *)dispatch thunk of LayoutTextView.font.getter(v99, v100);
  v101 = v133;
  if (result)
  {
    v102 = result;
    objc_msgSend(result, "lineHeight");
    v104 = v103;

    if (v104 * (double)v90 - v98 < 0.0)
      v105 = 0.0;
    else
      v105 = v104 * (double)v90 - v98;
    *((_QWORD *)&v146 + 1) = v80;
    *(_QWORD *)&v147 = &protocol witness table for Resize;
    v106 = sub_1000119C0(&v145);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v135 + 16))(v106, v101, v80);
    v144[3] = &type metadata for CGFloat;
    v144[4] = &protocol witness table for CGFloat;
    *(double *)v144 = v105;
    v107 = type metadata accessor for ZeroDimension(0);
    v143[3] = v107;
    v143[4] = &protocol witness table for ZeroDimension;
    v108 = sub_1000119C0(v143);
    static ZeroDimension.zero.getter(v108);
    v142[3] = v107;
    v142[4] = &protocol witness table for ZeroDimension;
    v109 = sub_1000119C0(v142);
    static ZeroDimension.zero.getter(v109);
    v141[3] = v107;
    v141[4] = &protocol witness table for ZeroDimension;
    v110 = sub_1000119C0(v141);
    static ZeroDimension.zero.getter(v110);
    v155 = type metadata accessor for Margins(0);
    v156 = &protocol witness table for Margins;
    sub_1000119C0(v154);
    Margins.init(_:top:leading:bottom:trailing:)(&v145, v143, v142, v144, v141);
    sub_1001C20D0(v5, (uint64_t)&v145);
    v111 = (_OWORD *)swift_allocObject(&unk_100743B68, 169, 7);
    v112 = v152;
    v111[7] = v151;
    v111[8] = v112;
    v111[9] = v153[0];
    v84 = v80;
    *(_OWORD *)((char *)v111 + 153) = *(_OWORD *)((char *)v153 + 9);
    v113 = v148;
    v111[3] = v147;
    v111[4] = v113;
    v114 = v150;
    v111[5] = v149;
    v111[6] = v114;
    v115 = v146;
    v111[1] = v145;
    v111[2] = v115;
    v88 = sub_1001C2178;
    v89 = v111;
    v79 = v134;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C1E60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[20];

  v3 = *a2;
  v8[3] = &type metadata for CGFloat;
  v8[4] = &protocol witness table for CGFloat;
  v8[0] = v3;
  VerticalStack.Properties.topSpacing.setter(v8);
  v5 = a2[11];
  v4 = a2[12];
  sub_100010F08(a2 + 8, v5);
  LOBYTE(v4) = dispatch thunk of LayoutView.hasContent.getter(v5, *(_QWORD *)(v4 + 8));
  sub_1001C20D0((uint64_t)a2, (uint64_t)v8);
  if ((v4 & 1) != 0)
    v6 = (uint64_t)objc_msgSend((id)v8[7], "isHidden");
  else
    v6 = 1;
  sub_1001B0738((uint64_t)v8);
  return VerticalStack.Properties.shouldSkip.setter(v6);
}

uint64_t sub_1001C1F1C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  _QWORD v6[5];

  v4 = 0;
  if ((*(_BYTE *)(a2 + 152) & 1) == 0)
    v4 = *(_QWORD *)(a2 + 24);
  v6[3] = &type metadata for CGFloat;
  v6[4] = &protocol witness table for CGFloat;
  v6[0] = v4;
  VerticalStack.Properties.topSpacing.setter(v6);
  return VerticalStack.Properties.shouldSkip.setter(a3 & 1);
}

double sub_1001C1F7C(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1001C1224(a1, v10, a2, a3);
  v6 = v11;
  v7 = v12;
  sub_100010F08(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v10);
  return v8;
}

uint64_t sub_1001C201C(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  sub_1001C1224(a1, v13, a4, a5);
  v10 = v14;
  v11 = v15;
  sub_100010F08(v13, v14);
  dispatch thunk of Placeable.place(at:with:)(a1, v10, v11, a2, a3, a4, a5);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v13);
}

__n128 sub_1001C20B4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)v1;
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  return result;
}

uint64_t sub_1001C20D0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TodayCardLabelsLayout(a2, a1);
  return a2;
}

uint64_t sub_1001C2104()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001C2114()
{
  uint64_t v0;

  return VerticalStack.Properties.shouldSkip.setter(*(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1001C213C()
{
  return sub_1001C2198(169);
}

double sub_1001C2144(double a1)
{
  uint64_t v1;

  return *(double *)(v1 + 40) + *(double *)(v1 + 40) + a1;
}

uint64_t sub_1001C2154()
{
  return sub_1001C2198(169);
}

uint64_t sub_1001C215C()
{
  return sub_1001C2198(170);
}

uint64_t sub_1001C2164(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C1F1C(a1, v1 + 16, *(_BYTE *)(v1 + 169));
}

uint64_t sub_1001C2170()
{
  return sub_1001C2198(169);
}

uint64_t sub_1001C2178(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C1E60(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_1001C2190()
{
  return sub_1001C2198(170);
}

uint64_t sub_1001C2198(uint64_t a1)
{
  uint64_t v1;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v1 + 80));
  if (*(_QWORD *)(v1 + 144))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v1 + 120));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001C21F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  v1 = *(unsigned __int8 *)(v0 + 169);
  v2 = *(_QWORD *)(v0 + 40);
  v4[3] = &type metadata for CGFloat;
  v4[4] = &protocol witness table for CGFloat;
  v4[0] = v2;
  VerticalStack.Properties.topSpacing.setter(v4);
  return VerticalStack.Properties.shouldSkip.setter(v1);
}

char *sub_1001C2254(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  id v31;
  Class v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  CATransform3D v38;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_style];
  v12 = type metadata accessor for Artwork.Style(0, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_image] = 0;
  v13 = objc_allocWithZone((Class)CALayer);
  v14 = v4;
  v15 = objc_msgSend(v13, "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_backgroundImageLayer] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_gradientLayer] = v16;

  v39.receiver = v14;
  v39.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v17, "setClipsToBounds:", 1);
  v18 = OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_backgroundImageLayer;
  v19 = *(void **)&v17[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_backgroundImageLayer];
  objc_msgSend(v19, "setMasksToBounds:", 1);
  v20 = v19;
  CATransform3DMakeRotation(&v38, -0.523598776, 0.0, 0.0, 1.0);
  objc_msgSend(v20, "setTransform:", &v38);

  v21 = OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_gradientLayer;
  v22 = *(void **)&v17[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_gradientLayer];
  v23 = sub_10000DAF8(&qword_1008091A0);
  v24 = swift_allocObject(v23, 96, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100640600;
  sub_100035178();
  v25 = v22;
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.0).super.isa;
  v27 = -[objc_class CGColor](isa, "CGColor");

  type metadata accessor for CGColor(0);
  v29 = v28;
  *(_QWORD *)(v24 + 56) = v28;
  *(_QWORD *)(v24 + 32) = v27;
  v30 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.47451, 0.47451, 0.47451, 0.5).super.isa;
  v31 = -[objc_class CGColor](v30, "CGColor");

  *(_QWORD *)(v24 + 88) = v29;
  *(_QWORD *)(v24 + 64) = v31;
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "setColors:", v32, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v33 = *(void **)&v17[v21];
  objc_msgSend(v33, "setStartPoint:", 0.5, 0.0);
  objc_msgSend(v33, "setEndPoint:", 0.5, 1.0);
  v34 = objc_msgSend(v17, "layer");
  objc_msgSend(v34, "addSublayer:", v33);

  v35 = objc_msgSend(v17, "layer");
  v36 = *(id *)&v17[v18];
  objc_msgSend(v35, "addSublayer:", v36);

  return v17;
}

id sub_1001C2684()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_backgroundImageLayer];
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_image];
  if (v2 && (v3 = objc_msgSend(v2, "CGImage")) != 0)
  {
    v7 = v3;
    type metadata accessor for CGImage(0);
    v5 = _bridgeAnythingToObjectiveC<A>(_:)(&v7, v4);

  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, "setContents:", v5);
  return objc_msgSend(v0, "setNeedsLayout", swift_unknownObjectRelease().n128_f64[0]);
}

id sub_1001C2738(uint64_t a1, uint64_t a2)
{
  char *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  void *v11;
  CGFloat v12;
  CGFloat Width;
  void *v14;
  double MidX;
  objc_super v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v17.receiver = v2;
  v17.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v17, "layoutSubviews");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_gradientLayer], "setFrame:");
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_image])
    return objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_backgroundImageLayer], "setFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v11, "begin");
  objc_msgSend(v11, "setDisableActions:", 1);
  v18.origin.x = v4;
  v18.origin.y = v6;
  v18.size.width = v8;
  v18.size.height = v10;
  v12 = CGRectGetWidth(v18) * 1.6;
  v19.origin.x = v4;
  v19.origin.y = v6;
  v19.size.width = v8;
  v19.size.height = v10;
  Width = CGRectGetWidth(v19);
  v14 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension42BrandedAppTodayCardLargeIconBackgroundView_backgroundImageLayer];
  objc_msgSend(v14, "setBounds:", 0.0, 0.0, v12, Width * 1.6);
  v20.origin.x = v4;
  v20.origin.y = v6;
  v20.size.width = v8;
  v20.size.height = v10;
  MidX = CGRectGetMidX(v20);
  v21.origin.x = v4;
  v21.origin.y = v6;
  v21.size.width = v8;
  v21.size.height = v10;
  objc_msgSend(v14, "setPosition:", MidX, CGRectGetMidY(v21));
  return objc_msgSend(v11, "commit");
}

uint64_t sub_1001C296C()
{
  return type metadata accessor for BrandedAppTodayCardLargeIconBackgroundView(0);
}

uint64_t type metadata accessor for BrandedAppTodayCardLargeIconBackgroundView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008145E8;
  if (!qword_1008145E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrandedAppTodayCardLargeIconBackgroundView);
  return result;
}

void sub_1001C29B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000E90A4(319, a2);
  if (v4 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(v3 - 8) + 64;
    v5[3] = "\b";
    swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
  }
}

double sub_1001C2A34(void *a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  double v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;

  v3 = v2;
  v6 = type metadata accessor for Uber.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Uber.style.getter(v8);
  v11 = *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_reflectionOutset];
  v12 = objc_msgSend(v2, "traitCollection");
  sub_1001C4BEC((uint64_t)v10, a1, v12, v11);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v13 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView];
  v14 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel], "text");
  if (v14)
  {
    v15 = v14;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v19 = static String.isNilOrEmpty(_:)(v16, v18);
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v18).n128_u64[0];
  if ((v19 & 1) == 0 || *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryView])
  {
    objc_msgSend(v3, "frame", v20);
    objc_msgSend(v13, "sizeThatFits:", v21, v22);
  }
  return a2;
}

id sub_1001C2BD0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Height;
  double v20;
  id result;
  void *v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  CGRect v30;

  v3 = type metadata accessor for Uber.Style(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = objc_msgSend(a1, "tabBarController", v5);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "tabBar");

      objc_msgSend(v10, "frame");
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      v30.origin.x = v12;
      v30.origin.y = v14;
      v30.size.width = v16;
      v30.size.height = v18;
      Height = CGRectGetHeight(v30);
    }
    else
    {
      Height = 0.0;
    }
    result = objc_msgSend(a1, "view");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v22 = result;
    objc_msgSend(result, "bounds");
    v24 = v23;
    v20 = v25;

    a1 = v24;
  }
  else
  {
    v20 = 0.0;
    Height = 0.0;
  }
  if (v20 - *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_reflectionOutset] - Height < 0.0)
    v26 = 0.0;
  else
    v26 = v20 - *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_reflectionOutset] - Height;
  v27 = objc_msgSend(v1, "traitCollection");
  Uber.style.getter(v28);
  sub_1001C4948(v27, (uint64_t)v7, (uint64_t)a1, *(uint64_t *)&v26, 0);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_1001C2DAC()
{
  qword_100865B10 = 0x4008000000000000;
}

void sub_1001C2DBC()
{
  qword_100865B18 = 0x4049000000000000;
}

uint64_t sub_1001C2DCC()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_10000DAF8(&qword_100814698);
  sub_100011980(v0, qword_100865B20);
  sub_10000EFC4(v0, (uint64_t)qword_100865B20);
  v3 = 0x405E800000000000;
  v2 = 0x4059000000000000;
  return Conditional<>.init(roundedCornersValue:nonRoundedCornersValue:)(&v3, &v2, &type metadata for CGFloat);
}

char *sub_1001C2E44(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  id v13;
  char *v14;
  void *v15;
  char *v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  UIColor v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t (**v42)();
  char *v43;
  void *v44;
  uint64_t (*v45)();
  __n128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  void *v51;
  char *v52;
  id v53;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  objc_super v58;

  ObjectType = (objc_class *)swift_getObjectType();
  v56 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v56);
  v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_isRubberbanding] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_reflectionOutset] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentBottomInset] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_navigationItem] = 0;
  v8 = &v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_sizeChangeObserver];
  *v8 = 0;
  v8[1] = 0;
  v9 = qword_100804D50;
  v10 = v2;
  if (v9 != -1)
    swift_once(&qword_100804D50, sub_1001C2DAC);
  v11 = *(double *)&qword_100865B10;
  if (qword_100804D58 != -1)
    swift_once(&qword_100804D58, sub_1001C2DBC);
  v12 = *(double *)&qword_100865B18;
  v13 = objc_allocWithZone((Class)type metadata accessor for MediaView());
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView] = sub_1003A37C4(0.0, 0.0, 0.0, 0.0, v11, v12);
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_legibilityGradientView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TitleHeaderView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_uber] = a1;
  swift_retain(a1);

  v58.receiver = v10;
  v58.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v58, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setEdgesInsettingLayoutMarginsFromSafeArea:", 0);
  v15 = *(void **)&v14[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView];
  objc_msgSend(v14, "addSubview:", v15);
  v16 = v15;
  v17 = sub_10033CE58(a2);
  v18 = *(char **)&v16[OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer];
  v19 = *(void **)&v18[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents];
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents] = v17;
  v20 = v17;
  v21 = v18;
  sub_1003A43BC(v19);

  sub_1003A3904();
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v14;
  v24 = objc_msgSend(v22, "clearColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  v25 = OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_legibilityGradientView;
  v26 = *(void **)&v23[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_legibilityGradientView];
  v27 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1006423E0;
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v29 = v26;
  *(UIColor *)(v28 + 32) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.4);
  v30.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.0).super.isa;
  *(UIColor *)(v28 + 40) = v30;
  v57 = v28;
  specialized Array._endMutation()(v30.super.isa);
  v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors];
  *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors] = v57;
  swift_bridgeObjectRelease(v31);
  sub_10017F014();

  v32 = *(id *)&v23[v25];
  v33 = objc_msgSend(v32, "layer");
  v55[1] = a2;
  v34 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v33, v34, 0, 0, 0), "setStartPoint:", 0.5, 0.0);

  v35 = *(id *)&v23[v25];
  v36 = objc_msgSend(v35, "layer");
  v37 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v36, v37, 0, 0, 0), "setEndPoint:", 0.5, 1.0);

  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[v25]);
  v38 = OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView;
  v39 = *(_QWORD **)&v23[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView];
  if (qword_100805DF8 != -1)
    swift_once(&qword_100805DF8, sub_100488710);
  v40 = sub_10000EFC4(v56, (uint64_t)qword_100868BC0);
  sub_1000E7A40(v40, (uint64_t)v7);
  (*(void (**)(char *))((swift_isaMask & *v39) + 0x1C8))(v7);
  v41 = *(char **)&v23[v38];
  v42 = (uint64_t (**)())&v41[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabelNumberOfLines];
  *v42 = sub_100034018;
  v42[1] = 0;
  v43 = v41;
  swift_release();
  v44 = *(void **)&v43[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel];
  v45 = *v42;
  v46 = swift_retain(v42[1]);
  v47 = ((uint64_t (*)(char *, __n128))v45)(v43, v46);
  objc_msgSend(v44, "setNumberOfLines:", v47, swift_release().n128_f64[0]);

  v48 = *(char **)&v23[v38];
  objc_msgSend(*(id *)&v48[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel], "setAllowsDefaultTighteningForTruncation:", 1);
  v49 = v48;
  v50 = objc_msgSend(v22, "clearColor");
  objc_msgSend(v49, "setBackgroundColor:", v50);

  v51 = *(void **)&v23[v38];
  v52 = v23;
  v53 = v51;
  objc_msgSend(v52, "addSubview:", v53);

  swift_release();
  swift_release();
  return v52;
}

id sub_1001C3500(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  void *v4;
  id v5;
  NSString v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_navigationItem];
  if (v4)
  {
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "removeObserver:forKeyPath:context:", v2, v6, &unk_1008145F8);

  }
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "dealloc");
}

double sub_1001C3640(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  id v16;
  NSString v17;
  double v18;
  void (*v19)(__n128);
  uint64_t v20;
  __n128 v21;

  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView];
  v6 = OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                             + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel), "text"));
  if (!v7)
  {
    if (!a2)
      return result;
    goto LABEL_11;
  }
  v9 = v7;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v12 = v11;

  if (a2)
  {
    if (v12)
    {
      if (v10 == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease(a2);
        v15 = v12;
        goto LABEL_18;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v10, v12, 0);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 1) != 0)
      {
        v15 = a2;
LABEL_18:
        *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
        return result;
      }
    }
LABEL_11:
    v16 = *(id *)(v5 + v6);
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a2).n128_u64[0];
    goto LABEL_14;
  }
  if (!v12)
    return result;
  swift_bridgeObjectRelease(v12);
  v16 = *(id *)(v5 + v6);
  v17 = 0;
LABEL_14:
  objc_msgSend(v16, "setText:", v17, v18);

  objc_msgSend(v2, "invalidateIntrinsicContentSize");
  v19 = *(void (**)(__n128))&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_sizeChangeObserver];
  if (v19)
  {
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_sizeChangeObserver + 8];
    v21 = swift_retain(v20);
    v19(v21);
    sub_100018908((uint64_t)v19, v20);
  }
  return result;
}

uint64_t sub_1001C37E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView)
                            + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (!v1)
    return 0;
  v2 = type metadata accessor for VideoView(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
    v4 = v1;
  return v3;
}

void (*sub_1001C384C(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView);
  v4 = OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer;
  a1[1] = v3;
  a1[2] = v4;
  v5 = *(void **)(*(_QWORD *)(v3 + v4)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (v5)
  {
    v6 = type metadata accessor for VideoView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
      v8 = v5;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  return sub_1001C38D4;
}

void sub_1001C38D4(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  v7 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v7;
    v4 = v2;
    sub_1003A4B0C(v7);

    v5 = v4;
  }
  else
  {
    v6 = v2;
    sub_1003A4B0C(v7);

    v5 = v7;
  }

}

uint64_t sub_1001C394C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

double sub_1001C39F4(uint64_t a1, NSString a2, uint64_t a3, Class isa, void *a5)
{
  char *v5;
  objc_class *ObjectType;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  objc_super v26;
  _QWORD v27[3];
  uint64_t v28;

  ObjectType = (objc_class *)swift_getObjectType();
  if (!a2)
  {
LABEL_11:
    sub_100081524(a3, (uint64_t)v27);
    v19 = v28;
    if (v28)
    {
      v20 = sub_100010F08(v27, v28);
      v21 = *(_QWORD *)(v19 - 8);
      v22 = __chkstk_darwin(v20);
      v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v21 + 16))(v24, v22);
      v25 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v19);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
      if (!isa)
      {
LABEL_14:
        v26.receiver = v5;
        v26.super_class = ObjectType;
        objc_msgSendSuper2(&v26, "observeValueForKeyPath:ofObject:change:context:", a2, v25, isa, a5);

        swift_unknownObjectRelease();
        return result;
      }
    }
    else
    {
      v25 = 0;
      if (!isa)
        goto LABEL_14;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_100020248((unint64_t *)&qword_1008074A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100640514);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_14;
  }
  if ((a1 != 0x656C746974 || a2 != (NSString)0xE500000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x656C746974, 0xE500000000000000, 0) & 1) == 0
    || !a5
    || a5 != &unk_1008145F8)
  {
    a2 = String._bridgeToObjectiveC()();
    goto LABEL_11;
  }
  v12 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_navigationItem];
  if (!v12)
    return sub_1001C3640(0, 0);
  v13 = objc_msgSend(v12, "title");
  if (!v13)
    return sub_1001C3640(0, 0);
  v14 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v17 = v16;

  return sub_1001C3640(v15, v17);
}

uint64_t sub_1001C3D84(void *a1, id a2)
{
  uint64_t v2;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (objc_msgSend(a2, "userInterfaceIdiom") == (id)1
    && (v5 = objc_msgSend(a2, "horizontalSizeClass"), v5 != objc_msgSend(a1, "horizontalSizeClass")))
  {
    v12 = 1;
  }
  else
  {
    v6 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView)+ OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel), "text");
    if (v6)
    {
      v7 = v6;
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;

    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    v11 = static String.isNilOrEmpty(_:)(v8, v10);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) != 0)
    {
      v12 = 0;
    }
    else
    {
      v13 = objc_msgSend(a2, "preferredContentSizeCategory");
      v14 = objc_msgSend(a1, "preferredContentSizeCategory");
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v20 = v18;
      if (v15 == v19 && v17 == v18)
      {
        swift_bridgeObjectRelease_n(v17, 2);
        v12 = 0;
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v18, 0);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v20);
        v12 = v21 ^ 1;
      }

    }
  }
  return v12 & 1;
}

void sub_1001C3F24(void *a1)
{
  char *v1;
  id v3;
  id v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v1, "traitCollection");
    if ((sub_1001C3D84(v3, v4) & 1) != 0)
    {
      objc_msgSend(v1, "invalidateIntrinsicContentSize");
      v5 = *(void (**)(__n128))&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_sizeChangeObserver];
      if (v5)
      {
        v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_sizeChangeObserver + 8];
        v7 = swift_retain(v6);
        v5(v7);
        sub_100018908((uint64_t)v5, v6);
      }
    }

  }
}

id sub_1001C4048()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double MinX;
  CGFloat v32;
  double v33;
  double MinY;
  double Width;
  CGFloat Height;
  void *v37;
  __n128 v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  void (*v50)(char *, uint64_t, __n128);
  char v51;
  __n128 v52;
  void (*v53)(char *, uint64_t, __n128);
  void *v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  objc_super v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for Uber.Style(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v60 - v9;
  v64.receiver = v1;
  v64.super_class = ObjectType;
  objc_msgSendSuper2(&v64, "layoutSubviews", v8);
  objc_msgSend(v1, "bounds");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_titleView];
  v20 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel], "text");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = static String.isNilOrEmpty(_:)(v22, v24);
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v24).n128_u64[0];
  if ((v25 & 1) != 0 && !*(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryView])
  {
    v30 = 0.0;
    goto LABEL_9;
  }
  objc_msgSend(v1, "frame", v26);
  objc_msgSend(v19, "sizeThatFits:", v27, v28);
  v30 = v29;
  if (v29 <= 0.0)
  {
LABEL_9:
    objc_msgSend(v19, "setHidden:", 1);
    goto LABEL_10;
  }
  v65.origin.x = v12;
  v65.origin.y = v14;
  v65.size.width = v16;
  v65.size.height = v18;
  MinX = CGRectGetMinX(v65);
  v66.origin.x = v12;
  v66.origin.y = v14;
  v66.size.width = v16;
  v66.size.height = v18;
  v32 = CGRectGetMaxY(v66) - v30;
  v67.origin.x = v12;
  v67.origin.y = v14;
  v67.size.width = v16;
  v67.size.height = v18;
  objc_msgSend(v19, "setFrame:", MinX, v32, CGRectGetWidth(v67), v30);
  objc_msgSend(v19, "setHidden:", 0);
LABEL_10:
  v68.origin.x = v12;
  v68.origin.y = v14;
  v68.size.width = v16;
  v68.size.height = v18;
  v33 = CGRectGetMinX(v68);
  v69.origin.x = v12;
  v69.origin.y = v14;
  v69.size.width = v16;
  v69.size.height = v18;
  MinY = CGRectGetMinY(v69);
  v70.origin.x = v12;
  v70.origin.y = v14;
  v70.size.width = v16;
  v70.size.height = v18;
  Width = CGRectGetWidth(v70);
  v71.origin.x = v12;
  v71.origin.y = v14;
  v71.size.width = v16;
  v71.size.height = v18;
  Height = CGRectGetHeight(v71);
  v37 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView];
  objc_msgSend(v37, "setFrame:", v33, MinY, Width, Height - v30);
  objc_msgSend(v37, "bounds");
  v39 = v38.n128_f64[0];
  v41 = v40;
  v43 = v42;
  v45 = v44;
  Uber.style.getter(v38);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Uber.Style.above(_:), v3);
  v46 = sub_100020248(&qword_10082A8D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Uber.Style, (uint64_t)&protocol conformance descriptor for Uber.Style);
  dispatch thunk of RawRepresentable.rawValue.getter(&v62, v3, v46);
  dispatch thunk of RawRepresentable.rawValue.getter(&v60, v3, v46);
  v47 = v63;
  v48 = v61;
  if (*(_QWORD *)&v62 == v60 && v63 == v61)
  {
    v49 = swift_bridgeObjectRelease_n(v63, 2);
    v50 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v50(v6, v3, v49);
    ((void (*)(char *, uint64_t))v50)(v10, v3);
  }
  else
  {
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v62, v63, v60, v61, 0);
    swift_bridgeObjectRelease(v47);
    v52 = swift_bridgeObjectRelease(v48);
    v53 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v53(v6, v3, v52);
    ((void (*)(char *, uint64_t))v53)(v10, v3);
    if ((v51 & 1) == 0)
      return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_legibilityGradientView], "setHidden:", 1);
  }
  v54 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_legibilityGradientView];
  objc_msgSend(v54, "setHidden:", 0);
  if (qword_100804D60 != -1)
    swift_once(&qword_100804D60, sub_1001C2DCC);
  v55 = sub_10000DAF8(&qword_100814698);
  sub_10000EFC4(v55, (uint64_t)qword_100865B20);
  Conditional<>.value.getter(&v62, v55);
  v56 = v62;
  v72.origin.x = v39;
  v72.origin.y = v41;
  v72.size.width = v43;
  v72.size.height = v45;
  v57 = CGRectGetMinX(v72);
  v73.origin.x = v39;
  v73.origin.y = v41;
  v73.size.width = v43;
  v73.size.height = v45;
  v58 = CGRectGetMinY(v73);
  v74.origin.x = v39;
  v74.origin.y = v41;
  v74.size.width = v43;
  v74.size.height = v45;
  return objc_msgSend(v54, "setFrame:", v57, v58, CGRectGetWidth(v74), v56);
}

id sub_1001C4554(uint64_t a1, CGFloat a2, CGFloat a3)
{
  char *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  id v12;
  char v13;
  objc_super v15;
  CGPoint v16;
  CGRect v17;

  v15.receiver = v3;
  v15.super_class = (Class)swift_getObjectType();
  v7 = objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView]
                               + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                   + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
    if (v8)
    {
      v9 = type metadata accessor for VideoView(0);
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
        LOBYTE(v8) = objc_msgSend(v7, "isDescendantOfView:", v10);
      else
        LOBYTE(v8) = 0;
    }
    objc_msgSend(v3, "bounds");
    v16.x = a2;
    v16.y = a3;
    if (!CGRectContainsPoint(v17, v16)
      || ((ObjectType = swift_getObjectType(),
           swift_conformsToProtocol2(ObjectType, &protocol descriptor for TouchAccepting))
        ? (v12 = v7)
        : (v12 = 0),
          v12 ? (v13 = 1) : (v13 = v8),
          (v13 & 1) == 0))
    {

      return 0;
    }
  }
  return v7;
}

uint64_t type metadata accessor for UberHeaderView()
{
  return objc_opt_self(_TtC20ProductPageExtension14UberHeaderView);
}

void sub_1001C4734(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView)
                         + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer));
  sub_1003A4B0C(a1);

}

uint64_t (*sub_1001C4788(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1001C384C(v2);
  return sub_10001C148;
}

uint64_t sub_1001C47CC()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;

  ObjectType = swift_getObjectType();
  v2 = sub_100020248(&qword_100814690, v1, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_100650544);
  return VideoViewProviding.someVideoView.getter(ObjectType, v2);
}

uint64_t sub_1001C4814(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  v6 = sub_100020248(&qword_100814690, v5, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_100650544);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v6);
}

uint64_t (*sub_1001C4874(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v5 = sub_100020248(&qword_100814690, v4, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_100650544);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v5);
  return sub_10001C148;
}

uint64_t sub_1001C48F0(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100814678, a2, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_1006504D4);
}

uint64_t sub_1001C491C(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100814680, a2, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_100650504);
}

double sub_1001C4948(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  char v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v27;
  __n128 v28;
  char v29;
  id v30;
  double v31;
  double v32;
  _QWORD v33[2];
  int v34;
  uint64_t v35;

  v33[1] = a3;
  v35 = a2;
  v8 = type metadata accessor for AspectRatio(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100814688);
  __chkstk_darwin(v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(double *)&a4;
  v34 = a5;
  if ((a5 & 1) != 0)
    v17 = 0.0;
  else
    v17 = *(double *)&a4;
  v18 = UITraitCollection.prefersAccessibilityLayouts.getter(v13);
  v19 = objc_msgSend(a1, "userInterfaceIdiom");
  v20 = objc_msgSend(a1, "horizontalSizeClass");
  v21 = &v15[*(int *)(v12 + 80)];
  *v15 = v18 & 1;
  *((_QWORD *)v15 + 1) = v19;
  *((_QWORD *)v15 + 2) = v20;
  v22 = type metadata accessor for Uber.Style(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, v35, v22);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v21, v22);
  if ((_DWORD)v24 == enum case for Uber.Style.above(_:))
  {
    if (v20 == (id)2 && v19 == (id)1)
      return 350.0;
    else
      return 200.0;
  }
  else if ((_DWORD)v24 == enum case for Uber.Style.inline(_:))
  {
    if (v20 == (id)1)
    {
      if ((v18 & 1) != 0)
        return 480.0;
    }
    else if (v20 == (id)2 && v19 == (id)1)
    {
      if ((v18 & 1) != 0)
      {
        return 769.0;
      }
      else
      {
        v27 = 0.0;
        if ((v34 & 1) != 0
          || (v28 = AspectRatio.init(_:_:)(v24),
              v29 = AspectRatio.isLandscape.getter(v28),
              (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
              v27 = v16,
              (v29 & 1) == 0))
        {
          if (v27 <= 769.0)
            return v27;
          else
            return 769.0;
        }
        else
        {
          v30 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
          objc_msgSend(v30, "scale");
          v32 = v31;

          return 1.0 / v32 + v16;
        }
      }
    }
  }
  else
  {
    sub_100010F2C((uint64_t)v15, &qword_100814688);
    return 0.0;
  }
  return v17;
}

void sub_1001C4BEC(uint64_t a1, id a2, void *a3, double a4)
{
  id v5;
  id v8;
  void *v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Height;
  double v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  double v25;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGRect v37;
  CGRect v38;

  v5 = a2;
  if (a2)
  {
    v8 = objc_msgSend(a2, "tabBarController");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "tabBar");

      objc_msgSend(v10, "frame");
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      v37.origin.x = v12;
      v37.origin.y = v14;
      v37.size.width = v16;
      v37.size.height = v18;
      Height = CGRectGetHeight(v37);
    }
    else
    {
      Height = 0.0;
    }
    v21 = objc_msgSend(v5, "view");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "bounds");
      v24 = v23;
      v20 = v25;

      v26 = objc_msgSend(v5, "view");
      if (v26)
      {
        v27 = v26;
        v5 = v24;
        objc_msgSend(v26, "bounds");
        v29 = v28;
        v31 = v30;
        v33 = v32;
        v35 = v34;

        v38.origin.x = v29;
        v38.origin.y = v31;
        v38.size.width = v33;
        v38.size.height = v35;
        CGRectGetWidth(v38);
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  Height = 0.0;
  v20 = 0.0;
LABEL_9:
  v36 = v20 - a4 - Height;
  if (v36 < 0.0)
    v36 = 0.0;
  sub_1001C4948(a3, a1, (uint64_t)v5, *(uint64_t *)&v36, 0);
}

double sub_1001C4DA0(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  double v12;
  void (*v13)(_QWORD *, uint64_t);
  void *v14;
  uint64_t v15;
  char v16;
  __n128 v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v27;
  void *v28;

  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v27 - v9);
  swift_getKeyPath(&unk_100650598);
  ItemLayoutContext.subscript.getter(v10);
  v11 = swift_release();
  v12 = PageGrid.containerHeight.getter(v11);
  v13 = *(void (**)(_QWORD *, uint64_t))(v5 + 8);
  v13(v10, v4);
  swift_getKeyPath(&unk_1006505C8);
  ItemLayoutContext.subscript.getter(&v28);
  swift_release();
  v14 = v28;
  v16 = UITraitCollection.isSizeClassCompact.getter(v15);

  if ((v16 & 1) != 0)
  {
    swift_getKeyPath(&unk_100650598);
    ItemLayoutContext.subscript.getter(v10);
    v17 = swift_release();
    v18 = PageGrid.safeAreaInsets.getter(v17);
    v20 = v19;
    ((void (*)(_QWORD *, uint64_t, double))v13)(v10, v4, v18);
    v12 = v12 - v20;
  }
  swift_getKeyPath(&unk_1006505C8);
  ItemLayoutContext.subscript.getter(&v28);
  swift_release();
  v21 = v28;
  swift_getKeyPath(&unk_100650598);
  ItemLayoutContext.subscript.getter(v7);
  swift_release();
  v23 = PageGrid.containerWidth.getter(v22);
  v13(v7, v4);
  v24 = v12 - a2;
  if (v12 - a2 < 0.0)
    v24 = 0.0;
  v25 = sub_1001C4948(v21, a1, v23, *(uint64_t *)&v24, 0);

  return v25;
}

unint64_t sub_1001C4FA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008146A0;
  if (!qword_1008146A0)
  {
    v1 = type metadata accessor for FootnoteCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_1006505F8, v1);
    atomic_store(result, (unint64_t *)&qword_1008146A0);
  }
  return result;
}

double sub_1001C4FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  id v24;
  double v25;
  double v26;
  __n128 v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  v30 = a2;
  v34 = type metadata accessor for PageGrid(0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char **)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ComponentLayoutOptions(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10000DAF8((uint64_t *)&unk_100819200);
  v31 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char **)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v38, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  swift_getKeyPath(&unk_100650648);
  ItemLayoutContext.subscript.getter(v11);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100650678);
  ReadOnlyLens.subscript.getter(&v37, KeyPath, v8);
  v18 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
  v19 = swift_bridgeObjectRelease(v37);
  ItemLayoutContext.state.getter(v19);
  v20 = type metadata accessor for ObjectGraph(0);
  v21 = swift_dynamicCastClassUnconditional(v30, v20, 0, 0, 0);
  v22 = (uint64_t)v29;
  ItemLayoutContext.componentLayoutOptions.getter(v21);
  swift_getKeyPath(&unk_1006506A8);
  ItemLayoutContext.subscript.getter(v3);
  swift_release();
  v23 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v3, v34);
  v24 = sub_10052A948();
  sub_100369458((uint64_t)v38, (uint64_t)v7, v23, v22, v24);
  v26 = v25;
  v27 = swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v22, v36, v27);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v33);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v38);
  return v26;
}

ValueMetadata *type metadata accessor for ArticlePageGridProvider()
{
  return &type metadata for ArticlePageGridProvider;
}

uint64_t sub_1001C5300@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v33;
  __n128 v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  int v40;
  int v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  int v53;
  char *v54;
  char *v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v60 = a3;
  v17 = type metadata accessor for Shelf.ContentType(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (uint64_t *)((char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for PageGrid.Direction(0, v19);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v59 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v58 - v26;
  v28 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v28);
  v30 = a1;
  v31 = (char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003CFE8(v30, (uint64_t)v31);
  sub_10003CFE8(a2, (uint64_t)&v31[*(int *)(v28 + 48)]);
  KeyPath = swift_getKeyPath(&unk_100650788);
  v33 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  ReadOnlyLens.subscript.getter(&v61, KeyPath, v33);
  v34 = swift_release();
  if ((_BYTE)v61)
    v35 = (unsigned int *)&enum case for PageGrid.Direction.horizontal(_:);
  else
    v35 = (unsigned int *)&enum case for PageGrid.Direction.vertical(_:);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v23 + 104))(v27, *v35, v22, v34);
  v36 = swift_getKeyPath(&unk_1006507B8);
  v37 = v33;
  v38 = v17;
  ReadOnlyLens.subscript.getter(v21, v36, v37);
  v39 = swift_release();
  v40 = (*(uint64_t (**)(_QWORD *, uint64_t, __n128))(v18 + 88))(v21, v17, v39);
  if (v40 == enum case for Shelf.ContentType.footnote(_:))
    goto LABEL_21;
  v41 = v40;
  if (v40 == enum case for Shelf.ContentType.quote(_:)
    || v40 == enum case for Shelf.ContentType.framedArtwork(_:)
    || v40 == enum case for Shelf.ContentType.appShowcase(_:)
    || v40 == enum case for Shelf.ContentType.framedVideo(_:)
    || v40 == enum case for Shelf.ContentType.banner(_:)
    || v40 == enum case for Shelf.ContentType.roundedButton(_:))
  {
    goto LABEL_21;
  }
  if (v40 == enum case for Shelf.ContentType.smallStoryCard(_:))
  {
    v42 = v59;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v59, v27, v22);
    if (qword_100805A48 != -1)
      swift_once(&qword_100805A48, sub_1003B2EA0);
    v43 = qword_10081F738;
    swift_bridgeObjectRetain(qword_10081F738);
    v44 = 0xEB00000000446469;
    v45 = 0x72476E6769736564;
    v46 = v42;
    v47 = a4;
    v48 = a5;
    v49 = a6;
    v50 = a7;
    v51 = a8;
    v52 = a9;
    goto LABEL_25;
  }
  if (v40 == enum case for Shelf.ContentType.arcadeFooter(_:)
    || v40 == enum case for Shelf.ContentType.arcadeShowcase(_:))
  {
LABEL_21:
    v55 = v59;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v59, v27, v22);
    if (qword_1008068B8 != -1)
      swift_once(&qword_1008068B8, sub_1004E2A3C);
    v43 = qword_100828058;
    swift_bridgeObjectRetain(qword_100828058);
    v45 = 0x65656C426C6C7566;
    v44 = 0xE900000000000064;
    v46 = v55;
    goto LABEL_24;
  }
  v53 = enum case for Shelf.ContentType.appPromotion(_:);
  v54 = v59;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v59, v27, v22);
  if (v41 == v53)
  {
    if (qword_100804FD0 != -1)
      swift_once(&qword_100804FD0, sub_100236A80);
    v43 = qword_100866308;
    swift_bridgeObjectRetain(qword_100866308);
    v45 = 0x72476E6769736564;
    v44 = 0xEB00000000416469;
    v46 = v54;
LABEL_24:
    v47 = a4;
    v48 = a5;
    v49 = a6;
    v50 = a7;
    v51 = a8;
    v52 = a9;
LABEL_25:
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(v45, v44, v46, 0, v43, v47, v48, v49, v50, v51, v52);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    return sub_1001C5BE0((uint64_t)v31);
  }
  v57 = sub_1004B5390(0.0);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v54, 0, v57, a4, a5, a6, a7, a8, a9);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
  sub_1001C5BE0((uint64_t)v31);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v38);
}

uint64_t sub_1001C5824(__n128 a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  double v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  unsigned int *v30;
  uint64_t v31;
  _BYTE v33[15];
  uint64_t v34;

  v14 = a1.n128_f64[0];
  v17 = type metadata accessor for PageGrid.Direction(0, a1);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v23 = &v33[-v22];
  v24 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v24);
  v26 = &v33[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003CFE8(a8, (uint64_t)v26);
  sub_10003CFE8(a9, (uint64_t)&v26[*(int *)(v24 + 48)]);
  KeyPath = swift_getKeyPath(&unk_100650788);
  v28 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  ReadOnlyLens.subscript.getter(&v34, KeyPath, v28);
  v29 = swift_release();
  if ((_BYTE)v34)
    v30 = (unsigned int *)&enum case for PageGrid.Direction.horizontal(_:);
  else
    v30 = (unsigned int *)&enum case for PageGrid.Direction.vertical(_:);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v18 + 104))(v23, *v30, v17, v29);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v20, v23, v17);
  v31 = sub_1004B5390(0.0);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v20, 0, v31, v14, a2, a3, a4, a5, a6);
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v23, v17);
  return sub_1001C5BE0((uint64_t)v26);
}

uint64_t sub_1001C5A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_1001C5B98();
  return PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1001C5AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_1001C5B98();
  return PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

unint64_t sub_1001C5B98()
{
  unint64_t result;

  result = qword_1008146A8;
  if (!qword_1008146A8)
  {
    result = swift_getWitnessTable(&unk_100650718, &type metadata for ArticlePageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1008146A8);
  }
  return result;
}

uint64_t sub_1001C5BE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_100808540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1001C5C24(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  objc_class *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  void *v33;
  objc_super v35;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_preferredIconWidth] = 0x404F000000000000;
  v16 = &v4[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_iconStyle];
  v17 = enum case for Artwork.Style.roundedRect(_:);
  v19 = type metadata accessor for Artwork.Style(0, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v16, v17, v19);
  v20 = OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel;
  v21 = qword_100806598;
  v22 = v4;
  if (v21 != -1)
    swift_once(&qword_100806598, sub_1004C95D0);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_10086A1A0);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v15, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v22[v20] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 1, 0, 1, 0, v12, 0, 0);

  v27 = (objc_class *)type metadata accessor for IconSilhouetteView(0);
  v35.receiver = v22;
  v35.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  v29 = OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel];
  v31 = v28;
  objc_msgSend(v30, "setTextAlignment:", 1);
  sub_100035178();
  v32 = v31;
  v33 = (void *)static UIColor.placeholderBackgroundStandout.getter();
  objc_msgSend(v32, "setBackgroundColor:", v33);

  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v28[v29]);
  return v32;
}

id sub_1001C5F00(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  objc_super v22;
  CGRect v23;
  CGRect v24;

  v3 = v2;
  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for IconSilhouetteView(0);
  v22.receiver = v3;
  v22.super_class = v8;
  objc_msgSendSuper2(&v22, "layoutSubviews");
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v3[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_iconStyle], v4);
  v9 = objc_msgSend(v3, "frame");
  v12 = Artwork.Style.iconCornerRadius(for:)(v9, v10, v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v3, "_setCornerRadius:", v12);
  v13 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v8);
  objc_msgSend(v13, "sizeThatFits:", v14, v15);
  v17 = v16;
  v19 = v18;
  v23.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v8);
  v20 = CGRectGetMidX(v23) - v17 * 0.5;
  v24.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v8);
  return objc_msgSend(v13, "setFrame:", v20, CGRectGetMidY(v24) - v19 * 0.5, v17, v19);
}

id sub_1001C6170()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IconSilhouetteView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001C61F4()
{
  return type metadata accessor for IconSilhouetteView(0);
}

uint64_t type metadata accessor for IconSilhouetteView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008146E0;
  if (!qword_1008146E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IconSilhouetteView);
  return result;
}

uint64_t sub_1001C6238(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Artwork.Style(319, a2);
  if (v4 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001C62C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_preferredIconWidth] = 0x404F000000000000;
  v9 = &v1[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_iconStyle];
  v10 = enum case for Artwork.Style.roundedRect(_:);
  v12 = type metadata accessor for Artwork.Style(0, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v9, v10, v12);
  v13 = OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel;
  if (qword_100806598 != -1)
    swift_once(&qword_100806598, sub_1004C95D0);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_10086A1A0);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, v15, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v13] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 1, 0, 1, 0, v5, 0, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/IconSilhouetteView.swift", 45, 2, 50, 0);
  __break(1u);
}

uint64_t sub_1001C64B8(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(_QWORD *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD v24[5];
  __int128 v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  __int128 v31;
  uint64_t v32;
  void *v33;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806370 != -1)
    swift_once(&qword_100806370, sub_1004C7E24);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_10000EFC4(v5, (uint64_t)qword_100869B28);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v23(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v22 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v22(v4, enum case for FontSource.useCase(_:), v1);
  v8 = type metadata accessor for StaticDimension(0);
  v32 = v8;
  v33 = &protocol witness table for StaticDimension;
  sub_1000119C0(&v31);
  v29 = v1;
  v30 = &protocol witness table for FontSource;
  v9 = sub_1000119C0(&v28);
  v21 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v21(v9, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v28, 28.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  if (qword_100806380 != -1)
    swift_once(&qword_100806380, sub_1004C7E58);
  v10 = sub_10000EFC4(v5, (uint64_t)qword_100869B58);
  v11 = v23;
  v23(v4, v10, v5);
  v12 = v22;
  v22(v4, v7, v1);
  v29 = v8;
  v30 = &protocol witness table for StaticDimension;
  sub_1000119C0(&v28);
  v26 = v1;
  v27 = &protocol witness table for FontSource;
  v13 = sub_1000119C0(&v25);
  v14 = v8;
  v15 = v21;
  v21(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v25, 20.0);
  v16 = v20;
  v20(v4, v1);
  v11(v4, v10, v5);
  v12(v4, v7, v1);
  v26 = v14;
  v27 = &protocol witness table for StaticDimension;
  sub_1000119C0(&v25);
  v24[3] = v1;
  v24[4] = &protocol witness table for FontSource;
  v17 = sub_1000119C0(v24);
  v15(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(v24, 16.0);
  v16(v4, v1);
  qword_100865BF0 = (uint64_t)&type metadata for Double;
  unk_100865BF8 = &protocol witness table for Double;
  qword_100865BD8 = 0x4028000000000000;
  xmmword_100865B50 = (__int128)vdupq_n_s64(0x4064000000000000uLL);
  sub_100010E24(&v31, (uint64_t)&unk_100865B60);
  sub_100010E24(&v28, (uint64_t)&unk_100865B88);
  result = sub_100010E24(&v25, (uint64_t)&unk_100865BB0);
  byte_100865C00 = 1;
  return result;
}

char *sub_1001C67D0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  objc_class *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  char *v41;
  id v42;
  uint64_t v43;
  double v44;
  id v45;
  char *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  void (*v65)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  objc_super v71;

  v9 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v9);
  v70 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CornerStyle(0);
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  __chkstk_darwin(v11);
  v67 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DirectionalTextAlignment(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v4[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_itemLayoutContext];
  v21 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_preferredArtworkSize;
  v23 = qword_100804D68;
  v24 = v4;
  if (v23 != -1)
    swift_once(&qword_100804D68, sub_1001C64B8);
  *(_OWORD *)&v4[v22] = xmmword_100865B50;
  v66 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_alias;
  if (qword_100806370 != -1)
    swift_once(&qword_100806370, sub_1004C7E24);
  v25 = type metadata accessor for FontUseCase(0);
  v26 = sub_10000EFC4(v25, (uint64_t)qword_100869B28);
  v27 = *(_QWORD *)(v25 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v19, v26, v25);
  v65 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
  v65(v19, 0, 1, v25);
  v29 = enum case for DirectionalTextAlignment.none(_:);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v30(v16, enum case for DirectionalTextAlignment.none(_:), v13);
  v31 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v32 = objc_allocWithZone(v31);
  v33 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v19, 1, 0, 1, 0, v16, 0, 0);
  *(_QWORD *)&v24[v66] = v33;
  v66 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_displayName;
  if (qword_100806380 != -1)
    swift_once(&qword_100806380, sub_1004C7E58);
  v34 = sub_10000EFC4(v25, (uint64_t)qword_100869B58);
  v28(v19, v34, v25);
  v65(v19, 0, 1, v25);
  v30(v16, v29, v13);
  v35 = objc_allocWithZone(v31);
  v36 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v19, 1, 0, 1, 0, v16, 0, 0);
  *(_QWORD *)&v24[v66] = v36;
  *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_artworkView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v37 = (objc_class *)type metadata accessor for LargeGameCenterPlayerCollectionViewCell(0);
  v71.receiver = v24;
  v71.super_class = v37;
  v38 = (char *)objc_msgSendSuper2(&v71, "initWithFrame:", a1, a2, a3, a4);
  v39 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_artworkView;
  v40 = *(void **)&v38[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_artworkView];
  sub_100035178();
  v41 = v38;
  v42 = v40;
  v43 = static UIColor.placeholderBackground.getter(v42);
  ArtworkView.backgroundColor.setter(v43);

  v44 = *(double *)&v41[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_preferredArtworkSize]
      * 0.5;
  v45 = *(id *)&v38[v39];
  v46 = v67;
  dispatch thunk of RoundedCornerView.cornerStyle.getter();
  ArtworkView.setCorner(radius:style:)(v46, v44);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v69);
  v47 = qword_100804B28;
  v48 = *(id *)&v38[v39];
  if (v47 != -1)
    swift_once(&qword_100804B28, sub_100141570);
  v49 = type metadata accessor for Shadow(0);
  v50 = sub_10000EFC4(v49, (uint64_t)qword_1008655F8);
  v51 = *(_QWORD *)(v49 - 8);
  v52 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v70, v50, v49);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v49);
  ArtworkView.shadow.setter(v52);

  v53 = objc_msgSend(v41, "contentView");
  objc_msgSend(v53, "addSubview:", *(_QWORD *)&v38[v39]);

  v54 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_alias;
  v55 = *(id *)&v41[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_alias];
  UILabel.alignment.setter(1);

  v56 = *(void **)&v41[v54];
  objc_msgSend(v56, "setNumberOfLines:", 1);
  v57 = objc_msgSend(v41, "contentView");
  objc_msgSend(v57, "addSubview:", v56);

  v58 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_displayName;
  v59 = *(id *)&v41[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_displayName];
  v60 = (void *)static UIColor.secondaryText.getter(v59);
  objc_msgSend(v59, "setTextColor:", v60);

  v61 = *(void **)&v41[v58];
  objc_msgSend(v61, "setNumberOfLines:", 1);
  v62 = objc_msgSend(v41, "contentView");
  v63 = v61;
  objc_msgSend(v62, "addSubview:", v63);

  return v41;
}

_QWORD *sub_1001C6DF8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  _QWORD v18[31];
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  objc_super v24;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for LargeGameCenterPlayerCollectionViewCell(0);
  v24.receiver = v0;
  v24.super_class = v6;
  objc_msgSendSuper2(&v24, "layoutSubviews");
  if (qword_100804D68 != -1)
    swift_once(&qword_100804D68, sub_1001C64B8);
  sub_1001C7220((uint64_t)&xmmword_100865B50, (uint64_t)v18);
  v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_artworkView];
  v18[26] = type metadata accessor for ArtworkView(0);
  v18[27] = &protocol witness table for UIView;
  v18[23] = v7;
  v8 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_alias];
  v19 = type metadata accessor for DynamicTypeLabel(0);
  v20 = &protocol witness table for UILabel;
  v18[28] = v8;
  v9 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_displayName];
  v22 = v19;
  v23 = &protocol witness table for UILabel;
  v21 = v9;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  objc_msgSend(v1, "bounds");
  LargeGameCenterPlayerLayout.placeChildren(relativeTo:in:)((uint64_t)v1, (uint64_t)v5, v13, v14, v15, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1001C725C(v18);
}

id sub_1001C6FA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LargeGameCenterPlayerCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001C702C()
{
  return type metadata accessor for LargeGameCenterPlayerCollectionViewCell(0);
}

uint64_t type metadata accessor for LargeGameCenterPlayerCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100814718;
  if (!qword_100814718)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeGameCenterPlayerCollectionViewCell);
  return result;
}

void sub_1001C7070(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100650878;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

id sub_1001C70F8()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_artworkView));
}

double sub_1001C7108()
{
  uint64_t v0;

  return *(double *)(v0
                   + OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_preferredArtworkSize);
}

void sub_1001C711C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006508C0, a3);
  sub_1001A1618(a1, a2, a3, WitnessTable);
}

void sub_1001C7168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006508C0, a3);
  sub_1001A1840(a1, a2, a3, WitnessTable);
}

unint64_t sub_1001C71B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1001C71D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001C71D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100814728;
  if (!qword_100814728)
  {
    v1 = type metadata accessor for LargeGameCenterPlayerCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_100650890, v1);
    atomic_store(result, (unint64_t *)&qword_100814728);
  }
  return result;
}

uint64_t sub_1001C7220(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LargeGameCenterPlayerLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1001C725C(_QWORD *a1)
{
  destroy for LargeGameCenterPlayerLayout(a1);
  return a1;
}

void sub_1001C7290()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  objc_class *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v25 = type metadata accessor for DirectionalTextAlignment(0);
  v2 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v0[OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_itemLayoutContext];
  v9 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_preferredArtworkSize;
  if (qword_100804D68 != -1)
    swift_once(&qword_100804D68, sub_1001C64B8);
  *(_OWORD *)&v1[v10] = xmmword_100865B50;
  v24 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_alias;
  if (qword_100806370 != -1)
    swift_once(&qword_100806370, sub_1004C7E24);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = sub_10000EFC4(v11, (uint64_t)qword_100869B28);
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14(v7, v12, v11);
  v15 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  v15(v7, 0, 1, v11);
  v16 = enum case for DirectionalTextAlignment.none(_:);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v17(v4, enum case for DirectionalTextAlignment.none(_:), v25);
  v18 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v19 = objc_allocWithZone(v18);
  v20 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 1, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v24] = v20;
  v24 = OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_displayName;
  if (qword_100806380 != -1)
    swift_once(&qword_100806380, sub_1004C7E58);
  v21 = sub_10000EFC4(v11, (uint64_t)qword_100869B58);
  v14(v7, v21, v11);
  v15(v7, 0, 1, v11);
  v17(v4, v16, v25);
  v22 = objc_allocWithZone(v18);
  v23 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 1, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v24] = v23;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/LargeGameCenterPlayerCollectionViewCell.swift", 66, 2, 67, 0);
  __break(1u);
}

uint64_t sub_1001C7568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_10000DAF8(&qword_10080AD68);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100640600;
  sub_1001CA814();
  *(_QWORD *)(v1 + 32) = static NSUserDefaults.searchLandingPageV2EndpointTreatmentKey.getter();
  *(_QWORD *)(v1 + 40) = v2;
  result = static NSUserDefaults.searchLandingPageTrendingTreatmentKey.getter();
  *(_QWORD *)(v1 + 48) = result;
  *(_QWORD *)(v1 + 56) = v4;
  off_100814730 = (_UNKNOWN *)v1;
  return result;
}

uint64_t sub_1001C75CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1006423E0;
  *(_QWORD *)(v3 + 32) = sub_1001C7644();
  v4 = sub_1001C816C(a1);
  *(_QWORD *)(v3 + 40) = v4;
  specialized Array._endMutation()(v4);
  return v3;
}

_QWORD *sub_1001C7644()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for UUID(0);
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  __chkstk_darwin(v3);
  v89 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_100814760);
  __chkstk_darwin(v5);
  v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v9 = swift_allocObject(v8, 64, 7);
  v84 = xmmword_100644360;
  *(_OWORD *)(v9 + 16) = xmmword_100644360;
  v10 = v9;
  v88 = sub_1001CA814();
  v11 = static NSUserDefaults.searchLandingPageOverridesKey.getter();
  v13 = v12;
  v87 = type metadata accessor for BoolUserDefaultsDebugSetting();
  swift_allocObject(v87, 97, 7);
  v14 = sub_10060A264(0xD000000000000010, 0x8000000100692880, 0, v11, v13, 0);
  v86 = v10;
  *(_QWORD *)(v10 + 32) = v14;
  v15 = swift_allocObject(&unk_100743DB8, 32, 7);
  *(_QWORD *)(v15 + 16) = v1;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v16, 120, 7);
  v85 = v1;
  v17 = sub_1004A7A88(0xD000000000000019, 0x80000001006928A0, 0, 0, 0, 0, (uint64_t)sub_1001CA874, v15);
  swift_release();
  *(_QWORD *)(v10 + 40) = v17;
  v83 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v83 + 16) = v84;
  v18 = enum case for SearchLandingPageDiscoverSectionTreatment.control(_:);
  v19 = type metadata accessor for SearchLandingPageDiscoverSectionTreatment(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  v21(v7, v18, v19);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v22(v7, 0, 1, v19);
  v23 = sub_1001C94A0((uint64_t)v7);
  v25 = v24;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v92 = v23;
  v93 = v25;
  AnyHashable.init<A>(_:)(&v92, &type metadata for String, &protocol witness table for String);
  v21(v7, v18, v19);
  v22(v7, 0, 1, v19);
  v26 = sub_1001C94A0((uint64_t)v7);
  v28 = v27;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v29 = type metadata accessor for MenuItemDebugSetting();
  *(_QWORD *)&v84 = v29;
  v30 = swift_allocObject(v29, 96, 7);
  *(_BYTE *)(v30 + 72) = 0;
  *(_QWORD *)(v30 + 56) = v26;
  *(_QWORD *)(v30 + 64) = v28;
  *(_QWORD *)(v30 + 80) = sub_1001C7F58;
  *(_QWORD *)(v30 + 88) = 0;
  v31 = v95;
  *(_OWORD *)(v30 + 16) = v94;
  *(_OWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 48) = v96;
  v32 = (_QWORD *)v83;
  *(_QWORD *)(v83 + 32) = v30;
  v33 = enum case for SearchLandingPageDiscoverSectionTreatment.has2Columns(_:);
  v21(v7, enum case for SearchLandingPageDiscoverSectionTreatment.has2Columns(_:), v19);
  v22(v7, 0, 1, v19);
  v34 = sub_1001C94A0((uint64_t)v7);
  v36 = v35;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v92 = v34;
  v93 = v36;
  AnyHashable.init<A>(_:)(&v92, &type metadata for String, &protocol witness table for String);
  v21(v7, v33, v19);
  v22(v7, 0, 1, v19);
  v37 = sub_1001C94A0((uint64_t)v7);
  v39 = v38;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v40 = swift_allocObject(v29, 96, 7);
  *(_BYTE *)(v40 + 72) = 0;
  *(_QWORD *)(v40 + 56) = v37;
  *(_QWORD *)(v40 + 64) = v39;
  *(_QWORD *)(v40 + 80) = sub_1001C7F64;
  *(_QWORD *)(v40 + 88) = 0;
  v41 = v95;
  *(_OWORD *)(v40 + 16) = v94;
  *(_OWORD *)(v40 + 32) = v41;
  *(_QWORD *)(v40 + 48) = v96;
  v32[5] = v40;
  v42 = enum case for SearchLandingPageDiscoverSectionTreatment.hasSearchIcon(_:);
  v21(v7, enum case for SearchLandingPageDiscoverSectionTreatment.hasSearchIcon(_:), v19);
  v22(v7, 0, 1, v19);
  v43 = sub_1001C94A0((uint64_t)v7);
  v45 = v44;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v92 = v43;
  v93 = v45;
  AnyHashable.init<A>(_:)(&v92, &type metadata for String, &protocol witness table for String);
  v21(v7, v42, v19);
  v22(v7, 0, 1, v19);
  v46 = sub_1001C94A0((uint64_t)v7);
  v48 = v47;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v49 = v84;
  v50 = swift_allocObject(v84, 96, 7);
  *(_BYTE *)(v50 + 72) = 0;
  *(_QWORD *)(v50 + 56) = v46;
  *(_QWORD *)(v50 + 64) = v48;
  *(_QWORD *)(v50 + 80) = sub_1001C7F70;
  *(_QWORD *)(v50 + 88) = 0;
  v51 = v95;
  *(_OWORD *)(v50 + 16) = v94;
  *(_OWORD *)(v50 + 32) = v51;
  *(_QWORD *)(v50 + 48) = v96;
  v32[6] = v50;
  v52 = enum case for SearchLandingPageDiscoverSectionTreatment.has2ColumnsAndSearchIcon(_:);
  v21(v7, enum case for SearchLandingPageDiscoverSectionTreatment.has2ColumnsAndSearchIcon(_:), v19);
  v22(v7, 0, 1, v19);
  v53 = sub_1001C94A0((uint64_t)v7);
  v55 = v54;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v92 = v53;
  v93 = v55;
  AnyHashable.init<A>(_:)(&v92, &type metadata for String, &protocol witness table for String);
  v21(v7, v52, v19);
  v22(v7, 0, 1, v19);
  v56 = sub_1001C94A0((uint64_t)v7);
  v58 = v57;
  sub_100010F2C((uint64_t)v7, &qword_100814760);
  v59 = swift_allocObject(v49, 96, 7);
  *(_QWORD *)(v59 + 56) = v56;
  *(_QWORD *)(v59 + 64) = v58;
  *(_BYTE *)(v59 + 72) = 0;
  *(_QWORD *)(v59 + 80) = sub_1001C7F7C;
  *(_QWORD *)(v59 + 88) = 0;
  v60 = v95;
  *(_OWORD *)(v59 + 16) = v94;
  *(_OWORD *)(v59 + 32) = v60;
  *(_QWORD *)(v59 + 48) = v96;
  v32[7] = v59;
  *(_QWORD *)&v94 = v32;
  specialized Array._endMutation()(v59);
  v61 = v94;
  v62 = swift_allocObject(&unk_100743DE0, 24, 7);
  v63 = v85;
  *(_QWORD *)(v62 + 16) = v85;
  v64 = type metadata accessor for MenuDebugSetting();
  swift_allocObject(v64, 96, 7);
  v65 = v63;
  sub_100085A64(0xD000000000000017, 0x80000001006928C0, v61, (uint64_t)sub_1001CA8A0, v62);
  v66 = v86;
  *(_QWORD *)(v86 + 48) = v67;
  v68 = static NSUserDefaults.searchLandingPageV2EndpointTreatmentKey.getter();
  v70 = v69;
  swift_allocObject(v87, 97, 7);
  v71 = sub_10060A264(0x4C53206563726F46, 0xEC00000032562050, 0, v68, v70, 0);
  *(_QWORD *)(v66 + 56) = v71;
  *(_QWORD *)&v94 = v66;
  specialized Array._endMutation()(v71);
  v72 = v94;
  v73 = type metadata accessor for DebugSection();
  v74 = (_QWORD *)swift_allocObject(v73, 56, 7);
  v75 = v89;
  v77 = UUID.init()(v76);
  v78 = UUID.uuidString.getter(v77);
  v80 = v79;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v75, v91);
  v74[2] = v78;
  v74[3] = v80;
  v74[4] = 0xD000000000000018;
  v74[5] = 0x8000000100692860;
  v74[6] = v72;
  return v74;
}

void sub_1001C7D88(uint64_t a1, uint64_t a2)
{
  NSString v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;
  NSString v8;
  void *v9;
  id v10;
  void *Strong;
  void *v12;
  _QWORD v13[6];

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v3, 0, 1);

  v5 = String._bridgeToObjectiveC()();
  v6 = (void *)objc_opt_self(UIAlertAction);
  v7 = objc_msgSend(v6, "actionWithTitle:style:handler:", v5, 1, 0);

  objc_msgSend(v4, "addAction:", v7);
  v8 = String._bridgeToObjectiveC()();
  v13[4] = sub_1001C943C;
  v13[5] = 0;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004AFAC;
  v13[3] = &unk_100743DF8;
  v9 = _Block_copy(v13);
  v10 = objc_msgSend(v6, "actionWithTitle:style:handler:", v8, 2, v9, swift_release().n128_f64[0]);
  _Block_release(v9);

  objc_msgSend(v4, "addAction:", v10);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC20ProductPageExtension21DebugSettingsProvider_debugSettingsViewController);
  if (Strong)
  {
    v12 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v4, 1, 0);

  }
}

void sub_1001C7F58()
{
  sub_1001C7F88((unsigned int *)&enum case for SearchLandingPageDiscoverSectionTreatment.control(_:));
}

void sub_1001C7F64()
{
  sub_1001C7F88((unsigned int *)&enum case for SearchLandingPageDiscoverSectionTreatment.has2Columns(_:));
}

void sub_1001C7F70()
{
  sub_1001C7F88((unsigned int *)&enum case for SearchLandingPageDiscoverSectionTreatment.hasSearchIcon(_:));
}

void sub_1001C7F7C()
{
  sub_1001C7F88((unsigned int *)&enum case for SearchLandingPageDiscoverSectionTreatment.has2ColumnsAndSearchIcon(_:));
}

void sub_1001C7F88(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;

  v2 = type metadata accessor for SearchLandingPageDiscoverSectionTreatment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *a1, v2);
  NSUserDefaults.searchLandingPageTrendingTreatment.setter(v5);

  v7 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v7, "notify");

}

uint64_t sub_1001C806C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v0 = sub_10000DAF8(&qword_100814760);
  __chkstk_darwin(v0);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.searchLandingPageTrendingTreatment.getter();

  v4 = type metadata accessor for SearchLandingPageDiscoverSectionTreatment(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
  v5 = sub_1001C94A0((uint64_t)v2);
  v7 = v6;
  sub_100010F2C((uint64_t)v2, &qword_100814760);
  v9[0] = v5;
  v9[1] = v7;
  return AnyHashable.init<A>(_:)(v9, &type metadata for String, &protocol witness table for String);
}

_QWORD *sub_1001C816C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1006415A0;
  v8 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v8, 120, 7);
  *(_QWORD *)(v7 + 32) = sub_1004A7A88(0x6552207261656C43, 0xED000073746E6563, 0, 0, 0, 0, (uint64_t)sub_1001C842C, 0);
  v9 = swift_allocObject(&unk_100743D68, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = swift_allocObject(&unk_100743D90, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a1;
  v11 = type metadata accessor for NavigationActionDebugSetting();
  swift_allocObject(v11, 104, 7);
  swift_retain(a1);
  v12 = sub_1004C5AA4(0x63655220776F6853, 0xEC00000073746E65, 0, 0, (uint64_t)sub_1001C9490, v10);
  swift_release();
  *(_QWORD *)(v7 + 40) = v12;
  v13 = swift_allocObject(&unk_100743D68, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  swift_allocObject(v8, 120, 7);
  v14 = sub_1004A7A88(0x636F462074736554, 0xEF65676150207375, 0, 0, 0, 0, (uint64_t)sub_1001C9498, v13);
  swift_release();
  *(_QWORD *)(v7 + 48) = v14;
  v26 = v7;
  specialized Array._endMutation()(v15);
  sub_10001AA94((uint64_t)_swiftEmptyArrayStorage);
  v16 = v26;
  v17 = type metadata accessor for DebugSection();
  v18 = (_QWORD *)swift_allocObject(v17, 56, 7);
  v20 = UUID.init()(v19);
  v21 = UUID.uuidString.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v18[2] = v21;
  v18[3] = v23;
  v18[4] = 0xD000000000000016;
  v18[5] = 0x8000000100692840;
  v18[6] = v16;
  return v18;
}

void sub_1001C842C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v0 = type metadata accessor for OnDeviceSearchHistoryManager(0);
  BaseObjectGraph.inject<A>(_:)(&v2, v0, v0);
  v1 = v2;
  OnDeviceSearchHistoryManager.clearData()();

}

void sub_1001C8470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1001C97C0(a3);

  }
}

void sub_1001C84C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1001C8520(a1);

  }
}

void sub_1001C8520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *Strong;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(_BYTE *, _QWORD, uint64_t);
  void (*v25)(_BYTE *);
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t);
  void (*v28)(_BYTE *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  double v41;
  id v42;
  _BYTE v43[12];
  unsigned int v44;
  _BYTE *v45;
  _BYTE *v46;
  id v47;
  uint64_t v48;
  _OWORD v49[2];

  v48 = a1;
  v2 = sub_10000DAF8(&qword_10080A2F8);
  v3 = __chkstk_darwin(v2);
  v5 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for PageMetrics(0, v3);
  v7 = __chkstk_darwin(v6);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Shelf.ContentsMetadata(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for Shelf.ContentType(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension21DebugSettingsProvider_debugSettingsViewController);
  if (Strong)
  {
    v19 = Strong;
    v20 = objc_msgSend(Strong, "navigationController");

    v47 = v20;
    if (v20)
    {
      v21 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v22 = swift_allocObject(v21, 56, 7);
      v46 = v5;
      v23 = (_QWORD *)v22;
      *(_OWORD *)(v22 + 16) = xmmword_1006415A0;
      v24 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 104);
      v24(v17, enum case for Shelf.ContentType.scrollablePill(_:), v14);
      v44 = enum case for Shelf.ContentsMetadata.none(_:);
      v45 = v9;
      v25 = *(void (**)(_BYTE *))(v11 + 104);
      v25(v13);
      v26 = sub_1001C88EC((uint64_t)v17, (uint64_t)v13, 0xAuLL);
      v27 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
      v27(v13, v10);
      v28 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
      v28(v17, v14);
      v23[4] = v26;
      v24(v17, enum case for Shelf.ContentType.twoColumnList(_:), v14);
      SearchFocusTwoColumnListDisplayOptions.init(numberOfColumns:)(2);
      ((void (*)(_BYTE *, _QWORD, uint64_t))v25)(v13, enum case for Shelf.ContentsMetadata.searchFocusTwoColumnList(_:), v10);
      v29 = sub_1001C88EC((uint64_t)v17, (uint64_t)v13, 4uLL);
      v27(v13, v10);
      v28(v17, v14);
      v23[5] = v29;
      v24(v17, enum case for Shelf.ContentType.singleColumnList(_:), v14);
      ((void (*)(_BYTE *, _QWORD, uint64_t))v25)(v13, v44, v10);
      v30 = sub_1001C88EC((uint64_t)v17, (uint64_t)v13, 3uLL);
      v27(v13, v10);
      v31 = ((uint64_t (*)(_BYTE *, uint64_t))v28)(v17, v14);
      v23[6] = v30;
      *(_QWORD *)&v49[0] = v23;
      specialized Array._endMutation()(v31);
      v32 = *(_QWORD *)&v49[0];
      memset(v49, 0, sizeof(v49));
      v33 = v45;
      static PageMetrics.notInstrumented.getter((__n128)0);
      v34 = type metadata accessor for JSONContext(0);
      v35 = v46;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v46, 1, 1, v34);
      v36 = type metadata accessor for SearchFocusPage(0);
      swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
      v37 = SearchFocusPage.init(shelves:title:shareAction:presentationOptions:nextPage:isIncomplete:uber:loadCompletedAction:pageRefreshPolicy:pageMetrics:pageRenderEvent:context:)(v32, 0, 0, 0, 0, v49, 0, 0, 0, 0, v33, 0, v35);
      v38 = type metadata accessor for UnimplementedAdvertLifecycleMetricsReporter(0);
      swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
      v39 = UnimplementedAdvertLifecycleMetricsReporter.init()();
      v40 = sub_10021E3E4(v37, v39, v48);
      swift_release();
      *(_QWORD *)&v41 = swift_release().n128_u64[0];
      v42 = v47;
      objc_msgSend(v47, "pushViewController:animated:", v40, 1, v41);

    }
  }
}

uint64_t sub_1001C88EC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(void);
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v48;
  double (*v49)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v50;
  unint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t Strategy;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  _QWORD *v98;
  unint64_t v99;
  _OWORD v100[2];
  uint64_t v101;

  v85 = a2;
  v94 = type metadata accessor for Shelf.PresentationHints(0);
  __chkstk_darwin(v94);
  v96 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ShelfBackground(0);
  v91 = *(_QWORD *)(v6 - 8);
  v92 = v6;
  v7 = __chkstk_darwin(v6);
  v95 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShelfHorizontalScrollTargetBehavior(0, v7);
  v87 = *(_QWORD *)(v9 - 8);
  v88 = v9;
  v10 = __chkstk_darwin(v9);
  v93 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strategy = type metadata accessor for IncompleteShelfFetchStrategy(0, v10);
  v83 = *(_QWORD *)(Strategy - 8);
  __chkstk_darwin(Strategy);
  v90 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v13);
  v89 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100816850);
  v16 = __chkstk_darwin(v15);
  v81 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for Shelf.ContentsMetadata(0, v16);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v97 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v19);
  v86 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v74 - v22;
  v24 = type metadata accessor for ShelfHeader.Configuration(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DAF8(&qword_10080A300);
  __chkstk_darwin(v27);
  v29 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v74 - v31;
  v33 = sub_10000DAF8(&qword_10080A308);
  __chkstk_darwin(v33);
  v35 = (char *)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v36);
  v38 = (char *)&v74 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Shelf.ContentType(0);
  v40 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v42 = (char *)&v74 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = 0;
  memset(v100, 0, sizeof(v100));
  v43 = *(void (**)(void))(v40 + 16);
  v79 = v42;
  v43();
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
  v80 = v38;
  v44(v38, 1, 1, v39);
  v45 = type metadata accessor for ShelfMarker(0);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v82 = v35;
  result = v46(v35, 1, 1, v45);
  if (a3)
  {
    __chkstk_darwin(result);
    *(_QWORD *)&v73 = a1;
    v76 = sub_10036D828((uint64_t)sub_1001C9420, (uint64_t)&v72, 1uLL, a3);
    v48 = type metadata accessor for ShelfHeader.ArtworkType(0);
    v49 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
    v49(v32, 1, 1, v48);
    v98 = 0;
    v99 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(a1, &v98, v39, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v50 = v98;
    v51 = v99;
    v52.n128_f64[0] = v49(v29, 1, 1, v48);
    LOBYTE(v73) = 2;
    ShelfHeader.Configuration.init(eyebrowColor:eyebrowImageColor:titleColor:titleImageColor:subtitleColor:accessoryColor:includeSeparator:includeTrailingArtwork:prefersShelfHeader:)(0, 0, 0, 0, 0, 0, 2, 2, v52, v73);
    v53 = type metadata accessor for ShelfHeader(0);
    swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
    v75 = ShelfHeader.init(eyebrow:eyebrowArtwork:eyebrowArtworkType:eyebrowAction:eyebrowTrailingArtwork:title:titleArtwork:titleArtworkType:titleAction:subtitle:trailingArtwork:accessoryAction:configuration:)(0, 0, 0, v32, 0, 0, v50, v51, 0, v29, 0, 0, 0, 0, 0, v26);
    v55 = type metadata accessor for URL(0, v54);
    v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
    v74 = v23;
    v56(v23, 1, 1, v55);
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v97, v85, v78);
    v57 = type metadata accessor for Date(0);
    v58 = v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v81, 1, 1, v57);
    v59 = type metadata accessor for ImpressionMetrics(0);
    v60 = v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v89, 1, 1, v59);
    v61 = v86;
    v56(v86, 1, 1, v55);
    v62 = v90;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v90, enum case for IncompleteShelfFetchStrategy.onPageLoad(_:), Strategy);
    v63 = v93;
    (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v93, enum case for ShelfHorizontalScrollTargetBehavior.viewAligned(_:), v88);
    v64 = v95;
    (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v95, enum case for ShelfBackground.none(_:), v92);
    v65 = sub_10000DAF8(&qword_10080A318);
    swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
    v66 = AsyncEvent.init()();
    v98 = _swiftEmptyArrayStorage;
    v67 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
    v68 = sub_10000DAF8(&qword_10080A320);
    v69 = sub_10005E5D0();
    v70 = v96;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v98, v68, v69, v94, v67);
    v71 = type metadata accessor for Shelf(0);
    swift_allocObject(v71, *(unsigned int *)(v71 + 48), *(unsigned __int16 *)(v71 + 52));
    return Shelf.init(id:contentType:placeholderContentType:marker:items:header:url:mergeWhenFetched:batchGroup:fetchStrategy:footerTitle:footerAction:isHidden:isHorizontal:horizontalScrollTargetBehavior:isPersonalized:rowsPerColumn:background:onShouldRemoveModel:removeModelEvents:presentationHints:contentsMetadata:nextPreferredContentRefreshDate:impressionMetrics:refreshUrl:pageChangeMetrics:adIncidents:)(v100, v79, v80, v82, v76, v75, v74, 0, 0, 0, v62, 0, 0, 0, 0, v63, 0, 0, v64,
             v66,
             _swiftEmptyArrayStorage,
             v70,
             v97,
             v58,
             v60,
             v61,
             0,
             0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C909C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t result;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v45 = a3;
  v5 = type metadata accessor for ActionMetrics(0, a2);
  __chkstk_darwin(v5);
  v44 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8((uint64_t *)&unk_10081F850);
  v8 = __chkstk_darwin(v7);
  v43 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchOrigin(0, v8);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  v40 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v46 = 0;
  v47 = 0xE000000000000000;
  v16 = type metadata accessor for Shelf.ContentType(0);
  _print_unlocked<A, B>(_:_:)(a2, &v46, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v17._countAndFlagsBits = 8992;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v48 = v15;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  object = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(object);
  v38 = v47;
  v39 = v46;
  v46 = 0;
  v47 = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(a2, &v46, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v20._countAndFlagsBits = 8992;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v48 = v15;
  v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v22 = v21._object;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v22);
  v23 = v46;
  v24 = v47;
  v26 = type metadata accessor for URL(0, v25);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v14, 1, 1, v26);
  v27 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for SearchOrigin.recents(_:), v42);
  v28 = type metadata accessor for SearchEntity(0);
  v29 = v43;
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v43, 1, 1, v28);
  v31 = v44;
  static ActionMetrics.notInstrumented.getter(v30);
  v32 = type metadata accessor for SearchAction(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v36 = 0;
  v33 = SearchAction.init(title:term:url:origin:source:entity:spellCheckEnabled:excludedTerms:originatingTerm:prefixTerm:guidedSearchTokens:guidedSearchOptimizationTerm:actionMetrics:)(v39, v38, v23, v24, v14, v27, 0, 0, v29, v36, 0, 0, 0, 0, 0, 0, 0, 0, v31);
  v34 = v45;
  v45[3] = v32;
  result = sub_10000E720((unint64_t *)&qword_10081B9C0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchAction, (uint64_t)&protocol conformance descriptor for Action);
  v34[4] = result;
  *v34 = v33;
  return result;
}

id sub_1001C93CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchSettings()
{
  return objc_opt_self(_TtC20ProductPageExtension14SearchSettings);
}

uint64_t sub_1001C9420@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1001C909C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1001C9440()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C9464()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001C9490(uint64_t a1)
{
  uint64_t v1;

  sub_1001C8470(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1001C9498(uint64_t a1)
{
  uint64_t v1;

  sub_1001C84C8(a1, v1);
}

unint64_t sub_1001C94A0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;

  v2 = 0xD000000000000016;
  v3 = sub_10000DAF8(&qword_100814760);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - v7;
  sub_1001CA8A8(a1, (uint64_t)&v13 - v7);
  v9 = type metadata accessor for SearchLandingPageDiscoverSectionTreatment(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v2 = 0xD00000000000001ELL;
  }
  else
  {
    sub_1001CA8A8((uint64_t)v8, (uint64_t)v5);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v5, v9);
    if (v11 == enum case for SearchLandingPageDiscoverSectionTreatment.control(_:))
    {
      v2 = 0x6C6F72746E6F43;
    }
    else if (v11 == enum case for SearchLandingPageDiscoverSectionTreatment.has2Columns(_:))
    {
      v2 = 0x6E6D756C6F432032;
    }
    else if (v11 == enum case for SearchLandingPageDiscoverSectionTreatment.hasSearchIcon(_:))
    {
      v2 = 0x4920686372616553;
    }
    else if (v11 != enum case for SearchLandingPageDiscoverSectionTreatment.has2ColumnsAndSearchIcon(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
      v2 = 0x2064696C61766E49;
    }
  }
  sub_100010F2C((uint64_t)v8, &qword_100814760);
  return v2;
}

void sub_1001C9688()
{
  char *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;

  if (qword_100804D70 != -1)
    swift_once(&qword_100804D70, sub_1001C7568);
  v0 = (char *)off_100814730;
  v1 = *((_QWORD *)off_100814730 + 2);
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSUserDefaults);
    swift_bridgeObjectRetain(v0);
    v3 = v0 + 40;
    do
    {
      v4 = *v3;
      v5 = objc_msgSend(v2, "standardUserDefaults", swift_bridgeObjectRetain(*v3).n128_f64[0]);
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "removeObjectForKey:", v6, swift_bridgeObjectRelease(v4).n128_f64[0]);

      v3 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease(v0);
  }
  v7 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v7, "notify");

}

double sub_1001C97C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t);
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  int64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  double (*v89)(char *, uint64_t, uint64_t, uint64_t);
  char *v90;
  char *v91;
  __n128 v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  double result;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t Strategy;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  id v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t (*v189)(char *, unint64_t, uint64_t);
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  _QWORD *v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;

  v192 = type metadata accessor for SearchHistoryItem(0);
  v144 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v191 = (char *)&v141 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v183 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v182 = (uint64_t *)((char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DAF8(&qword_10080A2F8);
  v5 = __chkstk_darwin(v4);
  v181 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageMetrics(0, v5);
  v8 = __chkstk_darwin(v7);
  v180 = (char *)&v141 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = type metadata accessor for FlowOrigin(0, v8);
  v176 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v179 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for FlowAnimationBehavior(0);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v178 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for FlowPresentationContext(0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v175 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  __chkstk_darwin(v14);
  v193 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v16);
  v172 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for FlowPage(0);
  v167 = *(_QWORD *)(v168 - 8);
  v18 = __chkstk_darwin(v168);
  v169 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for Shelf.ContentsMetadata(0, v18);
  v163 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v166 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for Shelf.PresentationHints(0);
  __chkstk_darwin(v160);
  v164 = (char *)&v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for ShelfBackground(0);
  v157 = *(_QWORD *)(v158 - 8);
  v22 = __chkstk_darwin(v158);
  v161 = (char *)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for ShelfHorizontalScrollTargetBehavior(0, v22);
  v154 = *(_QWORD *)(v155 - 8);
  v24 = __chkstk_darwin(v155);
  v159 = (char *)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strategy = type metadata accessor for IncompleteShelfFetchStrategy(0, v24);
  v152 = *(_QWORD *)(Strategy - 8);
  __chkstk_darwin(Strategy);
  v187 = (char *)&v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v27);
  v194 = (char *)&v141 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v29);
  v186 = (char *)&v141 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v31);
  v156 = (char *)&v141 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v188 = (char *)&v141 - v34;
  v35 = type metadata accessor for ShelfHeader.Configuration(0);
  __chkstk_darwin(v35);
  v147 = (char *)&v141 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10000DAF8(&qword_10080A300);
  __chkstk_darwin(v37);
  v146 = (char *)&v141 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v145 = (char *)&v141 - v40;
  v41 = sub_10000DAF8(&qword_10080A308);
  __chkstk_darwin(v41);
  v43 = (char *)&v141 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v44);
  v46 = (char *)&v141 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Shelf.ContentType(0);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v50 = (char *)&v141 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for UUID(0);
  v52 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v54 = (char *)&v141 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for OnDeviceSearchHistoryManager(0);
  v185 = a1;
  BaseObjectGraph.inject<A>(_:)(&v199, v55, v55);
  v56 = (void *)v199;
  v57 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v148 = swift_allocObject(v57, 40, 7);
  *(_OWORD *)(v148 + 16) = xmmword_100640AE0;
  v58 = UUID.init()((__n128)xmmword_100640AE0);
  v59 = UUID.uuidString.getter(v58);
  v61 = v60;
  v62 = v51;
  v63 = v61;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v62);
  *(_QWORD *)&v195 = v59;
  *((_QWORD *)&v195 + 1) = v63;
  swift_bridgeObjectRetain(v63);
  AnyHashable.init<A>(_:)(&v195, &type metadata for String, &protocol witness table for String);
  v64 = *(void (**)(char *, _QWORD, uint64_t))(v48 + 104);
  v149 = v50;
  v64(v50, enum case for Shelf.ContentType.action(_:), v47);
  v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v150 = v46;
  v65(v46, 1, 1, v47);
  v66 = type metadata accessor for ShelfMarker(0);
  v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56);
  v151 = v43;
  v67(v43, 1, 1, v66);
  v162 = v56;
  v68 = OnDeviceSearchHistoryManager.fetchRecents(limit:)(0);
  v69 = *(_QWORD *)(v68 + 16);
  if (v69)
  {
    v143 = v63;
    v198 = _swiftEmptyArrayStorage;
    sub_1001F14F0(0, v69, 0);
    v70 = (*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
    v142 = v68;
    v71 = v68 + v70;
    v72 = *(_QWORD *)(v144 + 72);
    v73 = v144;
    v189 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v144 + 16);
    v190 = v72;
    v74 = v191;
    do
    {
      v75 = v192;
      v76 = v189(v74, v71, v192);
      v197 = 0;
      v195 = 0u;
      v196 = 0u;
      v77 = SearchHistoryItem.debugDescription.getter(v76);
      v79 = v78;
      v80 = v193;
      static ActionMetrics.notInstrumented.getter(v77);
      v81 = type metadata accessor for ImpressionMetrics(0);
      v82 = v194;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v194, 1, 1, v81);
      v83 = type metadata accessor for Action(0);
      swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
      v84 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v195, v77, v79, 0, 0, v80, v82);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      v85 = v198;
      if ((swift_isUniquelyReferenced_nonNull_native(v198) & 1) == 0)
      {
        sub_1001F14F0(0, v85[2] + 1, 1);
        v85 = v198;
      }
      v87 = v85[2];
      v86 = v85[3];
      if (v87 >= v86 >> 1)
      {
        sub_1001F14F0(v86 > 1, v87 + 1, 1);
        v85 = v198;
      }
      *((_QWORD *)&v196 + 1) = v83;
      v197 = sub_10000E720(&qword_10080A310, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      *(_QWORD *)&v195 = v84;
      v85[2] = v87 + 1;
      sub_100010E24(&v195, (uint64_t)&v85[5 * v87 + 4]);
      v71 += v190;
      --v69;
    }
    while (v69);
    swift_bridgeObjectRelease(v143);
    swift_bridgeObjectRelease(v142);
  }
  else
  {
    swift_bridgeObjectRelease(v63);
    swift_bridgeObjectRelease(v68);
    v85 = _swiftEmptyArrayStorage;
  }
  v88 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v89 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56);
  v90 = v145;
  v89(v145, 1, 1, v88);
  v91 = v146;
  v92.n128_f64[0] = v89(v146, 1, 1, v88);
  v93 = v147;
  ShelfHeader.Configuration.init(eyebrowColor:eyebrowImageColor:titleColor:titleImageColor:subtitleColor:accessoryColor:includeSeparator:includeTrailingArtwork:prefersShelfHeader:)(0, 0, 0, 0, 0, 0, 2, 2, v92, 2);
  v94 = type metadata accessor for ShelfHeader(0);
  swift_allocObject(v94, *(unsigned int *)(v94 + 48), *(unsigned __int16 *)(v94 + 52));
  v192 = ShelfHeader.init(eyebrow:eyebrowArtwork:eyebrowArtworkType:eyebrowAction:eyebrowTrailingArtwork:title:titleArtwork:titleArtworkType:titleAction:subtitle:trailingArtwork:accessoryAction:configuration:)(0, 0, 0, v90, 0, 0, 0x5320746E65636552, 0xEF73656863726165, 0, v91, 0, 0, 0, 0, 0, v93);
  v96 = type metadata accessor for URL(0, v95);
  v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
  v97(v188, 1, 1, v96);
  v191 = (char *)v97;
  v98 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v186, 1, 1, v98);
  v99 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v194, 1, 1, v99);
  v100 = v156;
  v97(v156, 1, 1, v96);
  (*(void (**)(char *, _QWORD, uint64_t))(v152 + 104))(v187, enum case for IncompleteShelfFetchStrategy.onPageLoad(_:), Strategy);
  v101 = v159;
  (*(void (**)(char *, _QWORD, uint64_t))(v154 + 104))(v159, enum case for ShelfHorizontalScrollTargetBehavior.viewAligned(_:), v155);
  v102 = v161;
  (*(void (**)(char *, _QWORD, uint64_t))(v157 + 104))(v161, enum case for ShelfBackground.none(_:), v158);
  v103 = sub_10000DAF8(&qword_10080A318);
  swift_allocObject(v103, *(unsigned int *)(v103 + 48), *(unsigned __int16 *)(v103 + 52));
  v104 = AsyncEvent.init()();
  *(_QWORD *)&v195 = _swiftEmptyArrayStorage;
  v105 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v106 = sub_10000DAF8(&qword_10080A320);
  v107 = sub_10005E5D0();
  v108 = v164;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v195, v106, v107, v160, v105);
  v109 = v166;
  (*(void (**)(char *, _QWORD, uint64_t))(v163 + 104))(v166, enum case for Shelf.ContentsMetadata.none(_:), v165);
  v110 = type metadata accessor for Shelf(0);
  swift_allocObject(v110, *(unsigned int *)(v110 + 48), *(unsigned __int16 *)(v110 + 52));
  v140 = v100;
  v111 = v188;
  v112 = Shelf.init(id:contentType:placeholderContentType:marker:items:header:url:mergeWhenFetched:batchGroup:fetchStrategy:footerTitle:footerAction:isHidden:isHorizontal:horizontalScrollTargetBehavior:isPersonalized:rowsPerColumn:background:onShouldRemoveModel:removeModelEvents:presentationHints:contentsMetadata:nextPreferredContentRefreshDate:impressionMetrics:refreshUrl:pageChangeMetrics:adIncidents:)(&v199, v149, v150, v151, v85, v192, v188, 0, 0, 0, v187, 0, 0, 0, 0, v101, 0, 0, v102,
           v104,
           _swiftEmptyArrayStorage,
           v108,
           v109,
           v186,
           v194,
           v140,
           0,
           0);
  v113 = v148;
  *(_QWORD *)(v148 + 32) = v112;
  *(_QWORD *)&v199 = v113;
  specialized Array._endMutation()(v112);
  v114 = v199;
  v201 = 0;
  v199 = 0u;
  v200 = 0u;
  v115 = v169;
  (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v169, enum case for FlowPage.page(_:), v168);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v191)(v111, 1, 1, v96);
  v116 = type metadata accessor for ReferrerData(0);
  v117 = v172;
  v118 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v172, 1, 1, v116);
  v195 = 0u;
  v196 = 0u;
  v119 = v193;
  static ActionMetrics.notInstrumented.getter(v118);
  v120 = v175;
  (*(void (**)(char *, _QWORD, uint64_t))(v170 + 104))(v175, enum case for FlowPresentationContext.infer(_:), v171);
  v121 = v178;
  (*(void (**)(char *, _QWORD, uint64_t))(v173 + 104))(v178, enum case for FlowAnimationBehavior.infer(_:), v174);
  v122 = v179;
  v123 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v176 + 104))(v179, enum case for FlowOrigin.inapp(_:), v177);
  v124 = static FlowActionPresentation.stackPush.getter(v123);
  v126 = v125;
  v127 = type metadata accessor for FlowAction(0);
  swift_allocObject(v127, *(unsigned int *)(v127 + 48), *(unsigned __int16 *)(v127 + 52));
  v128 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v199, 0, 0, 0, v115, v111, 0, 0, v117, &v195, v119, v120, v121, v122, 0, v124, v126);
  v199 = 0u;
  v200 = 0u;
  v129 = v180;
  static PageMetrics.notInstrumented.getter((__n128)0);
  v130 = type metadata accessor for JSONContext(0);
  v131 = v181;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v181, 1, 1, v130);
  v132 = type metadata accessor for GenericPage(0);
  swift_allocObject(v132, *(unsigned int *)(v132 + 48), *(unsigned __int16 *)(v132 + 52));
  v133 = GenericPage.init(shelves:title:shareAction:presentationOptions:nextPage:isIncomplete:uber:loadCompletedAction:pageRefreshPolicy:pageMetrics:pageRenderEvent:context:)(v114, 0x6948206872616553, 0xED000079726F7473, 0, 0, &v199, 0, 0, 0, 0, v129, 0, v131);
  *((_QWORD *)&v200 + 1) = v132;
  *(_QWORD *)&v199 = v133;
  FlowAction.setPageData(_:)(&v199);
  sub_100010F2C((uint64_t)&v199, &qword_100808F20);
  v134 = v182;
  v135 = v184;
  v136 = v185;
  BaseObjectGraph.inject<A>(_:)(v182, v184, v184);
  swift_retain(v128);
  sub_10032D5D4(v137, v136, (uint64_t)v134);
  swift_release();

  v138 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v183 + 8))(v134, v135, v138);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unint64_t sub_1001CA814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100814768;
  if (!qword_100814768)
  {
    v1 = objc_opt_self(NSUserDefaults);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100814768);
  }
  return result;
}

uint64_t sub_1001CA850()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001CA874(uint64_t a1)
{
  uint64_t v1;

  sub_1001C7D88(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001CA87C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CA8A0()
{
  return sub_1001C806C();
}

uint64_t sub_1001CA8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CA8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CA900(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

int64x2_t sub_1001CA908()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4058C00000000000uLL);
  xmmword_100865C30 = (__int128)result;
  return result;
}

uint64_t sub_1001CA920(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];

  if (a1 < 0)
    return 0;
  v3 = (uint64_t *)(v1 + 32);
  swift_beginAccess(v1 + 32, v11, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  if (!((unint64_t)v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      goto LABEL_4;
    return 0;
  }
  if (v4 < 0)
    v8 = *(_QWORD *)(v1 + 32);
  else
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v4);
  if (v9 <= a1)
    return 0;
LABEL_4:
  result = swift_beginAccess(v3, v10, 32, 0);
  v6 = *v3;
  if ((*v3 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v6);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    v7 = *(_QWORD *)(v6 + 8 * a1 + 32);
    swift_retain(v7);
LABEL_7:
    swift_endAccess(v10);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001CAA1C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  _BYTE v39[24];

  v6 = type metadata accessor for AutomationSemantics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  v14 = type metadata accessor for Artwork.Style(0, v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = Lockup.icon.getter(v15);
  if (result)
  {
    v35 = a2;
    *(_QWORD *)&v19 = swift_beginAccess(v3 + 40, v39, 0, 0).n128_u64[0];
    v20 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(a3, "contentMode", v19), 0, *(double *)(v3 + 40), *(double *)(v3 + 48));
    Artwork.style.getter(v20);
    v21 = ArtworkView.style.setter(v17);
    *(_QWORD *)&v22 = Artwork.contentMode.getter(v21).n128_u64[0];
    v24 = ArtworkLoaderConfig.size.getter(objc_msgSend(a3, "setContentMode:", v23, v22));
    v26 = ArtworkView.imageSize.setter(v24, v25);
    v27 = Artwork.backgroundColor.getter(v26);
    if (!v27)
    {
      v28 = sub_100035178();
      v27 = static UIColor.placeholderBackground.getter(v28);
    }
    ArtworkView.backgroundColor.setter(v27);
    v29 = *(_QWORD *)(v3 + 16);
    if (v29)
    {
      v30 = type metadata accessor for ArtworkView(0);
      v31 = sub_1000116A4();
      swift_retain(v29);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v20, 2, 1, a3, v30, v31);
      swift_release();
    }
    v37 = 0u;
    v38 = 0u;
    memset(v36, 0, sizeof(v36));
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD000000000000015, 0x80000001006929D0, &v37, v36);
    sub_10001282C((uint64_t)v36);
    sub_10001282C((uint64_t)&v37);
    *((_QWORD *)&v38 + 1) = &type metadata for Int;
    *(_QWORD *)&v37 = v35;
    AutomationSemantics.attribute(key:value:)(0x7865646E69, 0xE500000000000000, &v37);
    v32 = *(void (**)(char *, uint64_t))(v7 + 8);
    v32(v9, v6);
    sub_10001282C((uint64_t)&v37);
    UIView.setAutomationSemantics(_:)(v12);
    swift_release();
    v33 = swift_release();
    return ((uint64_t (*)(char *, uint64_t, __n128))v32)(v12, v6, v33);
  }
  return result;
}

uint64_t sub_1001CACAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for RiverCardDataSource()
{
  return objc_opt_self(_TtC20ProductPageExtension19RiverCardDataSource);
}

uint64_t sub_1001CACF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[24];

  swift_beginAccess(v0 + 32, v5, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  if (!((unint64_t)v1 >> 62))
    return *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v1 < 0)
    v4 = *(_QWORD *)(v0 + 32);
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  return v2;
}

double sub_1001CAD70()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(double *)(v0 + 40);
}

uint64_t sub_1001CADA0(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v6[24];

  result = swift_beginAccess(v2 + 40, v6, 1, 0);
  *(double *)(v2 + 40) = a1;
  *(double *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_1001CADE0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1001CAE1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for RiverRowLayoutStyle.icons(_:);
  v3 = type metadata accessor for RiverRowLayoutStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1001CAE60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1001CA920(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001CAE84()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkView(0);
  v3 = static ArtworkView.iconArtworkView.getter();
  if (qword_100804B08 != -1)
    swift_once(&qword_100804B08, sub_100141500);
  v4 = type metadata accessor for Shadow(0);
  v5 = sub_10000EFC4(v4, (uint64_t)qword_100865598);
  v6 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v2, v5, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v2, 0, 1, v4);
  ArtworkView.shadow.setter(v2);
  return v3;
}

uint64_t sub_1001CAF70(uint64_t *a1, uint64_t a2, void *a3)
{
  return sub_1001CAA1C(*a1, a2, a3);
}

double sub_1001CAF78(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  ArtworkView.image.setter(0);
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v5 = type metadata accessor for ArtworkView(0);
    v6 = sub_1000116A4();
    swift_retain(v4);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(a1, 1, v5, v6);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t (*sub_1001CAFF8(uint64_t a1))()
{
  swift_retain(a1);
  return sub_1001CBAD8;
}

uint64_t sub_1001CB028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t result;
  __n128 v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  void *v16;
  _BYTE v18[24];

  v1 = type metadata accessor for TitleEffect(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  TitleEffectUpdate.effect.getter(v3);
  v6 = v0 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect;
  v7 = swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect, v18, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v2 + 40))(v6, v5, v1, v7);
  swift_endAccess(v18);
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView);
  if (result)
  {
    v10 = (void *)result;
    v11 = TitleEffectUpdate.effect.getter(v9);
    v12 = TitleEffectUpdate.isAnimated.getter(v11);
    v13 = TitleEffectUpdate.animationDuration.getter();
    v15 = v14 & 1;
    v16 = (void *)TitleEffectUpdate.timingFunction.getter();
    sub_1000E6DD4((uint64_t)v5, v12 & 1, v13, v15, v16);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_1001CB15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect;
  v2 = type metadata accessor for TitleEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView);
  sub_100010F2C(v0+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeTitleEffectUpdateSubscription, &qword_100814970);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001CB1D4()
{
  return type metadata accessor for ArcadeTitleEffectCollectionElementsObserver(0);
}

uint64_t type metadata accessor for ArcadeTitleEffectCollectionElementsObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_100814860;
  if (!qword_100814860)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeTitleEffectCollectionElementsObserver);
  return result;
}

void sub_1001CB218(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for TitleEffect(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    sub_1001CB2A8(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_1001CB2A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100814870)
  {
    v2 = sub_100010DE0(&qword_10080C0B0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100814870);
  }
}

uint64_t sub_1001CB308(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t Strong;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  _QWORD v61[3];
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v2 = sub_10000DAF8((uint64_t *)&unk_100815FD0);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TitleEffect(0);
  v58 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  __chkstk_darwin(v5);
  v56 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - v8;
  v10 = sub_10000DAF8(&qword_100814970);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  v19 = sub_10000DAF8(&qword_10080C0B0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61[0] = a1;
  v23 = sub_1001CB978();
  v24 = a1;
  v25 = sub_10000DAF8(&qword_100814978);
  if (swift_dynamicCast(v62, v61, v23, v25, 6))
  {
    v55 = v12;
    v53 = v4;
    v54 = v9;
    sub_100010E24(v62, (uint64_t)v64);
    v26 = v57;
    v27 = v57
        + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeTitleEffectUpdateSubscription;
    swift_beginAccess(v57+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeTitleEffectUpdateSubscription, v61, 0, 0);
    sub_1001CB9B4(v27, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_100010F2C((uint64_t)v18, &qword_100814970);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
      v29 = v65;
      v30 = v66;
      sub_100010F08(v64, v65);
      dispatch thunk of PageTitleEffectUpdateProviding.onUpdatePageTitleEffect.getter(v29, v30);
      SyncEvent.removeObserver(_:)(v22);
      v31 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v31);
    }
    v32 = (uint64_t)v55;
    v33 = v65;
    v34 = v66;
    sub_100010F08(v64, v65);
    dispatch thunk of PageTitleEffectUpdateProviding.onUpdatePageTitleEffect.getter(v33, v34);
    v35 = sub_10000DAF8(&qword_100814988);
    v36 = sub_1001CB9FC();
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v62, v35, v36);
    v37 = type metadata accessor for ArcadeTitleEffectCollectionElementsObserver(0);
    EventEmitter.addObserver<A>(on:target:method:)(v62, v26, sub_1001CAFF8, 0, v35, v37, v36);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
    sub_1001CBA48((uint64_t)v15, v32);
    swift_beginAccess(v27, v62, 33, 0);
    sub_1001CBA90(v32, v27);
    swift_endAccess(v62);
    v38 = v65;
    v39 = v66;
    sub_100010F08(v64, v65);
    v40 = (uint64_t)v53;
    dispatch thunk of PageTitleEffectUpdateProviding.currentTitleEffect.getter(v38, v39);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v40, 1, v59);
    v42 = v54;
    if (v41 == 1)
    {
      v43 = v26
          + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect;
      v44 = swift_beginAccess(v26+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect, v62, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v58 + 16))(v42, v43, v59, v44);
      sub_100010F2C(v40, (uint64_t *)&unk_100815FD0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v54, v40, v59);
    }
    v45 = v26 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect;
    v46 = swift_beginAccess(v26+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect, v60, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v58 + 40))(v45, v42, v59, v46);
    swift_endAccess(v60);
    Strong = swift_unknownObjectWeakLoadStrong(v26+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView);
    if (Strong)
    {
      v48 = (void *)Strong;
      v50 = v58;
      v49 = v59;
      v51 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v56, v45, v59);
      sub_1000E6DD4(v51, 0, 0, 1, 0);

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
    }
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    return sub_100010F2C((uint64_t)v62, &qword_100814980);
  }
}

void sub_1001CB7F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  id v12;
  char v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  id v17;
  _BYTE v18[24];

  v2 = v1;
  v4 = type metadata accessor for TitleEffect(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for ArcadeHeaderView(0);
  v9 = swift_dynamicCastClass(a1, v8);
  if (v9)
  {
    v10 = v9;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView);
    v17 = a1;
    if (Strong
      && (v12 = Strong,
          v13 = static NSObject.== infix(_:_:)(v12, v10),
          v12,
          v12,
          (v13 & 1) != 0))
    {

    }
    else
    {
      v14 = v2
          + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect;
      v15 = swift_beginAccess(v2+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_lastKnownTitleEffect, v18, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v14, v4, v15);
      sub_1000E6DD4((uint64_t)v7, 0, 0, 1, 0);
      v16.n128_f64[0] = (*(double (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_unknownObjectWeakAssign(v16);

    }
  }
}

unint64_t sub_1001CB978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100813200;
  if (!qword_100813200)
  {
    v1 = objc_opt_self(UICollectionViewCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100813200);
  }
  return result;
}

uint64_t sub_1001CB9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001CB9FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100814990;
  if (!qword_100814990)
  {
    v1 = sub_100010DE0(&qword_100814988);
    result = swift_getWitnessTable(&protocol conformance descriptor for SyncEvent<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100814990);
  }
  return result;
}

uint64_t sub_1001CBA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CBA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CBADC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (!v1
    || (v9 = v1,
        v2 = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr),
        v3 = v1,
        v4 = sub_10000DAF8((uint64_t *)&unk_100814A08),
        (swift_dynamicCast(&v10, &v9, v2, v4, 6) & 1) == 0))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    goto LABEL_6;
  }
  v5 = *((_QWORD *)&v11 + 1);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_6:
    sub_100010F2C((uint64_t)&v10, (uint64_t *)&unk_1008149F8);
    return 0;
  }
  v6 = v12;
  sub_100010F08(&v10, *((uint64_t *)&v11 + 1));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v10);
  return v7;
}

uint64_t sub_1001CBBC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (!v1
    || (v9 = v1,
        v2 = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr),
        v3 = v1,
        v4 = sub_10000DAF8((uint64_t *)&unk_100814A08),
        (swift_dynamicCast(&v10, &v9, v2, v4, 6) & 1) == 0))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    goto LABEL_6;
  }
  v5 = *((_QWORD *)&v11 + 1);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_6:
    sub_100010F2C((uint64_t)&v10, (uint64_t *)&unk_1008149F8);
    return 0;
  }
  v6 = v12;
  sub_100010F08(&v10, *((uint64_t *)&v11 + 1));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v10);
  return v7;
}

id sub_1001CBCA4(void *a1, id a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  __n128 v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  int v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  void *v73;
  id v74;
  Class isa;
  id v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  char *v82;
  id v83;
  uint64_t v84;
  void *v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;

  v4 = v3;
  v8 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v78 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v78 - v15;
  v84 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v21 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AppPromotionPresentable);
  if (v21)
    v22 = v21;
  else
    v22 = 0;
  if (v21)
    v23 = a1;
  else
    v23 = 0;
  if (v23)
  {
    v82 = v10;
    v24 = (_QWORD *)(v4
                   + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
    v25 = *(void **)(v4
                   + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
    *v24 = v23;
    v24[1] = v22;
    v83 = a1;

    swift_unknownObjectWeakAssign(v26);
    v85 = a3;
    v27 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    v28 = a3;
    v29 = sub_10000DAF8(&qword_100814A18);
    v30 = byte_100864FE0 + 32;
    if (!swift_dynamicCast(&v86, &v85, v27, v29, 6))
    {
      v88 = 0;
      v86 = 0u;
      v87 = 0u;
      sub_100010F2C((uint64_t)&v86, (uint64_t *)&unk_100814A20);
      v40 = 0;
      v44 = v83;
      goto LABEL_39;
    }
    v31 = *((_QWORD *)&v87 + 1);
    v32 = v88;
    sub_100010F08(&v86, *((uint64_t *)&v87 + 1));
    v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v86);
    if (!v33)
    {
      v40 = 0;
      goto LABEL_38;
    }
    v81 = a2;
    v34 = objc_msgSend(v33, "visibleViewController");
    if (v34)
    {
      v35 = v34;
      v36 = type metadata accessor for SearchViewController(0);
      v37 = swift_dynamicCastClass(v35, v36);
      if (v37)
      {
        v38 = v37;

        v39 = (char *)objc_retain(*(id *)(v38
                                        + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController));

        v40 = *(void **)&v39[OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSectionViewController];
        v41 = v40;

        if (v40)
        {
          v42 = v41;
          goto LABEL_21;
        }
        goto LABEL_28;
      }

    }
    v41 = objc_msgSend(v33, "visibleViewController");

    if (v41)
    {
      v45 = objc_opt_self(UICollectionViewController);
      v46 = swift_dynamicCastObjCClass(v41, v45);
      if (v46)
      {
        v42 = (void *)v46;
        v40 = (void *)v46;
LABEL_21:
        a2 = v81;
        v47 = v41;
        swift_unknownObjectWeakAssign(v48);
        v81 = v42;
        v49 = objc_msgSend(v42, "collectionView");
        v50 = v49;
        if (v49 && (v51 = objc_msgSend(v49, "indexPathsForSelectedItems")) != 0)
        {
          v52 = v51;
          v80 = v50;
          v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v84);

          if (*(_QWORD *)(v53 + 16))
          {
            v54 = v84;
            (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v16, v53 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v84);
            v55 = 0;
          }
          else
          {
            v55 = 1;
            v54 = v84;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v55, 1, v54);
          v56 = swift_bridgeObjectRelease(v53);
          v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v16, 1, v54, v56);
          v50 = v80;
          if (v57 != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, v54);
            v74 = v50;
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v76 = objc_msgSend(v74, "cellForItemAtIndexPath:", isa);

            v77 = *(void **)(v4
                           + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
            *(_QWORD *)(v4
                      + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell) = v76;

            v30 = byte_100864FE0 + 32;
            (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v84);
            v44 = v83;
            goto LABEL_39;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, 1, 1, v84);
        }
        sub_100010F2C((uint64_t)v16, (uint64_t *)&unk_1008102F0);
        v58 = *(void **)(v4
                       + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_originatingView);
        if (v58)
        {
          v80 = v50;
          v59 = v58;
          v79 = v59;
          while (1)
          {
            v60 = objc_opt_self(UICollectionViewCell);
            v61 = swift_dynamicCastObjCClass(v59, v60);
            if (v61)
              break;
            v62 = objc_msgSend(v59, "superview");

            v59 = v62;
            if (!v62)
            {

              goto LABEL_37;
            }
          }
          v30 = &byte_100864FE0[32];
          v73 = *(void **)(v4
                         + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
          *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell) = v61;

          v44 = v83;
LABEL_39:
          v63 = *(void **)(v4 + *((_QWORD *)v30 + 394));
          if (!v63)
          {
LABEL_49:
            v43 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppPromotionDetailPagePresentationController()), "initWithPresentedViewController:presentingViewController:", v23, a2);

            return v43;
          }
          if (v40)
          {
            v64 = v63;
            v65 = objc_msgSend(v40, "collectionView");
            if (v65)
            {
              v66 = v65;
              v67 = objc_msgSend(v65, "indexPathForCell:", v64);

              if (v67)
              {
                v68 = (uint64_t)v82;
                static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v67);

                v69 = 0;
              }
              else
              {
                v69 = 1;
                v68 = (uint64_t)v82;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v68, v69, 1, v84);
              sub_1001CDB00(v68, (uint64_t)v13);
              goto LABEL_48;
            }
          }
          else
          {
            v70 = v63;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v84);
LABEL_48:
          v71 = v4 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath;
          swift_beginAccess(v4 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath, &v86, 33, 0);
          sub_100125F10((uint64_t)v13, v71);
          swift_endAccess(&v86);

          goto LABEL_49;
        }

LABEL_37:
LABEL_38:
        v44 = v83;
        v30 = &byte_100864FE0[32];
        goto LABEL_39;
      }

    }
    v40 = 0;
LABEL_28:
    a2 = v81;
    goto LABEL_38;
  }
  return 0;
}

void sub_1001CC3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  CGFloat m44;
  void *v16;
  void *v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  CGFloat m24;
  CGFloat m23;
  CGFloat m22;
  CGFloat m21;
  CGFloat m14;
  CGFloat m13;
  CGFloat m12;
  CGFloat m11;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;

  v4 = (void *)sub_1001CBADC();
  if (v4
    && (v5 = v4,
        v6 = objc_msgSend(v4, "layer"),
        v5,
        v7 = objc_msgSend(v6, "presentationLayer"),
        v6,
        v7))
  {
    objc_msgSend(v7, "transform");
    m12 = v39;
    m11 = v38;
    m14 = v41;
    m13 = v40;
    m22 = v43;
    m21 = v42;
    m31 = v46;
    m24 = v45;
    m23 = v44;
    m32 = v47;
    m33 = v48;
    m34 = v49;
    m41 = v50;
    m42 = v51;
    m43 = v52;
    m44 = v53;

  }
  else
  {
    v16 = (void *)sub_1001CBADC();
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "layer");

      objc_msgSend(v18, "transform");
      m12 = v39;
      m11 = v38;
      m14 = v41;
      m13 = v40;
      m22 = v43;
      m21 = v42;
      m31 = v46;
      m24 = v45;
      m23 = v44;
      m32 = v47;
      m33 = v48;
      m34 = v49;
      m41 = v50;
      m42 = v51;
      m43 = v52;
      m44 = v53;

    }
    else
    {
      m12 = CATransform3DIdentity.m12;
      m11 = CATransform3DIdentity.m11;
      m14 = CATransform3DIdentity.m14;
      m13 = CATransform3DIdentity.m13;
      m22 = CATransform3DIdentity.m22;
      m21 = CATransform3DIdentity.m21;
      m31 = CATransform3DIdentity.m31;
      m24 = CATransform3DIdentity.m24;
      m23 = CATransform3DIdentity.m23;
      m32 = CATransform3DIdentity.m32;
      m33 = CATransform3DIdentity.m33;
      m34 = CATransform3DIdentity.m34;
      m41 = CATransform3DIdentity.m41;
      m42 = CATransform3DIdentity.m42;
      m43 = CATransform3DIdentity.m43;
      m44 = CATransform3DIdentity.m44;
    }
  }
  v19 = *(double *)(a3
                  + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
  if (v19 != 0.0)
  {
    v20 = *(_QWORD *)(a3
                    + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController
                    + 8);
    ObjectType = swift_getObjectType();
    v38 = v19;
    v22 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 8) + 8))(ObjectType);
    v23 = objc_msgSend(v22, "layer");

    v38 = m11;
    v39 = m12;
    v40 = m13;
    v41 = m14;
    v42 = m21;
    v43 = m22;
    v44 = m23;
    v45 = m24;
    v46 = m31;
    v47 = m32;
    v48 = m33;
    v49 = m34;
    v50 = m41;
    v51 = m42;
    v52 = m43;
    v53 = m44;
    objc_msgSend(v23, "setTransform:", &v38);

  }
  v24 = (void *)sub_1001CBADC();
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "layer");

    objc_msgSend(v26, "removeAllAnimations");
  }
  v27 = (void *)sub_1001CBADC();
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "layer");

    v38 = m11;
    v39 = m12;
    v40 = m13;
    v41 = m14;
    v42 = m21;
    v43 = m22;
    v44 = m23;
    v45 = m24;
    v46 = m31;
    v47 = m32;
    v48 = m33;
    v49 = m34;
    v50 = m41;
    v51 = m42;
    v52 = m43;
    v53 = m44;
    objc_msgSend(v29, "setTransform:", &v38);

  }
}

void sub_1001CC6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v4 = *(void **)(a3 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (v4
    && (*(_QWORD *)&v26 = *(_QWORD *)(a3
                                    + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell),
        v5 = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr),
        v6 = v4,
        v7 = sub_10000DAF8((uint64_t *)&unk_100814A08),
        (swift_dynamicCast(&v34, &v26, v5, v7, 6) & 1) != 0))
  {
    v8 = *((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v9 = v36;
      sub_100010F08(&v34, *((uint64_t *)&v35 + 1));
      v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v34);
      v11 = objc_msgSend(v10, "layer", (_QWORD)v26);

      v12 = *(_OWORD *)&CATransform3DIdentity.m13;
      v26 = *(_OWORD *)&CATransform3DIdentity.m11;
      v27 = v12;
      v13 = *(_OWORD *)&CATransform3DIdentity.m23;
      v28 = *(_OWORD *)&CATransform3DIdentity.m21;
      v29 = v13;
      v14 = *(_OWORD *)&CATransform3DIdentity.m33;
      v30 = *(_OWORD *)&CATransform3DIdentity.m31;
      v31 = v14;
      v15 = *(_OWORD *)&CATransform3DIdentity.m43;
      v32 = *(_OWORD *)&CATransform3DIdentity.m41;
      v33 = v15;
      objc_msgSend(v11, "setTransform:", &v26);

      goto LABEL_7;
    }
  }
  else
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  sub_100010F2C((uint64_t)&v34, (uint64_t *)&unk_1008149F8);
LABEL_7:
  v16 = a3
      + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController;
  v17 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
  if (v17)
  {
    v18 = *(_QWORD *)(v16 + 8);
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v26 = v17;
    v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 8) + 8))(ObjectType);
    v21 = objc_msgSend(v20, "layer");

    v22 = *(_OWORD *)&CATransform3DIdentity.m13;
    v26 = *(_OWORD *)&CATransform3DIdentity.m11;
    v27 = v22;
    v23 = *(_OWORD *)&CATransform3DIdentity.m23;
    v28 = *(_OWORD *)&CATransform3DIdentity.m21;
    v29 = v23;
    v24 = *(_OWORD *)&CATransform3DIdentity.m33;
    v30 = *(_OWORD *)&CATransform3DIdentity.m31;
    v31 = v24;
    v25 = *(_OWORD *)&CATransform3DIdentity.m43;
    v32 = *(_OWORD *)&CATransform3DIdentity.m41;
    v33 = v25;
    objc_msgSend(v21, "setTransform:", &v26);

  }
}

void sub_1001CC8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);
  id v7;

  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(a3
                  + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
    if (v3)
    {
      v4 = *(_QWORD *)(a3
                     + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController
                     + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(a3+ OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController), a2);
      v6 = *(void (**)(uint64_t, uint64_t))(v4 + 48);
      v7 = v3;
      v6(ObjectType, v4);

    }
  }
}

char *sub_1001CC9A8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  Class isa;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  void *v66;
  objc_class *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  double *v71;
  id v72;
  id v73;
  char *v74;
  void *v75;
  objc_class *v76;
  char *v77;
  char *v78;
  char *v79;
  id v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  char *v84;
  char *v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  id v93;
  char v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  char *v101;
  char v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v107;
  void *v108;
  double v109;
  id v110;
  char v111[24];
  objc_super v112;
  void *v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  objc_super v117;

  v2 = v1;
  v4 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController]);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "collectionView");

    if (v14)
    {
      v15 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath];
      swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath], v111, 0, 0);
      sub_1000BBDA0(v15, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {

        sub_100010F2C((uint64_t)v6, (uint64_t *)&unk_1008102F0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v17 = objc_msgSend(v14, "cellForItemAtIndexPath:", isa);

        if (v17)
        {
          v18 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell];
          *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell] = v17;

          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

        }
      }
    }
  }
  v19 = OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell;
  v20 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell];
  if (!v20)
    goto LABEL_24;
  v21 = swift_unknownObjectWeakLoadStrong(v11);
  if (!v21)
    goto LABEL_24;
  v22 = (void *)v21;
  v23 = v20;
  v24 = sub_1001CBADC();
  if (v24)
  {
    v25 = (void *)v24;
    v26 = sub_1001CBBC0();
    if (!v26)
    {

      goto LABEL_24;
    }
    v27 = (void *)v26;
    v28 = *(void **)&v2[v19];
    v110 = v23;
    if (v28
      && (v113 = v28,
          *(double *)&v29 = COERCE_DOUBLE(sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr)), v30 = v28, v31 = sub_10000DAF8((uint64_t *)&unk_100814A08), (swift_dynamicCast(&v114, &v113, v29, v31, 6) & 1) != 0))
    {
      v109 = *(double *)&v29;
      v32 = *((_QWORD *)&v115 + 1);
      if (*((_QWORD *)&v115 + 1))
      {
        v108 = v27;
        v33 = v116;
        sub_100010F08(&v114, *((uint64_t *)&v115 + 1));
        v34 = (*(double (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33);
        v36 = v35;
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v114);
        v37 = *(void **)&v2[v19];
        if (v37
          && (v113 = *(void **)&v2[v19],
              v38 = v37,
              (swift_dynamicCast(&v114, &v113, *(_QWORD *)&v109, v31, 6) & 1) != 0))
        {
          v39 = *((_QWORD *)&v115 + 1);
          v40 = v108;
          if (*((_QWORD *)&v115 + 1))
          {
            v41 = v116;
            sub_100010F08(&v114, *((uint64_t *)&v115 + 1));
            v109 = (*(double (**)(uint64_t, uint64_t))(v41 + 32))(v39, v41);
            v107 = v42;
            v44 = v43;
            v46 = v45;
            _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v114);
            v47 = v110;
            objc_msgSend(v110, "bounds");
            v49 = v48;
            v51 = v50;
            v53 = v52;
            v55 = v54;
            v56 = objc_msgSend(v22, "view");
            objc_msgSend(v47, "convertRect:toView:", v56, v49, v51, v53, v55);
            v58 = v57;
            v60 = v59;

            objc_msgSend(v40, "bounds");
            objc_msgSend(v40, "convertRect:toCoordinateSpace:", v47);
            v62 = v34 + v58 + v61;
            v64 = v36 + v60 + v63;
            v65 = swift_unknownObjectWeakLoadStrong(v11);
            v66 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController];
            v67 = (objc_class *)type metadata accessor for AppPromotionDetailPageCloseAnimation();
            v68 = (char *)objc_allocWithZone(v67);
            *(_QWORD *)&v68[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCardView] = v25;
            *(_QWORD *)&v68[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController] = v65;
            v69 = &v68[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toBounds];
            v70 = v107;
            *(double *)v69 = v109;
            *((_QWORD *)v69 + 1) = v70;
            *((_QWORD *)v69 + 2) = v44;
            *((_QWORD *)v69 + 3) = v46;
            v69[32] = 0;
            v71 = (double *)&v68[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCenter];
            *v71 = v62;
            v71[1] = v64;
            *((_BYTE *)v71 + 16) = 0;
            *(_QWORD *)&v68[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_detailPageViewController] = v66;
            v112.receiver = v68;
            v112.super_class = v67;
            v72 = v66;
            v73 = v25;
            v74 = (char *)objc_msgSendSuper2(&v112, "init");

            goto LABEL_25;
          }
        }
        else
        {
          v116 = 0;
          v114 = 0u;
          v115 = 0u;
          v40 = v108;
        }

        goto LABEL_22;
      }
    }
    else
    {
      v116 = 0;
      v114 = 0u;
      v115 = 0u;
    }

LABEL_22:
    sub_100010F2C((uint64_t)&v114, (uint64_t *)&unk_1008149F8);
    goto LABEL_24;
  }

LABEL_24:
  v75 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController];
  v76 = (objc_class *)type metadata accessor for AppPromotionDetailPageCloseAnimation();
  v77 = (char *)objc_allocWithZone(v76);
  *(_QWORD *)&v77[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCardView] = 0;
  *(_QWORD *)&v77[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController] = 0;
  v78 = &v77[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toBounds];
  *(_OWORD *)v78 = 0u;
  *((_OWORD *)v78 + 1) = 0u;
  v78[32] = 1;
  v79 = &v77[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCenter];
  *(_QWORD *)v79 = 0;
  *((_QWORD *)v79 + 1) = 0;
  v79[16] = 1;
  *(_QWORD *)&v77[OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_detailPageViewController] = v75;
  v117.receiver = v77;
  v117.super_class = v76;
  v80 = v75;
  v74 = (char *)objc_msgSendSuper2(&v117, "init");
LABEL_25:
  v81 = swift_allocObject(&unk_100743F10, 24, 7);
  *(_QWORD *)(v81 + 16) = v2;
  v82 = &v74[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks];
  swift_beginAccess(&v74[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks], &v114, 33, 0);
  v83 = *(_QWORD **)v82;
  v84 = v74;
  v85 = v2;
  swift_retain(v81);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v83);
  *(_QWORD *)v82 = v83;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v83 = sub_1003DB0E4(0, v83[2] + 1, 1, v83);
    *(_QWORD *)v82 = v83;
  }
  v88 = v83[2];
  v87 = v83[3];
  if (v88 >= v87 >> 1)
  {
    v83 = sub_1003DB0E4((_QWORD *)(v87 > 1), v88 + 1, 1, v83);
    *(_QWORD *)v82 = v83;
  }
  v83[2] = v88 + 1;
  v89 = &v83[3 * v88];
  v89[4] = sub_1001CDAC8;
  v89[5] = v81;
  *((_BYTE *)v89 + 48) = 0;
  swift_endAccess(&v114);

  swift_release();
  v90 = swift_allocObject(&unk_100743F38, 24, 7);
  *(_QWORD *)(v90 + 16) = a1;
  swift_beginAccess(v82, &v114, 33, 0);
  v91 = *(_QWORD **)v82;
  v92 = v84;
  v93 = a1;
  swift_retain(v90);
  v94 = swift_isUniquelyReferenced_nonNull_native(v91);
  *(_QWORD *)v82 = v91;
  if ((v94 & 1) == 0)
  {
    v91 = sub_1003DB0E4(0, v91[2] + 1, 1, v91);
    *(_QWORD *)v82 = v91;
  }
  v96 = v91[2];
  v95 = v91[3];
  if (v96 >= v95 >> 1)
  {
    v91 = sub_1003DB0E4((_QWORD *)(v95 > 1), v96 + 1, 1, v91);
    *(_QWORD *)v82 = v91;
  }
  v91[2] = v96 + 1;
  v97 = &v91[3 * v96];
  v97[4] = sub_1001CDAD0;
  v97[5] = v90;
  *((_BYTE *)v97 + 48) = 1;
  swift_endAccess(&v114);

  swift_release();
  v98 = swift_allocObject(&unk_100743F60, 24, 7);
  *(_QWORD *)(v98 + 16) = v85;
  swift_beginAccess(v82, &v114, 33, 0);
  v99 = *(_QWORD **)v82;
  v100 = v92;
  v101 = v85;
  swift_retain(v98);
  v102 = swift_isUniquelyReferenced_nonNull_native(v99);
  *(_QWORD *)v82 = v99;
  if ((v102 & 1) == 0)
  {
    v99 = sub_1003DB0E4(0, v99[2] + 1, 1, v99);
    *(_QWORD *)v82 = v99;
  }
  v104 = v99[2];
  v103 = v99[3];
  if (v104 >= v103 >> 1)
  {
    v99 = sub_1003DB0E4((_QWORD *)(v103 > 1), v104 + 1, 1, v99);
    *(_QWORD *)v82 = v99;
  }
  v99[2] = v104 + 1;
  v105 = &v99[3 * v104];
  v105[4] = sub_1001CDAD8;
  v105[5] = v98;
  *((_BYTE *)v105 + 48) = 2;
  swift_endAccess(&v114);

  swift_release();
  return v100;
}

void sub_1001CD248(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_100743F88, 24, 7);
  *(_QWORD *)(v5 + 16) = a3;
  v8[4] = sub_1001CDAE0;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000924A0;
  v8[3] = &unk_100743FA0;
  v6 = _Block_copy(v8);
  v7 = a3;
  swift_release();
  objc_msgSend(v4, "animateWithDuration:animations:", v6, 0.1);
  _Block_release(v6);
}

void sub_1001CD314(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  id v6;

  v2 = *(void **)(a1
                + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
  if (v2)
  {
    v3 = *(_QWORD *)(a1
                   + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController
                   + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(a1+ OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController), a2);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v6 = v2;
    v5(1, ObjectType, v3);

  }
}

void sub_1001CD3A8(int a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = objc_msgSend(a3, "_existingPresentationControllerImmediate:effective:", 1, 1);
  if (v3)
  {
    v11 = v3;
    v4 = type metadata accessor for AppPromotionDetailPagePresentationController();
    v5 = swift_dynamicCastClass(v11, v4);
    if (v5)
    {
      v6 = v5
         + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal;
      swift_beginAccess(v5 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal, v15, 0, 0);
      if (*(_QWORD *)(v6 + 24))
      {
        sub_10000EF80(v6, (uint64_t)v12);
        v7 = v13;
        v8 = v14;
        sub_100010F08(v12, v13);
        v9 = *(void (**)(uint64_t, uint64_t))(v8 + 24);
        v10 = v11;
        v9(v7, v8);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);

      }
      else
      {

      }
    }
    else
    {

    }
  }
}

double sub_1001CD4B4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *Strong;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  *(_QWORD *)&result = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
    return result;
  v13 = OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell;
  v14 = *(void **)(a3 + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (!v14
    || (v44 = *(_QWORD *)(a3
                        + OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell),
        v15 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr),
        v16 = v14,
        v17 = sub_10000DAF8((uint64_t *)&unk_100814A08),
        (swift_dynamicCast(&v45, &v44, v15, v17, 6) & 1) == 0))
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    goto LABEL_11;
  }
  v18 = *((_QWORD *)&v46 + 1);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_11:
    sub_100010F2C((uint64_t)&v45, (uint64_t *)&unk_1008149F8);
    goto LABEL_12;
  }
  v43 = v15;
  v19 = v47;
  sub_100010F08(&v45, *((uint64_t *)&v46 + 1));
  v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v45);
  v21 = (void *)sub_1001CBBC0();
  if (!v21)
  {

    goto LABEL_12;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", v20);
  v23 = *(void **)(a3 + v13);
  if (!v23
    || (v44 = *(_QWORD *)(a3 + v13), v24 = v23, (swift_dynamicCast(&v45, &v44, v43, v17, 6) & 1) == 0))
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    goto LABEL_24;
  }
  v25 = *((_QWORD *)&v46 + 1);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_24:

    goto LABEL_11;
  }
  v26 = v47;
  sub_100010F08(&v45, *((uint64_t *)&v46 + 1));
  v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
  objc_msgSend(v27, "setNeedsLayout");

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v45);
LABEL_12:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3+ OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController);
  if (Strong)
  {
    v29 = Strong;
    v30 = objc_msgSend(Strong, "collectionView");

    if (v30)
    {
      v31 = objc_msgSend(v30, "indexPathsForSelectedItems");
      if (v31)
      {
        v32 = v31;
        v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v5);

        v34 = *(_QWORD *)(v33 + 16);
        if (v34)
        {
          v42 = v33;
          v43 = v30;
          v35 = v33 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v36 = *(_QWORD *)(v6 + 72);
          v37 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
          while (1)
          {
            v37(v12, v35, v5);
            v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
            v38(v12, 0, 1, v5);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
              break;
            (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            objc_msgSend(v43, "deselectItemAtIndexPath:animated:", isa, 0);

            v35 += v36;
            if (!--v34)
            {
              v33 = v42;
              v30 = v43;
              goto LABEL_22;
            }
          }

          v40 = v42;
        }
        else
        {
          v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_22:
          v38(v12, 1, 1, v5);

          v40 = v33;
        }
        *(_QWORD *)&result = swift_bridgeObjectRelease(v40).n128_u64[0];
      }
      else
      {

      }
    }
  }
  return result;
}

id sub_1001CD8CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppPromotionDetailPageTransitioningDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001CD980()
{
  return type metadata accessor for AppPromotionDetailPageTransitioningDelegate(0);
}

uint64_t type metadata accessor for AppPromotionDetailPageTransitioningDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_1008149E8;
  if (!qword_1008149E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionDetailPageTransitioningDelegate);
  return result;
}

void sub_1001CD9C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = &unk_100650B38;
  v4[2] = &unk_100650B50;
  v4[3] = &unk_100650B50;
  sub_1001CDA50(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = "\b";
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_1001CDA50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100816BE0)
  {
    v2 = type metadata accessor for IndexPath(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100816BE0);
  }
}

uint64_t sub_1001CDAA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001CDAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001CD248(a1, a2, *(void **)(v2 + 16));
}

void sub_1001CDAD0(int a1, int a2)
{
  uint64_t v2;

  sub_1001CD3A8(a1, a2, *(id *)(v2 + 16));
}

double sub_1001CDAD8(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1001CD4B4(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1001CDAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001CD314(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1001CDAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001CDAF8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001CDB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_1001CDB48()
{
  char *v0;
  void *v1;
  double v2;
  uint64_t Strong;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidY;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  double *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  _BYTE v57[24];
  objc_super v58;
  CGRect v59;
  CGRect v60;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell];
  v2 = 0.0;
  if (v1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController]);
    if (Strong)
    {
      v4 = (void *)Strong;
      v5 = v1;
      v6 = sub_1001CBADC();
      if (v6)
      {
        v7 = (void *)v6;
        objc_msgSend(v5, "bounds");
        v9 = v8;
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v16 = objc_msgSend(v4, "view");
        objc_msgSend(v5, "convertRect:toView:", v16, v9, v11, v13, v15);
        v18 = v17;
        v20 = v19;

        objc_msgSend(v7, "bounds");
        objc_msgSend(v7, "convertRect:toCoordinateSpace:", v5);
        x = v59.origin.x;
        y = v59.origin.y;
        width = v59.size.width;
        height = v59.size.height;
        v2 = v18 + CGRectGetMidX(v59);
        v60.origin.x = x;
        v60.origin.y = y;
        v60.size.width = width;
        v60.size.height = height;
        MidY = CGRectGetMidY(v60);

        v26 = 0;
        v27 = v20 + MidY;
        goto LABEL_7;
      }

    }
  }
  v26 = 1;
  v27 = 0.0;
LABEL_7:
  v28 = sub_1001CBADC();
  v29 = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController]);
  v30 = (objc_class *)type metadata accessor for AppPromotionPageOpenAnimation();
  v31 = (char *)objc_allocWithZone(v30);
  *(_QWORD *)&v31[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionPageOpenAnimation_fromCardView] = v28;
  *(_QWORD *)&v31[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionPageOpenAnimation_fromCollectionViewController] = v29;
  v32 = (double *)&v31[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionPageOpenAnimation_fromCenter];
  *v32 = v2;
  v32[1] = v27;
  *((_BYTE *)v32 + 16) = v26;
  v58.receiver = v31;
  v58.super_class = v30;
  v33 = (char *)objc_msgSendSuper2(&v58, "init");
  v34 = swift_allocObject(&unk_100743FD8, 24, 7);
  *(_QWORD *)(v34 + 16) = v0;
  v35 = &v33[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks];
  swift_beginAccess(&v33[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks], v57, 33, 0);
  v36 = *(_QWORD **)v35;
  v37 = v0;
  swift_retain(v34);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
  *(_QWORD *)v35 = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v36 = sub_1003DB0E4(0, v36[2] + 1, 1, v36);
    *(_QWORD *)v35 = v36;
  }
  v40 = v36[2];
  v39 = v36[3];
  if (v40 >= v39 >> 1)
  {
    v36 = sub_1003DB0E4((_QWORD *)(v39 > 1), v40 + 1, 1, v36);
    *(_QWORD *)v35 = v36;
  }
  v36[2] = v40 + 1;
  v41 = &v36[3 * v40];
  v41[4] = sub_1001CDFCC;
  v41[5] = v34;
  *((_BYTE *)v41 + 48) = 0;
  swift_endAccess(v57);
  swift_release();
  v42 = swift_allocObject(&unk_100744000, 24, 7);
  *(_QWORD *)(v42 + 16) = v37;
  swift_beginAccess(v35, v57, 33, 0);
  v43 = *(_QWORD **)v35;
  v44 = v37;
  swift_retain(v42);
  v45 = swift_isUniquelyReferenced_nonNull_native(v43);
  *(_QWORD *)v35 = v43;
  if ((v45 & 1) == 0)
  {
    v43 = sub_1003DB0E4(0, v43[2] + 1, 1, v43);
    *(_QWORD *)v35 = v43;
  }
  v47 = v43[2];
  v46 = v43[3];
  if (v47 >= v46 >> 1)
  {
    v43 = sub_1003DB0E4((_QWORD *)(v46 > 1), v47 + 1, 1, v43);
    *(_QWORD *)v35 = v43;
  }
  v43[2] = v47 + 1;
  v48 = &v43[3 * v47];
  v48[4] = sub_1001CDFD4;
  v48[5] = v42;
  *((_BYTE *)v48 + 48) = 1;
  swift_endAccess(v57);
  swift_release();
  v49 = swift_allocObject(&unk_100744028, 24, 7);
  *(_QWORD *)(v49 + 16) = v44;
  swift_beginAccess(v35, v57, 33, 0);
  v50 = *(_QWORD **)v35;
  v51 = v44;
  swift_retain(v49);
  v52 = swift_isUniquelyReferenced_nonNull_native(v50);
  *(_QWORD *)v35 = v50;
  if ((v52 & 1) == 0)
  {
    v50 = sub_1003DB0E4(0, v50[2] + 1, 1, v50);
    *(_QWORD *)v35 = v50;
  }
  v54 = v50[2];
  v53 = v50[3];
  if (v54 >= v53 >> 1)
  {
    v50 = sub_1003DB0E4((_QWORD *)(v53 > 1), v54 + 1, 1, v50);
    *(_QWORD *)v35 = v50;
  }
  v50[2] = v54 + 1;
  v55 = &v50[3 * v54];
  v55[4] = sub_1001CDFDC;
  v55[5] = v49;
  *((_BYTE *)v55 + 48) = 2;
  swift_endAccess(v57);
  swift_release();
  return v33;
}

void sub_1001CDFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001CC3A8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1001CDFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001CC6D4(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1001CDFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001CC8A8(a1, a2, *(_QWORD *)(v2 + 16));
}

char *sub_1001CDFFC(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  UIAccessibilityTraits v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *result;
  char *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  objc_super v40;
  objc_super v41;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel;
  v12 = objc_allocWithZone((Class)UILabel);
  v13 = v4;
  *(_QWORD *)&v4[v11] = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_highlightView;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone((Class)TLKProminenceView), "initWithProminence:", 3);
  v15 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_interceptingTapGesture;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");

  v41.receiver = v13;
  v41.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v41, "initWithFrame:", a1, a2, a3, a4);
  v17 = UIAccessibilityTraitSearchField;
  v18 = (char *)v16;
  objc_msgSend(v18, "setAccessibilityTraits:", v17);
  v19 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel;
  v20 = *(void **)&v18[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v21 = v20;
  v22 = (void *)static UIColor.primaryText.getter(v21);
  objc_msgSend(v21, "setTextColor:", v22);

  v23 = *(void **)&v18[v19];
  v40.receiver = v18;
  v40.super_class = ObjectType;
  v24 = v23;
  v25 = objc_msgSendSuper2(&v40, "font");
  objc_msgSend(v24, "setFont:", v25, v40.receiver, v40.super_class);

  v26 = *(void **)&v18[v19];
  objc_msgSend(v26, "setUserInteractionEnabled:", 0);
  objc_msgSend(v26, "setLineBreakMode:", 2);
  v27 = v18;
  v28 = objc_msgSend(v27, "subviews");
  v29 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v39 = v30;
    else
      v39 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v31 = (char *)_CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v30);
    if (!v31)
      goto LABEL_9;
LABEL_3:
    result = v31 - 1;
    if (__OFSUB__(v31, 1))
    {
      __break(1u);
    }
    else if ((v30 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)result < *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v33 = (char *)*(id *)(v30 + 8 * (_QWORD)result + 32);
LABEL_8:
        v31 = v33;
        goto LABEL_9;
      }
      __break(1u);
      return result;
    }
    v33 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v30);
    goto LABEL_8;
  }
  v31 = *(char **)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v31)
    goto LABEL_3;
LABEL_9:
  objc_msgSend(v27, "insertSubview:below:", v26, v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  v34 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_highlightView;
  v35 = *(void **)&v27[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_highlightView];
  if (v35)
  {
    v36 = objc_msgSend(v35, "layer");
    objc_msgSend(v36, "setCornerRadius:", 2.0);

    v37 = *(_QWORD *)&v27[v34];
    if (v37)
      objc_msgSend(*(id *)&v27[v34], "setUserInteractionEnabled:", 0);
  }
  else
  {
    v37 = 0;
  }
  objc_msgSend(v27, "insertSubview:below:", v37, *(_QWORD *)&v18[v19]);
  objc_msgSend(v27, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  sub_1001CE400();
  v38 = *(void **)&v27[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_interceptingTapGesture];
  objc_msgSend(v38, "addTarget:action:", v27, "didTapWithSender:");
  objc_msgSend(v38, "setDelegate:", v27);
  objc_msgSend(v27, "addGestureRecognizer:", v38);

  return v27;
}

id sub_1001CE400()
{
  char *v0;
  char *v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  int v7;
  NSString v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  NSString v15;
  uint64_t v16;
  id v17;
  id v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  char v27;
  double v28;
  uint64_t v29;
  id v30;
  id v31;
  NSString v32;
  id result;
  void *v34;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  if (!v3)
    goto LABEL_3;
  swift_bridgeObjectRetain_n(v3, 2);
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = objc_msgSend(v5, "layoutDirection");

  v7 = v6 != (id)1;
  v8 = String._bridgeToObjectiveC()();
  LODWORD(v6) = objc_msgSend(v8, "_isNaturallyRTL");
  swift_bridgeObjectRelease(v3);

  if (v7 == (_DWORD)v6)
    v9 = 1;
  else
LABEL_3:
    v9 = 0;
  v10 = sub_1001CF9E8(v4, v3, v9, v1);
  v12 = v11;
  v13 = swift_bridgeObjectRelease(v3).n128_u64[0];
  v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel];
  if (v12)
  {
    swift_bridgeObjectRetain(v12);
    v15 = String._bridgeToObjectiveC()();
    v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v14, "setText:", v15, *(double *)&v13);

  v16 = *((_QWORD *)v2 + 1);
  if (v16
    && (v17 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRetain(*((_QWORD *)v2 + 1)).n128_f64[0]),
        v18 = objc_msgSend(v17, "layoutDirection"),
        v17,
        v19 = String._bridgeToObjectiveC()(),
        LODWORD(v17) = objc_msgSend(v19, "_isNaturallyRTL"),
        swift_bridgeObjectRelease(v16),
        v19,
        (v18 != (id)1) == (_DWORD)v17))
  {
    v22 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v21 = static UIColor.secondaryText.getter(v22);
  }
  else
  {
    v20 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v21 = static UIColor.primaryText.getter(v20);
  }
  v23 = (void *)v21;
  objc_msgSend(v14, "setTextColor:", v21);

  v24 = 1.0;
  if ((static String.isNilOrEmpty(_:)(v10, v12) & 1) != 0)
    v25 = 0.0;
  else
    v25 = 1.0;
  objc_msgSend(v14, "setAlpha:", v25);
  v26 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_highlightView];
  if (v26)
    objc_msgSend(v26, "setAlpha:", v25);
  v27 = static String.isNilOrEmpty(_:)(v10, v12);
  *(_QWORD *)&v28 = swift_bridgeObjectRelease(v12).n128_u64[0];
  if ((v27 & 1) == 0)
  {
    v29 = *((_QWORD *)v2 + 1);
    if (v29)
    {
      v30 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRetain(*((_QWORD *)v2 + 1)).n128_f64[0]);
      v31 = objc_msgSend(v30, "layoutDirection");

      v32 = String._bridgeToObjectiveC()();
      LODWORD(v30) = objc_msgSend(v32, "_isNaturallyRTL");
      swift_bridgeObjectRelease(v29);

      v28 = 0.0;
      if ((v31 == (id)1) != v30)
        v24 = 1.0;
      else
        v24 = 0.0;
    }
    else
    {
      v24 = 0.0;
    }
  }
  result = objc_msgSend(v1, "_fieldEditor", v28);
  if (result)
  {
    v34 = result;
    objc_msgSend(result, "setAlpha:", v24);

    return objc_msgSend(v1, "setNeedsLayout");
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1001CE894(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  double result;

  v3 = &v2[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  if (a2)
  {
    if (v5)
    {
      v6 = v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v4, v5, 0) & 1) != 0)
        goto LABEL_11;
    }
  }
  else if (!v5)
  {
    return result;
  }
  sub_1001CE400();
  objc_msgSend(v2, "sendActionsForControlEvents:", 0x20000);
LABEL_11:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_1001CE914()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  swift_bridgeObjectRetain(v3);
  LOBYTE(v2) = static String.isNilOrEmpty(_:)(v2, v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  if ((v2 & 1) == 0)
  {
    v5 = *((_QWORD *)v1 + 1);
    if (v5)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v1 + 1));
      v6 = String._bridgeToObjectiveC()();
      *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v0, "setText:", v6, result);

    v7 = *((_QWORD *)v1 + 1);
    *(_QWORD *)v1 = 0;
    *((_QWORD *)v1 + 1) = 0;
    if (v7)
    {
      sub_1001CE400();
      objc_msgSend(v0, "sendActionsForControlEvents:", 0x20000);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
  }
  return result;
}

id sub_1001CEA1C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  int v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  int v11;
  id v12;
  id v13;
  int v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  Swift::String_optional v21;
  Swift::Bool v22;
  double v23;

  v1 = v0;
  v2 = objc_msgSend(v0, "selectedTextRange");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "layoutDirection");

  v6 = v5 != (id)1;
  v7 = String._bridgeToObjectiveC()();
  LODWORD(v5) = objc_msgSend(v7, "_isNaturallyRTL");

  if (v6 == (_DWORD)v5)
  {
    v20 = 0;
  }
  else
  {
    v8 = objc_msgSend(v1, "markedTextRange");

    sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
    v9 = objc_msgSend(v3, "start");
    v10 = objc_msgSend(v3, "end");
    v11 = static NSObject.== infix(_:_:)(v9, v10);

    v12 = objc_msgSend(v1, "endOfDocument");
    v13 = objc_msgSend(v3, "end");
    v14 = static NSObject.== infix(_:_:)(v12, v13);

    v15 = objc_msgSend(v1, "text");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    v21.value._countAndFlagsBits = v17;
    v21.value._object = v19;
    v22 = String.isValid(expansionFor:)(v21);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v19).n128_u64[0];
    v20 = 0;
    if (!v8 && ((v11 ^ 1) & 1) == 0 && ((v14 ^ 1) & 1) == 0 && v22)
      v20 = objc_msgSend(v1, "isFirstResponder", v23);
  }

  return v20;
}

id sub_1001CEC60()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSString v14;
  char v15;
  id result;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  uint64_t v26;
  id v27;
  id v28;
  NSString v29;
  char v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  objc_super v35;

  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v35, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel];
  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = &v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  v15 = 0;
  if (v11)
  {
    v12 = objc_msgSend(v0, "traitCollection", swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText+ 8]).n128_f64[0]);
    v13 = objc_msgSend(v12, "layoutDirection");

    v14 = String._bridgeToObjectiveC()();
    LODWORD(v12) = objc_msgSend(v14, "_isNaturallyRTL");
    swift_bridgeObjectRelease(v11);

    if ((v13 != (id)1) == (_DWORD)v12)
      v15 = 1;
  }
  result = objc_msgSend(v1, "setFrame:", sub_1001CF37C(v15, v0, v0, v3, v5, v7, v9));
  v17 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_highlightView];
  if (v17)
  {
    objc_msgSend(v0, "bounds");
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v26 = *((_QWORD *)v10 + 1);
    v30 = 0;
    if (v26)
    {
      v27 = objc_msgSend(v0, "traitCollection", swift_bridgeObjectRetain(*((_QWORD *)v10 + 1)).n128_f64[0]);
      v28 = objc_msgSend(v27, "layoutDirection");

      v29 = String._bridgeToObjectiveC()();
      LODWORD(v27) = objc_msgSend(v29, "_isNaturallyRTL");
      swift_bridgeObjectRelease(v26);

      if ((v28 != (id)1) == (_DWORD)v27)
        v30 = 1;
    }
    objc_msgSend(v1, "frame");
    return objc_msgSend(v17, "setFrame:", sub_1001CF608(v30, v0, v0, v19, v21, v23, v25, v31, v32, v33, v34));
  }
  return result;
}

id sub_1001CEEF0()
{
  char *v0;
  objc_class *ObjectType;
  double v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = &v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  if (v5)
  {
    sub_1001CE400();
    objc_msgSend(v0, "sendActionsForControlEvents:", 0x20000);
    *(_QWORD *)&v2 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  v7.receiver = v0;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "resignFirstResponder", v4, v2);
}

id sub_1001CEFD0(double a1, double a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  if (v8)
  {
    sub_1001CE400();
    objc_msgSend(v2, "sendActionsForControlEvents:", 0x20000);
    swift_bridgeObjectRelease(v8);
  }
  v10.receiver = v2;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "beginFloatingCursorAtPoint:", v7, a1, a2);
}

uint64_t sub_1001CF138(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_interceptingTapGesture]) & 1) != 0)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
    swift_bridgeObjectRetain(v5);
    LOBYTE(v4) = static String.isNilOrEmpty(_:)(v4, v5);
    swift_bridgeObjectRelease(v5);
    v6 = v4 ^ 1;
  }
  else
  {
    v11.receiver = v1;
    v11.super_class = ObjectType;
    if (objc_msgSendSuper2(&v11, "gestureRecognizerShouldBegin:", a1))
    {
      v7 = objc_opt_self(UILongPressGestureRecognizer);
      if (swift_dynamicCastObjCClass(a1, v7))
      {
        v8 = &v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
        v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
        *(_QWORD *)v8 = 0;
        *((_QWORD *)v8 + 1) = 0;
        if (v9)
        {
          sub_1001CE400();
          objc_msgSend(v1, "sendActionsForControlEvents:", 0x20000);
          swift_bridgeObjectRelease(v9);
        }
      }
      v6 = 1;
    }
    else
    {
      v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t type metadata accessor for SearchTextField()
{
  return objc_opt_self(_TtC20ProductPageExtension15SearchTextField);
}

void sub_1001CF35C()
{
  qword_100814A30 = 0x4010000000000000;
}

void sub_1001CF36C()
{
  qword_100814A38 = 0x4010000000000000;
}

double sub_1001CF37C(char a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  objc_class *ObjectType;
  id v15;
  double v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  NSString *v22;
  id v23;
  unint64_t v24;
  Class isa;
  double v26;
  double v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  _BYTE v44[72];
  objc_super v45;

  ObjectType = (objc_class *)swift_getObjectType();
  v15 = objc_msgSend(a3, "text");
  v16 = 0.0;
  if (v15)
  {
    v17 = v15;
    v45.receiver = a3;
    v45.super_class = ObjectType;
    v18 = objc_msgSendSuper2(&v45, "font");
    if (v18)
    {
      v19 = v18;
      if ((a1 & 1) != 0)
      {
        v20 = sub_10000DAF8(&qword_100815380);
        inited = swift_initStackObject(v20, v44);
        *(_OWORD *)(inited + 16) = xmmword_100640720;
        *(_QWORD *)(inited + 32) = NSFontAttributeName;
        *(_QWORD *)(inited + 64) = sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
        *(_QWORD *)(inited + 40) = v19;
        v22 = NSFontAttributeName;
        v23 = v19;
        v24 = sub_100509728(inited);
        type metadata accessor for Key(0);
        sub_1001A1594();
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v17, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);
        v27 = v26;

        if (qword_100804D88 != -1)
          swift_once(&qword_100804D88, sub_1001CF36C);
        v16 = v27 + *(double *)&qword_100814A38;
      }
      else
      {

      }
      v28 = objc_msgSend(a2, "traitCollection");
      v29 = objc_msgSend(v28, "layoutDirection");

      if (v29 == (id)1)
        v30 = 0.0;
      else
        v30 = 1.0;
      objc_msgSend(a3, "textRectForBounds:", a4, a5, a6, a7);
      v32 = v31;
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v39 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(in:)(a2, 0.0, v16 + v30, 0.0, 0.0);
      v16 = CGRect.subtracting(insets:)(v39, v40, v41, v42, v32, v34, v36, v38);

    }
    else
    {

    }
  }
  return v16;
}

double sub_1001CF608(char a1, void *a2, char *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  objc_class *ObjectType;
  id v22;
  double v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  NSString *v29;
  id v30;
  unint64_t v31;
  Class isa;
  id v33;
  id v34;
  _BYTE v37[72];
  objc_super v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  ObjectType = (objc_class *)swift_getObjectType();
  v22 = objc_msgSend(a3, "text");
  v23 = 0.0;
  if (v22)
  {
    v24 = v22;
    v38.receiver = a3;
    v38.super_class = ObjectType;
    v25 = objc_msgSendSuper2(&v38, "font");
    if (v25)
    {
      v26 = v25;
      v27 = sub_10000DAF8(&qword_100815380);
      inited = swift_initStackObject(v27, v37);
      *(_OWORD *)(inited + 16) = xmmword_100640720;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 64) = sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v26;
      v29 = NSFontAttributeName;
      v30 = v26;
      v31 = sub_100509728(inited);
      type metadata accessor for Key(0);
      sub_1001A1594();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v24, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

      objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel], "sizeThatFits:", a6, a7);
      v39.origin.x = a8;
      v39.origin.y = a9;
      v39.size.width = a10;
      v39.size.height = a11;
      CGRectGetMinY(v39);
      v40.origin.x = a8;
      v40.origin.y = a9;
      v40.size.width = a10;
      v40.size.height = a11;
      CGRectGetHeight(v40);
      v33 = objc_msgSend(a2, "traitCollection");
      v34 = objc_msgSend(v33, "layoutDirection");

      if (v34)
      {
        v41.origin.y = a5;
        v41.origin.x = a4;
        v41.size.width = a6;
        v41.size.height = a7;
        CGRectGetMaxX(v41);
        v42.origin.x = a8;
        v42.origin.y = a9;
        v42.size.width = a10;
        v42.size.height = a11;
        CGRectGetMaxX(v42);
      }
      else
      {
        v43.origin.x = a8;
        v43.origin.y = a9;
        v43.size.width = a10;
        v43.size.height = a11;
        CGRectGetMinX(v43);
      }
      if ((a1 & 1) != 0)
      {
        if (qword_100804D88 != -1)
          swift_once(&qword_100804D88, sub_1001CF36C);
        if (qword_100804D80 != -1)
          swift_once(&qword_100804D80, sub_1001CF35C);
        v45.origin.x = a8;
        v45.origin.y = a9;
        v45.size.width = a10;
        v45.size.height = a11;
        CGRectGetWidth(v45);
      }
      else
      {
        if (qword_100804D80 != -1)
          swift_once(&qword_100804D80, sub_1001CF35C);
        v44.origin.x = a8;
        v44.origin.y = a9;
        v44.size.width = a10;
        v44.size.height = a11;
        CGRectGetWidth(v44);
      }
      v23 = CGRect.withLayoutDirection(in:relativeTo:)(a2, a4);

    }
    else
    {

    }
  }
  return v23;
}

uint64_t sub_1001CF9E8(uint64_t a1, unint64_t a2, char a3, id a4)
{
  id v6;
  id v7;
  _BOOL4 v8;
  NSString v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  if ((a3 & 1) != 0)
  {
    if (a2)
    {
      v6 = objc_msgSend(a4, "traitCollection");
      v7 = objc_msgSend(v6, "layoutDirection");

      v8 = v7 != (id)1;
      v9 = String._bridgeToObjectiveC()();
      LODWORD(v7) = objc_msgSend(v9, "_isNaturallyRTL");

      if (((v8 ^ v7) & 1) != 0)
      {
        v13 = 546603234;
        v10 = a1;
        v11 = a2;
      }
      else
      {
        v13 = a1;
        swift_bridgeObjectRetain(a2);
        v10 = 2491474464;
        v11 = 0xA400000000000000;
      }
      String.append(_:)(*(Swift::String *)&v10);
      return v13;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a2);
  }
  return a1;
}

void sub_1001CFAE4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_highlightView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)TLKProminenceView), "initWithProminence:", 3);
  v4 = OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_interceptingTapGesture;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/SearchTextField.swift", 42, 2, 47, 0);
  __break(1u);
}

double sub_1001CFBD4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double result;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15SearchTextField_ghostHintText + 8];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  if (v2)
  {
    sub_1001CE400();
    objc_msgSend(v0, "sendActionsForControlEvents:", 0x20000);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  return result;
}

void sub_1001CFC5C()
{
  qword_100865C58 = 0x403B000000000000;
}

char *sub_1001CFC6C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = objc_allocWithZone((Class)type metadata accessor for BadgeView(0));
  v13 = v4;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_badgeView] = v14;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_verticalSeparatorView] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_topSeparatorView] = v16;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_bottomSeparatorView] = v17;

  v39.receiver = v13;
  v39.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  v19 = OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_verticalSeparatorView;
  v20 = *(void **)&v18[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_verticalSeparatorView];
  sub_100035178();
  v21 = v18;
  v22 = v20;
  v24 = (void *)static UIColor.defaultLine.getter(v22, v23);
  objc_msgSend(v22, "setBackgroundColor:", v24);

  v25 = OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_topSeparatorView;
  v26 = *(id *)&v21[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_topSeparatorView];
  v28 = (void *)static UIColor.defaultLine.getter(v26, v27);
  objc_msgSend(v26, "setBackgroundColor:", v28);

  v29 = OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_bottomSeparatorView;
  v30 = *(id *)&v21[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_bottomSeparatorView];
  v32 = (void *)static UIColor.defaultLine.getter(v30, v31);
  objc_msgSend(v30, "setBackgroundColor:", v32);

  v33 = objc_msgSend(v21, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_badgeView]);

  v34 = objc_msgSend(v21, "contentView");
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v18[v19]);

  v35 = objc_msgSend(v21, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v21[v25]);

  v36 = objc_msgSend(v21, "contentView");
  v37 = *(id *)&v21[v29];
  objc_msgSend(v36, "addSubview:", v37);

  return v21;
}

id sub_1001D002C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  id v27;
  char v28;
  double v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  void *v40;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  id v50;
  double v51;
  double v52;
  void *v53;
  double v54;
  double MinX;
  void *v56;
  double v57;
  CGFloat v58;
  objc_super v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v1 = v0;
  v60.receiver = v0;
  v60.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v60, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_badgeView];
  v3 = objc_msgSend(v1, "contentView");
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "frame");
  v14 = v13;
  v16 = v15;

  if (qword_100805C60 != -1)
    swift_once(&qword_100805C60, sub_10042A6A4);
  v18 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v17);
  v19 = sub_10000EFC4(v18, (uint64_t)qword_100868898);
  v20 = objc_msgSend(v1, "traitCollection");
  v21 = static BadgeViewRibbonLayout.estimatedHeight(fitting:using:with:)(v19, v20, v14, v16);

  if (qword_100804D90 != -1)
    swift_once(&qword_100804D90, sub_1001CFC5C);
  v22 = *(double *)&qword_100865C58;
  v23 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  v26 = 1.0 / v25;
  v27 = objc_msgSend(v1, "traitCollection");
  v28 = UITraitCollection.prefersRightToLeftLayouts.getter();

  v29 = 0.0;
  if ((v28 & 1) == 0)
  {
    v30 = objc_msgSend(v1, "contentView");
    objc_msgSend(v30, "frame");
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;

    v61.origin.x = v32;
    v61.origin.y = v34;
    v61.size.width = v36;
    v61.size.height = v38;
    v29 = CGRectGetMaxX(v61) - v26;
  }
  v39 = v21 - (v22 + v22);
  v40 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_verticalSeparatorView];
  v41 = objc_msgSend(v1, "contentView");
  objc_msgSend(v41, "frame");
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;

  v62.origin.x = v43;
  v62.origin.y = v45;
  v62.size.width = v47;
  v62.size.height = v49;
  objc_msgSend(v40, "setFrame:", v29, floor((CGRectGetHeight(v62) - v39) * 0.5), v26, v39);
  v50 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v50, "displayScale");
  v52 = v51;

  v53 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_topSeparatorView];
  v54 = 1.0 / v52;
  objc_msgSend(v1, "bounds");
  MinX = CGRectGetMinX(v63);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v53, "setFrame:", MinX, 0.0, CGRectGetWidth(v64), v54);
  v56 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23BadgeCollectionViewCell_bottomSeparatorView];
  objc_msgSend(v1, "bounds");
  v57 = CGRectGetMinX(v65);
  objc_msgSend(v1, "bounds");
  v58 = CGRectGetMaxY(v66) - v54;
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v56, "setFrame:", v57, v58, CGRectGetWidth(v67), v54);
}

uint64_t sub_1001D04E4()
{
  return type metadata accessor for BadgeCollectionViewCell(0);
}

uint64_t type metadata accessor for BadgeCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100814AD0;
  if (!qword_100814AD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BadgeCollectionViewCell);
  return result;
}

void sub_1001D0528(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_1001D05A8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100650C30, a1);
}

uint64_t sub_1001D05B8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC0))();
}

uint64_t sub_1001D05D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v4;
  v10 = swift_isaMask & *v5;
  v11 = TodayCard.media.getter();
  v12 = swift_dynamicCastClass(v11, *(_QWORD *)(v10 + 80));
  if (v12)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v5) + 0xB0))(a1, a2, v12, a3, a4);
  return swift_release(v11);
}

uint64_t sub_1001D0678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getWitnessTable(&unk_100650CF4, a4);
  return sub_100105A1C(a1, a2, a3);
}

void (*sub_1001D06DC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100401ED4((uint64_t)v2);
  return sub_10001EB20;
}

double sub_1001D0720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100650CF4, a3);
  return sub_1004BADF8(a1, a2, a3, WitnessTable);
}

uint64_t sub_1001D076C(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = swift_getWitnessTable(&unk_100650CC4, a2);
  a1[2] = swift_getWitnessTable(&unk_100650C4C, a2);
  result = swift_getWitnessTable(&unk_100650C7C, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1001D07C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void **v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  id v79;
  double v80;
  int v81;
  id v82;
  _BYTE *v83;
  int v84;
  int v85;
  double v86;
  unint64_t v87;
  uint64_t v88;
  double v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  id v94;
  void *v95;
  int v96;
  NSString v97;
  uint64_t (**v98)();
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char v110;
  char v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  id v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  void *v136;
  id v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  char *v142;
  void *v143;
  id v144;
  char *v145;
  id v146;
  void *v147;
  char *v148;
  objc_class *v149;
  void *v150;
  id v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD v179[5];
  objc_super v180;

  v7 = v6;
  v172 = a4;
  v175 = a3;
  v10 = sub_10000DAF8((uint64_t *)&unk_100811F10);
  __chkstk_darwin(v10);
  v164 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v163 = (char *)&v153 - v13;
  v14 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v15 = __chkstk_darwin(v14);
  v162 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for VideoControls(0, v15);
  __chkstk_darwin(v17);
  v161 = (char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v160 = (char *)&v153 - v20;
  v21 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  v22 = __chkstk_darwin(v21);
  v159 = (char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for VideoFillMode(0, v22);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v158 = (char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for VideoConfiguration(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v173 = (char *)&v153 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ComponentLayoutOptions(0);
  v170 = *(_QWORD *)(v26 - 8);
  v171 = v26;
  v27 = __chkstk_darwin(v26);
  v169 = (char *)&v153 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v27);
  v166 = *(_QWORD *)(v29 - 8);
  v167 = v29;
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v153 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for BreakoutDetailsDisplayProperties(0, v30);
  v165 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v34 = (char *)&v153 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000DAF8((uint64_t *)&unk_100814B40);
  __chkstk_darwin(v35);
  v37 = (char *)&v153 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v38);
  v40 = (char *)&v153 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v43 = (void **)((char *)&v153 - v42);
  v44 = sub_10000DAF8((uint64_t *)&unk_100811F40);
  v177 = *(_QWORD *)(v44 - 8);
  v178 = v44;
  *(_QWORD *)&v45 = __chkstk_darwin(v44).n128_u64[0];
  v176 = (char *)&v153 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = objc_msgSend(a6, "snapshotPageTraitEnvironment", v45);
  *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_pageTraits] = v47;
  swift_unknownObjectRetain(v47);
  objc_msgSend(v7, "setNeedsLayout", swift_unknownObjectRelease().n128_f64[0]);
  v48 = swift_unknownObjectRelease();
  v174 = a1;
  LargeHeroBreakout.details.getter(v48);
  v49 = (void *)BreakoutDetails.badgeColorOverride.getter();
  swift_release();
  if (v49)
  {
    if (qword_100806A68 != -1)
      swift_once(&qword_100806A68, sub_100539C90);
    v50 = sub_10000EFC4(v38, (uint64_t)qword_10086AD00);
    sub_10016B7A0(v50, (uint64_t)v40);
    sub_10016B7A0((uint64_t)v40, (uint64_t)v43);
    v51 = *v43;
    v52 = v49;

    *v43 = v49;
    sub_10016B7E4((uint64_t)v40);
    sub_10016B7A0((uint64_t)v43, (uint64_t)v40);
    v53 = sub_10000DAF8((uint64_t *)&unk_100808A50);
    v54 = v176;
    Conditional<>.init(value:)(v40, v53, v38);

    sub_10016B7E4((uint64_t)v43);
  }
  else
  {
    if (qword_100806A68 != -1)
      swift_once(&qword_100806A68, sub_100539C90);
    v56 = sub_10000EFC4(v38, (uint64_t)qword_10086AD00);
    sub_10016B7A0(v56, (uint64_t)v43);
    v57 = sub_10000DAF8((uint64_t *)&unk_100808A50);
    v54 = v176;
    Conditional<>.init(value:)(v43, v57, v38);
  }
  v58 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView];
  v59 = LargeHeroBreakout.details.getter(v55);
  v61 = v177;
  v60 = v178;
  (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v37, v54, v178);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v37, 0, 1, v60);
  v153 = v58;
  sub_100504904(v59, (uint64_t)v37, v175);
  swift_release();
  v62 = sub_100010F2C((uint64_t)v37, (uint64_t *)&unk_100814B40);
  v63 = LargeHeroBreakout.detailsDisplayProperties.getter(v62);
  BreakoutDetailsDisplayProperties.position.getter(v63);
  v64 = *(void (**)(char *, uint64_t))(v165 + 8);
  v65 = v168;
  v64(v34, v168);
  v66 = &v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition];
  v67 = swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition], v179, 33, 0);
  v68 = v166;
  v69 = v66;
  v70 = v167;
  (*(void (**)(char *, char *, uint64_t, __n128))(v166 + 24))(v69, v32, v167, v67);
  swift_endAccess(v179);
  objc_msgSend(v7, "setNeedsLayout");
  v71.n128_f64[0] = (*(double (**)(char *, uint64_t))(v68 + 8))(v32, v70);
  v72 = v169;
  static ComponentLayoutOptions.isFirstSection.getter(v71);
  v73 = sub_10000E720((unint64_t *)&qword_100812DC0, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v74 = v171;
  v75 = dispatch thunk of SetAlgebra.isSuperset(of:)(v72, v171, v73);
  v76 = (*(uint64_t (**)(char *, uint64_t))(v170 + 8))(v72, v74);
  v77 = LargeHeroBreakout.detailsDisplayProperties.getter(v76);
  v78 = BreakoutDetailsDisplayProperties.wantsBlur.getter(v77);
  v79 = (id)((uint64_t (*)(char *, uint64_t))v64)(v34, v65);
  v81 = v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isBackgroundEffectViewHidden];
  v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isBackgroundEffectViewHidden] = ((v75 | v78) & 1) == 0;
  if (((v75 | v78) & 1) == v81)
  {
    if (((v75 | v78) & 1) != 0)
    {
      v82 = objc_msgSend(v7, "contentView");
      objc_msgSend(v82, "insertSubview:aboveSubview:", *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView], *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer]);

    }
    else
    {
      v79 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView], "removeFromSuperview");
    }
  }
  v83 = *(_BYTE **)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView];
  v84 = v83[OBJC_IVAR____TtC20ProductPageExtension28BreakoutBackgroundEffectView_wantsTopEffect];
  v83[OBJC_IVAR____TtC20ProductPageExtension28BreakoutBackgroundEffectView_wantsTopEffect] = v75 & 1;
  if ((v75 & 1) != v84)
  {
    LODWORD(v80) = 0;
    if ((v75 & 1) != 0)
      *(float *)&v80 = 1.0;
    objc_msgSend(*(id *)&v83[OBJC_IVAR____TtC20ProductPageExtension28BreakoutBackgroundEffectView_topGradient], "setOpacity:", v80);
    v79 = objc_msgSend(v83, "setNeedsDisplay");
  }
  v85 = v83[OBJC_IVAR____TtC20ProductPageExtension28BreakoutBackgroundEffectView_wantsBottomEffect];
  v83[OBJC_IVAR____TtC20ProductPageExtension28BreakoutBackgroundEffectView_wantsBottomEffect] = v78 & 1;
  if ((v78 & 1) != v85)
  {
    v86 = 0.0;
    if ((v78 & 1) != 0)
      v86 = 1.0;
    objc_msgSend(*(id *)&v83[OBJC_IVAR____TtC20ProductPageExtension28BreakoutBackgroundEffectView_blurView], "setAlpha:", v86);
    v79 = objc_msgSend(v83, "setNeedsDisplay");
  }
  v88 = LargeHeroBreakout.heading.getter(v79);
  v90 = v87;
  if (v87)
  {
    v91 = HIBYTE(v87) & 0xF;
    if ((v87 & 0x2000000000000000) == 0)
      v91 = v88 & 0xFFFFFFFFFFFFLL;
    v92 = v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden];
    v93 = v91 == 0;
    v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden] = v93;
    if (v93 == v92)
      goto LABEL_26;
    if (v91)
    {
      v94 = objc_msgSend(v7, "contentView");
      objc_msgSend(v94, "insertSubview:belowSubview:", *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel], v153);

LABEL_26:
      v95 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
LABEL_30:
      v97 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v89 = swift_bridgeObjectRelease(v90).n128_u64[0];
      goto LABEL_31;
    }
  }
  else
  {
    v96 = v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden];
    v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden] = 1;
    if (v96 == 1)
    {
      v97 = 0;
      v95 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
      goto LABEL_31;
    }
  }
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel], "removeFromSuperview");
  v95 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
  if (v90)
    goto LABEL_30;
  v97 = 0;
LABEL_31:
  objc_msgSend(v95, "setText:", v97, v89);

  sub_1001DF374();
  v98 = off_10081F000;
  if (LargeHeroBreakout.video.getter())
  {
    v99 = v158;
    v100 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v156 + 104))(v158, enum case for VideoFillMode.scaleAspectFill(_:), v157);
    v101 = Video.preview.getter(v100);
    Artwork.size.getter(v101);
    v102 = v159;
    AspectRatio.init(_:_:)(v103);
    swift_release();
    v104 = type metadata accessor for AspectRatio(0);
    v105 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v102, 0, 1, v104);
    v106 = v160;
    v107 = Video.playbackControls.getter(v105);
    v108 = v161;
    v109 = Video.autoPlayPlaybackControls.getter(v107);
    v110 = Video.canPlayFullScreen.getter(v109);
    v111 = Video.allowsAutoPlay.getter();
    v112 = Video.looping.getter();
    v113 = v173;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v99, v102, v106, v108, v110 & 1, v111 & 1, v112 & 1, 0, 0, 1);
    v114 = type metadata accessor for VideoViewManager(0);
    v115 = v175;
    v116 = BaseObjectGraph.inject<A>(_:)(v179, v114, v114);
    v117 = Video.playbackId.getter(v179, v116);
    v118 = (uint64_t)v162;
    Video.videoUrl.getter(v117);
    v120 = type metadata accessor for URL(0, v119);
    v121 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v118, 0, 1, v120);
    v122 = (uint64_t)v163;
    v123 = Video.templateMediaEvent.getter(v121);
    v124 = (uint64_t)v164;
    Video.templateClickEvent.getter(v123);
    v125 = type metadata accessor for VideoView(0);
    v126 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
    v127 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v179, v118, v113, v122, v124, v115, v125, v126);
    sub_100010F2C(v124, (uint64_t *)&unk_100811F10);
    sub_100010F2C(v122, (uint64_t *)&unk_100811F10);
    sub_100010F2C(v118, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v179, &qword_100809010);
    v128 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer];
    v129 = OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer;
    v130 = *(void **)(v128 + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
    v131 = v127;
    v132 = v130;
    sub_1003A4B0C(v127);

    v133 = *(_QWORD *)(v128 + v129);
    v134 = *(void **)(v133
                    + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
    if (v134
      && (v135 = swift_dynamicCastClass(*(_QWORD *)(v133+ OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents), v125)) != 0)
    {
      v136 = (void *)v135;
      v137 = v134;
      objc_msgSend(v136, "setUserInteractionEnabled:", 0);
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();

      v138 = swift_release();
    }
    v139 = (*(uint64_t (**)(char *, uint64_t, __n128))(v154 + 8))(v173, v155, v138);
    v98 = off_10081F000;
  }
  else
  {
    v140 = LargeHeroBreakout.artwork.getter();
    swift_release();
    if (v140)
    {
      v141 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView];
      v142 = *(char **)(*(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer]
                      + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
      v143 = *(void **)&v142[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents];
      *(_QWORD *)&v142[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents] = v141;
      v144 = v141;
      v145 = v142;
      sub_1003A43BC(v143);

      sub_1003A3904();
    }
  }
  v146 = (id)LargeHeroBreakout.backgroundColor.getter(v139);
  if (!v146)
    v146 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v147 = v146;
  v148 = *(char **)&v7[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer];
  v149 = (objc_class *)type metadata accessor for MediaView();
  v180.receiver = v148;
  v180.super_class = v149;
  objc_msgSendSuper2(&v180, "setBackgroundColor:", v147);
  objc_msgSend(*(id *)(*(_QWORD *)((char *)v98[12] + (_QWORD)v148)+ OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents), "setBackgroundColor:", v147);
  v150 = *(void **)&v148[OBJC_IVAR____TtC20ProductPageExtension9MediaView_reflectionView];
  if (v150)
  {
    v151 = v150;
    objc_msgSend(v151, "setBackgroundColor:", v147);

  }
  objc_msgSend(v7, "setNeedsLayout");
  return (*(uint64_t (**)(char *, uint64_t))(v177 + 8))(v176, v178);
}

double sub_1001D152C(uint64_t *a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1001D174C(*a1, a2, a3, a5, a7, a8);
}

uint64_t sub_1001D1540(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1001D07C4(*a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1001D1548()
{
  uint64_t v0;

  v0 = dispatch thunk of LargeHeroBreakout.clickAction.getter();
  swift_release(v0);
  if (v0)
    return 3;
  else
    return 0;
}

void sub_1001D1580(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001D2094(a1, a3);
}

uint64_t sub_1001D1588(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v27;

  v7 = a1.n128_f64[0];
  v8 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, a1);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:), v8, v15);
  sub_1001DEE1C((uint64_t)v12, a6, (uint64_t)v17);
  v18.n128_f64[0] = (*(double (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v19 = type metadata accessor for LargeHeroBreakoutLayout(0, v18);
  v20 = sub_10000E720(&qword_100814B58, (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakoutLayout, (uint64_t)&protocol conformance descriptor for LargeHeroBreakoutLayout);
  v21 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v17, a6, v19, v20, v7, 1.79769313e308);
  v23 = v22;
  (*(void (**)(char *, uint64_t, double))(v14 + 8))(v17, v13, v21);
  v24 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutDimension), "fractionalWidthDimension:", 1.0);
  v25 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(0.0, v23);

  return v25;
}

uint64_t sub_1001D1720()
{
  return sub_10000E720((unint64_t *)&unk_100814AE0, (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakout, (uint64_t)&protocol conformance descriptor for LargeHeroBreakout);
}

double sub_1001D174C(uint64_t a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v8;
  __n128 v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  double v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _QWORD v61[5];
  _BYTE v62[40];
  _QWORD v63[5];
  _QWORD v64[5];

  v8 = a2.n128_f64[0];
  v57 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, a2);
  v55 = *(_QWORD *)(v57 - 8);
  v10 = __chkstk_darwin(v57);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for BreakoutDetailsDisplayProperties(0, v10);
  v52 = *(_QWORD *)(v53 - 8);
  v13 = __chkstk_darwin(v53);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0, v13);
  v17 = __chkstk_darwin(v16);
  v56 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for LargeHeroBreakoutLayout(0, v17);
  v58 = *(_QWORD *)(v59 - 8);
  v19 = __chkstk_darwin(v59);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for LabelPlaceholderCompatibility(0, v19);
  v50 = *(_QWORD *)(v51 - 8);
  *(_QWORD *)&v22 = __chkstk_darwin(v51).n128_u64[0];
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a6;
  v25 = objc_msgSend(a6, "traitCollection", v22);
  v26 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v54 = a1;
  v28 = LargeHeroBreakout.heading.getter(v27);
  v30 = v29;
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_1008065F8 != -1)
    swift_once(&qword_1008065F8, sub_1004C977C);
  v31 = type metadata accessor for FontUseCase(0);
  v32 = sub_10000EFC4(v31, (uint64_t)qword_10086A2C0);
  v33 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v32, v25);
  v34 = type metadata accessor for Feature(0);
  v49 = v25;
  v35 = v34;
  v64[3] = v34;
  v64[4] = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v36 = sub_1000119C0(v64);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v36, enum case for Feature.measurement_with_labelplaceholder(_:), v35);
  LOBYTE(v35) = isFeatureEnabled(_:)(v64);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v28, v30, v33, 4, 0, 0, 0, 0, v35 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v64, v37);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v24, v51);
  v39 = LargeHeroBreakout.detailsDisplayProperties.getter(v38);
  BreakoutDetailsDisplayProperties.position.getter(v39);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v53);
  v40 = v56;
  v41 = v60;
  sub_1001DEE1C((uint64_t)v12, v60, v56);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v57);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v42 = LayoutViewPlaceholder.init(representing:)(v8, a3);
  v63[3] = v26;
  v63[4] = &protocol witness table for LayoutViewPlaceholder;
  v63[0] = v42;
  sub_10000EF80((uint64_t)v64, (uint64_t)v62);
  v61[3] = v26;
  v61[4] = &protocol witness table for LayoutViewPlaceholder;
  v61[0] = v27;
  v43 = swift_retain(v27);
  LargeHeroBreakoutLayout.init(metrics:backgroundMediaView:headerLabel:detailsView:)(v40, v63, v62, v61, v43);
  v44 = sub_10000E720(&qword_100814B50, (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakoutLayout, (uint64_t)&protocol conformance descriptor for LargeHeroBreakoutLayout);
  v45 = v59;
  v46 = dispatch thunk of Measurable.measurements(fitting:in:)(v41, v59, v44, v8, a3);
  swift_release();

  (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v45);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
  return v46;
}

void sub_1001D1BE8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[40];

  v3 = v2;
  v68 = a2;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VideoConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EF80(a1, (uint64_t)v70);
  v19 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v20 = type metadata accessor for LargeHeroBreakout(0);
  if (swift_dynamicCast(&v69, v70, v19, v20, 6))
  {
    v64 = v18;
    v65 = v16;
    v66 = v69;
    v67 = v3;
    v22 = v7;
    if (LargeHeroBreakout.video.getter())
    {
      v23 = *(void **)(*(_QWORD *)(*(_QWORD *)&v67[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer]
                                 + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                     + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
      if (v23 && (v24 = type metadata accessor for VideoView(0), (v25 = swift_dynamicCastClass(v23, v24)) != 0))
      {
        v63 = v24;
        v62 = v25;
        v26 = v25 + qword_10086AA40;
        v27 = swift_beginAccess(v25 + qword_10086AA40, v70, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, v26, v11, v27);
        v28 = v23;
        VideoConfiguration.aspectRatio.getter();
        v29 = v11;
        v30 = v28;
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
        v31 = v65;
        v32 = v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v10, 1, v15) != 1)
        {
          v51 = v64;
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v64, v10, v32);
          objc_msgSend(v67, "bounds");
          v54 = AspectRatio.maxSize(filling:)(v52, v53);
          v56 = v55;
          Video.preview.getter(v57);
          v58 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v54, v56);
          swift_release();
          v59 = sub_10000E720((unint64_t *)&unk_100807FB0, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v58, 2, 1, v62, v63, v59);
          swift_release();
          swift_release();

          v60 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v51, v32, v60);
          return;
        }

        swift_release();
        sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100811F20);
      }
      else
      {
        v21 = swift_release();
      }
    }
    if (LargeHeroBreakout.artwork.getter(v21))
    {
      v33 = v67;
      objc_msgSend(v67, "bounds");
      v36 = Artwork.config(_:mode:prefersLayeredImage:)(0, 0, v34, v35);
      v37 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView;
      v38 = *(id *)&v33[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView];
      Artwork.style.getter(v38);
      v39 = ArtworkView.style.setter(v22);
      *(_QWORD *)&v40 = Artwork.contentMode.getter(v39).n128_u64[0];
      v42 = ArtworkLoaderConfig.size.getter(objc_msgSend(v38, "setContentMode:", v41, v40));
      v44 = ArtworkView.imageSize.setter(v42, v43);
      v45 = Artwork.backgroundColor.getter(v44);
      if (!v45)
      {
        v46 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v45 = static UIColor.placeholderBackground.getter(v46);
      }
      ArtworkView.backgroundColor.setter(v45);

      v47 = *(void **)&v33[v37];
      v48 = type metadata accessor for ArtworkView(0);
      v49 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v50 = v47;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v36, 2, 1, v50, v48, v49);
      swift_release();
      swift_release();

    }
    swift_release();
  }
}

void sub_1001D2094(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView);
  v5 = type metadata accessor for ArtworkView(0);
  v6 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v7 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, 1, v5, v6);

  v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(v2
                                        + OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer)
                            + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (v8)
  {
    v9 = type metadata accessor for VideoView(0);
    v10 = swift_dynamicCastClass(v8, v9);
    if (v10)
    {
      v11 = v10;
      v12 = sub_10000E720((unint64_t *)&unk_100807FB0, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
      v13 = v8;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, a2 & 1, v9, v12);

    }
  }
}

uint64_t sub_1001D21C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Shelf.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *sub_1001D21F0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  id v26;
  id v27;
  double left;
  double bottom;
  double right;
  char *v31;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t);
  objc_class *ObjectType;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_currentState];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v16[40] = 1;
  v17 = qword_100806258;
  v18 = v4;
  if (v17 != -1)
    swift_once(&qword_100806258, sub_1004C7328);
  v19 = type metadata accessor for FontUseCase(0);
  v20 = sub_10000EFC4(v19, (uint64_t)qword_1008697E0);
  v21 = *(_QWORD *)(v19 - 8);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v35(v15, v20, v19);
  v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v34(v15, 0, 1, v19);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v23(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_firstColumnLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v12, 0, 0);
  v35(v15, v20, v19);
  v34(v15, 0, 1, v19);
  v23(v12, v22, v9);
  v26 = objc_allocWithZone(v24);
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_pinnedLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_columnWidth] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_interColumnSpace] = 0;

  v37.receiver = v18;
  v37.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v31 = (char *)v27;
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_firstColumnLabel]);
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_pinnedLabel]);

  return v31;
}

uint64_t sub_1001D264C(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  __n128 v21;
  void (*v22)(char *, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  uint64_t result;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  __n128 v47;
  double v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = type metadata accessor for PageGrid(0);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  v3 = __chkstk_darwin(v2);
  v53 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Shelf.ContentsMetadata(0, v3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char **)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v49 - v15;
  v50 = type metadata accessor for ProductReviewsMetadata(0, v14);
  v56 = *(_QWORD *)(v50 - 8);
  v17 = __chkstk_darwin(v50);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  ShelfLayoutContext.shelf.getter(v17);
  KeyPath = swift_getKeyPath(&unk_100650DC0);
  ReadOnlyLens.subscript.getter(v8, KeyPath, v9);
  v21 = swift_release();
  v22 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
  v22(v16, v9, v21);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v6 + 88))(v8, v5) != enum case for Shelf.ContentsMetadata.productReviews(_:))
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 96))(v8, v5);
  v23 = v50;
  v24 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v56 + 32))(v19, v8, v50);
  v25 = v52;
  v26 = *(void **)(v52
                 + OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_firstColumnLabel);
  v49 = v19;
  ProductReviewsMetadata.reviewSummaryTitle.getter(v24);
  v28 = v27;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setText:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

  v30 = *(void **)(v25 + OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_pinnedLabel);
  ShelfLayoutContext.shelf.getter(v31);
  v32 = swift_getKeyPath(&unk_100650DF0);
  ReadOnlyLens.subscript.getter(&v57, v32, v9);
  v33 = swift_release();
  v22(v12, v9, v33);
  v35 = v58;
  v36 = v23;
  v37 = v56;
  if (v58)
  {
    v38 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v34 = swift_bridgeObjectRelease(v35).n128_u64[0];
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v30, "setText:", v38, v34);

  v40 = v53;
  v42 = ShelfLayoutContext.contentPageGrid.getter(v41);
  v43 = PageGrid.columnWidth.getter(v42);
  v44 = v55;
  v45 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
  v46 = v45(v40, v55);
  *(double *)(v25 + OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_columnWidth) = v43;
  ShelfLayoutContext.contentPageGrid.getter(v46);
  v48 = PageGrid.interColumnSpace.getter(v47);
  v45(v40, v44);
  result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v49, v36);
  *(double *)(v25 + OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_interColumnSpace) = v48;
  return result;
}

id sub_1001D29AC(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t ObjectType;
  uint64_t v4;
  double *v5;
  double v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double Width;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  ObjectType = swift_getObjectType(v2, a2);
  v4 = ObjectType;
  if (v2[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_currentState + 40])
    v5 = (double *)&v2[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_columnWidth];
  else
    v5 = (double *)&v2[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_currentState
                     + 24];
  v6 = *v5;
  v7 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_firstColumnLabel];
  v29.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  objc_msgSend(v7, "measurementsWithFitting:in:", v2, v6, CGRectGetHeight(v29));
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = LayoutMarginsAware<>.layoutFrame.getter(v4);
  v10 = CGRect.withLayoutDirection(using:relativeTo:)(v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;

  objc_msgSend(v7, "setFrame:", v10, v12, v14, v16);
  v17 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView_pinnedLabel];
  v30.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v4);
  Width = CGRectGetWidth(v30);
  v31.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v4);
  objc_msgSend(v17, "measurementsWithFitting:in:", v2, Width, CGRectGetHeight(v31));
  v19 = objc_msgSend(v2, "traitCollection");
  v20 = LayoutMarginsAware<>.layoutFrame.getter(v4);
  v21 = CGRect.withLayoutDirection(using:relativeTo:)(v19, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;

  return objc_msgSend(v17, "setFrame:", v21, v23, v25, v27);
}

uint64_t type metadata accessor for InteractiveProductReviewsShelfHeaderView()
{
  return objc_opt_self(_TtC20ProductPageExtension40InteractiveProductReviewsShelfHeaderView);
}

uint64_t sub_1001D2C58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Shelf.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1001D2C80(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  double v51;
  __n128 v52;
  char *v53;
  uint64_t KeyPath;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  double v69;
  double v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  double v77;
  __n128 v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  void (*v83)(char *, uint64_t);
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t);
  __int128 v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[3];

  v90 = a1;
  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v100 = *(_QWORD *)(v1 - 8);
  v101 = v1;
  __chkstk_darwin(v1);
  v99 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SpacerDimension(0);
  v97 = *(_QWORD *)(v3 - 8);
  v98 = v3;
  __chkstk_darwin(v3);
  v96 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v93 = *(_QWORD *)(v5 - 8);
  v94 = v5;
  v6 = __chkstk_darwin(v5);
  v92 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LabelPlaceholder(0, v6);
  v103 = *(_QWORD *)(v8 - 8);
  v104 = v8;
  __chkstk_darwin(v8);
  v102 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v85 - v11;
  v13 = type metadata accessor for PageGrid(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicTextAppearance(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v85 - v23;
  DynamicTextAppearance.init()(v25);
  if (qword_100806258 != -1)
    swift_once(&qword_100806258, sub_1004C7328);
  v26 = type metadata accessor for FontUseCase(0);
  v27 = sub_10000EFC4(v26, (uint64_t)qword_1008697E0);
  v89 = v24;
  DynamicTextAppearance.withFontUseCase(_:)(v27);
  v95 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  v28 = v95(v21, v18);
  ShelfLayoutContext.contentPageGrid.getter(v28);
  v29 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v31 = v30;
  v88 = v18;
  v86 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  v32 = v86(v17, v13);
  v33 = ProductReviewsMetadata.reviewSummaryTitle.getter(v32);
  v35 = v34;
  v90 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v90(v21, v24, v18);
  v36 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v33, v35, v21, v36);
  v38 = (void *)ShelfLayoutContext.traitCollection.getter(v37);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v39 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v91 = v12;
  v40 = v39;
  v41 = swift_allocObject(v39, 40, 7);
  v87 = xmmword_100640AE0;
  *(_OWORD *)(v41 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v41 + 32) = v38;
  v42 = v38;
  v43 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v41);
  dispatch thunk of Measurable.measurements(fitting:in:)(v43, v104, &protocol witness table for LabelPlaceholder, v29, v31);
  v45 = v44;

  v47 = ShelfLayoutContext.contentPageGrid.getter(v46);
  v48 = static CGFloat.allColumns.getter(v47);
  v49 = PageGrid.componentMeasuringSize(spanning:)(v48);
  v51 = v50;
  v52.n128_f64[0] = ((double (*)(char *, uint64_t))v86)(v17, v13);
  v53 = v92;
  ShelfLayoutContext.shelf.getter(v52);
  KeyPath = swift_getKeyPath(&unk_100650DF0);
  v55 = v94;
  ReadOnlyLens.subscript.getter(v105, KeyPath, v94);
  v56 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v53, v55, v56);
  v57 = v105[0];
  v58 = v105[1];
  v59 = v89;
  v60 = v88;
  v90(v21, v89, v88);
  v61 = LabelPlaceholder.Options.init(rawValue:)(0);
  v62 = v102;
  LabelPlaceholder.init(_:with:where:)(v57, v58, v21, v61);
  v64 = (void *)ShelfLayoutContext.traitCollection.getter(v63);
  v65 = swift_allocObject(v40, 40, 7);
  *(_OWORD *)(v65 + 16) = v87;
  *(_QWORD *)(v65 + 32) = v64;
  v66 = v64;
  v67 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v65);
  v68 = v104;
  dispatch thunk of Measurable.measurements(fitting:in:)(v67, v104, &protocol witness table for LabelPlaceholder, v49, v51);
  v70 = v69;

  if (v45 > v70)
    v70 = v45;
  v71 = v96;
  v72 = SpacerDimension.init(constant:)(16.0);
  v73 = ShelfLayoutContext.traitEnvironment.getter(v72);
  v74 = v99;
  static Dimensions.defaultRoundingRule.getter(v73);
  v75 = sub_1001D327C();
  v76 = v98;
  v77 = AnyDimension.value(in:rounded:)(v73, v74, v98, v75);
  v78 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v74, v101, v78);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v71, v76);
  v79 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v80 = objc_msgSend(v79, "fractionalWidthDimension:", 1.0);
  v81 = objc_msgSend(v79, "absoluteDimension:", v70 + v77);
  v82 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v80, v81);

  v83 = *(void (**)(char *, uint64_t))(v103 + 8);
  v83(v62, v68);
  v83(v91, v68);
  v95(v59, v60);
  return v82;
}

unint64_t sub_1001D327C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100814BB0;
  if (!qword_100814BB0)
  {
    v1 = type metadata accessor for SpacerDimension(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SpacerDimension, v1);
    atomic_store(result, (unint64_t *)&qword_100814BB0);
  }
  return result;
}

uint64_t sub_1001D32C4()
{
  uint64_t v0;

  v0 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  sub_100011980(v0, qword_100865C68);
  sub_10000EFC4(v0, (uint64_t)qword_100865C68);
  return PreferenceKey.init(_:)(0xD000000000000034, 0x8000000100693010, &type metadata for Bool);
}

__n128 sub_1001D3330()
{
  __n128 result;

  __asm { FMOV            V0.2D, #10.0 }
  xmmword_100814BB8 = (__int128)result;
  return result;
}

char *sub_1001D3344(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *ObjCClassFromMetadata;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  objc_super v28;
  uint64_t v29;

  v9 = type metadata accessor for LocalPreferences(0);
  v10 = v4;
  static LocalPreferences.AppStoreKitInternal.getter(v10);
  if (qword_100804D98 != -1)
    swift_once(&qword_100804D98, sub_1001D32C4);
  v11 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v12 = sub_10000EFC4(v11, (uint64_t)qword_100865C68);
  Preferences.subscript.getter(&v29, v12, v9, &type metadata for Bool, &protocol witness table for LocalPreferences);
  swift_release();
  if (v29 != 2 && (v29 & 1) != 0)
    v13 = (objc_class *)type metadata accessor for AccessoryDarkMaterialView();
  else
    v13 = (objc_class *)type metadata accessor for SemiLightMaterialView();
  v14 = objc_msgSend(objc_allocWithZone(v13), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_materialView] = v14;
  v15 = OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView;
  v16 = type metadata accessor for InteractiveBackgroundContentView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v16);
  *(_QWORD *)&v10[v15] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v18 = OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_bottomBackgroundView;
  *(_QWORD *)&v10[v18] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v19 = &v10[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState];
  v20 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);

  v28.receiver = v10;
  v28.super_class = (Class)type metadata accessor for InteractiveSectionBackgroundView(0);
  v21 = objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v22 = (char *)v21;
  v24 = (void *)static UIColor.defaultBackground.getter(v22, v23);
  objc_msgSend(v22, "setBackgroundColor:", v24);

  v25 = *(void **)&v22[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_bottomBackgroundView];
  objc_msgSend(v25, "setBackgroundColor:", 0);
  objc_msgSend(v22, "addSubview:", v25);
  v26 = *(void **)&v22[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView];
  objc_msgSend(v26, "setBackgroundColor:", 0);
  objc_msgSend(v26, "setAlpha:", 1.0);
  objc_msgSend(v22, "addSubview:", v26);
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_materialView]);

  return v22;
}

id sub_1001D3620()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for InteractiveSectionBackgroundView(0);
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_materialView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_bottomBackgroundView];
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v3, "setFrame:");
}

uint64_t sub_1001D370C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v9[24];
  objc_super v10;

  v1 = sub_10000DAF8((uint64_t *)&unk_10081EB80);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (objc_class *)type metadata accessor for InteractiveSectionBackgroundView(0);
  v10.receiver = v0;
  v10.super_class = v4;
  objc_msgSendSuper2(&v10, "prepareForReuse");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView], "setBackgroundColor:", 0);
  ArtworkView.image.setter(0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_bottomBackgroundView], "setBackgroundColor:", 0);
  ArtworkView.image.setter(0);
  v5 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (uint64_t)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState], v9, 33, 0);
  sub_1001D536C((uint64_t)v3, v6);
  return swift_endAccess(v9);
}

void sub_1001D3880(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_BYTE *, uint64_t, uint64_t);
  unsigned int v38;
  _QWORD *v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void (*v41)(_QWORD);
  _BYTE *v42;
  uint64_t v43;
  uint64_t (*v44)(_BYTE *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v51;
  uint64_t v52;
  _QWORD *v53;
  _BYTE *v54;
  void (*v55)(_BYTE *);
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  void (*v71)(_BYTE *, uint64_t);
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  char v76;
  void (*v77)(_BYTE *, uint64_t);
  _BYTE v78[12];
  int v79;
  _BYTE *v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  unsigned int (*v85)(_BYTE *, uint64_t, uint64_t);
  void (*v86)(_BYTE *);
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v99[24];
  char v100[32];

  v97 = a1;
  v4 = type metadata accessor for ShelfBackground(0);
  v96 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v83 = &v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v94 = sub_10000DAF8(&qword_100814CA8);
  __chkstk_darwin(v94);
  v87 = &v78[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v78[-v8];
  v10 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v84 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10000DAF8((uint64_t *)&unk_10081EB80);
  __chkstk_darwin(v13);
  v88 = &v78[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v78[-v16];
  __chkstk_darwin(v18);
  v20 = &v78[-v19];
  v21 = sub_10000DAF8(&qword_100814CB0);
  __chkstk_darwin(v21);
  v82 = &v78[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v91 = &v78[-v24];
  __chkstk_darwin(v25);
  v92 = &v78[-v26];
  __chkstk_darwin(v27);
  v81 = &v78[-v28];
  __chkstk_darwin(v29);
  v31 = &v78[-v30];
  __chkstk_darwin(v32);
  v34 = &v78[-v33];
  v35 = type metadata accessor for ArtworkLoader(0);
  v98 = *(_QWORD *)(a2 + qword_10086B3B8);
  if (v98)
  {
    v36 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState];
    swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState], v100, 0, 0);
    v95 = v36;
    sub_100018ADC(v36, (uint64_t)v20, (uint64_t *)&unk_10081EB80);
    v37 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
    v90 = v10;
    v85 = v37;
    v38 = v37(v20, 1, v10);
    v93 = v2;
    v89 = v11;
    if (v38)
    {
      swift_retain(v98);
      sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_10081EB80);
      v39 = v96;
      v40 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v96[7];
      v40(v34, 1, 1, v4);
      v41 = (void (*)(_QWORD))v39[2];
    }
    else
    {
      v42 = v84;
      sub_1001D5328((uint64_t)v20, (uint64_t)v84);
      swift_retain(v98);
      sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_10081EB80);
      v39 = v96;
      v41 = (void (*)(_QWORD))v96[2];
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v41)(v34, v42, v4);
      sub_1001D53B4((uint64_t)v42);
      v40 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v39[7];
      v40(v34, 0, 1, v4);
    }
    ((void (*)(_BYTE *, uint64_t, uint64_t))v41)(v31, v97, v4);
    v40(v31, 0, 1, v4);
    v43 = (uint64_t)&v9[*(int *)(v94 + 48)];
    sub_100018ADC((uint64_t)v34, (uint64_t)v9, &qword_100814CB0);
    sub_100018ADC((uint64_t)v31, v43, &qword_100814CB0);
    v44 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v39[6];
    v45 = v44(v9, 1, v4);
    v86 = (void (*)(_BYTE *))v41;
    if (v45 == 1)
    {
      sub_100010F2C((uint64_t)v31, &qword_100814CB0);
      sub_100010F2C((uint64_t)v34, &qword_100814CB0);
      v46 = v44((_BYTE *)v43, 1, v4);
      v47 = v97;
      if (v46 == 1)
      {
        sub_100010F2C((uint64_t)v9, &qword_100814CB0);
        v48 = v90;
        v49 = (uint64_t)v87;
        v50 = v85;
        goto LABEL_12;
      }
    }
    else
    {
      v51 = v81;
      sub_100018ADC((uint64_t)v9, (uint64_t)v81, &qword_100814CB0);
      if (v44((_BYTE *)v43, 1, v4) != 1)
      {
        v67 = (void (*)(_BYTE *, uint64_t, uint64_t))v39[4];
        v80 = v17;
        v68 = v51;
        v69 = v83;
        v67(v83, v43, v4);
        v70 = sub_10000E720((unint64_t *)&qword_10080ED98, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
        v79 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v69, v4, v70);
        v71 = (void (*)(_BYTE *, uint64_t))v39[1];
        v71(v69, v4);
        sub_100010F2C((uint64_t)v31, &qword_100814CB0);
        sub_100010F2C((uint64_t)v34, &qword_100814CB0);
        v72 = v68;
        v17 = v80;
        v71(v72, v4);
        sub_100010F2C((uint64_t)v9, &qword_100814CB0);
        v47 = v97;
        v48 = v90;
        v49 = (uint64_t)v87;
        v50 = v85;
        if ((v79 & 1) != 0)
        {
LABEL_12:
          sub_100018ADC(v95, (uint64_t)v17, (uint64_t *)&unk_10081EB80);
          if (v50(v17, 1, v48))
          {
            sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_10081EB80);
            v52 = 1;
            v53 = v96;
            v54 = v92;
            v55 = v86;
          }
          else
          {
            v56 = v84;
            sub_1001D5328((uint64_t)v17, (uint64_t)v84);
            sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_10081EB80);
            v54 = v92;
            v55 = v86;
            ((void (*)(_BYTE *, _BYTE *, uint64_t))v86)(v92, &v56[*(int *)(v48 + 28)], v4);
            sub_1001D53B4((uint64_t)v56);
            v52 = 0;
            v53 = v96;
          }
          v40(v54, v52, 1, v4);
          v57 = v91;
          v97 = v47 + *(int *)(v48 + 28);
          v55(v91);
          v40(v57, 0, 1, v4);
          v58 = (uint64_t)v57;
          v59 = v49 + *(int *)(v94 + 48);
          sub_100018ADC((uint64_t)v54, v49, &qword_100814CB0);
          sub_100018ADC(v58, v59, &qword_100814CB0);
          if (v44((_BYTE *)v49, 1, v4) == 1)
          {
            sub_100010F2C(v58, &qword_100814CB0);
            sub_100010F2C((uint64_t)v54, &qword_100814CB0);
            v60 = v44((_BYTE *)v59, 1, v4);
            v61 = v93;
            v63 = (uint64_t)v88;
            v62 = v89;
            if (v60 == 1)
            {
              sub_100010F2C(v49, &qword_100814CB0);
LABEL_22:
              objc_msgSend(*(id *)&v61[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView], "setAlpha:", *(double *)(v47 + *(int *)(v48 + 20)));
              sub_1001D5328(v47, v63);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v48);
              v66 = v95;
              swift_beginAccess(v95, v99, 33, 0);
              sub_1001D536C(v63, v66);
              swift_endAccess(v99);
              swift_release();
              return;
            }
          }
          else
          {
            v64 = v82;
            sub_100018ADC(v49, (uint64_t)v82, &qword_100814CB0);
            if (v44((_BYTE *)v59, 1, v4) != 1)
            {
              v73 = v83;
              ((void (*)(_BYTE *, uint64_t, uint64_t))v53[4])(v83, v59, v4);
              v74 = sub_10000E720((unint64_t *)&qword_10080ED98, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfBackground, (uint64_t)&protocol conformance descriptor for ShelfBackground);
              v75 = v64;
              v76 = dispatch thunk of static Equatable.== infix(_:_:)(v64, v73, v4, v74);
              v77 = (void (*)(_BYTE *, uint64_t))v53[1];
              v77(v73, v4);
              sub_100010F2C((uint64_t)v91, &qword_100814CB0);
              sub_100010F2C((uint64_t)v92, &qword_100814CB0);
              v77(v75, v4);
              sub_100010F2C(v49, &qword_100814CB0);
              v61 = v93;
              v63 = (uint64_t)v88;
              v62 = v89;
              v65 = v98;
              if ((v76 & 1) != 0)
                goto LABEL_22;
              goto LABEL_21;
            }
            sub_100010F2C((uint64_t)v91, &qword_100814CB0);
            sub_100010F2C((uint64_t)v92, &qword_100814CB0);
            ((void (*)(_BYTE *, uint64_t))v53[1])(v64, v4);
            v61 = v93;
            v63 = (uint64_t)v88;
            v62 = v89;
          }
          sub_100010F2C(v49, &qword_100814CA8);
          v65 = v98;
LABEL_21:
          sub_1001D4FC0(*(void **)&v61[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_bottomBackgroundView], v97, v65, v61);
          goto LABEL_22;
        }
LABEL_11:
        sub_1001D4FC0(*(void **)&v93[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView], v47, v98, v93);
        goto LABEL_12;
      }
      sub_100010F2C((uint64_t)v31, &qword_100814CB0);
      sub_100010F2C((uint64_t)v34, &qword_100814CB0);
      ((void (*)(_BYTE *, uint64_t))v39[1])(v51, v4);
      v47 = v97;
    }
    sub_100010F2C((uint64_t)v9, &qword_100814CA8);
    v48 = v90;
    v49 = (uint64_t)v87;
    v50 = v85;
    goto LABEL_11;
  }
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v35, v35);
  __break(1u);
}

id sub_1001D41AC()
{
  return sub_1001D4F3C(type metadata accessor for InteractiveSectionBackgroundView);
}

uint64_t sub_1001D421C()
{
  return type metadata accessor for InteractiveSectionBackgroundView(0);
}

uint64_t type metadata accessor for InteractiveSectionBackgroundView(uint64_t a1)
{
  uint64_t result;

  result = qword_100814C08;
  if (!qword_100814C08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InteractiveSectionBackgroundView);
  return result;
}

void sub_1001D4260(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1001D42E0(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_1001D42E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100814C18)
  {
    v2 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100814C18);
  }
}

uint64_t sub_1001D4334@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, (uint64_t *)&unk_10081EB80);
}

void sub_1001D4390(uint64_t a1, uint64_t a2)
{
  sub_1001D3880(a1, a2);
}

char *sub_1001D43B0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  CGAffineTransform v19;
  objc_super v20;

  v9 = OBJC_IVAR____TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42432InteractiveBackgroundContentView_artworkView;
  v10 = type metadata accessor for ArtworkView(0);
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for InteractiveBackgroundContentView();
  v13 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42432InteractiveBackgroundContentView_artworkView;
  v15 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42432InteractiveBackgroundContentView_artworkView];
  v16 = v13;
  objc_msgSend(v15, "setContentMode:", 4);
  v17 = objc_msgSend(v15, "layer");
  CGAffineTransformMakeScale(&v19, 3.0, 3.0);
  objc_msgSend(v17, "setAffineTransform:", &v19);

  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v13[v14]);
  return v16;
}

id sub_1001D470C()
{
  return sub_1001D4F3C((uint64_t (*)(_QWORD))type metadata accessor for InteractiveBackgroundContentView);
}

uint64_t type metadata accessor for InteractiveBackgroundContentView()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42432InteractiveBackgroundContentView);
}

uint64_t sub_1001D4748()
{
  return ArtworkView.image.getter();
}

uint64_t sub_1001D4770(uint64_t a1)
{
  return ArtworkView.image.setter(a1);
}

void (*sub_1001D4798(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  a1[1] = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42432InteractiveBackgroundContentView_artworkView);
  *a1 = ArtworkView.image.getter();
  return sub_1001D47D8;
}

void sub_1001D47D8(_QWORD *a1, char a2)
{
  void *v2;
  id v3;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ArtworkView.image.setter(v2);

  }
  else
  {
    ArtworkView.image.setter(*a1);
  }
}

void sub_1001D482C(UIImage_optional a1, Swift::Bool a2)
{
  ArtworkView.show(image:isAnimationPermitted:)(a1, a2);
}

id sub_1001D4854()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class v14;
  id v15;
  Class v16;
  id v17;
  id v18;
  id v19;
  double v20;
  objc_super v22;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 90.0);
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for SemiLightMaterialView();
  v2 = objc_msgSendSuper2(&v22, "initWithEffect:", v1);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v4 = v3;
  v5 = objc_allocWithZone((Class)CAFilter);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithType:", v7, swift_bridgeObjectRelease(v4).n128_f64[0]);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setValue:forKey:", isa, kCAFilterInputAmount);

  v10 = objc_msgSend(v6, "layer");
  v11 = sub_10000DAF8(&qword_1008091A0);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100640720;
  *(_QWORD *)(v12 + 56) = sub_100018B6C(0, &qword_10080E4E8, CAFilter_ptr);
  *(_QWORD *)(v12 + 32) = v8;
  v13 = v8;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "setFilters:", v14, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v15 = objc_msgSend(v6, "layer");
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v16 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 0.4).super.isa;
  v17 = -[objc_class CGColor](v16, "CGColor");

  objc_msgSend(v15, "setBackgroundColor:", v17);
  v18 = objc_msgSend(v6, "layer");

  v19 = objc_msgSend(v18, "mask");
  LODWORD(v20) = 1.0;
  objc_msgSend(v19, "setOpacity:", v20);

  return v6;
}

id sub_1001D4B8C()
{
  return sub_1001D4F3C((uint64_t (*)(_QWORD))type metadata accessor for SemiLightMaterialView);
}

uint64_t type metadata accessor for SemiLightMaterialView()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42421SemiLightMaterialView);
}

id sub_1001D4BB8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class v14;
  id v15;
  Class v16;
  id v17;
  id v18;
  id v19;
  double v20;
  objc_super v22;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 90.0);
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for AccessoryDarkMaterialView();
  v2 = objc_msgSendSuper2(&v22, "initWithEffect:", v1);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v4 = v3;
  v5 = objc_allocWithZone((Class)CAFilter);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithType:", v7, swift_bridgeObjectRelease(v4).n128_f64[0]);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setValue:forKey:", isa, kCAFilterInputAmount);

  v10 = objc_msgSend(v6, "layer");
  v11 = sub_10000DAF8(&qword_1008091A0);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100640720;
  *(_QWORD *)(v12 + 56) = sub_100018B6C(0, &qword_10080E4E8, CAFilter_ptr);
  *(_QWORD *)(v12 + 32) = v8;
  v13 = v8;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "setFilters:", v14, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v15 = objc_msgSend(v6, "layer");
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v16 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.58824, 0.58824, 0.15).super.isa;
  v17 = -[objc_class CGColor](v16, "CGColor");

  objc_msgSend(v15, "setBackgroundColor:", v17);
  v18 = objc_msgSend(v6, "layer");

  v19 = objc_msgSend(v18, "mask");
  if (v19)
  {
    LODWORD(v20) = 1.0;
    objc_msgSend(v19, "setOpacity:", v20);

  }
  return v6;
}

void sub_1001D4EF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v7;

  v7 = a3;
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, "init(effect:)", 13, 0);
  __break(1u);
}

id sub_1001D4F30()
{
  return sub_1001D4F3C((uint64_t (*)(_QWORD))type metadata accessor for AccessoryDarkMaterialView);
}

id sub_1001D4F3C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for AccessoryDarkMaterialView()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_77054DFF2A0EE1186124695D301FA42425AccessoryDarkMaterialView);
}

uint64_t sub_1001D4F94()
{
  return sub_10000E720(&qword_100814CA0, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveBackgroundContentView, (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_1001D4FC0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  void **v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  void *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;

  v7 = type metadata accessor for AspectRatio(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShelfBackground(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (void **)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a2, v11, v13);
  v16 = (*(uint64_t (**)(void **, uint64_t))(v12 + 88))(v15, v11);
  if (v16 == enum case for ShelfBackground.artwork(_:))
  {
    (*(void (**)(void **, uint64_t))(v12 + 96))(v15, v11);
    v35 = (char *)v15 + *(int *)(sub_10000DAF8(&qword_100814CB8) + 48);
    v17 = type metadata accessor for InteractiveBackgroundContentView();
    v18 = sub_10000E720(&qword_100814CC0, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveBackgroundContentView, (uint64_t)&unk_100650EDC);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(a1, 1, v17, v18);
    ArtworkView.image.setter(0);
    AspectRatio.init(_:_:)(objc_msgSend(a4, "frame"));
    if (qword_100804DA0 != -1)
      swift_once(&qword_100804DA0, sub_1001D3330);
    v19 = AspectRatio.maxSize(fitting:)(*(double *)&xmmword_100814BB8, *((double *)&xmmword_100814BB8 + 1));
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v22 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v19, v21);
    v23 = (void *)Artwork.backgroundColor.getter(v22);
    objc_msgSend(a1, "setBackgroundColor:", v23);

    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v22, 2, 1, a1, v17, v18);
    swift_release();
    v24 = swift_release();
    v25 = type metadata accessor for ShelfBackgroundStyle(0, v24);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v35, v25);
  }
  else if (v16 == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v12 + 96))(v15, v11);
    v27 = *v15;
    v28 = (char *)v15 + *(int *)(sub_10000DAF8(&qword_100808E30) + 48);
    ArtworkView.image.setter(0);
    objc_msgSend(a1, "setBackgroundColor:", v27);

    v30 = type metadata accessor for ShelfBackgroundStyle(0, v29);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v28, v30);
  }
  else
  {
    ArtworkView.image.setter(0);
    v31 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v33 = (void *)static UIColor.defaultBackground.getter(v31, v32);
    objc_msgSend(a1, "setBackgroundColor:", v33);

    return (*(uint64_t (**)(void **, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1001D5328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D536C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_10081EB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D53B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D53F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *ObjCClassFromMetadata;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for LocalPreferences(0);
  static LocalPreferences.AppStoreKitInternal.getter(v2);
  if (qword_100804D98 != -1)
    swift_once(&qword_100804D98, sub_1001D32C4);
  v3 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v4 = sub_10000EFC4(v3, (uint64_t)qword_100865C68);
  Preferences.subscript.getter(&v14, v4, v2, &type metadata for Bool, &protocol witness table for LocalPreferences);
  swift_release();
  if (v14 != 2 && (v14 & 1) != 0)
    v5 = (objc_class *)type metadata accessor for AccessoryDarkMaterialView();
  else
    v5 = (objc_class *)type metadata accessor for SemiLightMaterialView();
  v6 = objc_msgSend(objc_allocWithZone(v5), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_materialView] = v6;
  v7 = OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_topBackgroundView;
  v8 = type metadata accessor for InteractiveBackgroundContentView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v8);
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v10 = OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_bottomBackgroundView;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v11 = &v1[OBJC_IVAR____TtC20ProductPageExtension32InteractiveSectionBackgroundView_currentState];
  v12 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/InteractiveSectionBackgroundView.swift", 59, 2, 76, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D5584(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0, v7);
  v10 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_100744240, 40, 7);
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  aBlock[4] = sub_1001D6964;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100744258;
  v16 = _Block_copy(aBlock);
  v17 = a1;
  swift_errorRetain(a2);
  swift_retain(a3);
  v18 = swift_release();
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v21 = sub_10004EA04();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v23);
}

uint64_t sub_1001D5798(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char HaveAnonymous;
  id v38;
  id v39;
  __n128 v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  __n128 v46;
  uint64_t (*v47)(char *, uint64_t, __n128);
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::String v64;
  id v65;
  __n128 v66;
  Swift::String v67;
  __n128 v68;
  Swift::String v70;
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 aBlock;
  __int128 v78;
  double (*v79)(char, uint64_t, __n128);
  uint64_t v80;
  _QWORD v81[3];
  char v82[8];

  v74 = a3;
  v71 = a2;
  v72 = type metadata accessor for MetricsTopicProvider(0);
  v4 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Bag(0);
  v8 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  v76 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v73 = (char *)&v71 - v13;
  v14 = type metadata accessor for LogMessage.StringInterpolation(0, v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v71 - v19;
  v21 = type metadata accessor for OSLogger(0, v18);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v71 - v26;
  if (!a1)
  {
    v49 = v71;
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v50 = sub_10000EFC4(v21, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v27, v50, v21);
    v51 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v52 = type metadata accessor for LogMessage(0);
    v53 = swift_allocObject(v51, ((*(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v52 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80) | 7);
    *(_OWORD *)(v53 + 16) = xmmword_100640720;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(68, 2);
    v54._object = (void *)0x8000000100691F60;
    v54._countAndFlagsBits = 0xD00000000000003BLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    aBlock = 0u;
    v78 = 0u;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, (__n128)0);
    sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
    v55._countAndFlagsBits = 0x3A726F727265202CLL;
    v55._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    if (v49)
    {
      swift_getErrorValue(v49, v82, v81);
      v56 = Error.localizedDescription.getter(v81[1], v81[2]);
      *((_QWORD *)&v78 + 1) = &type metadata for String;
      *(_QWORD *)&aBlock = v56;
      *((_QWORD *)&aBlock + 1) = v58;
    }
    else
    {
      v57 = 0uLL;
      aBlock = 0u;
      v78 = 0u;
    }
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v57);
    sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v70);
    LogMessage.init(stringInterpolation:)(v20);
    Logger.info(_:)(v53, v21, &protocol witness table for OSLogger);
    v46 = swift_bridgeObjectRelease(v53);
    v47 = *(uint64_t (**)(char *, uint64_t, __n128))(v22 + 8);
    v48 = v27;
    return v47(v48, v21, v46);
  }
  v28 = a1;
  v29 = objc_msgSend(v28, "request");
  if (v29)
  {
    v30 = v29;
    v31 = type metadata accessor for ObjectGraph(0);
    v71 = v28;
    v32 = v73;
    v33 = v74;
    v21 = v75;
    inject<A, B>(_:from:)(v75, v74, v75, v31);
    v34 = sub_100018B6C(0, (unint64_t *)&qword_10080AC60, ACAccountStore_ptr);
    inject<A, B>(_:from:)(v34, v33, v34, v31);
    v35 = (void *)aBlock;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v10, v32, v21);
    v36 = MetricsTopicProvider.init(bag:)(v10);
    HaveAnonymous = MetricsTopicProvider.shouldHaveAnonymousEvents.getter(v36);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v72);
    v38 = objc_msgSend(v35, "ams_activeiTunesAccount");
    objc_msgSend(v30, "setAccount:", v38);

    objc_msgSend(v30, "setAnonymousMetrics:", HaveAnonymous & 1);
    v39 = v30;
    v41 = objc_msgSend(objc_allocWithZone((Class)AMSUIEngagementTaskViewController), "initWithRequest:bag:", v39, Bag.amsBag.getter(v40));

    v42 = objc_msgSend(v41, "canPresent", swift_unknownObjectRelease().n128_f64[0]);
    v43 = swift_allocObject(&unk_100744290, 32, 7);
    *(_QWORD *)(v43 + 16) = v41;
    *(_QWORD *)(v43 + 24) = v33;
    v79 = sub_1001D699C;
    v80 = v43;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v78 = sub_1004EA610;
    *((_QWORD *)&v78 + 1) = &unk_1007442A8;
    v44 = _Block_copy(&aBlock);
    v45 = v41;
    swift_retain(v33);
    objc_msgSend(v42, "addFinishBlock:", v44, swift_release().n128_f64[0]);
    _Block_release(v44);

    v47 = *(uint64_t (**)(char *, uint64_t, __n128))(v76 + 8);
    v48 = v32;
    return v47(v48, v21, v46);
  }
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v59 = v21;
  v60 = sub_10000EFC4(v21, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v60, v21);
  v61 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v62 = type metadata accessor for LogMessage(0);
  v63 = swift_allocObject(v61, ((*(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v62 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v62 - 8) + 80) | 7);
  *(_OWORD *)(v63 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(73, 1);
  v64._countAndFlagsBits = 0xD000000000000049;
  v64._object = (void *)0x80000001006930F0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v64);
  *((_QWORD *)&v78 + 1) = sub_100018B6C(0, (unint64_t *)&qword_1008141F0, AMSUserNotificationAuthorizationResult_ptr);
  *(_QWORD *)&aBlock = v28;
  v65 = v28;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v66);
  sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
  v67._countAndFlagsBits = 0;
  v67._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v67);
  LogMessage.init(stringInterpolation:)(v16);
  Logger.info(_:)(v63, v59, &protocol witness table for OSLogger);

  v68 = swift_bridgeObjectRelease(v63);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v22 + 8))(v24, v59, v68);
}

double sub_1001D5E4C(char a1, uint64_t a2, void *a3, uint64_t a4, __n128 a5)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  Swift::String v69;
  double result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[4];
  __int128 aBlock;
  __int128 v97;
  id (*v98)();
  uint64_t v99;
  _QWORD v100[3];
  char v101[8];

  v94 = a4;
  v82 = a3;
  v7 = type metadata accessor for LogMessage.StringInterpolation(0, a5);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for OSLogger(0, v8);
  v11 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v79 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v13);
  v92 = (uint64_t *)((char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v91 = *(_QWORD *)(v93 - 8);
  v15 = __chkstk_darwin(v93);
  v78 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for FlowOrigin(0, v15);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v89 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for FlowAnimationBehavior(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v88 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for FlowPresentationContext(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v86 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ActionMetrics(0, v20);
  __chkstk_darwin(v21);
  v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v24);
  v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v27);
  v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for FlowPage(0);
  v31 = *(_QWORD *)(v30 - 8);
  *(_QWORD *)&v32 = __chkstk_darwin(v30).n128_u64[0];
  v34 = (char *)&v77 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v35 = v82;
    v36 = objc_msgSend(v82, "startEngagement", v32);
    v37 = swift_allocObject(&unk_1007442E0, 24, 7);
    *(_QWORD *)(v37 + 16) = v35;
    v98 = sub_10018C0CC;
    v99 = v37;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v97 = sub_1001B6740;
    *((_QWORD *)&v97 + 1) = &unk_1007442F8;
    v38 = _Block_copy(&aBlock);
    v39 = v35;
    objc_msgSend(v36, "addFinishBlock:", v38, swift_release().n128_f64[0]);
    _Block_release(v38);

    v98 = 0;
    aBlock = 0u;
    v97 = 0u;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v34, enum case for FlowPage.viewController(_:), v30);
    v41 = type metadata accessor for URL(0, v40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v29, 1, 1, v41);
    v42 = type metadata accessor for ReferrerData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v26, 1, 1, v42);
    v95[3] = sub_100018B6C(0, &qword_100814CC8, AMSUIEngagementTaskViewController_ptr);
    v95[0] = v39;
    static ActionMetrics.notInstrumented.getter(v39);
    v43 = v86;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v86, enum case for FlowPresentationContext.infer(_:), v81);
    v44 = v88;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v88, enum case for FlowAnimationBehavior.infer(_:), v84);
    v45 = v89;
    v46 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v85 + 104))(v89, enum case for FlowOrigin.inapp(_:), v87);
    v47 = static FlowActionPresentation.stackPush.getter(v46);
    v49 = v48;
    v50 = type metadata accessor for FlowAction(0);
    swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
    v76 = v49;
    v51 = v94;
    v52 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&aBlock, 0, 0, 0, v34, v29, 0, 0, v26, v95, v23, v43, v44, v45, 0, v47, v76);
    v54 = v92;
    v53 = v93;
    BaseObjectGraph.optional<A>(_:)(v92, v93, v93);
    v55 = v91;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v91 + 48))(v54, 1, v53) == 1)
    {
      sub_100010F2C((uint64_t)v54, (uint64_t *)&unk_100809290);
      sub_10000DAF8(&qword_100808570);
      v56 = sub_10005ABBC();
      v57 = swift_allocError(&type metadata for GeneralActionImplementationError, v56, 0, 0);
      *v58 = 1;
      Promise.__allocating_init(error:)(v57);
    }
    else
    {
      v71 = (uint64_t)v78;
      (*(void (**)(char *, _QWORD *, uint64_t))(v55 + 32))(v78, v54, v53);
      sub_10032D5D4(v52, v51, v71);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v71, v53);
    }
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else if (a2)
  {
    swift_errorRetain(a2);
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v59 = v90;
    v60 = sub_10000EFC4(v90, (uint64_t)qword_10086AB38);
    v61 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v79, v60, v59);
    v62 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v63 = type metadata accessor for LogMessage(0);
    v64 = swift_allocObject(v62, ((*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) | 7);
    *(_OWORD *)(v64 + 16) = xmmword_100640720;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(71, 1);
    v65._object = (void *)0x80000001006931C0;
    v65._countAndFlagsBits = 0xD000000000000047;
    LogMessage.StringInterpolation.appendLiteral(_:)(v65);
    swift_getErrorValue(a2, v101, v100);
    v66 = Error.localizedDescription.getter(v100[1], v100[2]);
    *((_QWORD *)&v97 + 1) = &type metadata for String;
    *(_QWORD *)&aBlock = v66;
    *((_QWORD *)&aBlock + 1) = v67;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v68);
    sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
    v69._countAndFlagsBits = 0;
    v69._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v69);
    LogMessage.init(stringInterpolation:)(v10);
    Logger.info(_:)(v64, v59, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v64);
    swift_errorRelease(a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v61, v59);
  }
  else
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v72 = v90;
    sub_10000EFC4(v90, (uint64_t)qword_10086AB38);
    v73 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v74 = type metadata accessor for LogMessage(0);
    v75 = swift_allocObject(v73, ((*(unsigned __int8 *)(*(_QWORD *)(v74 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v74 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v74 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v74 - 8) + 80) | 7);
    *(_OWORD *)(v75 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000058, 0x8000000100693160);
    Logger.info(_:)(v75, v72, &protocol witness table for OSLogger);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v75).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001D66EC(uint64_t a1, uint64_t a2)
{
  return sub_1001D66F4(a2);
}

uint64_t sub_1001D66F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v2 = type metadata accessor for ActionOutcome(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v7 = type metadata accessor for OSLogger(0, v4);
  sub_10000EFC4(v7, (uint64_t)qword_10086AB38);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v9 = type metadata accessor for LogMessage(0);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100640720;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100691EF0);
  Logger.info(_:)(v10, v7, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v10);
  v11 = objc_msgSend((id)objc_opt_self(AMSUserNotificationAuthorizationTask), "engagementRequestForFullSheet");
  aBlock[4] = sub_1001D6910;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6740;
  aBlock[3] = &unk_100744208;
  v12 = _Block_copy(aBlock);
  swift_retain(a1);
  objc_msgSend(v11, "addFinishBlock:", v12, swift_release().n128_f64[0]);
  _Block_release(v12);
  sub_10000DAF8(&qword_100808570);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for ActionOutcome.performed(_:), v2);
  v13 = Promise.__allocating_init(value:)(v6);

  return v13;
}

uint64_t sub_1001D6910(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001D5584(a1, a2, v2);
}

uint64_t sub_1001D6918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001D6928(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001D6930()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D6964()
{
  uint64_t v0;

  return sub_1001D5798(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1001D6970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1001D699C(char a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  return sub_1001D5E4C(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1001D69A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for UserNotificationsAuthorizationWithPrewarmActionImplementation()
{
  return &type metadata for UserNotificationsAuthorizationWithPrewarmActionImplementation;
}

uint64_t sub_1001D69D8()
{
  return sub_10000E720((unint64_t *)&unk_100814CD0, (uint64_t (*)(uint64_t))&type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction, (uint64_t)&protocol conformance descriptor for Action);
}

uint64_t sub_1001D6A1C(uint64_t a1)
{
  _QWORD v2[9];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = "\b";
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = &unk_100651030;
  v2[6] = &unk_100651048;
  v2[7] = &unk_100651048;
  v2[8] = &unk_100651048;
  return swift_initClassMetadata2(a1, 0, 9, v2, a1 + 1072);
}

uint64_t sub_1001D6AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  result = __chkstk_darwin(v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + qword_100814D20);
  if (v6)
  {
    v7 = swift_retain(v6);
    Date.init()(v7);
    PageRefreshGate.appWillForeground(on:)(v5);
    swift_release(v6);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_1001D6B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __n128 v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v10, v20, 0, 0);
  sub_100010EC0(v10, (uint64_t)v21);
  if (v22)
  {
    sub_10000EF80((uint64_t)v21, (uint64_t)v17);
    sub_100010F2C((uint64_t)v21, &qword_10080AFE0);
    v11 = v18;
    v12 = v19;
    sub_100010F08(v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), v6);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v9, v11, v12);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  }
  else
  {
    result = sub_100010F2C((uint64_t)v21, &qword_10080AFE0);
  }
  if (*(_QWORD *)(v1 + qword_100814D20))
  {
    swift_retain(*(_QWORD *)(v1 + qword_100814D20));
    Date.init()(v14);
    PageRefreshGate.appWillBackground(on:)(v5);
    v15 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  }
  return result;
}

uint64_t sub_1001D6CF0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_100814D08);
}

uint64_t sub_1001D6D00()
{
  return type metadata accessor for BaseCollectionCompositionalLayout();
}

uint64_t sub_1001D6D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_100814D20);
  *(_QWORD *)(v1 + qword_100814D20) = a1;
  return swift_release(v2);
}

uint64_t sub_1001D6D20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;

  v4 = v3;
  v32 = a3;
  v7 = *v4;
  v8 = swift_isaMask;
  v9 = type metadata accessor for Shelf.ContentType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v29 - v15;
  v17 = a1;
  Shelf.contentType.getter(v14);
  v18 = sub_100374CAC();
  if (v18)
  {
    v30 = v19;
    v31 = v18;
    if ((dispatch thunk of ShelfPresenter.doesShelfExist(for:)(a2, *(_QWORD *)((v8 & v7) + 0x400), *(_QWORD *)((v8 & v7) + 0x428)) & 1) != 0)v20 = sub_100598ACC(a2);
    else
      v20 = 0;
    v21 = Shelf.isHorizontal.getter();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
    if (v22 != enum case for Shelf.ContentType.smallLockup(_:)
      && v22 != enum case for Shelf.ContentType.mediumLockup(_:))
    {
      if (v22 == enum case for Shelf.ContentType.largeLockup(_:))
      {
LABEL_20:
        v26 = 1;
        goto LABEL_21;
      }
      if (v22 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        && v22 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        && v22 != enum case for Shelf.ContentType.action(_:))
      {
        if (v22 == enum case for Shelf.ContentType.ribbonBar(_:))
          goto LABEL_20;
        if (v22 != enum case for Shelf.ContentType.editorialCard(_:)
          && v22 != enum case for Shelf.ContentType.videoCard(_:))
        {
          v26 = 1;
          if (v22 == enum case for Shelf.ContentType.brick(_:)
            || v22 == enum case for Shelf.ContentType.categoryBrick(_:))
          {
            goto LABEL_21;
          }
          if (v22 != enum case for Shelf.ContentType.reviews(_:)
            && v22 != enum case for Shelf.ContentType.appTrailerLockup(_:)
            && v22 != enum case for Shelf.ContentType.framedVideo(_:)
            && v22 != enum case for Shelf.ContentType.screenshotsLockup(_:)
            && v22 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
            && v22 != enum case for Shelf.ContentType.smallBreakout(_:))
          {
            if (v22 == enum case for Shelf.ContentType.editorialStoryCard(_:))
              goto LABEL_20;
            if (v22 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
              && v22 != enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
              && v22 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
              && v22 != enum case for Shelf.ContentType.posterLockup(_:)
              && v22 != enum case for Shelf.ContentType.smallContactCard(_:))
            {
              if (v22 != enum case for Shelf.ContentType.informationRibbon(_:))
              {
                v26 = v21;
                if (v22 != enum case for Shelf.ContentType.appPromotion(_:))
                {
                  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
                  v26 = 0;
                }
                goto LABEL_21;
              }
              goto LABEL_20;
            }
          }
        }
      }
    }
    v26 = v21;
LABEL_21:
    v27 = v26 & 1;
    sub_100590790((uint64_t)v16, v26 & 1, v20, v4, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t *, _QWORD))(v30 + 24))(v17, v27, v4, *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC20ProductPageExtension30UberedCollectionViewController_artworkLoader));
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

unint64_t sub_1001D70DC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  id *v10;
  double v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  __n128 v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  NSString v46;
  id v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t v54;

  v2 = swift_isaMask & *v0;
  v3 = type metadata accessor for ShelfBackground(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (id *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __chkstk_darwin(v7);
  v10 = (id *)((char *)&v53 - v9);
  v54 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = (*(double (**)(__n128))(v2 + 1272))(v8);
  v12 = sub_100187CEC(v11);
  if (v12)
  {
    v13 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v1 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v1 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v1 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v13);
    specialized Array._endMutation()(v15);

  }
  v16 = sub_100592D1C(v0);
  if (v16)
  {
    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);

  }
  v21 = *(_QWORD *)(v2 + 1024);
  v22 = *(_QWORD *)(v2 + 1064);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22) < 1)
    goto LABEL_14;
  v23 = dispatch thunk of ShelfPresenter.background(for:)(0, v21, v22);
  if ((*(unsigned int (**)(id *, uint64_t, __n128))(v4 + 88))(v10, v3, v23) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v4 + 8))(v10, v3);
    goto LABEL_14;
  }
  (*(void (**)(id *, uint64_t))(v4 + 96))(v10, v3);

  v24 = (char *)v10 + *(int *)(sub_10000DAF8(&qword_100808E30) + 48);
  v26 = type metadata accessor for ShelfBackgroundStyle(0, v25);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  v27 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v28 = objc_msgSend(v27, "fractionalWidthDimension:", 1.0);
  v29 = objc_msgSend(v27, "absoluteDimension:", 2000.0);
  v30 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v28, v29);

  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v30, v31, 1, 0.0, -2000.0);

  objc_msgSend(v32, "setExtendsBoundary:", 0);
  v10 = (id *)v32;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v1 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v33 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v1 >= v33 >> 1)
    goto LABEL_23;
  while (1)
  {
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v10);
    specialized Array._endMutation()(v34);

LABEL_14:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22) < 1)
      break;
    v35 = dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22);
    v36 = __OFSUB__(v35, 1);
    v37 = v35 - 1;
    if (!v36)
    {
      v38 = dispatch thunk of ShelfPresenter.background(for:)(v37, v21, v22);
      if ((*(unsigned int (**)(id *, uint64_t, __n128))(v4 + 88))(v6, v3, v38) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);

        v39 = (char *)v6 + *(int *)(sub_10000DAF8(&qword_100808E30) + 48);
        v41 = type metadata accessor for ShelfBackgroundStyle(0, v40);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v39, v41);
        v42 = (void *)objc_opt_self(NSCollectionLayoutDimension);
        v43 = objc_msgSend(v42, "fractionalWidthDimension:", 1.0);
        v44 = objc_msgSend(v42, "absoluteDimension:", 2000.0);
        v45 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v43, v44);

        v46 = String._bridgeToObjectiveC()();
        v47 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v45, v46, 5, 0.0, 2000.0);

        objc_msgSend(v47, "setExtendsBoundary:", 0);
        v48 = v47;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
        v50 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v49 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v50 >= v49 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
        v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
        specialized Array._endMutation()(v51);

      }
      else
      {
        (*(void (**)(id *, uint64_t))(v4 + 8))(v6, v3);
      }
      return v54;
    }
    __break(1u);
LABEL_23:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v1 + 1, 1);
  }
  return v54;
}

void sub_1001D769C()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  Class isa;
  id v6;

  v0 = sub_1001D9E68();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "configuration");
    v3 = sub_100018B6C(0, (unint64_t *)&unk_100814DF0, UICollectionViewCompositionalLayoutConfiguration_ptr);
    v6 = (id)NSCopying.makeCopy()(v3);

    v4 = sub_1001D70DC();
    sub_100018B6C(0, &qword_100808100, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    objc_msgSend(v1, "setConfiguration:", v6);
  }
}

void sub_1001D7798()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  char v19;

  v1 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController];
  if (v2)
  {
    v3 = type metadata accessor for JULoadingViewController(0);
    if (swift_dynamicCastClass(v2, v3))
    {
      v4 = v2;
      static ViewControllerContainment.remove(_:)(v2);

      v5 = *(void **)&v0[v1];
      *(_QWORD *)&v0[v1] = 0;

      v6 = *(void **)&v0[v1];
      v7 = v6;
      v8 = objc_msgSend(v0, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "bounds");
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v17 = v16;

        v18[0] = v11;
        v18[1] = v13;
        v18[2] = v15;
        v18[3] = v17;
        v19 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v6, v0, v18);

        sub_100513C38();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1001D78A8(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, "collectionView");
  sub_100599604(a1, v3);

  sub_1001D769C();
}

double sub_1001D7918()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t (**v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  double result;
  uint64_t v20;

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = sub_10000DAF8((uint64_t *)&unk_100814DE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1[128];
  v6 = v1[133];
  dispatch thunk of ShelfPresenter.sectionCount.getter(v5, v6);
  v7 = objc_msgSend(v0, "collectionView", sub_100599A04());
  objc_msgSend(v7, "reloadData");

  v8 = v1[131];
  if (dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v5, v8))
  {
    PendingPageRender.isLayoutPending.setter(1);
    swift_release();
  }
  v9 = (char *)sub_1001D9E68();
  if (v9)
  {
    v10 = v9;
    v11 = swift_allocObject(&unk_1007444C0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_100744628, 72, 7);
    *((_QWORD *)v12 + 2) = v5;
    *((_QWORD *)v12 + 3) = v1[129];
    *((_QWORD *)v12 + 4) = v1[130];
    *((_QWORD *)v12 + 5) = v8;
    *((_QWORD *)v12 + 6) = v1[132];
    *((_QWORD *)v12 + 7) = v6;
    *((_QWORD *)v12 + 8) = v11;
    v13 = (uint64_t (**)(uint64_t))&v10[OBJC_IVAR____TtC20ProductPageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver];
    v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver];
    v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension33BaseCollectionCompositionalLayout_pendingPrepareObserver
                        + 8];
    *v13 = sub_1001DBC48;
    v13[1] = v12;
    sub_100018908(v15, v14);

  }
  v16 = sub_1001D9E68();
  v17 = type metadata accessor for IndexSet(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  sub_100599A4C((uint64_t)v4);

  sub_100010F2C((uint64_t)v4, (uint64_t *)&unk_100814DE0);
  dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter(v5, v8, v18);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001D7B28(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t v22;

  v3 = sub_10000DAF8((uint64_t *)&unk_100814DE0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "collectionView", v4);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "collectionViewLayout");

    objc_msgSend(v9, "invalidateLayout");
  }
  v10 = objc_msgSend(v1, "collectionView");
  if (v10)
  {
    v11 = v10;
    v12 = sub_10000DAF8(&qword_10081E8B0);
    v13 = type metadata accessor for IndexPath(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned __int8 *)(v14 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject(v12, v16 + *(_QWORD *)(v14 + 72), v15 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_100640720;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17 + v16, a1, v13);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  }
  v19 = sub_1001D9E68();
  v20 = type metadata accessor for IndexSet(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  sub_100599A4C((uint64_t)v6);

  return sub_100010F2C((uint64_t)v6, (uint64_t *)&unk_100814DE0);
}

void sub_1001D7CF4(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char isEscapingClosureAtFileLocation;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD aBlock[6];

  v2 = v1;
  v28 = a1;
  v3 = swift_isaMask & *v1;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v27 = v6;
  v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8((uint64_t *)&unk_100814DE0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v1, "collectionView", v8);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "collectionViewLayout");

    objc_msgSend(v13, "invalidateLayout");
  }
  v14 = sub_1001D9E68();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16 = v28;
  v15(v10, v28, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  sub_100599A4C((uint64_t)v10);

  sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100814DE0);
  v17 = (void *)objc_opt_self(UIView);
  v18 = v29;
  v15(v29, v16, v4);
  v19 = *(unsigned __int8 *)(v5 + 80);
  v20 = (v19 + 72) & ~v19;
  v21 = swift_allocObject(&unk_1007445B0, v20 + v27, v19 | 7);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)(v3 + 1024);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v3 + 1040);
  *(_OWORD *)(v21 + 40) = *(_OWORD *)(v3 + 1048);
  *(_QWORD *)(v21 + 56) = *(_QWORD *)(v3 + 1064);
  *(_QWORD *)(v21 + 64) = v2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v21 + v20, v18, v4);
  v22 = swift_allocObject(&unk_1007445D8, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1001DBC08;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_10009F7F4;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100184A1C;
  aBlock[3] = &unk_1007445F0;
  v23 = _Block_copy(aBlock);
  v24 = v2;
  swift_retain(v22);
  objc_msgSend(v17, "performWithoutAnimation:", v23, swift_release().n128_f64[0]);
  _Block_release(v23);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v22, "", 106, 464, 40, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1001D7FDC(void *a1, __n128 a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char v50[8];
  char *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v3 = v2;
  v5 = swift_isaMask & *(_QWORD *)v2;
  v6 = type metadata accessor for OSLogger(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v2[qword_100814CE8];
  v11 = *(char **)(v5 + 1024);
  v12 = *(_QWORD *)(v5 + 1064);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v11, v12))
  {
    v47 = a1;
    if (qword_100806960 != -1)
      swift_once(&qword_100806960, sub_100503310);
    v13 = sub_10000EFC4(v6, (uint64_t)qword_10086AB20);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
    v14 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = *(unsigned __int8 *)(v15 + 80);
    v45 = v9;
    v46 = v7;
    v18 = swift_allocObject(v14, ((v17 + 32) & ~v17) + 3 * v16, v17 | 7);
    *(_OWORD *)(v18 + 16) = xmmword_1006405F0;
    v51 = v11;
    v52 = *(_OWORD *)(v5 + 1032);
    v53 = *(_OWORD *)(v5 + 1048);
    v54 = v12;
    *(_QWORD *)&v53 = type metadata accessor for BaseShelfViewController(0, (uint64_t)&v51);
    v51 = v3;
    v19 = v3;
    static LogMessage.safe(_:)(&v51);
    sub_100010F2C((uint64_t)&v51, &qword_100808F20);
    LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100693320);
    swift_getErrorValue(v47, v50, &v48);
    v20 = v48;
    v21 = v49;
    *(_QWORD *)&v53 = v49;
    v22 = sub_1000119C0(&v51);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, v20, v21);
    static LogMessage.sensitive(_:)(&v51);
    sub_100010F2C((uint64_t)&v51, &qword_100808F20);
    v23 = v45;
    Logger.error(_:)(v18, v6, &protocol witness table for OSLogger);
    v24 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v23, v6, v24);
  }
  else
  {
    type metadata accessor for JUContentUnavailableViewController(0);
    v25 = *(_QWORD *)(v5 + 1048);
    swift_errorRetain(a1);
    swift_unknownObjectRetain(v10);
    v26 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(a1, v10, v25, 1, 0, 0);
    v27 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController;
    v28 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController];
    v29 = v28;
    v30 = v26;
    static ViewControllerContainment.remove(_:)(v28);

    v31 = *(void **)&v3[v27];
    *(_QWORD *)&v3[v27] = v26;
    v47 = v30;

    v32 = *(void **)&v3[v27];
    v33 = v32;
    v34 = objc_msgSend(v3, "view");
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v34, "bounds");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;

      v51 = v37;
      *(_QWORD *)&v52 = v39;
      *((_QWORD *)&v52 + 1) = v41;
      *(_QWORD *)&v53 = v43;
      BYTE8(v53) = 0;
      static ViewControllerContainment.add(_:to:frame:)(v32, v3, &v51);

      sub_100513C38();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001D8378()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  sub_1005995F8();

  sub_1001D769C();
}

void sub_1001D83CC()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  sub_100592454(v1);

  sub_1001D769C();
}

uint64_t sub_1001D8420(uint64_t a1, __n128 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v4 = *v2;
  v5 = swift_isaMask;
  v6 = type metadata accessor for OSLogger(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806960 != -1)
    swift_once(&qword_100806960, sub_100503310);
  v10 = (_OWORD *)(v5 & v4);
  v11 = sub_10000EFC4(v6, (uint64_t)qword_10086AB20);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_1006405F0;
  v15 = v10[65];
  v25 = v10[64];
  v26 = v15;
  v27 = v10[66];
  *((_QWORD *)&v26 + 1) = type metadata accessor for BaseShelfViewController(0, (uint64_t)&v25);
  *(_QWORD *)&v25 = v2;
  v16 = v2;
  static LogMessage.safe(_:)(&v25);
  sub_100010F2C((uint64_t)&v25, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001006907E0);
  swift_getErrorValue(a1, v24, &v22);
  v17 = v22;
  v18 = v23;
  *((_QWORD *)&v26 + 1) = v23;
  v19 = sub_1000119C0(&v25);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
  static LogMessage.sensitive(_:)(&v25);
  sub_100010F2C((uint64_t)&v25, &qword_100808F20);
  Logger.error(_:)(v14, v6, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
}

uint64_t sub_1001D8640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, a2, v8, v10);
    v11 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v11);
  }
  return result;
}

double sub_1001D871C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t refreshed;
  __n128 v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  v2 = v1;
  if (a1)
  {
    v4 = *v2;
    v5 = swift_isaMask;
    refreshed = type metadata accessor for PageRefreshGate(0);
    swift_allocObject(refreshed, *(unsigned int *)(refreshed + 48), *(unsigned __int16 *)(refreshed + 52));
    v7 = swift_retain(a1);
    *(uint64_t *)((char *)v2 + qword_100814D20) = PageRefreshGate.init(policy:)(v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
    v9 = *(uint64_t *)((char *)v2 + qword_100814D20);
    if (!v9)
      return result;
    v10 = v5 & v4;
    v11 = swift_allocObject(&unk_1007444C0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = swift_allocObject(&unk_100744588, 72, 7);
    *(_OWORD *)(v12 + 16) = *(_OWORD *)(v10 + 1024);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v10 + 1040);
    *(_OWORD *)(v12 + 40) = *(_OWORD *)(v10 + 1048);
    *(_QWORD *)(v12 + 56) = *(_QWORD *)(v10 + 1064);
    *(_QWORD *)(v12 + 64) = v11;
    swift_retain(v9);
    v13 = swift_retain(v11);
    PageRefreshGate.performRefresh.setter(sub_1001DBB88, v12, v13);
    swift_release();
  }
  else
  {
    *(uint64_t *)((char *)v1 + qword_100814D20) = 0;
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001D8864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  char refreshed;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v1 = swift_isaMask & *v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  v3 = __chkstk_darwin(v2);
  v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v3);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v6 = __chkstk_darwin(v5);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for DispatchTime(0, v6);
  v8 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  aBlock[0] = *(_QWORD *)((char *)v0 + qword_100814CE8);
  v14 = swift_unknownObjectRetain(aBlock[0]);
  refreshed = PageRefreshPolicy.shouldSendEventsForPageExit.getter(v14);
  v16 = *(_QWORD *)(v1 + 1024);
  v17 = *(_QWORD *)(v1 + 1032);
  dispatch thunk of ClearablePresenter.clearContent(shouldSendEventsForPageExit:)(refreshed & 1, v16, v17);
  swift_unknownObjectRelease();
  v18 = *(_QWORD *)((char *)v0 + qword_100814CF0);
  if (*(_QWORD *)(v18 + 112))
  {
    swift_retain(*(_QWORD *)(v18 + 112));
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  sub_1001DB59C();
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = static DispatchTime.now()();
  v22 = PageRefreshPolicy.updateDelayInterval.getter(v21);
  + infix(_:_:)(v10, v22);
  v36 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23 = v38;
  v36(v10, v38);
  v24 = swift_allocObject(&unk_1007444C0, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = swift_allocObject(&unk_100744538, 72, 7);
  *(_QWORD *)(v25 + 16) = v16;
  *(_QWORD *)(v25 + 24) = v17;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v1 + 1040);
  *(_OWORD *)(v25 + 40) = *(_OWORD *)(v1 + 1048);
  *(_QWORD *)(v25 + 56) = *(_QWORD *)(v1 + 1064);
  *(_QWORD *)(v25 + 64) = v24;
  aBlock[4] = sub_1001DBB74;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100744550;
  v26 = _Block_copy(aBlock);
  v27 = swift_release();
  v28 = v37;
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = _swiftEmptyArrayStorage;
  v29 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v31 = sub_1001B1B90((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10);
  v32 = v41;
  v33 = v30;
  v34 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v31, v43, v29);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v28, v32, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v34);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v40);
  return ((uint64_t (*)(char *, uint64_t))v36)(v13, v23);
}

void sub_1001D8BD8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *ObjCClassFromMetadata;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  objc_super v29;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = *(_QWORD *)(v2 + 0x410);
  v4 = *(_QWORD *)(v2 + 1064);
  v24 = *(_OWORD *)(v2 + 1024);
  v25 = v24;
  v26 = v3;
  v22 = *(_OWORD *)(v2 + 1048);
  v27 = v22;
  v28 = v4;
  v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v25);
  v29.receiver = v1;
  v29.super_class = v5;
  objc_msgSendSuper2(&v29, "viewDidLoad");
  v6 = *(void **)&v1[qword_100814D18];
  if (v6)
  {
    v7 = sub_100018B6C(0, (unint64_t *)&unk_100814DD0, UIContextMenuInteraction_ptr);
    type metadata accessor for FlowPreviewing(0, v24, v3, v8);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v7);
    v10 = v6;
    v11 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithDelegate:", v10);
    v12 = objc_msgSend(v1, "collectionView");
    if (!v12)
    {
LABEL_11:
      __break(1u);
      return;
    }
    v13 = v12;
    objc_msgSend(v12, "addInteraction:", v11);

  }
  v14 = objc_msgSend(v1, "collectionView", v22);
  if (!v14)
  {
    __break(1u);
    goto LABEL_11;
  }
  v15 = v14;
  v16 = sub_1001D8E04();
  objc_msgSend(v15, "setCollectionViewLayout:", v16);

  dispatch thunk of UpdatablePresenter.didLoad()(v24, *(_QWORD *)(v23 + 24));
  v17 = objc_msgSend(v1, "collectionView");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setAlwaysBounceVertical:", 1);

  }
  v19 = objc_msgSend(v1, "collectionView");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "setPrefetchDataSource:", v1);

  }
  v21 = objc_msgSend(v1, "collectionView");
  sub_100391968(v21);

}

id sub_1001D8E04()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  Class isa;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  v1 = swift_isaMask & *v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  v3 = sub_1001D70DC();
  sub_100018B6C(0, &qword_100808100, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v5 = (objc_class *)type metadata accessor for BaseCollectionCompositionalLayout();
  v6 = swift_allocObject(&unk_1007444C0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = swift_allocObject(&unk_1007444E8, 72, 7);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v1 + 1024);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v1 + 1040);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v1 + 1048);
  *(_QWORD *)(v7 + 56) = *(_QWORD *)(v1 + 1064);
  *(_QWORD *)(v7 + 64) = v6;
  v8 = objc_allocWithZone(v5);
  v12[4] = sub_1001DBB20;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100261DE0;
  v12[3] = &unk_100744500;
  v9 = _Block_copy(v12);
  v10 = objc_msgSend(v8, "initWithSectionProvider:configuration:", v9, v2, swift_retain(v6).n128_f64[0]);

  _Block_release(v9);
  swift_release();
  swift_release();
  return v10;
}

void sub_1001D8FB8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D8BD8();

}

double sub_1001D8FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  objc_super v18;

  v1 = swift_isaMask & *v0;
  v2 = *(_QWORD *)(v1 + 0x410);
  v3 = *(_QWORD *)(v1 + 0x428);
  v13 = *(_OWORD *)(v1 + 0x400);
  v14 = v13;
  v15 = v2;
  v12 = *(_OWORD *)(v1 + 1048);
  v16 = v12;
  v17 = v3;
  v4 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v14);
  v18.receiver = v0;
  v18.super_class = v4;
  objc_msgSendSuper2(&v18, "as_viewDidBecomeFullyVisible");
  v5 = *(_QWORD *)((char *)v0 + qword_100814CF0);
  if (*(_QWORD *)(v5 + 112))
  {
    swift_retain(*(_QWORD *)(v5 + 112));
    ImpressionsCalculator.isVisible.setter(1);
    swift_release();
  }
  type metadata accessor for MetricsActivity(0);
  static MetricsActivity.current.getter(v6);
  v7 = dispatch thunk of MetricsPagePresenter.referrer.getter(v13, v12);
  v9 = v8;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v7);
  swift_release();
  v10 = swift_bridgeObjectRelease(v9);
  static MetricsActivity.current.getter(v10);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1001D9110(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D8FEC();

}

id sub_1001D9144()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  objc_class *v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _OWORD v12[3];
  objc_super v13;

  v1 = (_OWORD *)(swift_isaMask & *v0);
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[65];
  v12[0] = v1[64];
  v12[1] = v6;
  v12[2] = v1[66];
  v7 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v12);
  v13.receiver = v0;
  v13.super_class = v7;
  result = objc_msgSendSuper2(&v13, "as_viewWillBecomeFullyVisible");
  v9 = *(_QWORD *)((char *)v0 + qword_100814D20);
  if (v9)
  {
    swift_retain(v9);
    Date.init()(v10);
    PageRefreshGate.viewWillAppear(on:)(v5);
    v11 = swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v11);
  }
  return result;
}

void sub_1001D9234(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D9144();

}

id sub_1001D9268(char a1)
{
  _QWORD *v1;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  objc_class *v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _OWORD v14[3];
  objc_super v15;

  v3 = (_OWORD *)(swift_isaMask & *v1);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v3[65];
  v14[0] = v3[64];
  v14[1] = v8;
  v14[2] = v3[66];
  v9 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v14);
  v15.receiver = v1;
  v15.super_class = v9;
  result = objc_msgSendSuper2(&v15, "viewWillAppear:", a1 & 1);
  v11 = *(_QWORD *)((char *)v1 + qword_100814D20);
  if (v11)
  {
    swift_retain(v11);
    Date.init()(v12);
    PageRefreshGate.viewWillAppear(on:)(v7);
    v13 = swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  }
  return result;
}

void sub_1001D9360(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001D9268(a3);

}

void sub_1001D93A0(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  objc_super v28;

  v2 = v1;
  v4 = swift_isaMask & *v2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 1040);
  v10 = *(_QWORD *)(v4 + 1064);
  v23 = *(_OWORD *)(v4 + 1024);
  v24 = v23;
  v25 = v9;
  v22 = *(_OWORD *)(v4 + 1048);
  v26 = v22;
  v27 = v10;
  v11 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v24);
  v28.receiver = v2;
  v28.super_class = v11;
  objc_msgSendSuper2(&v28, "viewDidAppear:", a1 & 1);
  v12 = v23;
  v13 = v22;
  v14 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v23, v22);
  if (v14)
  {
    v15 = Date.init()(v14);
    v16 = Date.timeIntervalSince1970.getter(v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    PendingPageRender.appearTime.setter(*(_QWORD *)&v16, 0);
    swift_release();
  }
  v17 = *(_QWORD *)((char *)v2 + qword_100814CF0);
  if (*(_QWORD *)(v17 + 112))
  {
    swift_retain(*(_QWORD *)(v17 + 112));
    ImpressionsCalculator.isVisible.setter(1);
    swift_release();
  }
  type metadata accessor for MetricsActivity(0);
  static MetricsActivity.current.getter(v18);
  v19 = dispatch thunk of MetricsPagePresenter.referrer.getter(v12, v13);
  v21 = v20;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v19);
  swift_release();
  swift_bridgeObjectRelease(v21);
}

void sub_1001D9564(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001D93A0(a3);

}

void sub_1001D95A4()
{
  char *v0;
  char *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  objc_class *v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  _OWORD v14[3];
  objc_super v15;

  v1 = v0;
  v2 = (_OWORD *)(swift_isaMask & *(_QWORD *)v0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2[65];
  v14[0] = v2[64];
  v14[1] = v7;
  v14[2] = v2[66];
  v8 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v14);
  v15.receiver = v1;
  v15.super_class = v8;
  objc_msgSendSuper2(&v15, "as_viewWillBecomePartiallyVisible");
  v9 = *(_QWORD *)&v1[qword_100814CF0];
  if (*(_QWORD *)(v9 + 112))
  {
    swift_retain(*(_QWORD *)(v9 + 112));
    ImpressionsCalculator.isVisible.setter(0);
    swift_release();
  }
  type metadata accessor for MetricsActivity(0);
  static MetricsActivity.current.getter(v10);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0);
  v11 = swift_release();
  static MetricsActivity.current.getter(v11);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release();
  if (*(_QWORD *)&v1[qword_100814D20])
  {
    swift_retain(*(_QWORD *)&v1[qword_100814D20]);
    Date.init()(v12);
    PageRefreshGate.viewWillDisappear(on:)(v6);
    v13 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v13);
  }
}

void sub_1001D970C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D95A4();

}

void sub_1001D9740(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  objc_super v37;

  v2 = v1;
  v4 = swift_isaMask & *v2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ViewWillDisappearReason(0, v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_10080C430);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v4 + 1040);
  v17 = *(_QWORD *)(v4 + 1064);
  v32 = *(_OWORD *)(v4 + 1024);
  v33 = v32;
  v34 = v16;
  v31 = *(_OWORD *)(v4 + 1048);
  v35 = v31;
  v36 = v17;
  v18 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v33);
  v37.receiver = v2;
  v37.super_class = v18;
  objc_msgSendSuper2(&v37, "viewWillDisappear:", a1 & 1);
  if (dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v32, v31))
  {
    v19 = static ViewWillDisappearReason.inferred(for:)(v2);
    v20 = Date.init()(v19);
    v21 = Date.timeIntervalSince1970.getter(v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    PendingPageRender.DisappearTimeAndReason.init(reason:timeInterval:)(v12, v21);
    v22 = type metadata accessor for PendingPageRender.DisappearTimeAndReason(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 0, 1, v22);
    PendingPageRender.disappearTime.setter(v15);
    swift_release();
  }
  if (*((_BYTE *)v2 + qword_100814D08) == 1)
  {
    v23 = type metadata accessor for VideoPlaybackCoordinator(0);
    v24 = *(void **)(*(_QWORD *)((char *)v2
                               + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph)
                   + qword_10086B3F0);
    if (!v24)
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v23, v23);
      __break(1u);
      return;
    }
    v25 = v24;
    dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();

  }
  v26 = *(_QWORD *)((char *)v2 + qword_100814CF0);
  if (*(_QWORD *)(v26 + 112))
  {
    swift_retain(*(_QWORD *)(v26 + 112));
    ImpressionsCalculator.isVisible.setter(0);
    swift_release();
  }
  type metadata accessor for MetricsActivity(0);
  static MetricsActivity.current.getter(v27);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0);
  v28 = swift_release();
  static MetricsActivity.current.getter(v28);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release();
  if (*(_QWORD *)((char *)v2 + qword_100814D20))
  {
    swift_retain(*(_QWORD *)((char *)v2 + qword_100814D20));
    Date.init()(v29);
    PageRefreshGate.viewWillDisappear(on:)(v9);
    v30 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v30);
  }
}

void sub_1001D9A3C(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001D9740(a3);

}

void sub_1001D9A7C()
{
  _QWORD *v0;
  _OWORD *v1;
  __int128 v2;
  objc_class *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _OWORD v7[3];
  objc_super v8;

  v1 = (_OWORD *)(swift_isaMask & *v0);
  v2 = v1[65];
  v7[0] = v1[64];
  v7[1] = v2;
  v7[2] = v1[66];
  v3 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v7);
  v8.receiver = v0;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "as_viewDidBecomePartiallyVisible");
  if (*((_BYTE *)v0 + qword_100814D08) == 1)
  {
    v4 = type metadata accessor for VideoPlaybackCoordinator(0);
    v5 = *(void **)(*(_QWORD *)((char *)v0
                              + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph)
                  + qword_10086B3F0);
    if (v5)
    {
      v6 = v5;
      dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();

    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v4, v4);
      __break(1u);
    }
  }
}

void sub_1001D9B40(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D9A7C();

}

void sub_1001D9B74(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v3;
  __int128 v4;
  objc_class *v5;
  id v6;
  _OWORD v7[3];
  objc_super v8;

  v3 = (_OWORD *)(swift_isaMask & *v1);
  v4 = v3[65];
  v7[0] = v3[64];
  v7[1] = v4;
  v7[2] = v3[66];
  v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v7);
  v8.receiver = v1;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (objc_msgSend(v1, "isViewLoaded"))
  {
    sub_1001D769C();
    v6 = objc_msgSend(v1, "collectionView");
    sub_1005995CC(v6);

  }
}

void sub_1001D9C3C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1001D9B74((uint64_t)a3);

}

void sub_1001D9C94(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  void *v4;
  _OWORD *v8;
  __int128 v9;
  objc_class *v10;
  id v11;
  objc_class *v12;
  char *v13;
  double *v14;
  id v15;
  uint64_t v16;
  id v17;
  objc_super v18;
  _OWORD v19[3];
  objc_super v20;

  v4 = v3;
  v8 = (_OWORD *)(swift_isaMask & *v3);
  v9 = v8[65];
  v19[0] = v8[64];
  v19[1] = v9;
  v19[2] = v8[66];
  v10 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v19);
  v20.receiver = v3;
  v20.super_class = v10;
  objc_msgSendSuper2(&v20, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v11 = objc_msgSend(v3, "traitCollection");
    v12 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    v13 = (char *)objc_allocWithZone(v12);
    v14 = (double *)&v13[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
    *v14 = a2;
    v14[1] = a3;
    *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v11;
    v18.receiver = v13;
    v18.super_class = v12;
    v15 = objc_msgSendSuper2(&v18, "init");
    v16 = *(_QWORD *)((char *)v3 + qword_100814CF0);
    v17 = objc_msgSend(v4, "collectionView");
    (*(void (**)(uint64_t, id, id, double, double))(*(_QWORD *)v16 + 304))(a1, v15, v17, a2, a3);

  }
}

void sub_1001D9DFC(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1001D9C94(a5, a2, a3);
  swift_unknownObjectRelease();

}

id sub_1001D9E68()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;

  result = objc_msgSend(v0, "collectionView");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "collectionViewLayout");

    result = 0;
    if (v3)
    {
      v4 = type metadata accessor for BaseCollectionCompositionalLayout();
      result = (id)swift_dynamicCastClass(v3, v4);
      if (!result)
      {

        return 0;
      }
    }
  }
  return result;
}

void sub_1001D9EE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;

  v2 = v1;
  v4 = *v1;
  v5 = swift_isaMask;
  v6 = objc_msgSend(v2, "collectionView");
  if (!v6)
    return;
  v7 = v6;
  v8 = v5 & v4;
  v20 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 56);
  v21 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v12 = 0;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_6;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v21)
      goto LABEL_22;
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v21)
        goto LABEL_22;
      v18 = *(_QWORD *)(v20 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v21)
          goto LABEL_22;
        v18 = *(_QWORD *)(v20 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_6:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v16 = dispatch thunk of ShelfPresenter.shelf(for:)(v15, *(_QWORD *)(v8 + 1024), *(_QWORD *)(v8 + 1064));
    sub_1001D6D20(v16, v15, v7);
    swift_release();
  }
  v19 = v17 + 3;
  if (v19 >= v21)
  {
LABEL_22:

    swift_release();
    return;
  }
  v18 = *(_QWORD *)(v20 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v21)
      goto LABEL_22;
    v18 = *(_QWORD *)(v20 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

double sub_1001DA0E8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  double result;

  v7 = type metadata accessor for IndexPath(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v7);
  v9 = a3;
  v10 = a1;
  sub_1001DB3FC(v8);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

id sub_1001DA150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *Strong;
  char *v6;
  id result;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = Strong;
  result = objc_msgSend(Strong, "collectionView", swift_retain(*(_QWORD *)&Strong[qword_100814CF0]).n128_f64[0]);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph];
    v10 = v6;
    swift_retain(v9);
    v11 = sub_100592750(a1, v8, v10, v9);
    swift_release();

    swift_release();
    return (id)v11;
  }
  __break(1u);
  return result;
}

double sub_1001DA244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_100337C18();
    v12 = v11;
    sub_1001D9EE0(v11);

    swift_bridgeObjectRelease(v12);
  }
  swift_beginAccess(v8, &v17, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v8);
  if (v13)
  {
    v15 = (void *)v13;
    swift_unknownObjectRetain(*(_QWORD *)(v13 + qword_100814CE8));

    v16 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(a3, a6);
    *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
    if (v16)
    {
      PendingPageRender.isLayoutPending.setter(0);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_1001DA330(void *a1)
{
  id v1;
  NSIndexSet *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v3 = v1;
    IndexSet._bridgeToObjectiveC()(v2);
    v5 = v4;
    objc_msgSend(v3, "reloadSections:", v4);

  }
}

void sub_1001DA3A4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSIndexSet *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "collectionView", v6);
  if (v9)
  {
    v10 = v9;
    v11 = sub_10000DAF8(&qword_100813860);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100640720;
    *(_QWORD *)(v12 + 32) = a2;
    v20 = v12;
    v13 = sub_10000E720(&qword_100814DB0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v14 = sub_10000DAF8(&qword_100814DB8);
    v15 = sub_1001B1B90((unint64_t *)&unk_100814DC0, &qword_100814DB8);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v4, v13);
    IndexSet._bridgeToObjectiveC()(v16);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v10, "reloadSections:", v18);

  }
}

void sub_1001DA504(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D8378();

}

void sub_1001DA538(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D83CC();

}

void sub_1001DA56C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  __n128 v5;
  id v6;

  v6 = a3;
  v4 = a1;
  sub_1001D8420((uint64_t)v6, v5);

}

uint64_t sub_1001DA5B0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_1001DBA1C();

  return v6;
}

uint64_t sub_1001DA5F8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  uint64_t v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_1001DBA44(a4);

  return v8;
}

void sub_1001DA648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1001D8864();

  }
}

uint64_t sub_1001DA6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(_QWORD *)(result + qword_100814CE8);
    swift_unknownObjectRetain(v10);

    dispatch thunk of UpdatablePresenter.update(ignoringCache:)(1, a2, *(_QWORD *)(a5 + 24));
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_1001DA72C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  LOBYTE(a5) = sub_1001DB9C4(a5);

  return a5 & 1;
}

double sub_1001DA794(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;
  double v11;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  v11 = sub_1001DB9F0(a5);

  return v11;
}

uint64_t sub_1001DA824(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100594730(a2, a3, a4, a1);
}

id sub_1001DA860(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  __n128 v19;
  uint64_t v21;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = a3;
  v17 = a1;
  v18 = (void *)sub_1001DA824(v16, v13, v15, (uint64_t)v12);

  v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

uint64_t sub_1001DA948(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v23;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  v18 = a3;
  v19 = a4;
  v20 = a1;
  sub_1001DBA6C((uint64_t)v19, v15, v17);

  v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

id sub_1001DAA3C(void *a1, uint64_t a2)
{
  return sub_100595928(a2, a1);
}

id sub_1001DAA70(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  v13 = sub_1001DAA3C(v11, (uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_1001DAB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t))(**(_QWORD **)(v3 + qword_100814CF0)
                                                                                       + 664))(a2, a3, *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension30UberedCollectionViewController_artworkLoader), v3, *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_1001DAB8C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1001DAC08(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_1001DAB28);
}

uint64_t sub_1001DAB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(v3 + qword_100814CF0)
                                                                              + 672))(a2, a3, *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension30UberedCollectionViewController_artworkLoader), *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_1001DABFC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1001DAC08(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_1001DAB98);
}

uint64_t sub_1001DAC08(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, char *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v15 = a3;
  v16 = a4;
  v17 = a1;
  a6(v15, v16, v14);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

BOOL sub_1001DACD8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  _BOOL8 v18;
  uint64_t v20;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "cellForItemAtIndexPath:", isa);

  if (v14)
  {
    ObjectType = swift_getObjectType(v14, v15);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView))
      v17 = v14;
    else
      v17 = 0;
    v18 = v17 == 0;

    v11 = v12;
    v12 = v14;
  }
  else
  {
    v18 = 0;
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

void sub_1001DADF0(void *a1, objc_class *a2)
{
  uint64_t v2;

  sub_100595B08(a2, (uint64_t)a2, *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_1001DAE34(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (objc_class *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  sub_1001DADF0(v11, v10);

  return (*(uint64_t (**)(objc_class *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1001DAEE4(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_100814CF8), "scrollViewWillBeginDecelerating:", a1);
}

void sub_1001DAF00(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1001DAEE4((uint64_t)v4);

}

id sub_1001DAF54(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_100814CF8), "scrollViewDidEndDecelerating:", a1);
}

void sub_1001DAF70(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1001DAF54((uint64_t)v4);

}

id sub_1001DAFC4(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v3;
  __int128 v4;
  objc_class *v5;
  _OWORD v7[3];
  objc_super v8;

  v3 = (_OWORD *)(swift_isaMask & *v1);
  v4 = v3[65];
  v7[0] = v3[64];
  v7[1] = v4;
  v7[2] = v3[66];
  v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v7);
  v8.receiver = v1;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "scrollViewDidScroll:", a1);
  return objc_msgSend(*(id *)((char *)v1 + qword_100814CF8), "scrollViewDidScroll:", a1);
}

void sub_1001DB054(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1001DAFC4((uint64_t)v4);

}

id sub_1001DB0A8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_100814CF8), "scrollViewWillBeginDragging:", a1);
}

void sub_1001DB0C4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1001DB0A8((uint64_t)v4);

}

id sub_1001DB118(uint64_t a1, char a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 + qword_100814CF8), "scrollViewDidEndDragging:willDecelerate:", a1, a2 & 1);
}

void sub_1001DB13C(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a1;
  sub_1001DB118((uint64_t)v6, a4);

}

void sub_1001DB198(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D6AA0();

}

void sub_1001DB1CC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001D6B3C();

}

uint64_t sub_1001DB200()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100814CE8));
  swift_release(*(_QWORD *)(v0 + qword_100814CF0));

  swift_release(*(_QWORD *)(v0 + qword_100814D00));
  swift_release(*(_QWORD *)(v0 + qword_100814D10));

  return swift_release(*(_QWORD *)(v0 + qword_100814D20));
}

id sub_1001DB27C()
{
  _QWORD *v0;
  _OWORD *v1;
  __int128 v2;
  objc_class *v3;
  _OWORD v5[3];
  objc_super v6;

  v1 = (_OWORD *)(swift_isaMask & *v0);
  v2 = v1[65];
  v5[0] = v1[64];
  v5[1] = v2;
  v5[2] = v1[66];
  v3 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v5);
  v6.receiver = v0;
  v6.super_class = v3;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_1001DB2DC(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_100814CE8));
  swift_release(*(_QWORD *)(a1 + qword_100814CF0));

  swift_release(*(_QWORD *)(a1 + qword_100814D00));
  swift_release(*(_QWORD *)(a1 + qword_100814D10));

  return swift_release(*(_QWORD *)(a1 + qword_100814D20));
}

uint64_t type metadata accessor for BaseShelfViewController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for BaseShelfViewController);
}

uint64_t sub_1001DB370()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x528))();
}

void sub_1001DB38C(uint64_t a1, void *a2)
{
  sub_1001DB828(a2);
}

uint64_t sub_1001DB3B0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x530))();
}

uint64_t sub_1001DB3CC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1006510B0, a1);
}

uint64_t sub_1001DB3DC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100651088, a1);
}

uint64_t sub_1001DB3EC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1006510D8, a1);
}

double sub_1001DB3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v18 = v1;
    v21 = _swiftEmptyArrayStorage;
    sub_1001F1658(0, v7, 0);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v20 = v10;
    v11 = v4;
    do
    {
      v12 = v19(v6, v9, v3);
      v13 = IndexPath.section.getter(v12);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v8 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      {
        sub_1001F1658(0, v8[2] + 1, 1);
        v8 = v21;
      }
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
      {
        sub_1001F1658(v14 > 1, v15 + 1, 1);
        v8 = v21;
      }
      v8[2] = v15 + 1;
      v8[v15 + 4] = v13;
      v9 += v20;
      --v7;
      v4 = v11;
    }
    while (v7);
  }
  v16 = sub_1003B1CBC((uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  sub_1001D9EE0(v16);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

void sub_1001DB59C()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)v0);
  v3 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v2[128];
  v7 = dispatch thunk of ShelfPresenter.sectionCount.getter(v6, v2[133]);
  v9 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController;
  v10 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController];
  if (v7)
  {
    v11 = v10;
    static ViewControllerContainment.remove(_:)(v10);

    v12 = *(void **)&v1[v9];
    *(_QWORD *)&v1[v9] = 0;

    v13 = *(void **)&v1[v9];
    v14 = v13;
    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "bounds");
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      v47 = v18;
      v48 = v20;
      v49 = v22;
      v50 = v24;
      v51 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v13, v1, &v47);

      sub_100513C38();
      return;
    }
    __break(1u);
    goto LABEL_10;
  }
  if (!v10 || (v25 = type metadata accessor for JULoadingViewController(0), !swift_dynamicCastClass(v10, v25)))
  {
    v26 = dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter(v6, v2[131], v8);
    static JULoadingViewController.PresentationContext.placeholder.getter(v26);
    v27 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v28 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, v26);
    v29 = *(void **)&v1[v9];
    v30 = v29;
    v31 = v28;
    static ViewControllerContainment.remove(_:)(v29);

    v32 = *(void **)&v1[v9];
    *(_QWORD *)&v1[v9] = v28;
    v33 = v31;

    v34 = *(void **)&v1[v9];
    v35 = v34;
    v36 = objc_msgSend(v1, "view");
    if (!v36)
    {
LABEL_10:
      __break(1u);
      return;
    }
    v37 = v36;
    objc_msgSend(v36, "bounds");
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v45 = v44;

    v47 = v39;
    v48 = v41;
    v49 = v43;
    v50 = v45;
    v51 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v34, v1, &v47);

    sub_100513C38();
  }
}

void sub_1001DB828(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  if (a1)
  {
    v2 = objc_msgSend(a1, "integerValue");
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_100744448, 32, 7);
    *(_QWORD *)(v4 + 16) = v1;
    *(_QWORD *)(v4 + 24) = v2;
    v5 = swift_allocObject(&unk_100744470, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1001DB994;
    *(_QWORD *)(v5 + 24) = v4;
    v9[4] = sub_100036D9C;
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100184A1C;
    v9[3] = &unk_100744488;
    v6 = _Block_copy(v9);
    v7 = v1;
    swift_retain(v5);
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release().n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 106, 501, 40, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1001DB970()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001DB994()
{
  uint64_t v0;

  sub_1001DA3A4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001DB99C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001DB9BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001DB9C4(uint64_t a1)
{
  return sub_100594180(a1) & 1;
}

CGFloat sub_1001DB9F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1005942C4(a1, v1);
}

uint64_t sub_1001DBA1C()
{
  return sub_10059398C();
}

uint64_t sub_1001DBA44(uint64_t a1)
{
  return sub_100598ACC(a1);
}

uint64_t sub_1001DBA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  if (IndexPath.count.getter() < 2)
    v7 = 0;
  else
    v7 = IndexPath.section.getter();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(**(_QWORD **)(v3 + qword_100814CF0)
                                                                                        + 608))(a1, a2, a3, v7, v3, *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph));
}

uint64_t sub_1001DBAFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_1001DBB20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001DA150(a1, a2, *(_QWORD *)(v2 + 64));
}

uint64_t sub_1001DBB50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001DBB74()
{
  uint64_t *v0;

  return sub_1001DA6A0(v0[8], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1001DBB88(uint64_t a1)
{
  return sub_1001DBC54(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001DA648);
}

uint64_t sub_1001DBB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001DBC08()
{
  uint64_t v0;

  type metadata accessor for IndexSet(0);
  sub_1001DA330(*(void **)(v0 + 64));
}

uint64_t sub_1001DBC38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DBC48(uint64_t a1)
{
  return sub_1001DBC54(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001DA244);
}

uint64_t sub_1001DBC54(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1001DBC90@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  _QWORD v33[5];
  _BYTE v34[40];
  _QWORD v35[5];

  v32 = a4;
  v8 = sub_10000DAF8(&qword_100814E60);
  __chkstk_darwin(v8);
  v10 = (char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33[-1] - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v33[-1] - v19;
  sub_1001DD0FC(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(void))(v4 + 208))();
    sub_100010F2C((uint64_t)v10, &qword_100814E60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v17, v20, v11);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v22 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    if (qword_100804DB0 != -1)
      swift_once(&qword_100804DB0, sub_1001DC3B8);
    sub_10000EF80((uint64_t)qword_100865CB0, (uint64_t)v35);
    if ((a2 & 1) != 0)
      v23 = 2;
    else
      v23 = 0;
  }
  else if (v22 == enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    if (qword_100804DA8 != -1)
      swift_once(&qword_100804DA8, sub_1001DC3A0);
    sub_10000EF80((uint64_t)qword_100865C88, (uint64_t)v35);
    v23 = a2 & 1;
  }
  else
  {
    if (qword_100804DB0 != -1)
      swift_once(&qword_100804DB0, sub_1001DC3B8);
    sub_10000EF80((uint64_t)qword_100865CB0, (uint64_t)v35);
    if ((a2 & 1) != 0)
      v23 = 2;
    else
      v23 = 0;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  v21(v14, v20, v11);
  sub_10000EF80((uint64_t)v35, (uint64_t)v34);
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_1008065A8 != -1)
    swift_once(&qword_1008065A8, sub_1004C9680);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_10000EFC4(v24, (uint64_t)qword_10086A1D0);
  v26 = objc_msgSend(a1, "traitCollection");
  v27 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v25, v26);

  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v28 = type metadata accessor for StaticDimension(0);
  v29 = sub_10000EFC4(v28, (uint64_t)qword_10086A7E8);
  v33[3] = v28;
  v33[4] = &protocol witness table for StaticDimension;
  v30 = sub_1000119C0(v33);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
  MixedMediaLockupLayout.Metrics.init(lockupPosition:taglineNumberOfLines:taglineSpace:taglineFont:alwaysIncludeTaglineSpace:verticalSpacing:layoutMargins:)(v14, v23, v34, v27, a2 & 1, v33, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v35);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

uint64_t sub_1001DC068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:);
  v3 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1001DC0AC(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;

  if (a1)
  {
    v3 = *(id *)(v1 + OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView);
    v4 = objc_msgSend(a1, "superview");
    if (v4)
    {
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v5 = v3;
      v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

void (*sub_1001DC168(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + v2) + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  return sub_1001DC1B8;
}

void sub_1001DC1B8(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  v7 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v7;
    v4 = v2;
    sub_10048FC80();

    v5 = v4;
  }
  else
  {
    v6 = v2;
    sub_10048FC80();

    v5 = v7;
  }

}

double sub_1001DC230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double result;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePad);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    goto LABEL_13;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
LABEL_13:
    (*(void (**)(void))(v1 + 144))();
    return result;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePhone);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease(v13);
    v19 = swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
    {
      static AspectRatio.square.getter(v19);
      return result;
    }
  }
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v19).n128_u64[0];
  return result;
}

uint64_t sub_1001DC378()
{
  uint64_t result;
  uint64_t v1;

  result = Lockup.editorialTagline.getter();
  if (!v1)
    return Lockup.developerTagline.getter(result);
  return result;
}

uint64_t sub_1001DC3A0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 16.0;
  return sub_1001DC3D0(a2, a1, &qword_100865C88[3], &qword_100865C88[4], qword_100865C88);
}

uint64_t sub_1001DC3B8(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_1001DC3D0(a2, a1, &qword_100865CB0[3], &qword_100865CB0[4], qword_100865CB0);
}

uint64_t sub_1001DC3D0(__n128 a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  double v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v18[5];

  v5 = a1.n128_f64[0];
  v9 = type metadata accessor for FontSource(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1008065A8 != -1)
    swift_once(&qword_1008065A8, sub_1004C9680);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_10000EFC4(v13, (uint64_t)qword_10086A1D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v14, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  *a3 = type metadata accessor for StaticDimension(0);
  *a4 = &protocol witness table for StaticDimension;
  sub_1000119C0(a5);
  v18[3] = v9;
  v18[4] = &protocol witness table for FontSource;
  v15 = sub_1000119C0(v18);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  StaticDimension.init(_:scaledLike:)(v18, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

double sub_1001DC534(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = AspectRatio.init(_:_:)(a1).n128_u64[0];
  return result;
}

char *sub_1001DC540(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  objc_super v37;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  v17 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_lockupView;
  v19 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0));
  v20 = v4;
  *(_QWORD *)&v4[v18] = objc_msgSend(v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView;
  *(_QWORD *)&v20[v21] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v22 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_1008065A8 != -1)
    swift_once(&qword_1008065A8, sub_1004C9680);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_10086A1D0);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v15, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v20[v22] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  v27 = &v20[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  v28 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v20[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  v29 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  v37.receiver = v20;
  v37.super_class = v29;
  v30 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  v31 = objc_msgSend(v30, "contentView");
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_lockupView]);

  v32 = objc_msgSend(v30, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView]);

  v33 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_taglineLabel;
  v34 = *(id *)&v30[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_taglineLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v35 = objc_msgSend(v30, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v30[v33]);

  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  return v30;
}

uint64_t sub_1001DC914()
{
  char *v0;
  char *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  double v25;
  char *v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[5];
  _QWORD v38[5];
  char v39[24];
  objc_super v40;

  v1 = v0;
  v28[1] = swift_getObjectType();
  v33 = type metadata accessor for LayoutRect(0);
  v32 = *(_QWORD *)(v33 - 8);
  v2 = __chkstk_darwin(v33);
  v31 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MixedMediaLockupLayout(0, v2);
  v29 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_100814E60);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MixedMediaLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v28 - v14;
  v16 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  v40.receiver = v0;
  v40.super_class = v16;
  objc_msgSendSuper2(&v40, "layoutSubviews");
  v17 = v0[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
  v18 = (uint64_t)&v0[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess(v18, v39, 0, 0);
  sub_1001DD0FC(v18, (uint64_t)v8);
  sub_1001DBC90(v1, v17, (uint64_t)v8, (uint64_t)v15);
  sub_100010F2C((uint64_t)v8, &qword_100814E60);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  v19 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_lockupView];
  v38[3] = type metadata accessor for SmallLockupView(0);
  v38[4] = &protocol witness table for UIView;
  v38[0] = v19;
  v20 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView];
  v37[3] = type metadata accessor for LockupMediaView(0);
  v37[4] = &protocol witness table for UIView;
  v37[0] = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_taglineLabel];
  v22 = v19;
  v23 = v20;
  if (objc_msgSend(v21, "hasContent"))
  {
    *(_QWORD *)&v36 = type metadata accessor for DynamicTypeLabel(0);
    *((_QWORD *)&v36 + 1) = &protocol witness table for UILabel;
    v24 = v21;
  }
  else
  {
    v21 = 0;
    v35 = 0u;
    v36 = 0u;
  }
  v34 = v21;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v12, v38, v37, &v34);
  v25 = LayoutMarginsAware<>.layoutFrame.getter(v16);
  v26 = v31;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)(v1, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

void sub_1001DCC60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  sub_10048D0D4(a1, a2, a3, a4, a5);
}

id sub_1001DCD34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001DCE00()
{
  return type metadata accessor for MixedMediaLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for MixedMediaLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100814E28;
  if (!qword_100814E28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MixedMediaLockupCollectionViewCell);
  return result;
}

void sub_1001DCE44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  sub_1000780CC(319, (unint64_t *)&qword_10080AD00, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = "\b";
    sub_1000780CC(319, &qword_100814E40, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout.LockupPosition);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_100651200;
      v6[7] = "\b";
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

uint64_t sub_1001DCF10()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView)+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
}

void sub_1001DCF30(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView);
  sub_10048FC80();

}

uint64_t (*sub_1001DCF78(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001DC168(v2);
  return sub_10001C148;
}

uint64_t sub_1001DCFBC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651290, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_1001DCFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651290, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_1001DD03C(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100651290, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

uint64_t sub_1001DD0A4()
{
  return sub_10000E720(&qword_100814E48, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100651220);
}

uint64_t sub_1001DD0D0()
{
  return sub_10000E720((unint64_t *)&unk_100814E50, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100651250);
}

uint64_t sub_1001DD0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001DD144()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  v10 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_lockupView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_mediaView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v13 = OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_1008065A8 != -1)
    swift_once(&qword_1008065A8, sub_1004C9680);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_10086A1D0);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, v15, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v13] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 2, 0, 1, 0, v5, 0, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  v18 = &v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  v19 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/MixedMediaLockupCollectionViewCell.swift", 61, 2, 95, 0);
  __break(1u);
}

void sub_1001DD3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;

  if ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3) != a1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, a2, a3);
    v7 = objc_msgSend(objc_allocWithZone((Class)UIStatusBarAnimationParameters), "init");
    objc_msgSend(v7, "setSkipFencing:", 1);
    objc_msgSend(v3, "_setNeedsStatusBarAppearanceUpdateWithAnimationParameters:", v7);

  }
}

id sub_1001DD490()
{
  return sub_1001DD5AC(&OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell____lazy_storage___standardLinkView, (uint64_t (*)(_QWORD, __n128))type metadata accessor for StandardLinkView);
}

void sub_1001DD4A4(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;

  v2 = OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell_currentLinkView;
  v3 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell_currentLinkView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell_currentLinkView] = a1;
  v15 = a1;
  if (v3)
    objc_msgSend(v3, "setHidden:", 1);
  v4 = *(void **)&v1[v2];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setHidden:", 0);
    v6 = objc_msgSend(v1, "contentView");
    v7 = sub_1000951BC();
    v8 = LayoutMarginsAware<>.layoutFrame.getter(v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;

    objc_msgSend(v5, "setFrame:", v8, v10, v12, v14);
    v3 = v15;
    v15 = v5;
  }

}

id sub_1001DD598()
{
  return sub_1001DD5AC(&OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell____lazy_storage___presentationLinkView, (uint64_t (*)(_QWORD, __n128))type metadata accessor for PresentationLinkView);
}

id sub_1001DD5AC(uint64_t *a1, uint64_t (*a2)(_QWORD, __n128))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v7;
  uint64_t v8;
  id v9;
  void *Strong;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;
  _BYTE v16[8];

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = swift_unknownObjectWeakInit(v16, v2);
    v8 = a2(0, v7);
    v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
    objc_msgSend(v9, "setHidden:", 1);
    swift_beginAccess(v16, &v15, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
    if (Strong)
    {
      v11 = Strong;
      objc_msgSend(Strong, "addSubview:", v9);

    }
    swift_unknownObjectWeakDestroy(v16);
    v12 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v9;
    v5 = v9;

    v4 = 0;
  }
  v13 = v4;
  return v5;
}

id sub_1001DD688(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell____lazy_storage___standardLinkView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell____lazy_storage___presentationLinkView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell_currentLinkView] = 0;
  v12 = &v6[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v17.receiver = v6;
  v17.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  return v14;
}

void sub_1001DD880()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension22LinkCollectionViewCell_currentLinkView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "contentView");
    v4 = sub_1000951BC();
    v5 = LayoutMarginsAware<>.layoutFrame.getter(v4);
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  }
}

uint64_t sub_1001DDA28()
{
  return type metadata accessor for LinkCollectionViewCell(0);
}

uint64_t type metadata accessor for LinkCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100814EA8;
  if (!qword_100814EA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LinkCollectionViewCell);
  return result;
}

void sub_1001DDA6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_1001DDAE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_10086A7E8);
  qword_100865D38 = v0;
  unk_100865D40 = &protocol witness table for StaticDimension;
  v2 = sub_1000119C0(qword_100865D20);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

char *sub_1001DDB6C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  double left;
  double bottom;
  double right;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  objc_super v27;

  v9 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v14 = &v11[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventViewTappedAction];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for AppEventSearchResultCollectionViewCell();
  v15 = objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v19 = (char *)v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_lockupView]);

  v21 = objc_msgSend(v19, "contentView");
  v22 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView]);

  v23 = *(void **)&v19[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer];
  objc_msgSend(v23, "addTarget:action:", v19, "handleTapWithGestureRecognizer:");
  objc_msgSend(v23, "setDelegate:", v19);
  v24 = *(id *)&v19[v22];
  v25 = v23;
  objc_msgSend(v24, "addGestureRecognizer:", v25);

  return v19;
}

id sub_1001DDDD8()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer], "removeTarget:action:", v0, 0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppEventSearchResultCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001DDEE8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  objc_class *v5;
  id v6;
  unint64_t v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  double v21;
  double MaxY;
  double Width;
  double v24;
  char *v25;
  double v26;
  void *v27;
  double v28;
  objc_super v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v1 = v0;
  v2 = type metadata accessor for AppEventCardLayout(0);
  __chkstk_darwin(v2);
  v4 = (id *)((char *)&v30.receiver - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (objc_class *)type metadata accessor for AppEventSearchResultCollectionViewCell();
  v30.receiver = v0;
  v30.super_class = v5;
  objc_msgSendSuper2(&v30, "layoutSubviews");
  v6 = objc_msgSend(v0, "contentView");
  v7 = sub_1000951BC();
  v8 = LayoutMarginsAware<>.layoutFrame.getter(v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_lockupView];
  v16.n128_f64[0] = v12;
  sub_10044F944(v16, v14);
  objc_msgSend(v15, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v8));
  if (qword_100804DB8 != -1)
    swift_once(&qword_100804DB8, sub_1001DDAE8);
  v17 = qword_100865D38;
  v18 = unk_100865D40;
  sub_100010F08(qword_100865D20, qword_100865D38);
  v19 = objc_msgSend(v1, "traitCollection");
  v21 = AnyDimension.value(with:)(v19, v17, v18, v20);

  v31.origin.x = v8;
  v31.origin.y = v10;
  v31.size.width = v12;
  v31.size.height = v14;
  CGRectGetMinX(v31);
  objc_msgSend(v15, "frame");
  MaxY = CGRectGetMaxY(v32);
  v33.origin.x = v8;
  v33.origin.y = v10;
  v33.size.width = v12;
  v33.size.height = v14;
  Width = CGRectGetWidth(v33);
  v34.origin.x = v8;
  v34.origin.y = v10;
  v34.size.width = v12;
  v34.size.height = v14;
  v24 = CGRectGetMaxY(v34);
  v25 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView];
  if (qword_100805B48 != -1)
    swift_once(&qword_100805B48, sub_1003EDD48);
  v26 = v24 - (v21 + MaxY);
  sub_1001EDE64(xmmword_1008680E8, v25, Width, v26);
  v27 = *(void **)&v25[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
  sub_10011AA04((uint64_t)v4);
  sub_1001ED7B0(v27, v4, Width, v26);
  sub_100020684((uint64_t)v4);
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v25, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v28));
}

uint64_t sub_1001DE2E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView)
                 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_mediaContentView);
  sub_1000951BC();
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

void (*sub_1001DE38C(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView);
  v3 = OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
  return sub_10001B914;
}

id sub_1001DE3EC()
{
  char *v0;
  id v1;
  uint64_t v2;
  Swift::Bool v3;
  char *v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for AppEventSearchResultCollectionViewCell();
  v1 = objc_msgSendSuper2(&v8, "prepareForReuse");
  sub_10044FE7C((uint64_t)v1, v2, v3);
  v4 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView];
  sub_1003EDA7C();
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
  sub_10011B758();
  v6 = &v4[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_initialLongPressLocation];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v4, "addSubview:", v5);
}

uint64_t type metadata accessor for AppEventSearchResultCollectionViewCell()
{
  return objc_opt_self(_TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell);
}

uint64_t sub_1001DE530()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView)+ OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
}

void sub_1001DE560(void *a1)
{
  sub_10011BCEC();

}

uint64_t (*sub_1001DE5A8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001DE38C(v2);
  return sub_10001C148;
}

void sub_1001DE5EC()
{
  sub_1001EC190();
}

id sub_1001DE614()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView)
                           + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView));
}

id sub_1001DE638()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView));
}

double sub_1001DE64C()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView)+ OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppEventView(0);
  v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetHeight(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_1001DE6D4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppEventView(0);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_1001DE760(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651458, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_1001DE794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651458, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_1001DE7E0(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100651458, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

uint64_t sub_1001DE848(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100814F08, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_1006513C8);
}

uint64_t sub_1001DE874(uint64_t a1, uint64_t a2)
{
  return sub_100020248((unint64_t *)&unk_100814F10, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_1006513F8);
}

void sub_1001DE8A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventTapGestureRecognizer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventViewTappedAction];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/AppEventSearchResultCollectionViewCell.swift", 65, 2, 45, 0);
  __break(1u);
}

uint64_t sub_1001DE99C(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  BOOL v19;
  uint64_t v20;
  _BOOL8 v21;
  CGPoint v23;
  CGPoint v24;
  CGPoint v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v2 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView];
  v3 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView]
                + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView);
  if (!v3)
    return 0;
  v5 = v3;
  objc_msgSend(a1, "locationInView:", v1);
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  objc_msgSend(a1, "locationInView:", v2);
  v12 = v11;
  v14 = v13;
  objc_msgSend(a1, "locationInView:", v5);
  v16 = v15;
  v18 = v17;
  objc_msgSend(v2, "bounds");
  v23.x = v12;
  v23.y = v14;
  if (CGRectContainsPoint(v26, v23)
    && (objc_msgSend(v5, "bounds"), v24.x = v16, v24.y = v18, !CGRectContainsPoint(v27, v24))
    && *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventViewTappedAction])
  {
    objc_msgSend(v1, "bounds");
    v25.x = v7;
    v25.y = v9;
    v19 = CGRectContainsPoint(v28, v25);

    if (v19)
    {
      if (!v10)
        return 1;
      v20 = objc_opt_self(UIControl);
      v21 = swift_dynamicCastObjCClass(v10, v20) == 0;
    }
    else
    {
      v21 = 0;
    }
    v5 = v10;
  }
  else
  {

    v21 = 0;
  }

  return v21;
}

void sub_1001DEB4C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  __n128 v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  void *v28;
  char *v29;
  int v30;
  char v31;
  _BYTE v33[24];
  objc_super v34;
  objc_super v35;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v35.receiver = v1;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "prepareForReuse", v6);
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView];
  sub_10052FF98();
  v10 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer];
  v11 = (objc_class *)type metadata accessor for MediaView();
  v34.receiver = v10;
  v34.super_class = v11;
  objc_msgSendSuper2(&v34, "setBackgroundColor:", 0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer;
  objc_msgSend(*(id *)(*(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer]+ OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents), "setBackgroundColor:", 0);
  v13 = *(void **)&v10[OBJC_IVAR____TtC20ProductPageExtension9MediaView_reflectionView];
  if (v13)
    objc_msgSend(v13, "setBackgroundColor:", 0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:), v4);
  v14 = &v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition];
  v15 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition], v33, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 24))(v14, v8, v4, v15);
  swift_endAccess(v33);
  objc_msgSend(v1, "setNeedsLayout");
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  v16 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
  objc_msgSend(v16, "setText:", 0);
  v17 = (_QWORD *)(v9 + OBJC_IVAR____TtC20ProductPageExtension19BreakoutDetailsView_callToActionButtonHandler);
  v18 = *(_QWORD *)(v9 + OBJC_IVAR____TtC20ProductPageExtension19BreakoutDetailsView_callToActionButtonHandler);
  v19 = *(_QWORD *)(v9 + OBJC_IVAR____TtC20ProductPageExtension19BreakoutDetailsView_callToActionButtonHandler + 8);
  *v17 = 0;
  v17[1] = 0;
  sub_100018908(v18, v19);
  v20 = *(char **)&v10[v12];
  v21 = *(void **)&v20[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents];
  *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents] = 0;
  v22 = v20;
  sub_1003A43BC(v21);

  v23 = *(_QWORD *)(*(_QWORD *)&v10[v12]
                  + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (v23)
  {
    v24 = type metadata accessor for VideoView(0);
    v25 = (void *)swift_dynamicCastClass(v23, v24);
    if (v25)
      objc_msgSend(v25, "setUserInteractionEnabled:", 0);
  }
  v26 = *(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView];
  ArtworkView.image.setter(0);

  v27 = *(char **)&v10[v12];
  v28 = *(void **)&v27[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents];
  *(_QWORD *)&v27[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents] = 0;
  v29 = v27;
  sub_1003A43BC(v28);

  sub_1003A3904();
  v30 = v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden];
  v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden] = 1;
  if (v30 != 1)
    objc_msgSend(v16, "removeFromSuperview");
  v31 = v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isBackgroundEffectViewHidden];
  v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isBackgroundEffectViewHidden] = 1;
  if ((v31 & 1) == 0)
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView], "removeFromSuperview");
}

uint64_t sub_1001DEE1C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  double v25;
  double v26;
  __n128 v27;
  double v28;
  double v29;
  uint64_t Main;
  uint64_t v31;
  unsigned int *v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  int HasRoundedCorners;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD v59[5];
  _QWORD v60[5];
  _QWORD v61[5];
  _QWORD v62[3];
  void *v63;
  void *v64;

  v58 = a3;
  v56 = type metadata accessor for LargeHeroBreakoutLayout.DetailsVerticalPostion(0);
  v54 = *(_QWORD *)(v56 - 8);
  v5 = __chkstk_darwin(v56);
  v57 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for FontSource(0, v5);
  v48 = *(_QWORD *)(v49 - 8);
  v7 = __chkstk_darwin(v49);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for BreakoutDetailsLayout.DetailDimension(0, v7);
  v51 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v53 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v48 - v13;
  v15 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v50 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  swift_getObjectType();
  v21 = objc_msgSend(a2, "traitCollection");
  v22 = UITraitCollection.isSizeClassCompact.getter(v21);

  v52 = v16;
  v23 = a1;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24(v20, v23, v15);
  objc_msgSend(a2, "pageMarginInsets");
  v26 = v25;
  objc_msgSend(a2, "pageMarginInsets");
  v29 = v28;
  if ((v22 & 1) != 0)
  {
    Main = JUScreenClassGetMain(v27);
    v31 = v51;
    if (Main == 1)
    {
      v63 = &type metadata for Double;
      v64 = &protocol witness table for Double;
      v62[0] = 0x407E000000000000;
      v32 = (unsigned int *)&enum case for BreakoutDetailsLayout.DetailDimension.fraction(_:);
      v33 = 1.0;
      v34 = v55;
    }
    else
    {
      HasRoundedCorners = JUScreenClassHasRoundedCorners();
      v63 = &type metadata for Double;
      v64 = &protocol witness table for Double;
      v34 = v55;
      if (HasRoundedCorners)
        v39 = 0x4083100000000000;
      else
        v39 = 0x4081800000000000;
      v62[0] = v39;
      v32 = (unsigned int *)&enum case for BreakoutDetailsLayout.DetailDimension.fraction(_:);
      v33 = 1.0;
    }
  }
  else
  {
    v63 = &type metadata for Double;
    v64 = &protocol witness table for Double;
    v62[0] = 0x4083100000000000;
    PageTraitEnvironment.pageColumnWidth.getter();
    v36 = v35;
    PageTraitEnvironment.pageColumnMargin.getter();
    v33 = v36 - v37;
    *((_QWORD *)v14 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v14 + 4) = &protocol witness table for CGFloat;
    v32 = (unsigned int *)&enum case for BreakoutDetailsLayout.DetailDimension.static(_:);
    v34 = v55;
    v31 = v51;
  }
  *(double *)v14 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v14, *v32, v34);
  if (qword_1008065F8 != -1)
    swift_once(&qword_1008065F8, sub_1004C977C);
  v40 = type metadata accessor for FontUseCase(0);
  v41 = sub_10000EFC4(v40, (uint64_t)qword_10086A2C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v9, v41, v40);
  v42.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v48 + 104))(v9, enum case for FontSource.useCase(_:), v49);
  v61[3] = type metadata accessor for CappedSizeStaticDimension(0, v42);
  v61[4] = sub_10000E720(&qword_100814FA0, (uint64_t (*)(uint64_t))&type metadata accessor for CappedSizeStaticDimension, (uint64_t)&protocol conformance descriptor for CappedSizeStaticDimension);
  sub_1000119C0(v61);
  CappedSizeStaticDimension.init(constant:source:maxSizeCategory:)(v9, UIContentSizeCategoryExtraExtraExtraLarge, 56.0);
  if (qword_100804DC8 != -1)
    swift_once(&qword_100804DC8, sub_1001DFDBC);
  v43 = sub_10000DAF8(&qword_100814FA8);
  sub_10000EFC4(v43, (uint64_t)qword_100865D48);
  v59[0] = a2;
  Conditional.evaluate(with:)(v60, v59, v43);
  v44 = v50;
  v24(v50, (uint64_t)v20, v15);
  v45 = v53;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v53, v14, v34);
  v46 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v57, enum case for LargeHeroBreakoutLayout.DetailsVerticalPostion.bottom(_:), v56);
  sub_10000EF80((uint64_t)v62, (uint64_t)v59);
  LargeHeroBreakoutLayout.Metrics.init(headerSpace:headerMaxWidth:detailPosition:detailsWidth:detailsVerticalPostion:layoutMargins:height:)(v61, v60, v44, v45, v46, v59, 0.0, v26, 20.0, v29);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v34);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v62);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v20, v15);
}

void sub_1001DF374()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  _BOOL4 IsReduceTransparencyEnabled;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  _QWORD v21[3];
  char *v22;

  v1 = v0;
  v2 = sub_10000DAF8(&qword_100814F98);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, "traitCollection", v3);
  v7 = objc_msgSend(v6, "accessibilityContrast");

  IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  v9 = v7 == (id)1 || IsReduceTransparencyEnabled;
  v10 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
  if (qword_100804DC0 != -1)
    swift_once(&qword_100804DC0, sub_1001DFD34);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_10000EFC4(v11, (uint64_t)qword_100814F20);
  v22 = v1;
  Conditional.evaluate(with:)(v21, &v22, v11);
  objc_msgSend(v10, "setTextAlignment:", v21[0]);
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView]
      + OBJC_IVAR____TtC20ProductPageExtension19BreakoutDetailsView_detailBackgroundStyle;
  swift_beginAccess(v12, v21, 0, 0);
  sub_1001E1030(v12, (uint64_t)v5);
  v13 = type metadata accessor for BreakoutDetails.BackgroundStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13) == 1)
  {
    sub_100010F2C((uint64_t)v5, &qword_100814F98);
    v15 = 0;
  }
  else
  {
    v15 = sub_100553980(v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
  }
  objc_msgSend(v10, "setTextColor:", v15);

  v16 = objc_msgSend(v10, "layer");
  v17 = &kCAFilterNormalBlendMode;
  if (!v9)
    v17 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v17);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setCompositingFilter:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

}

void sub_1001DF5C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer);
  v3 = OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer;
  v4 = *(id *)(v2 + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
  sub_1003A4B0C(a1);

  v5 = *(void **)(*(_QWORD *)(v2 + v3)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (v5)
  {
    v6 = type metadata accessor for VideoView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = v5;
      objc_msgSend(v8, "setUserInteractionEnabled:", 0);

    }
  }

}

uint64_t sub_1001DF66C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer)
                            + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (!v1)
    return 0;
  v2 = type metadata accessor for VideoView(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
    v4 = v1;
  return v3;
}

uint64_t sub_1001DF6D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t (*v33)(char *, uint64_t, double);
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t Main;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  double v47;
  int HasRoundedCorners;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t, __n128);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD v79[5];
  _QWORD v80[5];
  _QWORD v81[5];
  uint64_t v82;
  void *v83;
  void *v84;

  v74 = a1;
  v78 = a2;
  v76 = type metadata accessor for LargeHeroBreakoutLayout.DetailsVerticalPostion(0);
  v75 = *(_QWORD *)(v76 - 8);
  v2 = __chkstk_darwin(v76);
  v77 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for FontSource(0, v2);
  v68 = *(_QWORD *)(v69 - 8);
  v4 = __chkstk_darwin(v69);
  v70 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for BreakoutDetailsLayout.DetailDimension(0, v4);
  v66 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v64 = (char *)&v62 - v8;
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v62 - v15;
  v17 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v71 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - v21;
  v24 = (void *)ShelfLayoutContext.traitCollection.getter(v23);
  v25 = UITraitCollection.isSizeClassCompact.getter(v24);

  v73 = v18;
  v26 = *(void (**)(char *, char *, uint64_t, __n128))(v18 + 16);
  v72 = v22;
  v27 = v74;
  v74 = v17;
  v67 = v26;
  v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v22, v27, v17);
  v29 = ShelfLayoutContext.contentPageGrid.getter(v28);
  v30 = PageGrid.horizontalMargins.getter(v29);
  v32 = v31;
  v33 = *(uint64_t (**)(char *, uint64_t, double))(v10 + 8);
  v34 = v33(v16, v9, v30);
  v35 = ShelfLayoutContext.contentPageGrid.getter(v34);
  v36 = PageGrid.horizontalMargins.getter(v35);
  v38 = v37;
  v39 = v33(v12, v9, v36);
  if ((v25 & 1) != 0)
  {
    v41 = v65;
    Main = JUScreenClassGetMain(v40);
    v43 = v66;
    v44 = v64;
    v45 = v63;
    if (Main == 1)
    {
      v83 = &type metadata for Double;
      v84 = &protocol witness table for Double;
      v82 = 0x407E000000000000;
    }
    else
    {
      HasRoundedCorners = JUScreenClassHasRoundedCorners();
      v83 = &type metadata for Double;
      v84 = &protocol witness table for Double;
      if (HasRoundedCorners)
        v49 = 0x4083100000000000;
      else
        v49 = 0x4081800000000000;
      v82 = v49;
    }
    *(_QWORD *)v44 = 0x3FF0000000000000;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v44, enum case for BreakoutDetailsLayout.DetailDimension.fraction(_:), v41);
  }
  else
  {
    v83 = &type metadata for Double;
    v84 = &protocol witness table for Double;
    v82 = 0x4083100000000000;
    v46 = ShelfLayoutContext.contentPageGrid.getter(v39);
    v47 = PageGrid.columnWidth.getter(v46);
    ((void (*)(char *, uint64_t))v33)(v16, v9);
    v45 = v63;
    *((_QWORD *)v63 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v45 + 4) = &protocol witness table for CGFloat;
    *(double *)v45 = v47 - v32 - v38;
    v43 = v66;
    v41 = v65;
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v45, enum case for BreakoutDetailsLayout.DetailDimension.static(_:), v65);
    v44 = v64;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v64, v45, v41);
  }
  if (qword_1008065F8 != -1)
    swift_once(&qword_1008065F8, sub_1004C977C);
  v50 = type metadata accessor for FontUseCase(0);
  v51 = sub_10000EFC4(v50, (uint64_t)qword_10086A2C0);
  v52 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v70, v51, v50);
  v53.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v68 + 104))(v52, enum case for FontSource.useCase(_:), v69);
  v81[3] = type metadata accessor for CappedSizeStaticDimension(0, v53);
  v81[4] = sub_10000E720(&qword_100814FA0, (uint64_t (*)(uint64_t))&type metadata accessor for CappedSizeStaticDimension, (uint64_t)&protocol conformance descriptor for CappedSizeStaticDimension);
  sub_1000119C0(v81);
  CappedSizeStaticDimension.init(constant:source:maxSizeCategory:)(v52, UIContentSizeCategoryExtraExtraExtraLarge, 56.0);
  if (qword_100804DC8 != -1)
    swift_once(&qword_100804DC8, sub_1001DFDBC);
  v54 = sub_10000DAF8(&qword_100814FA8);
  v55 = sub_10000EFC4(v54, (uint64_t)qword_100865D48);
  v79[0] = ShelfLayoutContext.traitEnvironment.getter(v55);
  Conditional.evaluate(with:)(v80, v79, v54);
  v56 = swift_unknownObjectRelease();
  v57 = v71;
  v58 = v72;
  v59 = v74;
  v67(v71, v72, v74, v56);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v45, v44, v41);
  v60 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v77, enum case for LargeHeroBreakoutLayout.DetailsVerticalPostion.bottom(_:), v76);
  sub_10000EF80((uint64_t)&v82, (uint64_t)v79);
  LargeHeroBreakoutLayout.Metrics.init(headerSpace:headerMaxWidth:detailPosition:detailsWidth:detailsVerticalPostion:layoutMargins:height:)(v81, v80, v57, v45, v60, v79, 0.0, v32, 20.0, v38);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v41);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v82);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v58, v59);
}

uint64_t sub_1001DFD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_100011980(v0, qword_100814F20);
  sub_10000EFC4(v0, (uint64_t)qword_100814F20);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

double sub_1001DFDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  _OWORD v4[2];
  uint64_t v5;
  _QWORD v6[5];

  v0 = sub_10000DAF8(&qword_100814FA8);
  sub_100011980(v0, qword_100865D48);
  sub_10000EFC4(v0, (uint64_t)qword_100865D48);
  v6[3] = &type metadata for Double;
  v6[4] = &protocol witness table for Double;
  v5 = 0;
  v6[0] = 0x4074000000000000;
  memset(v4, 0, sizeof(v4));
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  v2 = sub_10000DAF8(&qword_100814FB0);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v4, v1, v2).n128_u64[0];
  return result;
}

char *sub_1001DFE64(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  id v48;
  NSString *v49;
  id v50;
  char *v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  char *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v69;
  uint64_t v70;
  objc_class *ObjectType;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  objc_super v81;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for DirectionalTextAlignment(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FontUseCase(0);
  v74 = *(_QWORD *)(v15 - 8);
  v75 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v76 = (char *)&v69 - v19;
  v20 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DAF8((uint64_t *)&unk_100811F40);
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = &v4[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_itemLayoutContext];
  v27 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer;
  v29 = objc_allocWithZone((Class)type metadata accessor for MediaView());
  v30 = v5;
  *(_QWORD *)&v5[v28] = sub_1003A37C4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
  v31 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView;
  v32 = type metadata accessor for BreakoutBackgroundEffectView();
  *(_QWORD *)&v30[v31] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v32)), "init");
  *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundArtwork] = 0;
  v33 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView;
  if (qword_100806A68 != -1)
    swift_once(&qword_100806A68, sub_100539C90);
  v34 = sub_10000EFC4(v20, (uint64_t)qword_10086AD00);
  sub_10016B7A0(v34, (uint64_t)v22);
  v35 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  Conditional<>.init(value:)(v22, v35, v20);
  v36 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0));
  *(_QWORD *)&v30[v33] = sub_100531054((uint64_t)v25);
  v37 = &v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition];
  v38 = enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:);
  v40 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v39);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v37, v38, v40);
  *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_pageTraits] = 0;
  v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isBackgroundEffectViewHidden] = 1;
  v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden] = 1;
  *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", a1, a2, a3, a4);
  if (JUScreenClassGetMain(v41) == 1)
  {
    v43 = v74;
    v42 = v75;
    v44 = v76;
    if (qword_100806600 != -1)
      swift_once(&qword_100806600, sub_1004C9798);
    v45 = qword_10086A2D8;
  }
  else
  {
    v43 = v74;
    v42 = v75;
    v44 = v76;
    if (qword_1008065F8 != -1)
      swift_once(&qword_1008065F8, sub_1004C977C);
    v45 = qword_10086A2C0;
  }
  v46 = sub_10000EFC4(v42, (uint64_t)v45);
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v47(v44, v46, v42);
  v47(v17, (uint64_t)v44, v42);
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v14, enum case for DirectionalTextAlignment.none(_:), v70);
  v48 = objc_allocWithZone((Class)type metadata accessor for CappedSizeDynamicTypeLabel(0));
  v49 = UIContentSizeCategoryExtraExtraExtraLarge;
  v50 = sub_1004067A4((uint64_t)v17, 2, (uint64_t)v14, UIContentSizeCategoryExtraExtraExtraLarge);

  *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel] = v50;
  v81.receiver = v30;
  v81.super_class = ObjectType;
  v51 = (char *)objc_msgSendSuper2(&v81, "initWithFrame:", a1, a2, a3, a4);
  v52 = objc_msgSend(v51, "contentView");
  objc_msgSend(v52, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v53 = v42;
  v54 = *(void **)&v51[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
  objc_msgSend(v54, "setNumberOfLines:", 2);
  v55 = v54;
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x614C726564616568, 0xEB000000006C6562, &v79, &v77);
  sub_100010F2C((uint64_t)&v77, &qword_100808F20);
  sub_100010F2C((uint64_t)&v79, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v12);
  v56 = v73;
  v57 = *(void (**)(char *, uint64_t))(v72 + 8);
  v57(v12, v73);
  v58 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView;
  v59 = *(id *)&v51[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_artworkView];
  ArtworkView.frameUpdatesImageSize.setter(0);

  v60 = *(void **)&v51[v58];
  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v61 = v60;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6B726F77747261, 0xE700000000000000, &v79, &v77);
  sub_100010F2C((uint64_t)&v77, &qword_100808F20);
  sub_100010F2C((uint64_t)&v79, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v12);

  v57(v12, v56);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v62 = v51;
  v63 = (void *)static UIColor.placeholderBackground.getter(v62);
  objc_msgSend(v62, "setBackgroundColor:", v63);

  v64 = objc_msgSend(v62, "contentView");
  v65 = objc_msgSend(v64, "layer");

  objc_msgSend(v65, "setAllowsGroupBlending:", 0);
  v66 = objc_msgSend(v62, "contentView");
  objc_msgSend(v66, "addSubview:", *(_QWORD *)&v62[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer]);

  v67 = objc_msgSend(v62, "contentView");
  objc_msgSend(v67, "addSubview:", *(_QWORD *)&v62[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView]);

  sub_1001DF374();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v76, v53);
  return v62;
}

void (*sub_1001E05F4(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer);
  v4 = OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer;
  a1[1] = v3;
  a1[2] = v4;
  v5 = *(void **)(*(_QWORD *)(v3 + v4)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (v5)
  {
    v6 = type metadata accessor for VideoView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
      v8 = v5;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  return sub_1000FD75C;
}

uint64_t sub_1001E067C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

id sub_1001E0724()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id result;
  void *v21;
  char *v22;
  __n128 v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  __n128 v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[5];
  _QWORD v46[5];
  _QWORD v47[5];
  char v48[24];
  objc_super v49;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v44 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0, v9);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for LargeHeroBreakoutLayout(0, v13);
  v16 = *(_QWORD *)(v43 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v43).n128_u64[0];
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49.receiver = v1;
  v49.super_class = ObjectType;
  result = objc_msgSendSuper2(&v49, "layoutSubviews", v17);
  v21 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_pageTraits];
  if (v21)
  {
    v42 = v3;
    v22 = &v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition];
    v23 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition], v48, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 16))(v11, v22, v7, v23);
    swift_unknownObjectRetain(v21);
    sub_1001DEE1C((uint64_t)v11, v21, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v24 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer];
    v47[3] = type metadata accessor for MediaView();
    v47[4] = &protocol witness table for UIView;
    v47[0] = v24;
    v25 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_headerLabel];
    v46[3] = type metadata accessor for DynamicTypeLabel(0);
    v46[4] = &protocol witness table for UILabel;
    v46[0] = v25;
    v26 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView];
    v45[3] = type metadata accessor for BreakoutDetailsView(0);
    v45[4] = &protocol witness table for UIView;
    v45[0] = v26;
    v27 = v24;
    v28 = v25;
    v29 = v26;
    LargeHeroBreakoutLayout.init(metrics:backgroundMediaView:headerLabel:detailsView:)(v15, v47, v46, v45, v30);
    v31 = objc_msgSend(v1, "contentView");
    objc_msgSend(v31, "bounds");
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v39 = v38;

    LargeHeroBreakoutLayout.placeChildren(relativeTo:in:)(v1, v33, v35, v37, v39);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v42);
    v40 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView];
    objc_msgSend(v1, "bounds");
    objc_msgSend(v40, "setFrame:");
    v41 = swift_unknownObjectRelease();
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v19, v43, v41);
  }
  return result;
}

char *sub_1001E0B8C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  char *result;
  double v5;
  double v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "applyLayoutAttributes:", a1);
  v3 = type metadata accessor for BaseCollectionViewLayoutAttributes();
  result = (char *)swift_dynamicCastClass(a1, v3);
  if (result)
  {
    v5 = *(double *)&result[OBJC_IVAR____TtC20ProductPageExtension34BaseCollectionViewLayoutAttributes_parallaxY];
    result = *(char **)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer]
                      + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
    v6 = *(double *)&result[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_parallaxY];
    *(double *)&result[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_parallaxY] = v5;
    if (v5 != v6)
      return (char *)objc_msgSend(result, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_1001E0D50()
{
  return type metadata accessor for LargeHeroBreakoutCollectionViewCell(0);
}

uint64_t type metadata accessor for LargeHeroBreakoutCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100814F68;
  if (!qword_100814F68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeHeroBreakoutCollectionViewCell);
  return result;
}

void sub_1001E0D94(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[11];

  sub_100011560(319);
  if (v4 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(v2 - 8) + 64;
    v7[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[4] = "\b";
    v7[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(319, v3);
    if (v6 <= 0x3F)
    {
      v7[7] = *(_QWORD *)(v5 - 8) + 64;
      v7[8] = "\b";
      v7[9] = &unk_100651510;
      v7[10] = &unk_100651510;
      swift_updateClassMetadata2(a1, 256, 11, v7, a1 + 80);
    }
  }
}

uint64_t (*sub_1001E0E50(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1001E05F4(v2);
  return sub_10001C148;
}

double sub_1001E0E94()
{
  void *v0;
  CGRect v2;

  objc_msgSend(v0, "bounds");
  return CGRectGetMaxY(v2);
}

uint64_t sub_1001E0EB4()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E720(&qword_100814FB8, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_1006515B0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_1001E0EFC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_100814FB8, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_1006515B0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_1001E0F5C(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E720(&qword_100814FB8, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_1006515B0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001C148;
}

uint64_t sub_1001E0FD8()
{
  return sub_10000E720(&qword_100814F80, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_100651530);
}

uint64_t sub_1001E1004()
{
  return sub_10000E720((unint64_t *)&unk_100814F88, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_100651560);
}

uint64_t sub_1001E1030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001E1078()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for BreakoutDetailsView.Config(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100811F40);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v0[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_itemLayoutContext];
  v9 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_mediaViewContainer;
  v11 = objc_allocWithZone((Class)type metadata accessor for MediaView());
  *(_QWORD *)&v1[v10] = sub_1003A37C4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundEffectView;
  v13 = type metadata accessor for BreakoutBackgroundEffectView();
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_backgroundArtwork] = 0;
  v14 = OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailsView;
  if (qword_100806A68 != -1)
    swift_once(&qword_100806A68, sub_100539C90);
  v15 = sub_10000EFC4(v2, (uint64_t)qword_10086AD00);
  sub_10016B7A0(v15, (uint64_t)v4);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  Conditional<>.init(value:)(v4, v16, v2);
  v17 = objc_allocWithZone((Class)type metadata accessor for BreakoutDetailsView(0));
  *(_QWORD *)&v1[v14] = sub_100531054((uint64_t)v7);
  v18 = &v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_detailPosition];
  v19 = enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:);
  v21 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v18, v19, v21);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_pageTraits] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isBackgroundEffectViewHidden] = 1;
  v1[OBJC_IVAR____TtC20ProductPageExtension35LargeHeroBreakoutCollectionViewCell_isHeaderLabelHidden] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/LargeHeroBreakoutCollectionViewCell.swift", 62, 2, 190, 0);
  __break(1u);
}

ValueMetadata *type metadata accessor for SearchFocusPageShelfLayoutSpacingProvider()
{
  return &type metadata for SearchFocusPageShelfLayoutSpacingProvider;
}

uint64_t sub_1001E12E8@<X0>(_QWORD *a1@<X0>, double *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  __n128 v17;
  int v18;
  __n128 v19;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  _QWORD *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  double *v35;
  _QWORD v36[5];

  v35 = a2;
  v4 = type metadata accessor for FontSource(0, a3);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (_QWORD **)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Shelf.ContentType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD **)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_100651690);
  ReadOnlyLens.subscript.getter(v10, KeyPath, v11);
  v17 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v15, v11, v17);
  v18 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v10, v7);
  if (v18 == enum case for Shelf.ContentType.singleColumnList(_:)
    || v18 == enum case for Shelf.ContentType.twoColumnList(_:)
    || v18 == enum case for Shelf.ContentType.scrollablePill(_:))
  {
    if (qword_1008069F8 != -1)
      swift_once(&qword_1008069F8, sub_100519738);
    v22 = (void *)qword_10086AC60;
    *v6 = qword_10086AC60;
    v23 = v34;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v34 + 104))(v6, enum case for FontSource.textStyle(_:), v4);
    v24 = type metadata accessor for StaticDimension(0);
    v25 = v35;
    *((_QWORD *)v35 + 3) = v24;
    *((_QWORD *)v25 + 4) = &protocol witness table for StaticDimension;
    sub_1000119C0(v25);
    v36[3] = v4;
    v36[4] = &protocol witness table for FontSource;
    v26 = sub_1000119C0(v36);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v26, v6, v4);
    v27 = v22;
    StaticDimension.init(_:scaledLike:)(v36, 18.0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8))(v6, v4);
  }
  else if (v18 == enum case for Shelf.ContentType.unifiedMessage(_:))
  {
    if (qword_100806808 != -1)
      swift_once(&qword_100806808, sub_1004D5230);
    v29 = type metadata accessor for StaticDimension(0);
    v30 = sub_10000EFC4(v29, (uint64_t)qword_10086A848);
    v31 = v35;
    *((_QWORD *)v35 + 3) = v29;
    *((_QWORD *)v31 + 4) = &protocol witness table for StaticDimension;
    v32 = sub_1000119C0(v31);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v32, v30, v29);
  }
  else
  {
    sub_100538B00(v33, v35, v19);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1001E15DC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(_QWORD *, char *, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  void *v24;
  _QWORD v25[3];
  uint64_t v26;
  void *v27;
  _QWORD v28[6];

  v20 = a1;
  v2 = type metadata accessor for FontSource(0, a2);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1008064B8 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100869F00);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v8(v5, v7, v6);
  v9 = enum case for FontSource.useCase(_:);
  v10 = (void (*)(char *, uint64_t, uint64_t))v3[13];
  v10(v5, enum case for FontSource.useCase(_:), v2);
  v11 = type metadata accessor for StaticDimension(0);
  v28[3] = v11;
  v28[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v28);
  v26 = v2;
  v27 = &protocol witness table for FontSource;
  v12 = sub_1000119C0(v25);
  v13 = (void (*)(_QWORD *, char *, uint64_t))v3[2];
  v13(v12, v5, v2);
  StaticDimension.init(_:scaledLike:)(v25, 30.0);
  v14 = (void (*)(char *, uint64_t))v3[1];
  v14(v5, v2);
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v15 = sub_10000EFC4(v6, (uint64_t)qword_100869F18);
  v8(v5, v15, v6);
  v10(v5, v9, v2);
  v26 = v11;
  v27 = &protocol witness table for StaticDimension;
  sub_1000119C0(v25);
  v23 = v2;
  v24 = &protocol witness table for FontSource;
  v16 = sub_1000119C0(v22);
  v13(v16, v5, v2);
  StaticDimension.init(_:scaledLike:)(v22, 36.0);
  v14(v5, v2);
  if (qword_1008064E8 != -1)
    swift_once(&qword_1008064E8, sub_1004C9240);
  v17 = sub_10000EFC4(v6, (uint64_t)qword_100869F90);
  v8(v5, v17, v6);
  v10(v5, v9, v2);
  v23 = v11;
  v24 = &protocol witness table for StaticDimension;
  sub_1000119C0(v22);
  v21[3] = v2;
  v21[4] = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v21);
  v13(v18, v5, v2);
  StaticDimension.init(_:scaledLike:)(v21, 36.0);
  v14(v5, v2);
  return EditorialStoryCardLayout.Metrics.init(headerSpace:titleSpace:descriptionSpace:layoutMargins:)(v28, v25, v22, 0.0, 20.0, 20.0, 20.0);
}

id sub_1001E18CC(uint64_t a1)
{
  return sub_1001E1954(a1, &qword_100804DD8, (id *)&qword_100865DB8, &qword_100865DB0, (uint64_t)sub_1001E18F0);
}

UIColor sub_1001E18F0()
{
  UIColor result;

  sub_100035178();
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 1.0).super.isa;
  qword_100865DB8 = (uint64_t)result.super.isa;
  return result;
}

id sub_1001E1930(uint64_t a1)
{
  return sub_1001E1954(a1, &qword_100804DE8, (id *)&qword_100865DC8, &qword_100865DC0, (uint64_t)sub_1001E19B4);
}

id sub_1001E1954(uint64_t a1, _QWORD *a2, id *a3, _QWORD *a4, uint64_t a5)
{
  id result;

  if (*a2 != -1)
    swift_once(a2, a5);
  result = objc_msgSend(*a3, "colorWithAlphaComponent:", 0.8);
  *a4 = result;
  return result;
}

UIColor sub_1001E19B4()
{
  UIColor result;

  sub_100035178();
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  qword_100865DC8 = (uint64_t)result.super.isa;
  return result;
}

char *sub_1001E19F4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  objc_class *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString *v41;
  id v42;
  objc_class *v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  char *v71;
  id v72;
  id v73;
  id v74;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  objc_super v84;

  v9 = type metadata accessor for CornerStyle(0);
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  __chkstk_darwin(v9);
  v79 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v11);
  v78 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v76 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for DirectionalTextAlignment(0);
  v16 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v19);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &v4[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_itemLayoutContext];
  v23 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_artworkView;
  v77 = type metadata accessor for ArtworkView(0);
  v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v77));
  v26 = v4;
  *(_QWORD *)&v4[v24] = objc_msgSend(v25, "init");
  v27 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_headingLabel;
  if (qword_1008064B8 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v28 = sub_10000EFC4(v13, (uint64_t)qword_100869F00);
  v82 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v82(v21, v28, v13);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v29(v21, 0, 1, v13);
  v30 = enum case for DirectionalTextAlignment.leading(_:);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v31(v18, enum case for DirectionalTextAlignment.leading(_:), v83);
  v32 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v33 = objc_allocWithZone(v32);
  *(_QWORD *)&v26[v27] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v21, 1, 0, 1, 0, v18, 0, 0);
  v34 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_titleLabel;
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v35 = sub_10000EFC4(v13, (uint64_t)qword_100869F18);
  v82(v21, v35, v13);
  v29(v21, 0, 1, v13);
  v31(v18, v30, v83);
  v36 = objc_allocWithZone(v32);
  *(_QWORD *)&v26[v34] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v21, 2, 0, 1, 0, v18, 0, 0);
  v37 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_descriptionLabel;
  if (qword_1008064E8 != -1)
    swift_once(&qword_1008064E8, sub_1004C9240);
  v38 = sub_10000EFC4(v13, (uint64_t)qword_100869F90);
  v39 = (uint64_t)v76;
  v82(v76, v38, v13);
  v31(v18, v30, v83);
  v40 = objc_allocWithZone((Class)type metadata accessor for CappedSizeDynamicTypeLabel(0));
  v41 = UIContentSizeCategoryExtraExtraExtraLarge;
  v42 = sub_1004067A4(v39, 0, (uint64_t)v18, UIContentSizeCategoryExtraExtraExtraLarge);

  *(_QWORD *)&v26[v37] = v42;
  *(_QWORD *)&v26[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_pageTraits] = 0;

  v43 = (objc_class *)type metadata accessor for EditorialStoryCardCollectionViewCell(0);
  v84.receiver = v26;
  v84.super_class = v43;
  v44 = (char *)objc_msgSendSuper2(&v84, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v44, "setClipsToBounds:", 0);
  v45 = objc_msgSend(v44, "contentView");
  objc_msgSend(v45, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v46 = objc_msgSend(v44, "contentView");
  objc_msgSend(v46, "setClipsToBounds:", 0);

  v47 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_artworkView;
  objc_msgSend(*(id *)&v44[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_artworkView], "setContentMode:", 2);
  if (qword_100804AA8 != -1)
    swift_once(&qword_100804AA8, sub_100141214);
  v48 = type metadata accessor for Shadow(0);
  v49 = sub_10000EFC4(v48, (uint64_t)qword_100865478);
  v50 = *(_QWORD *)(v48 - 8);
  v51 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v78, v49, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v48);
  ArtworkView.shadow.setter(v51);
  v53 = v79;
  v52 = v80;
  v54 = v81;
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, enum case for CornerStyle.arc(_:), v81);
  ArtworkView.setCorner(radius:style:)(v53, 14.0);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  v55 = *(id *)&v44[v47];
  v56 = static ArtworkView.iconBorderColor.getter(v55);
  dispatch thunk of RoundedCornerView.borderColor.setter(v56);

  v57 = *(id *)&v44[v47];
  v58 = static ArtworkView.iconBorderWidth.getter(v57);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v58);

  v59 = objc_msgSend(v44, "contentView");
  objc_msgSend(v59, "addSubview:", *(_QWORD *)&v44[v47]);

  v60 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_headingLabel;
  v61 = qword_100804DE0;
  v62 = *(id *)&v44[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_headingLabel];
  if (v61 != -1)
    swift_once(&qword_100804DE0, sub_1001E1930);
  objc_msgSend(v62, "setTextColor:", qword_100865DC0);

  v63 = objc_msgSend(v44, "contentView");
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v44[v60]);

  v64 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_titleLabel;
  v65 = qword_100804DE8;
  v66 = *(id *)&v44[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_titleLabel];
  if (v65 != -1)
    swift_once(&qword_100804DE8, sub_1001E19B4);
  objc_msgSend(v66, "setTextColor:", qword_100865DC8);

  v67 = objc_msgSend(v44, "contentView");
  objc_msgSend(v67, "addSubview:", *(_QWORD *)&v44[v64]);

  v68 = *(void **)&v44[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_descriptionLabel];
  objc_msgSend(v68, "setTextColor:", qword_100865DC8);
  v69 = objc_msgSend(v44, "contentView");
  objc_msgSend(v69, "addSubview:", v68);

  v70 = (void *)objc_opt_self(UIColor);
  v71 = v44;
  v72 = objc_msgSend(v70, "clearColor");
  objc_msgSend(v71, "setBackgroundColor:", v72);

  v73 = objc_msgSend(v71, "contentView");
  v74 = objc_msgSend(v70, "clearColor");
  objc_msgSend(v73, "setBackgroundColor:", v74);

  return v71;
}

id sub_1001E2234()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  id result;
  uint64_t v19;
  double Width;
  double Height;
  uint64_t v22;
  uint64_t v23;
  double v24;
  __n128 v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[5];
  void *v42;
  uint64_t v43;
  void *v44;
  _QWORD v45[5];
  objc_super v46;
  CGRect v47;
  CGRect v48;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EditorialStoryCardLayout.Metrics(0, v4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for EditorialStoryCardLayout(0, v8);
  v38 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FloatingPointRoundingRule(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (objc_class *)type metadata accessor for EditorialStoryCardCollectionViewCell(0);
  v46.receiver = v1;
  v46.super_class = v17;
  result = objc_msgSendSuper2(&v46, "layoutSubviews");
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_pageTraits];
  if (v19)
  {
    v36 = v3;
    v37 = v2;
    objc_msgSend(v1, "bounds", swift_unknownObjectRetain(v19).n128_f64[0]);
    Width = CGRectGetWidth(v47);
    objc_msgSend(v1, "bounds");
    Height = CGRectGetHeight(v48);
    if (qword_1008067F8 != -1)
      swift_once(&qword_1008067F8, sub_1004D520C);
    v22 = type metadata accessor for StaticDimension(0);
    v23 = sub_10000EFC4(v22, (uint64_t)qword_10086A818);
    static Dimensions.defaultRoundingRule.getter(v23);
    v24 = AnyDimension.value(in:rounded:)(v19, v16, v22, &protocol witness table for StaticDimension);
    v25.n128_f64[0] = (*(double (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1001E15DC((uint64_t)v10, v25);
    v26 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_artworkView];
    v45[3] = type metadata accessor for ArtworkView(0);
    v45[4] = &protocol witness table for UIView;
    v45[0] = v26;
    v27 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_headingLabel];
    v43 = type metadata accessor for DynamicTypeLabel(0);
    v44 = &protocol witness table for UILabel;
    v41[4] = &protocol witness table for UILabel;
    v42 = v27;
    v28 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_titleLabel];
    v41[3] = v43;
    v41[0] = v28;
    v29 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_descriptionLabel];
    v40[4] = &protocol witness table for UILabel;
    v40[3] = v43;
    v40[0] = v29;
    v30 = v26;
    v31 = v27;
    v32 = v28;
    v33 = v29;
    EditorialStoryCardLayout.init(metrics:artworkView:headerLabel:titleLabel:descriptionLabel:)(v10, v45, &v42, v41, v40);
    EditorialStoryCardLayout.placeChildren(relativeTo:in:)(v1, 0.0, 0.0, Width, Height - v24);
    v34 = swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v6, v37, v34);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  }
  return result;
}

id sub_1001E25A8()
{
  char *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorialStoryCardCollectionViewCell(0);
  objc_msgSendSuper2(&v2, "prepareForReuse");
  ArtworkView.image.setter(0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_headingLabel], "setText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_titleLabel], "setText:", 0);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_descriptionLabel], "setText:", 0);
}

id sub_1001E267C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorialStoryCardCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001E2728()
{
  return type metadata accessor for EditorialStoryCardCollectionViewCell(0);
}

uint64_t type metadata accessor for EditorialStoryCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100814FE8;
  if (!qword_100814FE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditorialStoryCardCollectionViewCell);
  return result;
}

void sub_1001E276C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = "\b";
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

id sub_1001E27F4()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_artworkView));
}

void sub_1001E2804()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  objc_class *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DirectionalTextAlignment(0);
  v5 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v0[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_itemLayoutContext];
  v12 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_artworkView;
  v14 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  v32 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_headingLabel;
  if (qword_1008064B8 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v15 = sub_10000EFC4(v2, (uint64_t)qword_100869F00);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v16(v10, v15, v2);
  v17 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56);
  v17(v10, 0, 1, v2);
  v18 = enum case for DirectionalTextAlignment.leading(_:);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v19(v7, enum case for DirectionalTextAlignment.leading(_:), v34);
  v20 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v21 = objc_allocWithZone(v20);
  v22 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v10, 1, 0, 1, 0, v7, 0, 0);
  *(_QWORD *)&v1[v32] = v22;
  v32 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_titleLabel;
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v23 = sub_10000EFC4(v2, (uint64_t)qword_100869F18);
  v16(v10, v23, v2);
  v17(v10, 0, 1, v2);
  v19(v7, v18, v34);
  v24 = objc_allocWithZone(v20);
  v25 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v10, 2, 0, 1, 0, v7, 0, 0);
  *(_QWORD *)&v1[v32] = v25;
  v26 = OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_descriptionLabel;
  if (qword_1008064E8 != -1)
    swift_once(&qword_1008064E8, sub_1004C9240);
  v27 = sub_10000EFC4(v2, (uint64_t)qword_100869F90);
  v28 = (uint64_t)v33;
  v16(v33, v27, v2);
  v19(v7, v18, v34);
  objc_allocWithZone((Class)type metadata accessor for CappedSizeDynamicTypeLabel(0));
  v29 = UIContentSizeCategoryExtraExtraExtraLarge;
  v30 = sub_1004067A4(v28, 0, (uint64_t)v7, UIContentSizeCategoryExtraExtraExtraLarge);

  *(_QWORD *)&v1[v26] = v30;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension36EditorialStoryCardCollectionViewCell_pageTraits] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/EditorialStoryCardCollectionViewCell.swift", 63, 2, 87, 0);
  __break(1u);
}

double sub_1001E2BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double result;
  _QWORD v13[3];
  uint64_t v14;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_offerButton);
  sub_100081524(a1, (uint64_t)v13);
  v5 = v14;
  if (v14)
  {
    v6 = sub_100010F08(v13, v14);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v13);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v4, "addTarget:action:forControlEvents:", v11, a2, 64);
  *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  return result;
}

double sub_1001E2CB0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double result;
  _QWORD v11[3];
  uint64_t v12;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_offerButton);
  sub_100081524(a1, (uint64_t)v11);
  v3 = v12;
  if (v12)
  {
    v4 = sub_100010F08(v11, v12);
    v5 = *(_QWORD *)(v3 - 8);
    v6 = __chkstk_darwin(v4);
    v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    v9 = _bridgeAnythingToObjectiveC<A>(_:)(v8, v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v11);
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v2, "removeTarget:action:forControlEvents:", v9, 0, 64);
  *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  return result;
}

id sub_1001E2DA4(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  double v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v2 = v1;
  v4 = OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_progressView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_progressView];
  if (v5)
    goto LABEL_2;
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InstallProgressView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = *(void **)&v2[v4];
  if (v11)
  {
    objc_msgSend(v11, "removeFromSuperview");
    v12 = *(void **)&v2[v4];
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)&v2[v4] = v10;
  v13 = v10;

  if (*(_QWORD *)&v2[v4])
    objc_msgSend(v2, "addSubview:");
  objc_msgSend(v2, "setNeedsLayout");

  v14 = *(_QWORD *)&v2[v4];
  if (v14)
  {
    v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_animationCompletionHandler];
    v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_animationCompletionHandler
                       + 8];
    v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC20ProductPageExtension19InstallProgressView_completionHandler);
    v18 = *v17;
    v19 = v17[1];
    *v17 = v15;
    v17[1] = v16;
    sub_100018918(v15, v16);
    sub_100018908(v18, v19);
    v20 = *(void **)&v2[v4];
    if (v20)
    {
      objc_msgSend(v20, "setClipsToBounds:", 1);
      v5 = *(void **)&v2[v4];
      if (v5)
      {
LABEL_2:
        v6 = v5;
        dispatch thunk of RoundedCornerView.cornerRadius.getter();
        objc_msgSend(v6, "_setCornerRadius:");

        v7 = *(char **)&v2[v4];
        if (v7)
        {
          v8 = *(double *)&v7[OBJC_IVAR____TtC20ProductPageExtension19InstallProgressView_progress];
          *(double *)&v7[OBJC_IVAR____TtC20ProductPageExtension19InstallProgressView_progress] = a1;
          v9 = v7;
          sub_1004CE3A0(v8);

        }
      }
    }
  }
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_1001E2F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t);
  _QWORD *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  _QWORD *v41;
  NSString *v42;
  uint64_t v43;
  char *v44;
  double v45;
  uint64_t v46;
  double v47;
  _QWORD *v48;
  NSString *v49;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  unsigned int v63;
  uint64_t v64;
  void (*v65)(_QWORD *, char *, uint64_t);
  _QWORD v66[5];
  _QWORD v67[3];
  uint64_t v68;
  void *v69;
  _QWORD v70[3];
  uint64_t v71;
  void *v72;
  _QWORD v73[3];
  uint64_t v74;
  void *v75;
  _QWORD v76[3];
  uint64_t v77;
  void *v78;
  _QWORD v79[5];
  _QWORD v80[5];
  _QWORD v81[6];

  v57 = a1;
  v1 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
  __chkstk_darwin(v1);
  v61 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - v4;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v51 - v8;
  v10 = type metadata accessor for FontSource(0, v7);
  v11 = *(_QWORD **)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OfferButtonMetrics(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v59 = (char *)&v51 - v19;
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v20) & 1) != 0)
  {
    if (qword_100804668 != -1)
      swift_once(&qword_100804668, sub_1000654B0);
    v21 = qword_10080AA60;
  }
  else
  {
    if (qword_100804670 != -1)
      swift_once(&qword_100804670, sub_10006595C);
    v21 = qword_10080AA78;
  }
  v60 = v5;
  v22 = sub_10000EFC4(v14, (uint64_t)v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v22, v14);
  v54 = v15;
  v55 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v59, v17, v14);
  v81[3] = &type metadata for Double;
  v81[4] = &protocol witness table for Double;
  v80[4] = &protocol witness table for Double;
  v81[0] = 0x4024000000000000;
  v80[3] = &type metadata for Double;
  v80[0] = 0x4000000000000000;
  if (qword_1008063F8 != -1)
    swift_once(&qword_1008063F8, sub_1004C7FC4);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_100869CC0);
  v53 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v58 = v23;
  v25(v13, v24, v23);
  v26 = (void (*)(char *, uint64_t, uint64_t))v11[13];
  v63 = enum case for FontSource.useCase(_:);
  v62 = v26;
  ((void (*)(char *))v26)(v13);
  v64 = type metadata accessor for StaticDimension(0);
  v79[3] = v64;
  v79[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v79);
  v77 = v10;
  v78 = &protocol witness table for FontSource;
  v27 = sub_1000119C0(v76);
  v65 = (void (*)(_QWORD *, char *, uint64_t))v11[2];
  v65(v27, v13, v10);
  StaticDimension.init(_:scaledLike:)(v76, 35.0);
  v28 = (void (*)(char *, uint64_t))v11[1];
  v28(v13, v10);
  v76[0] = 0x405C000000000000;
  v73[0] = 0x4044000000000000;
  v29 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  v56 = v9;
  Conditional<>.init(regularValue:compactValue:)(v76, v73, v29, &type metadata for CGFloat);
  if (qword_100806400 != -1)
    swift_once(&qword_100806400, sub_1004C7FDC);
  v30 = v58;
  v31 = sub_10000EFC4(v58, (uint64_t)qword_100869CD8);
  v25(v13, v31, v30);
  v62(v13, v63, v10);
  v77 = v64;
  v78 = &protocol witness table for StaticDimension;
  sub_1000119C0(v76);
  v74 = v10;
  v75 = &protocol witness table for FontSource;
  v32 = sub_1000119C0(v73);
  v65(v32, v13, v10);
  StaticDimension.init(_:scaledLike:)(v73, 20.0);
  v28(v13, v10);
  v73[0] = 0x405C000000000000;
  v70[0] = 0x4044000000000000;
  Conditional<>.init(regularValue:compactValue:)(v73, v70, v29, &type metadata for CGFloat);
  if (qword_1008063E8 != -1)
    swift_once(&qword_1008063E8, sub_1004C7F90);
  v33 = v58;
  v34 = sub_10000EFC4(v58, (uint64_t)qword_100869C90);
  v25(v13, v34, v33);
  v62(v13, v63, v10);
  v35 = v64;
  v74 = v64;
  v75 = &protocol witness table for StaticDimension;
  sub_1000119C0(v73);
  v71 = v10;
  v72 = &protocol witness table for FontSource;
  v36 = sub_1000119C0(v70);
  v65(v36, v13, v10);
  StaticDimension.init(_:scaledLike:)(v70, 42.0);
  v28(v13, v10);
  v52 = v28;
  v70[0] = 0x4052000000000000;
  v67[0] = 0x4034000000000000;
  v37 = Conditional<>.init(regularValue:compactValue:)(v70, v67, v29, &type metadata for CGFloat);
  *(_QWORD *)v13 = UIFontTextStyleBody;
  *((_DWORD *)v13 + 2) = 0;
  v38 = enum case for FontUseCase.preferredFont(_:);
  v53 = *(_QWORD *)(v53 + 104);
  ((void (*)(char *, _QWORD, uint64_t, __n128))v53)(v13, enum case for FontUseCase.preferredFont(_:), v33, v37);
  v39 = v63;
  v40 = v62;
  v62(v13, v63, v10);
  v71 = v35;
  v72 = &protocol witness table for StaticDimension;
  sub_1000119C0(v70);
  v68 = v10;
  v69 = &protocol witness table for FontSource;
  v41 = sub_1000119C0(v67);
  v65(v41, v13, v10);
  v42 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v67, 50.0);
  v43 = ((uint64_t (*)(char *, uint64_t))v28)(v13, v10);
  v44 = v59;
  v45 = OfferButtonMetrics.minimumSize.getter(v43);
  v47 = OfferButtonMetrics.estimatedHeight.getter(v46);
  *(_QWORD *)v13 = v42;
  *((_DWORD *)v13 + 2) = 0;
  ((void (*)(char *, uint64_t, uint64_t))v53)(v13, v38, v33);
  v40(v13, v39, v10);
  v68 = v64;
  v69 = &protocol witness table for StaticDimension;
  sub_1000119C0(v67);
  v66[3] = v10;
  v66[4] = &protocol witness table for FontSource;
  v48 = sub_1000119C0(v66);
  v65(v48, v13, v10);
  v49 = v42;
  StaticDimension.init(_:scaledLike:)(v66, 20.0);
  v52(v13, v10);
  InstallPageInstallingViewLayout.Metrics.init(iconSize:ageRatingMargin:ageRatingBaselineOffset:titleSpace:titleHorizontalMargin:subtitleSpace:subtitleHorizontalMargin:descriptionSpace:descriptionHorizontalMargin:offerButtonMargin:offerButtonSize:bottomSpace:)(v81, v80, v79, v56, v76, v60, v73, v61, 144.0, 144.0, v45, v47, v70, v67);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v44, v55);
}

char *sub_1001E363C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  objc_class *v25;
  objc_class *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  double left;
  double bottom;
  double right;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  objc_class *ObjectType;
  uint64_t v49;
  objc_super v50;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_progressView] = 0;
  v16 = &v4[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_animationCompletionHandler];
  type metadata accessor for ArtworkView(0);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = v4;
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_iconView] = static ArtworkView.iconArtworkView.getter();
  if (qword_1008063F8 != -1)
    swift_once(&qword_1008063F8, sub_1004C7FC4);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_10000EFC4(v18, (uint64_t)qword_100869CC0);
  v20 = *(_QWORD *)(v18 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v15, v19, v18);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v22(v15, 0, 1, v18);
  v23 = enum case for DirectionalTextAlignment.none(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v24(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v25 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v49 = v9;
  v26 = v25;
  v27 = objc_allocWithZone(v25);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_ageRatingView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AgeRatingBadgeView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_100806400 != -1)
    swift_once(&qword_100806400, sub_1004C7FDC);
  v28 = sub_10000EFC4(v18, (uint64_t)qword_100869CD8);
  v21(v15, v28, v18);
  v22(v15, 0, 1, v18);
  v24(v12, v23, v49);
  v29 = objc_allocWithZone(v26);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_subtitleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 0, 1, 0, v12, 0, 0);
  if (qword_1008063E8 != -1)
    swift_once(&qword_1008063E8, sub_1004C7F90);
  v30 = sub_10000EFC4(v18, (uint64_t)qword_100869C90);
  v21(v15, v30, v18);
  v22(v15, 0, 1, v18);
  v24(v12, v23, v49);
  v31 = objc_allocWithZone(v26);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_descriptionLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_offerButton] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OfferButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v50.receiver = v17;
  v50.super_class = ObjectType;
  v32 = objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v36 = (char *)v32;
  objc_msgSend(v36, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v36, "setScrollEnabled:", 1);
  objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_descriptionLabel;
  v38 = *(void **)&v36[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_descriptionLabel];
  objc_msgSend(v38, "setTextAlignment:", 1);
  v39 = OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_titleLabel;
  objc_msgSend(*(id *)&v36[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_titleLabel], "setTextAlignment:", 1);
  v40 = OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_subtitleLabel;
  objc_msgSend(*(id *)&v36[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_subtitleLabel], "setTextAlignment:", 1);
  sub_100035178();
  v41 = v38;
  v42 = (void *)static UIColor.secondaryText.getter(v41);
  objc_msgSend(v41, "setTextColor:", v42);

  v43 = *(id *)&v36[v39];
  v44 = (void *)static UIColor.primaryText.getter(v43);
  objc_msgSend(v43, "setTextColor:", v44);

  v45 = *(id *)&v36[v40];
  v46 = (void *)static UIColor.tertiaryText.getter(v45);
  objc_msgSend(v45, "setTextColor:", v46);

  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_iconView]);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[v37]);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[v39]);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[v40]);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_offerButton]);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_ageRatingView]);

  return v36;
}

double sub_1001E3C74(double a1, double a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  _QWORD v37[5];
  _QWORD v38[5];
  _QWORD v39[5];
  void *v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  _QWORD v46[7];

  v5 = type metadata accessor for InstallPageInstallingViewLayout.Metrics(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for InstallPageInstallingViewLayout(0);
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v32 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v2, "traitCollection", v9);
  v33 = v7;
  sub_1001E2F38((uint64_t)v7);

  v12 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_iconView];
  v46[3] = type metadata accessor for ArtworkView(0);
  v46[4] = &protocol witness table for UIView;
  v46[0] = v12;
  v13 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_progressView];
  if (v13)
  {
    *((_QWORD *)&v44 + 1) = type metadata accessor for InstallProgressView();
    v45 = &protocol witness table for UIView;
    *(_QWORD *)&v43 = v13;
  }
  else
  {
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
  }
  v14 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_titleLabel];
  v41 = type metadata accessor for DynamicTypeLabel(0);
  v42 = &protocol witness table for UILabel;
  v39[4] = &protocol witness table for UILabel;
  v40 = v14;
  v15 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_subtitleLabel];
  v39[3] = v41;
  v38[4] = &protocol witness table for UILabel;
  v39[0] = v15;
  v16 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_descriptionLabel];
  v38[3] = v41;
  v38[0] = v16;
  v17 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_ageRatingView];
  v37[3] = type metadata accessor for AgeRatingBadgeView(0);
  v37[4] = &protocol witness table for UIView;
  v37[0] = v17;
  v18 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_offerButton];
  v36[3] = type metadata accessor for OfferButton();
  v36[4] = &protocol witness table for UIView;
  v36[0] = v18;
  v19 = v12;
  v20 = v13;
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v32;
  InstallPageInstallingViewLayout.init(metrics:iconView:progressView:titleText:subtitleText:descriptionText:ageRatingView:offerButton:)(v33, v46, &v43, &v40, v39, v38, v37, v36);
  v27 = sub_1001E42F4();
  v28 = v35;
  v29 = dispatch thunk of Measurable.measurements(fitting:in:)(v2, v35, v27, a1, a2);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v28);
  return v29;
}

uint64_t sub_1001E3F1C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  char *v27;
  double Width;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  objc_class *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[5];
  _QWORD v42[5];
  _QWORD v43[5];
  void *v44;
  uint64_t v45;
  void *v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  _QWORD v50[5];
  objc_super v51;
  CGRect v52;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  __chkstk_darwin(v3);
  v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InstallPageInstallingViewLayout.Metrics(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for InstallPageInstallingViewLayout(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v33 = ObjectType;
  v34 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51.receiver = v1;
  v51.super_class = ObjectType;
  objc_msgSendSuper2(&v51, "layoutSubviews", v9);
  v11 = objc_msgSend(v1, "traitCollection");
  v32 = v7;
  sub_1001E2F38((uint64_t)v7);

  v12 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_iconView];
  v50[3] = type metadata accessor for ArtworkView(0);
  v50[4] = &protocol witness table for UIView;
  v50[0] = v12;
  v13 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_progressView];
  if (v13)
  {
    *((_QWORD *)&v48 + 1) = type metadata accessor for InstallProgressView();
    v49 = &protocol witness table for UIView;
    *(_QWORD *)&v47 = v13;
  }
  else
  {
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
  }
  v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_titleLabel];
  v45 = type metadata accessor for DynamicTypeLabel(0);
  v46 = &protocol witness table for UILabel;
  v43[4] = &protocol witness table for UILabel;
  v44 = v14;
  v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_subtitleLabel];
  v43[3] = v45;
  v42[4] = &protocol witness table for UILabel;
  v43[0] = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_descriptionLabel];
  v42[3] = v45;
  v42[0] = v16;
  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_ageRatingView];
  v41[3] = type metadata accessor for AgeRatingBadgeView(0);
  v41[4] = &protocol witness table for UIView;
  v41[0] = v17;
  v18 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30InstallPageInstallingOfferView_offerButton];
  v40[3] = type metadata accessor for OfferButton();
  v40[4] = &protocol witness table for UIView;
  v40[0] = v18;
  v19 = v12;
  v20 = v13;
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v34;
  InstallPageInstallingViewLayout.init(metrics:iconView:progressView:titleText:subtitleText:descriptionText:ageRatingView:offerButton:)(v32, v50, &v47, &v44, v43, v42, v41, v40);
  LayoutMarginsAware<>.layoutFrame.getter(v33);
  v27 = v37;
  InstallPageInstallingViewLayout.placeChildren(relativeTo:in:)(v1, 0.0, 0.0);
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v52);
  LayoutRect.size.getter(v29);
  objc_msgSend(v1, "setContentSize:", Width);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v26, v36);
}

uint64_t type metadata accessor for InstallPageInstallingOfferView()
{
  return objc_opt_self(_TtC20ProductPageExtension30InstallPageInstallingOfferView);
}

unint64_t sub_1001E42F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100815070;
  if (!qword_100815070)
  {
    v1 = type metadata accessor for InstallPageInstallingViewLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for InstallPageInstallingViewLayout, v1);
    atomic_store(result, (unint64_t *)&qword_100815070);
  }
  return result;
}

double sub_1001E433C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100011980(v0, qword_100865E00);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100865E00);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

void sub_1001E438C()
{
  qword_100865E18 = 0x4008000000000000;
}

uint64_t sub_1001E439C()
{
  uint64_t result;

  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  result = static UIColor.componentBackgroundStandout.getter();
  qword_100865E20 = result;
  return result;
}

uint64_t sub_1001E43DC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  result = static UIColor.placeholderBackground.getter(v0);
  qword_100865E28 = result;
  return result;
}

uint64_t sub_1001E441C(uint64_t a1)
{
  return sub_1000C2080(a1, qword_100865E30, &qword_100806450, (uint64_t)qword_100869DC8, (uint64_t)sub_1004C8878);
}

uint64_t sub_1001E4440(uint64_t a1)
{
  return sub_1000C2080(a1, qword_100865E48, &qword_100806458, (uint64_t)qword_100869DE0, (uint64_t)sub_1004C8890);
}

uint64_t sub_1001E4464(uint64_t a1)
{
  return sub_1000C2080(a1, qword_100865E60, &qword_100806460, (uint64_t)qword_100869DF8, (uint64_t)sub_1004C88A8);
}

uint64_t sub_1001E4488(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100865E78);
  sub_10000EFC4(v5, (uint64_t)qword_100865E78);
  if (qword_100804E10 != -1)
    swift_once(&qword_100804E10, sub_1001E441C);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100865E30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 22.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1001E45D4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100865E90);
  sub_10000EFC4(v5, (uint64_t)qword_100865E90);
  if (qword_100804E18 != -1)
    swift_once(&qword_100804E18, sub_1001E4440);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100865E48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 25.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1001E4720(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100865EA8);
  sub_10000EFC4(v5, (uint64_t)qword_100865EA8);
  if (qword_100804E20 != -1)
    swift_once(&qword_100804E20, sub_1001E4464);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100865E60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 20.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1001E486C()
{
  qword_100865EC0 = 0x4034000000000000;
}

id sub_1001E487C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  NSString v5;
  void *v6;
  uint64_t v7;

  v4 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialTypeLabel];
  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setText:", v5);
    swift_bridgeObjectRelease(a2);

  }
  else
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialTypeLabel], "setText:", 0);
  }
  objc_msgSend(v4, "setHidden:", a2 == 0);
  v6 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_subtitleLabel];
  if (objc_msgSend(v4, "isHidden"))
    v7 = 2;
  else
    v7 = 1;
  objc_msgSend(v6, "setNumberOfLines:", v7);
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_1001E4950()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for SystemImage(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView____lazy_storage___editorialIcon;
  v8 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView____lazy_storage___editorialIcon];
  if (v8)
  {
    v9 = *(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView____lazy_storage___editorialIcon];
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for SystemImage.appstore(_:), v2, v4);
    sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    if (qword_100804E10 != -1)
      swift_once(&qword_100804E10, sub_1001E441C);
    v10 = type metadata accessor for FontUseCase(0);
    v11 = sub_10000EFC4(v10, (uint64_t)qword_100865E30);
    v12 = objc_msgSend(v0, "traitCollection");
    v13 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v11, v12);

    v14 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v13);
    v15 = (void *)static SystemImage.load(_:with:)(v6, v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v15);

    v17 = *(void **)&v1[v7];
    *(_QWORD *)&v1[v7] = v16;
    v9 = v16;

    v8 = 0;
  }
  v18 = v8;
  return v9;
}

id sub_1001E4B14()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView];
  if (v7)
  {
    type metadata accessor for RoundedCornerView(0);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for CornerStyle.arc(_:), v2);
    v8 = v7;
    v9 = (void *)RoundedCornerView.__allocating_init(radius:style:)(v6, 5.0);
    v10 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView;
    v11 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView];
    if (v11)
    {
      objc_msgSend(v11, "removeFromSuperview");
      v12 = *(void **)&v1[v10];
    }
    else
    {
      v12 = 0;
    }
    *(_QWORD *)&v1[v10] = v9;
    v16 = v9;

    sub_1001E4C88();
    v17 = *(void **)&v1[v10];
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v18, "addSubview:", v8);

    }
  }
  else
  {
    v13 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView;
    v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView];
    if (v14)
    {
      objc_msgSend(v14, "removeFromSuperview", v4);
      v15 = *(void **)&v1[v13];
    }
    else
    {
      v15 = 0;
    }
    *(_QWORD *)&v1[v13] = 0;

    sub_1001E4C88();
  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1001E4C88()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setClipsToBounds:", 1);
    v3 = qword_100804E08;
    v4 = v2;
    if (v3 != -1)
      swift_once(&qword_100804E08, sub_1001E43DC);
    objc_msgSend(v4, "setBackgroundColor:", qword_100865E28);

    objc_msgSend(v0, "addSubview:", v4);
    v5 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView];
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v0, "addSubview:", v6);

    }
  }
  return objc_msgSend(v0, "setNeedsLayout");
}

id sub_1001E4D6C()
{
  char *v0;
  _BYTE *v1;
  void *v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;

  v1 = *(_BYTE **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid];
  if (v1)
  {
    v1[OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_showBorder] = 1;
    v2 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_imageBorderView];
    v3 = v1;
    objc_msgSend(v2, "setHidden:", 0);
    objc_msgSend(v3, "_setCornerRadius:", 5.0);
    objc_msgSend(v3, "setNeedsLayout");
    v4 = qword_100804E00;
    v5 = v3;
    if (v4 != -1)
      swift_once(&qword_100804E00, sub_1001E439C);
    objc_msgSend(v5, "setBackgroundColor:", qword_100865E20);

    objc_msgSend(v0, "addSubview:", v5);
  }
  return objc_msgSend(v0, "setNeedsLayout");
}

char *sub_1001E4E70(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  uint64_t v26;
  id v27;
  objc_class *v28;
  id v29;
  double left;
  double bottom;
  double right;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  objc_super v49;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView____lazy_storage___editorialIcon] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView] = 0;
  v16 = qword_100804E10;
  v17 = v4;
  if (v16 != -1)
    swift_once(&qword_100804E10, sub_1001E441C);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_10000EFC4(v18, (uint64_t)qword_100865E30);
  v20 = *(_QWORD *)(v18 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v15, v19, v18);
  v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v48(v15, 0, 1, v18);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v23(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialTypeLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 1, 4, 0, 0, v12, 0, 0);
  if (qword_100804E18 != -1)
    swift_once(&qword_100804E18, sub_1001E4440);
  v26 = sub_10000EFC4(v18, (uint64_t)qword_100865E48);
  v21(v15, v26, v18);
  v48(v15, 0, 1, v18);
  v23(v12, v22, v9);
  v27 = objc_allocWithZone(v24);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 1, 4, 0, 0, v12, 0, 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_subtitleLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);

  v28 = (objc_class *)type metadata accessor for EditorialSearchResultContentView();
  v49.receiver = v17;
  v49.super_class = v28;
  v29 = objc_msgSendSuper2(&v49, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v33 = (char *)v29;
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v34 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_subtitleLabel;
  if (qword_100804E20 != -1)
    swift_once(&qword_100804E20, sub_1001E4464);
  v35 = sub_10000EFC4(v18, (uint64_t)qword_100865E60);
  v21(v15, v35, v18);
  v48(v15, 0, 1, v18);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v15);
  objc_msgSend(*(id *)&v33[v34], "setLineBreakMode:", 4);
  v36 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialTypeLabel;
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v33[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialTypeLabel]);
  v37 = v33;
  v38 = sub_1001E4950();
  objc_msgSend(v37, "addSubview:", v38);

  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_titleLabel]);
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v33[v34]);
  v39 = *(id *)&v33[v36];
  v40 = objc_msgSend(v37, "tintColor");
  objc_msgSend(v39, "setTextColor:", v40);

  v41 = *(void **)&v33[v34];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v42 = v41;
  v43 = (void *)static UIColor.secondaryText.getter(v42);
  objc_msgSend(v42, "setTextColor:", v43);

  v44 = sub_1001E4950();
  v45 = objc_msgSend(v37, "tintColor");
  objc_msgSend(v44, "setTintColor:", v45);

  return v37;
}

void sub_1001E53C4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, double *);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  double v54;
  char *v55;
  objc_class *v56;
  uint64_t v57;
  char *v58;
  id v59;
  double v60;
  void **v61;
  void *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v72;
  char *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  id v78;
  double v79;
  CGFloat v80;
  double v81;
  double v82;
  CGFloat MinX;
  id v84;
  double v85;
  uint64_t v86;
  id *v87;
  uint64_t v88;
  __n128 v89;
  double MaxY;
  id v91;
  char *v92;
  double v93;
  CGFloat v94;
  double v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  double v99;
  CGFloat v100;
  double v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  double v108;
  double v109;
  double v110;
  double v111;
  objc_class *v112;
  uint64_t v113;
  double v114;
  double Width;
  double v116;
  void *v117;
  id v118;
  double v119;
  uint64_t v120;
  uint64_t Strong;
  char *v122;
  void *v123;
  double v124;
  void *v125;
  id v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  objc_class *v135;
  void *v136;
  void *v137;
  id v138;
  id v139;
  id v140;
  double v141;
  CGFloat v142;
  double v143;
  CGFloat v144;
  double v145;
  CGFloat v146;
  double v147;
  CGFloat v148;
  double v149;
  uint64_t v150;
  void *v151;
  id v152;
  id v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id *v160;
  objc_class *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void **v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  double v174;
  double v175;
  double v176;
  objc_super v177;
  _QWORD v178[41];
  objc_super v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;

  v1 = v0;
  v2 = sub_10000DAF8(&qword_10080DC38);
  __chkstk_darwin(v2);
  v160 = (id *)((char *)&v155 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v167 = *(_QWORD *)(v4 - 8);
  v168 = v4;
  __chkstk_darwin(v4);
  v166 = (char *)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v6 = COERCE_DOUBLE(type metadata accessor for StaticDimension(0));
  v176 = *(v6 - 1);
  __chkstk_darwin(v6);
  v170 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_1008155F0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v171 = (uint64_t)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v155 - v12);
  __chkstk_darwin(v14);
  v169 = (void **)((char *)&v155 - v15);
  __chkstk_darwin(v16);
  v18 = (void **)((char *)&v155 - v17);
  v19 = (objc_class *)type metadata accessor for EditorialSearchResultContentView();
  v179.receiver = v0;
  v179.super_class = v19;
  v161 = v19;
  objc_msgSendSuper2(&v179, "layoutSubviews");
  v20 = sub_10000DAF8(&qword_10080DC40);
  v21 = *(uint64_t *)(v9 + 72);
  v159 = v9;
  v22 = *(unsigned __int8 *)(v9 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(v20, v23 + 3 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_1006405F0;
  v164 = v23;
  v173 = v24;
  v25 = v24 + v23;
  v26 = v24 + v23 + *(int *)(v8 + 48);
  v162 = v1;
  v27 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialTypeLabel];
  *(_QWORD *)(v24 + v23) = v27;
  v28 = qword_100804E28;
  v165 = v27;
  if (v28 != -1)
LABEL_53:
    swift_once(&qword_100804E28, sub_1001E4488);
  v29 = sub_10000EFC4((uint64_t)v6, (uint64_t)qword_100865E78);
  v30 = *(void (**)(uint64_t, uint64_t, double *))(*(_QWORD *)&v176 + 16);
  v30(v26, v29, v6);
  v31 = v25 + v21 + *(int *)(v8 + 48);
  v32 = *(void **)&v162[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_titleLabel];
  *(_QWORD *)(v25 + v21) = v32;
  v33 = qword_100804E30;
  v34 = v32;
  if (v33 != -1)
    swift_once(&qword_100804E30, sub_1001E45D4);
  v35 = sub_10000EFC4((uint64_t)v6, (uint64_t)qword_100865E90);
  v30(v31, v35, v6);
  v174 = *(double *)&v21;
  v36 = (_QWORD *)(v25 + 2 * v21);
  v37 = (char *)v36 + *(int *)(v8 + 48);
  v38 = *(void **)&v162[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_subtitleLabel];
  *v36 = v38;
  v39 = qword_100804E38;
  v40 = v38;
  v26 = v25;
  if (v39 != -1)
    swift_once(&qword_100804E38, sub_1001E4720);
  v41 = sub_10000EFC4((uint64_t)v6, (uint64_t)qword_100865EA8);
  v175 = *(double *)&v6;
  v30((uint64_t)v37, v41, v6);
  v25 = 0;
  v178[0] = _swiftEmptyArrayStorage;
  v163 = v26;
  v21 = v26;
  v172 = v8;
  do
  {
    if (v25 >= *(_QWORD *)(v173 + 16))
    {
      __break(1u);
      goto LABEL_53;
    }
    sub_1000C5058(v21, (uint64_t)v18);
    v42 = *(int *)(v8 + 48);
    v43 = (char *)v13 + v42;
    v44 = *v18;
    *v13 = *v18;
    v45 = v175;
    v30((uint64_t)v13 + v42, (uint64_t)v18 + v42, *(double **)&v175);
    LOBYTE(v44) = objc_msgSend(v44, "isHidden");
    v6 = *(double **)(*(_QWORD *)&v176 + 8);
    ((void (*)(char *, _QWORD))v6)(v43, *(_QWORD *)&v45);
    if ((v44 & 1) != 0)
    {
      sub_100010F2C((uint64_t)v18, &qword_1008155F0);
      *(double *)&v26 = v174;
    }
    else
    {
      sub_1000C50A0((uint64_t)v18, v171);
      v46 = v178[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v178[0]) & 1) == 0)
      {
        sub_1001F1610(0, *(_QWORD *)(v46 + 16) + 1, 1);
        v46 = v178[0];
      }
      v48 = *(_QWORD *)(v46 + 16);
      v47 = *(_QWORD *)(v46 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_1001F1610(v47 > 1, v48 + 1, 1);
        v46 = v178[0];
      }
      *(_QWORD *)(v46 + 16) = v48 + 1;
      v49 = v46 + v164;
      *(double *)&v26 = v174;
      sub_1000C50A0(v171, v49 + v48 * *(_QWORD *)&v174);
    }
    ++v25;
    v21 += v26;
    v8 = v172;
  }
  while (v25 != 3);
  v50 = v173;
  swift_setDeallocating(v173);
  swift_arrayDestroy(v163, *(_QWORD *)(v50 + 16), v8);
  swift_deallocClassInstance(v50, 32, 7);
  v51 = v178[0];
  v52 = *(_QWORD *)(v178[0] + 16);
  if (v52)
  {
    v173 = (uint64_t)v169 + *(int *)(v8 + 48);
    v171 = sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
    v163 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon;
    v53 = v51 + v164;
    v158 = v51;
    swift_retain(v51);
    v54 = 0.0;
    v156 = v53;
    v157 = v52;
    v56 = v161;
    v55 = v162;
    v57 = *(_QWORD *)&v175;
    v58 = v170;
    do
    {
      v61 = v169;
      sub_1000C5058(v53, (uint64_t)v169);
      v62 = *v61;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)&v176 + 32))(v58, v173, v57);
      LayoutMarginsAware<>.layoutFrame.getter(v56);
      objc_msgSend(v62, "sizeThatFits:", v63, v64);
      v66 = v65;
      v68 = v67;
      v69 = LayoutMarginsAware<>.layoutFrame.getter(v56);
      if (v66 >= v70)
        v71 = v70;
      else
        v71 = v66;
      v72 = objc_msgSend(v55, "traitCollection", v69);
      v73 = v166;
      static Dimensions.defaultRoundingRule.getter(v72);
      v74 = StaticDimension.value(compatibleWith:rounded:)(v72, v73);

      (*(void (**)(char *, uint64_t))(v167 + 8))(v73, v168);
      v181.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
      v75 = v54 + CGRectGetMinY(v181);
      objc_msgSend(v62, "firstBaselineFromTop");
      v77 = v75 + v74 - v76;
      if ((static NSObject.== infix(_:_:)(v62, v165) & 1) != 0 && v55[v163] == 1)
      {
        v164 = *(_QWORD *)&v71;
        v78 = sub_1001E4950();
        objc_msgSend(v78, "bounds");
        v80 = v79;
        v82 = v81;

        v182.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
        MinX = CGRectGetMinX(v182);
        v84 = sub_1001E4950();
        v85 = LayoutMarginsAware<>.layoutFrame.getter(v56);
        objc_msgSend(v84, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v55, v85));

        v183.origin.x = MinX;
        v183.origin.y = v68 * 0.5 + v77 - v82 * 0.5;
        v183.size.width = v80;
        v183.size.height = v82;
        CGRectGetMaxX(v183);
        if (qword_100804DF8 != -1)
          swift_once(&qword_100804DF8, sub_1001E438C);
        v57 = *(_QWORD *)&v175;
        v58 = v170;
      }
      else
      {
        v180.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
        CGRectGetMinX(v180);
        v57 = *(_QWORD *)&v175;
        v58 = v170;
      }
      v59 = v62;
      v60 = LayoutMarginsAware<>.layoutFrame.getter(v56);
      objc_msgSend(v59, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v55, v60));

      ((void (*)(char *, uint64_t))v6)(v58, v57);
      v54 = v54 + v74;
      v53 += *(_QWORD *)&v174;
      --v52;
    }
    while (v52);
    v86 = v158;
    swift_release();
    if (v157 > *(_QWORD *)(v86 + 16))
    {
      __break(1u);
      return;
    }
    v87 = v160;
    sub_1000C5058(v156 + (v157 - 1) * *(_QWORD *)&v174, (uint64_t)v160);
    v88 = v159;
    v8 = v172;
    (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v87, 0, 1, v172);
  }
  else
  {
    v88 = v159;
    v87 = v160;
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v160, 1, 1, v8);
    v56 = v161;
    v55 = v162;
    v57 = *(_QWORD *)&v175;
  }
  v89 = swift_release();
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t, __n128))(v88 + 48))(v87, 1, v8, v89) == 1)
  {
    sub_100010F2C((uint64_t)v87, &qword_10080DC38);
    MaxY = 0.0;
  }
  else
  {
    v91 = *v87;
    v92 = (char *)v87 + *(int *)(v8 + 48);
    objc_msgSend(*v87, "frame");
    v94 = v93;
    v96 = v95;
    v98 = v97;
    v100 = v99;

    v184.origin.x = v94;
    v184.origin.y = v96;
    v184.size.width = v98;
    v184.size.height = v100;
    MaxY = CGRectGetMaxY(v184);
    ((void (*)(char *, uint64_t))v6)(v92, v57);
  }
  v185.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
  v101 = MaxY + CGRectGetMinY(v185);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  sub_10000EFC4(v57, (uint64_t)qword_10086A7E8);
  v102 = objc_msgSend(v55, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v103 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v104 = swift_allocObject(v103, 40, 7);
  *(_OWORD *)(v104 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v104 + 32) = v102;
  v105 = v57;
  v106 = v102;
  v107 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v104);
  v108 = dispatch thunk of AnyDimension.rawValue(in:)(v107, v105, &protocol witness table for StaticDimension);

  v109 = v101 + v108;
  v186.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
  v110 = CGRectGetMinX(v186);
  v187.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
  v111 = CGRectGetMaxY(v187) - v109;
  v112 = v56;
  if (qword_100804DF0 != -1)
    swift_once(&qword_100804DF0, sub_1001E433C);
  v113 = type metadata accessor for AspectRatio(0);
  sub_10000EFC4(v113, (uint64_t)qword_100865E00);
  v114 = AspectRatio.width(fromHeight:)(v111);
  v188.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v56);
  Width = CGRectGetWidth(v188);
  v116 = AspectRatio.height(fromWidth:)(Width);
  if (Width < v114)
  {
    v111 = v116;
    v114 = Width;
  }
  v117 = *(void **)&v55[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView];
  if (v117)
  {
    v118 = v117;
    v119 = LayoutMarginsAware<>.layoutFrame.getter(v112);
    CGRect.withLayoutDirection(in:relativeTo:)(v162, v119);
    ArtworkView.frame.setter(v120);

    v55 = v162;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&v55[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView]);
  v122 = v55;
  if (Strong)
  {
    v123 = (void *)Strong;
    v124 = LayoutMarginsAware<>.layoutFrame.getter(v161);
    objc_msgSend(v123, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v55, v124));

  }
  v125 = *(void **)&v55[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid];
  if (v125)
  {
    v126 = v125;
    v127 = LayoutMarginsAware<>.layoutFrame.getter(v161);
    v128 = CGRect.withLayoutDirection(in:relativeTo:)(v162, v127);
    v130 = v129;
    v132 = v131;
    v134 = v133;
    v135 = (objc_class *)type metadata accessor for ArtworkGrid();
    v177.receiver = v126;
    v177.super_class = v135;
    objc_msgSendSuper2(&v177, "setFrame:", v128, v130, v132, v134);
    sub_1005DD0F0();
    objc_msgSend(v126, "setNeedsLayout");

    v122 = v162;
  }
  v136 = *(void **)&v122[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView];
  if (v136)
  {
    v137 = *(void **)&v122[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView];
    if (v137)
    {
      v138 = v136;
      v139 = v137;
      objc_msgSend(v139, "setFrame:", v110, v109, v114, v111);
      v140 = objc_msgSend(v139, "bounds");
      v142 = v141;
      v144 = v143;
      v146 = v145;
      v148 = v147;
      ArtworkView.imageSize.getter(v140);
      v175 = v110;
      v176 = v109;
      v189.origin.x = v142;
      v189.origin.y = v144;
      v189.size.width = v146;
      v189.size.height = v148;
      CGRectGetMidX(v189);
      v174 = v111;
      v190.origin.x = v142;
      v190.origin.y = v144;
      v190.size.width = v146;
      v190.size.height = v148;
      CGRectGetMidY(v190);
      v149 = LayoutMarginsAware<>.layoutFrame.getter(v161);
      v111 = v174;
      v110 = v175;
      v109 = v176;
      CGRect.withLayoutDirection(in:relativeTo:)(v162, v149);
      ArtworkView.frame.setter(v150);

      v122 = v162;
    }
  }
  v151 = *(void **)&v122[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView];
  if (v151)
  {
    v152 = v151;
    sub_1003F17B0();
    sub_1003F4CA4(v122, v178, v114, v111);
    sub_100062D54(v178);
    v191.origin.x = v110;
    v191.origin.y = v109;
    v191.size.width = v114;
    v191.size.height = v111;
    CGRectGetMinX(v191);
    v192.size.height = v111;
    v192.origin.x = v110;
    v192.origin.y = v109;
    v192.size.width = v114;
    CGRectGetMinY(v192);
    v153 = v152;
    v154 = LayoutMarginsAware<>.layoutFrame.getter(v161);
    objc_msgSend(v153, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v122, v154));

  }
}

id sub_1001E6154()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView];
  if (v2)
  {
    objc_msgSend(v2, "removeFromSuperview");
    v3 = *(void **)&v0[v1];
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)&v0[v1] = 0;

  if (*(_QWORD *)&v0[v1])
    objc_msgSend(v0, "addSubview:");
  objc_msgSend(v0, "setNeedsLayout");
  sub_1001E9BEC();
  v4 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView;
  v5 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView];
  if (v5)
  {
    objc_msgSend(v5, "removeFromSuperview");
    v6 = *(void **)&v0[v4];
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)&v0[v4] = 0;

  sub_1001E4B14();
  v7 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid;
  v8 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid];
  if (v8)
  {
    objc_msgSend(v8, "removeFromSuperview");
    v9 = *(void **)&v0[v7];
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)&v0[v7] = 0;

  sub_1001E4D6C();
  return sub_1001E9D2C(0);
}

double sub_1001E6238(id a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  double result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  objc_super v20;

  v20.receiver = v1;
  v20.super_class = (Class)type metadata accessor for EditorialSearchResultContentView();
  objc_msgSendSuper2(&v20, "traitCollectionDidChange:", a1);
  if (a1)
    a1 = objc_msgSend(a1, "preferredContentSizeCategory");
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if (!a1)
  {

LABEL_11:
    v14 = sub_1001E4950();
    sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    if (qword_100804E10 != -1)
      swift_once(&qword_100804E10, sub_1001E441C);
    v15 = type metadata accessor for FontUseCase(0);
    v16 = sub_10000EFC4(v15, (uint64_t)qword_100865E30);
    v17 = objc_msgSend(v1, "traitCollection");
    v18 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v16, v17);

    v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v18);
    objc_msgSend(v14, "setPreferredSymbolConfiguration:", v19);

    return result;
  }
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {

    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v7, 2).n128_u64[0];
    return result;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);

  swift_bridgeObjectRelease(v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  if ((v12 & 1) == 0)
    goto LABEL_11;
  return result;
}

void sub_1001E64DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char *v78;
  char *v79;
  id v80;
  id v81;
  char *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  NSString v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  NSString v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t Strong;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  char *v136;
  void (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  int v140;
  char v141;
  __n128 v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  id v149;
  void *v150;
  uint64_t v151;
  char *v152;
  int v153;
  objc_class *v154;
  id v155;
  void *v156;
  double v157;
  char *v158;
  uint64_t v159;
  double v160;
  double v161;
  double v162;
  __n128 v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  double v170;
  uint64_t v171;
  double v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  id v180;
  id v181;
  uint64_t v182;
  int v183;
  void (*v184)(char *, uint64_t);
  id v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;
  void *v214;
  char *v215;
  char *v216;
  void *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  __n128 v222;
  void (*v223)(char *, uint64_t, __n128);
  uint64_t v224;
  char v225;
  __n128 v226;
  void (*v227)(char *, uint64_t, __n128);
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  __n128 v239;
  uint64_t *v240;
  uint64_t v241;
  void *v242;
  char *v243;
  void *v244;
  void *v245;
  id v246;
  id v247;
  void *v248;
  uint64_t v249;
  char *v250;
  void *v251;
  uint64_t v252;
  void *v253;
  id v254;
  void *v255;
  id v256;
  void *v257;
  id v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  id v264;
  void *v265;
  id v266;
  id v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  unsigned int v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  __int128 v312;
  _OWORD v313[2];
  uint64_t v314;

  v3 = type metadata accessor for MediaOverlayStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v278 = (char *)&v269 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.Style(0, v6);
  v8 = __chkstk_darwin(v7);
  v277 = (char *)&v269 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = type metadata accessor for Artwork.Crop(0, v8);
  v275 = *(_QWORD *)(v276 - 8);
  __chkstk_darwin(v276);
  v274 = (char *)&v269 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100811F10);
  __chkstk_darwin(v11);
  v290 = (char *)&v269 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v289 = (char *)&v269 - v14;
  v15 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v16 = __chkstk_darwin(v15);
  v288 = (char *)&v269 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for VideoControls(0, v16);
  __chkstk_darwin(v18);
  v287 = (char *)&v269 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v286 = (char *)&v269 - v21;
  v22 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  v23 = __chkstk_darwin(v22);
  v285 = (char *)&v269 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = type metadata accessor for VideoFillMode(0, v23);
  v282 = *(_QWORD *)(v283 - 8);
  __chkstk_darwin(v283);
  v284 = (char *)&v269 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v293 = type metadata accessor for VideoConfiguration(0);
  v292 = *(_QWORD *)(v293 - 8);
  __chkstk_darwin(v293);
  v291 = (char *)&v269 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for AdamId(0);
  v28 = *(_QWORD *)(v27 - 8);
  v310 = v27;
  v311 = v28;
  __chkstk_darwin(v27);
  v309 = (char *)&v269 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10000DAF8(&qword_10080FAF0);
  v31 = __chkstk_darwin(v30);
  v295 = (char *)&v269 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = type metadata accessor for ArtworkGridType(0, v31);
  v296 = *(_QWORD *)(v298 - 8);
  __chkstk_darwin(v298);
  v280 = (char *)&v269 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v279 = (char *)&v269 - v35;
  __chkstk_darwin(v36);
  v294 = (char *)&v269 - v37;
  v306 = type metadata accessor for EditorialSearchResultType(0);
  v308 = *(_QWORD *)(v306 - 8);
  __chkstk_darwin(v306);
  v305 = (char *)&v269 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v300 = (char *)&v269 - v40;
  __chkstk_darwin(v41);
  v43 = (uint64_t)&v269 - v42;
  v301 = type metadata accessor for AspectRatio(0);
  v304 = *(char **)(v301 - 8);
  v44 = __chkstk_darwin(v301);
  v302 = (char *)&v269 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for AspectFitMeasurable(0, v44);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = __chkstk_darwin(v46);
  v50 = (char *)&v269 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for EditorialSearchResult(0, v48);
  v52 = sub_100020248(&qword_100822180, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(v313, v51, v51, v52);
  if (!*(_QWORD *)&v313[0])
    return;
  v299 = *(_QWORD *)&v313[0];
  v271 = v4;
  v272 = v3;
  v53 = type metadata accessor for ArtworkLoader(0);
  v54 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v53, a2, v53, v54);
  v303 = *(_QWORD *)&v313[0];
  v55 = type metadata accessor for ArtworkIconFetcher(0);
  v273 = a2;
  BaseObjectGraph.optional<A>(_:)(v313, v55, v55);
  v56 = *(_QWORD *)&v313[0];
  v57 = v307;
  if (*(_QWORD *)&v313[0])
  {
    *(_QWORD *)&v312 = v307;
    v58 = type metadata accessor for EditorialSearchResultContentView();
    v60 = sub_100020248(&qword_100815120, v59, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for NSObject);
    swift_retain(v56);
    v61 = v57;
    AnyHashable.init<A>(_:)(&v312, v58, v60);
    dispatch thunk of ArtworkIconFetcher.forgetFetches(for:)(v313);
    swift_release();
    sub_100018968((uint64_t)v313);
  }
  v297 = v56;
  v270 = type metadata accessor for EditorialSearchResultContentView();
  LayoutMarginsAware<>.layoutFrame.getter(v270);
  v63 = v62;
  v65 = v64;
  swift_getKeyPath(&unk_100651930);
  ItemLayoutContext.subscript.getter(v313);
  swift_release();
  v66 = *(char **)&v313[0];
  if (qword_100804DF0 != -1)
    goto LABEL_103;
  while (1)
  {
    v67 = v301;
    v68 = sub_10000EFC4(v301, (uint64_t)qword_100865E00);
    v69 = v302;
    (*((void (**)(char *, uint64_t, uint64_t))v304 + 2))(v302, v68, v67);
    AspectFitMeasurable.init(_:)(v69);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v70 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v71 = swift_allocObject(v70, 40, 7);
    *(_OWORD *)(v71 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v71 + 32) = v66;
    v72 = v66;
    v73 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v71);
    v65 = dispatch thunk of Measurable.measurements(fitting:in:)(v73, v46, &protocol witness table for AspectFitMeasurable, v63, v65);
    v63 = v74;

    (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
    EditorialSearchResult.type.getter(v75);
    v76 = v306;
    v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v308 + 88))(v43, v306);
    v281 = enum case for EditorialSearchResultType.appEventStory(_:);
    if (v77 == enum case for EditorialSearchResultType.category(_:)
      || v77 == enum case for EditorialSearchResultType.collection(_:)
      || v77 == enum case for EditorialSearchResultType.story(_:)
      || v77 == enum case for EditorialSearchResultType.appEventStory(_:))
    {
      v78 = v307;
      v82 = &v307[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon];
      v307[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon] = 1;
      v83 = sub_1001E4950();
      objc_msgSend(v83, "setHidden:", (*v82 & 1) == 0);

      v81 = objc_msgSend(v78, "setNeedsLayout");
    }
    else
    {
      v78 = v307;
      v79 = &v307[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon];
      v307[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon] = 0;
      v80 = sub_1001E4950();
      objc_msgSend(v80, "setHidden:", (*v79 & 1) == 0);

      objc_msgSend(v78, "setNeedsLayout");
      v81 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v308 + 8))(v43, v76);
    }
    v84 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v81);
    v86 = sub_1001E487C(v84, v85);
    EditorialSearchResult.title.getter(v86);
    v88 = v87;
    v89 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_titleLabel];
    if (v87)
    {
      v90 = String._bridgeToObjectiveC()();
      objc_msgSend(v89, "setText:", v90);
      swift_bridgeObjectRelease(v88);

    }
    else
    {
      objc_msgSend(*(id *)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_titleLabel], "setText:", 0);
    }
    objc_msgSend(v89, "setHidden:", v88 == 0);
    EditorialSearchResult.subtitle.getter(objc_msgSend(v78, "setNeedsLayout"));
    v92 = v91;
    v93 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_subtitleLabel];
    if (v91)
    {
      v94 = String._bridgeToObjectiveC()();
      objc_msgSend(v93, "setText:", v94);
      swift_bridgeObjectRelease(v92);

    }
    else
    {
      objc_msgSend(*(id *)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_subtitleLabel], "setText:", 0);
    }
    objc_msgSend(v93, "setHidden:", v92 == 0);
    v95 = EditorialSearchResult.collectionAdamIds.getter(objc_msgSend(v78, "setNeedsLayout"));
    if (!v95)
      goto LABEL_20;
    v96 = v95;
    v97 = (uint64_t)v295;
    EditorialSearchResult.artworkGridType.getter();
    v98 = v296;
    v99 = v298;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v296 + 48))(v97, 1, v298) == 1)
      break;
    v136 = v294;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v294, v97, v99);
    v137 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
    v138 = v279;
    v137(v279, v136, v99);
    v139 = v280;
    v137(v280, v138, v99);
    v140 = (*(uint64_t (**)(char *, uint64_t))(v98 + 88))(v139, v99);
    if (v140 == enum case for ArtworkGridType.small(_:))
    {
      v302 = *(char **)(v98 + 8);
      ((void (*)(char *, uint64_t))v302)(v138, v99);
LABEL_25:
      v141 = 0;
      goto LABEL_48;
    }
    v153 = v140;
    if (v140 == enum case for ArtworkGridType.large(_:))
    {
      v302 = *(char **)(v98 + 8);
      ((void (*)(char *, uint64_t))v302)(v138, v99);
      v141 = 1;
    }
    else if (v140 == enum case for ArtworkGridType.extraLarge(_:))
    {
      v302 = *(char **)(v98 + 8);
      ((void (*)(char *, uint64_t))v302)(v138, v99);
      v141 = 2;
    }
    else
    {
      v182 = v99;
      v183 = enum case for ArtworkGridType.mixed(_:);
      v184 = *(void (**)(char *, uint64_t))(v98 + 8);
      v184(v138, v182);
      v302 = (char *)v184;
      if (v153 != v183)
      {
        v184(v139, v182);
        goto LABEL_25;
      }
      v141 = 3;
    }
LABEL_48:
    v185 = objc_allocWithZone((Class)type metadata accessor for ArtworkGrid());
    v186 = sub_1005DD4DC(v141, 0.0, 0.0, 0.0, 0.0);
    sub_10039B988();
    v187 = OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_gridType;
    sub_1005DC7DC(v186[OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_gridType]);
    v43 = *(_QWORD *)(v96 + 16);
    v304 = v186;
    if (v188 < v43)
    {
      sub_1005DC7DC(v186[v187]);
      if ((v189 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v187 = v189;
        if (*(_QWORD *)(v96 + 16) >= v189)
        {
          v191 = type metadata accessor for __ContiguousArrayStorageBase(0, v190);
          v192 = swift_unknownObjectRetain_n(v96, 2);
          v193 = (_QWORD *)swift_dynamicCastClass(v192, v191);
          if (!v193)
          {
            swift_bridgeObjectRelease(v96);
            v193 = _swiftEmptyArrayStorage;
          }
          v194 = v193[2];
          swift_release();
          if (v194 == v187)
          {
            v50 = (char *)swift_dynamicCastClass(v96, v191);
            swift_bridgeObjectRelease(v96);
            if (!v50)
            {
              v50 = (char *)_swiftEmptyArrayStorage;
              goto LABEL_56;
            }
            goto LABEL_68;
          }
LABEL_109:
          swift_bridgeObjectRelease(v96);
          v50 = (char *)sub_1003F9474(v96, v96+ ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80)), 0, (2 * v187) | 1);
LABEL_56:
          swift_bridgeObjectRelease(v96);
          v78 = v307;
          v186 = v304;
LABEL_68:
          *(_QWORD *)&v186[OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_expectedNumberOfArtworkImages] = *((_QWORD *)v50 + 2);
          sub_1005DD338();
          v201 = v297;
          if (v297)
          {
            v202 = swift_allocObject(&unk_1007449B8, 24, 7);
            swift_unknownObjectWeakInit(v202 + 16);
            v203 = (_QWORD *)swift_allocObject(&unk_100744A58, 40, 7);
            v203[2] = v186;
            v203[3] = v202;
            v204 = v303;
            v203[4] = v303;
            v205 = swift_allocObject(&unk_1007449B8, 24, 7);
            swift_unknownObjectWeakInit(v205 + 16);
            v206 = (_QWORD *)swift_allocObject(&unk_100744A80, 40, 7);
            v206[2] = v186;
            v206[3] = v205;
            v206[4] = v204;
            *(_QWORD *)&v313[0] = v78;
            v208 = sub_100020248(&qword_100815120, v207, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for NSObject);
            v209 = v186;
            swift_retain_n(v204, 2);
            swift_retain(v201);
            v210 = v78;
            v211 = v209;
            AnyHashable.init<A>(_:)(v313, v270, v208);
            dispatch thunk of ArtworkIconFetcher.fetchArtworkIcons(for:partialCompletion:completion:handlerKey:)(v313, v50, sub_1001E9FF8, v203, sub_1001E9FF8, v206, &v312);
            swift_release();
            swift_bridgeObjectRelease(v50);
            swift_release();
            swift_release();
            sub_100010F2C((uint64_t)&v312, &qword_100809010);
          }
          else
          {
            swift_bridgeObjectRelease(v50);
            v314 = 0;
            memset(v313, 0, sizeof(v313));
          }
          v151 = v306;
          v152 = v300;
          v212 = v302;
          sub_100010F2C((uint64_t)v313, &qword_100809010);
          v213 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid;
          v214 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid];
          v215 = v304;
          v216 = v304;
          if (v214)
          {
            objc_msgSend(v214, "removeFromSuperview");
            v217 = *(void **)&v78[v213];
          }
          else
          {
            v217 = 0;
          }
          *(_QWORD *)&v78[v213] = v215;
          v218 = v215;

          sub_1001E4D6C();
          v135 = ((uint64_t (*)(char *, uint64_t))v212)(v294, v298);
          goto LABEL_75;
        }
      }
      __break(1u);
      goto LABEL_109;
    }
    v50 = (char *)v96;
    if (v188 <= (unint64_t)v43)
      goto LABEL_68;
    v47 = v188 - v43;
    if (v188 - v43 < 0)
    {
      __break(1u);
    }
    else if (v43)
    {
      swift_bridgeObjectRetain(v96);
      v50 = (char *)v96;
      if ((swift_isUniquelyReferenced_nonNull_native(v195) & 1) != 0)
        goto LABEL_61;
      goto LABEL_112;
    }
    __break(1u);
LABEL_112:
    v50 = (char *)sub_1003DB438(0, v43 + 1, 1, v96);
LABEL_61:
    v46 = 0;
    v196 = (*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80);
    v66 = (char *)(v96 + v196);
    while (1)
    {
      v197 = v46 % v43;
      if (v46 % v43 < 0)
        break;
      if (v197 >= *(_QWORD *)(v96 + 16))
        goto LABEL_102;
      v198 = *(_QWORD *)(v311 + 72);
      (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v309, &v66[v198 * v197], v310);
      v200 = *((_QWORD *)v50 + 2);
      v199 = *((_QWORD *)v50 + 3);
      if (v200 >= v199 >> 1)
        v50 = (char *)sub_1003DB438(v199 > 1, v200 + 1, 1, (unint64_t)v50);
      ++v46;
      *((_QWORD *)v50 + 2) = v200 + 1;
      (*(void (**)(char *, char *, uint64_t))(v311 + 32))(&v50[v196 + v200 * v198], v309, v310);
      if (v47 == v46)
        goto LABEL_56;
    }
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    swift_once(&qword_100804DF0, sub_1001E433C);
  }
  swift_bridgeObjectRelease(v96);
  v95 = sub_100010F2C(v97, &qword_10080FAF0);
LABEL_20:
  if (EditorialSearchResult.editorialVideo.getter(v95))
  {
    v100 = v284;
    v101 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v282 + 104))(v284, enum case for VideoFillMode.scaleAspectFill(_:), v283);
    v102 = Video.preview.getter(v101);
    Artwork.size.getter(v102);
    v103 = v285;
    AspectRatio.init(_:_:)(v104);
    v105 = swift_release();
    v106 = (*((uint64_t (**)(char *, _QWORD, uint64_t, uint64_t, __n128))v304 + 7))(v103, 0, 1, v67, v105);
    v107 = v286;
    v108 = Video.playbackControls.getter(v106);
    v109 = v287;
    v110 = Video.autoPlayPlaybackControls.getter(v108);
    v111 = Video.canPlayFullScreen.getter(v110);
    v112 = Video.allowsAutoPlay.getter();
    v113 = Video.looping.getter() & 1;
    v114 = v100;
    v115 = v291;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v114, v103, v107, v109, v111 & 1, v112 & 1, v113, 1, 0, 1);
    v116 = type metadata accessor for VideoViewManager(0);
    v117 = v273;
    v118 = BaseObjectGraph.inject<A>(_:)(v313, v116, v116);
    v119 = Video.playbackId.getter(v313, v118);
    v120 = (uint64_t)v288;
    Video.videoUrl.getter(v119);
    v122 = type metadata accessor for URL(0, v121);
    v123 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v120, 0, 1, v122);
    v124 = (uint64_t)v289;
    v125 = Video.templateMediaEvent.getter(v123);
    v126 = (uint64_t)v290;
    Video.templateClickEvent.getter(v125);
    v127 = type metadata accessor for VideoView(0);
    v128 = sub_100020248(&qword_100807F80, 255, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
    v129 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v313, v120, v115, v124, v126, v117, v127, v128);
    sub_100010F2C(v126, (uint64_t *)&unk_100811F10);
    sub_100010F2C(v124, (uint64_t *)&unk_100811F10);
    sub_100010F2C(v120, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v313, &qword_100809010);
    sub_1001E9BEC();

    Strong = swift_unknownObjectWeakLoadStrong(&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView]);
    if (Strong)
    {
      v131 = (void *)Strong;
      Video.preview.getter(Strong);
      v132 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v65, v63);
      swift_release();
      v133 = sub_100020248((unint64_t *)&unk_100807FB0, 255, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v132, 2, 1, v131, v127, v133);

      swift_release();
      swift_release();
      v134 = swift_release();
      v135 = (*(uint64_t (**)(char *, uint64_t, __n128))(v292 + 8))(v115, v293, v134);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v292 + 8))(v115, v293);
      swift_release();
      swift_release();
    }
    v151 = v306;
    v152 = v300;
  }
  else if (EditorialSearchResult.editorialArtwork.getter())
  {
    v143 = type metadata accessor for ArtworkView(0);
    v144 = (void *)static ArtworkView.cardArtworkView.getter();
    objc_msgSend(v144, "setContentMode:", 2);
    v145 = Artwork.config(using:)(v65, v63);
    v146 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v145, 2, 1, v144, v143, v146);
    v147 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView;
    v148 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView];
    v149 = v144;
    if (v148)
    {
      objc_msgSend(v148, "removeFromSuperview");
      v150 = *(void **)&v78[v147];
    }
    else
    {
      v150 = 0;
    }
    *(_QWORD *)&v78[v147] = v144;
    v181 = v144;

    if (*(_QWORD *)&v78[v147])
      objc_msgSend(v78, "addSubview:");
    objc_msgSend(v78, "setNeedsLayout");
    swift_release();
    swift_release();

    v151 = v306;
    v152 = v300;
  }
  else
  {
    v135 = EditorialSearchResult.iconArtwork.getter(v142);
    v151 = v306;
    v152 = v300;
    if (v135)
    {
      v154 = (objc_class *)type metadata accessor for ArtworkView(0);
      v155 = objc_msgSend(objc_allocWithZone(v154), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v156 = v155;
      if (qword_100804E40 != -1)
        v155 = (id)swift_once(&qword_100804E40, sub_1001E486C);
      v157 = v63 - (*(double *)&qword_100865EC0 + *(double *)&qword_100865EC0);
      Artwork.size.getter(v155);
      v158 = v302;
      AspectRatio.init(_:_:)(v159);
      v160 = AspectRatio.maxSize(fitting:)(v65 + 0.0, v157);
      v162 = v161;
      v163.n128_f64[0] = (*((double (**)(char *, uint64_t))v304 + 1))(v158, v67);
      v164 = v274;
      v165 = Artwork.crop.getter(v163);
      v166 = Artwork.Crop.preferredContentMode.getter(v165);
      (*(void (**)(char *, uint64_t))(v275 + 8))(v164, v276);
      v167 = Artwork.config(_:mode:prefersLayeredImage:)(v166, 0, v160, v162);
      v168 = v277;
      Artwork.style.getter(v167);
      v169 = ArtworkView.style.setter(v168);
      *(_QWORD *)&v170 = Artwork.contentMode.getter(v169).n128_u64[0];
      v172 = ArtworkLoaderConfig.size.getter(objc_msgSend(v156, "setContentMode:", v171, v170));
      v174 = ArtworkView.imageSize.setter(v172, v173);
      v175 = Artwork.backgroundColor.getter(v174);
      if (!v175)
      {
        v176 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v175 = static UIColor.placeholderBackground.getter(v176);
      }
      ArtworkView.backgroundColor.setter(v175);
      v177 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v167, 2, 1, v156, v154, v177);
      v178 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView;
      v179 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView];
      v180 = v156;
      if (v179)
      {
        objc_msgSend(v179, "removeFromSuperview");
        v179 = *(void **)&v78[v178];
      }
      *(_QWORD *)&v78[v178] = v156;
      v268 = v156;

      sub_1001E4B14();
      swift_release();
      swift_release();

      v151 = v306;
    }
  }
LABEL_75:
  EditorialSearchResult.type.getter(v135);
  (*(void (**)(char *, _QWORD, uint64_t))(v308 + 104))(v305, v281, v151);
  v219 = sub_100020248(&qword_10080FB00, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResultType, (uint64_t)&protocol conformance descriptor for EditorialSearchResultType);
  dispatch thunk of RawRepresentable.rawValue.getter(v313, v151, v219);
  dispatch thunk of RawRepresentable.rawValue.getter(&v312, v151, v219);
  v220 = *((_QWORD *)&v313[0] + 1);
  v221 = *((_QWORD *)&v312 + 1);
  if (v313[0] == v312)
  {
    v222 = swift_bridgeObjectRelease_n(*((_QWORD *)&v313[0] + 1), 2);
    v223 = *(void (**)(char *, uint64_t, __n128))(v308 + 8);
    v223(v305, v151, v222);
    v224 = ((uint64_t (*)(char *, uint64_t))v223)(v152, v151);
    goto LABEL_78;
  }
  v225 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v313[0], *((_QWORD *)&v313[0] + 1), v312, *((_QWORD *)&v312 + 1), 0);
  swift_bridgeObjectRelease(v220);
  v226 = swift_bridgeObjectRelease(v221);
  v227 = *(void (**)(char *, uint64_t, __n128))(v308 + 8);
  v227(v305, v151, v226);
  v224 = ((uint64_t (*)(char *, uint64_t))v227)(v152, v151);
  if ((v225 & 1) != 0)
  {
LABEL_78:
    v228 = EditorialSearchResult.appEventFormattedDates.getter(v224);
    v229 = v228;
    if ((unint64_t)v228 >> 62)
    {
      if (v228 >= 0)
        v228 &= 0xFFFFFFFFFFFFFF8uLL;
      v230 = _CocoaArrayWrapper.endIndex.getter(v228);
    }
    else
    {
      v230 = *(_QWORD *)((v228 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v229);
    if (v230)
    {
      v231 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView;
      v232 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView];
      if (v232)
        goto LABEL_82;
      v247 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppPromotionFormattedDateView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_1001E9D2C(v247);

      v248 = *(void **)&v78[v231];
      if (v248)
      {
        v249 = type metadata accessor for AppEventLiveIndicatorAnimationCoordinator();
        v250 = v248;
        BaseObjectGraph.optional<A>(_:)(v313, v249, v249);
        v251 = *(void **)&v313[0];
        v252 = OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator;
        v253 = *(void **)&v250[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator];
        v254 = v253;
        sub_1003F0B54(v251);
        v255 = *(void **)&v250[v252];
        *(_QWORD *)&v250[v252] = v251;
        v78 = v307;
        v256 = v251;

        sub_1003F0CCC(v253);
        v232 = *(void **)&v78[v231];
        if (v232)
        {
LABEL_82:
          v233 = v232;
          v234 = EditorialSearchResult.appEventFormattedDates.getter(objc_msgSend(v78, "bringSubviewToFront:", v233));
          v235 = type metadata accessor for AppEventFormattedDatePresenter(0);
          v236 = swift_allocObject(v235, *(unsigned int *)(v235 + 48), *(unsigned __int16 *)(v235 + 52));
          *(_QWORD *)(v236 + 32) = 0;
          swift_unknownObjectWeakInit(v236 + 24);
          v237 = v236 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_currentFormattedDate;
          v238 = type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 56))(v237, 1, 1, v238);
          *(_QWORD *)(v236 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_updateTimer) = 0;
          *(_QWORD *)(v236 + 16) = v234;
          v239 = swift_beginAccess(v236 + 24, v313, 1, 0);
          *(_QWORD *)(v236 + 32) = &off_100752080;
          swift_unknownObjectWeakAssign(v239);
          sub_1004E1298();
          v240 = (uint64_t *)&v233[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter];
          swift_beginAccess(&v233[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter], &v312, 1, 0);
          *v240 = v236;

          swift_release();
        }
      }
    }
    v241 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView;
    v242 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView];
    if (v242)
    {
      v243 = v242;
      v244 = (void *)EditorialSearchResult.tintColor.getter();
      v245 = *(void **)&v243[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_backgroundView];
      if (v245)
      {
        v246 = v245;
        objc_msgSend(v246, "setBackgroundColor:", v244);

      }
      else
      {

      }
      v257 = *(void **)&v78[v241];
      if (v257)
      {
        v258 = v257;
        v259 = v278;
        v260 = EditorialSearchResult.mediaOverlayStyle.getter();
        v261 = MediaOverlayStyle.userInterfaceStyle.getter(v260);
        (*(void (**)(char *, uint64_t))(v271 + 8))(v259, v272);
        objc_msgSend(v258, "setOverrideUserInterfaceStyle:", v261);

      }
    }
    v262 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView;
    v263 = *(void **)&v78[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView];
    if (v263)
    {
      v264 = v263;
      dispatch thunk of RoundedCornerView.borderWidth.setter(v264);

      v265 = *(void **)&v78[v262];
      if (v265)
      {
        v266 = v265;
        v267 = (id)EditorialSearchResult.tintColor.getter();
        if (!v267)
          v267 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        dispatch thunk of RoundedCornerView.borderColor.setter(v267);

      }
    }
  }
  objc_msgSend(v78, "setNeedsLayout");
  swift_release();
  swift_release();
  swift_release();
}

void sub_1001E7FF4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v7 = type metadata accessor for Artwork.Crop(0, a4);
  __chkstk_darwin(v7);
  if (*(_QWORD *)(a1 + 16))
  {
    v8 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_gridType);
    swift_bridgeObjectRetain(a1);
    swift_beginAccess(a3 + 16, v9, 0, 0);
    __asm { BR              X8 }
  }
}

void sub_1001E829C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unsigned __int8 *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t Strong;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  unint64_t *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  _QWORD *v70;
  void (**v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (**v77)(char *, uint64_t, uint64_t);
  void (**v78)(char *, uint64_t, uint64_t);
  id v79;
  __n128 v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  double v89;
  uint64_t v90;
  double v91;
  double v92;
  double v93;
  __n128 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  uint64_t v100;
  double v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[2];
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  void (**v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  char *v117;
  uint64_t v118;
  _QWORD v119[5];
  _OWORD v120[2];
  uint64_t v121;

  v11 = type metadata accessor for Artwork.Style(0, a2);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Artwork.Crop(0, v12);
  v111 = *(_QWORD *)(v15 - 8);
  v112 = v15;
  __chkstk_darwin(v15);
  v110 = (char *)v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for AdamId(0);
  v17 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v117 = (char *)v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AspectRatio(0);
  v115 = *(void (***)(char *, uint64_t, uint64_t))(v19 - 8);
  v116 = v19;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AspectFitMeasurable(0, v20);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (uint64_t)v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EF80(a1, (uint64_t)v120);
  v27 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v29 = type metadata accessor for EditorialSearchResult(0, v28);
  if (!swift_dynamicCast(v119, v120, v27, v29, 6))
    return;
  v109 = v14;
  v113 = a2;
  v30 = v119[0];
  v31 = type metadata accessor for ArtworkIconFetcher(0);
  BaseObjectGraph.optional<A>(_:)(v120, v31, v31);
  v108 = *(_QWORD *)&v120[0];
  v114 = v6;
  v32 = (char *)objc_msgSend(v6, "traitCollection");
  if (qword_100804DF0 != -1)
    goto LABEL_52;
  while (1)
  {
    v33 = v116;
    v34 = sub_10000EFC4(v116, (uint64_t)qword_100865E00);
    v115[2](v22, v34, v33);
    AspectFitMeasurable.init(_:)(v22);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v35 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v36 = swift_allocObject(v35, 40, 7);
    *(_OWORD *)(v36 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v36 + 32) = v32;
    v37 = v32;
    v38 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v36);
    a5 = dispatch thunk of Measurable.measurements(fitting:in:)(v38, v23, &protocol witness table for AspectFitMeasurable, a5, a6);
    a6 = v39;

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
    v41 = EditorialSearchResult.collectionAdamIds.getter(v40);
    v42 = v109;
    if (!v41)
      goto LABEL_15;
    v23 = v41;
    v43 = *(unsigned __int8 **)&v114[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid];
    if (!v43)
    {
      swift_bridgeObjectRelease(v41);
LABEL_15:
      if (EditorialSearchResult.editorialVideo.getter(v41))
      {
        Strong = swift_unknownObjectWeakLoadStrong(&v114[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView]);
        if (Strong)
        {
          v55 = (void *)Strong;
          Video.preview.getter(Strong);
          v56 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, a5, a6);
          swift_release();
          v57 = type metadata accessor for VideoView(0);
          v58 = type metadata accessor for VideoView;
          v59 = (unint64_t *)&unk_100807FB0;
          v60 = &unk_10066C71C;
LABEL_45:
          v106 = sub_100020248(v59, 255, v58, (uint64_t)v60);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v56, 2, 1, v55, v57, v106);
          swift_release();

          goto LABEL_46;
        }
        v53 = swift_release();
      }
      if (EditorialSearchResult.editorialArtwork.getter(v53))
      {
        v81 = *(void **)&v114[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView];
        if (v81)
        {
          v82 = v81;
          objc_msgSend(v82, "setContentMode:", 2);
          v83 = Artwork.config(using:)(a5, a6);
          v84 = type metadata accessor for ArtworkView(0);
          v85 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v83, 2, 1, v82, v84, v85);
          swift_release();

          goto LABEL_46;
        }
        v80 = swift_release();
      }
      if (!EditorialSearchResult.iconArtwork.getter(v80))
      {
LABEL_47:
        swift_release();
        swift_release();
        return;
      }
      v86 = *(void **)&v114[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView];
      if (v86)
      {
        v87 = qword_100804E40;
        v88 = v86;
        v55 = v88;
        if (v87 != -1)
          v88 = (id)swift_once(&qword_100804E40, sub_1001E486C);
        v89 = a6 - (*(double *)&qword_100865EC0 + *(double *)&qword_100865EC0);
        Artwork.size.getter(v88);
        AspectRatio.init(_:_:)(v90);
        v91 = AspectRatio.maxSize(fitting:)(a5 + 0.0, v89);
        v93 = v92;
        v94.n128_f64[0] = ((double (*)(char *, uint64_t))v115[1])(v22, v116);
        v95 = v110;
        v96 = Artwork.crop.getter(v94);
        v97 = Artwork.Crop.preferredContentMode.getter(v96);
        (*(void (**)(char *, uint64_t))(v111 + 8))(v95, v112);
        v56 = Artwork.config(_:mode:prefersLayeredImage:)(v97, 0, v91, v93);
        Artwork.style.getter(v56);
        v98 = ArtworkView.style.setter(v42);
        *(_QWORD *)&v99 = Artwork.contentMode.getter(v98).n128_u64[0];
        v101 = ArtworkLoaderConfig.size.getter(objc_msgSend(v55, "setContentMode:", v100, v99));
        v103 = ArtworkView.imageSize.setter(v101, v102);
        v104 = Artwork.backgroundColor.getter(v103);
        if (!v104)
        {
          v105 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
          v104 = static UIColor.placeholderBackground.getter(v105);
        }
        ArtworkView.backgroundColor.setter(v104);
        v57 = type metadata accessor for ArtworkView(0);
        v58 = (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView;
        v59 = (unint64_t *)&qword_100806FE0;
        v60 = &protocol conformance descriptor for ArtworkView;
        goto LABEL_45;
      }
LABEL_46:
      swift_release();
      goto LABEL_47;
    }
    v24 = OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_gridType;
    v44 = v43[OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_gridType];
    v115 = v43;
    sub_1005DC7DC(v44);
    v26 = *(_QWORD *)(v23 + 16);
    v107[1] = v30;
    if (v45 < v26)
      break;
    v22 = (char *)v23;
    v48 = v113;
    if (v45 <= (unint64_t)v26)
      goto LABEL_29;
    v116 = v45 - v26;
    if (v45 - v26 < 0)
    {
      __break(1u);
    }
    else if (v26)
    {
      swift_bridgeObjectRetain(v23);
      v22 = (char *)v23;
      if ((swift_isUniquelyReferenced_nonNull_native(v61) & 1) != 0)
        goto LABEL_22;
      goto LABEL_58;
    }
    __break(1u);
LABEL_58:
    v22 = (char *)sub_1003DB438(0, v26 + 1, 1, v23);
LABEL_22:
    v62 = 0;
    v63 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v32 = (char *)(v23 + v63);
    while (1)
    {
      v64 = v62 % v26;
      if (v62 % v26 < 0)
        break;
      if (v64 >= *(_QWORD *)(v23 + 16))
        goto LABEL_51;
      v65 = *(_QWORD *)(v17 + 72);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v117, &v32[v65 * v64], v118);
      v30 = *((_QWORD *)v22 + 2);
      v66 = *((_QWORD *)v22 + 3);
      v24 = v30 + 1;
      if (v30 >= v66 >> 1)
        v22 = (char *)sub_1003DB438(v66 > 1, v30 + 1, 1, (unint64_t)v22);
      ++v62;
      *((_QWORD *)v22 + 2) = v24;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v22[v63 + v30 * v65], v117, v118);
      if (v116 == v62)
        goto LABEL_13;
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_once(&qword_100804DF0, sub_1001E433C);
  }
  sub_1005DC7DC(v43[v24]);
  v48 = v113;
  if ((v46 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_54;
  }
  v44 = v46;
  if (*(_QWORD *)(v23 + 16) < v46)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v49 = type metadata accessor for __ContiguousArrayStorageBase(0, v47);
  v50 = swift_unknownObjectRetain_n(v23, 2);
  v51 = (_QWORD *)swift_dynamicCastClass(v50, v49);
  if (!v51)
  {
    swift_bridgeObjectRelease(v23);
    v51 = _swiftEmptyArrayStorage;
  }
  v52 = v51[2];
  swift_release();
  if (v52 == v44)
  {
    v22 = (char *)swift_dynamicCastClass(v23, v49);
    swift_bridgeObjectRelease(v23);
    if (!v22)
    {
      v22 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_55:
  swift_bridgeObjectRelease(v23);
  v22 = (char *)sub_1003F9474(v23, v23 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), 0, (2 * v44) | 1);
LABEL_13:
  swift_bridgeObjectRelease(v23);
  v48 = v113;
LABEL_29:
  *(void (**)(char *, uint64_t, uint64_t))((char *)v115
                                                  + OBJC_IVAR____TtC20ProductPageExtension11ArtworkGrid_expectedNumberOfArtworkImages) = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v22 + 2);
  sub_1005DD338();
  v67 = v108;
  if (v108)
  {
    v68 = swift_allocObject(&unk_1007449B8, 24, 7);
    v69 = v114;
    swift_unknownObjectWeakInit(v68 + 16);
    v70 = (_QWORD *)swift_allocObject(&unk_1007449E0, 40, 7);
    v71 = v115;
    v70[2] = v115;
    v70[3] = v68;
    v70[4] = v48;
    v72 = swift_allocObject(&unk_1007449B8, 24, 7);
    swift_unknownObjectWeakInit(v72 + 16);
    v73 = (_QWORD *)swift_allocObject(&unk_100744A08, 40, 7);
    v73[2] = v71;
    v73[3] = v72;
    v73[4] = v48;
    *(_QWORD *)&v120[0] = v69;
    v74 = type metadata accessor for EditorialSearchResultContentView();
    v76 = sub_100020248(&qword_100815120, v75, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for NSObject);
    v77 = v71;
    swift_retain_n(v48, 2);
    v78 = v77;
    swift_retain(v67);
    v79 = v69;
    AnyHashable.init<A>(_:)(v120, v74, v76);
    dispatch thunk of ArtworkIconFetcher.fetchArtworkIcons(for:partialCompletion:completion:handlerKey:)(v120, v22, sub_1001E9FB8, v70, sub_1001E9FF8, v73, v119);

    swift_release();
    swift_release_n(v67, 2);
    swift_bridgeObjectRelease(v22);
    swift_release();
    swift_release();
    sub_100010F2C((uint64_t)v119, &qword_100809010);
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease(v22);
    v121 = 0;
    memset(v120, 0, sizeof(v120));
  }
  sub_100010F2C((uint64_t)v120, &qword_100809010);
}

id sub_1001E8CCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorialSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EditorialSearchResultContentView()
{
  return objc_opt_self(_TtC20ProductPageExtension32EditorialSearchResultContentView);
}

uint64_t sub_1001E8DE4()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView);
}

void sub_1001E8DF4(void *a1)
{
  sub_1001E9BEC();

}

void (*sub_1001E8E18(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView);
  return sub_1001E8E58;
}

void sub_1001E8E58(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_1001E9BEC();

    v3 = v2;
  }
  else
  {
    sub_1001E9BEC();
    v3 = v4;
  }

}

uint64_t sub_1001E8EB4(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006518C0, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_1001E8EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006518C0, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

void (*sub_1001E8F34(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_1006518C0, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001EB20;
}

uint64_t sub_1001E8F98(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_1008150F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&unk_1006517B4);
}

uint64_t sub_1001E8FC4(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100815100, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&unk_1006517E4);
}

uint64_t sub_1001E8FF0(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100815108, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&unk_100651800);
}

uint64_t sub_1001E901C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100020248(&qword_100815110, a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&unk_100651860);
  result = sub_100020248(&qword_100815118, v3, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&unk_100651890);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_1001E9078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t), void *a7, double a8, double a9, double a10, double a11, double a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  void *v81;
  void (*v82)(char *, uint64_t);
  void (*v83)(char *, uint64_t);
  char *v84;
  char *v85;
  id v86;
  char *v87;
  void *v88;
  double v89;
  double v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  int v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  char *v105;
  void (*v106)(char *, uint64_t);
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  void *v114;
  void (*v115)(char *, uint64_t, uint64_t);
  void (*v116)(char *, uint64_t, uint64_t);
  _QWORD v117[3];
  uint64_t v118;
  uint64_t v119;

  v114 = a7;
  v104 = a6;
  v100 = a5;
  v103 = a4;
  v99 = a3;
  v113 = a2;
  v101 = a1;
  v111 = type metadata accessor for FloatingPointRoundingRule(0);
  v109 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v110 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticDimension(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v108 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (void (*)(char *, uint64_t))((char *)&v99 - v18);
  __chkstk_darwin(v20);
  v22 = (char *)&v99 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v99 - v24;
  v26 = type metadata accessor for FontUseCase(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v107 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v105 = (char *)&v99 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v99 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v99 - v35;
  v112 = a12;
  v38 = CGSize.subtracting(insets:)(v37);
  v40 = v39;
  if (qword_100804E18 != -1)
    swift_once(&qword_100804E18, sub_1001E4440);
  v102 = v33;
  v41 = sub_10000EFC4(v26, (uint64_t)qword_100865E48);
  v116 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v116(v36, v41, v26);
  if (qword_100804E30 != -1)
    swift_once(&qword_100804E30, sub_1001E45D4);
  v106 = v19;
  v42 = sub_10000EFC4(v14, (uint64_t)qword_100865E90);
  v115 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v115(v25, v42, v14);
  v43 = v103;
  if (v103)
  {
    v44 = type metadata accessor for Feature(0);
    v118 = v44;
    v119 = sub_100020248((unint64_t *)&qword_10080CED0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v45 = sub_1000119C0(v117);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v45, enum case for Feature.measurement_with_labelplaceholder(_:), v44);
    LOBYTE(v44) = isFeatureEnabled(_:)(v117);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v117);
    v98 = v44 & 1;
    v46 = v114;
    v47 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v99, v43, v36, 4, 0, 0, 1, 0, v38, v40, v114, v98);
    v51 = AnyDimension.topMargin(from:in:)(v46, v14, &protocol witness table for StaticDimension, v47, v48, v49, v50)
        + v48
        + 0.0;
  }
  else
  {
    v51 = 0.0;
  }
  v52 = v102;
  v53 = *(void (**)(char *, uint64_t))(v15 + 8);
  v53(v25, v14);
  v54 = *(void (**)(char *, uint64_t))(v27 + 8);
  v54(v36, v26);
  if (qword_100804E20 != -1)
    swift_once(&qword_100804E20, sub_1001E4464);
  v55 = sub_10000EFC4(v26, (uint64_t)qword_100865E60);
  v116(v52, v55, v26);
  v56 = v113;
  v57 = v114;
  if (qword_100804E38 != -1)
    swift_once(&qword_100804E38, sub_1001E4720);
  v58 = sub_10000EFC4(v14, (uint64_t)qword_100865EA8);
  v115(v22, v58, v14);
  v59 = v22;
  v60 = v104;
  if (v104)
  {
    if (v56)
      v61 = 1;
    else
      v61 = 2;
    v62 = type metadata accessor for Feature(0);
    v118 = v62;
    v119 = sub_100020248((unint64_t *)&qword_10080CED0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v63 = sub_1000119C0(v117);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v63, enum case for Feature.measurement_with_labelplaceholder(_:), v62);
    LOBYTE(v62) = isFeatureEnabled(_:)(v117);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v117);
    LOBYTE(v97) = v62 & 1;
    v64 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v100, v60, v52, 4, 0, 0, v61, 0, v38, v40, v57, v97);
    v68 = AnyDimension.topMargin(from:in:)(v57, v14, &protocol witness table for StaticDimension, v64, v65, v66, v67)
        + v65;
  }
  else
  {
    v68 = 0.0;
  }
  v69 = (char *)v106;
  v53(v59, v14);
  v106 = v54;
  v54(v52, v26);
  if (qword_100804E10 != -1)
    swift_once(&qword_100804E10, sub_1001E441C);
  v104 = v53;
  v70 = sub_10000EFC4(v26, (uint64_t)qword_100865E30);
  v71 = v105;
  v116(v105, v70, v26);
  if (qword_100804E28 != -1)
    swift_once(&qword_100804E28, sub_1001E4488);
  v72 = sub_10000EFC4(v14, (uint64_t)qword_100865E78);
  v115(v69, v72, v14);
  v73 = v113;
  if (v113)
  {
    v74 = type metadata accessor for Feature(0);
    v118 = v74;
    v119 = sub_100020248((unint64_t *)&qword_10080CED0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v75 = sub_1000119C0(v117);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v75, enum case for Feature.measurement_with_labelplaceholder(_:), v74);
    LOBYTE(v74) = isFeatureEnabled(_:)(v117);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v117);
    LOBYTE(v97) = v74 & 1;
    v76 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v101, v73, v71, 4, 0, 0, 1, 0, v38, v40, v57, v97);
    v80 = AnyDimension.topMargin(from:in:)(v57, v14, &protocol witness table for StaticDimension, v76, v77, v78, v79)
        + v77;
  }
  else
  {
    v80 = 0.0;
  }
  v81 = v57;
  v82 = v104;
  v104(v69, v14);
  v83 = v106;
  v106(v71, v26);
  v84 = v108;
  v115(v108, v72, v14);
  v85 = v107;
  v116(v107, v70, v26);
  v86 = objc_msgSend(v81, "traitCollection");
  v87 = v110;
  static Dimensions.defaultRoundingRule.getter(v86);
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  v88 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v85, v86);
  v89 = StaticDimension.value(compatibleWith:rounded:)(v86, v87);
  v90 = UIFont.estimatedFirstBaseline.getter();

  v91 = *(void (**)(char *, uint64_t))(v109 + 8);
  v92 = v111;
  v91(v87, v111);
  v83(v85, v26);
  v82(v84, v14);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v93 = sub_10000EFC4(v14, (uint64_t)qword_10086A7E8);
  static Dimensions.defaultRoundingRule.getter(v93);
  v94 = AnyDimension.value(in:rounded:)(v114, v87, v14, &protocol witness table for StaticDimension);
  v91(v87, v92);
  if (qword_100804DF0 != -1)
    swift_once(&qword_100804DF0, sub_1001E433C);
  v95 = type metadata accessor for AspectRatio(0);
  sub_10000EFC4(v95, (uint64_t)qword_100865E00);
  AspectRatio.width(fromHeight:)(v40 - (v51 + v68 + v80 + v89 - v90 + v94));
  AspectRatio.height(fromWidth:)(v38);
  return v112;
}

double sub_1001E99B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  id v22;
  double left;
  double bottom;
  double right;
  double v26;
  double v27;
  double v28;
  __n128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EditorialSearchResult(0, v5);
  v9 = sub_100020248(&qword_100822180, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v34, v8, v8, v9);
  if (!v34)
    return 0.0;
  v32 = v4;
  v33 = v3;
  ItemLayoutContext.parentShelfLayoutContext.getter(v10);
  if (qword_1008059F8 != -1)
    swift_once(&qword_1008059F8, sub_1003A0ECC);
  v11 = qword_100867D20;
  swift_bridgeObjectRetain(qword_100867D20);
  v12 = PageGrid.init(from:breakpointOverrides:)(v2, v11);
  v13 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v12);
  v15 = v14;
  v16 = EditorialSearchResult.title.getter(v13);
  v18 = v17;
  v19 = EditorialSearchResult.subtitle.getter(v16);
  v21 = v20;
  v22 = sub_10052A948();
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v26 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  sub_1001E9078(v13, v15, v16, v18, v19, v21, v22, UIEdgeInsetsZero.top, left, bottom, right, v26);
  v28 = v27;
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v18);
  v29 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v7, v33, v29);
  return v28;
}

id sub_1001E9BEC()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t Strong;
  __n128 v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView]);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100020248(&qword_100807F80, 255, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
    v6 = objc_msgSend(v5, "superview");
    if (!v6)
    {
LABEL_6:

      goto LABEL_7;
    }
    v7 = v6;
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v8 = v1;
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v7 & 1) != 0)
    {
      v10 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      if (v10)
      {
        v5 = v10;
        objc_msgSend(v10, "removeFromSuperview");
        goto LABEL_6;
      }
    }
  }
LABEL_7:
  v11 = swift_unknownObjectWeakAssign(v4);
  v12 = swift_unknownObjectWeakLoadStrong(v11);
  if (v12)
  {
    v13 = (void *)v12;
    objc_msgSend(v1, "addSubview:", v12);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1001E9D2C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  _BYTE *v8;
  unsigned __int8 v9;
  _BYTE *v10;

  v2 = v1;
  v4 = OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView;
  v5 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView];
  if (v5)
  {
    objc_msgSend(v5, "removeFromSuperview");
    v6 = *(void **)&v2[v4];
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)&v2[v4] = a1;
  v7 = a1;

  v8 = *(_BYTE **)&v2[v4];
  if (v8)
  {
    v9 = v8[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_style];
    v8[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_style] = 6;
    v10 = v8;
    sub_1003EF7BC(v9);
    objc_msgSend(v2, "addSubview:", v10);

  }
  return objc_msgSend(v2, "setNeedsLayout");
}

void sub_1001E9DE0()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView____lazy_storage___editorialIcon] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_showEditorialIcon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_editorialArtworkView] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_videoView], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconArtworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_iconBackingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_appEventStoryFormattedDateView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/EditorialSearchResultContentView.swift", 59, 2, 265, 0);
  __break(1u);
}

double sub_1001E9EA4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  double result;
  char *v11;
  _QWORD v12[5];

  v1 = v0;
  v2 = type metadata accessor for ArtworkIconFetcher(0);
  BaseObjectGraph.optional<A>(_:)(v12, v2, v2);
  v3 = v12[0];
  if (v12[0])
  {
    v11 = v0;
    v4 = type metadata accessor for EditorialSearchResultContentView();
    v6 = sub_100020248(&qword_100815120, v5, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for NSObject);
    swift_retain(v3);
    v7 = v1;
    AnyHashable.init<A>(_:)(&v11, v4, v6);
    dispatch thunk of ArtworkIconFetcher.forgetFetches(for:)(v12);
    swift_release();
    sub_100018968((uint64_t)v12);
  }
  v8 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32EditorialSearchResultContentView_artworkGrid];
  if (v8)
  {
    v9 = v8;
    sub_10039B988();

  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001E9F90()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001E9FB8(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  sub_1001E7FF4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1001E9FC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E9FFC()
{
  return sub_10000E720(&qword_100815128, type metadata accessor for ScreenshotCollectionViewCell, (uint64_t)&unk_100651960);
}

double sub_1001EA02C(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t KeyPath;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, char *, uint64_t);
  __n128 v53;
  char v54;
  char v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  double v63;
  __n128 v64;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v76 = type metadata accessor for PageGrid(0);
  v69 = *(_QWORD *)(v76 - 8);
  v2 = __chkstk_darwin(v76);
  v71 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Shelf.ContentsMetadata(0, v2);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v6 = (char **)((char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v73 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char **)((char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for ProductMediaMetadata(0, v8);
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  __chkstk_darwin(v11);
  v66 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v70 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v66 - v20;
  __chkstk_darwin(v22);
  v72 = (char *)&v66 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v66 - v25;
  __chkstk_darwin(v27);
  v78 = (char *)&v66 - v28;
  v29 = type metadata accessor for ProductMediaItem(0);
  v30 = sub_10000E720((unint64_t *)&qword_10080B6E0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductMediaItem, (uint64_t)&protocol conformance descriptor for ProductMediaItem);
  v77 = a1;
  v31 = ItemLayoutContext.typedModel<A>(as:)(&v79, v29, v29, v30);
  if (v79)
  {
    v32 = ProductMediaItem.screenshot.getter(v31);
    if (v32)
    {
      Artwork.size.getter(v32);
      AspectRatio.init(_:_:)(v33);
      v34 = swift_release();
      (*(void (**)(char *, char *, uint64_t, __n128))(v17 + 32))(v15, v26, v16, v34);
    }
    else
    {
      v37 = ProductMediaItem.video.getter(0);
      if (!v37)
      {
        v40 = 1;
LABEL_8:
        v41 = v78;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v15, v40, 1, v16, v35);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
        {
          swift_release();
          sub_1001EA5A0((uint64_t)v15);
          return 0.0;
        }
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v41, v15, v16);
        swift_getKeyPath(&unk_1006519B0);
        v42 = v41;
        ItemLayoutContext.subscript.getter(v10);
        swift_release();
        KeyPath = swift_getKeyPath(&unk_1006519E0);
        ReadOnlyLens.subscript.getter(v6, KeyPath, v7);
        v44 = swift_release();
        (*(void (**)(_QWORD *, uint64_t, __n128))(v73 + 8))(v10, v7, v44);
        v46 = v74;
        v45 = v75;
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(v74 + 88))(v6, v75) == enum case for Shelf.ContentsMetadata.productMedia(_:))
        {
          (*(void (**)(_QWORD *, uint64_t))(v46 + 96))(v6, v45);
          v47 = v66;
          v48 = v67;
          v49 = v68;
          v50 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v67 + 32))(v66, v6, v68);
          v51 = ProductMediaMetadata.hasPortraitPhoneMedia.getter(v50);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
          v52 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
          v52(v21, v42, v16);
          if ((v51 & 1) != 0)
          {
            v54 = AspectRatio.isPortrait.getter(v53);
            v42 = v78;
            v55 = v54;
            v56 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
            v57 = v56(v21, v16);
            v58 = v69;
            v59 = v70;
            v60 = v71;
            if ((v55 & 1) == 0)
            {
              v61 = v72;
              AspectRatio.inverted.getter(v57);
              goto LABEL_17;
            }
            v61 = v72;
LABEL_16:
            v52(v61, v42, v16);
LABEL_17:
            v52(v59, v61, v16);
            swift_getKeyPath(&unk_100651A10);
            ItemLayoutContext.subscript.getter(v60);
            swift_release();
            v63 = PageGrid.columnWidth.getter(v62);
            (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v60, v76);
            v36 = AspectRatio.height(fromWidth:)(v63);
            v64 = swift_release();
            ((void (*)(char *, uint64_t, __n128))v56)(v59, v16, v64);
            v56(v61, v16);
            v56(v42, v16);
            return v36;
          }
        }
        else
        {
          (*(void (**)(_QWORD *, uint64_t))(v46 + 8))(v6, v45);
          v52 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
          v52(v21, v42, v16);
        }
        v58 = v69;
        v61 = v72;
        v56 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
        v56(v21, v16);
        v59 = v70;
        v60 = v71;
        goto LABEL_16;
      }
      Video.preview.getter(v37);
      swift_release();
      Artwork.size.getter(v38);
      AspectRatio.init(_:_:)(v39);
      v35 = swift_release();
    }
    v40 = 0;
    goto LABEL_8;
  }
  return 0.0;
}

uint64_t sub_1001EA5A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1001EA5EC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  objc_class *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  double left;
  double bottom;
  double right;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  objc_class *v34;
  char *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *ObjectType;
  objc_super v50;
  objc_super v51;
  objc_super v52;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v13 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_lockupCollectionView;
  v20 = (objc_class *)type metadata accessor for CarouselItemLockupCollectionView(0);
  v21 = (char *)objc_allocWithZone(v20);
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_artworkViews] = _swiftEmptyArrayStorage;
  v22 = &v21[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView____lazy_storage___artworkViewPool];
  v23 = sub_10000DAF8((uint64_t *)&unk_100811760);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_minNumberOfArtworks] = 2;
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_maxNumberOfArtworks] = 5;
  v52.receiver = v21;
  v52.super_class = v20;
  v24 = v5;
  v25 = objc_msgSendSuper2(&v52, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v25, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  *(_QWORD *)&v5[v47] = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:), v16);
  v29 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:), v48);
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v29);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)(v19, v15, v12, 1);
  v30 = &v24[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_selectionHandler];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v31 = objc_allocWithZone((Class)UIVisualEffect);
  v32 = v25;
  v33 = objc_msgSend(v31, "init");
  v34 = (objc_class *)type metadata accessor for VisualEffectContainerView();
  v35 = (char *)objc_allocWithZone(v34);
  *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension25VisualEffectContainerView_embeddedView] = v32;
  v51.receiver = v35;
  v51.super_class = v34;
  v36 = v32;
  v37 = objc_msgSendSuper2(&v51, "initWithEffect:", v33);
  objc_msgSend(v37, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v38 = objc_msgSend(v37, "contentView");
  objc_msgSend(v38, "addSubview:", v36);

  *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_materialbackground] = v37;
  v50.receiver = v24;
  v50.super_class = ObjectType;
  v39 = (char *)objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v39, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v39, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v39, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v40 = objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_lockupCollectionView], "layer");
  objc_msgSend(v40, "setAllowsGroupBlending:", 0);

  v41 = OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_materialbackground;
  v42 = *(id *)&v39[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_materialbackground];
  sub_10035BBA8(20.0);

  v43 = objc_msgSend(*(id *)&v39[v41], "contentView");
  v44 = objc_msgSend(v43, "layer");

  objc_msgSend(v44, "setAllowsGroupBlending:", 0);
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[v41]);

  return v39;
}

uint64_t sub_1001EAAC8()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void (*v15)(char *, uint64_t);
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  _QWORD v26[5];
  objc_super v27;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for DisjointStack(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v26[-1] - v9;
  v27.receiver = v1;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "layoutSubviews", v8);
  v11 = swift_allocObject(&unk_100744C10, 24, 7);
  *(_QWORD *)(v11 + 16) = v1;
  v12 = v1;
  DisjointStack.init(with:)(sub_1001EBBC0, v11);
  v13 = *(void **)&v12[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_materialbackground];
  v26[3] = type metadata accessor for VisualEffectContainerView();
  v26[4] = sub_10000E720((unint64_t *)&unk_100815180, (uint64_t (*)(uint64_t))type metadata accessor for VisualEffectContainerView, (uint64_t)&unk_10065904C);
  v26[0] = v13;
  v14 = v13;
  DisjointStack.inserting(_:at:with:)(v26, 0, 1, 0, 0);
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v6, v3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
  v16 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = objc_msgSend(v12, "traitCollection");
  dispatch thunk of Placeable.place(at:with:)(v23, v3, &protocol witness table for DisjointStack, v16, v18, v20, v22);

  return ((uint64_t (*)(char *, uint64_t))v15)(v10, v3);
}

uint64_t sub_1001EACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _BYTE v22[24];

  v21 = a1;
  v3 = type metadata accessor for DisjointStack.EdgePosition(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = a2 + OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_displayOptions;
  v16 = swift_beginAccess(v15, v22, 0, 0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, v15, v11, v16);
  HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v17);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if ((_DWORD)result == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:))
  {
    v6[3] = type metadata accessor for ZeroDimension(0);
    v6[4] = &protocol witness table for ZeroDimension;
    v19 = sub_1000119C0(v6);
    static ZeroDimension.zero.getter(v19);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DisjointStack.EdgePosition.anchored(_:), v3);
    return DisjointStack.Properties.leadingEdge.setter(v6);
  }
  else if ((_DWORD)result != enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.center(_:))
  {
    if ((_DWORD)result == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.trailing(_:))
    {
      v6[3] = type metadata accessor for ZeroDimension(0);
      v6[4] = &protocol witness table for ZeroDimension;
      v20 = sub_1000119C0(v6);
      static ZeroDimension.zero.getter(v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DisjointStack.EdgePosition.anchored(_:), v3);
      return DisjointStack.Properties.trailingEdge.setter(v6);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  return result;
}

double sub_1001EAF10(double a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void (*v16)(char *, uint64_t);
  double v17;
  _QWORD v20[5];

  v5 = type metadata accessor for DisjointStack(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20[-1] - v10;
  v12 = swift_allocObject(&unk_100744BE8, 24, 7);
  *(_QWORD *)(v12 + 16) = v2;
  v13 = v2;
  DisjointStack.init(with:)(sub_1001EB944, v12);
  v14 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_materialbackground];
  v20[3] = type metadata accessor for VisualEffectContainerView();
  v20[4] = sub_10000E720((unint64_t *)&unk_100815180, (uint64_t (*)(uint64_t))type metadata accessor for VisualEffectContainerView, (uint64_t)&unk_10065904C);
  v20[0] = v14;
  v15 = v14;
  DisjointStack.inserting(_:at:with:)(v20, 0, 1, 0, 0);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, v5);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v20);
  v17 = sub_1001EB2C4((uint64_t)v11, v13, a1, a2);
  v16(v11, v5);
  return v17;
}

uint64_t sub_1001EB150()
{
  return type metadata accessor for CarouselItemModulePlatterView(0);
}

uint64_t type metadata accessor for CarouselItemModulePlatterView(uint64_t a1)
{
  uint64_t result;

  result = qword_100815170;
  if (!qword_100815170)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarouselItemModulePlatterView);
  return result;
}

uint64_t sub_1001EB194(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100651A80;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1001EB218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_selectionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_selectionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_selectionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100018908(v4, v5);
}

double sub_1001EB23C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  double result;

  v3 = HeroCarouselItemOverlay.collectionIcons.getter();
  if (v3)
    v4 = (_QWORD *)v3;
  else
    v4 = _swiftEmptyArrayStorage;
  sub_1004AC4F8((uint64_t)v4, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_1001EB29C(double a1, double a2)
{
  return sub_1001EAF10(a1, a2);
}

double sub_1001EB2C4(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  id v24;
  id v25;
  double v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  double v45;
  _BYTE v47[8];
  char v48;
  _BYTE v49[40];
  _QWORD v50[3];
  uint64_t v51;
  void *v52;
  _QWORD v53[6];

  v8 = type metadata accessor for Resize.Rule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v47[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v47[-v13];
  __chkstk_darwin(v15);
  v17 = &v47[-v16];
  __chkstk_darwin(v18);
  v20 = &v47[-v19];
  v21 = type metadata accessor for DisjointStack(0);
  v53[3] = v21;
  v53[4] = &protocol witness table for DisjointStack;
  v22 = sub_1000119C0(v53);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, a1, v21);
  v23 = sub_1000E1918(a3, a4);
  v24 = objc_msgSend(a2, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");

  if (v25 == (id)2)
    v26 = 635.0;
  else
    v26 = a3;
  if (v26 <= v23)
  {
    sub_10000EF80((uint64_t)v53, (uint64_t)v49);
    *((_QWORD *)v20 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v20 + 4) = &protocol witness table for CGFloat;
    *(double *)v20 = v26;
    v40 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 104);
    v40(v20, enum case for Resize.Rule.replaced(_:), v8);
    v41 = enum case for Resize.Rule.unchanged(_:);
    v40(v17, enum case for Resize.Rule.unchanged(_:), v8);
    v40(v14, v41, v8);
    v40(v11, v41, v8);
    v51 = type metadata accessor for Resize(0);
    v52 = &protocol witness table for Resize;
    sub_1000119C0(v50);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v49, v20, v17, v14, v11);
  }
  else
  {
    v27 = MeasurementRange.init(minimum:maximum:)(*(_QWORD *)&v23, 0, *(_QWORD *)&v26, 0);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_10000EF80((uint64_t)v53, (uint64_t)v49);
    v34 = MeasurementRange.init(minimum:maximum:)(0, 1, 0, 1);
    v36 = v35;
    v38 = v37;
    v51 = type metadata accessor for Constrain(0);
    v52 = &protocol witness table for Constrain;
    sub_1000119C0(v50);
    v39 = v29 & 1;
    v33 &= 1u;
    v48 = v36 & 1;
    v47[0] = v38 & 1;
    Constrain.init(_:width:height:)(v49, v27, v39, v31, v33, v34);
    v49[0] = v39;
    v48 = v33;
    a3 = MeasurementRange.constrain(_:)(v27, v39, v31, v33, a3);
  }
  v42 = v51;
  v43 = v52;
  sub_100010F08(v50, v51);
  v44 = objc_msgSend(a2, "traitCollection");
  v45 = dispatch thunk of Placeable.measure(toFit:with:)(v44, v42, v43, a3, a4);

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v50);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
  return v45;
}

id sub_1001EB644()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  _BYTE v19[24];

  v1 = v0;
  v2 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_lockupCollectionView];
  v8 = HeroCarouselItemOverlay.collectionIcons.getter(v4);
  if (v8)
  {
    v10 = v8;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 >= 0)
        v8 &= 0xFFFFFFFFFFFFFF8uLL;
      v11 = _CocoaArrayWrapper.endIndex.getter(v8);
    }
    else
    {
      v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v9 = swift_bridgeObjectRelease(v10);
    v12 = OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks;
    v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks];
    *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks] = v11;
    if (v11 != v13)
    {
      if (v11 > 5)
        *(_QWORD *)&v7[v12] = 5;
      goto LABEL_8;
    }
  }
  else
  {
    v14 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks];
    *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks] = 0;
    if (v14)
    {
LABEL_8:
      sub_1004ACB50();
      objc_msgSend(v7, "setNeedsLayout");
    }
  }
  HeroCarouselItemOverlay.displayOptions.getter(v9);
  v15 = &v1[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_displayOptions];
  v16 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_displayOptions], v19, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v3 + 40))(v15, v6, v2, v16);
  return objc_msgSend(v1, "setNeedsLayout", swift_endAccess(v19).n128_f64[0]);
}

void sub_1001EB7C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = (uint64_t *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_lockupCollectionView)
                 + OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_artworkViews);
  swift_beginAccess(v1, v10, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v2, 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v2, 2);
    return;
  }
  if (v2 < 0)
    v9 = v2;
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v2, 2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = type metadata accessor for ArtworkView(0);
      v8 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, 1, v7, v8);

    }
    while (v3 != v4);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1001EB920()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001EB944(uint64_t a1)
{
  uint64_t v1;

  return sub_1001EACD4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1001EB94C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  v1 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_lockupCollectionView;
  v11 = (objc_class *)type metadata accessor for CarouselItemLockupCollectionView(0);
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_artworkViews] = _swiftEmptyArrayStorage;
  v13 = &v12[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView____lazy_storage___artworkViewPool];
  v14 = sub_10000DAF8((uint64_t *)&unk_100811760);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_numberOfArtworks] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_minNumberOfArtworks] = 2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension32CarouselItemLockupCollectionView_maxNumberOfArtworks] = 5;
  v20.receiver = v12;
  v20.super_class = v11;
  v15 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  *(_QWORD *)&v0[v18] = v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:), v7);
  v16 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:), v19);
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v16);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)(v10, v6, v3, 1);
  v17 = &v0[OBJC_IVAR____TtC20ProductPageExtension29CarouselItemModulePlatterView_selectionHandler];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/CarouselItemModulePlatterView.swift", 56, 2, 62, 0);
  __break(1u);
}

uint64_t sub_1001EBBC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  float v7;
  id v8;
  double v9;
  Class isa;
  Swift::Int v11;
  void *object;
  uint64_t v13;
  float v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  NSString *v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class v22;
  id v23;
  uint64_t v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  NSString v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  float v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  _BYTE v61[72];
  NSNumber_optional v62;

  v3 = v2;
  *(_BYTE *)(v2 + qword_100819E28) = a2 & 1;
  v4 = sub_1002CB754();
  v5 = dispatch thunk of CustomLayoutView.invalidateMeasurements()(v4);
  v6 = *(void **)(v2 + qword_100819E00);
  v7 = Ratings.ratingAverage.getter(v5);
  v8 = objc_allocWithZone((Class)NSNumber);
  *(float *)&v9 = v7;
  v62.value.super.super.isa = (Class)objc_msgSend(v8, "initWithFloat:", v9);
  isa = v62.value.super.super.isa;
  v62.is_nil = 1;
  object = localizedStringForDecimal(_:_:)(v62, v11).value._object;

  if (!object)
  {
    v14 = Ratings.ratingAverage.getter(v13);
    Float.description.getter(v14);
    object = v15;
  }
  v16 = sub_10000DAF8(&qword_100815380);
  inited = swift_initStackObject(v16, v61);
  *(_OWORD *)(inited + 16) = xmmword_100640720;
  *(_QWORD *)(inited + 64) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 32) = NSKernAttributeName;
  *(_QWORD *)(inited + 40) = 0xC010000000000000;
  v18 = NSKernAttributeName;
  v19 = sub_100509728(inited);
  v20 = objc_allocWithZone((Class)NSAttributedString);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  type metadata accessor for Key(0);
  sub_1001A1594();
  v22 = Dictionary._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v20, "initWithString:attributes:", v21, v22, swift_bridgeObjectRelease(v19).n128_f64[0]);

  objc_msgSend(v6, "setAttributedText:", v23);
  v25 = Ratings.ratingAverage.getter(v24);
  sub_100067688(v25);
  v26 = *(_QWORD *)(v3 + qword_100819E18);
  v28 = Ratings.totalNumberOfRatings.getter(v27);
  v29._object = (void *)0x8000000100689F30;
  v29._countAndFlagsBits = 0xD000000000000013;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v31 = localizedStringWithCount(_:count:comment:)(v29, v28, v30)._object;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend((id)v26, "setText:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  v33 = Ratings.ratingCounts.getter();
  if (!v33)
    goto LABEL_34;
  v26 = v33;
  v34 = v33 & 0xFFFFFFFFFFFFFF8;
  if (v33 >> 62)
    goto LABEL_26;
  if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) != 5)
    goto LABEL_33;
  v60 = v3;
  v35 = (uint64_t *)(*(_QWORD *)(v3 + qword_100819E20)
                  + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews);
  v36 = 5;
  while (2)
  {
    v37 = 0;
    while (1)
    {
      v41 = (v26 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v26)
          : *(id *)(v26 + 8 * v37 + 32);
      v40 = v41;
      v42 = objc_msgSend(v41, "floatValue", v60);
      v44 = v43;
      v45 = Ratings.totalNumberOfRatings.getter(v42);
      v3 = *v35;
      if ((unint64_t)*v35 >> 62)
      {
        if (v3 < 0)
          v47 = *v35;
        else
          v47 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v35);
        v48 = _CocoaArrayWrapper.endIndex.getter(v47);
        swift_bridgeObjectRelease(v3);
        if (v37 >= v48)
          goto LABEL_10;
      }
      else if (v37 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_10;
      }
      v46 = *v35;
      if ((*v35 & 0xC000000000000001) == 0)
        break;
      v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v46);
LABEL_9:
      v39 = v38;
      *(float *)&v38[OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progress] = v44 / (float)v45;
      objc_msgSend(v38, "setNeedsLayout");

      v40 = v39;
LABEL_10:
      ++v37;

      if (v36 == v37)
      {
        swift_bridgeObjectRelease(v26);
        return dispatch thunk of CustomLayoutView.invalidateMeasurements()(v49);
      }
    }
    v34 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v37 < v34)
    {
      v38 = (char *)*(id *)(v46 + 8 * v37 + 32);
      goto LABEL_9;
    }
    __break(1u);
LABEL_26:
    if (v26 >= 0)
      v50 = v34;
    else
      v50 = v26;
    swift_bridgeObjectRetain(v26);
    v51 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v26);
    if (v51 != 5)
      goto LABEL_33;
    swift_bridgeObjectRetain(v26);
    v36 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v26);
    if (!v36)
    {
LABEL_50:
      v58 = v26;
      goto LABEL_47;
    }
    v60 = v3;
    if (v36 >= 1)
    {
      v35 = (uint64_t *)(*(_QWORD *)(v3 + qword_100819E20)
                      + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews);
      continue;
    }
    break;
  }
  __break(1u);
LABEL_33:
  swift_bridgeObjectRelease(v26);
LABEL_34:
  v52 = *(_QWORD *)(*(_QWORD *)(v3 + qword_100819E20)
                  + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews);
  if ((unint64_t)v52 >> 62)
  {
    if (v52 < 0)
      v57 = *(_QWORD *)(*(_QWORD *)(v3 + qword_100819E20)
                      + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews);
    else
      v57 = v52 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v3 + qword_100819E20)
                                       + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews));
    v53 = _CocoaArrayWrapper.endIndex.getter(v57);
    if (!v53)
      goto LABEL_46;
LABEL_36:
    if (v53 >= 1)
    {
      v54 = 0;
      do
      {
        if ((v52 & 0xC000000000000001) != 0)
          v55 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v52);
        else
          v55 = (char *)*(id *)(v52 + 8 * v54 + 32);
        v56 = v55;
        ++v54;
        *(_DWORD *)&v55[OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progress] = 0;
        objc_msgSend(v55, "setNeedsLayout", v60);

      }
      while (v53 != v54);
      goto LABEL_46;
    }
    __break(1u);
    goto LABEL_50;
  }
  v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v3 + qword_100819E20)
                                     + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews));
  if (v53)
    goto LABEL_36;
LABEL_46:
  v58 = v52;
LABEL_47:
  swift_bridgeObjectRelease(v58);
  return dispatch thunk of CustomLayoutView.invalidateMeasurements()(v49);
}

uint64_t sub_1001EC0E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_mediaContentView);
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

void sub_1001EC190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  sub_1003ED8E0();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView)
                 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_notifyMeButtonPresenter);
  if (v1)
  {
    v2 = OBJC_IVAR____TtC20ProductPageExtension23NotifyMeButtonPresenter_displayTimeReachedTimer;
    v3 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension23NotifyMeButtonPresenter_displayTimeReachedTimer);
    if (v3)
    {
      objc_msgSend(v3, "invalidate", swift_retain(v1).n128_f64[0]);
      v4 = *(id *)(v1 + v2);
    }
    else
    {
      swift_retain(v1);
      v4 = 0;
    }
    *(_QWORD *)(v1 + v2) = 0;
    swift_release();

  }
}

id sub_1001EC32C(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer], "removeTarget:action:", v2, 0);
  v5.receiver = v2;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_1001EC464()
{
  return type metadata accessor for AppEventView(0);
}

uint64_t type metadata accessor for AppEventView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008151D0;
  if (!qword_1008151D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppEventView);
  return result;
}

void sub_1001EC4A8()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  double MaxY;
  CGFloat v15;
  double v16;
  CGFloat v17;
  _QWORD v18[41];
  objc_super v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v19.receiver = v0;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, "layoutSubviews");
  v20.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  if (!CGRectIsEmpty(v20))
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView];
    LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    v5 = v4;
    v7 = v6;
    sub_1003F17B0();
    sub_1003F4CA4(v0, v18, v5, v7);
    sub_100062D54(v18);
    v21.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    CGRectGetMinX(v21);
    v22.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    CGRectGetMinY(v22);
    v8 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    objc_msgSend(v3, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v0, v8));
    v9 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
    v10 = objc_msgSend(v9, "superview");
    if (v10)
    {
      v11 = v10;
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v12 = v1;
      v13 = v11;
      LOBYTE(v11) = static NSObject.== infix(_:_:)(v13, v12);

      if ((v11 & 1) != 0)
      {
        objc_msgSend(v3, "frame");
        MaxY = CGRectGetMaxY(v23);
        v24.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
        v15 = CGRectGetHeight(v24) - MaxY;
        v25.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
        objc_msgSend(v9, "setBounds:", 0.0, 0.0, CGRectGetWidth(v25), v15);
        objc_msgSend(v3, "frame");
        v16 = CGRectGetMaxY(v26);
        v27.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
        v17 = CGRectGetHeight(v27) - v16;
        objc_msgSend(v12, "bounds");
        objc_msgSend(v9, "setCenter:", CGRectGetWidth(v28) * 0.5, v16 + v17 * 0.5);
      }
    }
  }
}

void sub_1001EC828(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  void *v35;
  char *v36;
  id v37;
  char v38;
  void *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  char *v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  void **v64;
  __n128 v65;
  uint64_t v66;
  void *v67;
  char *v68;
  void *v69;
  uint64_t v70;
  void **v71;
  uint64_t v72;
  __n128 v73;
  id v74;
  void *v75;
  char *v76;
  id v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  id v85;
  uint64_t ObjectType;
  uint64_t v87;
  id v88;
  uint64_t v89;
  void **aBlock;
  uint64_t v91;
  void *v92;
  void *v93;
  id (*v94)();
  uint64_t v95;
  char v96[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100819850);
  __chkstk_darwin(v8);
  v87 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer];
  v88 = a1;
  v85 = v14;
  if ((static NSObject.== infix(_:_:)(a1, v14) & 1) != 0)
  {
    v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
    v16 = objc_msgSend(v15, "superview");
    if (v16)
    {
      v17 = v16;
      v18 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v84 = v13;
      v19 = v11;
      v20 = v10;
      v21 = v15;
      v22 = v5;
      v23 = v4;
      v24 = v18;
      v25 = v2;
      v26 = v17;
      v83 = v24;
      v27 = v23;
      v28 = v22;
      v29 = v21;
      v30 = v7;
      v31 = v20;
      v32 = v19;
      v33 = v84;
      LOBYTE(v17) = static NSObject.== infix(_:_:)(v26, v25);

      if ((v17 & 1) != 0)
      {
        switch((unint64_t)objc_msgSend(v88, "state"))
        {
          case 1uLL:
            objc_msgSend(v88, "locationInView:", v29);
            v45 = &v25[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_initialLongPressLocation];
            *(_QWORD *)v45 = v46;
            *((_QWORD *)v45 + 1) = v47;
            v45[16] = 0;
            v48 = objc_msgSend(v29, "superview");
            if (v48)
            {
              v49 = v48;
              v50 = v25;
              v51 = v49;
              v52 = static NSObject.== infix(_:_:)(v51, v50);

              if ((v52 & 1) != 0)
              {
                v39 = (void *)objc_opt_self(UIView);
                v53 = swift_allocObject(&unk_100744DE8, 32, 7);
                *(_QWORD *)(v53 + 16) = v50;
                *(_QWORD *)(v53 + 24) = 0x3FEEB851EB851EB8;
                v94 = sub_1001EE7D0;
                v95 = v53;
                aBlock = _NSConcreteStackBlock;
                v91 = 1107296256;
                v92 = sub_1000924A0;
                v93 = &unk_100744E00;
                v41 = _Block_copy(&aBlock);
                v42 = v50;
                swift_release();
                v54 = swift_allocObject(&unk_100744E38, 32, 7);
                *(_BYTE *)(v54 + 16) = 1;
                *(_QWORD *)(v54 + 24) = v42;
                v94 = sub_1001EE500;
                v95 = v54;
                aBlock = _NSConcreteStackBlock;
                v91 = 1107296256;
                v44 = &unk_100744E50;
                goto LABEL_23;
              }
            }
            break;
          case 2uLL:
            objc_msgSend(v88, "locationInView:", v29);
            v57 = (double *)&v25[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_initialLongPressLocation];
            if ((v25[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_initialLongPressLocation + 16] & 1) != 0)
            {
              *v57 = v55;
              v57[1] = v56;
              *((_BYTE *)v57 + 16) = 0;
            }
            else
            {
              v61 = sqrt((v56 - v57[1]) * (v56 - v57[1]) + (v55 - *v57) * (v55 - *v57));
              objc_msgSend(v85, "allowableMovement");
              if (v62 < v61)
                objc_msgSend(v88, "setEnabled:", 0);
            }
            break;
          case 3uLL:
            v58 = &v25[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_clickAction];
            swift_beginAccess(&v25[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_clickAction], v96, 0, 0);
            v59 = (uint64_t)v58;
            v60 = v87;
            sub_100018ADC(v59, v87, &qword_100819850);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v60, 1, v31) == 1)
            {
              sub_100010F2C(v60, &qword_100819850);
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v33, v60, v31);
              ObjectGraphPair.value.getter(&v89, v31);
              v63 = ObjectType;
              v93 = (void *)ObjectType;
              aBlock = (void **)v25;
              v64 = v25;
              dispatch thunk of Action.clickSender.setter(&aBlock, v65);
              swift_release();
              v66 = UIResponder.nearestActionRunner.getter();
              if (v66)
              {
                v87 = v66;
                v88 = (id)v32;
                v67 = (void *)v63;
                v68 = v84;
                ObjectGraphPair.value.getter(&v89, v31);
                v69 = v67;
                v70 = v89;
                v93 = v69;
                aBlock = v64;
                v71 = v64;
                v72 = ObjectGraphPair.objectGraph.getter(v31);
                (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v30, enum case for ActionRunner.Origin.userInitiated(_:), v27);
                dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v70, &aBlock, v30, v72);
                swift_release();
                swift_release();
                v73 = swift_release();
                (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v30, v27, v73);
                (*((void (**)(char *, uint64_t))v88 + 1))(v68, v31);
                sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v32 + 8))(v84, v31);
              }
            }
            v74 = objc_msgSend(v29, "superview");
            if (v74)
            {
              v75 = v74;
              v76 = v25;
              v77 = v75;
              v78 = static NSObject.== infix(_:_:)(v77, v76);

              if ((v78 & 1) != 0)
              {
                v39 = (void *)objc_opt_self(UIView);
                v79 = swift_allocObject(&unk_100744CA8, 32, 7);
                *(_QWORD *)(v79 + 16) = v76;
                *(_QWORD *)(v79 + 24) = 0x3FF0000000000000;
                v94 = sub_1001EE4DC;
                v95 = v79;
                aBlock = _NSConcreteStackBlock;
                v91 = 1107296256;
                v92 = sub_1000924A0;
                v93 = &unk_100744CC0;
                v41 = _Block_copy(&aBlock);
                v42 = v76;
                swift_release();
                v80 = swift_allocObject(&unk_100744CF8, 32, 7);
                *(_BYTE *)(v80 + 16) = 0;
                *(_QWORD *)(v80 + 24) = v42;
                v94 = sub_1001EE500;
                v95 = v80;
                aBlock = _NSConcreteStackBlock;
                v91 = 1107296256;
                v44 = &unk_100744D10;
                goto LABEL_23;
              }
            }
            break;
          case 4uLL:
          case 5uLL:
            v34 = objc_msgSend(v29, "superview");
            if (v34)
            {
              v35 = v34;
              v36 = v25;
              v37 = v35;
              v38 = static NSObject.== infix(_:_:)(v37, v36);

              if ((v38 & 1) != 0)
              {
                v39 = (void *)objc_opt_self(UIView);
                v40 = swift_allocObject(&unk_100744D48, 32, 7);
                *(_QWORD *)(v40 + 16) = v36;
                *(_QWORD *)(v40 + 24) = 0x3FF0000000000000;
                v94 = sub_1001EE7D0;
                v95 = v40;
                aBlock = _NSConcreteStackBlock;
                v91 = 1107296256;
                v92 = sub_1000924A0;
                v93 = &unk_100744D60;
                v41 = _Block_copy(&aBlock);
                v42 = v36;
                swift_release();
                v43 = swift_allocObject(&unk_100744D98, 32, 7);
                *(_BYTE *)(v43 + 16) = 0;
                *(_QWORD *)(v43 + 24) = v42;
                v94 = sub_1001EE500;
                v95 = v43;
                aBlock = _NSConcreteStackBlock;
                v91 = 1107296256;
                v44 = &unk_100744DB0;
LABEL_23:
                v92 = sub_10004A774;
                v93 = v44;
                v81 = _Block_copy(&aBlock);
                v82 = v42;
                swift_release();
                objc_msgSend(v39, "_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:", 135, v41, v81, 0.0, 1.0);
                _Block_release(v81);
                _Block_release(v41);
              }
            }
            break;
          default:
            return;
        }
      }
    }
  }
}

id sub_1001ED0BC(uint64_t a1, CGFloat a2)
{
  void *v2;
  CGAffineTransform v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
  CGAffineTransformMakeScale(&v4, a2, a2);
  return objc_msgSend(v2, "setTransform:", &v4);
}

uint64_t sub_1001ED118(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  void *v13;
  CGFloat v14;
  CGFloat v15;
  uint64_t v16;
  double v17;
  double v18;
  void *v19;
  CGFloat v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v31;
  uint64_t v32;
  char v34[24];
  CGPoint v35;
  CGPoint v36;
  CGPoint v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v3 = v2;
  v6 = sub_10000DAF8(&qword_100819850);
  __chkstk_darwin(v6);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer]) & 1) == 0)return 1;
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
  v10 = OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupContainerView;
  objc_msgSend(a2, "locationInView:", *(_QWORD *)(v9 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupContainerView));
  v13 = *(void **)(v9 + v10);
  if (!v13
    || (v14 = v11, v15 = v12, objc_msgSend(v13, "bounds"), v35.x = v14, v35.y = v15, !CGRectContainsPoint(v38, v35)))
  {
    v16 = OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_notifyMeButton;
    objc_msgSend(a2, "locationInView:", *(_QWORD *)(v9 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_notifyMeButton));
    v19 = *(void **)(v9 + v16);
    if (!v19
      || (v20 = v17, v21 = v18, objc_msgSend(v19, "bounds"), v36.x = v20, v36.y = v21, !CGRectContainsPoint(v39, v36)))
    {
      objc_msgSend(a2, "locationInView:", v3);
      v23 = v22;
      v25 = v24;
      v26 = objc_msgSend(v3, "hitTest:withEvent:", 0);
      objc_msgSend(v3, "bounds");
      v37.x = v23;
      v37.y = v25;
      if (!CGRectContainsPoint(v40, v37))
      {

        return 0;
      }
      if (!v26
        || (v27 = objc_opt_self(UIControl),
            v28 = swift_dynamicCastObjCClass(v26, v27),
            v26,
            !v28))
      {
        v31 = (uint64_t)&v3[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_clickAction];
        swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_clickAction], v34, 0, 0);
        sub_100018ADC(v31, (uint64_t)v8, &qword_100819850);
        v32 = sub_10000DAF8((uint64_t *)&unk_10081D490);
        v29 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v8, 1, v32) != 1;
        sub_100010F2C((uint64_t)v8, &qword_100819850);
        return v29;
      }
    }
  }
  return 0;
}

void sub_1001ED3FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10019C5E8(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100651B08;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_1001ED484()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
}

void sub_1001ED4A4(void *a1)
{
  sub_10011BCEC();

}

void (*sub_1001ED4DC(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
  a1[1] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
  return sub_10011B9DC;
}

id sub_1001ED52C()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
}

double sub_1001ED540(uint64_t a1)
{
  _QWORD *v1;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView), "frame");
  CGRectGetMaxY(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(a1);
  CGRectGetHeight(v5);
  v6.origin.x = LayoutMarginsAware<>.layoutFrame.getter(a1);
  CGRectGetWidth(v6);
  return 0.0;
}

CGFloat sub_1001ED5B4(uint64_t a1)
{
  void **v1;
  char *v3;
  CGRect v5;
  CGRect v6;
  CGRect v7;

  v3 = (char *)*v1;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView], "frame");
  CGRectGetMaxY(v5);
  v6.origin.x = LayoutMarginsAware<>.layoutFrame.getter(a1);
  CGRectGetHeight(v6);
  objc_msgSend(v3, "bounds");
  return CGRectGetWidth(v7) * 0.5;
}

uint64_t sub_1001ED634()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E720(&qword_1008151F8, type metadata accessor for AppEventView, (uint64_t)&unk_100651BC0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_1001ED67C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_1008151F8, type metadata accessor for AppEventView, (uint64_t)&unk_100651BC0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_1001ED6DC(_QWORD *a1))(_QWORD *a1)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E720(&qword_1008151F8, type metadata accessor for AppEventView, (uint64_t)&unk_100651BC0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001EB20;
}

uint64_t sub_1001ED758()
{
  return sub_10000E720(&qword_1008151E0, type metadata accessor for AppEventView, (uint64_t)&unk_100651B20);
}

uint64_t sub_1001ED784()
{
  return sub_10000E720((unint64_t *)&unk_1008151E8, type metadata accessor for AppEventView, (uint64_t)&unk_100651B50);
}

void sub_1001ED7B0(void *a1, _QWORD *a2, double a3, double a4)
{
  int *v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;

  v8 = (int *)type metadata accessor for AppEventCardLayout(0);
  sub_100018ADC((uint64_t)a2 + v8[18], (uint64_t)v15, (uint64_t *)&unk_10080CE00);
  v9 = v16;
  sub_100010F2C((uint64_t)v15, (uint64_t *)&unk_10080CE00);
  v10 = objc_msgSend(a1, "traitCollection");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");
  v12 = static UIContentSizeCategory.>= infix(_:_:)(v11, UIContentSizeCategoryExtraExtraExtraLarge);

  if ((v12 & 1) != 0)
  {
    sub_1001ED92C(a2, (_QWORD *)((char *)a2 + v8[13]), (_QWORD *)((char *)a2 + v8[14]), (uint64_t)a2 + v8[15], (uint64_t)a2 + v8[16], v9 != 0, a1, a3, a4);
  }
  else
  {
    if (qword_100804A38 != -1)
      swift_once(&qword_100804A38, sub_1001187EC);
    v13 = type metadata accessor for SmallLockupLayout.Metrics(0);
    v14 = sub_10000EFC4(v13, (uint64_t)qword_100865298);
    sub_1001EE100(a3, a4, (uint64_t)a2, v14, v9 != 0, a1);
  }
}

double sub_1001ED92C(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, char a6, void *a7, double a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;

  v81 = a5;
  v82 = a4;
  v16 = type metadata accessor for FloatingPointRoundingRule(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804A40 != -1)
    swift_once(&qword_100804A40, sub_100118890);
  v20 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v21 = sub_10000EFC4(v20, (uint64_t)qword_1008652B0);
  v22 = sub_1001EE100(a8, a9, (uint64_t)a1, v21, a6 & 1, a7);
  v23 = a1[3];
  v24 = a1[4];
  sub_100010F08(a1, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23);
  AnyDimension.value(in:rounded:)(a7, v19, v23, v24);
  v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v83 = v16;
  v80 = v25;
  v26 = ((uint64_t (*)(char *, uint64_t))v25)(v19, v16);
  v27 = CGSize.subtracting(insets:)(v26);
  v29 = v28;
  v30 = a2[3];
  v31 = a2[4];
  sub_100010F08(a2, v30);
  v32 = dispatch thunk of Measurable.measurements(fitting:in:)(a7, v30, *(_QWORD *)(*(_QWORD *)(v31 + 8) + 8), v27, v29);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = (int *)type metadata accessor for AppEventCardLayout.Metrics(0);
  v40 = (_QWORD *)((char *)a1 + v39[7]);
  v41 = v40[3];
  v42 = v40[4];
  sub_100010F08(v40, v41);
  AnyDimension.topMargin(from:in:)(a7, v41, v42, v32, v34, v36, v38);
  *(double *)v86 = v34;
  AnyDimension.bottomMargin(from:in:)(a7, &type metadata for CGFloat, &protocol witness table for CGFloat, v32, v34, v36, v38);
  v44 = a3[3];
  v43 = a3[4];
  sub_100010F08(a3, v44);
  v45 = dispatch thunk of Measurable.measurements(fitting:in:)(a7, v44, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 8), v27, v29);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = (_QWORD *)((char *)a1 + v39[8]);
  v53 = v52[3];
  v54 = v52[4];
  sub_100010F08(v52, v53);
  AnyDimension.topMargin(from:in:)(a7, v53, v54, v45, v47, v49, v51);
  *(double *)v86 = v47;
  AnyDimension.bottomMargin(from:in:)(a7, &type metadata for CGFloat, &protocol witness table for CGFloat, v45, v47, v49, v51);
  sub_100018ADC(v82, (uint64_t)&v84, (uint64_t *)&unk_100810120);
  if (v85)
  {
    sub_100010E24(&v84, (uint64_t)v86);
    v56 = v87;
    v55 = v88;
    sub_100010F08(v86, v87);
    if ((dispatch thunk of LayoutView.hasContent.getter(v56, *(_QWORD *)(v55 + 8)) & 1) != 0)
    {
      v57 = v87;
      v58 = v88;
      sub_100010F08(v86, v87);
      v59 = dispatch thunk of Measurable.measurements(fitting:in:)(a7, v57, *(_QWORD *)(*(_QWORD *)(v58 + 8) + 8), v27, v29);
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v66 = (_QWORD *)((char *)a1 + v39[9]);
      v67 = v66[3];
      v68 = v66[4];
      sub_100010F08(v66, v67);
      AnyDimension.topMargin(from:in:)(a7, v67, v68, v59, v61, v63, v65);
      *(double *)&v84 = v61;
      AnyDimension.bottomMargin(from:in:)(a7, &type metadata for CGFloat, &protocol witness table for CGFloat, v59, v61, v63, v65);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v86);
  }
  else
  {
    sub_100010F2C((uint64_t)&v84, (uint64_t *)&unk_100810120);
  }
  v69 = v81;
  v70 = v80;
  v71 = (_QWORD *)((char *)a1 + v39[10]);
  v72 = v71[3];
  v73 = v71[4];
  sub_100010F08(v71, v72);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v72);
  AnyDimension.value(in:rounded:)(a7, v19, v72, v73);
  v70(v19, v83);
  sub_100018ADC(v69, (uint64_t)&v84, (uint64_t *)&unk_10080CE00);
  if (v85)
  {
    sub_100010E24(&v84, (uint64_t)v86);
    v74 = v87;
    v75 = v88;
    sub_100010F08(v86, v87);
    if ((dispatch thunk of LayoutView.isHidden.getter(v74, v75) & 1) == 0)
    {
      v76 = v87;
      v77 = v88;
      sub_100010F08(v86, v87);
      dispatch thunk of Measurable.measurements(fitting:in:)(a7, v76, *(_QWORD *)(v77 + 8), v27, v29);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v86);
  }
  else
  {
    sub_100010F2C((uint64_t)&v84, (uint64_t *)&unk_10080CE00);
  }
  return v22;
}

double sub_1001EDE68(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  _QWORD v33[5];
  _QWORD v34[6];

  v30 = a2;
  v31 = type metadata accessor for VerticalMarginsMeasurable(0);
  v29 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StackMeasurable.Axis(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StackMeasurable(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for StackMeasurable.Axis.vertical(_:), v9, v16);
  v19 = sub_10000DAF8((uint64_t *)&unk_100815200);
  v20 = swift_allocObject(v19, 112, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100640600;
  sub_10000EF80(a1, (uint64_t)v34);
  v22 = type metadata accessor for VerticalSpaceMeasurable(0, v21);
  *(_QWORD *)(v20 + 56) = v22;
  *(_QWORD *)(v20 + 64) = &protocol witness table for VerticalSpaceMeasurable;
  sub_1000119C0((_QWORD *)(v20 + 32));
  VerticalSpaceMeasurable.init(_:multiplier:)(v34, 1.0);
  sub_10000EF80(a1 + 40, (uint64_t)v34);
  *(_QWORD *)(v20 + 96) = v22;
  *(_QWORD *)(v20 + 104) = &protocol witness table for VerticalSpaceMeasurable;
  sub_1000119C0((_QWORD *)(v20 + 72));
  VerticalSpaceMeasurable.init(_:multiplier:)(v34, 1.0);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v13, 1, v20);
  v34[3] = v14;
  v34[4] = &protocol witness table for StackMeasurable;
  v23 = sub_1000119C0(v34);
  (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v23, v18, v14);
  v24 = *(_QWORD *)(a1 + 136);
  v33[3] = &type metadata for CGFloat;
  v33[4] = &protocol witness table for CGFloat;
  v33[0] = v24;
  v25 = *(_QWORD *)(a1 + 152);
  v32[3] = &type metadata for CGFloat;
  v32[4] = &protocol witness table for CGFloat;
  v32[0] = v25;
  VerticalMarginsMeasurable.init(child:topMargin:bottomMargin:skipIfEmpty:shouldMeasureToBaseline:)(v34, v33, v32, 0, 0);
  v26 = VerticalMarginsMeasurable.measurements(fitting:in:)(v30, a3, a4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v31);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  return v26;
}

double sub_1001EE100(double a1, double a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  __n128 v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t inited;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  __int128 v39;
  void *v40;
  void *v41;
  _BYTE v42[72];

  v34 = type metadata accessor for StackMeasurable.Axis(0);
  v33 = *(_QWORD *)(v34 - 8);
  v11 = __chkstk_darwin(v34);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for StackMeasurable(0, v11);
  v35 = *(_QWORD *)(v36 - 8);
  v14 = __chkstk_darwin(v36);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for VerticalSpaceMeasurable(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppEventCardLayout.Metrics(0);
  v21 = AspectRatio.height(fromWidth:)(a1);
  v37 = a6;
  v22 = objc_msgSend(a6, "traitCollection");
  sub_10020FBC4(a4, (uint64_t)v22, a1, a2);
  v24 = v23;

  v38 = _swiftEmptyArrayStorage;
  v25 = sub_10000DAF8((uint64_t *)&unk_100815200);
  inited = swift_initStackObject(v25, v42);
  *(_OWORD *)(inited + 16) = xmmword_100640720;
  v40 = &type metadata for CGFloat;
  v41 = &protocol witness table for CGFloat;
  *(double *)&v39 = v21;
  *(_QWORD *)(inited + 56) = v17;
  *(_QWORD *)(inited + 64) = &protocol witness table for VerticalSpaceMeasurable;
  sub_1000119C0((_QWORD *)(inited + 32));
  VerticalSpaceMeasurable.init(_:multiplier:)(&v39, 1.0);
  sub_10001A19C(inited);
  if ((a5 & 1) != 0)
  {
    v40 = &type metadata for CGFloat;
    v41 = &protocol witness table for CGFloat;
    *(_QWORD *)&v39 = ceil(v24);
    VerticalSpaceMeasurable.init(_:multiplier:)(&v39, 1.0);
    v27 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
    {
      v27 = sub_1003D99E4(0, v27[2] + 1, 1, v27);
      v38 = v27;
    }
    v29 = v27[2];
    v28 = v27[3];
    if (v29 >= v28 >> 1)
    {
      v27 = sub_1003D99E4((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
      v38 = v27;
    }
    v40 = (void *)v17;
    v41 = &protocol witness table for VerticalSpaceMeasurable;
    v30 = sub_1000119C0(&v39);
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v30, v20, v17);
    v27[2] = v29 + 1;
    sub_100010E24(&v39, (uint64_t)&v27[5 * v29 + 4]);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v13, enum case for StackMeasurable.Axis.vertical(_:), v34);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v13, 1, v38);
  v31 = StackMeasurable.measurements(fitting:in:)(v37, a1, a2);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
  return v31;
}

uint64_t sub_1001EE4B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001EE4DC()
{
  uint64_t v0;

  return sub_1001ED0BC(*(_QWORD *)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_1001EE4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001EE4F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001EE504()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001EE528()
{
  uint64_t v0;
  id result;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24)+ OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer), "setEnabled:", 1);
  return result;
}

char *sub_1001EE554()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  double left;
  double bottom;
  double right;
  char *v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_clickAction];
  v3 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_initialLongPressLocation];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = objc_allocWithZone((Class)type metadata accessor for AppPromotionFormattedDateView());
  v6 = v0;
  v7 = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView] = v7;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventCardView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer] = v8;

  v21.receiver = v6;
  v21.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v13 = (char *)v9;
  objc_msgSend(v13, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v13, "setClipsToBounds:", 0);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView];
  *(_QWORD *)(v14 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_delegate + 8) = &off_100744C48;
  swift_unknownObjectWeakAssign(v15);
  objc_msgSend(v13, "addSubview:", v14);
  v16 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
  objc_msgSend(v13, "addSubview:", v16);
  v17 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer];
  objc_msgSend(v17, "addTarget:action:", v13, "stateChangedFor:");
  objc_msgSend(v17, "setMinimumPressDuration:", 0.1);
  objc_msgSend(v17, "setDelegate:", v13);
  v18 = v16;
  v19 = v17;
  objc_msgSend(v18, "addGestureRecognizer:", v19);

  return v13;
}

void sub_1001EE80C(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_1001EE854(a1, a2, 0xD000000000000010, 0x8000000100685E60, (SEL *)&selRef_interacted_, a3);
}

void sub_1001EE830(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_1001EE854(a1, a2, 0xD000000000000016, 0x8000000100685E40, (SEL *)&selRef_adMarkerInteracted_, a3);
}

void sub_1001EE854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, __n128 a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  NSString v21;
  uint64_t v22;
  SEL *v23;
  _QWORD v24[4];

  v22 = a4;
  v23 = a5;
  v8 = v6;
  v11 = type metadata accessor for OSLogger(0, a6);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806978 != -1)
    swift_once(&qword_100806978, sub_100503374);
  v15 = sub_10000EFC4(v11, (uint64_t)qword_10086AB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100640F90;
  static LogMessage.identity(_:)(v8);
  LogMessage.init(stringLiteral:)(a3, v22);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v24[3] = &type metadata for String;
  v24[0] = a1;
  v24[1] = a2;
  swift_bridgeObjectRetain(a2);
  static LogMessage.safe(_:)(v24);
  sub_10001282C((uint64_t)v24);
  Logger.info(_:)(v18, v11, &protocol witness table for OSLogger);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v19);
  v20 = *(void **)(v8 + 16);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, *v23, v21);

}

void sub_1001EEA4C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void **v34;
  __n128 v35;
  void *v36;
  NSString v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  void **aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  void *v51;
  uint64_t v52;
  uint64_t v53;

  v45 = a5;
  v46 = a6;
  v44 = a2;
  v47 = a1;
  v10 = type metadata accessor for OSLogger(0, a7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AdvertActionMetrics.AdvertType(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v7;
  v19 = *(_QWORD *)(*(_QWORD *)(v7 + 24) + 24);
  ObjectType = swift_getObjectType();
  v43 = a3;
  v21 = dispatch thunk of AppStateController.stateMachine(forApp:)(a3, ObjectType, v19);
  v23 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a4, v15);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v24 == enum case for AdvertActionMetrics.AdvertType.standardApp(_:))
  {
    v25 = sub_100354E24(v21, v23);
LABEL_5:
    v41 = (void **)v25;
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  if (v24 == enum case for AdvertActionMetrics.AdvertType.arcadeApp(_:))
  {
    v25 = sub_100354C40(v21, v23);
    goto LABEL_5;
  }
  v26 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v26);
  v41 = 0;
LABEL_7:
  if (qword_100806978 != -1)
    swift_once(&qword_100806978, sub_100503374);
  v27 = sub_10000EFC4(v10, (uint64_t)qword_10086AB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v27, v10);
  v28 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v29 = type metadata accessor for LogMessage(0);
  v30 = swift_allocObject(v28, ((*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80))+ 8 * *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) | 7);
  *(_OWORD *)(v30 + 16) = xmmword_100640FA0;
  v31 = v42;
  static LogMessage.identity(_:)(v42);
  LogMessage.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100685E00);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v51 = &type metadata for String;
  v40 = v11;
  aBlock = v47;
  v49 = v44;
  swift_bridgeObjectRetain(v44);
  static LogMessage.safe(_:)(&aBlock);
  sub_10001282C((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)(0x3A64496D616461, 0xE700000000000000);
  v32 = type metadata accessor for AdamId(0);
  v51 = (void *)v32;
  v33 = sub_1000119C0(&aBlock);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v33, v43, v32);
  static LogMessage.traceableSensitive(_:)(&aBlock);
  sub_10001282C((uint64_t)&aBlock);
  LogMessage.init(stringLiteral:)(0x3A6574617473, 0xE600000000000000);
  v51 = &type metadata for Int;
  v34 = v41;
  aBlock = v41;
  static LogMessage.traceableSensitive(_:)(&aBlock);
  sub_10001282C((uint64_t)&aBlock);
  Logger.info(_:)(v30, v10, &protocol witness table for OSLogger);
  v35 = swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v14, v10, v35);
  v36 = *(void **)(v31 + 16);
  v37 = String._bridgeToObjectiveC()();
  v38 = v46;
  v52 = v45;
  v53 = v46;
  aBlock = _NSConcreteStackBlock;
  v49 = 1107296256;
  v50 = sub_1000924A0;
  v51 = &unk_100744F08;
  v39 = _Block_copy(&aBlock);
  swift_retain(v38);
  objc_msgSend(v36, "getApp:buttonState:completion:", v37, v34, v39, swift_release().n128_f64[0]);
  _Block_release(v39);

}

uint64_t sub_1001EEE84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SearchAdsAdvertInteractionMetricsReporter()
{
  return objc_opt_self(_TtC20ProductPageExtension41SearchAdsAdvertInteractionMetricsReporter);
}

void sub_1001EEED0(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_1001EE854(a1, a2, 0xD000000000000010, 0x8000000100685E60, (SEL *)&selRef_interacted_, a3);
}

void sub_1001EEF10(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_1001EE854(a1, a2, 0xD000000000000016, 0x8000000100685E40, (SEL *)&selRef_adMarkerInteracted_, a3);
}

void sub_1001EEF50(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  sub_1001EEA4C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001EEF70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001EEF80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for DynamicTypeLinkedTextView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008152D0;
  if (!qword_1008152D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicTypeLinkedTextView);
  return result;
}

uint64_t sub_1001EEFC4(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100865EE0);
}

double sub_1001EF018()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  UIAccessibilityTraits *v10;
  double result;

  v1 = v0;
  v2 = LinkableText.styledText.getter();
  v3 = LinkableText.linkedSubstrings.getter();
  sub_1001FDB34(v3, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))sub_1001F12F0);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v6 = *(_QWORD *)&v1[qword_1008152C8];
  *(_QWORD *)&v1[qword_1008152C8] = v2;
  swift_release(v6);
  v7 = qword_1008152C0;
  v8 = *(_QWORD *)&v1[qword_1008152C0];
  *(_QWORD *)&v1[qword_1008152C0] = v5;
  swift_retain(v2);
  swift_bridgeObjectRetain(v5);
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)&v1[v7] + 16))
    v10 = &UIAccessibilityTraitLink;
  else
    v10 = &UIAccessibilityTraitStaticText;
  objc_msgSend(v1, "setAccessibilityTraits:", *v10, v9);
  sub_1001EF8A4();
  swift_release(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_1001EF110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  UIAccessibilityTraits *v20;
  double result;
  uint64_t v22;

  v4 = v3;
  v8 = type metadata accessor for StyledText.MediaType(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v12 + 104))(v11, enum case for StyledText.MediaType.plainText(_:), v9);
  v13 = type metadata accessor for StyledText(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = swift_bridgeObjectRetain(a2);
  v15 = StyledText.init(rawText:rawTextType:)(a1, a2, v11, v14);
  v16 = *(_QWORD *)&v4[qword_1008152C8];
  *(_QWORD *)&v4[qword_1008152C8] = v15;
  swift_release(v16);
  v17 = qword_1008152C0;
  v18 = *(_QWORD *)&v4[qword_1008152C0];
  *(_QWORD *)&v4[qword_1008152C0] = a3;
  swift_retain(v15);
  swift_bridgeObjectRetain(a3);
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)&v4[v17] + 16))
    v20 = &UIAccessibilityTraitLink;
  else
    v20 = &UIAccessibilityTraitStaticText;
  objc_msgSend(v4, "setAccessibilityTraits:", *v20, v19);
  sub_1001EF8A4();
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_1001EF254(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  objc_super v11;
  objc_super v12;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v13, "textColor");
  v12.receiver = v2;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, "setTextColor:", a1);
  v11.receiver = v2;
  v11.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v11, "textColor");
  if (v6)
  {
    v7 = v6;
    if (v5)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v8 = v5;
      v9 = v7;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
        goto LABEL_9;
    }
    else
    {

    }
  }
  else if (!v5)
  {
    goto LABEL_10;
  }
  sub_1001EF8A4();
  v8 = v5;
LABEL_9:

LABEL_10:
}

void *sub_1001EF36C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

uint64_t sub_1001EF48C@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v16[6];
  uint64_t (*v17)(_QWORD *);

  v17 = (uint64_t (*)(_QWORD *))result;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v14 = a3;
    swift_bridgeObjectRetain(a2);
    v15 = a2;
    v6 = (uint64_t *)(a2 + 72);
    while (1)
    {
      v7 = *(v6 - 5);
      v8 = *(v6 - 4);
      v9 = *(v6 - 3);
      v10 = *(v6 - 2);
      v11 = *(v6 - 1);
      v12 = *v6;
      v16[0] = v7;
      v16[1] = v8;
      v16[2] = v9;
      v16[3] = v10;
      v16[4] = v11;
      v16[5] = v12;
      swift_bridgeObjectRetain(v8);
      swift_retain(v9);
      swift_retain(v10);
      swift_bridgeObjectRetain(v12);
      v13 = v17(v16);
      if (v3)
      {
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v12);
        swift_release(v10);
        swift_release(v9);
        return swift_bridgeObjectRelease(v8);
      }
      if ((v13 & 1) != 0)
        break;
      v6 += 6;
      swift_bridgeObjectRelease(v12);
      swift_release(v10);
      swift_release(v9);
      swift_bridgeObjectRelease(v8);
      if (!--v4)
      {
        result = swift_bridgeObjectRelease(v15);
        v7 = 0;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        goto LABEL_10;
      }
    }
    result = swift_bridgeObjectRelease(v15);
LABEL_10:
    a3 = v14;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
  }
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v11;
  a3[5] = v12;
  return result;
}

id sub_1001EF608()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  UIAccessibilityTraits *v4;

  objc_msgSend(v0, "setAttributedText:", 0);
  v1 = *(_QWORD *)&v0[qword_1008152C8];
  *(_QWORD *)&v0[qword_1008152C8] = 0;
  swift_release(v1);
  v2 = qword_1008152C0;
  v3 = *(_QWORD *)&v0[qword_1008152C0];
  *(_QWORD *)&v0[qword_1008152C0] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  if (*(_QWORD *)(*(_QWORD *)&v0[v2] + 16))
    v4 = &UIAccessibilityTraitLink;
  else
    v4 = &UIAccessibilityTraitStaticText;
  objc_msgSend(v0, "setAccessibilityTraits:", *v4);
  return objc_msgSend(v0, "setTextContainerInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

uint64_t sub_1001EF6B4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t (*v11)(char *);
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - v7;
  v9 = type metadata accessor for DynamicTypeTextView(0);
  v10 = (void (*)(void))method lookup function for DynamicTypeTextView(v9, &method descriptor for DynamicTypeTextView.directionalTextAlignment.getter);
  v10();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, a1, v2);
  v11 = (uint64_t (*)(char *))method lookup function for DynamicTypeTextView(v9, &method descriptor for DynamicTypeTextView.directionalTextAlignment.setter);
  v12 = v11(v5);
  ((void (*)(uint64_t))v10)(v12);
  v13 = sub_10000E720((unint64_t *)&unk_1008155E0, (uint64_t (*)(uint64_t))&type metadata accessor for DirectionalTextAlignment, (uint64_t)&protocol conformance descriptor for DirectionalTextAlignment);
  v14 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v13);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v5, v2);
  if ((v14 & 1) == 0)
    sub_1001EF8A4();
  v15(a1, v2);
  return ((uint64_t (*)(char *, uint64_t))v15)(v8, v2);
}

id sub_1001EF818(void *a1, uint64_t a2)
{
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v3, "textColor");
}

void sub_1001EF85C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1001EF254(a3);

}

uint64_t sub_1001EF8A4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  __n128 v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of DynamicTypeTextView.fontUseCase.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_100010F2C((uint64_t)v4, (uint64_t *)&unk_100808F50);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  v11 = *(_QWORD *)&v0[qword_1008152C8];
  if (v11)
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    v12 = swift_retain(v11);
    v13 = (void *)dispatch thunk of DynamicTypeTextView.traitCollectionForFontUseCases.getter(v12);
    v14 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v9, v13);

    sub_1001F0248(v11, v14);
    v16 = v15;
    objc_msgSend(v1, "setAttributedText:", v15);

    v17 = dispatch thunk of StyledText.plainText.getter();
    v19 = v18;
    v20 = String.languageAwareOutsets(whenUsedWith:)(v14, v17, v18);
    v22 = v21;
    swift_bridgeObjectRelease(v19);
    objc_msgSend(v1, "setTextContainerInset:", v20, 0.0, v22, 0.0);
    swift_release(v11);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_1001EFA90(void *a1, uint64_t a2)
{
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v3, "textAlignment");
}

void sub_1001EFACC(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  id v6;
  id v7;
  objc_super v8;
  objc_super v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v10.receiver = a1;
  v10.super_class = ObjectType;
  v6 = a1;
  v7 = objc_msgSendSuper2(&v10, "textAlignment");
  v9.receiver = v6;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, "setTextAlignment:", a3);
  v8.receiver = v6;
  v8.super_class = ObjectType;
  if (objc_msgSendSuper2(&v8, "textAlignment") != v7)
    sub_1001EF8A4();

}

uint64_t sub_1001EFB68()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = type metadata accessor for DynamicTypeTextView(0);
  v1 = (uint64_t (*)(void))method lookup function for DynamicTypeTextView(v0, &method descriptor for DynamicTypeTextView.directionalTextAlignment.getter);
  return v1();
}

void (*sub_1001EFB9C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  void (*v8)(void);

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for DirectionalTextAlignment(0);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v7 = type metadata accessor for DynamicTypeTextView(0);
  v8 = (void (*)(void))method lookup function for DynamicTypeTextView(v7, &method descriptor for DynamicTypeTextView.directionalTextAlignment.getter);
  v8();
  return sub_1001EFC30;
}

void sub_1001EFC30(uint64_t a1, char a2)
{
  _QWORD *v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(char **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1001EF6B4(v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    sub_1001EF6B4(*(char **)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

void sub_1001EFCBC(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "tintColorDidChange");
  sub_1001EF8A4();

}

void sub_1001EFD10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  Swift::String v11;
  void *object;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[5];
  uint64_t v16;
  unint64_t v17;

  v16 = 0x2F3A6E6F69746361;
  v17 = 0xE90000000000002FLL;
  swift_retain_n(a3, 2);
  swift_retain_n(a4, 2);
  swift_bridgeObjectRetain(a2);
  v10 = Action.id.getter(v15);
  v11._countAndFlagsBits = AnyHashable.description.getter(v10);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  sub_100018968((uint64_t)v15);
  swift_release(a3);
  swift_release(a4);
  v13 = v16;
  v14 = v17;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  a5[4] = v13;
  a5[5] = v14;
}

uint64_t sub_1001EFDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _BYTE v19[32];
  _BYTE v20[24];
  _QWORD v21[6];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v5 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(_QWORD *)(result + qword_1008152C0);
    __chkstk_darwin(result);
    *(&v18 - 2) = a3;
    swift_bridgeObjectRetain(v10);
    sub_1001EF48C((uint64_t)sub_1001FE49C, v10, v21);

    swift_bridgeObjectRelease(v10);
    result = sub_1001FDE4C((uint64_t)v21, (uint64_t)&v22);
    if (*((_QWORD *)&v22 + 1))
    {
      v11 = v23;
      v12 = v24;
      v26 = v25;
      v27 = v22;
      v13 = v24 + qword_10086B3B0;
      swift_beginAccess(v24 + qword_10086B3B0, v19, 0, 0);
      sub_100018ADC(v13, (uint64_t)v7, (uint64_t *)&unk_100809290);
      v14 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
      {
        sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_100809290);
      }
      else
      {
        swift_retain(v11);
        sub_10032D5C0(v16, v12, (uint64_t)v7);
        swift_release();
        v17 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v7, v14, v17);
      }
      v28 = v27;
      sub_10009F3FC((uint64_t)&v28);
      swift_release();
      swift_release();
      v29 = v26;
      return sub_10009F3FC((uint64_t)&v29);
    }
  }
  return result;
}

id sub_1001EFFF8(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = a1;
  v12 = sub_1001FE190((uint64_t)v9, v10);

  return v12;
}

id sub_1001F0070()
{
  return 0;
}

BOOL sub_1001F0078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _BYTE v16[24];

  v1 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD **)(v0 + qword_1008152C0);
  v5 = v4[2];
  if (v5)
  {
    v6 = v4[5];
    v7 = v4[6];
    v8 = v4[7];
    v9 = v4[9];
    v10 = v8 + qword_10086B3B0;
    swift_beginAccess(v8 + qword_10086B3B0, v16, 0, 0);
    sub_100018ADC(v10, (uint64_t)v3, (uint64_t *)&unk_100809290);
    v11 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    {
      swift_bridgeObjectRetain(v9);
      sub_100010F2C((uint64_t)v3, (uint64_t *)&unk_100809290);
    }
    else
    {
      swift_retain_n(v7, 2);
      swift_bridgeObjectRetain(v6);
      swift_retain(v8);
      swift_bridgeObjectRetain(v9);
      sub_10032D5C0(v7, v8, (uint64_t)v3);
      swift_release();
      v13 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v3, v11, v13);
      swift_bridgeObjectRelease(v9);
      swift_release();
      swift_release();
      v9 = v6;
    }
    swift_bridgeObjectRelease(v9);
  }
  return v5 != 0;
}

BOOL sub_1001F0218(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_1001F0078();

  return v2;
}

void sub_1001F0248(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  NSString *v11;
  id v12;
  NSString *v13;
  id v14;
  unint64_t v15;
  NSString *v16;
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  __n128 v20;
  Swift::OpaquePointer v21;
  NSAttributedString v22;
  NSAttributedString v23;
  id v24;
  Class isa;
  id v26;
  char **v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *i;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  Class v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  objc_class *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  NSAttributedStringKey v65;
  Class v66;
  uint64_t v67;
  id v68;
  _OWORD v69[2];
  __int128 aBlock;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v72;
  uint64_t (*v73)();
  uint64_t v74;
  objc_super v75;
  char v76[112];
  void *v77;
  objc_super v78;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  v78.receiver = v2;
  v78.super_class = ObjectType;
  v7 = objc_msgSend(v6, "setAlignment:", objc_msgSendSuper2(&v78, "textAlignment"));
  objc_msgSend(v6, "setLineBreakMode:", dispatch thunk of DynamicTypeTextView.lineBreakMode.getter(v7));
  v8 = sub_10000DAF8(&qword_100815380);
  inited = swift_initStackObject(v8, v76);
  *(_OWORD *)(inited + 16) = xmmword_100640600;
  *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
  v10 = sub_100018B6C(0, &qword_100814180, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  *(_QWORD *)(inited + 104) = sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  *(_QWORD *)(inited + 80) = a2;
  v11 = NSParagraphStyleAttributeName;
  v12 = v6;
  v13 = NSFontAttributeName;
  v14 = a2;
  v15 = sub_100509728(inited);
  v77 = (void *)v15;
  v75.receiver = v3;
  v75.super_class = ObjectType;
  v16 = NSForegroundColorAttributeName;
  v17 = objc_msgSendSuper2(&v75, "textColor");
  if (v17)
  {
    v18 = v17;
    v72 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    *(_QWORD *)&aBlock = v18;
    sub_10004EA50(&aBlock, v69);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
    sub_1001F9368(v69, v16, isUniquelyReferenced_nonNull_native, v20);
    v21._rawValue = (void *)v15;
    v77 = (void *)v15;

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_1001F378C((uint64_t)v16, &aBlock);

    sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
    v21._rawValue = v77;
  }
  sub_100018B6C(0, (unint64_t *)&unk_100815388, NSMutableAttributedString_ptr);
  v22.super.isa = (Class)dispatch thunk of StyledText.asAttributedString(using:)(v14);
  swift_bridgeObjectRetain(v21._rawValue);
  v23.super.isa = NSAttributedString.init(attributedString:defaultAttributes:)(v22, v21).super.isa;
  v24 = v12;
  isa = v23.super.isa;
  v26 = v24;
  v27 = &selRef_setEffect_;
  v28 = -[objc_class fullRange](v23.super.isa, "fullRange");
  -[objc_class addAttribute:value:range:](v23.super.isa, "addAttribute:value:range:", v11, v26, v28, v29);

  v30 = swift_allocObject(&unk_100744FF0, 24, 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)&v69[0] = 0;
  v32 = *(_QWORD *)&v3[qword_1008152C0];
  v33 = *(_QWORD *)(v32 + 16);
  v63 = v14;
  v64 = v3;
  if (v33)
  {
    v61 = v30;
    v62 = v26;
    swift_bridgeObjectRetain(v32);
    v65 = NSLinkAttributeName;
    v66 = v23.super.isa;
    v67 = v33 - 1;
    v60 = v34;
    for (i = (uint64_t *)(v34 + 72); ; i += 6)
    {
      v36 = *(i - 4);
      v37 = *(i - 3);
      v38 = *(i - 2);
      v39 = *i;
      swift_bridgeObjectRetain(v36);
      swift_retain(v37);
      swift_retain(v38);
      swift_bridgeObjectRetain(v39);
      v40 = sub_1001F09A0((void **)v69, isa);
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v40, "rangeOfString:options:", v41, 4);
      v44 = v43;

      if (v42 == (id)NSNotFound.getter())
      {
        swift_bridgeObjectRelease(v39);
        swift_release(v38);
        swift_release(v37);
        swift_bridgeObjectRelease(v36);
        isa = v66;
        v45 = v67;
        if (!v67)
          goto LABEL_11;
      }
      else
      {
        v46 = String._bridgeToObjectiveC()();
        isa = v66;
        -[objc_class addAttribute:value:range:](v66, "addAttribute:value:range:", NSLinkAttributeName, v46, v42, v44);
        swift_bridgeObjectRelease(v39);
        swift_release(v38);
        swift_release(v37);
        swift_bridgeObjectRelease(v36);

        v45 = v67;
        if (!v67)
        {
LABEL_11:
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(v60).n128_u64[0];
          v30 = v61;
          v26 = v62;
          v27 = &selRef_setEffect_;
          goto LABEL_13;
        }
      }
      v67 = v45 - 1;
    }
  }
  v65 = NSLinkAttributeName;
LABEL_13:
  v68 = objc_msgSend(isa, v27[293], v31);
  v48 = v47;
  v49 = isa;
  v50 = (_QWORD *)swift_allocObject(&unk_100745018, 56, 7);
  v50[2] = v64;
  v50[3] = v30;
  v51 = v30;
  v50[4] = v63;
  v50[5] = &v77;
  v50[6] = v49;
  v52 = swift_allocObject(&unk_100745040, 32, 7);
  *(_QWORD *)(v52 + 16) = sub_1001FDDDC;
  *(_QWORD *)(v52 + 24) = v50;
  v73 = sub_100028048;
  v74 = v52;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v71 = sub_1001F0F90;
  v72 = &unk_100745058;
  v53 = _Block_copy(&aBlock);
  v54 = v74;
  v55 = v63;
  v56 = v64;
  swift_retain(v51);
  v57 = v49;
  swift_retain(v52);
  -[objc_class enumerateAttribute:inRange:options:usingBlock:](v57, "enumerateAttribute:inRange:options:usingBlock:", v65, v68, v48, 0, v53, swift_release(v54).n128_f64[0]);
  _Block_release(v53);
  LOBYTE(v53) = swift_isEscapingClosureAtFileLocation(v52, "", 108, 254, 80, 1);
  swift_release(v52);
  if ((v53 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "initWithAttributedString:", v57);

    v58 = *(void **)&v69[0];
    swift_release(v51);

    v59 = v77;
    swift_release(v50);
    swift_bridgeObjectRelease(v59);
  }
}

uint64_t sub_1001F0828()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[5];

  v0 = Action.id.getter(v10);
  v1 = AnyHashable.description.getter(v0);
  v3 = v2;
  v4 = sub_100018968((uint64_t)v10);
  v5 = URL.host.getter(v4);
  if (v6)
  {
    v7 = v6;
    if (v1 == v5 && v6 == v3)
    {
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v7);
      v8 = 1;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v5, v6, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v3);
    v8 = 0;
  }
  return v8 & 1;
}

id sub_1001F0900(uint64_t a1, uint64_t a2)
{
  void *v2;
  void **v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  _BYTE v9[24];

  v3 = (void **)(a1 + 16);
  v2 = *(void **)(a1 + 16);
  if (v2)
  {
    v4 = *(id *)(a1 + 16);
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", a2, 1);
    swift_beginAccess(v3, v9, 1, 0);
    v6 = *v3;
    *v3 = v5;
    v4 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v4;
}

id sub_1001F09A0(void **a1, id a2)
{
  void *v2;
  id v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  void *v11;
  id v12;
  _BYTE v14[24];

  v2 = *a1;
  if (*a1)
  {
    v3 = *a1;
  }
  else
  {
    v5 = objc_msgSend(a2, "string");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v7 = v6;

    v8 = objc_allocWithZone((Class)NSString);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v10 = objc_msgSend(v8, "initWithString:", v9);

    swift_beginAccess(a1, v14, 1, 0);
    v11 = *a1;
    *a1 = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

void sub_1001F0A84(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, id a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  NSString *v37;
  char isUniquelyReferenced_nonNull_native;
  __n128 v39;
  uint64_t v40;
  id v41;
  NSString v42;
  id v43;
  id v44;
  id v45;
  Class isa;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  __int128 v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v53 = a2;
  v15 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018ADC(a1, (uint64_t)&v60, &qword_100808F20);
  if (!v62)
  {
    v25 = &qword_100808F20;
    v26 = (char *)&v60;
    goto LABEL_6;
  }
  if ((swift_dynamicCast(&v58, &v60, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return;
  v52 = a3;
  v23 = v59;
  URL.init(string:)(v58, v59);
  v24 = swift_bridgeObjectRelease(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48))(v17, 1, v19, v24) != 1)
  {
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v17, v19);
    v28 = *(_QWORD *)(a5 + qword_1008152C0);
    __chkstk_darwin(v27);
    *(&v49 - 2) = (uint64_t)v22;
    swift_bridgeObjectRetain(v28);
    sub_1001EF48C((uint64_t)sub_1001FDE30, v28, &v58);
    swift_bridgeObjectRelease(v28);
    v29 = sub_1001FDE4C((uint64_t)&v58, (uint64_t)&v60);
    if (!*((_QWORD *)&v60 + 1))
      goto LABEL_17;
    v30 = v61;
    v51 = v62;
    v64 = v63;
    v65 = v60;
    v31 = Action.artwork.getter(v29);
    if (v31)
    {
      v32 = v31;
      v33 = sub_1001F0900(a6, a7);
      if ((dispatch thunk of Artwork.isSystemImage.getter(v33) & 1) != 0)
      {
        v34 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v32, v33, 1);
      }
      else
      {
        if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) == 0)
        {
          swift_release(v32);

          goto LABEL_19;
        }
        v34 = sub_1004AF5F4(v32, v33);
      }
      v35 = v34;
      swift_release(v32);

      if (v35)
      {
        v50 = v30;
        v36 = *a8;
        v66 = v64;
        v57 = &type metadata for String;
        v56 = v64;
        sub_10004EA50(&v56, v55);
        swift_bridgeObjectRetain(v36);
        v37 = NSLinkAttributeName;
        sub_10009F390((uint64_t)&v66);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
        v54 = v36;
        sub_1001F9368(v55, v37, isUniquelyReferenced_nonNull_native, v39);
        v40 = v54;

        swift_bridgeObjectRelease(0x8000000000000000);
        v41 = objc_allocWithZone((Class)NSMutableAttributedString);
        v42 = String._bridgeToObjectiveC()();
        v43 = objc_msgSend(v41, "initWithString:", v42);

        v44 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v35);
        v45 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v44);

        objc_msgSend(v43, "appendAttributedString:", v45);
        type metadata accessor for Key(0);
        sub_10000E720((unint64_t *)&qword_100807520, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10064059C);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v47 = objc_msgSend(v43, "fullRange", swift_bridgeObjectRelease(v40).n128_f64[0]);
        objc_msgSend(v43, "addAttributes:range:", isa, v47, v48);

        if (__OFADD__(v53, v52))
        {
          __break(1u);
          return;
        }
        objc_msgSend(a9, "insertAttributedString:atIndex:", v43, v53 + v52);

        v56 = v65;
        sub_10009F3FC((uint64_t)&v56);
        swift_release(v51);
        swift_release(v50);
        sub_10009F3FC((uint64_t)&v66);

LABEL_17:
        (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
        return;
      }
    }
LABEL_19:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v55[0] = v65;
    sub_10009F3FC((uint64_t)v55);
    swift_release(v51);
    swift_release(v30);
    v56 = v64;
    sub_10009F3FC((uint64_t)&v56);
    return;
  }
  v25 = (uint64_t *)&unk_1008092A0;
  v26 = v17;
LABEL_6:
  sub_100010F2C((uint64_t)v26, v25);
}

uint64_t sub_1001F0F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain(a2);
  v9(&v11, a3, a4, a5);
  return sub_100010F2C((uint64_t)&v11, &qword_100808F20);
}

void sub_1001F1020()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.DynamicTypeLinkedTextView", 46, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_1001F104C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1008152C0));
  return swift_release(*(_QWORD *)(v0 + qword_1008152C8));
}

uint64_t sub_1001F1078(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1008152C0));
  return swift_release(*(_QWORD *)(a1 + qword_1008152C8));
}

uint64_t sub_1001F10B0()
{
  return type metadata accessor for DynamicTypeLinkedTextView(0);
}

uint64_t destroy for DynamicTypeLinkedTextView.LinkItem(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for DynamicTypeLinkedTextView.LinkItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for DynamicTypeLinkedTextView.LinkItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

_QWORD *assignWithTake for DynamicTypeLinkedTextView.LinkItem(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicTypeLinkedTextView.LinkItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicTypeLinkedTextView.LinkItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicTypeLinkedTextView.LinkItem()
{
  return &type metadata for DynamicTypeLinkedTextView.LinkItem;
}

void sub_1001F12F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  sub_1001EFD10(a1, a2, a3, v4, a4);
}

uint64_t sub_1001F12F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3288(a1, a2, a3, (_QWORD *)*v3, &qword_1008154A8, &qword_1008154B0);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1324(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F24F0(a1, a2, a3, (_QWORD *)*v3, &qword_1008153C0, &qword_1008153C8);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1350(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3288(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1008154E0, (uint64_t *)&unk_100812F70);
  *v3 = result;
  return result;
}

uint64_t sub_1001F137C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F17EC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1398(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3288(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100815200, &qword_100808060);
  *v3 = result;
  return result;
}

uint64_t sub_1001F13C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F1974(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F13E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F1AE0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F13FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F298C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100815450, &qword_10080E748);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1428(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F298C(a1, a2, a3, (_QWORD *)*v3, &qword_100815418, &qword_100815420);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1454(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F1C64(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1470(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F35AC(a1, a2, a3, (_QWORD *)*v3, &qword_100815438, (uint64_t (*)(_QWORD))&type metadata accessor for AdamId);
  *v3 = result;
  return result;
}

uint64_t sub_1001F149C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F1DEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F14B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F20DC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F14D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F2238(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F14F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3288(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1008153F8, &qword_10080E910);
  *v3 = result;
  return result;
}

uint64_t sub_1001F151C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F1F74(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F1538(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F2394(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1554(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F24F0(a1, a2, a3, (_QWORD *)*v3, &qword_100815508, &qword_100815510);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1580(char a1, int64_t a2, char a3)
{
  double **v3;
  uint64_t result;

  result = sub_1001F267C(a1, a2, a3, *v3);
  *v3 = (double *)result;
  return result;
}

uint64_t sub_1001F159C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F2804(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F15B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F298C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100815618, &qword_100809550);
  *v3 = result;
  return result;
}

uint64_t sub_1001F15E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F35AC(a1, a2, a3, (_QWORD *)*v3, &qword_1008153D8, (uint64_t (*)(_QWORD))&type metadata accessor for SponsoredSearchAdvert);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1610(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F298C(a1, a2, a3, (_QWORD *)*v3, &qword_10080DC40, &qword_1008155F0);
  *v3 = result;
  return result;
}

uint64_t sub_1001F163C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F2B6C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F1658(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F2CEC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F1674(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001F2E48(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001F1690(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F35AC(a1, a2, a3, (_QWORD *)*v3, &qword_100815560, type metadata accessor for GuidedSearchTokenPaletteView.Token);
  *v3 = result;
  return result;
}

uint64_t sub_1001F16BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3288(a1, a2, a3, (_QWORD *)*v3, &qword_1008155B0, &qword_1008155B8);
  *v3 = result;
  return result;
}

uint64_t sub_1001F16E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F35AC(a1, a2, a3, (_QWORD *)*v3, &qword_10081E8B0, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1714(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F2FC8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1730(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3120(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F174C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F3288(a1, a2, a3, (_QWORD *)*v3, &qword_100815518, &qword_100815520);
  *v3 = result;
  return result;
}

uint64_t sub_1001F1778(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F35AC(a1, a2, a3, (_QWORD *)*v3, &qword_100815540, (uint64_t (*)(_QWORD))&type metadata accessor for PageFacets.Facet.Option);
  *v3 = result;
  return result;
}

uint64_t sub_1001F17A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F342C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001F17C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001F35AC(a1, a2, a3, (_QWORD *)*v3, &qword_100815658, (uint64_t (*)(_QWORD))&type metadata accessor for DebugMetricsEvent);
  *v3 = result;
  return result;
}

uint64_t sub_1001F17EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815440);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8)
      memmove(v11 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_10000DAF8(&qword_100815448);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F1974(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_1008091A0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F1AE0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_1008153B8);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v8])
      memmove(v13, v14, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v8] || v13 >= &v14[48 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F1C64(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815428);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10000DAF8(&qword_100815430);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F1DEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8((uint64_t *)&unk_100809170);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10000DAF8(&qword_100815640);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F1F74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_10080AD68);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F20DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815460);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2238(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_1008153F0);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2394(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815500);
    v11 = (double *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F24F0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10000DAF8(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    sub_10000DAF8(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F267C(char a1, int64_t a2, char a3, double *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_1008154F0);
    v11 = (double *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10000DAF8(&qword_1008154F8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2804(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8((uint64_t *)&unk_100815488);
    v11 = (char *)swift_allocObject(v10, 72 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 72);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[72 * v8])
      memmove(v13, v14, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[72 * v8] || v13 >= &v14[72 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F298C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000DAF8(a5);
  v14 = *(_QWORD *)(sub_10000DAF8(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10000DAF8(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release();
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2B6C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815468);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2CEC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100813860);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2E48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815650);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F2FC8(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815588);
    v11 = (double *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  v16 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F3120(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815648);
    v11 = (double *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F3288(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10000DAF8(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v11)
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v11 || v16 >= v17 + 40 * v11)
  {
    sub_10000DAF8(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F342C(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DAF8(&qword_100815530);
    v11 = (double *)swift_allocObject(v10, 80 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 80);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[80 * v8])
      memmove(v13, v14, 80 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[80 * v8] || v13 >= &v14[80 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001F35AC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000DAF8(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release();
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

double sub_1001F378C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  v7 = swift_bridgeObjectRetain(*v3);
  v8 = sub_10057E81C(a1, v7);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v11 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001FAF80();
      v11 = v14;
    }

    sub_10004EA50((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a2);
    sub_1001F8338(v8, v11);
    v12 = *v3;
    *v3 = v11;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1001F3870(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10057E9FC(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001FB97C();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_1001F86E4(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

double sub_1001F393C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10057E9FC(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001FC7E8();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_10004EA50((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_1001F8DB8(v9, v12);
    v13 = *v4;
    *v4 = v12;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1001F3A2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_10057EF78(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001FCBFC();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for AdPlacementType(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, v10);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v5);
  sub_1001F8F8C(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

void sub_1001F3B18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int64_t v40;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815580);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = a2;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v37 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v38 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v19 >= v40)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v40)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v40)
            {
LABEL_34:
              if ((v39 & 1) != 0)
              {
                if (v38 >= 64)
                  bzero((void *)(v5 + 64), 8 * v40);
                else
                  *v10 = v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v9 >= v40)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(v5 + 56) + 40 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v24 = *(_BYTE *)(v22 + 32);
      v26 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 24);
      v28 = *(_QWORD *)v22;
      v27 = *(_QWORD *)(v22 + 8);
      v29 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v23);
      v30 = -1 << *(_BYTE *)(v8 + 32);
      v31 = v29 & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v14 + 8 * v32);
        }
        while (v36 == -1);
        v15 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v23;
      v16 = *(_QWORD *)(v8 + 56) + 40 * v15;
      *(_QWORD *)v16 = v28;
      *(_QWORD *)(v16 + 8) = v27;
      *(_QWORD *)(v16 + 16) = v26;
      *(_QWORD *)(v16 + 24) = v25;
      *(_BYTE *)(v16 + 32) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
  *v3 = v8;
}

void sub_1001F3DE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::UInt64 v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  Swift::UInt64 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39;
  uint64_t v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_1008153D0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = v3;
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v9 << 6);
      }
      else
      {
        v24 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v24 >= v36)
          goto LABEL_39;
        v25 = v37[v24];
        ++v9;
        if (!v25)
        {
          v9 = v24 + 1;
          if (v24 + 1 >= v36)
            goto LABEL_39;
          v25 = v37[v9];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v36)
            {
LABEL_39:
              if ((v38 & 1) == 0)
              {
                swift_release();
                v3 = v35;
                goto LABEL_46;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v25 = v37[v26];
            if (!v25)
            {
              while (1)
              {
                v9 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_48;
                if (v9 >= v36)
                  goto LABEL_39;
                v25 = v37[v9];
                ++v26;
                if (v25)
                  goto LABEL_36;
              }
            }
            v9 = v26;
          }
        }
LABEL_36:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v9 << 6);
      }
      v31 = *(_QWORD *)(v5 + 48) + 24 * v23;
      v39 = *(_OWORD *)v31;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v23);
      if ((v38 & 1) == 0)
        swift_bridgeObjectRetain(v33);
      Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v39);
      Hasher._combine(_:)(*((Swift::UInt *)&v39 + 1));
      if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v14 = v32;
      else
        v14 = 0;
      Hasher._combine(_:)(v14);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        v20 = v39;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v16) >> 6;
        v20 = v39;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v29 = v18 == v28;
          if (v18 == v28)
            v18 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v21 = *(_QWORD *)(v8 + 48) + 24 * v19;
      *(_OWORD *)v21 = v20;
      *(_QWORD *)(v21 + 16) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_46:
  *v3 = v8;
}

void sub_1001F4104(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8((uint64_t *)&unk_100815398);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release(v5);
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_10004EA50(v22, v41);
    }
    else
    {
      sub_100010D84((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease(v27);
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_10004EA50(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001F443C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = type metadata accessor for AdamId(0);
  v46 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2;
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815408);
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release();
    v39 = v42;
LABEL_44:
    *v39 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  HIDWORD(v41) = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v45 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_26;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v43)
    {
      swift_release();
      v39 = v42;
      v23 = v44;
      if ((v41 & 0x100000000) != 0)
      {
LABEL_39:
        v40 = 1 << *(_BYTE *)(v8 + 32);
        if (v40 >= 64)
          bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v40;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_43:
      swift_release();
      goto LABEL_44;
    }
    v23 = v44;
    v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v24 = v44[v17];
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v46 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v46 + v45))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v5, v16);
    v27 = v8;
    v28 = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v21);
    v29 = *(_QWORD *)(v10 + 40);
    v30 = sub_10000E720(&qword_100815410, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v5, v30);
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v5);
    *(_BYTE *)(*(_QWORD *)(v10 + 56) + v19) = v28;
    ++*(_QWORD *)(v10 + 16);
    v8 = v27;
  }
  v25 = v22 + 2;
  if (v25 >= v43)
  {
LABEL_36:
    swift_release();
    v39 = v42;
    if ((v41 & 0x100000000) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v44[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v43)
      goto LABEL_36;
    v24 = v44[v17];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1001F47D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t, __n128);
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;

  v53 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815600);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v7, a1, a2);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
    v42 = v46;
LABEL_44:
    *v42 = v9;
    return;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v48 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v47 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  v15 = swift_retain(v7);
  v16 = 0;
  v45 = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v49 = v7;
  v50 = v17;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v21 = v20 | (v16 << 6);
      goto LABEL_26;
    }
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v47)
    {
      swift_release(v7);
      v42 = v46;
      v23 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        v43 = 1 << *(_BYTE *)(v7 + 32);
        if (v43 >= 64)
          bzero(v23, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v43;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_43:
      swift_release(v7);
      goto LABEL_44;
    }
    v23 = v48;
    v24 = v48[v22];
    ++v16;
    if (!v24)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v47)
        goto LABEL_36;
      v24 = v48[v16];
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v5 + 72);
    v27 = v5;
    v28 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + v50);
    v29 = v53;
    v28(v52, *(_QWORD *)(v7 + 48) + v26 * v21, v53, v15);
    v30 = (char *)(*(_QWORD *)(v7 + 56) + 2 * v21);
    v51 = v30[1];
    v31 = *v30;
    v32 = *(_QWORD *)(v9 + 40);
    v33 = sub_10000E720(&qword_100815570, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v29, v33);
    v35 = -1 << *(_BYTE *)(v9 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      v5 = v27;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      v5 = v27;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v14 + 8 * v37);
      }
      while (v41 == -1);
      v18 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 48) + v26 * v18, v52, v53);
    v19 = (_BYTE *)(*(_QWORD *)(v9 + 56) + 2 * v18);
    *v19 = v31;
    v19[1] = v51;
    ++*(_QWORD *)(v9 + 16);
    v7 = v49;
  }
  v25 = v22 + 2;
  if (v25 >= v47)
  {
LABEL_36:
    swift_release(v7);
    v42 = v46;
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v48[v25];
  if (v24)
  {
    v16 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v47)
      goto LABEL_36;
    v24 = v48[v16];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1001F4B88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10000DAF8(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v35 = -1 << v12;
    v36 = v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v37 = (unint64_t)(v12 + 63) >> 6;
    v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v23 = v22 | (v10 << 6);
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v24 >= v37)
          goto LABEL_36;
        v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          v10 = v24 + 1;
          if (v24 + 1 >= v37)
            goto LABEL_36;
          v25 = v11[v10];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v37)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v36 >= 64)
                  bzero((void *)(v6 + 64), 8 * v37);
                else
                  *v11 = v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                v10 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_44;
                if (v10 >= v37)
                  goto LABEL_36;
                v25 = v11[v10];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v10 = v26;
          }
        }
LABEL_33:
        v14 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(v6 + 56);
      v33 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
      v34 = *(_QWORD *)(v32 + v31);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v32 + v31));
      v16 = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v33);
      v17 = -1 << *(_BYTE *)(v9 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release();
  *v4 = v9;
}

void sub_1001F4E38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v3 = v2;
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10000DAF8((uint64_t *)&unk_100815470);
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v38 = v3;
    v13 = 0;
    v14 = *(_QWORD *)(v10 + 64);
    v41 = (_QWORD *)(v10 + 64);
    v15 = 1 << *(_BYTE *)(v10 + 32);
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v17 = v16 & v14;
    v40 = (unint64_t)(v15 + 63) >> 6;
    v18 = v11 + 64;
    v39 = a2;
    v19 = 16;
    if ((a2 & 1) != 0)
      v19 = 32;
    v42 = v19;
    while (1)
    {
      if (v17)
      {
        v21 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v40)
          goto LABEL_35;
        v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v40)
            goto LABEL_35;
          v24 = v41[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_35:
              if ((v39 & 1) == 0)
              {
                swift_release();
                v3 = v38;
                goto LABEL_42;
              }
              v36 = 1 << *(_BYTE *)(v10 + 32);
              if (v36 >= 64)
                bzero(v41, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v36;
              v3 = v38;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v13 >= v40)
                  goto LABEL_35;
                v24 = v41[v13];
                ++v25;
                if (v24)
                  goto LABEL_25;
              }
            }
            v13 = v25;
          }
        }
LABEL_25:
        v17 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v22);
      v27 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + v42))(v9, *(_QWORD *)(v10 + 56) + v27 * v22, v6);
      v28 = static Hasher._hash(seed:_:)(*(_QWORD *)(v12 + 40), v26);
      v29 = -1 << *(_BYTE *)(v12 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v18 + 8 * v31);
        }
        while (v35 == -1);
        v20 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v20) = v26;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 56) + v27 * v20, v9, v6);
      ++*(_QWORD *)(v12 + 16);
    }
  }
  swift_release();
LABEL_42:
  *v3 = v12;
}

void sub_1001F5168(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[9];

  v3 = v2;
  v47 = type metadata accessor for AdamId(0);
  v6 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10000DAF8(&qword_100815610);
  v45 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v42 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v22 >= v43)
      goto LABEL_36;
    v23 = v44[v22];
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v23 = v44[v17];
      if (!v23)
        break;
    }
LABEL_23:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = v8;
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v25 + v30 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v46, v31, v47, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v46, v31, v47, v16);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v48, *(_QWORD *)(v10 + 40));
    String.hash(into:)(v48, v29, v28);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v29;
    v19[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v46, v47);
    ++*(_QWORD *)(v10 + 16);
    v8 = v26;
  }
  v24 = v22 + 2;
  if (v24 < v43)
  {
    v23 = v44[v24];
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v17 >= v43)
          goto LABEL_36;
        v23 = v44[v17];
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v17 = v24;
    goto LABEL_23;
  }
LABEL_36:
  swift_release();
  v3 = v42;
  if ((v45 & 1) != 0)
  {
    v40 = 1 << *(_BYTE *)(v8 + 32);
    if (v40 >= 64)
      bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v44 = -1 << v40;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release();
  *v3 = v10;
}

void sub_1001F54D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815628);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v31[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1001F57D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_1008154D8);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release();
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1001F5AF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8((uint64_t *)&unk_1008153E0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1001F5E00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815608);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_25;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v20 >= v38)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v39 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v38)
        goto LABEL_37;
      v22 = *(_QWORD *)(v39 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v38)
        {
LABEL_37:
          swift_release();
          v3 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v39 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_46;
            if (v13 >= v38)
              goto LABEL_37;
            v22 = *(_QWORD *)(v39 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_24;
          }
        }
        v13 = v23;
      }
    }
LABEL_24:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_25:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v42 = *(_QWORD *)(v24 + 32);
      v40 = v25;
      v41 = v26;
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_10007EF1C(v24, (uint64_t)&v40);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      swift_retain(v27);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
    v16 = v40;
    v17 = v41;
    *(_QWORD *)(v15 + 32) = v42;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v27;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v37;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v21, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release();
  *v3 = v8;
}

void sub_1001F6110(uint64_t a1, uint64_t a2)
{
  sub_1001F611C(a1, a2, &qword_1008155A0);
}

void sub_1001F611C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10000DAF8(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v35 = -1 << v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v36 = 1 << *(_BYTE *)(v6 + 32);
    v37 = v4;
    v38 = (unint64_t)(v12 + 63) >> 6;
    v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v23 = v22 | (v10 << 6);
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v24 >= v38)
          goto LABEL_36;
        v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          v10 = v24 + 1;
          if (v24 + 1 >= v38)
            goto LABEL_36;
          v25 = v11[v10];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release();
                v4 = v37;
                goto LABEL_43;
              }
              if (v36 >= 64)
                bzero((void *)(v6 + 64), 8 * v38);
              else
                *v11 = v35;
              v4 = v37;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                v10 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_45;
                if (v10 >= v38)
                  goto LABEL_36;
                v25 = v11[v10];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v10 = v26;
          }
        }
LABEL_33:
        v14 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
      v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
      if ((a2 & 1) == 0)
        v34 = v33;
      v16 = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v32);
      v17 = -1 << *(_BYTE *)(v9 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v32;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v33;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release();
LABEL_43:
  *v4 = v9;
}

void sub_1001F63C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815498);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release();
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_10004EA50(v24, v38);
      }
      else
      {
        sub_100010D84((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_10004EA50(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
  *v3 = v8;
}

void sub_1001F66C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v3 = v2;
  v6 = type metadata accessor for BadgeType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_1008154B8);
  v46 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v44 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v42 = v2;
  v43 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain(v10);
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_36;
      v25 = v44[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_36:
          swift_release();
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v43)
              goto LABEL_36;
            v25 = v44[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_retain(v29);
    }
    v30 = *(_QWORD *)(v12 + 40);
    v31 = sub_10000E720(&qword_1008154C0, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v6, v31);
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v42;
  v24 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v10 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v12;
}

void sub_1001F6A58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  __n128 v44;

  v3 = v2;
  v6 = type metadata accessor for AdPlacementType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_1008154D0);
  v43 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v42 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v40 = v2;
  v41 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain(v10);
  v19 = 0;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_36;
      v25 = v42[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_36:
          swift_release();
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v41)
              goto LABEL_36;
            v25 = v42[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      v44 = *(__n128 *)(*(_QWORD *)(v10 + 56) + 16 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      v44 = *(__n128 *)(*(_QWORD *)(v10 + 56) + 16 * v22);
      swift_retain(v44.n128_u64[0]);
      swift_retain(v44.n128_u64[1]);
    }
    v29 = *(_QWORD *)(v12 + 40);
    v30 = sub_10000E720(&qword_1008154C8, (uint64_t (*)(uint64_t))&type metadata accessor for AdPlacementType, (uint64_t)&protocol conformance descriptor for AdPlacementType);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v6, v30);
    v32 = -1 << *(_BYTE *)(v12 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v34);
      }
      while (v38 == -1);
      v20 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    v18 = v44;
    *(__n128 *)(*(_QWORD *)(v12 + 56) + 16 * v20) = v44;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v10 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v12;
}

void sub_1001F6DFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  _QWORD v42[9];

  v3 = v2;
  v6 = type metadata accessor for Accessory(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10000DAF8((uint64_t *)&unk_1008155C0);
  v41 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v37 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_36;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_36:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v38)
              goto LABEL_36;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v41 & 1) != 0)
    {
      sub_1001FE14C(v26, (uint64_t)v8);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    else
    {
      sub_1001FE108(v26, (uint64_t)v8);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    Hasher.init(_seed:)(v42, *(_QWORD *)(v11 + 40));
    sub_10045552C((uint64_t)v42);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1001FE14C((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v22 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v11;
}

void sub_1001F7164(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_1008154A0);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1001F7478(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815578);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v36 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v20 >= v14)
          goto LABEL_34;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_34;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_34:
              if ((v37 & 1) == 0)
              {
                swift_release();
                v3 = v36;
                goto LABEL_41;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v9 = v22;
          }
        }
LABEL_24:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
      v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
      v26 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v24);
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v24;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_41:
  *v3 = v8;
}

void sub_1001F7720(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  v9 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815568);
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release();
    v42 = v46;
LABEL_44:
    *v42 = v11;
    return;
  }
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v48 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v47 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  v17 = swift_retain(v9);
  v18 = 0;
  v45 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v49 = v19;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_26;
    }
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v24 >= v47)
    {
      swift_release();
      v42 = v46;
      v25 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        v43 = 1 << *(_BYTE *)(v9 + 32);
        if (v43 >= 64)
          bzero(v25, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v25 = -1 << v43;
        *(_QWORD *)(v9 + 16) = 0;
      }
LABEL_43:
      swift_release();
      goto LABEL_44;
    }
    v25 = v48;
    v26 = v48[v24];
    ++v18;
    if (!v26)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v47)
        goto LABEL_36;
      v26 = v48[v18];
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + v49))(v8, *(_QWORD *)(v9 + 48) + v28 * v23, v5, v17);
    v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v11 + 40);
    v33 = sub_10000E720(&qword_100815570, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v5, v33);
    v35 = -1 << *(_BYTE *)(v11 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v28 * v20, v8, v5);
    v21 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v20);
    *v21 = v31;
    v21[1] = v30;
    ++*(_QWORD *)(v11 + 16);
  }
  v27 = v24 + 2;
  if (v27 >= v47)
  {
LABEL_36:
    swift_release();
    v42 = v46;
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v26 = v48[v27];
  if (v26)
  {
    v18 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v18 >= v47)
      goto LABEL_36;
    v26 = v48[v18];
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1001F7AB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815558);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v35 = 1 << *(_BYTE *)(v5 + 32);
    v36 = v3;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v23 >= v37)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v37)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release();
                v3 = v36;
                goto LABEL_43;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v37);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v9 >= v37)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
        v33 = v32;
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v31);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_43:
  *v3 = v8;
}

void sub_1001F7D68(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815548);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v38 = v3;
  v39 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v23 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v24 = v23 | (v13 << 6);
      goto LABEL_34;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v25 >= v39)
      break;
    v26 = (_QWORD *)(v5 + 64);
    v27 = *(_QWORD *)(v40 + 8 * v25);
    ++v13;
    if (!v27)
    {
      v13 = v25 + 1;
      if (v25 + 1 >= v39)
        goto LABEL_36;
      v27 = *(_QWORD *)(v40 + 8 * v13);
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_36:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v27 = *(_QWORD *)(v40 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v13 >= v39)
              goto LABEL_36;
            v27 = *(_QWORD *)(v40 + 8 * v13);
            ++v28;
            if (v27)
              goto LABEL_33;
          }
        }
        v13 = v28;
      }
    }
LABEL_33:
    v11 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_34:
    v33 = 8 * v24;
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v33);
    v35 = *(void **)(*(_QWORD *)(v5 + 56) + v33);
    if ((v41 & 1) == 0)
    {
      swift_retain(v34);
      v36 = v35;
    }
    v14 = *(_QWORD *)(v8 + 40);
    v15 = type metadata accessor for Artwork(0);
    v16 = sub_10000E720((unint64_t *)&qword_100815550, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v15, v16);
    v18 = -1 << *(_BYTE *)(v8 + 32);
    v19 = v17 & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v31 = v20 == v30;
        if (v20 == v30)
          v20 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v20);
      }
      while (v32 == -1);
      v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }
    *(_QWORD *)(v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = 8 * v21;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v22) = v34;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v22) = v35;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v38;
  v26 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1001F8098(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000DAF8(&qword_100815528);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v33 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v11;
    v32 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v19 >= v14)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                swift_release();
                v3 = v33;
                goto LABEL_41;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v35 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v18);
      v23 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v22);
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v22;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v16) = v35;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_41:
  *v3 = v8;
}

unint64_t sub_1001F8338(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;
        Hasher.init(_seed:)(v30, v10);
        v15 = v11;
        String.hash(into:)(v30, v12, v14);
        v16 = Hasher._finalize()();

        result = swift_bridgeObjectRelease(v14);
        v17 = v16 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v17 < v8)
            goto LABEL_5;
        }
        else if (v17 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(a2 + 48);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || v19 >= v20 + 1)
            *v19 = *v20;
          v21 = *(_QWORD *)(a2 + 56);
          v22 = (_OWORD *)(v21 + 32 * v3);
          v23 = (_OWORD *)(v21 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 2))
          {
            v9 = v23[1];
            *v22 = *v23;
            v22[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001F8528(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ImpressionMetrics(0) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001F86E4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001F88BC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001F8A90(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v11);
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = (_OWORD *)(v16 + 32 * v3);
            v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
            {
              v9 = v18[1];
              *v17 = *v18;
              v17[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001F8C24(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001F8DB8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1001F8F8C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for AdPlacementType(0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v38 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v37(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_10000E720(&qword_1008154C8, (uint64_t (*)(uint64_t))&type metadata accessor for AdPlacementType, (uint64_t)&protocol conformance descriptor for AdPlacementType);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 >= v38 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v26 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (_OWORD *)(v27 + 16 * a1);
            v29 = (_OWORD *)(v27 + 16 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= v29 + 1))
            {
              *v28 = *v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v38 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1001F922C(uint64_t a1, Swift::UInt a2, Swift::UInt a3, char a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_10057E8E0(a2, a3, a5);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v21 + 8 * v14));
        *(_QWORD *)(v21 + 8 * v14) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1001FADC8();
      goto LABEL_7;
    }
    sub_1001F3DE8(v17, a4 & 1);
    v22 = sub_10057E8E0(a2, a3, a5);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1001FA720(v14, a2, a3, a1, v20, a5);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TodayPageSectionGridTracker.TrackedSectionKey);
  __break(1u);
}

_OWORD *sub_1001F9368(_OWORD *a1, void *a2, char a3, __n128 a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  __n128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v5 = (_QWORD **)v4;
  v8 = (_QWORD *)*v4;
  v10 = sub_10057E81C(a2, a4);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v5;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
        return sub_10004EA50(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1001FAF80();
      goto LABEL_7;
    }
    sub_1001F4104(v13, a3 & 1);
    v20 = sub_10057E81C(a2, v19);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v5;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1001FA770(v10, (uint64_t)a2, a1, v16);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v22);
  __break(1u);
  return result;
}

void sub_1001F9488(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001F9604(a1, a2, a3, (uint64_t *)&unk_100815590);
}

void sub_1001F9494(__int16 a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10057EAF8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_BYTE *)(v20[7] + 2 * v14);
      *v21 = a1 & 1;
      v21[1] = HIBYTE(a1) & 1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1001FB364();
    goto LABEL_7;
  }
  sub_1001F47D8(v17, a3 & 1);
  v22 = sub_10057EAF8(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1001FA7D4(v14, (uint64_t)v11, a1 & 0x101, v20);
}

void sub_1001F95F8(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001F9604(a1, a2, a3, (uint64_t *)&unk_100815630);
}

void sub_1001F9604(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v4;
  v10 = *v4;
  v12 = sub_10057E820(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_1001FB5C4(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = 8 * v12;
    *(_QWORD *)(v18[6] + v22) = a2;
    *(_QWORD *)(v18[7] + v22) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1001F4B88(v15, a3 & 1, a4);
  v20 = sub_10057E820(a2);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_1001F9748(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10057E9FC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for AdamId(0);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1001FBB38();
      goto LABEL_7;
    }
    sub_1001F5168(v15, a4 & 1);
    v21 = sub_10057E9FC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1001FA87C(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1001F9884(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10057E9FC(a1, a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_1001FBD94();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (uint64_t *)(v18[6] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    *(double *)(v18[7] + 8 * v12) = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      swift_bridgeObjectRetain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_1001F54D0(v15, a3 & 1);
  v19 = sub_10057E9FC(a1, a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = v19;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1001F99D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10057E9FC(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1001FBF40();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      swift_bridgeObjectRelease(v21[1]);
      *v21 = a1;
      v21[1] = a2;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_14;
  }
  sub_1001F57D4(v17, a5 & 1);
  v22 = sub_10057E9FC(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1001F9B4C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10057E754(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1001FC2A0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1001F5E00(v13, a3 & 1);
  v18 = sub_10057E754(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_16:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return;
  }
  v10 = v18;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10007EF1C(a2, (uint64_t)v26);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v20 = v16[6] + 40 * v10;
  v21 = v27;
  v22 = v26[1];
  *(_OWORD *)v20 = v26[0];
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v23 = v16[2];
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v25;
}

void sub_1001F9CAC(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001F9CC4(a1, a2, a3, &qword_1008155A0);
}

void sub_1001F9CB8(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001F9CC4(a1, a2, a3, &qword_1008155A8);
}

void sub_1001F9CC4(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v4;
  v10 = *v4;
  v12 = sub_10057E820(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_1001FC650(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = 8 * v12;
    *(_QWORD *)(v18[6] + v22) = a2;
    *(_QWORD *)(v18[7] + v22) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1001F611C(v15, a3 & 1, a4);
  v20 = sub_10057E820(a2);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_1001F9E08(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10057E9FC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
        sub_10004EA50(a1, v19);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1001FC7E8();
      goto LABEL_7;
    }
    sub_1001F63C8(v15, a4 & 1);
    v20 = sub_10057E9FC(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1001FA9A4(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1001F9F38(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for BadgeType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10057EB90(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1001FC9CC();
    goto LABEL_7;
  }
  sub_1001F66C4(v17, a3 & 1);
  v22 = sub_10057EB90(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1001FAA0C(v14, (uint64_t)v11, a1, v20);
}

void sub_1001FA094(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD **)v4;
  v27 = a2;
  v9 = type metadata accessor for AdPlacementType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_10057EF78(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      swift_release();
      swift_release();
      v23 = v27;
      *v22 = a1;
      v22[1] = v23;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1001FCBFC();
    goto LABEL_7;
  }
  sub_1001F6A58(v18, a4 & 1);
  v24 = sub_10057EF78(a3);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
    __break(1u);
    return;
  }
  v15 = v24;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  sub_1001FAAA4(v15, (uint64_t)v12, a1, v27, v21);
}

void sub_1001FA208(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for AdamId(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10057EA60(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v20[7] + v14) = a1 & 1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1001FB144();
    goto LABEL_7;
  }
  sub_1001F443C(v17, a3 & 1);
  v21 = sub_10057EA60(a2);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v21;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1001FAB44(v14, (uint64_t)v11, a1 & 1, v20);
}

void sub_1001FA35C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10057E820(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1001FD5D4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1001F7AB8(v13, a3 & 1);
  v18 = sub_10057E820(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_1001FA494(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10057EDB8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1001FD774();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      swift_retain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_1001F7D68(v13, a3 & 1);
  v18 = sub_10057EDB8(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = type metadata accessor for Artwork(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

void sub_1001FA5E4(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001F9CC4(a1, a2, a3, &qword_100815538);
}

void sub_1001FA5F0(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  double *v19;
  unint64_t v20;
  char v21;
  double *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10057E820(a1);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a2 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_1001FD918();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (double *)(v18[7] + 16 * v12);
      *v19 = a3;
      v19[1] = a4;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a1;
    v22 = (double *)(v18[7] + 16 * v12);
    *v22 = a3;
    v22[1] = a4;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1001F8098(v15, a2 & 1);
  v20 = sub_10057E820(a1);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

unint64_t sub_1001FA720(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a5[(result >> 6) + 8] |= 1 << result;
  v6 = a5[6] + 24 * result;
  *(_QWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(double *)(v6 + 16) = a6;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v7 = a5[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a5[2] = v9;
  return result;
}

_OWORD *sub_1001FA770(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_10004EA50(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1001FA7D4(unint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IndexPath(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_BYTE *)(a4[7] + 2 * a1);
  *v11 = a3 & 1;
  v11[1] = HIBYTE(a3) & 1;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_1001FA87C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for AdamId(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_1001FA90C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_1001FA95C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

_OWORD *sub_1001FA9A4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_10004EA50(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1001FAA0C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for BadgeType(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1001FAAA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = type metadata accessor for AdPlacementType(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1001FAB44(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for AdamId(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1001FABDC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void sub_1001FAC24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;

  v1 = v0;
  sub_10000DAF8(&qword_100815580);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v27 = __clz(__rbit64(v25));
    v12 = (v25 - 1) & v25;
    v15 = v27 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)(v19 + 32);
    v21 = *(_OWORD *)v19;
    v22 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v23 = v21;
    *(_OWORD *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 32) = v20;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FADC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10000DAF8(&qword_1008153D0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v21 = *(_OWORD *)v17;
    *(_QWORD *)(v21 + 16) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FAF80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  sub_10000DAF8((uint64_t *)&unk_100815398);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100010D84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10004EA50(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FB144()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_100815408);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release();
    *v23 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FB364()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  _BYTE *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = type metadata accessor for IndexPath(0);
  v1 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_100815600);
  v31 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    v29 = v31;
LABEL_28:
    *v29 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v7)
    memmove(v6, (const void *)(v3 + 64), 8 * v7);
  v9 = 0;
  v10 = *(_QWORD *)(v3 + 16);
  v36 = v5;
  v37 = v3;
  *(_QWORD *)(v5 + 16) = v10;
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v32 = v3 + 64;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v34;
  v14 = v35;
  v16 = v5;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v9 + 1;
    v19 = v37;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *(_QWORD *)(v32 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 2 * v18;
    v22 = (char *)(*(_QWORD *)(v19 + 56) + v21);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_BYTE *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    swift_release(v37);
    v29 = v31;
    v5 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001FB5C4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10000DAF8(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release();
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FB75C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for ImpressionMetrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8((uint64_t *)&unk_100815470);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release();
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FB97C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10000DAF8(&qword_1008155F8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FBB2C()
{
  sub_1001FC650(&qword_100815538);
}

void sub_1001FBB38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for AdamId(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_100815610);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain(v20);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001FBD94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10000DAF8(&qword_100815628);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FBF40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_10000DAF8(&qword_1008154D8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FC0F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10000DAF8((uint64_t *)&unk_1008153E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FC2A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  sub_10000DAF8(&qword_100815608);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_10007EF1C(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_retain(v16);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FC478()
{
  sub_1001FC650(&qword_1008155A0);
}

void sub_1001FC484()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_10000DAF8(&qword_100815480);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100010D84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10004EA50(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FC644()
{
  sub_1001FC650(&qword_1008155A8);
}

void sub_1001FC650(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  sub_10000DAF8(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release();
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FC7E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_10000DAF8(&qword_100815498);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_100010D84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_10004EA50(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001FC9CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for BadgeType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_1008154B8);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release();
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_retain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FCBFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;

  v1 = v0;
  v2 = type metadata accessor for AdPlacementType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_1008154D0);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v8;
    return;
  }
  v27 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v28 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v16)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v12;
    if (!v25)
    {
      v12 = v24 + 1;
      if (v24 + 1 >= v16)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v12);
      if (!v25)
        break;
    }
LABEL_25:
    v15 = (v25 - 1) & v25;
    v18 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v29 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    v23 = v29;
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v29;
    swift_retain(v23);
    swift_retain(*((_QWORD *)&v29 + 1));
  }
  v26 = v24 + 2;
  if (v26 >= v16)
  {
LABEL_26:
    swift_release();
    v1 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v12 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v12);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001FCE44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for Accessory(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8((uint64_t *)&unk_1008155C0);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v9 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v27 + 72) * v18;
    sub_1001FE108(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + v20);
    sub_1001FE14C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    v22 = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v9 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001FD060()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10000DAF8(&qword_1008154A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FD214()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_10000DAF8(&qword_100815578);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FD3A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_100815568);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v8;
    return;
  }
  v26 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001FD5D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_10000DAF8(&qword_100815558);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FD774()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10000DAF8(&qword_100815548);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    swift_retain(v17);
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001FD918()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  sub_10000DAF8(&qword_100815528);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1001FDAAC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_1001FDB34(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))
{
  int64_t v2;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  _OWORD v31[3];
  _QWORD *v32;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v32 = _swiftEmptyArrayStorage;
    sub_1001F13E0(0, v2, 0);
    v4 = _swiftEmptyArrayStorage;
    v6 = sub_1001FDAAC(a1);
    v7 = 0;
    v8 = a1 + 64;
    v27 = v2;
    v28 = v5;
    v29 = a1 + 64;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
    {
      v11 = (unint64_t)v6 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != v5)
        goto LABEL_24;
      v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
      v14 = *v12;
      v13 = v12[1];
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
      swift_bridgeObjectRetain(v13);
      v16 = swift_retain(v15);
      a2(v31, v14, v13, v15, v16);
      swift_release(v15);
      swift_bridgeObjectRelease(v13);
      v32 = v4;
      v18 = v4[2];
      v17 = v4[3];
      if (v18 >= v17 >> 1)
      {
        sub_1001F13E0(v17 > 1, v18 + 1, 1);
        v4 = v32;
      }
      v4[2] = v18 + 1;
      v19 = &v4[6 * v18];
      v20 = v31[0];
      v21 = v31[2];
      v19[3] = v31[1];
      v19[4] = v21;
      v19[2] = v20;
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v6 >= v9)
        goto LABEL_25;
      v8 = a1 + 64;
      v22 = *(_QWORD *)(v29 + 8 * v11);
      if ((v22 & (1 << v6)) == 0)
        goto LABEL_26;
      v5 = v28;
      if (*(_DWORD *)(a1 + 36) != v28)
        goto LABEL_27;
      v23 = v22 & (-2 << (v6 & 0x3F));
      if (v23)
      {
        v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
        v10 = v27;
      }
      else
      {
        v24 = v11 + 1;
        v25 = (unint64_t)(v9 + 63) >> 6;
        v10 = v27;
        if (v11 + 1 < v25)
        {
          v26 = *(_QWORD *)(v29 + 8 * v24);
          if (v26)
          {
LABEL_20:
            v9 = __clz(__rbit64(v26)) + (v24 << 6);
          }
          else
          {
            while (v25 - 2 != v11)
            {
              v26 = *(_QWORD *)(a1 + 80 + 8 * v11++);
              if (v26)
              {
                v24 = v11 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v7;
      v6 = v9;
      if (v7 == v10)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1001FDD7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FDDA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001FDDDC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  sub_1001F0A84(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(uint64_t **)(v4 + 40), *(id *)(v4 + 48));
}

uint64_t sub_1001FDE08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FDE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001FDE28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001FDE30()
{
  return sub_1001F0828() & 1;
}

uint64_t sub_1001FDE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_1008153A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1001FDE98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  char *v5;
  objc_class *ObjectType;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[qword_1008152C0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[qword_1008152C8] = 0;
  v26.receiver = v5;
  v26.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v14, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  v18 = v15;
  dispatch thunk of DynamicTypeTextView.fontUseCase.setter(v14);
  v19 = v18;
  dispatch thunk of DynamicTypeTextView.numberOfLines.setter(a2);

  if ((a4 & 1) == 0)
  {
    v20 = v19;
    dispatch thunk of DynamicTypeTextView.lineBreakMode.setter(a3);

  }
  if (a5)
  {
    v21 = a5;
    sub_1001EF254(a5);
  }
  objc_msgSend(v19, "setSelectable:", 1);
  objc_msgSend(v19, "setEditable:", 0);
  objc_msgSend(v19, "setScrollEnabled:", 0);
  objc_msgSend(v19, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v19, "setContentInsetAdjustmentBehavior:", 2);
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v19;
  v24 = objc_msgSend(v22, "clearColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  objc_msgSend(v23, "setDelegate:", v23);
  objc_msgSend(v23, "_setInteractiveTextSelectionDisabled:", 1);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v23;
}

uint64_t sub_1001FE108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Accessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FE14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Accessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1001FE190(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v25;

  v3 = type metadata accessor for UITextItem.Content(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v25 - v14;
  UITextItem.content.getter(v13);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == enum case for UITextItem.Content.link(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v16(v15, v6, v8);
    sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
    v17 = swift_allocObject(&unk_100745090, 24, 7);
    v18 = swift_unknownObjectWeakInit(v17 + 16);
    (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v15, v8, v18);
    v19 = *(unsigned __int8 *)(v9 + 80);
    v20 = (v19 + 24) & ~v19;
    v21 = swift_allocObject(&unk_1007450B8, v20 + v10, v19 | 7);
    *(_QWORD *)(v21 + 16) = v17;
    v16((char *)(v21 + v20), v11, v8);
    v22 = swift_retain(v17);
    v23 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v22, 0, 0, 0, sub_1001FE45C, v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return a2;
  }
  return (id)v23;
}

uint64_t sub_1001FE3C4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FE3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for URL(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  swift_release(*(_QWORD *)(v2 + 16));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2 + v6, v3);
  return swift_deallocObject(v2, v7, v8);
}

uint64_t sub_1001FE45C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0, a2) - 8) + 80);
  return sub_1001EFDE8(a1, *(_QWORD *)(v2 + 16), v2 + ((v4 + 24) & ~v4));
}

uint64_t sub_1001FE49C()
{
  return sub_1001FDE30() & 1;
}

uint64_t type metadata accessor for CappedSizeDynamicTypeButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100815668;
  if (!qword_100815668)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CappedSizeDynamicTypeButton);
  return result;
}

uint64_t sub_1001FE4F0(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_100865EF0);
}

double sub_1001FE538(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v21;

  v3 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v1[qword_100815660];
  if (v11)
  {
    if (a1)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v12 == v15 && v14 == v16)
      {
        v8.n128_u64[0] = swift_bridgeObjectRelease_n(v14, 2).n128_u64[0];
        return v8.n128_f64[0];
      }
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
      swift_bridgeObjectRelease(v14);
      v8 = swift_bridgeObjectRelease(v18);
      if ((v19 & 1) != 0)
        return v8.n128_f64[0];
    }
  }
  else if (!a1)
  {
    return v8.n128_f64[0];
  }
  dispatch thunk of DynamicTypeButton.fontUseCase.getter(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100041630((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    dispatch thunk of DynamicTypeButton.updateFont(to:)(v10);
    objc_msgSend(v1, "setNeedsLayout");
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v8.n128_f64[0];
}

uint64_t sub_1001FE6CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  Class isa;
  id v13;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = *(void **)(v0 + qword_100815660);
  if (v1)
  {
    v2 = type metadata accessor for DynamicTypeButton(0);
    v3 = (uint64_t (*)(void))method lookup function for DynamicTypeButton(v2, &method descriptor for DynamicTypeButton.traitCollectionForFontUseCases.getter);
    v4 = v1;
    v5 = v3();
    v6 = objc_msgSend((id)v5, "preferredContentSizeCategory");

    LOBYTE(v5) = static UIContentSizeCategory.> infix(_:_:)(v6, v4);
    if ((v5 & 1) != 0)
    {
      v7 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v8 = swift_allocObject(v7, 48, 7);
      *(_OWORD *)(v8 + 16) = xmmword_1006423E0;
      *(_QWORD *)(v8 + 32) = v3();
      v9 = (void *)objc_opt_self(UITraitCollection);
      v10 = objc_msgSend(v9, "traitCollectionWithPreferredContentSizeCategory:", v4);
      *(_QWORD *)(v8 + 40) = v10;
      specialized Array._endMutation()(v10);
      v11 = v8;
      sub_1001042EC();
      isa = Array._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v9, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

      return (uint64_t)v13;
    }

  }
  v15 = type metadata accessor for DynamicTypeButton(0);
  v16 = (uint64_t (*)(void))method lookup function for DynamicTypeButton(v15, &method descriptor for DynamicTypeButton.traitCollectionForFontUseCases.getter);
  return v16();
}

id sub_1001FE850(char *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  *(_QWORD *)&a1[qword_100815660] = 0;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for CappedSizeDynamicTypeButton(0);
  return objc_msgSendSuper2(&v10, "initWithFrame:", a2, a3, a4, a5);
}

void sub_1001FE8CC()
{
  uint64_t v0;

}

id sub_1001FE8DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CappedSizeDynamicTypeButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1001FE910(uint64_t a1)
{

}

uint64_t sub_1001FE920()
{
  return type metadata accessor for CappedSizeDynamicTypeButton(0);
}

_QWORD *sub_1001FE928(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1001F151C(0, v1, 0);
    v3 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = (uint64_t *)(v5 + *(int *)(v3 + 20));
      v9 = *v7;
      v8 = v7[1];
      v10 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(v8);
      if (v10 >= v11 >> 1)
        sub_1001F151C(v11 > 1, v10 + 1, 1);
      v5 += v6;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v10];
      v12[4] = v9;
      v12[5] = v8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1001FEA2C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  double left;
  double bottom;
  double right;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t ObjCClassFromMetadata;
  id v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  objc_class *v57;
  objc_super v58[2];
  objc_super v59;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_onSelect];
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden] = 2;
  v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden] = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionCalculator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsScrollObserver] = 0;
  v15 = &v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_containerImpressionMetrics];
  v16 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_tokens] = _swiftEmptyArrayStorage;
  v17 = objc_allocWithZone((Class)type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout());
  v18 = v4;
  v19 = objc_msgSend(v17, "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout] = v19;

  v59.receiver = v18;
  v59.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v59, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout;
  v26 = *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout];
  *(_QWORD *)(v26
            + OBJC_IVAR____TtC20ProductPageExtension44GuidedSearchTokenPaletteCollectionViewLayout_layoutDelegate
            + 8) = &off_100745100;
  swift_unknownObjectWeakAssign(v27);
  v28 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v26, 0.0, 0.0, 0.0, 0.0);
  v29 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView;
  v30 = *(void **)&v24[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView];
  *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView] = v28;

  v31 = *(void **)&v24[v29];
  if (!v31)
  {
    __break(1u);
    goto LABEL_13;
  }
  v32 = (void *)objc_opt_self(UIColor);
  v33 = v31;
  v34 = objc_msgSend(v32, "clearColor");
  objc_msgSend(v33, "setBackgroundColor:", v34);

  v35 = *(void **)&v24[v29];
  if (!v35)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v35, "setDataSource:", v24);
  v36 = *(void **)&v24[v29];
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v36, "setDelegate:", v24);
  v37 = *(void **)&v24[v29];
  if (!v37)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v37, "setShowsHorizontalScrollIndicator:", 0);
  v38 = *(void **)&v24[v29];
  if (!v38)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v38, "setShowsVerticalScrollIndicator:", 0);
  v39 = *(void **)&v24[v29];
  if (!v39)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v39, "setBouncesHorizontally:", 1);
  if (!*(_QWORD *)&v24[v29])
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v24, "addSubview:");
  v40 = *(void **)&v24[v29];
  if (!v40)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v41 = v11;
  v57 = ObjectType;
  objc_msgSend(v40, "setPreservesSuperviewLayoutMargins:", 1);
  v42 = *(void **)&v24[v29];
  if (!v42)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v43 = type metadata accessor for GuidedSearchTokenCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v43);
  v45 = v42;
  static UICollectionReusableView.defaultReuseIdentifier.getter(v45);
  v47 = v46;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v45, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v48, swift_bridgeObjectRelease(v47).n128_f64[0]);

  v49 = *(void **)&v24[v29];
  if (v49)
  {
    memset(v58, 0, sizeof(v58));
    v50 = v49;
    static AutomationSemantics.page(name:id:)(0x6946686372616573, 0xEC0000007265746CLL, v58);
    sub_100010F2C((uint64_t)v58, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v13);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v10);
    v51 = objc_msgSend(v24, "traitCollection");
    sub_1001FEF64();

    v52 = objc_msgSend(v24, "traitCollection");
    objc_msgSend(*(id *)&v24[v25], "invalidateLayout");

    v53 = sub_10000DAF8((uint64_t *)&unk_10080B800);
    v54 = swift_allocObject(v53, 64, 7);
    *(_OWORD *)(v54 + 16) = xmmword_100640600;
    *(_QWORD *)(v54 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v54 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(_QWORD *)(v54 + 48) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v54 + 56) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v55 = v24;
    UIView.registerForTraitChanges<A>(_:handler:)(v54, sub_1002015E8, 0, v57);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease(v54);

    return;
  }
LABEL_21:
  __break(1u);
}

void sub_1001FEF64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;

  v1 = v0;
  if ((UITraitCollection.isSizeClassRegular.getter() & 1) != 0)
  {
    v2 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer])
    {
      v3 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
      v4 = *(void **)&v0[v2];
      *(_QWORD *)&v0[v2] = v3;

      v5 = *(void **)&v0[v2];
      if (v5)
      {
        v6 = (void *)objc_opt_self(UIColor);
        v7 = v5;
        v8 = objc_msgSend(v6, "clearColor");
        v9 = objc_msgSend(v8, "CGColor");

        objc_msgSend(v7, "setBackgroundColor:", v9);
      }
    }
    v10 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask;
    v11 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask];
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v12, "superlayer");

      if (!v13)
      {
        v19 = *(void **)&v1[v2];
        if (v19)
        {
          v20 = v19;
          objc_msgSend(v20, "addSublayer:", v12);

        }
        goto LABEL_14;
      }

      if (*(_QWORD *)&v1[v10])
        goto LABEL_15;
    }
    v14 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    objc_msgSend(v14, "setStartPoint:", 0.0, 0.5);
    objc_msgSend(v14, "setEndPoint:", 1.0, 0.5);
    v15 = *(void **)&v1[v2];
    if (v15)
      objc_msgSend(v15, "addSublayer:", v14);
    v12 = *(id *)&v1[v10];
    *(_QWORD *)&v1[v10] = v14;
LABEL_14:

LABEL_15:
    v21 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask;
    v22 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask];
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v23, "superlayer");

      if (!v24)
      {
        v27 = *(void **)&v1[v2];
        if (v27)
        {
          v28 = v27;
          objc_msgSend(v28, "addSublayer:", v23);

        }
        goto LABEL_23;
      }

      if (*(_QWORD *)&v1[v21])
      {
LABEL_24:
        v30 = objc_msgSend(v1, "layer");
        v29 = *(id *)&v1[v2];
        objc_msgSend(v30, "setMask:", v29);

        goto LABEL_25;
      }
    }
    v25 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    objc_msgSend(v25, "setStartPoint:", 0.0, 0.5);
    objc_msgSend(v25, "setEndPoint:", 1.0, 0.5);
    v26 = *(void **)&v1[v2];
    if (v26)
      objc_msgSend(v26, "addSublayer:", v25);
    v23 = *(id *)&v1[v21];
    *(_QWORD *)&v1[v21] = v25;
LABEL_23:

    goto LABEL_24;
  }
  v16 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask];
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask] = 0;

  v17 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask];
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask] = 0;

  v18 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer];
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer] = 0;

  v30 = objc_msgSend(v0, "layer");
  objc_msgSend(v30, "setMask:", 0);
LABEL_25:

}

void sub_1001FF2E8(char a1, _QWORD *a2, _QWORD *a3, SEL *a4, SEL *a5)
{
  uint64_t v5;
  int v6;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  Class isa;

  v6 = *(unsigned __int8 *)(v5 + *a2);
  if (v6 != 2 && (a1 == 2 || (v6 & 1) != (a1 & 1)))
  {
    v9 = *(void **)(v5 + *a3);
    if ((v6 & 1) != 0)
    {
      if (!v9)
        return;
      v10 = sub_10000DAF8(&qword_1008091A0);
      v11 = swift_allocObject(v10, 96, 7);
      *(_OWORD *)(v11 + 16) = xmmword_100640600;
      v12 = (void *)objc_opt_self(UIColor);
      v13 = v9;
      v14 = objc_msgSend(v12, "whiteColor");
      v15 = objc_msgSend(v14, "CGColor");

      type metadata accessor for CGColor(0);
      v17 = v16;
      *(_QWORD *)(v11 + 56) = v16;
      *(_QWORD *)(v11 + 32) = v15;
      v18 = objc_msgSend(v12, "whiteColor");
      v19 = objc_msgSend(v18, "CGColor");
    }
    else
    {
      if (!v9)
        return;
      v20 = sub_10000DAF8(&qword_1008091A0);
      v11 = swift_allocObject(v20, 96, 7);
      *(_OWORD *)(v11 + 16) = xmmword_100640600;
      v21 = (void *)objc_opt_self(UIColor);
      v13 = v9;
      v22 = objc_msgSend(v21, *a4);
      v23 = objc_msgSend(v22, "CGColor");

      type metadata accessor for CGColor(0);
      v17 = v24;
      *(_QWORD *)(v11 + 56) = v24;
      *(_QWORD *)(v11 + 32) = v23;
      v18 = objc_msgSend(v21, *a5);
      v19 = objc_msgSend(v18, "CGColor");
    }
    v25 = v19;

    *(_QWORD *)(v11 + 88) = v17;
    *(_QWORD *)(v11 + 64) = v25;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "setColors:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  }
}

void sub_1001FF534()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  double Width;
  objc_super v9;
  CGRect v10;
  CGRect v11;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  if (CGRectGetWidth(v10) <= 477.0)
  {
    v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView];
    if (v7)
    {
      v2 = v7;
      objc_msgSend(v0, "bounds");
      Width = CGRectGetWidth(v11);

      objc_msgSend(v2, "setFrame:", 0.0, 0.0, Width, 50.0);
      goto LABEL_6;
    }
  }
  else
  {

    v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView];
    if (v1)
    {
      v2 = v1;
      static CGRect.frame(centeredWithin:of:)(objc_msgSend(v0, "bounds"));
      objc_msgSend(v2, "setFrame:", v3, v4, v5, v6);
LABEL_6:

      sub_1001FF68C();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1001FF68C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  double MinX;
  double MinY;
  id v13;
  double v14;
  double v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  void *v31;
  char *v32;
  id v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer);
  if (v1)
  {
    v2 = v0;
    v3 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask);
    if (v3)
    {
      v4 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask);
      if (v4)
      {
        v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView);
        if (v5)
        {
          v32 = (char *)OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView;
          v6 = v1;
          v7 = v3;
          v8 = v4;
          objc_msgSend(v5, "frame");
          objc_msgSend(v6, "setFrame:");
          objc_msgSend(v6, "bounds");
          v9 = CGRectGetWidth(v34) * 0.5;
          v10 = v7;
          objc_msgSend(v6, "bounds");
          MinX = CGRectGetMinX(v35);
          objc_msgSend(v6, "bounds");
          MinY = CGRectGetMinY(v36);
          objc_msgSend(v6, "bounds");
          objc_msgSend(v10, "setFrame:", MinX, MinY, v9, CGRectGetHeight(v37));

          v13 = v8;
          objc_msgSend(v6, "bounds");
          v14 = CGRectGetMinY(v38);
          objc_msgSend(v6, "bounds");
          objc_msgSend(v13, "setFrame:", v9, v14, v9, CGRectGetHeight(v39));

          if (qword_100804E50 != -1)
            swift_once(&qword_100804E50, sub_1002015D8);
          v15 = *(double *)&qword_1008156D8 / v9;
          specialized ContiguousArray.reserveCapacity(_:)(2);
          v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", 0.0);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v17 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
          specialized ContiguousArray._endMutation()(v18);
          v19 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v15);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
          v20 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
          v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
          specialized ContiguousArray._endMutation()(v21);
          sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v10, "setLocations:", isa, swift_release().n128_f64[0]);

          v23 = (v9 - *(double *)&qword_1008156D8) / v9;
          specialized ContiguousArray.reserveCapacity(_:)(2);
          v24 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v23);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
          v25 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
          v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
          specialized ContiguousArray._endMutation()(v26);
          v27 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", 1.0);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
          v28 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
          v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v27);
          specialized ContiguousArray._endMutation()(v29);
          v30 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v13, "setLocations:", v30, swift_release().n128_f64[0]);

          v31 = *(void **)&v32[v2];
          if (v31)
          {
            v33 = v31;
            sub_1001FFB38(v33);

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
    }
  }
}

void sub_1001FFB38(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  char v5;
  double v6;
  double v7;
  BOOL v8;
  double v9;
  double v10;
  char v11;
  CGRect v12;
  CGRect v13;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask)
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask))
  {
    objc_msgSend(a1, "contentOffset");
    v4 = v3;
    v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden) = v3 <= 0.0;
    sub_1001FF2E8(v5, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
    objc_msgSend(a1, "contentSize");
    v7 = v6;
    objc_msgSend(a1, "bounds");
    if (v4 >= v7 - CGRectGetWidth(v12))
    {
      objc_msgSend(a1, "contentSize");
      v10 = v9;
      objc_msgSend(a1, "bounds");
      v8 = v10 >= CGRectGetWidth(v13);
    }
    else
    {
      v8 = 0;
    }
    v11 = *(_BYTE *)(v1
                   + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden) = v8;
    sub_1001FF2E8(v11, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
  }
}

void sub_1001FFC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  Class isa;
  void *v12;
  id v13;
  Class v14;

  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_tokens);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_tokens) = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v8);
  if (*(_QWORD *)(a3 + 16))
  {
    v9 = *(void **)(a1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView);
    if (!v9)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return;
    }
    type metadata accessor for IndexPath(0);
    v10 = v9;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "deleteItemsAtIndexPaths:", isa);

  }
  if (*(_QWORD *)(a5 + 16))
  {
    v12 = *(void **)(a1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView);
    if (v12)
    {
      type metadata accessor for IndexPath(0);
      v13 = v12;
      v14 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v13, "insertItemsAtIndexPaths:", v14);

      return;
    }
    goto LABEL_9;
  }
}

void sub_1001FFD88(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  if ((a2 & 1) != 0)
  {
    v3 = a3 + 16;
    swift_beginAccess(a3 + 16, v6, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = (void *)Strong;
      sub_1001FFDDC();

    }
  }
}

void sub_1001FFDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void **v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout)
                + OBJC_IVAR____TtC20ProductPageExtension44GuidedSearchTokenPaletteCollectionViewLayout_pinningEnabled) == 1)
  {
    v1 = v0;
    v2 = swift_allocObject(&unk_100745198, 24, 7);
    swift_unknownObjectWeakInit(v2 + 16, v0);
    v3 = swift_allocObject(&unk_100745198, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v1);
    v4 = (void *)objc_opt_self(UIView);
    v11 = sub_100203410;
    v12 = v2;
    v7 = _NSConcreteStackBlock;
    v8 = 1107296256;
    v9 = sub_1000924A0;
    v10 = &unk_100745200;
    v5 = _Block_copy(&v7);
    swift_retain(v2);
    swift_release();
    v11 = sub_100203418;
    v12 = v3;
    v7 = _NSConcreteStackBlock;
    v8 = 1107296256;
    v9 = sub_10004A774;
    v10 = &unk_100745228;
    v6 = _Block_copy(&v7);
    swift_retain(v3);
    swift_release();
    objc_msgSend(v4, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v5, v6, 0.3, 0.0, 27.0, 0.0);
    _Block_release(v6);
    _Block_release(v5);
    swift_release();
    swift_release();
  }
}

void sub_1001FFF88(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView);
    v5 = v4;

    if (v4)
    {
      objc_msgSend(v5, "setContentOffset:", 0.0, 0.0);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100200014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout);

    v5[OBJC_IVAR____TtC20ProductPageExtension44GuidedSearchTokenPaletteCollectionViewLayout_pinningEnabled] = 0;
  }
  swift_beginAccess(v2, &v9, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v2);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = *(id *)(v6 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout);

    objc_msgSend(v8, "invalidateLayout");
  }
}

void sub_1002000DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  _BYTE v36[24];

  v4 = v3;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v10 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = (uint64_t)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_containerImpressionMetrics];
  swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_containerImpressionMetrics], v36, 33, 0);
  sub_1002019D0(a3, v15);
  swift_endAccess(v36);
  v16 = &v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionCalculator];
  swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionCalculator], v36, 1, 0);
  *(_QWORD *)v16 = a1;
  swift_release();
  sub_100018ADC(a3, (uint64_t)v10, &qword_1008131E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
    objc_msgSend(v4, "bounds", swift_retain(a1).n128_f64[0]);
    ImpressionsCalculator.addElement(_:at:)(v14, v17, v18, v19, v20);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  }
  v21 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView;
  v22 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView];
  if (!v22)
  {
    __break(1u);
    goto LABEL_13;
  }
  v23 = type metadata accessor for NestedCollectionViewImpressionsCoordinator(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = NestedCollectionViewImpressionsCoordinator.init(collectionView:)(v22);
  v25 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator] = v24;
  swift_release();
  if (*(_QWORD *)&v4[v25])
  {
    swift_retain(*(_QWORD *)&v4[v25]);
    v26 = swift_bridgeObjectRetain(a2);
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.models.setter(v26);
    swift_release();
    v27 = *(_QWORD *)&v4[v25];
    if (v27)
    {
      swift_retain(a1);
      swift_retain(v27);
      dispatch thunk of NestedCollectionViewImpressionsCoordinator.impressionsCalculator.setter(a1);
      swift_release();
    }
  }
  v28 = type metadata accessor for ImpressionsScrollObserver(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  swift_retain(a1);
  v30 = ImpressionsScrollObserver.init(_:)(v29);
  v31 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsScrollObserver;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsScrollObserver] = v30;
  swift_release();
  v32 = *(_QWORD *)&v4[v31];
  if (v32)
  {
    v33 = *(void **)&v4[v21];
    if (v33)
    {
      swift_retain(v32);
      v34 = v33;
      ImpressionsScrollObserver.didScroll(in:)((UIScrollView)v34);
      swift_release();

      return;
    }
LABEL_13:
    __break(1u);
  }
}

uint64_t sub_100200470()
{
  return type metadata accessor for GuidedSearchTokenPaletteView(0);
}

uint64_t type metadata accessor for GuidedSearchTokenPaletteView(uint64_t a1)
{
  return sub_100019B28(a1, (uint64_t *)&unk_100815770, (uint64_t)&nominal type descriptor for GuidedSearchTokenPaletteView);
}

void sub_10020048C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_100651E50;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_100651E68;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_100651E68;
  v4[5] = &unk_100651E68;
  v4[6] = &unk_100651E68;
  v4[7] = &unk_100651E80;
  v4[8] = &unk_100651E80;
  v4[9] = &unk_100651E68;
  v4[10] = &unk_100651E68;
  v4[11] = &unk_100651E68;
  sub_1000780CC(319, (unint64_t *)&qword_100815780, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

_BYTE *sub_100200654(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  id v20;
  int v21;
  int v22;
  uint64_t v24;

  v4 = sub_10000DAF8(&qword_1008158A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GuidedSearchTokenCell();
  static UICollectionReusableView.defaultReuseIdentifier.getter(v11);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v14, isa);

  v17 = swift_dynamicCastClass(v16, v11);
  if (!v17)
    return v16;
  v18 = (_BYTE *)v17;
  v19 = v16;
  sub_100200860(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_100010F2C((uint64_t)v6, &qword_1008158A0);
    return v19;
  }
  else
  {
    sub_100203390((uint64_t)v6, (uint64_t)v10);
    v20 = sub_100202748((uint64_t)v10, (uint64_t)v18);
    v21 = v10[*(int *)(v7 + 24)];
    objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC20ProductPageExtension21GuidedSearchTokenCell_label], "setAttributedText:", v20);
    v22 = v18[OBJC_IVAR____TtC20ProductPageExtension21GuidedSearchTokenCell_isOn];
    v18[OBJC_IVAR____TtC20ProductPageExtension21GuidedSearchTokenCell_isOn] = v21;
    if (v21 != v22)
      sub_10054EE80();
    objc_msgSend(v18, "setNeedsLayout");

    sub_1002033D4((uint64_t)v10);
  }
  return v18;
}

unint64_t sub_100200860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v5 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_tokens;
  v6 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_tokens) + 16);
  v7 = IndexPath.row.getter(a1);
  if (v7 < 0 || v7 >= v6)
  {
    v16 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v14 = a2;
    v15 = 1;
    return v13(v14, v15, 1, v16);
  }
  result = IndexPath.row.getter(v7);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = result;
    v10 = *(_QWORD *)(v3 + v5);
    if (result < *(_QWORD *)(v10 + 16))
    {
      v11 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
      v12 = *(_QWORD *)(v11 - 8);
      sub_100203430(v10+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v9, a2);
      v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v14 = a2;
      v15 = 0;
      v16 = v11;
      return v13(v14, v15, 1, v16);
    }
  }
  __break(1u);
  return result;
}

void sub_100200C64(id a1)
{
  uint64_t v1;
  double v3;
  double v4;
  char v5;
  double v6;
  double v7;
  BOOL v8;
  double v9;
  double v10;
  char v11;
  uint64_t v12;
  CGRect v13;
  CGRect v14;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask)
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask))
  {
    objc_msgSend(a1, "contentOffset");
    v4 = v3;
    v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden) = v3 <= 0.0;
    sub_1001FF2E8(v5, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
    objc_msgSend(a1, "contentSize");
    v7 = v6;
    objc_msgSend(a1, "bounds");
    if (v4 >= v7 - CGRectGetWidth(v13))
    {
      objc_msgSend(a1, "contentSize");
      v10 = v9;
      objc_msgSend(a1, "bounds");
      v8 = v10 >= CGRectGetWidth(v14);
    }
    else
    {
      v8 = 0;
    }
    v11 = *(_BYTE *)(v1
                   + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden) = v8;
    sub_1001FF2E8(v11, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden, &OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
  }
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsScrollObserver);
  if (v12)
  {
    swift_retain(v12);
    ImpressionsScrollObserver.didScroll(in:)((UIScrollView)a1);
    swift_release();
  }
}

uint64_t *sub_100200E1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for SystemImage(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000DAF8(&qword_100815788);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    swift_bridgeObjectRetain(v15);
  }
  return a1;
}

uint64_t sub_100200F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SystemImage(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

char *sub_100200F84(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = type metadata accessor for SystemImage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000DAF8(&qword_100815788);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  a1[v10] = a2[v10];
  swift_bridgeObjectRetain(v13);
  return a1;
}

char *sub_100201054(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for SystemImage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_10000DAF8(&qword_100815788);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v16 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_100201188(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for SystemImage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000DAF8(&qword_100815788);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  a1[v9] = a2[v9];
  return a1;
}

char *sub_10020124C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for SystemImage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_10000DAF8(&qword_100815788);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_100201370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020137C);
}

uint64_t sub_10020137C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10000DAF8(&qword_100815788);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100201400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020140C);
}

uint64_t sub_10020140C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10000DAF8(&qword_100815788);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for GuidedSearchTokenPaletteView.Token(uint64_t a1)
{
  return sub_100019B28(a1, (uint64_t *)&unk_1008157E8, (uint64_t)&nominal type descriptor for GuidedSearchTokenPaletteView.Token);
}

void sub_1002014A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1000780CC(319, (unint64_t *)&unk_1008157F8, (uint64_t (*)(uint64_t))&type metadata accessor for SystemImage);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100651EA0;
    v4[2] = &unk_100651EB8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

double sub_100201530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  _OWORD v4[2];
  _OWORD v5[2];

  v0 = sub_10000DAF8((uint64_t *)&unk_1008143D0);
  sub_100011980(v0, qword_1008156C0);
  sub_10000EFC4(v0, (uint64_t)qword_1008156C0);
  v5[0] = xmmword_100651DD0;
  v5[1] = xmmword_100651DE0;
  v4[0] = xmmword_100651DF0;
  v4[1] = xmmword_100651E00;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for UIEdgeInsets(0);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v5, v4, v1, v2).n128_u64[0];
  return result;
}

void sub_1002015D8()
{
  qword_1008156D8 = 0x4024000000000000;
}

void sub_1002015E8(char *a1)
{
  id v2;

  v2 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout], "invalidateLayout");

}

uint64_t sub_100201640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for SystemImage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v37 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100815830);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100815788);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - v17;
  v38 = a1;
  sub_100018ADC(a1, (uint64_t)&v36 - v17, &qword_100815788);
  v39 = a2;
  sub_100018ADC(a2, (uint64_t)v15, &qword_100815788);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100018ADC((uint64_t)v18, (uint64_t)v9, &qword_100815788);
  sub_100018ADC((uint64_t)v15, v19, &qword_100815788);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_100010F2C((uint64_t)v15, &qword_100815788);
    sub_100010F2C((uint64_t)v18, &qword_100815788);
    if (v20(v19, 1, v4) == 1)
    {
      sub_100010F2C((uint64_t)v9, &qword_100815788);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100018ADC((uint64_t)v9, (uint64_t)v12, &qword_100815788);
  if (v20(v19, 1, v4) == 1)
  {
    sub_100010F2C((uint64_t)v15, &qword_100815788);
    sub_100010F2C((uint64_t)v18, &qword_100815788);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_6:
    sub_100010F2C((uint64_t)v9, &qword_100815830);
LABEL_12:
    v34 = 0;
    return v34 & 1;
  }
  v21 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v37, v19, v4);
  v22 = sub_100201988();
  v23 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v4, v22);
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v21, v4);
  sub_100010F2C((uint64_t)v15, &qword_100815788);
  sub_100010F2C((uint64_t)v18, &qword_100815788);
  v24(v12, v4);
  sub_100010F2C((uint64_t)v9, &qword_100815788);
  if ((v23 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v25 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v26 = *(int *)(v25 + 20);
  v28 = v38;
  v27 = v39;
  v29 = *(_QWORD *)(v38 + v26);
  v30 = *(_QWORD *)(v38 + v26 + 8);
  v31 = (_QWORD *)(v39 + v26);
  v32 = v31[1];
  if (v29 == *v31 && v30 == v32
    || (v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, *v31, v32, 0), v34 = 0, (v33 & 1) != 0))
  {
    v34 = *(_BYTE *)(v28 + *(int *)(v25 + 24)) ^ *(_BYTE *)(v27 + *(int *)(v25 + 24)) ^ 1;
  }
  return v34 & 1;
}

unint64_t sub_100201988()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100815838;
  if (!qword_100815838)
  {
    v1 = type metadata accessor for SystemImage(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SystemImage, v1);
    atomic_store(result, (unint64_t *)&qword_100815838);
  }
  return result;
}

uint64_t sub_1002019D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_1008131E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100201A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  __n128 v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char **v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  char v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  __n128 v97;
  void (*v98)(_QWORD **, _QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  _QWORD *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t, __n128);
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char **v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  unint64_t *v153;
  _QWORD *v154;
  _QWORD *v155;

  v124 = sub_10000DAF8((uint64_t *)&unk_100815850);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v139 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for SystemImage(0);
  v137 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v121 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_100815788);
  __chkstk_darwin(v6);
  v125 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10000DAF8(&qword_100815830);
  __chkstk_darwin(v127);
  v140 = (uint64_t)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v149 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v126 = (uint64_t)&v117 - v12;
  __chkstk_darwin(v13);
  v152 = (uint64_t)&v117 - v14;
  __chkstk_darwin(v15);
  v150 = (uint64_t)&v117 - v16;
  v17 = sub_10000DAF8(&qword_100815860);
  v144 = *(_QWORD *)(v17 - 8);
  v145 = v17;
  __chkstk_darwin(v17);
  v131 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8(&qword_100815868);
  __chkstk_darwin(v19);
  v153 = (unint64_t *)((char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v143 = (char **)((char *)&v117 - v22);
  v23 = type metadata accessor for IndexPath(0);
  v141 = *(_QWORD *)(v23 - 8);
  v142 = v23;
  __chkstk_darwin(v23);
  v122 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v151 = (char *)&v117 - v26;
  __chkstk_darwin(v27);
  v118 = (char *)&v117 - v28;
  v148 = (_QWORD *)sub_10000DAF8(&qword_100815870);
  __chkstk_darwin(v148);
  v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v117 - v32;
  v34 = sub_10000DAF8(&qword_100815878);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v133 = (char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v39 = (char *)&v117 - v38;
  v136 = a1;
  v40 = sub_1001FE928(a1);
  v138 = a2;
  v41 = sub_1001FE928(a2);
  v154 = v41;
  v155 = v40;
  v42 = sub_10000DAF8((uint64_t *)&unk_100815880);
  v43 = sub_100010E80((unint64_t *)&qword_100809180, (uint64_t *)&unk_100815880, (uint64_t)&protocol conformance descriptor for [A]);
  BidirectionalCollection<>.difference<A>(from:)(&v155, v42, v42, v43, v43, &protocol witness table for String);
  v44 = v41;
  v45 = v34;
  swift_bridgeObjectRelease(v44);
  v46 = swift_bridgeObjectRelease(v40);
  v134 = v35;
  v132 = *(void (**)(char *, char *, uint64_t, __n128))(v35 + 16);
  v132(v30, v39, v34, v46);
  v47 = sub_100010E80((unint64_t *)&unk_100815890, &qword_100815878, (uint64_t)&protocol conformance descriptor for CollectionDifference<A>);
  v117 = v39;
  v48 = (uint64_t)v33;
  dispatch thunk of Collection.startIndex.getter(&v154, v34, v47);
  v49 = v148;
  *(_QWORD *)&v30[*((int *)v148 + 9)] = v154;
  sub_10002548C((uint64_t)v30, (uint64_t)v33, &qword_100815870);
  v50 = &v33[*((int *)v49 + 9)];
  v51 = *(_QWORD **)v50;
  dispatch thunk of Collection.endIndex.getter(&v154, v45, v47);
  v135 = v45;
  if (v51 == v154)
  {
    v120 = _swiftEmptyArrayStorage;
    v147 = _swiftEmptyArrayStorage;
  }
  else
  {
    v147 = _swiftEmptyArrayStorage;
    v120 = _swiftEmptyArrayStorage;
    v130 = v48;
    v129 = v47;
    do
    {
      v98 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v154, v50, v45, v47);
      v100 = *(_QWORD *)v99;
      v101 = *(_QWORD *)(v99 + 16);
      v102 = *(unsigned __int8 *)(v99 + 33);
      v103 = *(_QWORD *)v99;
      v148 = *(_QWORD **)(v99 + 8);
      v146 = v101;
      sub_100203420(v103, (uint64_t)v148, v101);
      v98(&v154, 0);
      v104 = v133;
      ((void (*)(char *, uint64_t, uint64_t))v132)(v133, v48, v45);
      dispatch thunk of Collection.formIndex(after:)(v50, v45, v47);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v104, v45);
      if (v102 == 1)
      {
        IndexPath.init(item:section:)(v100, 0);
        v113 = (unint64_t)v120;
        if ((swift_isUniquelyReferenced_nonNull_native(v120) & 1) == 0)
          v113 = sub_1003DAF74(0, *(_QWORD *)(v113 + 16) + 1, 1, v113);
        v115 = *(_QWORD *)(v113 + 16);
        v114 = *(_QWORD *)(v113 + 24);
        if (v115 >= v114 >> 1)
          v113 = sub_1003DAF74(v114 > 1, v115 + 1, 1, v113);
        *(_QWORD *)(v113 + 16) = v115 + 1;
        v116 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
        v120 = (_QWORD *)v113;
        (*(void (**)(unint64_t, char *, uint64_t))(v141 + 32))(v113 + v116 + *(_QWORD *)(v141 + 72) * v115, v118, v142);
        v109 = v100;
        v110 = v148;
        v111 = v146;
      }
      else
      {
        IndexPath.init(item:section:)(v100, 0);
        v105 = (unint64_t)v147;
        if ((swift_isUniquelyReferenced_nonNull_native(v147) & 1) == 0)
          v105 = sub_1003DAF74(0, *(_QWORD *)(v105 + 16) + 1, 1, v105);
        v107 = *(_QWORD *)(v105 + 16);
        v106 = *(_QWORD *)(v105 + 24);
        if (v107 >= v106 >> 1)
          v105 = sub_1003DAF74(v106 > 1, v107 + 1, 1, v105);
        *(_QWORD *)(v105 + 16) = v107 + 1;
        v108 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
        v147 = (_QWORD *)v105;
        (*(void (**)(unint64_t, char *, uint64_t))(v141 + 32))(v105 + v108 + *(_QWORD *)(v141 + 72) * v107, v151, v142);
        v109 = v100;
        v110 = v148;
        v111 = v146;
      }
      sub_100203428(v109, (uint64_t)v110, v111);
      v112 = *(_QWORD **)v50;
      v48 = v130;
      v45 = v135;
      v47 = v129;
      dispatch thunk of Collection.endIndex.getter(&v154, v135, v129);
    }
    while (v112 != v154);
  }
  sub_100010F2C(v48, &qword_100815870);
  v146 = *(_QWORD *)(v136 + 16);
  v52 = swift_bridgeObjectRetain(v136);
  v53 = 0;
  v148 = _swiftEmptyArrayStorage;
  v54 = v138;
  v55 = v140;
  v56 = v150;
  v57 = v145;
  v58 = (uint64_t)v153;
  v59 = v119;
  while (v53 == v146)
  {
    v60 = 1;
    v53 = v146;
LABEL_10:
    v63 = v144;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v144 + 56))(v58, v60, 1, v57, v52);
    v64 = v143;
    sub_10002548C(v58, (uint64_t)v143, &qword_100815868);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v63 + 48))(v64, 1, v57) == 1)
    {
      v97 = swift_bridgeObjectRelease(v136);
      (*(void (**)(char *, uint64_t, __n128))(v134 + 8))(v117, v135, v97);
      return;
    }
    v151 = *v64;
    sub_100203390((uint64_t)v64 + *(int *)(v57 + 48), v56);
    v65 = *(_QWORD *)(v54 + 16);
    if (v65)
    {
      v66 = (_QWORD *)(v56 + *(int *)(v59 + 20));
      v67 = v54 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
      v68 = v54;
      v69 = *(_QWORD *)(v149 + 72);
      swift_bridgeObjectRetain(v68);
      while (1)
      {
        sub_100203430(v67, (uint64_t)v10);
        v70 = &v10[*(int *)(v59 + 20)];
        v71 = *((_QWORD *)v70 + 1);
        v72 = v66[1];
        v73 = *(_QWORD *)v70 == *v66 && v71 == v72;
        if (v73 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v70, v71, *v66, v72, 0) & 1) != 0)
          break;
        sub_1002033D4((uint64_t)v10);
        v67 += v69;
        if (!--v65)
        {
          v54 = v138;
          swift_bridgeObjectRelease(v138);
          v56 = v150;
          v58 = (uint64_t)v153;
          goto LABEL_5;
        }
      }
      v54 = v138;
      swift_bridgeObjectRelease(v138);
      v74 = v126;
      sub_100203390((uint64_t)v10, v126);
      v75 = v152;
      sub_100203390(v74, v152);
      v76 = v55;
      v77 = v55 + *(int *)(v127 + 48);
      sub_100018ADC(v150, v76, &qword_100815788);
      sub_100018ADC(v75, v77, &qword_100815788);
      v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
      v79 = v128;
      if (v78(v76, 1, v128) == 1)
      {
        v80 = v78(v77, 1, v79);
        v57 = v145;
        if (v80 != 1)
          goto LABEL_25;
        sub_100010F2C(v140, &qword_100815788);
        v58 = (uint64_t)v153;
      }
      else
      {
        v81 = v125;
        sub_100018ADC(v76, v125, &qword_100815788);
        if (v78(v77, 1, v79) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v81, v79);
          v57 = v145;
LABEL_25:
          sub_100010F2C(v140, &qword_100815830);
          goto LABEL_33;
        }
        v82 = v137;
        v83 = v121;
        (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v121, v77, v79);
        v84 = sub_100201988();
        v85 = dispatch thunk of static Equatable.== infix(_:_:)(v125, v83, v79, v84);
        v86 = *(void (**)(char *, uint64_t))(v82 + 8);
        v87 = v83;
        v88 = v125;
        v86(v87, v79);
        v86((char *)v88, v79);
        sub_100010F2C(v76, &qword_100815788);
        v57 = v145;
        v58 = (uint64_t)v153;
        if ((v85 & 1) == 0)
          goto LABEL_33;
      }
      v89 = v66[1];
      v90 = (_QWORD *)(v152 + *(int *)(v59 + 20));
      v91 = v90[1];
      v92 = *v66 == *v90 && v89 == v91;
      if ((v92 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v66, v89, *v90, v91, 0) & 1) != 0)
        && *(unsigned __int8 *)(v150 + *(int *)(v59 + 24)) == *(unsigned __int8 *)(v152 + *(int *)(v59 + 24)))
      {
        v55 = v140;
        v56 = v150;
        goto LABEL_38;
      }
LABEL_33:
      IndexPath.init(item:section:)(v151, 0);
      v93 = v139 + *(int *)(v124 + 48);
      (*(void (**)(void))(v141 + 32))();
      sub_100203430(v152, v93);
      if ((swift_isUniquelyReferenced_nonNull_native(v148) & 1) == 0)
        v148 = (_QWORD *)sub_1003DAF60(0, v148[2] + 1, 1, (unint64_t)v148);
      v55 = v140;
      v95 = v148[2];
      v94 = v148[3];
      if (v95 >= v94 >> 1)
        v148 = (_QWORD *)sub_1003DAF60(v94 > 1, v95 + 1, 1, (unint64_t)v148);
      v56 = v150;
      v96 = v148;
      v148[2] = v95 + 1;
      sub_10002548C(v139, (uint64_t)v96+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(_QWORD *)(v123 + 72) * v95, (uint64_t *)&unk_100815850);
      v58 = (uint64_t)v153;
LABEL_38:
      sub_1002033D4(v152);
      sub_1002033D4(v56);
    }
    else
    {
LABEL_5:
      sub_1002033D4(v56);
      v57 = v145;
    }
  }
  if (v53 < v146)
  {
    v61 = (uint64_t)&v131[*(int *)(v57 + 48)];
    sub_100203430(v136+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ *(_QWORD *)(v149 + 72) * v53, v61);
    v62 = (uint64_t)v153 + *(int *)(v57 + 48);
    *v153 = v53;
    sub_100203390(v61, v62);
    v60 = 0;
    ++v53;
    v58 = (uint64_t)v153;
    goto LABEL_10;
  }
  __break(1u);
}

id sub_100202748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v4 = type metadata accessor for SystemImage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100815788);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018ADC(a1, (uint64_t)v10, &qword_100815788);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    if (qword_100806B40 != -1)
      swift_once(&qword_100806B40, sub_10054F6E8);
    v12 = type metadata accessor for FontUseCase(0);
    v13 = sub_10000EFC4(v12, (uint64_t)qword_10086B450);
    v14 = (void *)static UIFont.preferredFont(forUseWith:in:)(v13, a2);
    v15 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v14, 2);

    v11 = (void *)static SystemImage.load(_:with:)(v7, v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v16 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v17 = sub_10054F968(v11, *(_QWORD *)(a1 + *(int *)(v16 + 20)), *(_QWORD *)(a1 + *(int *)(v16 + 20) + 8));

  return v17;
}

void sub_100202920(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  id v43;
  Class isa;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  NSString v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  NSString v69;
  id v70;
  id v71;
  id v72;
  NSString v73;
  id v74;
  id v75;
  uint64_t v76;
  NSString v77;
  id v78;
  id v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  void *v87;
  BOOL v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  void **aBlock;
  uint64_t v121;
  void *v122;
  void *v123;
  void *v124;
  uint64_t v125;

  v109 = type metadata accessor for SystemImage(0);
  v3 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_100815788);
  __chkstk_darwin(v6);
  v117 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  __chkstk_darwin(v112);
  v119 = (uint64_t)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v110 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100815848);
  __chkstk_darwin(v12);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v99 - v16;
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_tokens];
  swift_bridgeObjectRetain(v18);
  v101 = a1;
  sub_100201A18(v19, a1);
  v102 = v20;
  v22 = v21;
  v100 = v23;
  swift_bridgeObjectRelease(v18);
  v24 = *(_QWORD *)(v22 + 16);
  if (v24)
  {
    v103 = v5;
    v116 = OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView;
    swift_bridgeObjectRetain(v22);
    v25 = 0;
    v26 = v1;
    v107 = v3;
    v108 = v1;
    v111 = v22;
    v27 = v119;
    v28 = v110;
    v113 = v24;
    v114 = v17;
    v115 = v11;
    while (1)
    {
      if (v25 == v24)
      {
        v29 = sub_10000DAF8((uint64_t *)&unk_100815850);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 1, 1, v29);
        v118 = v24;
      }
      else
      {
        v30 = v111;
        if (v25 >= *(_QWORD *)(v111 + 16))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return;
        }
        v31 = v25;
        v32 = sub_10000DAF8((uint64_t *)&unk_100815850);
        v33 = v30;
        v34 = *(_QWORD *)(v32 - 8);
        sub_100018ADC(v33+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v31, (uint64_t)v14, (uint64_t *)&unk_100815850);
        v118 = v31 + 1;
        v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        v27 = v119;
        v35(v14, 0, 1, v32);
      }
      sub_10002548C((uint64_t)v14, (uint64_t)v17, &qword_100815848);
      v36 = sub_10000DAF8((uint64_t *)&unk_100815850);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v17, 1, v36) == 1)
      {
        v22 = v111;
        swift_bridgeObjectRelease(v111);
        v1 = v26;
        break;
      }
      v37 = v17;
      v38 = v14;
      v39 = (uint64_t)&v37[*(int *)(v36 + 48)];
      v40 = v11;
      v41 = v9;
      (*(void (**)(char *))(v28 + 32))(v40);
      sub_100203390(v39, v27);
      v42 = *(void **)&v26[v116];
      if (!v42)
        goto LABEL_29;
      v43 = v42;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v45 = objc_msgSend(v43, "cellForItemAtIndexPath:", isa);

      v46 = (uint64_t)v117;
      v14 = v38;
      if (v45)
      {
        v47 = type metadata accessor for GuidedSearchTokenCell();
        v48 = swift_dynamicCastClass(v45, v47);
        if (v48)
        {
          v49 = (_BYTE *)v48;
          v50 = v119;
          sub_100018ADC(v119, v46, &qword_100815788);
          v51 = v107;
          v52 = v109;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v46, 1, v109) == 1)
          {
            v53 = *(_QWORD *)(v50 + *(int *)(v112 + 20) + 8);
            v54 = objc_allocWithZone((Class)NSAttributedString);
            swift_bridgeObjectRetain(v53);
            v55 = String._bridgeToObjectiveC()();
            v56 = objc_msgSend(v54, "initWithString:", v55, swift_bridgeObjectRelease(v53).n128_f64[0]);
          }
          else
          {
            v57 = v103;
            (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v103, v46, v52);
            sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
            v58 = v51;
            if (qword_100806B40 != -1)
              swift_once(&qword_100806B40, sub_10054F6E8);
            v59 = type metadata accessor for FontUseCase(0);
            v60 = sub_10000EFC4(v59, (uint64_t)qword_10086B450);
            v61 = (void *)static UIFont.preferredFont(forUseWith:in:)(v60, v49);
            v62 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v61, 2);

            v63 = (void *)static SystemImage.load(_:with:)(v57, v62);
            (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v52);
            v50 = v119;
            v64 = (uint64_t *)(v119 + *(int *)(v112 + 20));
            v66 = *v64;
            v65 = v64[1];
            v105 = v66;
            v104 = v65;
            v67 = objc_allocWithZone((Class)NSMutableAttributedString);
            v68 = v63;
            v106 = v68;
            v69 = String._bridgeToObjectiveC()();
            v55 = objc_msgSend(v67, "initWithString:", v69);

            v70 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v68);
            v71 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v70);

            objc_msgSend(v55, "appendAttributedString:", v71);
            v72 = objc_allocWithZone((Class)NSAttributedString);
            v73 = String._bridgeToObjectiveC()();
            v74 = objc_msgSend(v72, "initWithString:", v73);

            objc_msgSend(v55, "appendAttributedString:", v74);
            v75 = objc_allocWithZone((Class)NSAttributedString);
            v76 = v104;
            swift_bridgeObjectRetain(v104);
            v77 = String._bridgeToObjectiveC()();
            v78 = objc_msgSend(v75, "initWithString:", v77, swift_bridgeObjectRelease(v76).n128_f64[0]);

            objc_msgSend(v55, "appendAttributedString:", v78);
            v56 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "initWithAttributedString:", v55);
            v79 = v106;

          }
          v80 = *(unsigned __int8 *)(v50 + *(int *)(v112 + 24));
          objc_msgSend(*(id *)&v49[OBJC_IVAR____TtC20ProductPageExtension21GuidedSearchTokenCell_label], "setAttributedText:", v56);
          v81 = v49[OBJC_IVAR____TtC20ProductPageExtension21GuidedSearchTokenCell_isOn];
          v49[OBJC_IVAR____TtC20ProductPageExtension21GuidedSearchTokenCell_isOn] = v80;
          v26 = v108;
          v14 = v38;
          if (v80 != v81)
            sub_10054EE80();
          objc_msgSend(v49, "setNeedsLayout");

          v28 = v110;
        }
        else
        {
          v56 = v45;
        }

      }
      v27 = v119;
      sub_1002033D4(v119);
      v9 = v41;
      v11 = v115;
      (*(void (**)(void))(v28 + 8))();
      v24 = v113;
      v17 = v114;
      v25 = v118;
    }
  }
  v82 = v22;
  v83 = v102;
  v84 = *(_QWORD *)(v102 + 16);
  if (v84)
  {
    v85 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView];
    if (!v85)
      goto LABEL_31;
    v86 = v85;
    objc_msgSend(v86, "contentOffset");
    objc_msgSend(v86, "setContentOffset:animated:", 0);

    *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_layout]
             + OBJC_IVAR____TtC20ProductPageExtension44GuidedSearchTokenPaletteCollectionViewLayout_pinningEnabled) = 1;
  }
  v87 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView];
  if (!v87)
    goto LABEL_30;
  v88 = v84 != 0;
  v89 = (_QWORD *)swift_allocObject(&unk_100745120, 56, 7);
  v90 = v101;
  v89[2] = v1;
  v89[3] = v90;
  v89[4] = v83;
  v89[5] = v82;
  v89[6] = v100;
  v91 = swift_allocObject(&unk_100745148, 32, 7);
  *(_QWORD *)(v91 + 16) = sub_100203304;
  *(_QWORD *)(v91 + 24) = v89;
  v124 = sub_100036D9C;
  v125 = v91;
  v92 = v1;
  aBlock = _NSConcreteStackBlock;
  v121 = 1107296256;
  v122 = sub_100184A1C;
  v123 = &unk_100745160;
  v93 = _Block_copy(&aBlock);
  v94 = v87;
  v95 = v92;
  swift_bridgeObjectRetain(v90);
  swift_release();
  v96 = swift_allocObject(&unk_100745198, 24, 7);
  swift_unknownObjectWeakInit(v96 + 16, v95);
  v97 = swift_allocObject(&unk_1007451C0, 32, 7);
  *(_BYTE *)(v97 + 16) = v88;
  *(_QWORD *)(v97 + 24) = v96;
  v124 = sub_100203384;
  v125 = v97;
  aBlock = _NSConcreteStackBlock;
  v121 = 1107296256;
  v122 = sub_10004A774;
  v123 = &unk_1007451D8;
  v98 = _Block_copy(&aBlock);
  objc_msgSend(v94, "performBatchUpdates:completion:", v93, v98, swift_release().n128_f64[0]);
  _Block_release(v98);
  _Block_release(v93);
  swift_release();

}

uint64_t sub_1002032C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100203304()
{
  uint64_t *v0;

  sub_1001FFC60(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100203314()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100203324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100203334(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10020333C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100203360()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100203384(uint64_t a1)
{
  uint64_t v1;

  sub_1001FFD88(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100203390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002033D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100203410()
{
  uint64_t v0;

  sub_1001FFF88(v0);
}

void sub_100203418(uint64_t a1)
{
  uint64_t v1;

  sub_100200014(a1, v1);
}

uint64_t sub_100203420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRetain(a3);
}

uint64_t sub_100203428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRelease(a3);
}

uint64_t sub_100203430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100203474()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_onSelect];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_maskLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMask] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMask] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_leadingGradientMaskIsHidden] = 2;
  v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_trailingGradientMaskIsHidden] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionCalculator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsScrollObserver] = 0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_containerImpressionMetrics];
  v3 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/GuidedSearchTokenPaletteView.swift", 55, 2, 58, 0);
  __break(1u);
}

double sub_100203584(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  uint64_t v18;

  v4 = sub_10000DAF8(&qword_1008158A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100200860(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008158A0);
    return 0.0;
  }
  else
  {
    sub_100203390((uint64_t)v6, (uint64_t)v10);
    objc_msgSend(a1, "bounds");
    v13 = v12;
    v15 = v14;
    v16 = sub_100202748((uint64_t)v10, (uint64_t)a1);
    v11 = sub_10054F944(v16, v10[*(int *)(v7 + 24)], a1, v13, v15);

    sub_1002033D4((uint64_t)v10);
  }
  return v11;
}

double sub_1002036E4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  double result;
  uint64_t *v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v3 = v2;
  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v3 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_containerImpressionMetrics;
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_containerImpressionMetrics, v21, 0, 0);
  sub_100018ADC(v13, (uint64_t)v8, &qword_1008131E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100010F2C((uint64_t)v8, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionCalculator);
    v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionCalculator, v20, 32, 0);
    v17 = *v15;
    if (v17)
    {
      swift_endAccess(v20);
      objc_msgSend(a1, "frame", swift_retain(v17).n128_f64[0]);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v12, 1);
      v18 = swift_release();
      (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v18);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v16);
      swift_endAccess(v20);
    }
  }
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator))
  {
    v19 = swift_retain(*(_QWORD *)(v3
                                 + OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator));
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.register(for:at:)(a1, a2, v19);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1002038E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void (*v11)(char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for VerticalStack(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v14 - v8;
  VerticalStack.init(with:)(sub_1001815F4, 0, v7);
  swift_retain(v1);
  VerticalStack.adding(_:with:)(v1 + 256, sub_100203FE8, v1);
  v10 = swift_release();
  v11 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v11(v5, v2, v10);
  swift_retain(v1);
  VerticalStack.adding(_:with:)(v1 + 216, sub_10014294C, v1);
  v12 = swift_release();
  return ((uint64_t (*)(char *, uint64_t, __n128))v11)(v9, v2, v12);
}

uint64_t sub_100203A00(uint64_t a1, uint64_t a2)
{
  _BYTE v3[40];

  sub_10000EF80(a2 + 16, (uint64_t)v3);
  return VerticalStack.Properties.topSpacing.setter(v3);
}

uint64_t sub_100203A38(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_10000EF80(a2 + 176, (uint64_t)v4);
  VerticalStack.Properties.topSpacing.setter(v4);
  sub_10000EF80(a2 + 96, (uint64_t)v4);
  return VerticalStack.Properties.bottomSpacing.setter(v4);
}

uint64_t sub_100203A88()
{
  _QWORD *v0;

  sub_100204024(v0 + 2);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 27);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 32);
  return swift_deallocClassInstance(v0, 296, 7);
}

uint64_t type metadata accessor for ShelfFooterViewLayout()
{
  return objc_opt_self(_TtC20ProductPageExtension21ShelfFooterViewLayout);
}

uint64_t destroy for ShelfFooterViewLayout.Metrics(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 5);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 10);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 15);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 20);
}

_OWORD *initializeWithCopy for ShelfFooterViewLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

_QWORD *assignWithCopy for ShelfFooterViewLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_10002D2D4(a1, a2);
  sub_10002D2D4(a1 + 5, a2 + 5);
  sub_10002D2D4(a1 + 10, a2 + 10);
  sub_10002D2D4(a1 + 15, a2 + 15);
  sub_10002D2D4(a1 + 20, a2 + 20);
  return a1;
}

__n128 initializeWithTake for ShelfFooterViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ShelfFooterViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfFooterViewLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfFooterViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfFooterViewLayout.Metrics()
{
  return &type metadata for ShelfFooterViewLayout.Metrics;
}

uint64_t sub_100203DE0()
{
  return sub_1002038E4();
}

_OWORD *sub_100203E00@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100203FB4((_OWORD *)(*(_QWORD *)v1 + 16), a1);
}

uint64_t sub_100203E10(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651FF8, a2);
  return CustomLayout.measure(toFit:with:)(a1, a2, WitnessTable, a3, a4);
}

uint64_t sub_100203E68(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651FF8, a2);
  return CustomLayout.place(at:with:)(a1, a2, WitnessTable, a3, a4, a5, a6);
}

uint64_t sub_100203ED8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100651FF8, a2);
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, WitnessTable);
}

uint64_t sub_100203F20()
{
  return sub_100203F68(&qword_100810F88, (uint64_t)&unk_100651F98);
}

uint64_t sub_100203F44()
{
  return sub_100203F68(&qword_100815960, (uint64_t)&unk_100651F70);
}

uint64_t sub_100203F68(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ShelfFooterViewLayout();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100203FA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006C93BC, 1);
}

_OWORD *sub_100203FB4(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ShelfFooterViewLayout.Metrics(a2, a1);
  return a2;
}

uint64_t sub_100203FE8()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_10000EF80(v0 + 16, (uint64_t)v2);
  return VerticalStack.Properties.topSpacing.setter(v2);
}

_QWORD *sub_100204024(_QWORD *a1)
{
  destroy for ShelfFooterViewLayout.Metrics(a1);
  return a1;
}

void *sub_100204050()
{
  return &protocol witness table for VerticalStack;
}

void sub_10020405C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_delegate);
    if (v5)
    {
      v6 = v5;
      v7 = v5 + OBJC_IVAR____TtC20ProductPageExtension24PageFacetsViewController_delegate;
      v8 = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC20ProductPageExtension24PageFacetsViewController_delegate);
      if (v8)
      {
        v10 = v8;
        v11 = *(_QWORD *)(v7 + 8);
        ObjectType = swift_getObjectType(v8, v9);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v6, ObjectType, v11);

        swift_unknownObjectRelease(v6);
        v13 = v10;
      }
      else
      {

        v13 = v6;
      }
      swift_unknownObjectRelease(v13);
    }
    else
    {

    }
  }
}

double sub_100204128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  double result;

  v1 = v0;
  v2 = PageFacetsPresenter.FacetsState.selectedFacetOptions.getter();
  if (*(_QWORD *)(v2 + 16)
    && (v3 = sub_10057EEE0(v1 + OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_facet),
        (v4 & 1) != 0))
  {
    v5 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v3);
    swift_bridgeObjectRetain(v5);
  }
  else
  {
    v5 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease(v2);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_selectedFacetOptions);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_selectedFacetOptions) = v5;
  swift_bridgeObjectRetain(v5);
  sub_100205CB4(v7, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v5);
  if ((v9 & 1) == 0)
    sub_1002042D0();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

double (*sub_1002041D4(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_1007453A0, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_100206424;
}

void sub_1002042D0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  Swift::OpaquePointer v9;
  void *v10;
  id v11;
  double *v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  _QWORD v17[2];

  v1 = v0;
  v2 = sub_10000DAF8(&qword_1008159E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource;
  v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource];
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = v7;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v17[0] = 0xD000000000000030;
  v17[1] = 0x8000000100685120;
  v9._rawValue = (void *)NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v17, v2);
  NSDiffableDataSourceSnapshot.reloadItems(_:)(v9);
  swift_bridgeObjectRelease(v9._rawValue);
  v10 = *(void **)&v1[v6];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v5, 1, 0, 0);

  v12 = (double *)&v1[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_preselectionContentOffset];
  if ((v1[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_preselectionContentOffset + 16] & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  v14 = *v12;
  v13 = v12[1];
  v15 = objc_msgSend(v1, "collectionView");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "setContentOffset:", v14, v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *v12 = 0.0;
    v12[1] = 0.0;
    *((_BYTE *)v12 + 16) = 1;
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100204468()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  _QWORD aBlock[6];
  objc_super v37;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10000DAF8(&qword_100815A08);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v34 - v8;
  v37.receiver = v0;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "viewDidLoad", v7);
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  v11 = v10;
  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "systemBackgroundColor");
  objc_msgSend(v11, "setBackgroundColor:", v13);

  v14 = objc_msgSend(v0, "collectionView");
  if (!v14)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v15 = v14;
  v16 = objc_msgSend(v12, "systemBackgroundColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  v17 = swift_allocObject(&unk_100745378, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
  v19 = type metadata accessor for PageFacets.Facet.Option(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100206574, v17, v18, v19);
  v20 = objc_msgSend(v0, "collectionView");
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v21 = v20;
  v22 = v35;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v35, v9, v3);
  v23 = *(unsigned __int8 *)(v4 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_100745418, v24 + v5, v23 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v25 + v24, v22, v3);
  v26 = objc_allocWithZone((Class)sub_10000DAF8(&qword_100815A10));
  v27 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v21, sub_1002065E0, v25);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v28 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource] = v27;

  sub_1002047C8();
  v29 = objc_msgSend(v1, "collectionView");
  if (v29)
  {
    v30 = v29;
    v31 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    aBlock[4] = sub_10020493C;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100261DE0;
    aBlock[3] = &unk_100745430;
    v32 = _Block_copy(aBlock);
    v33 = objc_msgSend(v31, "initWithSectionProvider:", v32);
    _Block_release(v32);
    objc_msgSend(v30, "setCollectionViewLayout:", v33, swift_release().n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1002047C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[2];

  v1 = v0;
  v2 = sub_10000DAF8(&qword_1008159E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageFacets.Facet.Option(0);
  v7 = sub_10000E720(&qword_1008159E8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
  NSDiffableDataSourceSnapshot.init()(&type metadata for String, v6, &protocol witness table for String, v7);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100735550);
  v8 = PageFacets.Facet.options.getter();
  v11[0] = 0;
  v11[1] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v8, v11, v2);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource);
  if (v9)
  {
    v10 = v9;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v5, 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10020493C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v3 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICollectionLayoutListConfiguration(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v3, v10);
  UICollectionLayoutListConfiguration.init(appearance:)(v7);
  sub_100018B6C(0, (unint64_t *)&qword_10082B7B0, NSCollectionLayoutSection_ptr);
  v13 = static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v12, a2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v13;
}

uint64_t sub_100204A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];
  char v47[24];

  v7 = sub_10000DAF8(&qword_10080B510);
  v8 = __chkstk_darwin(v7);
  v43 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v8);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for UICellAccessory.DisplayedState(0, v11);
  v14 = *(_QWORD *)(v42 - 8);
  v15 = __chkstk_darwin(v42);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIListContentConfiguration(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  static UIListContentConfiguration.cell()(v20);
  swift_beginAccess(a4, v47, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v24 = (char *)Strong;
    v41[1] = a1;
    v25 = PageFacets.Facet.Option.title.getter();
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_selectedFacetOptions];
    swift_bridgeObjectRetain(v28);
    v29 = sub_1005760D8(a3, v28);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
    {
      v30 = sub_10000DAF8(&qword_10080B518);
      v31 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v32 = *(_QWORD *)(v31 + 72);
      v33 = *(unsigned __int8 *)(v31 + 80);
      v34 = (v33 + 32) & ~v33;
      v35 = (_QWORD *)swift_allocObject(v30, v34 + v32, v33 | 7);
      *((_OWORD *)v35 + 1) = xmmword_100640720;
      v41[0] = (char *)v35 + v34;
      v36 = v42;
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for UICellAccessory.DisplayedState.always(_:), v42);
      v37 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v38 = v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v43, 1, 1, v37);
      UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v38, 0);
      static UICellAccessory.checkmark(displayed:options:)(v17, v13);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v45);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v36);
    }
    else
    {
      v35 = _swiftEmptyArrayStorage;
    }
    UICollectionViewListCell.accessories.setter(v35);

  }
  v46[3] = v18;
  v46[4] = &protocol witness table for UIListContentConfiguration;
  v39 = sub_1000119C0(v46);
  (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 16))(v39, v22, v18);
  UICollectionViewCell.contentConfiguration.setter(v46);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
}

uint64_t sub_100204D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = sub_10000DAF8(&qword_1008159F8);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageFacets.Facet.Option(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a3, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v12 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
  v13 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v9, v12, v10);
  sub_100206444((uint64_t)v9);
  return v13;
}

void sub_100204E2C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  void (*v51)(_QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  __n128 v56;
  char *v57;
  void (*v58)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __n128 v65;
  uint64_t v66;
  int v67;
  _BYTE *v68;
  _BYTE *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_BYTE *, _QWORD, uint64_t, uint64_t);
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  char v78;
  __n128 v79;
  uint64_t (*v80)(_BYTE *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_BYTE *, uint64_t);
  uint64_t v85;
  Class isa;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char v92;
  __n128 v93;
  void (*v94)(_BYTE *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  __n128 v108;
  void *v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  __n128 v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE v129[12];
  unsigned int v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  void (*v139)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE *v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  void *v158;
  _BYTE *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  _BYTE *v163;
  void **aBlock;
  uint64_t v165;
  uint64_t (*v166)(uint64_t);
  void *v167;
  void (*v168)();
  uint64_t v169;
  void **v170;
  uint64_t v171;

  v158 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v155 = *(_QWORD *)(v4 - 8);
  v156 = v4;
  v5 = __chkstk_darwin(v4);
  v154 = &v129[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DispatchQoS(0, v5);
  v152 = *(_QWORD *)(v7 - 8);
  v153 = v7;
  __chkstk_darwin(v7);
  v151 = &v129[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v148 = type metadata accessor for IndexPath(0);
  v147 = *(_QWORD *)(v148 - 8);
  v9 = __chkstk_darwin(v148);
  v145 = v10;
  v146 = &v129[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v150 = type metadata accessor for DispatchTime(0, v9);
  v144 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v143 = &v129[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v149 = &v129[-v13];
  v14 = sub_10000DAF8(&qword_10080B510);
  v15 = __chkstk_darwin(v14);
  v135 = &v129[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v137 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v15);
  v136 = *(_QWORD *)(v137 - 8);
  v17 = __chkstk_darwin(v137);
  v134 = &v129[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v133 = type metadata accessor for UICellAccessory.DisplayedState(0, v17);
  v132 = *(_QWORD *)(v133 - 8);
  v19 = __chkstk_darwin(v133);
  v131 = &v129[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for PageFacets.Facet.DisplayType(0, v19);
  v161 = *(char **)(v21 - 8);
  __chkstk_darwin(v21);
  v141 = &v129[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v140 = &v129[-v24];
  __chkstk_darwin(v25);
  v159 = &v129[-v26];
  __chkstk_darwin(v27);
  v157 = &v129[-v28];
  __chkstk_darwin(v29);
  v31 = &v129[-v30];
  __chkstk_darwin(v32);
  v34 = &v129[-v33];
  v35 = sub_10000DAF8(&qword_1008159F8);
  __chkstk_darwin(v35);
  v37 = &v129[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v38);
  v40 = &v129[-v39];
  v41 = type metadata accessor for PageFacets.Facet.Option(0);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v44 = &v129[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v45);
  v162 = v2;
  v163 = &v129[-v46];
  v47 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource];
  if (!v47)
  {
    __break(1u);
    return;
  }
  v48 = v47;
  v142 = a2;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
  {
    sub_100206444((uint64_t)v40);
    return;
  }
  v49 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 32);
  v160 = v41;
  v50 = v49(v163, v40, v41);
  v138 = &v162[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_facet];
  PageFacets.Facet.displayType.getter(v50);
  v51 = (void (*)(_QWORD))*((_QWORD *)v161 + 13);
  v130 = enum case for PageFacets.Facet.DisplayType.multipleSelection(_:);
  v139 = (void (*)(_BYTE *, _QWORD, uint64_t))v51;
  v51(v31);
  v52 = sub_10000E720(&qword_100815A00, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v21, v52);
  dispatch thunk of RawRepresentable.rawValue.getter(&v170, v21, v52);
  v53 = v165;
  v54 = v171;
  if (aBlock == v170 && v165 == v171)
  {
    v55 = 1;
    v54 = v165;
  }
  else
  {
    v55 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v165, v170, v171, 0);
  }
  swift_bridgeObjectRelease(v53);
  v56 = swift_bridgeObjectRelease(v54);
  v57 = (char *)*((_QWORD *)v161 + 1);
  ((void (*)(_BYTE *, uint64_t, __n128))v57)(v31, v21, v56);
  v161 = v57;
  ((void (*)(_BYTE *, uint64_t))v57)(v34, v21);
  v58 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 16);
  v59 = v160;
  v58(v44, v163, v160);
  if ((v55 & 1) != 0)
  {
    v60 = *(char **)(v42 + 8);
    ((void (*)(_BYTE *, uint64_t))v60)(v44, v59);
    v61 = v158;
LABEL_13:
    v68 = v157;
    objc_msgSend(v61, "contentOffset");
    v69 = v163;
    v70 = &v162[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_preselectionContentOffset];
    *(_QWORD *)v70 = v71;
    *((_QWORD *)v70 + 1) = v72;
    v70[16] = 0;
    v58(v37, v69, v59);
    v73 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v42 + 56);
    v67 = 1;
    v73(v37, 0, 1, v59);
    PageFacetsPresenter.didSelect(option:in:)(v37, v138);
    v66 = sub_100206444((uint64_t)v37);
    goto LABEL_14;
  }
  v62 = *(_QWORD *)&v162[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_selectedFacetOptions];
  swift_bridgeObjectRetain(v62);
  v63 = v59;
  v64 = sub_1005760D8((uint64_t)v44, v62);
  v65 = swift_bridgeObjectRelease(v62);
  v60 = *(char **)(v42 + 8);
  v66 = ((uint64_t (*)(_BYTE *, uint64_t, __n128))v60)(v44, v63, v65);
  if ((v64 & 1) == 0)
  {
    v61 = v158;
    v59 = v160;
    goto LABEL_13;
  }
  v67 = 0;
  v68 = v157;
  v61 = v158;
LABEL_14:
  PageFacets.Facet.displayType.getter(v66);
  v74 = v159;
  v139(v159, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v21);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v21, v52);
  dispatch thunk of RawRepresentable.rawValue.getter(&v170, v21, v52);
  v75 = v165;
  v76 = v171;
  if (aBlock == v170 && v165 == v171)
  {
    v77 = swift_bridgeObjectRelease_n(v165, 2);
  }
  else
  {
    v78 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v165, v170, v171, 0);
    swift_bridgeObjectRelease(v75);
    v79 = swift_bridgeObjectRelease(v76);
    v80 = (uint64_t (*)(_BYTE *, uint64_t))v161;
    ((void (*)(_BYTE *, uint64_t, __n128))v161)(v74, v21, v79);
    v81 = v80(v68, v21);
    if ((v78 & 1) != 0)
      goto LABEL_22;
    PageFacets.Facet.displayType.getter(v81);
    v139(v141, v130, v21);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v21, v52);
    dispatch thunk of RawRepresentable.rawValue.getter(&v170, v21, v52);
    v82 = v165;
    v83 = v171;
    if (aBlock != v170 || v165 != v171)
    {
      v92 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v165, v170, v171, 0);
      swift_bridgeObjectRelease(v82);
      v93 = swift_bridgeObjectRelease(v83);
      v94 = (void (*)(_BYTE *, uint64_t))v161;
      ((void (*)(_BYTE *, uint64_t, __n128))v161)(v141, v21, v93);
      v94(v140, v21);
      if ((v92 & 1) == 0)
      {
        ((void (*)(_BYTE *, uint64_t))v60)(v163, v160);
        return;
      }
      goto LABEL_22;
    }
    v77 = swift_bridgeObjectRelease_n(v165, 2);
    v74 = v141;
    v68 = v140;
  }
  v84 = (void (*)(_BYTE *, uint64_t))v161;
  ((void (*)(_BYTE *, uint64_t, __n128))v161)(v74, v21, v77);
  v84(v68, v21);
LABEL_22:
  v162 = v60;
  v85 = v142;
  if (v67)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v87 = objc_msgSend(v61, "cellForItemAtIndexPath:", isa);

    if (v87)
    {
      v88 = objc_opt_self(UICollectionViewListCell);
      if (swift_dynamicCastObjCClass(v87, v88))
      {
        v89 = UICollectionViewListCell.accessories.getter();
        v90 = *(_QWORD *)(v89 + 16);
        swift_bridgeObjectRelease(v89);
        if (v90)
        {
          v91 = _swiftEmptyArrayStorage;
        }
        else
        {
          v95 = sub_10000DAF8(&qword_10080B518);
          v96 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
          v97 = *(_QWORD *)(v96 + 72);
          v98 = *(unsigned __int8 *)(v96 + 80);
          v99 = (v98 + 32) & ~v98;
          v91 = (_QWORD *)swift_allocObject(v95, v99 + v97, v98 | 7);
          *((_OWORD *)v91 + 1) = xmmword_100640720;
          v161 = (char *)v91 + v99;
          v100 = v132;
          v101 = v131;
          v102 = v133;
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v132 + 104))(v131, enum case for UICellAccessory.DisplayedState.always(_:), v133);
          v103 = type metadata accessor for UICellAccessory.LayoutDimension(0);
          v104 = v61;
          v105 = v135;
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v135, 1, 1, v103);
          v106 = v134;
          v107 = v105;
          v61 = v104;
          UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v107, 0);
          static UICellAccessory.checkmark(displayed:options:)(v101, v106);
          (*(void (**)(_BYTE *, uint64_t))(v136 + 8))(v106, v137);
          (*(void (**)(_BYTE *, uint64_t))(v100 + 8))(v101, v102);
        }
        UICollectionViewListCell.accessories.setter(v91);
      }

    }
  }
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v109 = (void *)static OS_dispatch_queue.main.getter(v108);
  v110 = v143;
  static DispatchTime.now()();
  v111 = v149;
  + infix(_:_:)(v110, 0.05);
  v161 = *(char **)(v144 + 8);
  v112 = v150;
  ((void (*)(_BYTE *, uint64_t))v161)(v110, v150);
  v113 = v147;
  v114 = v146;
  v115 = v148;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v147 + 16))(v146, v85, v148);
  v116 = *(unsigned __int8 *)(v113 + 80);
  v117 = (v116 + 24) & ~v116;
  v118 = swift_allocObject(&unk_1007453C8, v117 + v145, v116 | 7);
  *(_QWORD *)(v118 + 16) = v61;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v113 + 32))(v118 + v117, v114, v115);
  v168 = sub_1002064F8;
  v169 = v118;
  aBlock = _NSConcreteStackBlock;
  v165 = 1107296256;
  v166 = sub_1000924A0;
  v167 = &unk_1007453E0;
  v119 = _Block_copy(&aBlock);
  v120 = v61;
  v121 = swift_release();
  v122 = v151;
  static DispatchQoS.unspecified.getter(v121);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v123 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v124 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v125 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  v126 = v154;
  v127 = v124;
  v128 = v156;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v127, v125, v156, v123);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v111, v122, v126, v119);
  _Block_release(v119);

  (*(void (**)(_BYTE *, uint64_t))(v155 + 8))(v126, v128);
  (*(void (**)(_BYTE *, uint64_t))(v152 + 8))(v122, v153);
  ((void (*)(_BYTE *, uint64_t))v161)(v111, v112);
  ((void (*)(_BYTE *, uint64_t))v162)(v163, v160);
}

uint64_t sub_100205BCC()
{
  return type metadata accessor for PageFacetOptionsViewController(0);
}

uint64_t type metadata accessor for PageFacetOptionsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008159C0;
  if (!qword_1008159C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageFacetOptionsViewController);
  return result;
}

uint64_t sub_100205C10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1006520B0;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for PageFacets.Facet(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_1006520C8;
    v4[5] = &unk_1006520E0;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100205CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = type metadata accessor for PageFacets.Facet.Option(0);
  v43 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  v12 = __chkstk_darwin(v10);
  v13 = (char *)&v36 - v11;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v37 = a1;
  v38 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v39 = (unint64_t)(v16 + 63) >> 6;
  v42 = a2 + 56;
  v36 = (char *)&v36 - v11;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v40 = (v18 - 1) & v18;
  v41 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v43;
    v25 = *(_QWORD *)(v43 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v43 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4, v12);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v9, v13, v4);
    v27 = *(_QWORD *)(a2 + 40);
    v28 = sub_10000E720(&qword_1008159E8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(a2 + 32);
    v31 = v29 & ~v30;
    if (((*(_QWORD *)(v42 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v4);
      return;
    }
    v32 = ~v30;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v26)(v6, *(_QWORD *)(a2 + 48) + v31 * v25, v4);
      v33 = sub_10000E720(&qword_1008159F0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v4, v33);
      v35 = *(void (**)(char *, uint64_t))(v43 + 8);
      v35(v6, v4);
      if ((v34 & 1) != 0)
        break;
      v31 = (v31 + 1) & v32;
      if (((*(_QWORD *)(v42 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
      {
        v35(v9, v4);
        return;
      }
    }
    v35(v9, v4);
    v13 = v36;
    a1 = v37;
    v18 = v40;
    v14 = v41;
    if (v40)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= v39)
      return;
    v21 = *(_QWORD *)(v38 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v39)
        return;
      v21 = *(_QWORD *)(v38 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v39)
          return;
        v21 = *(_QWORD *)(v38 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v39)
            return;
          v21 = *(_QWORD *)(v38 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v40 = (v21 - 1) & v21;
    v41 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v39)
    return;
  v21 = *(_QWORD *)(v38 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v39)
      return;
    v21 = *(_QWORD *)(v38 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
}

void *sub_100206024(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  objc_super v41;
  UIAction_optional v42;
  UIMenu_optional v43;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = sub_10000DAF8(&qword_1008159D0);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v3[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_diffableDataSource] = 0;
  v12 = &v3[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_preselectionContentOffset];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v13 = &v3[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_facet];
  v14 = type metadata accessor for PageFacets.Facet(0);
  v37 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v13, a1, v14);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_facetsPresenter] = a2;
  v15 = v3;
  v16 = swift_retain(a2);
  v17 = PageFacetsPresenter.selectedFacetOptions.getter(v16);
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_10057EEE0(a1), (v19 & 1) != 0))
  {
    v20 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain(v20);
  }
  else
  {
    v20 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension30PageFacetOptionsViewController_selectedFacetOptions] = v20;

  v21 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v41.receiver = v15;
  v41.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v41, "initWithCollectionViewLayout:", v21);

  v23 = v22;
  v24 = v23;
  if ((a3 & 1) != 0)
  {
    v25 = objc_msgSend(v23, "navigationItem");
    sub_100018B6C(0, (unint64_t *)&qword_100820720, UIBarButtonItem_ptr);
    sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
    v26 = swift_allocObject(&unk_100745378, 24, 7);
    v27 = swift_unknownObjectWeakInit(v26 + 16);
    v42.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v27, 0, 0, 0, sub_1002063F8, v26);
    v42.is_nil = 0;
    isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v42, v43).super.super.isa;
    objc_msgSend(v25, "setRightBarButtonItem:", isa);

  }
  v29 = objc_msgSend(v24, "navigationItem");
  PageFacets.Facet.title.getter(v29);
  v31 = v30;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setTitle:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  PageFacetsPresenter.onSelectedFacetOptionsChanged.getter(v33);
  v34 = sub_10000DAF8((uint64_t *)&unk_100816360);
  v35 = sub_100010E80(&qword_1008159D8, (uint64_t *)&unk_100816360, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v40, v34, v35);
  EventEmitter.addObserver<A>(on:target:method:)(v40, v24, sub_1002041D4, 0, v34, ObjectType, v35);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(a1, v14);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v40);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  return v24;
}

uint64_t sub_1002063D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002063F8(uint64_t a1)
{
  uint64_t v1;

  sub_10020405C(a1, v1);
}

uint64_t sub_100206400()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100206424()
{
  return sub_100204128();
}

uint64_t sub_100206444(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_1008159F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100206484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002064F8()
{
  uint64_t v0;
  void *v1;
  Class isa;

  type metadata accessor for IndexPath(0);
  v1 = *(void **)(v0 + 16);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "deselectItemAtIndexPath:animated:", isa, 1);

}

uint64_t sub_10020655C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10020656C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100206574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100204A4C(a1, a2, a3, v3);
}

uint64_t sub_10020657C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000DAF8(&qword_100815A08);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002065E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DAF8(&qword_100815A08) - 8) + 80);
  return sub_100204D30(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_100206640()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0, v2);
  sub_100011980(v5, qword_100815A18);
  sub_10000EFC4(v5, (uint64_t)qword_100815A18);
  if (qword_100806950 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v6 = sub_10000EFC4(v0, (uint64_t)qword_10086AAF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0xD00000000000001DLL, 0x80000001006520F0);
}

uint64_t sub_100206740()
{
  uint64_t v0;

  v0 = sub_10000DAF8(&qword_100812ED8);
  sub_100011980(v0, qword_100815A30);
  sub_10000EFC4(v0, (uint64_t)qword_100815A30);
  return PreferenceKey.init(_:)(0xD000000000000022, 0x8000000100693F90, &type metadata for Int);
}

uint64_t sub_1002067AC(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  id v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char v53;
  void *v54;

  v3 = type metadata accessor for OSLogger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v52 - v9;
  if ((static ResilientDeepLinkController.hasResilientDeepLinks(bag:)(a1, v8) & 1) != 0)
  {
    if (qword_100804E58 != -1)
      swift_once(&qword_100804E58, sub_100206640);
    sub_10000EFC4(v3, (uint64_t)qword_100815A18);
    v11 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v12 = type metadata accessor for LogMessage(0);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100640720;
    v14 = 0xD000000000000027;
    v15 = "Not showing due to resilient deep link.";
LABEL_5:
    LogMessage.init(stringLiteral:)(v14, (unint64_t)(v15 - 32) | 0x8000000000000000);
    Logger.info(_:)(v13, v3, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v13);
    goto LABEL_22;
  }
  v16 = type metadata accessor for LocalPreferences(0);
  static LocalPreferences.currentApplication.getter(v17);
  if (qword_100804E60 != -1)
    swift_once(&qword_100804E60, sub_100206740);
  v18 = sub_10000DAF8(&qword_100812ED8);
  v19 = sub_10000EFC4(v18, (uint64_t)qword_100815A30);
  Preferences.subscript.getter(&v52, v19, v16, &type metadata for Int, &protocol witness table for LocalPreferences);
  v20 = swift_release();
  if ((v53 == 1 || v52 <= 0) && (ASKBagContract.enableLocationPrivacyNotice.getter(v20) & 1) != 0)
  {
    if ((objc_msgSend((id)objc_opt_self(CLLocationManager), "locationServicesEnabled") & 1) != 0)
    {
      v21 = objc_msgSend(objc_allocWithZone((Class)CLLocationManager), "init");
      v22 = objc_msgSend(v21, "authorizationStatus");

      switch(v22)
      {
        case 0u:
          if (qword_100804E58 != -1)
            swift_once(&qword_100804E58, sub_100206640);
          sub_10000EFC4(v3, (uint64_t)qword_100815A18);
          v42 = sub_10000DAF8((uint64_t *)&unk_100808370);
          v43 = type metadata accessor for LogMessage(0);
          v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
          *(_OWORD *)(v44 + 16) = xmmword_100640720;
          v45 = 0xD000000000000031;
          v46 = "Not showing due to location status: notDetermined";
          goto LABEL_36;
        case 1u:
          if (qword_100804E58 != -1)
            swift_once(&qword_100804E58, sub_100206640);
          sub_10000EFC4(v3, (uint64_t)qword_100815A18);
          v47 = sub_10000DAF8((uint64_t *)&unk_100808370);
          v48 = type metadata accessor for LogMessage(0);
          v13 = swift_allocObject(v47, ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) | 7);
          *(_OWORD *)(v13 + 16) = xmmword_100640720;
          v14 = 0xD00000000000002ELL;
          v15 = "Not showing due to location status: restricted";
          goto LABEL_5;
        case 2u:
          if (qword_100804E58 != -1)
            swift_once(&qword_100804E58, sub_100206640);
          sub_10000EFC4(v3, (uint64_t)qword_100815A18);
          v49 = sub_10000DAF8((uint64_t *)&unk_100808370);
          v50 = type metadata accessor for LogMessage(0);
          v44 = swift_allocObject(v49, ((*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v50 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) | 7);
          *(_OWORD *)(v44 + 16) = xmmword_100640720;
          v45 = 0xD00000000000002ALL;
          v46 = "Not showing due to location status: denied";
LABEL_36:
          LogMessage.init(stringLiteral:)(v45, (unint64_t)(v46 - 32) | 0x8000000000000000);
          Logger.info(_:)(v44, v3, &protocol witness table for OSLogger);
          v51 = swift_bridgeObjectRelease(v44);
          sub_100206F74(v51);
          goto LABEL_22;
        case 3u:
        case 4u:
          if (qword_100804E58 != -1)
            swift_once(&qword_100804E58, sub_100206640);
          v23 = sub_10000EFC4(v3, (uint64_t)qword_100815A18);
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v23, v3);
          v24 = sub_10000DAF8((uint64_t *)&unk_100808370);
          v25 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
          v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ 2 * *(_QWORD *)(v25 + 72), *(unsigned __int8 *)(v25 + 80) | 7);
          *(_OWORD *)(v26 + 16) = xmmword_100640600;
          v27 = LogMessage.init(stringLiteral:)(0xD000000000000023, 0x8000000100694030);
          v28 = ASKBagContract.isSponsoredAdsEnabled.getter(v27);
          v54 = &type metadata for Bool;
          LOBYTE(v52) = v28 & 1;
          static LogMessage.safe(_:)(&v52);
          sub_10001282C((uint64_t)&v52);
          Logger.info(_:)(v26, v3, &protocol witness table for OSLogger);
          v29 = swift_bridgeObjectRelease(v26);
          v30 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v10, v3, v29);
          v31 = ASKBagContract.isSponsoredAdsEnabled.getter(v30);
          return v31 & 1;
        default:
          goto LABEL_22;
      }
    }
    if (qword_100804E58 != -1)
      swift_once(&qword_100804E58, sub_100206640);
    sub_10000EFC4(v3, (uint64_t)qword_100815A18);
    v40 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v41 = type metadata accessor for LogMessage(0);
    v13 = swift_allocObject(v40, ((*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v41 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100640720;
    v14 = 0xD00000000000002BLL;
    v15 = "Not showing due to system location disabled";
    goto LABEL_5;
  }
  if (qword_100804E58 != -1)
    swift_once(&qword_100804E58, sub_100206640);
  v32 = sub_10000EFC4(v3, (uint64_t)qword_100815A18);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v32, v3);
  v33 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v34 = type metadata accessor for LogMessage(0);
  v35 = swift_allocObject(v33, ((*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v34 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) | 7);
  *(_OWORD *)(v35 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD000000000000034, 0x8000000100693FC0);
  static LocalPreferences.currentApplication.getter(v36);
  Preferences.subscript.getter(&v52, v19, v16, &type metadata for Int, &protocol witness table for LocalPreferences);
  swift_release();
  if (v53)
    v37 = 0;
  else
    v37 = v52;
  v54 = &type metadata for Int;
  v52 = v37;
  static LogMessage.safe(_:)(&v52);
  sub_10001282C((uint64_t)&v52);
  Logger.info(_:)(v35, v3, &protocol witness table for OSLogger);
  v38 = swift_bridgeObjectRelease(v35);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v38);
LABEL_22:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_100206F6C(__n128 a1)
{
  uint64_t *v1;

  return sub_1002067AC(*v1, a1);
}

uint64_t sub_100206F74(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  char v21;
  void *v22;

  v1 = type metadata accessor for OSLogger(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_100812ED8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalPreferences(0);
  static LocalPreferences.currentApplication.getter(v10);
  if (qword_100804E60 != -1)
    swift_once(&qword_100804E60, sub_100206740);
  v11 = sub_10000EFC4(v5, (uint64_t)qword_100815A30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  v20 = 1;
  v21 = 0;
  Preferences.subscript.setter(&v20, v8, v9, &type metadata for Int, &protocol witness table for LocalPreferences);
  swift_release();
  if (qword_100804E58 != -1)
    swift_once(&qword_100804E58, sub_100206640);
  v12 = sub_10000EFC4(v1, (uint64_t)qword_100815A18);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v12, v1);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v14 = type metadata accessor for LogMessage(0);
  v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100693F70);
  static LocalPreferences.currentApplication.getter(v16);
  Preferences.subscript.getter(&v20, v11, v9, &type metadata for Int, &protocol witness table for LocalPreferences);
  swift_release();
  if (v21)
    v17 = 0;
  else
    v17 = v20;
  v22 = &type metadata for Int;
  v20 = v17;
  static LogMessage.safe(_:)(&v20);
  sub_10001282C((uint64_t)&v20);
  Logger.info(_:)(v15, v1, &protocol witness table for OSLogger);
  v18 = swift_bridgeObjectRelease(v15);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v18);
}

ValueMetadata *type metadata accessor for LocationPrivacyOnboardingStep()
{
  return &type metadata for LocationPrivacyOnboardingStep;
}

ValueMetadata *type metadata accessor for TabBarControllerFlowActionLogic()
{
  return &type metadata for TabBarControllerFlowActionLogic;
}

uint64_t sub_100207230(id *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v10 = *a1;
  v3 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
  v4 = v10;
  v5 = sub_10000DAF8(&qword_10080FDA8);
  if (swift_dynamicCast(&v11, &v10, v3, v5, 6))
  {
    v6 = *((_QWORD *)&v12 + 1);
    v7 = v13;
    sub_100010F08(&v11, *((uint64_t *)&v12 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a2, v6, v7);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v11);
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_100010F2C((uint64_t)&v11, (uint64_t *)&unk_10080FDB0);
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_10020731C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33[1] = a2;
  v3 = type metadata accessor for FlowPresentationContext(0);
  v35 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v34 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v33 - v6;
  v8 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_10080FF80);
  __chkstk_darwin(v11);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowDestination(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)v33 - v19;
  v21 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(&v38, v21);
  sub_1000EEC04(a1, (uint64_t)&v38, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_storeEnumTagMultiPayload(v20, v14, 50);
    sub_100010F2C((uint64_t)v13, (uint64_t *)&unk_10080FF80);
  }
  else
  {
    sub_100064D2C((uint64_t)v13, (uint64_t)v20);
  }
  sub_100063E3C((uint64_t)v20, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload(v17, v14) == 4)
  {
    sub_1000340D8((uint64_t)v20, type metadata accessor for FlowDestination);
    swift_release();
    v22 = 1;
  }
  else
  {
    v23 = swift_retain(a1);
    v24 = FlowAction.presentationContext.getter(v23);
    FlowAction.animationBehavior.getter(v24);
    swift_release();
    sub_10010F7D4((uint64_t)v7);
    v26 = v34;
    v25 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v34, enum case for FlowPresentationContext.select(_:), v3);
    v27 = sub_1002080E4();
    dispatch thunk of RawRepresentable.rawValue.getter(&v38, v3, v27);
    dispatch thunk of RawRepresentable.rawValue.getter(&v36, v3, v27);
    v28 = v39;
    v29 = v37;
    if (v38 == v36 && v39 == v37)
    {
      v22 = 1;
      v29 = v39;
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, v36, v37, 0);
    }
    swift_bridgeObjectRelease(v28);
    v30 = swift_bridgeObjectRelease(v29);
    v31 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
    v31(v26, v3, v30);
    ((void (*)(char *, uint64_t))v31)(v7, v3);
    sub_1000340D8((uint64_t)v10, type metadata accessor for FlowPresentationHints);
    sub_1000340D8((uint64_t)v20, type metadata accessor for FlowDestination);
    sub_1000340D8((uint64_t)v17, type metadata accessor for FlowDestination);
  }
  return v22 & 1;
}

void sub_100207650(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;

  v2 = sub_10000DAF8(&qword_100825650);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NavigationTab(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v32 - v14;
  v16 = objc_msgSend(a1, "tabBar", v13);
  v17 = objc_msgSend(v16, "items");

  if (!v17)
    return;
  v32 = v8;
  v18 = sub_100018B6C(0, &qword_100810E68, UITabBarItem_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if ((Array.isNotEmpty.getter(v19, v18) & 1) == 0
    || (v20 = objc_msgSend(a1, "selectedIndex"), v20 == (id)NSNotFound.getter()))
  {
    swift_bridgeObjectRelease(v19);
    return;
  }
  v21 = (unint64_t)objc_msgSend(a1, "selectedIndex");
  if ((v19 & 0xC000000000000001) == 0)
  {
    if ((v21 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v21 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v22 = *(id *)(v19 + 8 * v21 + 32);
      goto LABEL_9;
    }
    __break(1u);
    return;
  }
  v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
LABEL_9:
  v23 = v32;
  v24 = objc_msgSend(v22, "tag", swift_bridgeObjectRelease(v19).n128_f64[0]);

  NavigationTab.init(intValue:)(v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v23) == 1)
  {
    sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_100828370);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v7, v23);
    type metadata accessor for MetricsActivity(0);
    static MetricsActivity.current.getter(v25);
    v26 = NavigationTab.pageContext.getter();
    v28 = v27;
    dispatch thunk of MetricsActivity.changeContext(_:)(v26);
    swift_release();
    swift_bridgeObjectRelease(v28);
    v29 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v23);
    StoreTab.Identifier.init(navigationTab:)(v11);
    sub_1005FB608((uint64_t)v4);

    v30 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
    BaseObjectGraph.optional<A>(_:)(&v33, v30, v30);
    v31 = v33;
    if (v33)
    {
      dispatch thunk of AppStoreOnDeviceRecommendationsManager.loadInferences(for:)(v15);

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v23);
  }
}

uint64_t sub_1002079C0(uint64_t a1, void *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  double v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  _OWORD v79[2];
  uint64_t v80;

  v72 = a3;
  v5 = type metadata accessor for ActionOutcome(0);
  v71 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10000DAF8(&qword_100810E78);
  __chkstk_darwin(v66);
  v67 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for FlowAnimationBehavior(0);
  v75 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v76 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowPresentationContext(0);
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  __chkstk_darwin(v9);
  v77 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_10080FF80);
  __chkstk_darwin(v14);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FlowDestination(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_opt_self(UITabBarController);
  v22 = swift_dynamicCastObjCClass(a2, v21);
  if (v22)
  {
    v23 = (id)v22;
    v24 = a2;
  }
  else
  {
    v23 = objc_msgSend(a2, "tabBarController");
    if (!v23)
    {
      sub_10000DAF8(&qword_100808570);
      v64 = sub_100208084();
      v65 = swift_allocError(&type metadata for TabBarControllerFlowActionLogic.ImplementationError, v64, 0, 0);
      return Promise.__allocating_init(error:)(v65);
    }
  }
  v69 = v5;
  v25 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(v79, v25);
  sub_1000EEC04(a1, (uint64_t)v79, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    swift_storeEnumTagMultiPayload(v20, v17, 50);
    sub_100010F2C((uint64_t)v16, (uint64_t *)&unk_10080FF80);
  }
  else
  {
    sub_100064D2C((uint64_t)v16, (uint64_t)v20);
  }
  v26 = swift_retain(a1);
  v27 = FlowAction.presentationContext.getter(v26);
  FlowAction.animationBehavior.getter(v27);
  v28 = objc_msgSend(a2, "traitCollection", swift_release().n128_f64[0]);
  sub_10010F7D4(v77);

  v29 = objc_msgSend(v23, "viewControllers");
  if (!v29)
    goto LABEL_10;
  v30 = v29;
  v31 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
  v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

  __chkstk_darwin(v33);
  *(&v66 - 2) = (uint64_t)v20;
  v34 = sub_1001EF36C(sub_1002080C8, (uint64_t)(&v66 - 4), v32);
  *(_QWORD *)&v35 = swift_bridgeObjectRelease(v32).n128_u64[0];
  if (!v34)
  {
LABEL_10:
    v40 = sub_100302298(a2);
    if (!v40
      || (v78 = v40,
          v41 = sub_100018B6C(0, &qword_10080AA40, UINavigationController_ptr),
          v42 = sub_10000DAF8(&qword_10080AA48),
          (swift_dynamicCast(v79, &v78, v41, v42, 6) & 1) == 0))
    {
      v80 = 0;
      memset(v79, 0, sizeof(v79));
    }
    v43 = (uint64_t)v72;
    v72 = v20;
    v44 = objc_msgSend(a2, "traitCollection");
    sub_1003CAA8C(a1, (uint64_t)v44, (uint64_t)v79, v43);
    v46 = v45;

    if (v46)
    {
      ObjectType = swift_getObjectType();
      v47 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ResetsSelectedTab);
      if (v47)
        v49 = v47;
      else
        v49 = 0;
      if (v47)
        v50 = v46;
      else
        v50 = 0;
      if (v50)
      {
        v51 = swift_getObjectType();
        v52 = v46;
        (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v49 + 16))(objc_msgSend(v23, "selectedIndex"), 0, v51, v49);

      }
    }
    v53 = v76;
    FlowAction.animationBehavior.getter(v47);
    v54 = (uint64_t)v67;
    v55 = &v67[*(int *)(v66 + 48)];
    v56 = v75;
    v57 = v68;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v67, v53, v68);
    v39 = v73;
    v38 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v55, v77, v74);
    v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 88))(v54, v57);
    if (v58 == enum case for FlowAnimationBehavior.infer(_:))
    {
      if ((*(unsigned int (**)(char *, uint64_t))(v39 + 88))(v55, v38) != enum case for FlowPresentationContext.presentModal(_:))
        goto LABEL_28;
    }
    else
    {
      if (v58 != enum case for FlowAnimationBehavior.always(_:))
      {
LABEL_28:
        sub_100010F2C(v54, &qword_100810E78);
        v60 = 0;
        v59 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v55, v38);
    }
    v59 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v59(v54, v57);
    v60 = 1;
LABEL_29:
    v61 = v57;
    v37 = v70;
    v36 = v71;
    v20 = v72;
    v59((uint64_t)v76, v61);
    objc_msgSend(v23, "setTransientViewController:animated:", v46, v60);

    sub_100010F2C((uint64_t)v79, (uint64_t *)&unk_1008206D0);
    goto LABEL_30;
  }
  objc_msgSend(v23, "setTransientViewController:animated:", 0, 0, v35);
  objc_msgSend(v23, "setSelectedViewController:", v34);
  sub_100207650(v23);

  v37 = v70;
  v36 = v71;
  v39 = v73;
  v38 = v74;
LABEL_30:
  sub_10000DAF8(&qword_100808570);
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v37, enum case for ActionOutcome.performed(_:), v69);
  v62 = Promise.__allocating_init(value:)(v37);

  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v77, v38);
  sub_1000340D8((uint64_t)v13, type metadata accessor for FlowPresentationHints);
  sub_1000340D8((uint64_t)v20, type metadata accessor for FlowDestination);
  return v62;
}

unint64_t sub_100208084()
{
  unint64_t result;

  result = qword_100815A48;
  if (!qword_100815A48)
  {
    result = swift_getWitnessTable(&unk_10065223C, &type metadata for TabBarControllerFlowActionLogic.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100815A48);
  }
  return result;
}

uint64_t sub_1002080C8(id *a1)
{
  uint64_t v1;

  return sub_100207230(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_1002080E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080FBE8;
  if (!qword_10080FBE8)
  {
    v1 = type metadata accessor for FlowPresentationContext(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for FlowPresentationContext, v1);
    atomic_store(result, (unint64_t *)&qword_10080FBE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TabBarControllerFlowActionLogic.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10020816C + 4 * byte_100652160[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10020818C + 4 * byte_100652165[v4]))();
}

_BYTE *sub_10020816C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10020818C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100208194(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10020819C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002081A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002081AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TabBarControllerFlowActionLogic.ImplementationError()
{
  return &type metadata for TabBarControllerFlowActionLogic.ImplementationError;
}

unint64_t sub_1002081CC()
{
  unint64_t result;

  result = qword_100815A50;
  if (!qword_100815A50)
  {
    result = swift_getWitnessTable(&unk_100652214, &type metadata for TabBarControllerFlowActionLogic.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100815A50);
  }
  return result;
}

uint64_t sub_100208210(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10020824C + 4 * byte_100652280[a1]))(0xD000000000000012, 0x8000000100694280);
}

uint64_t sub_10020824C()
{
  uint64_t v0;

  return v0 + 5;
}

uint64_t type metadata accessor for InAppMessagesGroup()
{
  return objc_opt_self(_TtC20ProductPageExtension18InAppMessagesGroup);
}

_QWORD *sub_1002083A4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1001F151C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    v14 = v1 & 0xC000000000000001;
    v5 = v1;
    while (v2 != v4)
    {
      if (v14)
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        swift_retain(*(_QWORD *)(v1 + 8 * v4 + 32));
      v7 = PageTab.title.getter(v6);
      v9 = v8;
      swift_release();
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        sub_1001F151C(v10 > 1, v11 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      v1 = v5;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v1 < 0)
      v13 = v1;
    else
      v13 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

char *sub_100208514(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  double left;
  double bottom;
  double right;
  char *v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v6[OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_isFirstSetup] = 1;
  v14 = objc_allocWithZone((Class)UISegmentedControl);
  v15 = v6;
  v16 = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_segmentedControl] = v16;

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v21 = (char *)v17;
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_segmentedControl]);

  return v21;
}

void sub_100208810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v42 = a2;
  v5 = type metadata accessor for ItemLayoutContext(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  v6 = *(_QWORD *)(v40 + 64);
  v7 = __chkstk_darwin(v5);
  v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageTabs(0, v7);
  v9 = sub_10000E720(&qword_100815AD8, (uint64_t (*)(uint64_t))&type metadata accessor for PageTabs, (uint64_t)&protocol conformance descriptor for PageTabs);
  v44 = a1;
  ItemLayoutContext.typedModel<A>(as:)(&v49, v8, v8, v9);
  v10 = v49;
  if (v49)
  {
    v38 = *(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_segmentedControl);
    v11 = PageTabs.tabs.getter(objc_msgSend(v38, "removeAllSegments"));
    v12 = v11;
    v43 = v3;
    v32 = v10;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v31 = v11;
      else
        v31 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v13 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v13)
      {
LABEL_4:
        v37 = sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        v14 = 0;
        v33 = v6 + 7;
        v34 = v12 & 0xC000000000000001;
        v35 = v13;
        v36 = v12;
        v16 = v40;
        v15 = v41;
        do
        {
          if (v34)
          {
            v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
            v18 = v17;
          }
          else
          {
            v18 = *(_QWORD *)(v12 + 8 * v14 + 32);
            swift_retain(v18);
          }
          v48 = v14 + 1;
          v45 = v18;
          v19 = PageTab.title.getter(v17);
          v46 = v20;
          v47 = v19;
          v21 = swift_allocObject(&unk_1007455D8, 24, 7);
          swift_unknownObjectWeakInit(v21 + 16);
          v22 = swift_allocObject(&unk_100745600, 24, 7);
          swift_weakInit(v22 + 16, v18);
          v23 = swift_allocObject(&unk_100745628, 24, 7);
          swift_weakInit(v23 + 16, v42);
          v24 = v39;
          (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v39, v44, v15);
          v25 = *(unsigned __int8 *)(v16 + 80);
          v26 = (v25 + 40) & ~v25;
          v27 = (v33 + v26) & 0xFFFFFFFFFFFFFFF8;
          v28 = (char *)swift_allocObject(&unk_100745650, v27 + 8, v25 | 7);
          *((_QWORD *)v28 + 2) = v21;
          *((_QWORD *)v28 + 3) = v22;
          *((_QWORD *)v28 + 4) = v23;
          v29.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v16 + 32))(&v28[v26], v24, v15);
          *(_QWORD *)&v28[v27] = v14;
          v30 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v47, v46, 0, 0, 0, 0, 0, 0, v29, 0, 0, 0, sub_1002093E4, v28);
          objc_msgSend(v38, "insertSegmentWithAction:atIndex:animated:", v30, v14, 0, v32);
          swift_release();

          v14 = v48;
          v12 = v36;
        }
        while (v35 != v48);
      }
    }
    swift_bridgeObjectRelease_n(v12, 2);
    sub_100208B4C(v32, v44);
    swift_release();
  }
}

uint64_t sub_100208B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = v2;
  v6 = sub_10000DAF8(&qword_100816170);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_100815AE0);
  v32 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100815AE8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10020943C();
  v31 = a2;
  ItemLayoutContext.typedState<A>(as:)(&type metadata for SegmentedControlCollectionViewCell.State, &type metadata for SegmentedControlCollectionViewCell.State, v16);
  v17 = StateLens<A>.currentValue.getter(&v33, v12, v16);
  if ((v34 & 1) != 0)
  {
    v18 = PageTabs.tabs.getter(v17);
    swift_retain(a1);
    v30 = v3;
    v19 = sub_1002096FC(v18);
    v28 = v9;
    v29 = v13;
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease(v18);
    swift_release();
    if ((v22 & 1) != 0)
      v24 = 0;
    else
      v24 = v20;
    ItemLayoutContext.mutableState.getter(v23);
    v25 = WritableStateLens.init(_:)(v8, &type metadata for SegmentedControlCollectionViewCell.State);
    __chkstk_darwin(v25);
    *(&v28 - 2) = v24;
    *((_BYTE *)&v28 - 8) = 0;
    v26 = v28;
    WritableStateLens<A>.updateValue(_:)(sub_100209874, &v28 - 4, v28, v16);
    v13 = v29;
    v3 = v30;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v26);
  }
  else
  {
    v24 = v33;
  }
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_segmentedControl), "setSelectedSegmentIndex:", v24);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

double sub_100208D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[32];

  v40 = a5;
  v41 = a6;
  v9 = sub_10000DAF8(&qword_100816170);
  __chkstk_darwin(v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100815AE0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionRunner.Origin(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v22 = (void *)Strong;
    v23 = a3 + 16;
    swift_beginAccess(v23, v44, 0, 0);
    v24 = swift_weakLoadStrong(v23);
    if (v24)
    {
      v25 = v24;
      v26 = a4 + 16;
      swift_beginAccess(v26, v43, 0, 0);
      v27 = swift_weakLoadStrong(v26);
      if (v27)
      {
        v39 = v27;
        v28 = v22;
        v38[1] = v25;
        v29 = UIResponder.nearestActionRunner.getter();

        if (v29)
        {
          v31 = PageTab.action.getter();
          v38[0] = v28;
          v32 = v31;
          v33 = *(void **)(v38[0]
                         + OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_segmentedControl);
          v42[3] = sub_100018B6C(0, &qword_100815AF8, UISegmentedControl_ptr);
          v42[0] = v33;
          (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for ActionRunner.Origin.userInitiated(_:), v16);
          v34 = v33;
          dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v32, v42, v19, v39);
          swift_release();
          v28 = (id)v38[0];
          v35 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v35);
          v30 = sub_100010F2C((uint64_t)v42, &qword_100808F20);
        }
        ItemLayoutContext.mutableState.getter(v30);
        v36 = WritableStateLens.init(_:)(v11, &type metadata for SegmentedControlCollectionViewCell.State);
        __chkstk_darwin(v36);
        v38[-2] = v41;
        LOBYTE(v38[-1]) = 0;
        v37 = sub_10020943C();
        WritableStateLens<A>.updateValue(_:)(sub_100209930, &v38[-4], v12, v37);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

        swift_release();
      }
      else
      {

      }
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

uint64_t sub_1002090B8()
{
  return type metadata accessor for SegmentedControlCollectionViewCell(0);
}

uint64_t type metadata accessor for SegmentedControlCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100815AB8;
  if (!qword_100815AB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SegmentedControlCollectionViewCell);
  return result;
}

void sub_1002090FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100652318;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_100209180()
{
  return sub_10000E720(&qword_100815AC8, type metadata accessor for SegmentedControlCollectionViewCell, (uint64_t)&unk_100652330);
}

uint64_t sub_1002091AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E720(&qword_100815AD0, type metadata accessor for SegmentedControlCollectionViewCell, (uint64_t)&unk_10065237C);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100209218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

uint64_t sub_100209268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_1002092C0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension34SegmentedControlCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10020930C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100209330()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100209354()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ItemLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 4));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_1002093E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ItemLayoutContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100208D8C(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(uint64_t *)((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_10020943C()
{
  unint64_t result;

  result = qword_100815AF0;
  if (!qword_100815AF0)
  {
    result = swift_getWitnessTable(&unk_1006524A0, &type metadata for SegmentedControlCollectionViewCell.State);
    atomic_store(result, (unint64_t *)&qword_100815AF0);
  }
  return result;
}

double sub_100209480()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSString v19;
  void *v20;
  double v21;
  double v22;
  void *v24;
  void *v25;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (void **)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for PageTabs(0, v2);
  v6 = sub_10000E720(&qword_100815AD8, (uint64_t (*)(uint64_t))&type metadata accessor for PageTabs, (uint64_t)&protocol conformance descriptor for PageTabs);
  v7 = ItemLayoutContext.typedModel<A>(as:)(&v25, v5, v5, v6);
  if (!v25)
    return 0.0;
  v8 = PageTabs.tabs.getter(v7);
  v9 = sub_1002083A4(v8);
  swift_bridgeObjectRelease(v8);
  swift_getKeyPath(&unk_1006523F8);
  ItemLayoutContext.subscript.getter(v4);
  swift_release();
  v10 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = v11;
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v4, v0);
  swift_getKeyPath(&unk_100652428);
  ItemLayoutContext.subscript.getter(&v25);
  swift_release();
  v13 = v25;
  v14 = v9[2];
  if (v14)
  {
    v24 = v25;
    swift_bridgeObjectRetain_n(v9, 2);
    v15 = v9 + 5;
    do
    {
      v16 = *v15;
      v17 = qword_100804808;
      swift_bridgeObjectRetain(*v15);
      if (v17 != -1)
        swift_once(&qword_100804808, sub_1000BFB98);
      v15 += 2;
      v18 = (void *)qword_10080DAE0;
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "addSegmentWithTitle:", v19);
      swift_bridgeObjectRelease(v16);

      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n(v9, 2);
    v13 = v24;
  }
  if (qword_100804808 != -1)
    swift_once(&qword_100804808, sub_1000BFB98);
  v20 = (void *)qword_10080DAE0;
  objc_msgSend((id)qword_10080DAE0, "sizeThatFits:", v10, v12);
  v22 = v21;
  objc_msgSend(v20, "removeAllSegments");

  swift_release();
  swift_bridgeObjectRelease(v9);
  return v22;
}

uint64_t sub_1002096FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v4 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain(v4);
      }
      v5 = PageTab.id.getter();
      v7 = v6;
      v9 = PageTabs.selectedTabId.getter();
      v10 = v8;
      if (v5 == v9 && v7 == v8)
      {
        swift_release(v4);
        swift_bridgeObjectRelease_n(v7, 2);
        return i;
      }
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
      swift_release(v4);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v10);
      if ((v11 & 1) != 0)
        return i;
      v12 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v12 == v2)
        return 0;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_100209874(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)result = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SegmentedControlCollectionViewCell.State()
{
  return &type metadata for SegmentedControlCollectionViewCell.State;
}

unint64_t sub_1002098A4()
{
  unint64_t result;

  result = qword_100815B00;
  if (!qword_100815B00)
  {
    result = swift_getWitnessTable(&unk_100652484, &type metadata for SegmentedControlCollectionViewCell.State);
    atomic_store(result, (unint64_t *)&qword_100815B00);
  }
  return result;
}

unint64_t sub_1002098EC()
{
  unint64_t result;

  result = qword_100815B08;
  if (!qword_100815B08)
  {
    result = swift_getWitnessTable(&unk_10065245C, &type metadata for SegmentedControlCollectionViewCell.State);
    atomic_store(result, (unint64_t *)&qword_100815B08);
  }
  return result;
}

uint64_t sub_100209930(uint64_t a1)
{
  return sub_100209874(a1);
}

uint64_t sub_100209948()
{
  return sub_10000E720(&qword_100815B10, type metadata accessor for LargeHeroBreakoutCollectionViewCell, (uint64_t)&unk_1006524D8);
}

double sub_100209978(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for BreakoutDetailsDisplayProperties.DetailPosition(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for LargeHeroBreakoutLayout.Metrics(0, v3);
  v6 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v13);
  v14 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for BreakoutDetailsDisplayProperties.DetailPosition.center(_:), v1);
  sub_1001DF6D8((uint64_t)v5, (uint64_t)v8);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v18 = ShelfLayoutContext.traitEnvironment.getter(v17);
  v20 = type metadata accessor for LargeHeroBreakoutLayout(0, v19);
  v21 = sub_10000E720(&qword_100814B58, (uint64_t (*)(uint64_t))&type metadata accessor for LargeHeroBreakoutLayout, (uint64_t)&protocol conformance descriptor for LargeHeroBreakoutLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v8, v18, v20, v21, v14, v16);
  v23 = v22;
  v24 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v27, v24);
  return v23;
}

uint64_t sub_100209B48()
{
  return sub_10000E720(&qword_100815B18, type metadata accessor for TitledParagraphCollectionViewCell, (uint64_t)&unk_100652528);
}

void sub_100209B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void **v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void **v29;
  id v30;
  __n128 v31;
  void *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  void (*v41)(char *, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  _QWORD *v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void **v65;
  uint64_t v66;
  void **aBlock;
  uint64_t v68;
  double (*v69)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v72;

  v2 = v1;
  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TitledParagraphStyle(0, v6);
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  __chkstk_darwin(v9);
  v62 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (char *)&v53 - v12;
  v13 = sub_10000DAF8(&qword_100815B20);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TitledParagraph(0, v15);
  v19 = sub_10000E720(&qword_100815B28, (uint64_t (*)(uint64_t))&type metadata accessor for TitledParagraph, (uint64_t)&protocol conformance descriptor for TitledParagraph);
  ItemLayoutContext.typedModel<A>(as:)(&aBlock, v18, v18, v19);
  if (aBlock)
  {
    v57 = v8;
    v58 = v5;
    v59 = v4;
    v60 = v2;
    v20 = sub_10012B3F8();
    ItemLayoutContext.typedState<A>(as:)(&_s5StateVN_4, &_s5StateVN_4, v20);
    StateLens<A>.currentValue.getter(&aBlock, v13, v20);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v55 = aBlock;
    v22 = (void *)dispatch thunk of TitledParagraph.text.getter(v21);
    swift_getKeyPath(&unk_100652578);
    v56 = a1;
    ItemLayoutContext.subscript.getter(&v65);
    swift_release();
    v23 = v65;
    v24 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v22);
    v25 = objc_msgSend(v22, "length");
    v26 = swift_allocObject(&unk_1007457C8, 41, 7);
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)(v26 + 24) = v23;
    *(_QWORD *)(v26 + 32) = v24;
    *(_BYTE *)(v26 + 40) = 1;
    v27 = swift_allocObject(&unk_1007457F0, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_100028028;
    *(_QWORD *)(v27 + 24) = v26;
    v71 = sub_10000F020;
    v72 = v27;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = sub_100027208;
    v70 = &unk_100745808;
    v28 = _Block_copy(&aBlock);
    v29 = v23;
    v30 = v24;
    swift_retain(v27);
    objc_msgSend(v22, "enumerateAttributesInRange:options:usingBlock:", 0, v25, 0x100000, v28, swift_release().n128_f64[0]);
    _Block_release(v28);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v27, "", 113, 30, 92, 1);

    swift_release();
    v31 = swift_release();
    if ((v25 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v32 = v30;
      v33 = v61;
      TitledParagraph.style.getter(v31);
      v35 = v62;
      v34 = v63;
      v36 = v64;
      (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, enum case for TitledParagraphStyle.detail(_:), v64);
      v37 = sub_10000E720(&qword_100815B30, (uint64_t (*)(uint64_t))&type metadata accessor for TitledParagraphStyle, (uint64_t)&protocol conformance descriptor for TitledParagraphStyle);
      dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v36, v37);
      dispatch thunk of RawRepresentable.rawValue.getter(&v65, v36, v37);
      v38 = v68;
      v39 = v66;
      if (aBlock == v65 && v68 == v66)
      {
        v54 = 1;
        v39 = v68;
      }
      else
      {
        v54 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v68, v65, v66, 0);
      }
      swift_bridgeObjectRelease(v38);
      v40 = swift_bridgeObjectRelease(v39);
      v41 = *(void (**)(char *, uint64_t, __n128))(v34 + 8);
      v41(v35, v36, v40);
      v42 = ((uint64_t (*)(char *, uint64_t))v41)(v33, v36);
      v43 = TitledParagraph.primarySubtitle.getter(v42);
      v63 = v44;
      v64 = v43;
      v45 = TitledParagraph.secondarySubtitle.getter();
      v47 = v46;
      v48 = v32;
      v49 = sub_10052A948();
      swift_getKeyPath(&unk_1006525A8);
      v50 = v57;
      ItemLayoutContext.subscript.getter(v57);
      swift_release();
      v51 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v50, v59);
      v52 = v63;
      sub_10031D0E8(v64, v63, v45, v47, v32, v55, v54 & 1, v49, v51);
      swift_unknownObjectRelease();
      swift_release();

      swift_bridgeObjectRelease(v47);
      swift_bridgeObjectRelease(v52);
    }
  }
}

uint64_t sub_10020A098()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10020A0CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10020A0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10020A0EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10020A0F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  if (*(_QWORD *)v1 == *a1
    && (static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 16) & 1) != 0
    && (v3 = type metadata accessor for StringUserDefaultsDebugSetting(), (v4 = swift_dynamicCastClass(a1, v3)) != 0))
  {
    v5 = v4;
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v5 + 64);
    v8 = *(_QWORD *)(v1 + 56);
    v9 = *(_QWORD *)(v1 + 64);
    v10 = v6 == v8 && v7 == v9;
    if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0), v12 = 0, (v11 & 1) != 0))
    {
      if ((v13 = *(_QWORD *)(v5 + 72),
            v14 = *(_QWORD *)(v5 + 80),
            v15 = *(_QWORD *)(v1 + 72),
            v16 = *(_QWORD *)(v1 + 80),
            v13 == v15)
        && v14 == v16
        || (v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0), v12 = 0, (v17 & 1) != 0))
      {
        v12 = *(_BYTE *)(v5 + 88) ^ *(_BYTE *)(v1 + 88) ^ 1;
      }
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_10020A1B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  AnyHashable.hash(into:)();
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v2 + 72);
  v7 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 88));
}

uint64_t sub_10020A23C()
{
  uint64_t v0;

  sub_100018968(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for StringUserDefaultsDebugSetting()
{
  return objc_opt_self(_TtC20ProductPageExtension30StringUserDefaultsDebugSetting);
}

id sub_10020A290(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  double left;
  double bottom;
  double right;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v4[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_placement];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageViewController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView] = 0;
  v23.receiver = v4;
  v23.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v18 = objc_msgSend(v17, "contentView");
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v19 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100640720;
  *(_QWORD *)(v20 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v20 + 40) = &protocol witness table for UITraitLayoutDirection;
  v21 = v17;
  UIView.registerForTraitChanges<A>(_:handler:)(v20, sub_10020AA60, 0, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v20);

  return v21;
}

void sub_10020A52C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v14, "layoutSubviews");
  v3 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView];
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v2, "contentView");
    objc_msgSend(v5, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    objc_msgSend(v4, "setFrame:", v7, v9, v11, v13);
  }
}

uint64_t sub_10020A6E0()
{
  return type metadata accessor for UnifiedMessageCollectionViewCell(0);
}

uint64_t type metadata accessor for UnifiedMessageCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100815C38;
  if (!qword_100815C38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UnifiedMessageCollectionViewCell);
  return result;
}

void sub_10020A724(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100652688;
    v4[2] = &unk_1006526A0;
    v4[3] = &unk_1006526A0;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_10020A7A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_placement);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_placement, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_10020A7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_placement);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*sub_10020A854(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_placement, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_10020A898()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10020A8E4(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1
               + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageViewController);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_10020A934(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageViewController, a1, 33, 0);
  return j__swift_endAccess;
}

void *sub_10020A978()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView);
  v2 = v1;
  return v1;
}

void sub_10020A9A4(void *a1)
{
  sub_10020AAA4(a1);

}

void (*sub_10020A9C8(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_10020AA08;
}

void sub_10020AA08(void **a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10020AAA4(v4);

    v3 = v2;
  }
  else
  {
    sub_10020AAA4(*a1);
    v3 = v4;
  }

}

id sub_10020AA60(char *a1)
{
  void *v2;

  v2 = *(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView];
  if (v2)
    objc_msgSend(v2, "updateTraitsIfNeeded");
  return objc_msgSend(a1, "setNeedsLayout");
}

void sub_10020AAA4(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32UnifiedMessageCollectionViewCell_inlineUnifiedMessageView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v9 = v7;
    v8 = objc_msgSend(v1, "contentView");
    objc_msgSend(v8, "addSubview:", v9);

    objc_msgSend(v9, "updateTraitsIfNeeded");
    objc_msgSend(v9, "setNeedsLayout");
    objc_msgSend(v1, "setNeedsLayout");
    objc_msgSend(v1, "layoutIfNeeded");

  }
}

char *sub_10020AB98(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_weakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsCalculator], 0);
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer] = 0;
  v11 = &v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler];
  *v11 = 0;
  v11[1] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_isExpanded] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_sizeCategory] = 7;
  v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_wantsCardConsistentMargins] = 0;
  v12 = type metadata accessor for TodayCardLockupView();
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v4;
  v15 = objc_msgSend(v13, "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView] = v15;

  v28.receiver = v14;
  v28.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  v17 = objc_msgSend(v16, "layer");
  objc_msgSend(v17, "setAllowsGroupBlending:", 0);

  v18 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView;
  v19 = *(_BYTE **)&v16[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView];
  v20 = OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_allowsGroupBlending;
  v19[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_allowsGroupBlending] = 0;
  v21 = v19;
  v22 = objc_msgSend(v21, "layer");
  objc_msgSend(v22, "setAllowsGroupBlending:", v19[v20]);

  v23 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton], "layer");
  objc_msgSend(v23, "setAllowsGroupBlending:", v19[v20]);

  objc_msgSend(*(id *)(*(_QWORD *)&v16[v18] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)&v16[v18] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)&v16[v18] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_ordinalLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[v18]);
  v24 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v24, "setDelegate:", v16);
  objc_msgSend(v24, "addTarget:action:", v16, "handleTap");
  objc_msgSend(v16, "addGestureRecognizer:", v24);
  v25 = *(void **)&v16[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer];
  *(_QWORD *)&v16[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer] = v24;
  v26 = v24;

  objc_msgSend(v16, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraExtraLarge);
  return v16;
}

void sub_10020AED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  char *v6;
  char *v7;
  int v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  id v39;
  int v40;
  void *v41;
  double v42;
  double v43;
  int v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  void *v55;
  void (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  void *v95;
  id v96;
  void *v97;
  _BYTE *v98;
  char v99;
  char *v100;
  double v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  char v108;
  __n128 v109;
  id v110;
  id v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void *v116;
  id v117;
  void *v118;
  void *v119;
  id v120;
  void *v121;
  void *v122;
  __n128 v123;
  __n128 v124;
  uint64_t v125;
  __n128 v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  double *v130;
  uint64_t v131;
  id v132;
  char *v133;
  uint64_t v134;
  id v135;
  double v136;
  double v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  void (*v155)(char *, uint64_t, __n128);
  uint64_t v156;
  unsigned int v157;
  void (*v158)(char *, _QWORD, uint64_t);
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  v7 = v6;
  v149 = a6;
  v162 = a2;
  v166 = a1;
  v10 = a5;
  v11 = type metadata accessor for Artwork.Style(0, a2);
  v12 = __chkstk_darwin(v11);
  v148 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for Artwork.Crop(0, v12);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v15);
  v161 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v17);
  v160 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v19);
  v159 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v21);
  v154 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DAF8(&qword_100821E80);
  v24 = __chkstk_darwin(v23);
  v153 = (char *)&v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v24);
  v151 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v28 = (char *)&v144 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v29);
  v152 = (char *)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for TodayCard.Style(0);
  v31 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v34 = __chkstk_darwin(v33).n128_u64[0];
  v36 = (char *)&v144 - v35;
  v37 = v6[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_sizeCategory];
  v6[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_sizeCategory] = a5;
  if (v10 == 7)
  {
    v38 = v165;
    if (v37 == 7)
      goto LABEL_6;
  }
  else
  {
    v38 = v165;
    if (v37 != 7)
    {
      switch(v10)
      {
        case 6:
          if (v37 == 6)
            goto LABEL_6;
          break;
        case 5:
          if (v37 == 5)
            goto LABEL_6;
          break;
        case 4:
          if (v37 == 4)
            goto LABEL_6;
          break;
        default:
          if ((v37 - 7) <= 0xFFFFFFFC && v37 == v10)
            goto LABEL_6;
          break;
      }
    }
  }
  objc_msgSend(v6, "setNeedsLayout");
LABEL_6:
  v39 = objc_msgSend(v6, "traitCollection", v34);
  v40 = v10;
  v41 = v39;
  v42 = 12.0;
  v43 = 12.0;
  v44 = v40;
  if (v40 != 4)
  {
    v45 = PageGrid.horizontalDirectionalMargins.getter(v39);
    v43 = 20.0;
    v42 = v46 <= 20.0 ? v46 : 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v45);
    if (v47 <= 20.0)
      v43 = v47;
  }
  v48 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v41, "layoutDirection"), 0.0, v42, 0.0, v43);
  v50 = v49;
  v52 = v51;
  v54 = v53;

  objc_msgSend(v6, "setLayoutMargins:", v48, v50, v52, v54);
  v55 = (void *)sub_1002A7D14(a4);
  objc_msgSend(v6, "setBackgroundColor:", v55);

  v56 = *(void (**)(_QWORD))(v31 + 104);
  v157 = enum case for TodayCard.Style.white(_:);
  v158 = (void (*)(char *, _QWORD, uint64_t))v56;
  v56(v36);
  v57 = sub_10000E720((unint64_t *)&qword_100818E50, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard.Style, (uint64_t)&protocol conformance descriptor for TodayCard.Style);
  dispatch thunk of RawRepresentable.rawValue.getter(&v171, v38, v57);
  v156 = v57;
  dispatch thunk of RawRepresentable.rawValue.getter(&v167, v38, v57);
  v58 = v172;
  v59 = v168;
  v164 = a4;
  if (v171 == v167 && v172 == v168)
  {
    v60 = swift_bridgeObjectRelease_n(v172, 2);
    v61 = 1;
  }
  else
  {
    v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v171, v172, v167, v168, 0);
    swift_bridgeObjectRelease(v58);
    v60 = swift_bridgeObjectRelease(v59);
    if ((v62 & 1) != 0)
      v61 = 1;
    else
      v61 = 2;
  }
  v155 = *(void (**)(char *, uint64_t, __n128))(v31 + 8);
  v155(v36, v38, v60);
  objc_msgSend(v7, "setOverrideUserInterfaceStyle:", v61);
  v63 = objc_msgSend(v7, "layer");
  objc_msgSend(v63, "setCornerRadius:", 14.0);

  v64 = objc_msgSend(v7, "layer");
  v65 = v64;
  v66 = 12;
  if (v44 == 6)
    v66 = 15;
  if (v7[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_isExpanded])
    v67 = 0;
  else
    v67 = v66;
  objc_msgSend(v64, "setMaskedCorners:", v67);

  v150 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView;
  v68 = (char *)*(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView];
  v70 = TodayCardLockupOverlay.lockup.getter(v69);
  v71 = v151;
  (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v28, enum case for OfferButtonPresenterViewAlignment.right(_:), v26);
  v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
  v73 = v153;
  v72(v153, 1, 1, v26);
  v74 = sub_10000E720((unint64_t *)&unk_100811F30, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  v75 = (uint64_t)v152;
  AccessibilityConditional.init(value:axValue:)(v28, v73, v26, v74);
  v76 = sub_10000DAF8(&qword_10080B190);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
  v77 = type metadata accessor for OfferStyle(0);
  v78 = (uint64_t)v154;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v154, 1, 1, v77);
  v79 = type metadata accessor for OfferEnvironment(0);
  v80 = (uint64_t)v159;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v159, 1, 1, v79);
  v81 = type metadata accessor for OfferTint(0);
  v82 = (uint64_t)v160;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v160, 1, 1, v81);
  v83 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  v84 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v161, 1, 1, v83);
  sub_10040A58C(v70, v68, v75, v162, 0, 0, v78, v80, v82, v84);
  v68[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  sub_1005475A0();
  objc_msgSend(v68, "setNeedsLayout");
  sub_1005475A0();

  swift_release();
  sub_100010F2C(v84, (uint64_t *)&unk_10080A0D0);
  sub_100010F2C(v82, (uint64_t *)&unk_100815D70);
  sub_100010F2C(v80, (uint64_t *)&unk_10080A0E0);
  v85 = v78;
  v86 = v150;
  sub_100010F2C(v85, &qword_100815D80);
  sub_100010F2C(v75, (uint64_t *)&unk_10080A0F0);
  v87 = *(void **)&v7[v86];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v88 = v87;
  v89 = (void *)static UIColor.primaryText.getter(v88);
  sub_1003622B4(v89);

  v90 = *(id *)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_ordinalLabel);
  v91 = (void *)static UIColor.secondaryText.getter(v90);
  objc_msgSend(v90, "setTextColor:", v91);

  v92 = *(id *)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
  v93 = (void *)static UIColor.secondaryText.getter(v92);
  objc_msgSend(v92, "setTextColor:", v93);

  v94 = objc_retain(*(id *)(*(_QWORD *)&v7[v86]
                          + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_crossLinkTitleLabel));
  v95 = (void *)static UIColor.secondaryText.getter(v94);
  objc_msgSend(v94, "setTextColor:", v95);

  v96 = objc_retain(*(id *)(*(_QWORD *)&v7[v86]
                          + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_crossLinkSubtitleLabel));
  v97 = (void *)static UIColor.secondaryText.getter(v96);
  objc_msgSend(v96, "setTextColor:", v97);

  v98 = *(_BYTE **)&v7[v86];
  v99 = v98[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_preferStackedLargeAXLayouts];
  v98[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_preferStackedLargeAXLayouts] = 1;
  if ((v99 & 1) == 0)
  {
    v100 = &v98[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_axMetrics];
    *(_QWORD *)&v101 = swift_beginAccess(&v98[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_axMetrics], &v171, 1, 0).n128_u64[0];
    v100[337] = 1;
    objc_msgSend(v98, "setNeedsLayout", v101);
  }
  v102 = v163;
  v103 = v165;
  v158(v163, v157, v165);
  v104 = v156;
  dispatch thunk of RawRepresentable.rawValue.getter(&v167, v103, v156);
  dispatch thunk of RawRepresentable.rawValue.getter(&v169, v103, v104);
  v105 = v168;
  v106 = v170;
  if (v167 == v169 && v168 == v170)
  {
    v107 = swift_bridgeObjectRelease_n(v168, 2);
    v155(v102, v103, v107);
LABEL_29:
    v110 = *(id *)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
    v111 = (id)static UIColor.appTint.getter(v110);
    goto LABEL_36;
  }
  v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v167, v168, v169, v170, 0);
  swift_bridgeObjectRelease(v105);
  v109 = swift_bridgeObjectRelease(v106);
  v155(v102, v103, v109);
  if ((v108 & 1) != 0)
    goto LABEL_29;
  v112 = *(void **)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
  v113 = (void *)objc_opt_self(UIColor);
  v110 = v112;
  v111 = objc_msgSend(v113, "whiteColor");
LABEL_36:
  v114 = v111;
  objc_msgSend(v110, "setTintColor:", v111);

  v115 = *(_QWORD *)&v7[v86];
  v116 = *(void **)(v115 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel);
  if (v116)
  {
    v117 = v116;
    v118 = (void *)static UIColor.secondaryText.getter(v117);
    objc_msgSend(v117, "setTextColor:", v118);

    v115 = *(_QWORD *)&v7[v86];
  }
  v119 = *(void **)(v115 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
  if (v119)
  {
    v120 = v119;
    v121 = (void *)static UIColor.secondaryText.getter(v120);
    objc_msgSend(v120, "setTextColor:", v121);

    v122 = *(void **)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
    if (v122)
      objc_msgSend(v122, "setAccessibilityIgnoresInvertColors:", 1);
  }
  sub_10020BC4C();
  TodayCardLockupOverlay.lockup.getter(v123);
  v125 = Lockup.icon.getter(v124);
  v126 = swift_release();
  if (v125)
  {
    v127 = v145;
    v128 = Artwork.crop.getter(v126);
    v129 = Artwork.Crop.preferredContentMode.getter(v128);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v127, v147);
    v130 = (double *)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics);
    swift_beginAccess(v130, &v167, 0, 0);
    v131 = Artwork.config(_:mode:prefersLayeredImage:)(v129, 0, *v130, v130[1]);
    v132 = *(id *)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    v133 = v148;
    Artwork.style.getter(v132);
    v134 = ArtworkView.style.setter(v133);
    v135 = objc_msgSend(v132, "setContentMode:", Artwork.contentMode.getter(v134));
    v136 = ArtworkLoaderConfig.size.getter(v135);
    v138 = ArtworkView.imageSize.setter(v136, v137);
    v139 = Artwork.backgroundColor.getter(v138);
    if (!v139)
      v139 = static UIColor.placeholderBackground.getter();
    ArtworkView.backgroundColor.setter(v139);

    v140 = *(void **)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    v141 = type metadata accessor for ArtworkView(0);
    v142 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v143 = v140;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v131, 2, 1, v143, v141, v142);
    swift_release();
    swift_release();
  }
  else
  {
    v143 = *(id *)(*(_QWORD *)&v7[v86] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    ArtworkView.image.setter(0);
  }

}

void sub_10020BC4C()
{
  char *v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;

  v1 = objc_msgSend(v0, "overrideUserInterfaceStyle");
  v2 = &kCAFilterPlusD;
  if (v1 != (id)1)
    v2 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView;
  v7 = objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView]+ OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_crossLinkTitleLabel), "layer");
  objc_msgSend(v7, "setCompositingFilter:", v5);

  v8 = objc_msgSend(*(id *)(*(_QWORD *)&v0[v6] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel), "layer");
  objc_msgSend(v8, "setCompositingFilter:", v5);

  v9 = *(_QWORD *)&v0[v6];
  v10 = *(void **)(v9 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel);
  if (v10)
  {
    v11 = objc_msgSend(v10, "layer");
    objc_msgSend(v11, "setCompositingFilter:", v5);

    v9 = *(_QWORD *)&v0[v6];
  }
  v12 = objc_msgSend(*(id *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton)+ OBJC_IVAR____TtC20ProductPageExtension11OfferButton_subtitleLabel), "layer");
  objc_msgSend(v12, "setCompositingFilter:", v5);

  v13 = objc_msgSend(*(id *)(*(_QWORD *)&v0[v6] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel), "layer");
  objc_msgSend(v13, "setCompositingFilter:", v5);

}

void sub_10020BE00()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  double MinX;
  CGFloat v25;
  char *v26;
  void (*v27)(__n128);
  uint64_t v28;
  __n128 v29;
  char v30[24];
  objc_super v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v31.receiver = v0;
  v31.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v31, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "layoutMargins");
  v13 = CGRect.subtracting(insets:)(v9, v10, v11, v12, v2, v4, v6, v8);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView], "sizeThatFits:", v16, v18);
  v22 = v21;
  v23 = *(id *)&v0[v20];
  v32.origin.x = v13;
  v32.origin.y = v15;
  v32.size.width = v17;
  v32.size.height = v19;
  MinX = CGRectGetMinX(v32);
  v33.origin.x = v13;
  v33.origin.y = v15;
  v33.size.width = v17;
  v33.size.height = v19;
  v25 = CGRectGetMidY(v33) + v22 * -0.5;
  v34.origin.x = v13;
  v34.origin.y = v15;
  v34.size.width = v17;
  v34.size.height = v19;
  objc_msgSend(v23, "setFrame:", MinX, v25, CGRectGetWidth(v34), v22);

  v26 = &v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock], v30, 0, 0);
  v27 = *(void (**)(__n128))v26;
  if (*(_QWORD *)v26)
  {
    v28 = *((_QWORD *)v26 + 1);
    v29 = swift_retain(v28);
    v27(v29);
    sub_100018908((uint64_t)v27, v28);
  }
}

double sub_10020BFD0(double a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  __n128 v9;

  v3 = objc_msgSend(v1, "traitCollection");
  if (qword_100806AD8 != -1)
    swift_once(&qword_100806AD8, sub_100545BDC);
  sub_100496C0C(v3, (uint64_t)&xmmword_10086AF70, 1);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v4) & 1) != 0)
  {
    v5.n128_u64[0] = 20.0;
    v6.n128_u64[0] = 20.0;
  }
  else
  {
    v5.n128_u64[0] = 13.0;
    v6.n128_u64[0] = 13.0;
  }
  static UIEdgeInsets.vertical(top:bottom:)(v5, v6);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v7) & 1) != 0)
  {
    v8.n128_u64[0] = 20.0;
    v9.n128_u64[0] = 20.0;
  }
  else
  {
    v8.n128_u64[0] = 13.0;
    v9.n128_u64[0] = 13.0;
  }
  static UIEdgeInsets.vertical(top:bottom:)(v8, v9);

  return a1;
}

void sub_10020C32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  __n128 v41;
  uint64_t v42;
  _BYTE v43[40];
  _BYTE v44[24];
  _BYTE v45[24];

  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v44, 0, 0);
    if (!swift_weakLoadStrong(v15))
    {

      return;
    }
    sub_10000EF80(a3, (uint64_t)v43);
    v16 = sub_10000DAF8(&qword_10080E910);
    v17 = type metadata accessor for TodayCard(0);
    v18 = swift_dynamicCast(&v42, v43, v16, v17, 6);
    if ((v18 & 1) != 0)
    {
      v19 = TodayCard.overlay.getter(v18);
      swift_release();
      if (v19)
      {
        v20 = type metadata accessor for TodayCardLockupOverlay(0);
        if (swift_dynamicCastClass(v19, v20))
        {
          v22 = TodayCardLockupOverlay.lockup.getter(v21);
          Lockup.impressionMetrics.getter(v22);
          v23 = swift_release();
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v23) == 1)
          {

            swift_release();
            swift_release();
            sub_100010F2C((uint64_t)v8, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
            objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView], "frame");
            v25 = v24;
            v27 = v26;
            v29 = v28;
            v31 = v30;
            v32 = objc_msgSend(v14, "superview");
            objc_msgSend(v14, "convertRect:toView:", v32, v25, v27, v29, v31);
            v34 = v33;
            v36 = v35;
            v38 = v37;
            v40 = v39;

            ImpressionsCalculator.addElement(_:at:)(v12, v34, v36, v38, v40);
            swift_release();
            v41 = swift_release();
            (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v41);
          }
          return;
        }
        swift_release();
      }
    }

    swift_release();
  }
}

uint64_t type metadata accessor for TodayCardChinSingleLockupView()
{
  return objc_opt_self(_TtC20ProductPageExtension29TodayCardChinSingleLockupView);
}

void sub_10020C690(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  sub_10020AED0(*a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10020C698(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_isExpanded) = result;
  return result;
}

uint64_t sub_10020C6A8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_wantsCardConsistentMargins);
}

uint64_t sub_10020C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100018908(v4, v5);
}

void sub_10020C6D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView)
                + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v2 = type metadata accessor for ArtworkView(0);
  v3 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v4 = v1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1, v2, v3);

}

void sub_10020C76C()
{
  uint64_t v0;
  id v1;

  v1 = objc_retain(*(id *)(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView)
                         + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView));
  ArtworkView.image.setter(0);

}

uint64_t sub_10020C7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = sub_10000DAF8(&qword_1008091A0);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100640720;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_lockupView);
  *(_QWORD *)(v2 + 56) = type metadata accessor for TodayCardLockupView();
  *(_QWORD *)(v2 + 32) = v3;
  v4 = v3;
  return v2;
}

uint64_t sub_10020C828()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_10020C870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_10020C8C8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_1000DFF0C;
}

uint64_t sub_10020C938()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_10020C990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_10020C9EC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_10020CA30(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];
  __int128 v9[2];

  v4 = swift_allocObject(&unk_100745978, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  sub_10000EF80(a1, (uint64_t)v9);
  v5 = swift_allocObject(&unk_1007459A0, 24, 7);
  swift_weakInit(v5 + 16, a2);
  sub_100010E24(v9, (uint64_t)v8);
  v6 = swift_allocObject(&unk_1007459C8, 72, 7);
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  sub_100010E24(v8, v6 + 32);
  return sub_10020CB9C;
}

uint64_t sub_10020CAF4()
{
  return sub_10000E720(&qword_100815CB8, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardLockupOverlay, (uint64_t)&protocol conformance descriptor for TodayCardOverlay);
}

uint64_t sub_10020CB20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020CB44()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020CB68()
{
  uint64_t v0;

  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10020CB9C()
{
  uint64_t v0;

  sub_10020C32C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void sub_10020CBA8()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  swift_weakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsCalculator], 0);
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer] = 0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_isExpanded] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_wantsCardConsistentMargins] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/TodayCardChinSingleLockupView.swift", 56, 2, 49, 0);
  __break(1u);
}

BOOL sub_10020CC6C(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  id v7;
  _BYTE *v8;
  id v9;
  char v10;
  _BOOL8 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  CGPoint v19;
  CGRect v20;

  v2 = v1;
  objc_msgSend(a1, "locationInView:", v1);
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  if (v2[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_isExpanded] != 1
    || (objc_msgSend(v2, "bounds"), v19.x = v4, v19.y = v6, !CGRectContainsPoint(v20, v19)))
  {

    return 0;
  }
  if (v7)
  {
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v8 = v2;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {

      return 0;
    }
    v13 = objc_opt_self(UIControl);
    v14 = swift_dynamicCastObjCClass(v9, v13);

    if (v14)
      return 0;
  }
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler];
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29TodayCardChinSingleLockupView_clickActionHandler + 8];
  v11 = v15 != 0;
  if (v15)
  {
    v17 = swift_allocObject(&unk_1007459F0, 32, 7);
    *(_QWORD *)(v17 + 16) = v15;
    *(_QWORD *)(v17 + 24) = v16;
    v18 = sub_100036D9C;
  }
  else
  {
    v18 = 0;
    v17 = 0;
  }
  sub_100018918(v15, v16);
  sub_100018908((uint64_t)v18, v17);
  return v11;
}

uint64_t sub_10020CDF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

__n128 sub_10020CE1C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-10.0 }
  xmmword_100865F30 = (__int128)result;
  *(__n128 *)&qword_100865F40 = result;
  return result;
}

uint64_t sub_10020CE30()
{
  uint64_t v0;

  sub_100010D1C(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 32);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SearchResultItemSupplementaryProvider()
{
  return objc_opt_self(_TtC20ProductPageExtension37SearchResultItemSupplementaryProvider);
}

double sub_10020CE80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  double result;

  v6 = type metadata accessor for CondensedSearchEditorialBackgroundView();
  if ((static UICollectionReusableView.matchesItemElementKind(_:)(a1, a2) & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v8 = static UICollectionReusableView.defaultReuseIdentifier.getter(v7);
    v10 = v9;
    *(_QWORD *)(a3 + 24) = sub_10000DAF8(&qword_100815E78);
    *(_QWORD *)(a3 + 32) = sub_10020CF3C();
    sub_1000119C0((_QWORD *)a3);
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(a1, a2, v8, v10, static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:), 0, v6, v11);
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_10020CF3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100815E80;
  if (!qword_100815E80)
  {
    v1 = sub_100010DE0(&qword_100815E78);
    result = swift_getWitnessTable(&protocol conformance descriptor for ReusableSupplementaryRegistration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100815E80);
  }
  return result;
}

id sub_10020CF88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  double v17;
  void *v18;
  __n128 v19;
  __n128 v20;
  char v21;
  void (*v22)(char *, uint64_t);
  __n128 v23;
  uint64_t v24;
  double v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  id v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;

  v48[1] = *v1;
  v3 = type metadata accessor for PageGrid(0);
  v49 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v6);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v48 - v14;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 4);
  v17 = 0.0;
  if (Strong)
  {
    v18 = (void *)Strong;
    v48[0] = v3;
    if (swift_unknownObjectWeakLoadStrong(v1 + 2))
    {
      sub_1000B2E44((uint64_t)v8, v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {

        swift_unknownObjectRelease();
        sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008102F0);
LABEL_9:
        v3 = v48[0];
        goto LABEL_10;
      }
      v20.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      ItemLayoutContext.indexPath.getter(v20);
      v21 = static IndexPath.> infix(_:_:)(v12, v15);
      v22 = *(void (**)(char *, uint64_t))(v10 + 8);
      v22(v12, v9);
      if ((v21 & 1) != 0)
      {
        v17 = sub_1000B3358(v18, v23);
        swift_unknownObjectRelease();

        v22(v15, v9);
        goto LABEL_9;
      }
      v22(v15, v9);
      swift_unknownObjectRelease();
    }

    goto LABEL_9;
  }
LABEL_10:
  v24 = v49;
  v25 = 0.0;
  v26 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 3, 0.0, v17);
  v27 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v28 = objc_msgSend(v27, "fractionalWidthDimension:", 1.0);
  v29 = objc_msgSend(v27, "fractionalHeightDimension:", 1.0);
  v30 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v28, v29);

  type metadata accessor for CondensedSearchEditorialBackgroundView();
  v31 = v30;
  static UICollectionReusableView.makeItemScopedElementKind(in:uniquify:)(a1, 1);
  v33 = v32;
  v34 = v26;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v36 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v31, v35, v34);

  v37 = type metadata accessor for AppEventSearchResult(0);
  v38 = sub_10020D640();
  ItemLayoutContext.typedModel<A>(as:)(&v50, v37, v37, v38);
  if (v50)
  {
    v25 = sub_1003C6BC8();
    swift_release();
  }
  v39 = static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
  v40 = PageGrid.horizontalMargins.getter(v39);
  v42 = v41;
  v44 = v43;
  (*(void (**)(char *, uint64_t, double))(v24 + 8))(v5, v3, v40);
  v45 = qword_100804E68;
  v46 = v36;
  if (v45 != -1)
    swift_once(&qword_100804E68, sub_10020CE1C);
  objc_msgSend(v46, "setContentInsets:", v25 + *(double *)&xmmword_100865F30, v42 + *((double *)&xmmword_100865F30 + 1), *(double *)&qword_100865F40, v44 + unk_100865F48);

  objc_msgSend(v46, "setZIndex:", -1);
  return v46;
}

_QWORD *sub_10020D3EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(char *, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008191F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ItemBackground(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23[-1] - v10;
  v12 = sub_10000DAF8(&qword_100815E88);
  ItemLayoutContext.typedModel<A>(as:)(v23, v12, v12);
  v13 = v24;
  if (!v24)
  {
    sub_100010F2C((uint64_t)v23, (uint64_t *)&unk_100815E90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_6;
  }
  v14 = v25;
  sub_100010F08(v23, v24);
  dispatch thunk of ItemBackgroundProviding.itemBackground.getter(v13, v14);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_6:
    sub_100010F2C((uint64_t)v4, (uint64_t *)&unk_1008191F0);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  if (v15 != enum case for ItemBackground.condensedSearch(_:))
  {
    v16(v11, v5);
    v16(v8, v5);
    return _swiftEmptyArrayStorage;
  }
  v16(v8, v5);
  v17 = sub_10020CF88(a1);
  v18 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v19 + 32) = v17;
  v23[0] = v19;
  specialized Array._endMutation()(v19);
  v20 = v23[0];
  v16(v11, v5);
  return (_QWORD *)v20;
}

unint64_t sub_10020D640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808030;
  if (!qword_100808030)
  {
    v1 = type metadata accessor for AppEventSearchResult(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchResult, v1);
    atomic_store(result, (unint64_t *)&qword_100808030);
  }
  return result;
}

uint64_t sub_10020D688(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, _QWORD *, uint64_t);
  void (*v13)(_QWORD *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  NSString *v16;
  uint64_t v17;
  _QWORD *v18;
  NSString *v19;
  void (*v20)(_QWORD *, uint64_t);
  void (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(_QWORD *, _QWORD *, uint64_t);
  NSString *v25;
  void (*v26)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v27;
  void (*v28)(_QWORD *, _QWORD *, uint64_t);
  NSString *v29;
  void (*v30)(_QWORD *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  NSString *v33;
  uint64_t v34;
  void (*v35)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v36;
  NSString *v37;
  void (*v38)(_QWORD *, uint64_t);
  _QWORD *v39;
  NSString *v40;
  _QWORD *v41;
  NSString *v42;
  _QWORD *v43;
  NSString *v44;
  void (*v46)(_QWORD *, uint64_t, uint64_t);
  void (*v47)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v48;
  void (*v49)(_QWORD *, uint64_t);
  unsigned int v50;
  _QWORD v51[3];
  void *v52;
  void *v53;
  _QWORD v54[3];
  uint64_t v55;
  void *v56;
  _QWORD v57[3];
  uint64_t v58;
  void *v59;
  _QWORD v60[3];
  uint64_t v61;
  void *v62;
  _QWORD v63[3];
  uint64_t v64;
  void *v65;
  _QWORD v66[3];
  uint64_t v67;
  void *v68;
  _QWORD v69[3];
  uint64_t v70;
  void *v71;
  _QWORD v72[3];
  uint64_t v73;
  void *v74;
  _QWORD v75[3];
  uint64_t v76;
  void *v77;
  _QWORD v78[3];
  uint64_t v79;
  void *v80;
  _QWORD v81[5];
  _QWORD v82[6];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (void (**)(_QWORD *, uint64_t, uint64_t))((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for SmallLockupLayout.Metrics(0);
  sub_100011980(v5, qword_100865F50);
  v48 = sub_10000EFC4(v5, (uint64_t)qword_100865F50);
  v82[3] = &type metadata for Double;
  v82[4] = &protocol witness table for Double;
  v82[0] = 0x4024000000000000;
  if (qword_100806020 != -1)
    swift_once(&qword_100806020, sub_1004C5E70);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100869150);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  v8 = (void (*)(_QWORD *, _QWORD, uint64_t))v2[13];
  v8(v4, enum case for FontSource.useCase(_:), v1);
  v9 = v8;
  v10 = type metadata accessor for StaticDimension(0);
  v81[3] = v10;
  v81[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v81);
  v79 = v1;
  v80 = &protocol witness table for FontSource;
  v11 = sub_1000119C0(v78);
  v12 = (void (*)(_QWORD *, _QWORD *, uint64_t))v2[2];
  v12(v11, v4, v1);
  StaticDimension.init(_:scaledLike:)(v78, 16.0);
  v13 = (void (*)(_QWORD *, uint64_t))v2[1];
  v13(v4, v1);
  *v4 = UIFontTextStyleBody;
  v14 = enum case for FontSource.textStyle(_:);
  v9(v4, enum case for FontSource.textStyle(_:), v1);
  v46 = v9;
  v79 = v10;
  v80 = &protocol witness table for StaticDimension;
  sub_1000119C0(v78);
  v76 = v1;
  v77 = &protocol witness table for FontSource;
  v15 = sub_1000119C0(v75);
  v47 = v12;
  v12(v15, v4, v1);
  v16 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v75, 26.0);
  v13(v4, v1);
  *v4 = v16;
  v9(v4, v14, v1);
  v76 = v10;
  v17 = v10;
  v77 = &protocol witness table for StaticDimension;
  sub_1000119C0(v75);
  v73 = v1;
  v74 = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v72);
  v12(v18, v4, v1);
  v19 = v16;
  StaticDimension.init(_:scaledLike:)(v72, 18.0);
  v13(v4, v1);
  v20 = v13;
  v49 = v13;
  *v4 = v19;
  v50 = v14;
  v21 = v46;
  v46(v4, v14, v1);
  v22 = v17;
  v73 = v17;
  v74 = &protocol witness table for StaticDimension;
  sub_1000119C0(v72);
  v70 = v1;
  v71 = &protocol witness table for FontSource;
  v23 = sub_1000119C0(v69);
  v24 = v47;
  v47(v23, v4, v1);
  v25 = v19;
  StaticDimension.init(_:scaledLike:)(v69, 18.0);
  v20(v4, v1);
  *v4 = v25;
  v21(v4, v14, v1);
  v26 = v21;
  v70 = v22;
  v71 = &protocol witness table for StaticDimension;
  sub_1000119C0(v69);
  v67 = v1;
  v68 = &protocol witness table for FontSource;
  v27 = sub_1000119C0(v66);
  v24(v27, v4, v1);
  v28 = v24;
  v29 = v25;
  StaticDimension.init(_:scaledLike:)(v66, 22.0);
  v30 = v49;
  v49(v4, v1);
  *v4 = UIFontTextStyleFootnote;
  v31 = v50;
  v26(v4, v50, v1);
  v67 = v22;
  v68 = &protocol witness table for StaticDimension;
  sub_1000119C0(v66);
  v64 = v1;
  v65 = &protocol witness table for FontSource;
  v32 = sub_1000119C0(v63);
  v28(v32, v4, v1);
  v33 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)(v63, 20.0);
  v30(v4, v1);
  *v4 = v33;
  v34 = v31;
  v26(v4, v31, v1);
  v35 = v26;
  v64 = v22;
  v65 = &protocol witness table for StaticDimension;
  sub_1000119C0(v63);
  v61 = v1;
  v62 = &protocol witness table for FontSource;
  v36 = sub_1000119C0(v60);
  v28(v36, v4, v1);
  v37 = v33;
  StaticDimension.init(_:scaledLike:)(v60, 23.0);
  v38 = v49;
  v49(v4, v1);
  *v4 = v37;
  v35(v4, v34, v1);
  v61 = v22;
  v62 = &protocol witness table for StaticDimension;
  sub_1000119C0(v60);
  v58 = v1;
  v59 = &protocol witness table for FontSource;
  v39 = sub_1000119C0(v57);
  v28(v39, v4, v1);
  v40 = v37;
  StaticDimension.init(_:scaledLike:)(v57, 20.0);
  v38(v4, v1);
  *v4 = v40;
  v35(v4, v34, v1);
  v58 = v22;
  v59 = &protocol witness table for StaticDimension;
  sub_1000119C0(v57);
  v55 = v1;
  v56 = &protocol witness table for FontSource;
  v41 = sub_1000119C0(v54);
  v28(v41, v4, v1);
  v42 = v40;
  StaticDimension.init(_:scaledLike:)(v54, 20.0);
  v38(v4, v1);
  *v4 = v42;
  v35(v4, v50, v1);
  v55 = v22;
  v56 = &protocol witness table for StaticDimension;
  sub_1000119C0(v54);
  v52 = (void *)v1;
  v53 = &protocol witness table for FontSource;
  v43 = sub_1000119C0(v51);
  v28(v43, v4, v1);
  v44 = v42;
  StaticDimension.init(_:scaledLike:)(v51, 16.0);
  v38(v4, v1);
  v53 = &protocol witness table for Double;
  v52 = &type metadata for Double;
  v51[0] = 0x4024000000000000;
  return SmallLockupLayout.Metrics.init(artworkSize:artworkMargin:ordinalSpaceProvider:headingSpace:titleRegularSpace:titleMediumSpace:titleShortSpace:titleWithHeadingSpace:subtitleSpace:subtitleExtraTallSpace:tertiaryTitleSpace:offerTextSpace:bottomSpace:offerButtonSize:offerButtonMargin:numberOfLines:)(v82, sub_10020DD54, 0, v81, v78, v75, v72, v69, 62.0, 62.0, v66, v63, v60, v57, v54, 0, 0, 0, v51,
           2);
}

uint64_t sub_10020DD58(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  UIFontTextStyle *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(UIFontTextStyle *, uint64_t, uint64_t);
  void (*v8)(UIFontTextStyle *);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(UIFontTextStyle *, uint64_t);
  void (*v12)(UIFontTextStyle *);
  void (*v13)(UIFontTextStyle *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, UIFontTextStyle *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(UIFontTextStyle *, uint64_t, uint64_t);
  void (*v22)(UIFontTextStyle *);
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(_QWORD *, UIFontTextStyle *, uint64_t);
  void (*v26)(UIFontTextStyle *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  void (*v30)(_QWORD *, UIFontTextStyle *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(UIFontTextStyle *, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(UIFontTextStyle *, uint64_t, uint64_t);
  _QWORD *v36;
  void (*v37)(UIFontTextStyle *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(_QWORD *, UIFontTextStyle *, uint64_t);
  _QWORD *v42;
  NSString *v43;
  _QWORD *v44;
  _QWORD v46[2];
  void (*v47)(_QWORD *, UIFontTextStyle *, uint64_t);
  void (*v48)(UIFontTextStyle *);
  void (*v49)(UIFontTextStyle *, uint64_t);
  uint64_t v50;
  void (*v51)(UIFontTextStyle *, uint64_t, uint64_t);
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  _QWORD v55[3];
  void *v56;
  void *v57;
  _QWORD v58[3];
  uint64_t v59;
  void *v60;
  _QWORD v61[3];
  uint64_t v62;
  void *v63;
  _QWORD v64[5];
  __int128 v65;
  __int128 v66;
  void *v67;
  _QWORD v68[3];
  uint64_t v69;
  void *v70;
  _QWORD v71[3];
  uint64_t v72;
  void *v73;
  _QWORD v74[3];
  uint64_t v75;
  void *v76;
  _QWORD v77[3];
  uint64_t v78;
  void *v79;
  _QWORD v80[3];
  uint64_t v81;
  void *v82;
  _QWORD v83[5];
  _QWORD v84[6];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (UIFontTextStyle *)((char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for SmallLockupLayout.Metrics(0);
  sub_100011980(v5, qword_100865F68);
  v46[1] = sub_10000EFC4(v5, (uint64_t)qword_100865F68);
  v84[3] = &type metadata for Double;
  v84[4] = &protocol witness table for Double;
  v84[0] = 0x4020000000000000;
  if (qword_100806718 != -1)
    swift_once(&qword_100806718, sub_1004C9CB0);
  v6 = type metadata accessor for FontUseCase(0);
  v54 = sub_10000EFC4(v6, (uint64_t)qword_10086A620);
  v52 = v6;
  v7 = *(void (**)(UIFontTextStyle *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(v4, v54, v6);
  v51 = v7;
  v53 = enum case for FontSource.useCase(_:);
  v8 = (void (*)(UIFontTextStyle *))v2[13];
  v8(v4);
  v9 = type metadata accessor for StaticDimension(0);
  v83[3] = v9;
  v83[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v83);
  v81 = v1;
  v82 = &protocol witness table for FontSource;
  v10 = sub_1000119C0(v80);
  v47 = (void (*)(_QWORD *, UIFontTextStyle *, uint64_t))v2[2];
  v47(v10, v4, v1);
  StaticDimension.init(_:scaledLike:)(v80, 0.0);
  v11 = (void (*)(UIFontTextStyle *, uint64_t))v2[1];
  v12 = v8;
  v48 = v8;
  v11(v4, v1);
  v13 = v11;
  v49 = v11;
  v14 = v54;
  v15 = v52;
  v7(v4, v54, v52);
  v16 = v53;
  ((void (*)(UIFontTextStyle *, _QWORD, uint64_t))v12)(v4, v53, v1);
  v81 = v9;
  v82 = &protocol witness table for StaticDimension;
  sub_1000119C0(v80);
  v78 = v1;
  v79 = &protocol witness table for FontSource;
  v17 = sub_1000119C0(v77);
  v18 = v47;
  v47(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(v77, 18.0);
  v13(v4, v1);
  v19 = v14;
  v20 = v15;
  v21 = v51;
  v51(v4, v19, v15);
  v22 = v48;
  ((void (*)(UIFontTextStyle *, uint64_t, uint64_t))v48)(v4, v16, v1);
  v23 = v9;
  v78 = v9;
  v79 = &protocol witness table for StaticDimension;
  sub_1000119C0(v77);
  v75 = v1;
  v76 = &protocol witness table for FontSource;
  v24 = sub_1000119C0(v74);
  v25 = v18;
  v18(v24, v4, v1);
  StaticDimension.init(_:scaledLike:)(v74, 18.0);
  v26 = v49;
  v49(v4, v1);
  v21(v4, v54, v20);
  v27 = v53;
  ((void (*)(UIFontTextStyle *, _QWORD, uint64_t))v22)(v4, v53, v1);
  v75 = v23;
  v76 = &protocol witness table for StaticDimension;
  sub_1000119C0(v74);
  v72 = v1;
  v73 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(v71);
  v25(v28, v4, v1);
  StaticDimension.init(_:scaledLike:)(v71, 18.0);
  v26(v4, v1);
  v21(v4, v54, v52);
  ((void (*)(UIFontTextStyle *, uint64_t, uint64_t))v22)(v4, v27, v1);
  v50 = v23;
  v72 = v23;
  v73 = &protocol witness table for StaticDimension;
  sub_1000119C0(v71);
  v69 = v1;
  v70 = &protocol witness table for FontSource;
  v29 = sub_1000119C0(v68);
  v30 = v25;
  v25(v29, v4, v1);
  StaticDimension.init(_:scaledLike:)(v68, 18.0);
  v26(v4, v1);
  if (qword_100806720 != -1)
    swift_once(&qword_100806720, sub_1004C9CCC);
  v31 = v52;
  v32 = sub_10000EFC4(v52, (uint64_t)qword_10086A638);
  v33 = v51;
  v51(v4, v32, v31);
  v34 = v53;
  v35 = (void (*)(UIFontTextStyle *, uint64_t, uint64_t))v48;
  ((void (*)(UIFontTextStyle *, _QWORD, uint64_t))v48)(v4, v53, v1);
  v69 = v50;
  v70 = &protocol witness table for StaticDimension;
  sub_1000119C0(v68);
  *((_QWORD *)&v66 + 1) = v1;
  v67 = &protocol witness table for FontSource;
  v36 = sub_1000119C0(&v65);
  v30(v36, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v65, 18.0);
  v37 = v49;
  v49(v4, v1);
  v67 = 0;
  v65 = 0u;
  v66 = 0u;
  v38 = v54;
  v33(v4, v54, v31);
  v35(v4, v34, v1);
  v39 = v50;
  v64[3] = v50;
  v64[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v64);
  v62 = v1;
  v63 = &protocol witness table for FontSource;
  v40 = sub_1000119C0(v61);
  v41 = v47;
  v47(v40, v4, v1);
  StaticDimension.init(_:scaledLike:)(v61, 0.0);
  v37(v4, v1);
  *v4 = UIFontTextStyleFootnote;
  v35(v4, enum case for FontSource.textStyle(_:), v1);
  v62 = v39;
  v63 = &protocol witness table for StaticDimension;
  sub_1000119C0(v61);
  v59 = v1;
  v60 = &protocol witness table for FontSource;
  v42 = sub_1000119C0(v58);
  v41(v42, v4, v1);
  v43 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)(v58, 20.0);
  v37(v4, v1);
  v51(v4, v38, v52);
  v35(v4, v53, v1);
  v59 = v39;
  v60 = &protocol witness table for StaticDimension;
  sub_1000119C0(v58);
  v56 = (void *)v1;
  v57 = &protocol witness table for FontSource;
  v44 = sub_1000119C0(v55);
  v41(v44, v4, v1);
  StaticDimension.init(_:scaledLike:)(v55, 8.0);
  v37(v4, v1);
  v57 = &protocol witness table for Double;
  v56 = &type metadata for Double;
  v55[0] = 0x4024000000000000;
  return SmallLockupLayout.Metrics.init(artworkSize:artworkMargin:ordinalSpaceProvider:headingSpace:titleRegularSpace:titleMediumSpace:titleShortSpace:titleWithHeadingSpace:subtitleSpace:subtitleExtraTallSpace:tertiaryTitleSpace:offerTextSpace:bottomSpace:offerButtonSize:offerButtonMargin:numberOfLines:)(v84, sub_10020DD54, 0, v83, v80, v77, v74, v71, 36.0, 36.0, v68, &v65, v64, v61, v58, 0, 0, 0, v55,
           1);
}

double sub_10020E438@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  double result;
  _QWORD *v9;

  switch(a1)
  {
    case 3:
      if (qword_100804A28 != -1)
        swift_once(&qword_100804A28, sub_10010EBAC);
      v3 = type metadata accessor for StaticDimension(0);
      v4 = v3;
      v5 = qword_100865258;
      goto LABEL_13;
    case 2:
      if (qword_100804A20 != -1)
        swift_once(&qword_100804A20, sub_10010EB98);
      v3 = type metadata accessor for StaticDimension(0);
      v4 = v3;
      v5 = qword_100865240;
      goto LABEL_13;
    case 1:
      if (qword_100804A18 != -1)
        swift_once(&qword_100804A18, sub_10010EB88);
      v3 = type metadata accessor for StaticDimension(0);
      v4 = v3;
      v5 = qword_100865228;
LABEL_13:
      v6 = sub_10000EFC4(v3, (uint64_t)v5);
      a2[3] = v4;
      a2[4] = &protocol witness table for StaticDimension;
      v7 = sub_1000119C0(a2);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v7, v6, v4);
      return result;
  }
  a2[3] = type metadata accessor for ZeroDimension(0);
  a2[4] = &protocol witness table for ZeroDimension;
  v9 = sub_1000119C0(a2);
  *(_QWORD *)&result = static ZeroDimension.zero.getter(v9).n128_u64[0];
  return result;
}

void sub_10020E5B0(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int v8;
  id v9;
  char v10;
  double v11;
  id v12;
  char *v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_iconType];
  v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_iconType] = a1 & 1;
  if (((((a1 & 1) == 0) ^ v8) & 1) == 0)
  {
    if ((a1 & 1) != 0)
    {
      v9 = objc_msgSend(v2, "traitCollection", v5);
      v10 = UITraitCollection.prefersAccessibilityLayouts.getter(v9);

      v11 = 32.0;
      if ((v10 & 1) != 0)
        v11 = 50.0;
      InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, v11);
      v12 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
      v13 = sub_1004BC704((uint64_t)v7, 1);
      sub_10020FE90(v13);

    }
    else
    {
      sub_10020FE90(0);
    }
    objc_msgSend(v2, "setNeedsLayout");
  }
}

uint64_t sub_10020E6D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics, v19, 0, 0);
  v4 = type metadata accessor for SmallLockupLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
  v6 = type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  v7 = v5 + OBJC_IVAR____TtC20ProductPageExtension11OfferButton_cachedIntrinsicContentSize;
  if ((*(_BYTE *)(v5 + OBJC_IVAR____TtC20ProductPageExtension11OfferButton_cachedIntrinsicContentSize + 16) & 1) != 0)
  {
    v8 = v5 + OBJC_IVAR____TtC20ProductPageExtension11OfferButton__configuration;
    swift_beginAccess(v5 + OBJC_IVAR____TtC20ProductPageExtension11OfferButton__configuration, v15, 0, 0);
    sub_10000EF80(v8, (uint64_t)v16);
    v9 = v17;
    v10 = v18;
    sub_100010F08(v16, v17);
    v11 = dispatch thunk of OfferButtonConfiguration.size(in:)(v5, v9, v10);
    v13 = v12;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
    *(double *)v7 = v11;
    *(_QWORD *)(v7 + 8) = v13;
    *(_BYTE *)(v7 + 16) = 0;
  }
  else
  {
    v11 = *(double *)v7;
    v13 = *(_QWORD *)(v7 + 8);
  }
  return SmallLockupLayout.Metrics.offerButtonSize.setter(*(_QWORD *)&v11, v13, 0);
}

uint64_t sub_10020EB1C@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD v50[5];
  _QWORD v51[5];
  _QWORD v52[5];
  __int128 v53;
  __int128 v54;
  void *v55;
  _QWORD v56[5];
  __int128 v57;
  __int128 v58;
  void *v59;
  __int128 v60;
  uint64_t v61;
  void *v62;
  _QWORD v63[7];

  v2 = v1;
  v4 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v49 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char **)((char *)&v47 - v8);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - v11;
  sub_10020E6D8((uint64_t)&v47 - v11);
  v13 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall;
  if (v1[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_isDisplayingSearchAd] == 1
    && (v1[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] & 1) == 0)
  {
    Copyable.copyWithOverrides(in:)(v9, sub_10020EFD0, 0, v4, &protocol witness table for SmallLockupLayout.Metrics);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 32))(v12, v9, v4);
    v13 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall;
  }
  v14 = v1[v13];
  v48 = a1;
  if (v14 == 1)
  {
    v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_searchAdTertiaryLabel];
    v16 = type metadata accessor for DynamicTypeLabel(0);
    v61 = v16;
    v62 = &protocol witness table for UILabel;
    if (v15)
      v17 = v15;
    else
      v17 = *(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
    *(_QWORD *)&v60 = v17;
    sub_100010E24(&v60, (uint64_t)v63);
    v20 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel];
    if (v20)
    {
      *((_QWORD *)&v58 + 1) = v16;
      v59 = &protocol witness table for UILabel;
      *(_QWORD *)&v57 = v20;
    }
    else
    {
      v59 = 0;
      v57 = 0u;
      v58 = 0u;
    }
    sub_10016C0C8((uint64_t)&v57, (uint64_t)&v60);
    v22 = v15;
  }
  else
  {
    v18 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
    v19 = type metadata accessor for DynamicTypeLabel(0);
    v63[3] = v19;
    v63[4] = &protocol witness table for UILabel;
    v63[0] = v18;
    v20 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_searchAdTertiaryLabel];
    if (v20)
    {
      v61 = type metadata accessor for SearchAdTransparencyLabel(0);
      v62 = &protocol witness table for UILabel;
      *(_QWORD *)&v60 = v20;
      sub_100010E24(&v60, (uint64_t)&v57);
    }
    else
    {
      v21 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel];
      if (v21)
      {
        *((_QWORD *)&v58 + 1) = v19;
        v59 = &protocol witness table for UILabel;
        *(_QWORD *)&v57 = v21;
      }
      else
      {
        v59 = 0;
        v57 = 0u;
        v58 = 0u;
      }
      v23 = v18;
      v20 = 0;
      v18 = v21;
    }
    v24 = v18;
    sub_10016C0C8((uint64_t)&v57, (uint64_t)&v60);
  }
  v25 = v20;
  v26 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon])
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView], "setHidden:", 1);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v49, v12, v4);
  v27 = *(void **)&v2[v26];
  *((_QWORD *)&v58 + 1) = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v59 = &protocol witness table for UIView;
  v47 = v12;
  if (v27)
    v28 = v27;
  else
    v28 = *(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
  *(_QWORD *)&v57 = v28;
  v29 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_ordinalLabel];
  v30 = type metadata accessor for DynamicTypeLabel(0);
  v56[3] = v30;
  v56[4] = &protocol witness table for UILabel;
  v56[0] = v29;
  v31 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel];
  v32 = v5;
  v33 = v4;
  if (v31)
  {
    *((_QWORD *)&v54 + 1) = v30;
    v55 = &protocol witness table for UILabel;
    *(_QWORD *)&v53 = v31;
  }
  else
  {
    v55 = 0;
    v54 = 0u;
    v53 = 0u;
  }
  v34 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel];
  v52[4] = &protocol witness table for UILabel;
  v52[3] = v30;
  v51[4] = &protocol witness table for UILabel;
  v52[0] = v34;
  v35 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel];
  v51[3] = v30;
  v51[0] = v35;
  v36 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
  v50[3] = type metadata accessor for OfferButton();
  v50[4] = &protocol witness table for UIView;
  v50[0] = v36;
  v37 = v27;
  v38 = v29;
  v39 = v31;
  v40 = v34;
  v41 = v35;
  v42 = v36;
  v43 = objc_msgSend(v2, "traitCollection");
  v44 = v49;
  sub_10020F0D8(v49, (uint64_t)&v57, (uint64_t)v56, (uint64_t)&v53, (uint64_t)v52, (uint64_t)v63, (uint64_t)&v60, (uint64_t)v51, v48, (uint64_t)v50);

  v45 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v45(v44, v33);
  sub_100010F2C((uint64_t)&v60, (uint64_t *)&unk_100810120);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v63);
  v45((uint64_t)v47, v33);
  sub_100010F2C((uint64_t)v50, (uint64_t *)&unk_10080CE00);
  sub_100010F2C((uint64_t)v51, (uint64_t *)&unk_100810120);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
  sub_100010F2C((uint64_t)&v53, (uint64_t *)&unk_100810120);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v56);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v57);
}

uint64_t sub_10020EFD0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  UIFontTextStyle *v5;
  _QWORD *v6;
  NSString *v7;
  _QWORD v9[5];
  _QWORD v10[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (UIFontTextStyle *)((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v5 = UIFontTextStyleFootnote;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for FontSource.textStyle(_:), v1, v3);
  v10[3] = type metadata accessor for StaticDimension(0);
  v10[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v10);
  v9[3] = v1;
  v9[4] = &protocol witness table for FontSource;
  v6 = sub_1000119C0(v9);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v2 + 16))(v6, v5, v1);
  v7 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)(v9, 21.0);
  (*(void (**)(UIFontTextStyle *, uint64_t))(v2 + 8))(v5, v1);
  return SmallLockupLayout.Metrics.tertiaryTitleSpace.setter(v10);
}

uint64_t sub_10020F0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE v31[40];
  _BYTE v32[40];
  _BYTE v33[40];
  _BYTE v34[40];
  _BYTE v35[40];
  _BYTE v36[40];
  _BYTE v37[40];
  _BYTE v38[48];

  v29 = a8;
  v30 = a9;
  v26 = a6;
  v27 = a7;
  v24 = a4;
  v25 = a5;
  v28 = a10;
  v13 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SmallLockupLayout(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, a1, v13, v19);
  sub_10000EF80(a2, (uint64_t)v38);
  sub_10000EF80(a3, (uint64_t)v37);
  sub_100018ADC(v24, (uint64_t)v36, (uint64_t *)&unk_100810120);
  sub_10000EF80(v25, (uint64_t)v35);
  sub_10000EF80(v26, (uint64_t)v34);
  sub_100018ADC(v27, (uint64_t)v33, (uint64_t *)&unk_100810120);
  sub_100018ADC(v29, (uint64_t)v32, (uint64_t *)&unk_100810120);
  sub_100018ADC(v28, (uint64_t)v31, (uint64_t *)&unk_10080CE00);
  SmallLockupLayout.init(metrics:artworkView:ordinalText:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:)(v16, v38, v37, v36, v35, v34, v33, v32, v31);
  v22 = sub_100210114();
  Measurable.placeable.getter(v30, v17, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
}

void sub_10020F298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v1 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_searchAdTertiaryLabel);
  if (v4)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall) == 1)
    {
      v5 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
      v6 = v4;
      objc_msgSend(v5, "setHidden:", 1);
      v7 = v6;
      dispatch thunk of DynamicTypeLabel.fontUseCase.getter();
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v3);

      v8 = v7;
      v9 = objc_msgSend(v5, "textColor");
    }
    else
    {
      v10 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
      v11 = v4;
      if (v10)
        objc_msgSend(v10, "setHidden:", 1);
      v12 = qword_100806078;
      v13 = v4;
      if (v12 != -1)
        swift_once(&qword_100806078, sub_1004C5F84);
      v14 = type metadata accessor for FontUseCase(0);
      v15 = sub_10000EFC4(v14, (uint64_t)qword_100869258);
      v16 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v3, v15, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v3, 0, 1, v14);
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v3);

      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v9 = (id)static UIColor.secondaryText.getter(v13);
    }
    v17 = v9;
    objc_msgSend(v4, "setTextColor:", v9);

  }
}

uint64_t sub_10020F494(void *a1, void *a2)
{
  char *v2;
  char *v3;
  void *v4;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  char v15;

  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapGestureRecognizer];
  if (v4
    && (sub_100018B6C(0, (unint64_t *)&qword_100811E60, UIGestureRecognizer_ptr),
        v7 = v4,
        v8 = a1,
        LOBYTE(a1) = static NSObject.== infix(_:_:)(v8, v7),
        v8,
        v7,
        (a1 & 1) != 0))
  {
    objc_msgSend(a2, "locationInView:", v3);
    v9 = objc_msgSend(v3, "hitTest:withEvent:", 0);
    if (v9)
    {
      v10 = v9;
      v11 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v12 = v11;
      v13 = v10;
      v14 = static NSObject.== infix(_:_:)(v13, v12);

      v15 = v14 ^ 1;
    }
    else
    {
      v15 = 1;
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_10020F76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
  v2 = type metadata accessor for SmallLockupLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return sub_100018908(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapBlock + 8));
}

id sub_10020F7EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SmallLockupView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10020F8A4()
{
  return type metadata accessor for SmallLockupView(0);
}

uint64_t type metadata accessor for SmallLockupView(uint64_t a1)
{
  uint64_t result;

  result = qword_100815ED8;
  if (!qword_100815ED8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallLockupView);
  return result;
}

uint64_t sub_10020F8E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1006528D8;
  result = type metadata accessor for SmallLockupLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1006528F0;
    v4[3] = &unk_1006528D8;
    v4[4] = &unk_1006528D8;
    v4[5] = &unk_1006528F0;
    v4[6] = &unk_1006528F0;
    v4[7] = &unk_100652908;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 384);
    if (!result)
      return 0;
  }
  return result;
}

double sub_10020F97C(double a1, double a2)
{
  void **v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  double v11;
  uint64_t v13;

  v5 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_10020E6D8((uint64_t)v8);
  objc_msgSend(v9, "layoutMargins");
  v10 = objc_msgSend(v9, "traitCollection");
  v11 = sub_10020FBC4((uint64_t)v8, (uint64_t)v10, a1, a2);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

id sub_10020FA78()
{
  return sub_10020FDF4();
}

uint64_t storeEnumTagSinglePayload for SmallLockupIconType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10020FAFC + 4 * byte_1006528A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10020FB30 + 4 * byte_1006528A0[v4]))();
}

uint64_t sub_10020FB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10020FB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10020FB40);
  return result;
}

uint64_t sub_10020FB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10020FB54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10020FB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10020FB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmallLockupIconType()
{
  return &type metadata for SmallLockupIconType;
}

unint64_t sub_10020FB80()
{
  unint64_t result;

  result = qword_100815EE8;
  if (!qword_100815EE8)
  {
    result = swift_getWitnessTable(&unk_100652974, &type metadata for SmallLockupIconType);
    atomic_store(result, (unint64_t *)&qword_100815EE8);
  }
  return result;
}

double sub_10020FBC4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v31;

  v8 = type metadata accessor for OfferButtonMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v19, a1, v15, v17);
  v21 = SmallLockupLayout.Metrics.offerButtonSize.getter(v20);
  if ((v23 & 1) == 0 && ((v21 | v22) & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v21) & 1) != 0)
    {
      if (qword_100804668 != -1)
        swift_once(&qword_100804668, sub_1000654B0);
      v24 = qword_10080AA60;
    }
    else
    {
      if (qword_100804670 != -1)
        swift_once(&qword_100804670, sub_10006595C);
      v24 = qword_10080AA78;
    }
    v25 = sub_10000EFC4(v8, (uint64_t)v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
    v27 = OfferButtonMetrics.minimumSize.getter(v26);
    v28 = OfferButtonMetrics.estimatedHeight.getter();
    SmallLockupLayout.Metrics.offerButtonSize.setter(*(_QWORD *)&v27, *(_QWORD *)&v28, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  v29 = static SmallLockupLayout.estimatedMeasurements(fitting:using:with:)(v19, a2, a3, a4);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  return v29;
}

id sub_10020FDF4()
{
  void *v0;

  return objc_msgSend(v0, "setFrame:");
}

double sub_10020FE04(uint64_t a1, id a2, double a3, double a4)
{
  id v7;
  double v8;

  v7 = objc_msgSend(a2, "traitCollection");
  v8 = sub_10020FBC4(a1, (uint64_t)v7, a3, a4);

  return v8;
}

void sub_10020FE90(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v3 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v1, "addSubview:", v8);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView], "setHidden:", 1);

  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView], "setHidden:", 0);
  }
}

void sub_10020FF68(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v3 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_searchAdTertiaryLabel;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_searchAdTertiaryLabel];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v9 = v7;
    sub_10020F298();
    objc_msgSend(v1, "addSubview:", v9);

  }
  else
  {
    v8 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel];
    if (v8)
      objc_msgSend(v8, "setHidden:", 0);
  }
}

void sub_10021003C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapBlock];
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapBlock];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapBlock + 8];
  *v3 = a1;
  v3[1] = a2;
  sub_100018918(a1, a2);
  sub_100018908(v4, v5);
  v6 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapGestureRecognizer;
  v7 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapGestureRecognizer];
  if (!*v3)
  {
    v8 = 0;
LABEL_6:
    *(_QWORD *)&v2[v6] = v8;

    return;
  }
  if (!v7)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
    objc_msgSend(v8, "addTarget:action:", v2, "lockupTapGestureRecognized");
    objc_msgSend(v8, "setDelegate:", v2);
    objc_msgSend(v2, "addGestureRecognizer:", v8);
    v7 = *(void **)&v2[v6];
    goto LABEL_6;
  }
}

unint64_t sub_100210114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100815EF0;
  if (!qword_100815EF0)
  {
    v1 = type metadata accessor for SmallLockupLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SmallLockupLayout, v1);
    atomic_store(result, (unint64_t *)&qword_100815EF0);
  }
  return result;
}

id sub_10021015C()
{
  _BYTE *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  objc_class *v16;
  id v17;
  id v18;
  objc_super v20;

  v1 = type metadata accessor for UITraitOverrides(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UITypesettingLanguageAwareLineHeightRatio(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_iconType] = 0;
  v9 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
  v10 = qword_100804E70;
  v11 = v0;
  if (v10 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  v12 = &v11[v9];
  v13 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v14 = sub_10000EFC4(v13, (uint64_t)qword_100865F50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v14, v13);
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_searchAdTertiaryLabel] = 0;
  v11[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  v11[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_isDisplayingSearchAd] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapGestureRecognizer] = 0;
  v15 = &v11[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_lockupTapBlock];
  *v15 = 0;
  v15[1] = 0;

  v16 = (objc_class *)type metadata accessor for SmallLockupView(0);
  v20.receiver = v11;
  v20.super_class = v16;
  v17 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UITypesettingLanguageAwareLineHeightRatio.legacy(_:), v5);
  v18 = v17;
  UIView.traitOverrides.getter();
  UIMutableTraits._typesettingLanguageAwareLineHeightRatio.setter(v8, v1, &protocol witness table for UITraitOverrides);
  UIView.traitOverrides.setter(v4);

  return v18;
}

uint64_t static NSUserActivity.handle(userActivity:with:asPartOf:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, _QWORD, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD v113[2];
  __int128 v114;
  __int128 v115;
  uint64_t v116;

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v90 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v89 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for FlowPresentationContext(0);
  v103 = *(_QWORD *)(v105 - 8);
  v8 = __chkstk_darwin(v105);
  v108 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowOrigin(0, v8);
  v101 = *(_QWORD *)(v10 - 8);
  v102 = v10;
  __chkstk_darwin(v10);
  v106 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for FlowAnimationBehavior(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v104 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  __chkstk_darwin(v14);
  v107 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v16);
  v100 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v18);
  v99 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for FlowPage(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v96 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for NavigationTab(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v110 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ReferrerData(0);
  v109 = *(char **)(v95 - 8);
  __chkstk_darwin(v95);
  v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DAF8(&qword_100815F00);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AppStoreDeepLink(0, v25);
  v111 = *(_QWORD *)(v28 - 8);
  v112 = v28;
  *(_QWORD *)&v29 = __chkstk_darwin(v28).n128_u64[0];
  v31 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = objc_msgSend(a1, "activityType", v29);
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
  v38 = v37;
  if (v36 == v33 && v37 == v35)
  {
    v39 = a2;
    v40 = a3;
    swift_bridgeObjectRelease(v35);
LABEL_5:
    swift_bridgeObjectRelease(v35);
    sub_100210BCC();
    return static NSUserActivity.handleSearchableItem(userActivity:with:asPartOf:)(a1, v39, v40) & 1;
  }
  v88 = v6;
  v39 = a2;
  v40 = a3;
  v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v33, v35, 0);
  swift_bridgeObjectRelease(v38);
  if ((v41 & 1) != 0)
    goto LABEL_5;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
  v45 = v44;
  if (v43 == v33 && v44 == v35)
  {
    swift_bridgeObjectRelease_n(v35, 2);
    v46 = v31;
  }
  else
  {
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v33, v35, 0);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v45);
    result = 0;
    v46 = v31;
    if ((v47 & 1) == 0)
      return result;
  }
  AppStoreDeepLink.init(userActivity:refApp:)(a1, 0, 0);
  v49 = v111;
  v48 = v112;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v27, 1, v112) == 1)
  {
    sub_100010F2C((uint64_t)v27, &qword_100815F00);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v27, v48);
    type metadata accessor for MetricsActivity(0);
    static MetricsActivity.current.getter(v50);
    ((void (*)(void))AppStoreDeepLink.referral.getter)();
    dispatch thunk of MetricsActivity.setReferrerData(_:)(v23);
    v51 = swift_release();
    v52 = v23;
    v53 = v95;
    (*((void (**)(char *, uint64_t, __n128))v109 + 1))(v52, v95, v51);
    v54 = type metadata accessor for ASKBagContract(0);
    v86 = v40;
    BaseObjectGraph.optional<A>(_:)(&v114, v54, v54);
    v87 = v39;
    if ((_QWORD)v114)
    {
      static ResilientDeepLinkController.removeNonResilientDeepLinks(bag:)(v114);
      v55 = swift_release();
    }
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v91 + 104))(v110, enum case for NavigationTab.loading(_:), v92, v55);
    v56 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v57 = swift_allocObject(v56, 40, 7);
    *(_OWORD *)(v57 + 16) = xmmword_100640AE0;
    v116 = 0;
    v114 = 0u;
    v115 = 0u;
    v58 = v96;
    v59 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v93 + 104))(v96, enum case for FlowPage.unknown(_:), v94);
    v60 = v99;
    AppStoreDeepLink.url.getter(v59);
    v62 = type metadata accessor for URL(0, v61);
    v63 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v60, 0, 1, v62);
    v64 = v100;
    AppStoreDeepLink.referral.getter(v63);
    v65 = (*((uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))v109 + 7))(v64, 0, 1, v53);
    memset(v113, 0, sizeof(v113));
    v66 = v107;
    static ActionMetrics.notInstrumented.getter(v65);
    v67 = *(void (**)(char *, _QWORD, uint64_t))(v97 + 104);
    v109 = v46;
    v68 = v104;
    v67(v104, enum case for FlowAnimationBehavior.never(_:), v98);
    v69 = v106;
    (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v106, enum case for FlowOrigin.external(_:), v102);
    v70 = v108;
    v71 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v103 + 104))(v108, enum case for FlowPresentationContext.infer(_:), v105);
    v72 = static FlowActionPresentation.stackPush.getter(v71);
    v74 = v73;
    v75 = type metadata accessor for FlowAction(0);
    swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
    v76 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v114, 0, 0, 0, v58, v60, 0, 0, v64, v113, v66, v70, v68, v69, 0, v72, v74);
    *(_QWORD *)(v57 + 32) = v76;
    *(_QWORD *)&v114 = v57;
    v77 = specialized Array._endMutation()(v76);
    v78 = v114;
    static ActionMetrics.notInstrumented.getter(v77);
    v79 = type metadata accessor for TabChangeAction(0);
    swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
    v80 = TabChangeAction.init(navigationTab:actions:popToRoot:presentationStyle:actionMetrics:)(v110, v78, 0, 0, v66);
    v81 = v88;
    if (v87)
    {
      v114 = 0u;
      v115 = 0u;
      v82 = v90;
      v83 = v89;
      (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, enum case for ActionRunner.Origin.userInitiated(_:), v88);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v80, &v114, v83, v86);
      v84 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v83, v81, v84);
      sub_100010F2C((uint64_t)&v114, &qword_100808F20);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v109, v112);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v111 + 8))(v109, v112);
      swift_release();
    }
    return 1;
  }
}

unint64_t sub_100210BCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100815F08;
  if (!qword_100815F08)
  {
    v1 = objc_opt_self(NSUserActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100815F08);
  }
  return result;
}

double sub_100210C08(void **a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v8;
  void *v12;
  char *ObjectType;

  v12 = *a1;
  ObjectType = (char *)swift_getObjectType();
  return sub_1004BB8EC(v12, a8, 1, a2, a3, v8, ObjectType);
}

id sub_100210C64(uint64_t *a1)
{
  return sub_1003B27B8(*a1, 1);
}

uint64_t sub_100210C70()
{
  return sub_10000E720(&qword_100812DB0, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
}

id sub_100210C9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char *v8;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id result;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v17 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for OfferTint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_10040A58C(a1, v8, a2, a3, a4, 0, a5, a6, (uint64_t)v19, a7);
  sub_100010F2C((uint64_t)v19, (uint64_t *)&unk_100815D70);
  v8[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = a8;
  sub_10020F298();
  result = objc_msgSend(v8, "setNeedsLayout");
  if ((a8 & 1) != 0)
  {
    v22 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel;
    v23 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel];
    if (v23)
    {
      objc_msgSend(v23, "setHidden:", 1);
      v24 = *(void **)&v8[v22];
      if (v24)
        objc_msgSend(v24, "setText:", 0);
    }
    v25 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel;
    v26 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel];
    if (v26)
    {
      if ((objc_msgSend(v26, "isHidden") & 1) == 0)
      {
        v27 = *(void **)&v8[v25];
        if (v27)
        {
          if (objc_msgSend(v27, "hasContent"))
          {
            v28 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
            objc_msgSend(v28, "setHidden:", 1);
            objc_msgSend(v28, "setText:", 0);
          }
        }
      }
    }
    v29 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel];
    result = objc_msgSend(v29, "isHidden");
    if ((result & 1) == 0)
    {
      result = objc_msgSend(v29, "hasContent");
      if ((_DWORD)result)
      {
        v30 = *(void **)&v8[v25];
        if (v30)
        {
          objc_msgSend(v30, "setHidden:", 1);
          v31 = *(void **)&v8[v25];
          if (v31)
            objc_msgSend(v31, "setText:", 0);
        }
        v32 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
        objc_msgSend(v32, "setHidden:", 1);
        return objc_msgSend(v32, "setText:", 0);
      }
    }
  }
  return result;
}

void sub_100210F04(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  char *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSString v11;
  uint64_t v12;
  void (*v13)();
  void (**v14)();
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  __n128 v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  char v36[24];
  _BYTE v37[24];
  uint64_t v38;

  v3 = v2;
  if (a1)
  {
    v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_isDisplayingSearchAd] = 1;
    objc_msgSend(v2, "setNeedsLayout", swift_retain(a1).n128_f64[0]);
    v6 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchAdTransparencyButton(0)), "init");
    SearchAd.adTransparencyAction.getter();
    Action.title.getter(v7);
    v9 = v8;
    v10 = swift_release().n128_u64[0];
    if (v9)
    {
      v11 = String._bridgeToObjectiveC()();
      v10 = swift_bridgeObjectRelease(v9).n128_u64[0];
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v6, "setTitle:forState:", v11, 0, *(double *)&v10);

    v12 = swift_allocObject(&unk_100745C00, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    v13 = (void (*)())swift_allocObject(&unk_100745C28, 40, 7);
    *((_QWORD *)v13 + 2) = v12;
    *((_QWORD *)v13 + 3) = a1;
    *((_QWORD *)v13 + 4) = a2;
    v14 = (void (**)())&v6[qword_100812CB8];
    v15 = *(_QWORD *)&v6[qword_100812CB8];
    v16 = *(_QWORD *)&v6[qword_100812CB8 + 8];
    *v14 = sub_100211420;
    v14[1] = v13;
    swift_retain(a1);
    swift_retain(a2);
    sub_100018908(v15, v16);
    v17 = objc_allocWithZone((Class)type metadata accessor for SearchAdTransparencyLabel(0));
    v18 = v6;
    v19 = sub_1004045F8(v18);
    if (v3[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] == 1)
    {
      v21 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel], "text");
      if (v21)
      {
        v22 = v21;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v25 = v24;

      }
      else
      {
        v23 = 0;
        v25 = 0;
      }
    }
    else
    {
      v23 = SearchAd.advertisingText.getter(v20);
      v25 = v26;
    }
    v27 = (uint64_t *)&v19[qword_100821B60];
    v28 = *(_QWORD *)&v19[qword_100821B60 + 8];
    *v27 = v23;
    v27[1] = v25;
    swift_bridgeObjectRelease(v28);
    sub_100404BF0();
    v29 = v19;
    sub_10020FF68(v19);

    v30 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel;
    v31 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel];
    if (v31 && (objc_msgSend(v31, "isHidden") & 1) == 0 && (v32 = *(void **)&v3[v30]) != 0)
      v33 = objc_msgSend(v32, "hasContent");
    else
      v33 = 0;
    v34 = (uint64_t)&v3[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabelPresenter];
    swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabelPresenter], v36, 0, 0);
    sub_100081524(v34, (uint64_t)v37);
    v35 = v38;
    sub_100010F2C((uint64_t)v37, &qword_100808F20);
    if (v35 || v33)
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel], "setHidden:", 1);
    objc_msgSend(v3, "setNeedsLayout");
    swift_release();

  }
  else
  {
    v2[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_isDisplayingSearchAd] = 0;
    objc_msgSend(v2, "setNeedsLayout");
    sub_10020FF68(0);
  }
}

void sub_100211250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v18[4];
  _BYTE v19[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v13 = SearchAd.adTransparencyAction.getter();
      v18[3] = type metadata accessor for SearchAd(0);
      v18[0] = a2;
      v14 = type metadata accessor for ObjectGraph(0);
      v15 = swift_dynamicCastClassUnconditional(a3, v14, 0, 0, 0);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      swift_retain(a2);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v13, v18, v9, v15);
      swift_release();
      v16 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_100010F2C((uint64_t)v18, &qword_100808F20);
    }
  }
}

uint64_t sub_1002113B4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_isDisplayingSearchAd);
}

uint64_t sub_1002113C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002113EC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100211420()
{
  uint64_t *v0;

  sub_100211250(v0[2], v0[3], v0[4]);
}

id sub_10021142C()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051260355;
  LODWORD(v2) = 1059816735;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v3, v2, v4);
  qword_100815F60 = (uint64_t)result;
  return result;
}

char *sub_10021147C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  _BYTE v43[24];
  _QWORD v44[5];
  objc_super v45;

  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = &v4[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_itemLayoutContext];
  v14 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView;
  v16 = type metadata accessor for HeroCarouselView(0);
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16));
  v18 = v4;
  *(_QWORD *)&v4[v15] = objc_msgSend(v17, "init");
  v19 = &v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_state];
  v20 = sub_10000DAF8(&qword_10080E3F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_tapGestureRecognizer;
  *(_QWORD *)&v18[v21] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v22 = &v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  swift_weakInit(&v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsCalculator], 0);
  v23 = &v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator]);
  v24 = &v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_currentTitleEffect];
  v25 = type metadata accessor for TitleEffect(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect;
  v27 = sub_10000DAF8(&qword_100814988);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  *(_QWORD *)&v18[v26] = SyncEvent.init()();
  v29 = UUID.init()(v28);
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  v44[0] = v30;
  v44[1] = v32;
  AnyHashable.init<A>(_:)(v44, &type metadata for String, &protocol witness table for String);
  v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_allowsAutoPlay] = 1;
  v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_isPlaying] = 0;
  swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_visibilityTrackingView]);

  v33 = (objc_class *)type metadata accessor for HeroCarouselCollectionViewCell(0);
  v45.receiver = v18;
  v45.super_class = v33;
  v34 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", a1, a2, a3, a4);
  v35 = objc_msgSend(v34, "contentView");
  objc_msgSend(v35, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v36 = objc_msgSend(v34, "contentView");
  v37 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView;
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView]);

  v38 = *(_QWORD *)&v34[v37];
  v44[3] = v33;
  v44[4] = &off_100745C88;
  v44[0] = v34;
  v39 = v38 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_carouselDelegate;
  swift_beginAccess(v38 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_carouselDelegate, v43, 33, 0);
  v40 = v34;
  sub_1000393D8((uint64_t)v44, v39, &qword_100815FF0);
  swift_endAccess(v43);
  v41 = *(void **)&v40[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_tapGestureRecognizer];
  objc_msgSend(v41, "addTarget:action:", v40, "handleTap:");
  objc_msgSend(v41, "setDelegate:", v40);
  objc_msgSend(v40, "addGestureRecognizer:", v41);

  return v40;
}

uint64_t sub_100211890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = type metadata accessor for TitleEffectUpdate(0);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100815FD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TitleEffect(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v20 - v14;
  v16 = v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_currentTitleEffect, v23, 33, 0);
  sub_100213708(a1, v16);
  swift_endAccess(v23);
  sub_100018ADC(v16, (uint64_t)v8, (uint64_t *)&unk_100815FD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_100815FD0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    if (qword_100804E80 != -1)
      swift_once(&qword_100804E80, sub_10021142C);
    v17 = qword_100815F60;
    v18 = (id)qword_100815F60;
    TitleEffectUpdate.init(effect:isAnimated:animationDuration:timingFunction:)(v12, 1, 0x3FD0000000000000, 0, v17);
    SyncEvent.post(_:)(v5);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return sub_100010F2C(a1, (uint64_t *)&unk_100815FD0);
}

void sub_100211ACC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  void (*v13)(__n128);
  uint64_t v14;
  __n128 v15;
  char v16[24];
  objc_super v17;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0);
  objc_msgSendSuper2(&v17, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView];
  v3 = objc_msgSend(v0, "contentView");
  v4 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v5 = LayoutMarginsAware<>.layoutFrame.getter(v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  v12 = &v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock], v16, 0, 0);
  v13 = *(void (**)(__n128))v12;
  if (*(_QWORD *)v12)
  {
    v14 = *((_QWORD *)v12 + 1);
    v15 = swift_retain(v14);
    v13(v15);
    sub_100018908((uint64_t)v13, v14);
  }
}

void sub_100211C14()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v16[24];
  objc_super v17;

  v1 = v0;
  v2 = sub_10000DAF8(&qword_10080E3F0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for HeroCarouselCollectionViewCell(0);
  v17.receiver = v0;
  v17.super_class = v5;
  objc_msgSendSuper2(&v17, "prepareForReuse");
  v6 = sub_10000DAF8(&qword_10080E3F8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = (uint64_t)&v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_state];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_state], v16, 33, 0);
  sub_1000393D8((uint64_t)v4, v7, &qword_10080E3F0);
  swift_endAccess(v16);
  v8 = &v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler + 8];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  sub_100018908(v9, v10);
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView];
  v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_scrollView);
  sub_1002DB8E0((uint64_t)_swiftEmptyArrayStorage, 0);
  v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC20ProductPageExtension22HeroCarouselScrollView_focusedPageTracker);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC20ProductPageExtension22HeroCarouselScrollView_focusedPageTracker) = 0;
  sub_1002DB354(v13);
  swift_release();
  *(_BYTE *)(v12 + OBJC_IVAR____TtC20ProductPageExtension22HeroCarouselScrollView_currentPagingDirection) = 1;
  sub_1002DAFC4();
  *(_BYTE *)(v11 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_isAutoScrollEnabled) = 0;
  v14 = *(void **)(v11 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_autoScrollTimer);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_autoScrollTimer) = 0;
  objc_msgSend(v14, "invalidate");

  v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_isPlaying] = 0;
}

void sub_100211DE8(uint64_t (**a1)())
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**i)();
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  double v16;
  char *v17;
  double v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t (**v22)();
  objc_super v23;

  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0);
  objc_msgSendSuper2(&v23, "applyLayoutAttributes:", a1);
  v3 = type metadata accessor for BaseCollectionViewLayoutAttributes();
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView];
    v21 = v4;
    v6 = OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_parallaxY;
    *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_parallaxY) = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension34BaseCollectionViewLayoutAttributes_parallaxY);
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_carouselItemViews);
    v22 = a1;
    if ((unint64_t)v7 >> 62)
      goto LABEL_14;
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v7, 2);
    for (i = a1; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v19))
    {
      v10 = 4;
      a1 = off_10081F000;
      v11 = 0;
      if ((v7 & 0xC000000000000001) != 0)
      {
LABEL_5:
        v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v7);
        goto LABEL_7;
      }
      while (1)
      {
        v12 = (char *)*(id *)(v7 + 8 * v10);
LABEL_7:
        v13 = v12;
        v14 = __OFADD__(v11, 1);
        v15 = v11 + 1;
        if (v14)
          break;
        v16 = *(double *)(v5 + v6);
        v17 = *(char **)(*(_QWORD *)(*(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_backgroundView]
                                   + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselItemBackgroundView_mediaViewContainer)
                       + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
        v18 = *(double *)&v17[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_parallaxY];
        *(double *)&v17[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_parallaxY] = v16;
        if (v16 != v18)
          objc_msgSend(v17, "setNeedsLayout");

        if (v15 == v8)
          goto LABEL_18;
        v11 = ++v10 - 4;
        if ((v7 & 0xC000000000000001) != 0)
          goto LABEL_5;
      }
      __break(1u);
LABEL_14:
      if (v7 < 0)
        v19 = v7;
      else
        v19 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v7, 2);
      v20 = a1;
    }
LABEL_18:
    swift_bridgeObjectRelease_n(v7, 2);
    sub_10054C798(*(_BYTE *)(v21
                           + OBJC_IVAR____TtC20ProductPageExtension34BaseCollectionViewLayoutAttributes_isRubberbanding));

  }
}

void sub_100212020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator);
  if (Strong)
  {
    v3 = (void *)Strong;
    dispatch thunk of VideoPlaybackCoordinator.resumeAutoPlayVideo()();

  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_isAutoScrollEnabled) = 1;
  if (!*(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_autoScrollTimer))
    sub_10054D4CC(0.0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_isPlaying) = 1;
}

void sub_1002120A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_isAutoScrollEnabled) = 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_autoScrollTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_autoScrollTimer) = 0;
  objc_msgSend(v2, "invalidate");

  *(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_isPlaying) = 0;
}

void sub_1002122B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t Strong;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t, __n128);
  __n128 v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  id v57;
  char *v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t, __n128);
  double (*v63)(char *, char *, uint64_t);
  char *v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  id v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  __n128 v85;
  uint64_t v86;
  __n128 v87;
  char *v88;
  __n128 v89;
  uint64_t v90;
  char *v91;
  __n128 v92;
  char *v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  id v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  uint64_t v114;
  id v115;
  __n128 v116;
  __n128 v117;
  void (*v118)(char *, uint64_t, __n128);
  uint64_t v119;
  double (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char v132[24];
  char v133[32];

  v131 = type metadata accessor for ImpressionMetrics.ID(0);
  v129 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v128 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v130 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v119 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v119 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v119 - v14;
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD **)(v16 - 8);
  __chkstk_darwin(v16);
  v127 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v119 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v119 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v119 - v26;
  a1 += 16;
  swift_beginAccess(a1, v133, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v29 = (char *)Strong;
  v30 = a2 + 16;
  swift_beginAccess(v30, v132, 0, 0);
  v31 = swift_weakLoadStrong(v30);
  if (!v31)
  {

    return;
  }
  v126 = v31;
  v123 = v21;
  v32 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView;
  v33 = *(char **)&v29[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView];
  if ((v33[OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_previousIndex + 8] & 1) == 0)
  {
    v124 = v16;
    v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_previousIndex];
    v35 = v33;
    v125 = v17;
    v36 = v35;
    v37 = v34;
    v16 = v124;
    v38 = (char *)sub_1002DC160(v37, 0);

    v17 = v125;
    if (v38)
    {
      v39 = OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_heroCarouselItem;
      v122 = v38;
      v40 = *(_QWORD *)&v38[OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_heroCarouselItem];
      if (v40)
      {
        v41 = swift_retain(v40);
        HeroCarouselItem.impressionMetrics.getter(v41);
        v42 = swift_release();
        v43 = v16;
        v44 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v125[6];
        if (v44(v15, 1, v43, v42) != 1)
        {
          v120 = (double (*)(char *, char *, uint64_t))v125[4];
          v45.n128_f64[0] = v120(v27, v15, v124);
          v46 = v128;
          ImpressionMetrics.id.getter(v45);
          v47 = ImpressionsCalculator.childCalculator(for:)(v46);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v46, v131);
          if (v47)
          {
            v121 = v47;
            if (*(_QWORD *)&v122[v39]
              && (v49 = swift_retain(*(_QWORD *)&v122[v39]),
                  v50 = HeroCarouselItem.overlay.getter(v49),
                  v51 = swift_release(),
                  v50))
            {
              HeroCarouselItemOverlay.impressionMetrics.getter(v51);
              v52 = swift_release();
              if (v44(v12, 1, v124, v52) != 1)
              {
                v53 = v12;
                v54 = v124;
                v55.n128_f64[0] = v120(v24, v53, v124);
                ImpressionsCalculator.removeElement(_:)(v24, v55);
                v56 = swift_release();
                ((void (*)(char *, uint64_t, __n128))v125[1])(v24, v54, v56);
                goto LABEL_17;
              }
            }
            else
            {
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v125[7])(v12, 1, 1, v124);
            }
            swift_release();
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
LABEL_17:
          ImpressionsCalculator.removeElement(_:)(v27, v48);

          v16 = v124;
          v17 = v125;
          ((void (*)(char *, uint64_t))v125[1])(v27, v124);
          goto LABEL_18;
        }
      }
      else
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v125[7])(v15, 1, 1, v16);
      }

      sub_100010F2C((uint64_t)v15, &qword_1008131E0);
      v16 = v124;
      v17 = v125;
    }
  }
LABEL_18:
  v57 = *(id *)&v29[v32];
  v58 = (char *)sub_10054C9D8();

  if (!v58)
  {

    swift_release();
    return;
  }
  v59 = OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_heroCarouselItem;
  if (!*(_QWORD *)&v58[OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_heroCarouselItem])
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17[7])(v9, 1, 1, v16);
    goto LABEL_29;
  }
  v60 = swift_retain(*(_QWORD *)&v58[OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_heroCarouselItem]);
  HeroCarouselItem.impressionMetrics.getter(v60);
  v61 = swift_release();
  v62 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v17[6];
  if (v62(v9, 1, v16, v61) == 1)
  {
LABEL_29:

    swift_release();
    v114 = (uint64_t)v9;
LABEL_30:
    sub_100010F2C(v114, &qword_1008131E0);
    return;
  }
  v63 = (double (*)(char *, char *, uint64_t))v17[4];
  v64 = v123;
  v63(v123, v9, v16);
  objc_msgSend(v58, "bounds");
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v73 = objc_msgSend(v29, "superview");
  objc_msgSend(v58, "convertRect:toView:", v73, v66, v68, v70, v72);
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v81 = v80;

  ImpressionsCalculator.addElement(_:at:)(v64, v75, v77, v79, v81);
  v82 = *(void **)&v58[OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_overlayView];
  if (!v82)
  {
    ((void (*)(char *, uint64_t))v17[1])(v64, v16);

    swift_release();
    return;
  }
  v83 = *(_QWORD *)&v58[v59];
  if (!v83)
  {
    v115 = v82;
    goto LABEL_34;
  }
  v84 = v82;
  v85 = swift_retain(v83);
  v86 = HeroCarouselItem.overlay.getter(v85);
  v87 = swift_release();
  if (!v86)
  {
LABEL_34:
    v88 = v130;
    v90 = v16;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v17[7])(v130, 1, 1, v16, v87);
    goto LABEL_35;
  }
  v125 = v84;
  v88 = v130;
  HeroCarouselItemOverlay.impressionMetrics.getter(v87);
  v89 = swift_release();
  v90 = v16;
  if (v62(v88, 1, v16, v89) == 1)
  {
LABEL_35:

    v116 = swift_release();
    ((void (*)(char *, uint64_t, __n128))v17[1])(v123, v90, v116);
    v114 = (uint64_t)v88;
    goto LABEL_30;
  }
  v91 = v127;
  v92.n128_f64[0] = v63(v127, v88, v16);
  v93 = v128;
  v94 = v123;
  ImpressionMetrics.id.getter(v92);
  v95 = ImpressionsCalculator.childCalculator(for:)(v93);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v93, v131);
  if (v95)
  {
    v96 = v125;
    objc_msgSend(v96, "bounds");
    v98 = v97;
    v100 = v99;
    v102 = v101;
    v104 = v103;
    v105 = objc_msgSend(v29, "superview");
    objc_msgSend(v96, "convertRect:toView:", v105, v98, v100, v102, v104);
    v107 = v106;
    v109 = v108;
    v111 = v110;
    v113 = v112;

    ImpressionsCalculator.addElement(_:at:)(v91, v107, v109, v111, v113);
    swift_release();
  }
  else
  {

  }
  v117 = swift_release();
  v118 = (void (*)(char *, uint64_t, __n128))v17[1];
  v118(v91, v90, v117);
  ((void (*)(char *, uint64_t))v118)(v94, v90);
}

id sub_100212A88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeroCarouselCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100212BB4()
{
  return type metadata accessor for HeroCarouselCollectionViewCell(0);
}

uint64_t type metadata accessor for HeroCarouselCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100815F98;
  if (!qword_100815F98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroCarouselCollectionViewCell);
  return result;
}

void sub_100212BF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[14];

  sub_1000780CC(319, (unint64_t *)&qword_10080AD00, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_100212D00(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v8[4] = &unk_100652A70;
      v8[5] = &unk_100652A88;
      v8[6] = &unk_100652A70;
      v8[7] = &unk_100652A88;
      sub_1000780CC(319, (unint64_t *)&unk_100815FC0, (uint64_t (*)(uint64_t))&type metadata accessor for TitleEffect);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        v8[9] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[10] = &unk_100652AA0;
        v8[11] = &unk_100652AB8;
        v8[12] = &unk_100652AB8;
        v8[13] = &unk_100652A88;
        swift_updateClassMetadata2(a1, 256, 14, v8, a1 + 80);
      }
    }
  }
}

void sub_100212D00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100815FB0)
  {
    v2 = sub_100010DE0(&qword_10080E3F8);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100815FB0);
  }
}

uint64_t sub_100212D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_playbackId;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10007EF1C(v3, a1);
}

uint64_t sub_100212DA8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_isPlaying);
}

uint64_t sub_100212DC0()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_visibilityTrackingView);
}

id sub_100212DD0(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "isDescendantOfView:", a1);
}

id sub_100212DF4(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "convertRect:toView:", a1);
}

uint64_t sub_100212E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100018908(v4, v5);
}

uint64_t sub_100212E28()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_100212E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_100212EC8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_1000DFF0C;
}

uint64_t sub_100212F38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_100212F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_100212FEC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_100213030(uint64_t a1, uint64_t a2))()
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_allocObject(&unk_100745CB0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_100745CD8, 24, 7);
  swift_weakInit(v4 + 16, a2);
  v5 = swift_allocObject(&unk_100745D00, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_1002131AC;
}

uint64_t sub_1002130C8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_currentTitleEffect;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, (uint64_t *)&unk_100815FD0);
}

uint64_t sub_100213124()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0
                                + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect));
}

uint64_t sub_100213138()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021315C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100213180()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002131AC()
{
  uint64_t v0;

  sub_1002122B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1002131B4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_itemLayoutContext];
  v7 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_carouselView;
  v9 = type metadata accessor for HeroCarouselView(0);
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  v10 = &v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_state];
  v11 = sub_10000DAF8(&qword_10080E3F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_tapGestureRecognizer;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v13 = &v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_didSelectHandler];
  *v13 = 0;
  v13[1] = 0;
  swift_weakInit(&v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsCalculator], 0);
  v14 = &v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock];
  *v14 = 0;
  v14[1] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator]);
  v15 = &v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_currentTitleEffect];
  v16 = type metadata accessor for TitleEffect(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_onUpdatePageTitleEffect;
  v18 = sub_10000DAF8(&qword_100814988);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)&v1[v17] = SyncEvent.init()();
  v20 = UUID.init()(v19);
  v21 = UUID.uuidString.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24[0] = v21;
  v24[1] = v23;
  AnyHashable.init<A>(_:)(v24, &type metadata for String, &protocol witness table for String);
  v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_allowsAutoPlay] = 1;
  v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_isPlaying] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_visibilityTrackingView]);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/HeroCarouselCollectionViewCell.swift", 57, 2, 55, 0);
  __break(1u);
}

void sub_100213438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(__n128);
  uint64_t v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t Strong;
  void *v27;
  _BYTE v28[16];
  _BYTE v29[24];
  _BYTE v30[24];

  v3 = v2;
  v6 = sub_10000DAF8(&qword_10080E3F8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10000DAF8(&qword_10080E3F0);
  __chkstk_darwin(v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v3 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_state;
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_state, v30, 0, 0);
  sub_100018ADC(v13, (uint64_t)v12, &qword_10080E3F0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_100010F2C((uint64_t)v12, &qword_10080E3F0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
    v14 = sub_100010F2C((uint64_t)v12, &qword_10080E3F0);
    __chkstk_darwin(v14);
    *(_QWORD *)&v28[-16] = a1;
    v15 = sub_1000CF290();
    WritableStateLens<A>.updateValue(_:)(sub_1002136C0, &v28[-32], v6, v15);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  v16 = v3 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock;
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_impressionsUpdateBlock, v29, 0, 0);
  v17 = *(void (**)(__n128))v16;
  if (*(_QWORD *)v16)
  {
    v18 = *(_QWORD *)(v16 + 8);
    v19 = swift_retain(v18);
    v17(v19);
    sub_100018908((uint64_t)v17, v18);
  }
  if (a2)
  {
    v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2
                                                       + OBJC_IVAR____TtC20ProductPageExtension20HeroCarouselItemView_backgroundView)
                                           + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselItemBackgroundView_mediaViewContainer)
                               + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                   + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
    if (v20)
    {
      v21 = type metadata accessor for VideoView(0);
      v22 = swift_dynamicCastClass(v20, v21);
      if (v22)
      {
        v23 = *(void **)(v22 + qword_100828488);
        if (v23)
        {
          v24 = v20;
          v25 = v23;
          dispatch thunk of VideoPlayer.restart()();

        }
      }
    }
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC20ProductPageExtension30HeroCarouselCollectionViewCell_videoPlaybackCoordinator);
  if (Strong)
  {
    v27 = (void *)Strong;
    dispatch thunk of VideoPlaybackCoordinator.resumeAutoPlayVideo()();

  }
}

id sub_1002136C0(uint64_t a1)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC20ProductPageExtension16HeroCarouselView_pageControl), "currentPage");
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_100213708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100815FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

char *sub_100213750(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  id v25;
  char *v26;
  uint64_t v27;
  id v28;
  double left;
  double bottom;
  double right;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  objc_super v41;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_disclaimerLabel;
  v19 = qword_1008062D0;
  v20 = v5;
  if (v19 != -1)
    swift_once(&qword_1008062D0, sub_1004C7490);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_10000EFC4(v21, (uint64_t)qword_100869948);
  v23 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v17, v22, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v21);
  v24 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v24(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v20[v18] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 0, 0, 1, 0, v14, 0, 0);
  v26 = &v20[OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_itemLayoutContext];
  v27 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);

  v41.receiver = v20;
  v41.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v41, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v32 = (char *)v28;
  objc_msgSend(v32, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v33 = objc_msgSend(v32, "contentView");
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v34 = OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_disclaimerLabel;
  v35 = *(void **)&v32[OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_disclaimerLabel];
  v24(v14, enum case for DirectionalTextAlignment.leading(_:), v11);
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v14);
  sub_100035178();
  v36 = v35;
  v37 = (void *)static UIColor.secondaryText.getter(v36);
  objc_msgSend(v36, "setTextColor:", v37);

  v38 = objc_msgSend(v32, "contentView");
  v39 = *(id *)&v32[v34];
  objc_msgSend(v38, "addSubview:", v39);

  return v32;
}

uint64_t sub_100213AC0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  _QWORD v16[5];
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for LayoutRect(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreorderDisclaimerLayout(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = v2;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "layoutSubviews");
  v12 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_disclaimerLabel];
  v16[3] = type metadata accessor for DynamicTypeLabel(0);
  v16[4] = &protocol witness table for UILabel;
  v16[0] = v12;
  v13 = v12;
  PreorderDisclaimerLayout.init(disclaimer:)(v16);
  objc_msgSend(v2, "bounds");
  PreorderDisclaimerLayout.placeChildren(relativeTo:in:)(v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100213C68()
{
  return type metadata accessor for PreorderDisclaimerCollectionViewCell(0);
}

uint64_t type metadata accessor for PreorderDisclaimerCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100816028;
  if (!qword_100816028)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PreorderDisclaimerCollectionViewCell);
  return result;
}

void sub_100213CAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_100213D28()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_disclaimerLabel;
  if (qword_1008062D0 != -1)
    swift_once(&qword_1008062D0, sub_1004C7490);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10000EFC4(v10, (uint64_t)qword_100869948);
  v12 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v13 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v9] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 0, 0, 1, 0, v5, 0, 0);
  v14 = &v1[OBJC_IVAR____TtC20ProductPageExtension36PreorderDisclaimerCollectionViewCell_itemLayoutContext];
  v15 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/PreorderDisclaimerCollectionViewCell.swift", 63, 2, 30, 0);
  __break(1u);
}

char *sub_100213F08(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t isEscapingClosureAtFileLocation;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  void *v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  NSString v35;
  double v36;
  id v37;
  id v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  char *v44;
  objc_super v45;

  isEscapingClosureAtFileLocation = v3;
  v41 = a2;
  v42 = a3;
  v6 = a1 & 1;
  v7 = type metadata accessor for DirectionalTextAlignment(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for FontUseCase(0);
  v12 = *(v11 - 1);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_size) = v6;
  if ((a1 & 1) != 0)
  {
    v21 = qword_100806690;
    v22 = (id)isEscapingClosureAtFileLocation;
    if (v21 != -1)
      swift_once(&qword_100806690, sub_1004C9A7C);
    v20 = qword_10086A488;
    goto LABEL_7;
  }
  v18 = qword_100806688;
  v19 = (id)isEscapingClosureAtFileLocation;
  if (v18 != -1)
    goto LABEL_13;
  while (1)
  {
    v20 = qword_10086A470;
LABEL_7:
    v23 = sub_10000EFC4((uint64_t)v11, (uint64_t)v20);
    (*(void (**)(char *, uint64_t, _QWORD *))(v12 + 16))(v14, v23, v11);
    (*(void (**)(char *, char *, _QWORD *))(v12 + 32))(v17, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, _QWORD *))(v12 + 56))(v17, 0, 1, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DirectionalTextAlignment.none(_:), v7);
    v24 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
    *(_QWORD *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel) = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 0, 1, 0, v10, 0, 0);

    v25 = (objc_class *)type metadata accessor for CountBadgeView();
    v45.receiver = (id)isEscapingClosureAtFileLocation;
    v45.super_class = v25;
    v26 = objc_msgSendSuper2(&v45, "initWithFrame:", 0.0, 0.0, 0.0, 0.0, v41);
    v27 = (void *)objc_opt_self(UIView);
    v10 = (char *)swift_allocObject(&unk_100745E80, 25, 7);
    *((_QWORD *)v10 + 2) = v26;
    v10[24] = v6;
    v7 = swift_allocObject(&unk_100745EA8, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_1002149FC;
    *(_QWORD *)(v7 + 24) = v10;
    aBlock[4] = sub_100036D9C;
    v44 = (char *)v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100184A1C;
    aBlock[3] = &unk_100745EC0;
    v17 = (char *)_Block_copy(aBlock);
    v14 = v44;
    v11 = v26;
    swift_retain(v7);
    objc_msgSend(v27, "performWithoutAnimation:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 97, 59, 40, 1);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_13:
    swift_once(&qword_100806688, sub_1004C99DC);
  }
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v11;
  v30 = objc_msgSend(v28, "redColor");
  objc_msgSend(v29, "setBackgroundColor:", v30);

  v31 = OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel;
  v32 = *(void **)&v29[OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel];
  v33 = v42;
  if (v42)
  {
    v34 = v32;
    v35 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v33).n128_u64[0];
  }
  else
  {
    v37 = v32;
    v35 = 0;
  }
  objc_msgSend(v32, "setText:", v35, v36);

  v38 = *(id *)&v29[v31];
  v39 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v38, "setTextColor:", v39);

  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v29[v31]);
  objc_msgSend(v29, "setUserInteractionEnabled:", 0);
  swift_release();

  return v29;
}

id sub_1002143F4(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  double v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  NSString v15;
  void *v16;
  uint64_t v17;
  char *v18;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id (*v24)();
  uint64_t v25;

  v4 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel];
  v5 = objc_msgSend(v4, "text");
  if (a2)
  {
    if (v5)
    {

      v7 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(a2).n128_u64[0];
LABEL_9:
      objc_msgSend(v4, "setText:", v7, v6);

      return objc_msgSend(v2, "setNeedsLayout");
    }
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setText:", v15, swift_bridgeObjectRelease(a2).n128_f64[0]);

    v16 = (void *)objc_opt_self(UIView);
    v17 = swift_allocObject(&unk_100745F98, 24, 7);
    *(_QWORD *)(v17 + 16) = v2;
    v24 = sub_100054E0C;
    v25 = v17;
    v20 = _NSConcreteStackBlock;
    v21 = 1107296256;
    v22 = sub_1000924A0;
    v23 = &unk_100745FB0;
    v10 = _Block_copy(&v20);
    v18 = v2;
    swift_release();
    objc_msgSend(v16, "animateWithDuration:delay:options:animations:completion:", 4, v10, 0, 0.2, 0.0);
  }
  else
  {
    if (!v5)
    {
      v7 = 0;
      goto LABEL_9;
    }

    v8 = (void *)objc_opt_self(UIView);
    v9 = swift_allocObject(&unk_100745EF8, 24, 7);
    *(_QWORD *)(v9 + 16) = v2;
    v24 = sub_100214A48;
    v25 = v9;
    v20 = _NSConcreteStackBlock;
    v21 = 1107296256;
    v22 = sub_1000924A0;
    v23 = &unk_100745F10;
    v10 = _Block_copy(&v20);
    v11 = v2;
    swift_release();
    v12 = swift_allocObject(&unk_100745F48, 24, 7);
    *(_QWORD *)(v12 + 16) = v11;
    v24 = sub_100214A74;
    v25 = v12;
    v20 = _NSConcreteStackBlock;
    v21 = 1107296256;
    v22 = sub_10004A774;
    v23 = &unk_100745F60;
    v13 = _Block_copy(&v20);
    v14 = v11;
    swift_release();
    objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 4, v10, v13, 0.2, 0.0);
    _Block_release(v13);
  }
  _Block_release(v10);
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_1002147D0(void *a1)
{
  CGAffineTransform v3;

  CGAffineTransformMakeScale(&v3, 0.0, 0.0);
  return objc_msgSend(a1, "setTransform:", &v3);
}

id sub_100214864()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CountBadgeView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CountBadgeView()
{
  return objc_opt_self(_TtC20ProductPageExtension14CountBadgeView);
}

uint64_t storeEnumTagSinglePayload for CountBadgeView.Size(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100214910 + 4 * byte_100652C55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100214944 + 4 * asc_100652C50[v4]))();
}

uint64_t sub_100214944(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021494C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100214954);
  return result;
}

uint64_t sub_100214960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100214968);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10021496C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100214974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CountBadgeView.Size()
{
  return &type metadata for CountBadgeView.Size;
}

unint64_t sub_100214994()
{
  unint64_t result;

  result = qword_100816070;
  if (!qword_100816070)
  {
    result = swift_getWitnessTable(&unk_100652CCC, &type metadata for CountBadgeView.Size);
    atomic_store(result, (unint64_t *)&qword_100816070);
  }
  return result;
}

uint64_t sub_1002149D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_1002149FC()
{
  uint64_t v0;
  double v1;

  v1 = 9.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 12.0;
  return objc_msgSend(*(id *)(v0 + 16), "_setContinuousCornerRadius:", v1);
}

uint64_t sub_100214A20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100214A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100214A40(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100214A48()
{
  uint64_t v0;

  return sub_1002147D0(*(void **)(v0 + 16));
}

uint64_t sub_100214A50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100214A74()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel), "setText:", 0);
}

id sub_100214A94()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel);
  result = objc_msgSend(v1, "text");
  if (result)
  {
    v3 = result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    v7 = String.count.getter(v4, v6);
    result = (id)swift_bridgeObjectRelease(v6);
    if (v7 >= 2)
      return objc_msgSend(v1, "sizeThatFits:", 0.0, 0.0);
  }
  return result;
}

char *sub_100214B9C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  objc_class *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  objc_class *ObjectType;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  objc_super v73;
  objc_super v74;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for Wordmark(0);
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  __chkstk_darwin(v10);
  v70 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DirectionalTextAlignment(0);
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  __chkstk_darwin(v12);
  v68 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8(&qword_1008116A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v4[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_itemLayoutContext];
  v21 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v65 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_iconGridView;
  v22 = qword_100804EB8;
  v23 = v4;
  if (v22 != -1)
    swift_once(&qword_100804EB8, sub_1002153FC);
  v64 = xmmword_1008160D0;
  v24 = qword_1008160E0;
  v25 = qword_1008160E8;
  v26 = xmmword_1008160F0;
  v27 = (objc_class *)type metadata accessor for IconGridView(0);
  v28 = (char *)objc_allocWithZone(v27);
  *(_QWORD *)&v28[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_artworkViews] = _swiftEmptyArrayStorage;
  v29 = type metadata accessor for ArtworkView(0);
  v30 = v28;
  ViewRecycler.init()(v29);
  v31 = sub_100010E80((unint64_t *)&qword_1008116A8, &qword_1008116A0, (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
  ReusePool.init(recycler:limit:)(v19, 15, v17, v31);
  *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_impressionableArtworks] = 0;
  *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_artworkLoader] = 0;
  v32 = &v30[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_configuration];
  *(_OWORD *)v32 = v64;
  *((_QWORD *)v32 + 2) = v24;
  *((_QWORD *)v32 + 3) = v25;
  *((_OWORD *)v32 + 2) = v26;

  v74.receiver = v30;
  v74.super_class = v27;
  v33 = objc_msgSendSuper2(&v74, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[v65] = v33;
  v34 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_wordmarkImageView;
  *(_QWORD *)&v23[v34] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v35 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_descriptionLabel;
  if (qword_100806018 != -1)
    swift_once(&qword_100806018, sub_1004C5E58);
  v36 = type metadata accessor for FontUseCase(0);
  v37 = sub_10000EFC4(v36, (uint64_t)qword_100869138);
  v38 = *(_QWORD *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v16, v37, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v16, 0, 1, v36);
  v39 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v68, enum case for DirectionalTextAlignment.none(_:), v67);
  v40 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v23[v35] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v16, 0, 0, 1, 0, v39, 0, 0);
  v41 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_offerButton;
  *(_QWORD *)&v23[v41] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OfferButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v42 = &v23[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_offerLabelPresenter];
  *(_OWORD *)v42 = 0u;
  *((_OWORD *)v42 + 1) = 0u;

  v73.receiver = v23;
  v73.super_class = ObjectType;
  v43 = (char *)objc_msgSendSuper2(&v73, "initWithFrame:", a1, a2, a3, a4);
  v44 = objc_msgSend(v43, "contentView");
  objc_msgSend(v44, "addSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_iconGridView]);

  v45 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_wordmarkImageView;
  v46 = *(void **)&v43[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_wordmarkImageView];
  v47 = v70;
  v48 = v71;
  v49 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, enum case for Wordmark.arcade(_:), v72);
  v50 = v46;
  v51 = objc_msgSend(v43, "traitCollection");
  v52 = (void *)Wordmark.asset(in:)((UITraitCollection)v51);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
  objc_msgSend(v50, "setImage:", v52);

  v53 = *(void **)&v43[v45];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v54 = v53;
  v55 = (void *)static UIColor.primaryText.getter(v54);
  objc_msgSend(v54, "setTintColor:", v55);

  v56 = objc_msgSend(v43, "contentView");
  objc_msgSend(v56, "addSubview:", *(_QWORD *)&v43[v45]);

  v57 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_descriptionLabel;
  v58 = *(id *)&v43[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_descriptionLabel];
  UILabel.alignment.setter(1);

  v59 = *(id *)&v43[v57];
  v60 = (void *)static UIColor.secondaryText.getter(v59);
  objc_msgSend(v59, "setTextColor:", v60);

  v61 = objc_msgSend(v43, "contentView");
  objc_msgSend(v61, "addSubview:", *(_QWORD *)&v43[v57]);

  v62 = objc_msgSend(v43, "contentView");
  objc_msgSend(v62, "addSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_offerButton]);

  objc_msgSend(v43, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  return v43;
}

void sub_100215258()
{
  qword_100816078 = 0x4044000000000000;
}

void sub_100215268()
{
  qword_100816080 = 0x4034000000000000;
}

void sub_100215278()
{
  qword_100816088 = 0x4033000000000000;
}

uint64_t sub_100215288(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100816090);
  sub_10000EFC4(v5, (uint64_t)qword_100816090);
  if (qword_100806018 != -1)
    swift_once(&qword_100806018, sub_1004C5E58);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100869138);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 23.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_1002153D4()
{
  double result;

  result = 0.0;
  xmmword_1008160A8 = xmmword_100652D00;
  *(_OWORD *)&qword_1008160B8 = xmmword_100652D00;
  return result;
}

void sub_1002153EC()
{
  qword_1008160C8 = 0x4032000000000000;
}

double sub_1002153FC()
{
  double result;

  xmmword_1008160D0 = (__int128)vdupq_n_s64(0x4056000000000000uLL);
  qword_1008160E0 = 0x4024000000000000;
  qword_1008160E8 = 2;
  result = -30.0;
  xmmword_1008160F0 = xmmword_100652D10;
  return result;
}

uint64_t sub_10021542C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.receiver = v0;
  v18.super_class = ObjectType;
  objc_msgSendSuper2(&v18, "layoutSubviews", v4);
  sub_100215544(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_iconGridView], *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_wordmarkImageView], *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_descriptionLabel], *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_offerButton], (uint64_t)v0, v15);
  v7 = v16;
  v8 = v17;
  sub_100010F08(v15, v16);
  v9 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  dispatch thunk of Layout.placeChildren(relativeTo:in:)(v0, v7, v8, v9, v10, v11, v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
}

void sub_100215544(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  __n128 v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (**v40)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  double v67;
  double v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  _QWORD *v95;
  uint64_t v96;
  unsigned int v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  void (*v108)(_QWORD);
  void (**v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;

  v114 = a5;
  v94 = a4;
  v92 = a3;
  v112 = a1;
  v95 = a6;
  v105 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition(0);
  v111 = *(_QWORD *)(v105 - 8);
  v7 = __chkstk_darwin(v105);
  v104 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment(0, v7);
  v9 = *(void (**)(char *, uint64_t))(v107 - 8);
  v10 = __chkstk_darwin(v107);
  v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for _VerticalFlowLayout.Child.Placement(0, v10);
  v13 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v15 = (char *)v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for AspectRatio(0);
  v109 = *(void (***)(char *, uint64_t))(v113 - 8);
  v16 = __chkstk_darwin(v113);
  v18 = (char *)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for OffsetGridLayout.Metrics(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804EB8 != -1)
    swift_once(&qword_100804EB8, sub_1002153FC);
  static OffsetGridLayout.Metrics.centerOffsetLayout(with:interItemSpacing:lineSpacing:numberOfRows:originOffset:)(qword_1008160E8, *(double *)&xmmword_1008160D0, *((double *)&xmmword_1008160D0 + 1), *(double *)&qword_1008160E0, *(double *)&qword_1008160E0, *(double *)&xmmword_1008160F0, *((double *)&xmmword_1008160F0 + 1));
  v23 = type metadata accessor for OffsetGridLayout(0);
  v24 = sub_10000E720(&qword_100816138, (uint64_t (*)(uint64_t))&type metadata accessor for OffsetGridLayout, (uint64_t)&protocol conformance descriptor for OffsetGridLayout);
  v25 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v22, v114, v23, v24, 1.79769313e308, 1.79769313e308);
  v27 = v26;
  (*(void (**)(char *, uint64_t, double))(v20 + 8))(v22, v19, v25);
  v28 = objc_msgSend(a2, "image");
  v99 = (uint64_t)a2;
  if (v28)
  {
    v29 = v28;
    AspectRatio.init(_:_:)(objc_msgSend(v28, "size"));
    v30 = v107;
    if (qword_100804E98 != -1)
      swift_once(&qword_100804E98, sub_100215278);
    v31 = *(double *)&qword_100816088;
    v32 = AspectRatio.width(fromHeight:)(*(double *)&qword_100816088);

    v109[1](v18, v113);
  }
  else
  {
    v32 = 0.0;
    v31 = 0.0;
    v30 = v107;
  }
  v110 = v13;
  v33 = sub_10000DAF8(&qword_100816148);
  v34 = *(_QWORD *)(type metadata accessor for _VerticalFlowLayout.Child(0) - 8);
  v35 = *(_QWORD *)(v34 + 72);
  v36 = *(unsigned __int8 *)(v34 + 80);
  v37 = (v36 + 32) & ~v36;
  v114 = v35;
  v38 = swift_allocObject(v33, v37 + 4 * v35, v36 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_100640F90;
  v93 = v38;
  v113 = v38 + v37;
  *(_QWORD *)&v117 = v112;
  v124 = &type metadata for CGFloat;
  v125 = &protocol witness table for CGFloat;
  v123 = v27;
  v121 = (void *)type metadata accessor for VerticalSpaceMeasurable(0, (__n128)xmmword_100640F90);
  v122 = &protocol witness table for VerticalSpaceMeasurable;
  sub_1000119C0(&v120);
  VerticalSpaceMeasurable.init(_:multiplier:)(&v123, 1.0);
  v39 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  LayoutView.withMeasurements(providedBy:)(&v123, &v120, v39, &protocol witness table for UIView);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v120);
  v40 = *(void (***)(char *, uint64_t))(v13 + 104);
  v106 = enum case for _VerticalFlowLayout.Child.Placement.top(_:);
  v109 = v40;
  ((void (*)(char *))v40)(v15);
  v108 = (void (*)(_QWORD))*((_QWORD *)v9 + 13);
  ((void (*)(char *, _QWORD, uint64_t))v108)(v12, enum case for _VerticalFlowLayout.Child.HorizontalAlignment.leading(_:), v30);
  v41 = v15;
  v98 = v9;
  v42 = v12;
  if (qword_100804E88 != -1)
    swift_once(&qword_100804E88, sub_100215258);
  v121 = &type metadata for CGFloat;
  v122 = &protocol witness table for CGFloat;
  v120 = qword_100816078;
  v119 = 0;
  v117 = 0u;
  v118 = 0u;
  v43 = sub_10000DAF8((uint64_t *)&unk_100820BD0);
  v44 = v111;
  v45 = *(unsigned __int8 *)(v111 + 80);
  v46 = (v45 + 32) & ~v45;
  v90 = *(_QWORD *)(v111 + 72);
  v112 = v43;
  v103 = v46 + v90;
  v96 = v45 | 7;
  v47 = swift_allocObject(v43, v46 + v90, v45 | 7);
  v102 = xmmword_100640720;
  *(_OWORD *)(v47 + 16) = xmmword_100640720;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v47);
  v116 = v47;
  v48 = sub_10000E720((unint64_t *)&qword_100816150, (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout.ExclusionCondition);
  v49 = sub_10000DAF8((uint64_t *)&unk_100820BE0);
  v50 = sub_100010E80((unint64_t *)&qword_100816158, (uint64_t *)&unk_100820BE0, (uint64_t)&protocol conformance descriptor for [A]);
  v51 = v104;
  v100 = v49;
  v52 = v105;
  v101 = v48;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v116, v49, v50, v105, v48);
  v53 = v113;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v123, v41, v42, &v120, &v117, v51);
  v54 = *(void (**)(char *, uint64_t))(v44 + 8);
  v54(v51, v52);
  sub_100010F2C((uint64_t)&v117, &qword_100814FB0);
  v55 = v53;
  v56 = v107;
  v111 = *((_QWORD *)v98 + 1);
  ((void (*)(char *, uint64_t))v111)(v42, v107);
  v57 = v41;
  v58 = v41;
  v59 = v115;
  v110 = *(_QWORD *)(v110 + 8);
  ((void (*)(char *, uint64_t))v110)(v57, v115);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v123);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v120);
  v98 = (void (*)(char *, uint64_t))(v55 + v114);
  v120 = v99;
  v60 = sub_100018B6C(0, (unint64_t *)&qword_10080F950, UIImageView_ptr);
  LayoutView.withMeasurements(_:)(&v123, v60, &protocol witness table for UIView, v32, v31, v31, 0.0);
  ((void (*)(char *, _QWORD, uint64_t))v109)(v58, v106, v59);
  v97 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.center(_:);
  v108(v42);
  if (qword_100804E90 != -1)
    swift_once(&qword_100804E90, sub_100215268);
  v121 = &type metadata for CGFloat;
  v122 = &protocol witness table for CGFloat;
  v120 = qword_100816080;
  v119 = 0;
  v117 = 0u;
  v118 = 0u;
  v61 = v96;
  v62 = swift_allocObject(v112, v103, v96);
  *(_OWORD *)(v62 + 16) = v102;
  v91 = v46;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v62);
  v116 = v62;
  v99 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v116, v100, v50, v52, v101);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v123, v58, v42, &v120, &v117, v51);
  v98 = v54;
  v54(v51, v52);
  sub_100010F2C((uint64_t)&v117, &qword_100814FB0);
  ((void (*)(char *, uint64_t))v111)(v42, v56);
  v63 = v115;
  ((void (*)(char *, uint64_t))v110)(v58, v115);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v123);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v120);
  v89[1] = v113 + 2 * v114;
  v120 = v92;
  v64 = v42;
  if (qword_100804EA8 != -1)
    swift_once(&qword_100804EA8, sub_1002153D4);
  v65 = v61;
  v66 = xmmword_1008160A8;
  v67 = *(double *)&qword_1008160B8;
  v68 = unk_1008160C0;
  v69 = type metadata accessor for DynamicTypeLabel(0);
  LayoutView.withLayoutMargins(_:)(&v123, v69, &protocol witness table for UIView, *(double *)&v66, *((double *)&v66 + 1), v67, v68);
  ((void (*)(char *, _QWORD, uint64_t))v109)(v58, enum case for _VerticalFlowLayout.Child.Placement.firstBaseline(_:), v63);
  ((void (*)(char *, _QWORD, uint64_t))v108)(v42, v97, v56);
  v70 = v58;
  if (qword_100804EA0 != -1)
    swift_once(&qword_100804EA0, sub_100215288);
  v71 = type metadata accessor for StaticDimension(0);
  v72 = sub_10000EFC4(v71, (uint64_t)qword_100816090);
  v121 = (void *)v71;
  v122 = &protocol witness table for StaticDimension;
  v73 = sub_1000119C0(&v120);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v73, v72, v71);
  v119 = 0;
  v117 = 0u;
  v118 = 0u;
  v74 = swift_allocObject(v112, v91 + 2 * v90, v65);
  *(_OWORD *)(v74 + 16) = xmmword_100640600;
  v75 = static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v74);
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v75);
  v116 = v74;
  v76 = v104;
  v77 = v100;
  v78 = v105;
  v79 = v101;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v116, v100, v99, v105, v101);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v123, v58, v64, &v120, &v117, v76);
  v98(v76, v78);
  sub_100010F2C((uint64_t)&v117, &qword_100814FB0);
  ((void (*)(char *, uint64_t))v111)(v64, v56);
  v80 = v58;
  v81 = v115;
  ((void (*)(char *, uint64_t))v110)(v80, v115);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v123);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v120);
  v124 = (void *)type metadata accessor for OfferButton();
  v125 = &protocol witness table for UIView;
  v82 = v94;
  v123 = v94;
  ((void (*)(char *, _QWORD, uint64_t))v109)(v70, v106, v81);
  ((void (*)(char *, _QWORD, uint64_t))v108)(v64, v97, v56);
  v83 = qword_100804EB0;
  v84 = v82;
  if (v83 != -1)
    swift_once(&qword_100804EB0, sub_1002153EC);
  v121 = &type metadata for CGFloat;
  v122 = &protocol witness table for CGFloat;
  v120 = qword_1008160C8;
  v119 = 0;
  v117 = 0u;
  v118 = 0u;
  v85 = swift_allocObject(v112, v103, v96);
  *(_OWORD *)(v85 + 16) = v102;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v85);
  v116 = v85;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v116, v77, v99, v78, v79);
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)(&v123, v70, v64, &v120, &v117, v76);
  v98(v76, v78);
  sub_100010F2C((uint64_t)&v117, &qword_100814FB0);
  ((void (*)(char *, uint64_t))v111)(v64, v56);
  ((void (*)(char *, uint64_t))v110)(v70, v115);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v120);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v123);
  v87 = type metadata accessor for _VerticalFlowLayout(0, v86);
  v88 = v95;
  v95[3] = v87;
  v88[4] = sub_10000E720((unint64_t *)&unk_100816160, (uint64_t (*)(uint64_t))&type metadata accessor for _VerticalFlowLayout, (uint64_t)&protocol conformance descriptor for _VerticalFlowLayout);
  sub_1000119C0(v88);
  _VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v93);
}

uint64_t sub_1002162B8()
{
  return type metadata accessor for ArcadeShowcaseCollectionViewCell(0);
}

uint64_t type metadata accessor for ArcadeShowcaseCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100816128;
  if (!qword_100816128)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeShowcaseCollectionViewCell);
  return result;
}

void sub_1002162FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = " ";
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

double sub_100216384(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  double v67;
  unint64_t v68;
  unint64_t v69;
  __n128 v70;
  _QWORD *v71;
  double v72;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89[3];
  void *v90;
  void *v91;

  v83 = a2;
  v87 = a1;
  v8 = type metadata accessor for StackMeasurable.Axis(0);
  v85 = *(_QWORD *)(v8 - 8);
  v86 = v8;
  v9 = __chkstk_darwin(v8);
  v80 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StackMeasurable(0, v9);
  v81 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for VerticalSpaceMeasurable(0, v12);
  v88 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v84 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for FontUseCase(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OfferButtonMetrics(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v74 - v23;
  v25 = type metadata accessor for OffsetGridLayout.Metrics(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804EB8 != -1)
    swift_once(&qword_100804EB8, sub_1002153FC);
  static OffsetGridLayout.Metrics.centerOffsetLayout(with:interItemSpacing:lineSpacing:numberOfRows:originOffset:)(qword_1008160E8, *(double *)&xmmword_1008160D0, *((double *)&xmmword_1008160D0 + 1), *(double *)&qword_1008160E0, *(double *)&qword_1008160E0, *(double *)&xmmword_1008160F0, *((double *)&xmmword_1008160F0 + 1));
  v29 = type metadata accessor for OffsetGridLayout(0);
  v30 = sub_10000E720(&qword_100816138, (uint64_t (*)(uint64_t))&type metadata accessor for OffsetGridLayout, (uint64_t)&protocol conformance descriptor for OffsetGridLayout);
  v31 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v28, a3, v29, v30, 1.79769313e308, 1.79769313e308);
  v33 = v32;
  (*(void (**)(char *, uint64_t, double))(v26 + 8))(v28, v25, v31);
  v34 = objc_msgSend(a3, "traitCollection");
  v35 = a3;
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v34) & 1) != 0)
  {
    if (qword_100804668 != -1)
      swift_once(&qword_100804668, sub_1000654B0);
    v36 = qword_10080AA60;
  }
  else
  {
    if (qword_100804670 != -1)
      swift_once(&qword_100804670, sub_10006595C);
    v36 = qword_10080AA78;
  }
  v37 = sub_10000EFC4(v17, (uint64_t)v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v37, v17);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v24, v20, v17);

  v39 = OfferButtonMetrics.estimatedHeight.getter(v38);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v17);
  if (qword_100804EA8 != -1)
    swift_once(&qword_100804EA8, sub_1002153D4);
  v40 = *(double *)&xmmword_1008160A8;
  v41 = *(double *)&qword_1008160B8;
  v42 = sub_10000DAF8(&qword_100816140);
  v43 = *(_QWORD *)(v88 + 72);
  v44 = *(unsigned __int8 *)(v88 + 80);
  v45 = (v44 + 32) & ~v44;
  v46 = swift_allocObject(v42, v45 - v43 + 8 * v43, v44 | 7);
  *(_OWORD *)(v46 + 16) = xmmword_100643720;
  if (qword_100804E88 != -1)
    swift_once(&qword_100804E88, sub_100215258);
  v47 = v40 + v41;
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  *(_QWORD *)&v89[0] = qword_100816078;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  v89[0] = v33;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  if (qword_100804E90 != -1)
    swift_once(&qword_100804E90, sub_100215268);
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  *(_QWORD *)&v89[0] = qword_100816080;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  v89[0] = v47;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  if (qword_100804E98 != -1)
    swift_once(&qword_100804E98, sub_100215278);
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  *(_QWORD *)&v89[0] = qword_100816088;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  if (qword_100804EB0 != -1)
    swift_once(&qword_100804EB0, sub_1002153EC);
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  *(_QWORD *)&v89[0] = qword_1008160C8;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  v90 = &type metadata for CGFloat;
  v91 = &protocol witness table for CGFloat;
  v89[0] = v39;
  VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
  v48 = v83;
  if ((static String.isNilOrEmpty(_:)(v87, v83) & 1) != 0)
  {
    v50 = v81;
    v49 = v82;
    v51 = v80;
  }
  else
  {
    v74 = v45;
    v52 = v35;
    v75 = v14;
    if (qword_100806018 != -1)
      swift_once(&qword_100806018, sub_1004C5E58);
    v53 = v78;
    v54 = sub_10000EFC4(v78, (uint64_t)qword_100869138);
    v55 = v77;
    v56 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v54, v53);
    v57 = type metadata accessor for Feature(0);
    v90 = (void *)v57;
    v91 = (void *)sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v58 = sub_1000119C0(v89);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v58, enum case for Feature.measurement_with_labelplaceholder(_:), v57);
    LOBYTE(v57) = isFeatureEnabled(_:)(v89);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v89);
    v59 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v87, v48, v56, 4, 0, 0, 0, 0, a4, a5, v52, v57 & 1);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v53);
    if (qword_100804EA0 != -1)
      swift_once(&qword_100804EA0, sub_100215288);
    v66 = type metadata accessor for StaticDimension(0);
    sub_10000EFC4(v66, (uint64_t)qword_100816090);
    v67 = AnyDimension.topMargin(from:in:)(v52, v66, &protocol witness table for StaticDimension, v59, v61, v63, v65);
    v90 = &type metadata for CGFloat;
    v91 = &protocol witness table for CGFloat;
    v89[0] = v61 + v67;
    VerticalSpaceMeasurable.init(_:multiplier:)(v89, 1.0);
    v69 = *(_QWORD *)(v46 + 16);
    v68 = *(_QWORD *)(v46 + 24);
    v14 = v75;
    if (v69 >= v68 >> 1)
      v46 = sub_1003DA548(v68 > 1, v69 + 1, 1, v46);
    v50 = v81;
    v49 = v82;
    v51 = v80;
    *(_QWORD *)(v46 + 16) = v69 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))(v46 + v74 + v69 * v43, v84, v79);
    v35 = v52;
  }
  v70.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v85 + 104))(v51, enum case for StackMeasurable.Axis.vertical(_:), v86);
  v71 = sub_1003AE878(v46, v70);
  swift_bridgeObjectRelease(v46);
  StackMeasurable.init(axis:skipEmptyChildren:children:)(v51, 1, v71);
  v72 = dispatch thunk of Measurable.measurements(fitting:in:)(v35, v49, &protocol witness table for StackMeasurable, a4, a5);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v49);
  return v72;
}

void sub_100216C24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  objc_super v35;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  __chkstk_darwin(v2);
  v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008116A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_iconGridView;
  if (qword_100804EB8 != -1)
    swift_once(&qword_100804EB8, sub_1002153FC);
  v31 = xmmword_1008160D0;
  v13 = qword_1008160E0;
  v14 = qword_1008160E8;
  v15 = xmmword_1008160F0;
  v16 = (objc_class *)type metadata accessor for IconGridView(0);
  v17 = (char *)objc_allocWithZone(v16);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_artworkViews] = _swiftEmptyArrayStorage;
  v18 = type metadata accessor for ArtworkView(0);
  v19 = v17;
  ViewRecycler.init()(v18);
  v20 = sub_100010E80((unint64_t *)&qword_1008116A8, &qword_1008116A0, (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
  ReusePool.init(recycler:limit:)(v9, 15, v7, v20);
  *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_impressionableArtworks] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_artworkLoader] = 0;
  v21 = &v19[OBJC_IVAR____TtC20ProductPageExtension12IconGridView_configuration];
  *(_OWORD *)v21 = v31;
  *((_QWORD *)v21 + 2) = v13;
  *((_QWORD *)v21 + 3) = v14;
  *((_OWORD *)v21 + 2) = v15;

  v35.receiver = v19;
  v35.super_class = v16;
  *(_QWORD *)&v1[v12] = objc_msgSendSuper2(&v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_wordmarkImageView;
  *(_QWORD *)&v1[v22] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v23 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_descriptionLabel;
  if (qword_100806018 != -1)
    swift_once(&qword_100806018, sub_1004C5E58);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_10000EFC4(v24, (uint64_t)qword_100869138);
  v26 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v6, v25, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v6, 0, 1, v24);
  v27 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, enum case for DirectionalTextAlignment.none(_:), v33);
  v28 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v23] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v6, 0, 0, 1, 0, v27, 0, 0);
  v29 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_offerButton;
  *(_QWORD *)&v1[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OfferButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v30 = &v1[OBJC_IVAR____TtC20ProductPageExtension32ArcadeShowcaseCollectionViewCell_offerLabelPresenter];
  *(_OWORD *)v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x800000010068B1B0, "ProductPageExtension/ArcadeShowcaseCollectionViewCell.swift", 59, 2, 47, 0);
  __break(1u);
}

ValueMetadata *type metadata accessor for ReviewsHorizontalShelf()
{
  return &type metadata for ReviewsHorizontalShelf;
}

uint64_t sub_10021701C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x88));
  v5 = *v4;
  v6 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  if (swift_unknownObjectRetain(a1))
  {
    if (v5)
      v7 = a1 == v5;
    else
      v7 = 0;
    if (!v7)
      goto LABEL_9;
  }
  else if (v5)
  {
LABEL_9:
    CompoundScrollObserver.removeChild(_:)(v5, v6);
    v8 = *v4;
    v9 = v4[1];
    v10 = swift_unknownObjectRetain(v8);
    CompoundScrollObserver.addChild(_:)(v10, v9);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(a1);
    return swift_unknownObjectRelease(v8);
  }
  swift_unknownObjectRelease(v5);
  v8 = a1;
  return swift_unknownObjectRelease(v8);
}

double sub_1002170DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _BYTE v30[24];

  v2 = sub_10000DAF8(&qword_100816170);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10000DAF8(&qword_100816178);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)((swift_isaMask & *a1) + 0x60);
  v10 = *(_QWORD *)((char *)a1 + v9);
  v11 = *(_QWORD *)(v10 + 48);
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 56);
    ObjectType = swift_getObjectType();
    v14 = swift_unknownObjectRetain(v11);
    if (dispatch thunk of ComponentContainerDelegate.impressionsCalculator.getter(ObjectType, v12, v14))
    {
      ImpressionsCalculator.isVisible.setter(0);
      v15 = swift_release();
    }
    dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, v12, v15);
    v16 = WritableStateLens.init(_:)(v4, &type metadata for ReviewsHorizontalShelf.ScrollState);
    __chkstk_darwin(v16);
    *(&v29 - 2) = (uint64_t)a1;
    v17 = sub_100217954();
    WritableStateLens<A>.updateValue(_:)(sub_10021791C, &v29 - 4, v5, v17);
    v18 = swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v18);
    v10 = *(_QWORD *)((char *)a1 + v9);
  }
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = 0;
  swift_unknownObjectRelease();
  v19 = (uint64_t *)(*(_QWORD *)((char *)a1 + v9)
                  + OBJC_IVAR____TtC20ProductPageExtension32ReviewsHorizontalShelfDataSource_registeredContextActions);
  swift_beginAccess(v19, v30, 1, 0);
  v20 = *v19;
  *v19 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(a1, "setContentSize:", 0.0, 0.0);
  v21 = *(_QWORD *)((swift_isaMask & *a1) + 0xA0);
  *((_BYTE *)a1 + v21) = 0;
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  objc_msgSend(a1, "setNeedsLayout");
  if (*((_BYTE *)a1 + v21) == 1)
  {
    v23 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0xA8);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = 0;
  }
  else
  {
    objc_msgSend(a1, "setContentOffset:", 0.0, 0.0);
    v24 = (_QWORD *)((char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x88));
    v25 = *v24;
    if (*v24)
    {
      v26 = v24[1];
      v27 = swift_getObjectType();
      v28 = swift_unknownObjectRetain(v25);
      dispatch thunk of ScrollObserver.didScroll(in:)(a1, v27, v26, v28);
      *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
    }
  }
  return result;
}

void sub_1002173BC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

BOOL sub_1002173C4(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

void sub_1002173E0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *Strong;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t i;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  char *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  _UNKNOWN **v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(__n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __n128 v61;
  char *v62;
  uint64_t v63;
  _UNKNOWN **v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73[24];
  char v74[24];

  v68 = a8;
  v71 = a7;
  v72 = a4;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8(&qword_100816170);
  v69 = *(_QWORD *)(v17 - 8);
  v70 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v74, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return;
  v21 = Strong;
  v65 = a6;
  v66 = a1;
  v67 = a5;
  v22 = (char *)Strong + *(_QWORD *)((swift_isaMask & *Strong) + 0xB8);
  swift_beginAccess(v22, v73, 0, 0);
  v23 = *(_QWORD *)v22;
  v26 = *(_QWORD *)(*(_QWORD *)v22 + 64);
  v25 = *(_QWORD *)v22 + 64;
  v24 = v26;
  v27 = 1 << *(_BYTE *)(v23 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v24;
  v30 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain(v23);
  i = 0;
  do
  {
    if (v29)
    {
      v32 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      v33 = v32 | (i << 6);
    }
    else
    {
      v34 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_48:
        __break(1u);
        return;
      }
      if (v34 >= v30)
        goto LABEL_30;
      v35 = *(_QWORD *)(v25 + 8 * v34);
      ++i;
      if (!v35)
      {
        i = v34 + 1;
        if (v34 + 1 >= v30)
          goto LABEL_30;
        v35 = *(_QWORD *)(v25 + 8 * i);
        if (!v35)
        {
          i = v34 + 2;
          if (v34 + 2 >= v30)
            goto LABEL_30;
          v35 = *(_QWORD *)(v25 + 8 * i);
          if (!v35)
          {
            i = v34 + 3;
            if (v34 + 3 >= v30)
              goto LABEL_30;
            v35 = *(_QWORD *)(v25 + 8 * i);
            if (!v35)
            {
              v36 = v34 + 4;
              if (v36 >= v30)
              {
LABEL_30:

                swift_release();
                return;
              }
              v35 = *(_QWORD *)(v25 + 8 * v36);
              for (i = v36; !v35; ++v36)
              {
                i = v36 + 1;
                if (__OFADD__(v36, 1))
                  goto LABEL_48;
                if (i >= v30)
                  goto LABEL_30;
                v35 = *(_QWORD *)(v25 + 8 * i);
              }
            }
          }
        }
      }
      v29 = (v35 - 1) & v35;
      v33 = __clz(__rbit64(v35)) + (i << 6);
    }
  }
  while (*(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * v33) != a2);
  v37 = (char *)*(id *)(*(_QWORD *)(v23 + 56) + 8 * v33);
  swift_release();
  v38 = *(void **)&v37[OBJC_IVAR____TtCC20ProductPageExtension32ReviewsHorizontalShelfDataSource8CardView_reviewCell];
  if (!v38)
    goto LABEL_26;
  v39 = v38;
  if (objc_msgSend(v39, "isHidden"))
  {

LABEL_26:
    v40 = *(void **)&v37[OBJC_IVAR____TtCC20ProductPageExtension32ReviewsHorizontalShelfDataSource8CardView_editorsChoiceCell];
    if (!v40)
    {

      return;
    }
    v41 = v40;
    if ((objc_msgSend(v41, "isHidden") & 1) != 0)
    {

      return;
    }
    v42 = &off_10073E030;
    goto LABEL_34;
  }
  v42 = &off_10074A320;
LABEL_34:
  v64 = v42;
  v43 = objc_msgSend(v72, "traitCollection");
  v44 = objc_msgSend(v43, "horizontalSizeClass");

  if (v44 == (id)1)
    goto LABEL_42;
  v45 = v67;
  ObjectType = swift_getObjectType();
  v47 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerOverflowDelegate);
  if (v47)
    v48 = v47;
  else
    v48 = 0;
  if (!v47)
    v45 = 0;
  if (!v45)
  {
LABEL_42:
    v72 = v37;
    v52 = swift_getObjectType();
    v53 = *(_QWORD *)((char *)v21 + *(_QWORD *)((swift_isaMask & *v21) + 0x60));
    v54 = sub_10000DAF8(&qword_100813860);
    v55 = swift_allocObject(v54, 48, 7);
    *(_OWORD *)(v55 + 16) = xmmword_100640600;
    v56 = v66;
    v57 = *(_QWORD *)(v66 + 40);
    *(_QWORD *)(v55 + 32) = *(_QWORD *)(v53 + 40);
    *(_QWORD *)(v55 + 40) = v57;
    IndexPath.init(arrayLiteral:)(v55);
    v68 = v52;
    v58 = v65;
    dispatch thunk of ComponentContainerDelegate.mutableState(ofSubItemAt:)(v16, v52, v65);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v59 = swift_getObjectType();
    v60 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v64[11])(v56, (uint64_t)v19, v71, v59);
    if ((v60 & 4) != 0)
    {
      objc_msgSend(v21, "setContentSize:", 0.0, 0.0);
      *((_BYTE *)v21 + *(_QWORD *)((swift_isaMask & *v21) + 0xA0)) = 0;
      objc_msgSend(v21, "invalidateIntrinsicContentSize");
      objc_msgSend(v21, "setNeedsLayout");
    }
    v62 = v72;
    if ((v60 & 1) != 0)
      dispatch thunk of ComponentContainerDelegate.propagateSelection(ofItem:)(*(_QWORD *)(v66 + 40), v68, v58, v61);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v19, v70);
  }
  else
  {
    v49 = swift_getObjectType();
    v50 = (void (*)(__n128))(*(uint64_t (**)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8))(*(_QWORD *)(v66 + 40), v37, v71, v68, v49, v48);
    v51 = swift_unknownObjectRetain(v67);
    v50(v51);
    swift_release();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
}

id sub_10021791C(_QWORD *a1)
{
  uint64_t v1;
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(v1 + 16), "contentOffset");
  *a1 = v4;
  a1[1] = v5;
  return result;
}

unint64_t sub_100217954()
{
  unint64_t result;

  result = qword_100816180;
  if (!qword_100816180)
  {
    result = swift_getWitnessTable(&unk_100652E10, &type metadata for ReviewsHorizontalShelf.ScrollState);
    atomic_store(result, (unint64_t *)&qword_100816180);
  }
  return result;
}

BOOL sub_100217998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_1002179A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  _QWORD *v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  uint64_t v47;
  uint64_t v48;
  long double v49[2];

  v13 = sub_10000DAF8(&qword_100816170);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8(&qword_100816188);
  v17 = *(_QWORD *)(v16 - 8);
  v47 = v16;
  v48 = v17;
  *(_QWORD *)&v18 = __chkstk_darwin(v16).n128_u64[0];
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(a6, "snapshotPageTraitEnvironment", v18);
  v22 = swift_allocObject(&unk_100746048, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_100746070, 64, 7);
  v23[2] = v22;
  v23[3] = v21;
  v23[4] = a4;
  v23[5] = a5;
  v23[6] = a3;
  v23[7] = a1;
  v24 = (_QWORD *)((char *)a7 + *(_QWORD *)((swift_isaMask & *a7) + 0x68));
  v26 = *v24;
  v25 = v24[1];
  *v24 = (uint64_t)sub_100217CF0;
  v24[1] = (uint64_t)v23;
  swift_unknownObjectRetain(v21);
  swift_unknownObjectRetain(a4);
  swift_retain(a3);
  swift_retain(a1);
  sub_100018908(v26, v25);
  ObjectType = swift_getObjectType();
  v28 = dispatch thunk of ComponentContainerDelegate.scrollObserver.getter(ObjectType, a5);
  sub_10021701C(v28, v29);
  v30 = v47;
  dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, a5, v31);
  StateLens.init(_:)(v15, &type metadata for ReviewsHorizontalShelf.ScrollState);
  v32 = sub_100217954();
  StateLens<A>.currentValue.getter(v49, v30, v32);
  v33 = (_QWORD *)(swift_isaMask & *a7);
  v34 = v49[0];
  v35 = v49[1];
  v36 = *(_QWORD *)((char *)a7 + v33[12])
      + OBJC_IVAR____TtC20ProductPageExtension32ReviewsHorizontalShelfDataSource_layout;
  v37 = v34 - fmod(v49[0], *(double *)(v36 + 32) + *(double *)(v36 + 48));
  v38 = v35 + 0.0;
  if (*((_BYTE *)a7 + v33[20]) == 1)
  {
    v39 = (double *)((char *)a7 + v33[21]);
    *v39 = v37;
    v39[1] = v38;
    *((_BYTE *)v39 + 16) = 0;
  }
  else
  {
    objc_msgSend(a7, "setContentOffset:", v37, v38);
    v40 = (_QWORD *)((char *)a7 + *(_QWORD *)((swift_isaMask & *a7) + 0x88));
    v41 = *v40;
    if (*v40)
    {
      v42 = v40[1];
      v43 = swift_getObjectType();
      v44 = swift_unknownObjectRetain(v41);
      dispatch thunk of ScrollObserver.didScroll(in:)(a7, v43, v42, v44);
      swift_unknownObjectRelease();
    }
  }
  v45 = swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v48 + 8))(v20, v30, v45);
}

uint64_t sub_100217C88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100217CAC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_100217CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002173E0(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

double sub_100217D00(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  char v13;
  __n128 v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  uint64_t v22;
  double v23;
  id v24;
  id v25;

  v7 = ReviewsContainer.reviews.getter();
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    v9 = _CocoaArrayWrapper.endIndex.getter(v7);
  }
  else
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v9 > 0
    || (v22 = ReviewsContainer.editorsChoice.getter(v10), *(_QWORD *)&v23 = swift_release().n128_u64[0], v20 = 0.0, v22)
    && (v24 = objc_msgSend(a5, "traitCollection", v23),
        v25 = objc_msgSend(v24, "horizontalSizeClass"),
        v24,
        v25 != (id)1))
  {
    v12 = objc_msgSend(a5, "traitCollection", v11);
    v13 = UITraitCollection.prefersAccessibilityLayouts.getter(v12);

    if ((v13 & 1) == 0)
      Shelf.rowsPerColumn.getter();
    PageTraitEnvironment.pageColumnWidth.getter();
    v15 = v14.n128_f64[0];
    if (qword_1008068F8 != -1)
      swift_once(&qword_1008068F8, sub_1004F1C00);
    v16 = type metadata accessor for ProductReviewLayout.Metrics(0, v14);
    v17 = sub_10000EFC4(v16, (uint64_t)qword_10086AA60);
    v18 = type metadata accessor for ProductReviewLayout(0);
    v19 = sub_100217EF8();
    dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v17, a5, v18, v19, v15, 1.79769313e308);
    PageTraitEnvironment.pageColumnMargin.getter();
    objc_msgSend(a5, "pageMarginInsets");
    objc_msgSend(a5, "pageMarginInsets");
    return a1;
  }
  return v20;
}

unint64_t sub_100217EF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100812E70;
  if (!qword_100812E70)
  {
    v1 = type metadata accessor for ProductReviewLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ProductReviewLayout, v1);
    atomic_store(result, (unint64_t *)&qword_100812E70);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewsHorizontalShelf.ScrollState()
{
  return &type metadata for ReviewsHorizontalShelf.ScrollState;
}

unint64_t sub_100217F54()
{
  unint64_t result;

  result = qword_100816190;
  if (!qword_100816190)
  {
    result = swift_getWitnessTable(&unk_100652DF4, &type metadata for ReviewsHorizontalShelf.ScrollState);
    atomic_store(result, (unint64_t *)&qword_100816190);
  }
  return result;
}

unint64_t sub_100217F9C()
{
  unint64_t result;

  result = qword_100816198;
  if (!qword_100816198)
  {
    result = swift_getWitnessTable(&unk_100652DCC, &type metadata for ReviewsHorizontalShelf.ScrollState);
    atomic_store(result, (unint64_t *)&qword_100816198);
  }
  return result;
}

char *sub_100217FE0(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  id v44;
  objc_class *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t ObjectType;
  objc_super v71;
  _QWORD v72[5];
  _QWORD v73[6];

  ObjectType = swift_getObjectType();
  v5 = sub_10000DAF8(&qword_1008162C8);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin(v5);
  v67 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008162D0);
  v64 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v65 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter;
  v11 = type metadata accessor for NavigationBarPalettePresenter();
  v12 = swift_allocObject(v11, 66, 7);
  swift_unknownObjectWeakInit(v12 + 16, 0);
  *(_OWORD *)(v12 + 50) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_QWORD *)&v2[v10] = v12;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___resultsMessageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___tokenPalette] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextInput] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_actionRunner] = 0;
  v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_showSearchLanding] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController] = 0;
  v13 = &v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_activeSearchBarObservingViewController];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_pendingSearchAction] = 0;
  v14 = &v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchContainerImpressionMetrics];
  v15 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_prefersLargeTitle] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_navigationAccessories] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph] = a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetsPresenter] = a1;
  v16 = type metadata accessor for ASKBagContract(0);
  v17 = v2;
  swift_retain(a2);
  swift_retain(a1);
  v18 = BaseObjectGraph.inject<A>(_:)(v73, v16, v16);
  v66 = v73[0];
  *(double *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_paletteImpressionableThreshold] = ASKBagContract.impressionableThreshold.getter(v18);
  v19 = type metadata accessor for GuidedSearchPresenter(0);
  BaseObjectGraph.inject<A>(_:)(v73, v19, v19);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchPresenter] = v73[0];
  v21 = type metadata accessor for SearchGhostHintMetricsTracker(0, v20);
  BaseObjectGraph.optional<A>(_:)(v73, v21, v21);
  v22 = v73[0];
  v23 = type metadata accessor for SearchTextPresenter(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = SearchTextPresenter.init(ghostHintMetricsTracker:)(v22);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextPresenter] = v24;
  v25 = objc_allocWithZone((Class)type metadata accessor for SearchResultsContainerViewController());
  swift_retain(a2);
  swift_retain(a1);
  swift_retain(v24);
  v26 = (void *)sub_1004FCAA4(a1, v24, a2);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController] = v26;
  v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchController()), "initWithSearchResultsController:", v26);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController] = v27;
  objc_msgSend(v27, "setShowsSearchResultsController:", 0);
  v28 = type metadata accessor for UnimplementedAdvertLifecycleMetricsReporter(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = UnimplementedAdvertLifecycleMetricsReporter.init()();
  v73[3] = v28;
  v73[4] = &protocol witness table for UnimplementedAdvertLifecycleMetricsReporter;
  v73[0] = v29;
  sub_10000EF80((uint64_t)v73, (uint64_t)v72);
  v30 = type metadata accessor for SearchLandingDiffablePagePresenter(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = swift_retain(a2);
  v32 = SearchLandingDiffablePagePresenter.init(objectGraph:supportsFastImpressions:advertLifecycleMetricsReporter:)(v31);
  SearchLandingDiffablePagePresenter.onFocusPageFetched.getter();
  v33 = (_QWORD *)swift_allocObject(&unk_100746208, 40, 7);
  v33[2] = v26;
  v33[3] = a2;
  v33[4] = ObjectType;
  v34 = sub_10000DAF8(&qword_1008162D8);
  v35 = sub_100010E80(&qword_1008162E0, &qword_1008162D8, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  swift_retain(a2);
  v36 = v26;
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v72, v34, v35);
  EventEmitter.addObserver(on:singleUse:_:)(v72, 0, sub_10021E9F4, v33, v34, v35);
  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v72);
  (*(void (**)(char *, _QWORD))(v64 + 8))(v9, v65);
  v37 = sub_10000E720((unint64_t *)&unk_1008162E8, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  v38 = sub_10000DAF8(&qword_100810390);
  v39 = type metadata accessor for Dependency(0);
  v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
  v65 = xmmword_100640720;
  *(_OWORD *)(v40 + 16) = xmmword_100640720;
  v41 = type metadata accessor for AdvertRotationControllerProvider(0);
  sub_10000EF80((uint64_t)v73, (uint64_t)v72);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  swift_retain_n(v32, 2);
  v72[0] = AdvertRotationControllerProvider.init(supportsAdvertRotation:advertLifecycleMetricsReporter:)(0, v72, v42);
  Dependency.init<A>(satisfying:with:)(v41, v72, v41);
  v43 = sub_1005A60D4(a2, v32, v37, v40, 0xD000000000000011, 0x8000000100694CB0);
  swift_release();
  swift_bridgeObjectRelease(v40);
  v44 = objc_allocWithZone((Class)type metadata accessor for SearchLandingDiffablePageViewController(0));
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchLandingViewController] = sub_10000F9C4(v32, v43);

  v45 = (objc_class *)type metadata accessor for SearchViewController(0);
  v71.receiver = v17;
  v71.super_class = v45;
  v46 = (char *)objc_msgSendSuper2(&v71, "initWithNibName:bundle:", 0, 0);
  v47 = *(_QWORD *)&v46[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph];
  v48 = type metadata accessor for SearchActionRunner(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = v46;
  swift_retain(v47);
  *(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_actionRunner] = sub_1004BE49C(v50, (uint64_t)v49);
  v51 = swift_release();
  v52 = *(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController];
  *(_QWORD *)(v52
            + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_searchResultsDelegate
            + 8) = &off_100746188;
  swift_unknownObjectWeakAssign(v51);
  *(_QWORD *)(v52 + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_delegate + 8) = &off_100746160;
  swift_unknownObjectWeakAssign(v53);
  *(_QWORD *)(*(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchLandingViewController]
            + qword_1008647C0
            + 8) = &off_100746178;
  v55 = swift_unknownObjectWeakAssign(v54);
  GuidedSearchPresenter.onTokensDidChange.getter(v55);
  v56 = sub_10000DAF8(&qword_1008162F8);
  v57 = sub_100010E80((unint64_t *)&unk_100816300, &qword_1008162F8, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v72, v56, v57);
  v58 = v67;
  EventEmitter.addObserver<A>(on:target:method:)(v72, v49, sub_100218848, 0, v56, v45, v57);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v72);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v69);
  v59 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v60 = swift_allocObject(v59, 48, 7);
  *(_OWORD *)(v60 + 16) = v65;
  *(_QWORD *)(v60 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v60 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v61 = v49;
  UIViewController.registerForTraitChanges<A>(_:handler:)(v60, sub_10021E5D4, 0, ObjectType);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v60);

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
  return v61;
}

void sub_1002187CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;

  v5 = *a1;
  v6 = type metadata accessor for UnimplementedAdvertLifecycleMetricsReporter(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = UnimplementedAdvertLifecycleMetricsReporter.init()();
  v8 = sub_10021E3E4(v5, v7, a3);
  swift_release();
  v9 = *(void **)(a2
                + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_searchFocusViewController);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_searchFocusViewController) = v8;

}

void (*sub_100218848(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100746230, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_10021EA24;
}

char *sub_1002188C0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  _BYTE v10[24];
  _QWORD v11[5];

  v1 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___resultsMessageView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___resultsMessageView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___resultsMessageView];
  }
  else
  {
    v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchResultsMessageView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setPreservesSuperviewLayoutMargins:", 1);
    v11[3] = type metadata accessor for SearchViewController(0);
    v11[4] = &off_1007461E8;
    v11[0] = v0;
    v5 = (uint64_t)&v4[OBJC_IVAR____TtC20ProductPageExtension24SearchResultsMessageView_actionRunnerProviderProxy];
    swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension24SearchResultsMessageView_actionRunnerProviderProxy], v10, 33, 0);
    v6 = v0;
    sub_1000393D8((uint64_t)v11, v5, (uint64_t *)&unk_100812070);
    swift_endAccess(v10);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

char *sub_1002189B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  double (**v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___tokenPalette;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___tokenPalette);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___tokenPalette);
  }
  else
  {
    v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GuidedSearchTokenPaletteView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = swift_allocObject(&unk_1007462A8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v6 = (double (**)(uint64_t))&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_onSelect];
    v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_onSelect];
    v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_onSelect + 8];
    *v6 = sub_10021EE34;
    v6[1] = (double (*)(uint64_t))v5;
    sub_100018908(v7, v8);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

double sub_100218A84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    swift_retain(*(_QWORD *)(Strong + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchPresenter));

    v7 = swift_allocObject(&unk_1007462A8, 24, 7);
    swift_beginAccess(v3, &v9, 0, 0);
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    swift_unknownObjectWeakInit(v7 + 16, v8);

    GuidedSearchPresenter.didToggleToken(at:actionHandler:)(a1, sub_10021EE3C, v7);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100218B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];

  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + 16;
  swift_beginAccess(v8, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = (char *)objc_retain(*(id *)(Strong
                                    + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController));

    v12 = *(void **)&v11[OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSectionViewController];
    v13 = v12;

    if (v12)
    {
      v14 = type metadata accessor for StoreCollectionViewController();
      v15 = swift_dynamicCastClass(v13, v14);
      if (v15)
      {
        v16 = &OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph;
        goto LABEL_8;
      }

    }
  }
  swift_beginAccess(v8, v29, 0, 0);
  v15 = swift_unknownObjectWeakLoadStrong(v8);
  if (!v15)
    return;
  v16 = &OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph;
  v13 = (id)v15;
LABEL_8:
  v17 = *(_QWORD *)(v15 + *v16);
  swift_retain(v17);

  swift_beginAccess(v8, v28, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v8);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_actionRunner);
    swift_retain(v20);
    swift_retain(v17);

    if (v20)
    {
      swift_beginAccess(v8, v25, 0, 0);
      v21 = swift_unknownObjectWeakLoadStrong(v8);
      if (v21)
      {
        v22 = v21;
        *((_QWORD *)&v27 + 1) = type metadata accessor for SearchViewController(0);
        *(_QWORD *)&v26 = v22;
      }
      else
      {
        v26 = 0u;
        v27 = 0u;
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v4);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, &v26, v7, v17);
      swift_release_n(v17, 2);
      v23 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
      sub_100010F2C((uint64_t)&v26, &qword_100808F20);
    }
    else
    {
      swift_release_n(v17, 2);
    }
  }
  else
  {
    swift_release();
  }
}

void sub_100218DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  void *Strong;
  void *v12;
  id v13;
  uint64_t v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double Width;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  id v36;
  char v37;
  void *v38;
  uint64_t v39;
  void *v40;
  double v41;
  void *v42;
  id v43;
  void *v44;
  char *v45;
  char *v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  _QWORD v51[6];
  CGRect v52;

  v2 = v1;
  if (a1)
  {
    swift_retain(a1);
    v4 = sub_1002188C0();
    swift_retain(a1);
    sub_100302834(v5);

    swift_release();
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
    v7 = sub_1002188C0();
    v8 = sub_1002188C0();
    v51[3] = type metadata accessor for SearchResultsMessageView();
    v51[4] = &protocol witness table for UIView;
    v51[0] = v8;
    sub_10000EF80((uint64_t)v51, (uint64_t)v50);
    sub_10000EF80((uint64_t)v50, (uint64_t)v47);
    v9 = swift_allocObject(&unk_100746488, 56, 7);
    sub_100010E24(v50, v9 + 16);
    v10 = (_QWORD *)swift_allocObject(&unk_1007464B0, 40, 7);
    v10[2] = sub_10021EDFC;
    v10[3] = v9;
    v10[4] = 0x3FD999999999999ALL;
    swift_retain(v9);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v51);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (Strong)
    {
      v12 = Strong;
      sub_1000BD084(v7, Strong);
      if (*(_BYTE *)(v6 + 65) == 1)
      {
        v45 = v7;
        v13 = objc_msgSend(v12, "contentView");
        v14 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
        v15 = LayoutMarginsAware<>.layoutFrame.getter(v14);
        v17 = v16;
        v19 = v18;
        v21 = v20;

        v52.origin.x = v15;
        v52.origin.y = v17;
        v52.size.width = v19;
        v52.size.height = v21;
        Width = CGRectGetWidth(v52);
        v23 = objc_msgSend(v12, "contentView");
        v25 = v48;
        v24 = v49;
        sub_100010F08(v47, v48);
        v26 = v24;
        v7 = v45;
        dispatch thunk of Measurable.measurements(fitting:in:)(v23, v25, v26, Width, 1.79769313e308);
        v28 = v27;

        objc_msgSend(v12, "setPreferredHeight:", v28);
        objc_msgSend(v12, "setMinimumHeight:", 0.0);
      }
      v29 = *(_QWORD *)(v6 + 32);
      v30 = *(_QWORD *)(v6 + 40);
      v31 = *(_QWORD *)(v6 + 48);
      v32 = *(_QWORD *)(v6 + 56);
      *(_QWORD *)(v6 + 32) = sub_10021EDFC;
      *(_QWORD *)(v6 + 40) = v9;
      *(_QWORD *)(v6 + 48) = sub_10021EE28;
      *(_QWORD *)(v6 + 56) = v10;
      *(_BYTE *)(v6 + 64) = 1;
      sub_1000BDED4(v29, v30, v31, v32);
      swift_retain(v10);

    }
    else
    {
      swift_release();
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v47);

    *(_QWORD *)&v41 = swift_release().n128_u64[0];
    v42 = *(void **)(*(_QWORD *)(v2
                               + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController)
                   + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSectionViewController);
    if (v42)
    {
      v43 = objc_msgSend(v42, "collectionView", v41);
      if (v43)
      {
        v44 = v43;
        sub_1000BD80C(v43);

      }
    }
    swift_release();
  }
  else
  {
    v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
    v34 = sub_1002188C0();
    if (*(_BYTE *)(v33 + 65) == 1 && (v35 = *(void **)(v33 + 24)) != 0)
    {
      v46 = v34;
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v36 = v35;
      v37 = static NSObject.== infix(_:_:)(v36, v46);

      if ((v37 & 1) != 0)
      {
        v38 = *(void **)(v33 + 24);
        if (v38)
        {
          if (*(_BYTE *)(v33 + 65) == 1)
          {
            v39 = swift_unknownObjectWeakLoadStrong(v33 + 16);
            if (v39)
            {
              v40 = (void *)v39;
              objc_msgSend(v38, "setHidden:", 1);
              objc_msgSend(v40, "setMinimumHeight:", 0.0);
              objc_msgSend(v40, "setPreferredHeight:", 0.0);

              *(_BYTE *)(v33 + 65) = 0;
            }
          }
        }
      }
    }
    else
    {

    }
  }
}

void sub_1002191C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  void *v4;
  id v5;
  char v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  id v12;
  uint64_t v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double Width;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];
  _QWORD v35[5];
  CGRect v36;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
  v2 = sub_1002189B8();
  v3 = v2;
  if (*(_BYTE *)(v1 + 65) == 1 && (v4 = *(void **)(v1 + 24)) != 0)
  {
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v5 = v4;
    v6 = static NSObject.== infix(_:_:)(v5, v3);

    if ((v6 & 1) != 0)
      return;
  }
  else
  {

  }
  v7 = sub_1002189B8();
  v8 = sub_1002189B8();
  v35[3] = type metadata accessor for GuidedSearchTokenPaletteView(0);
  v35[4] = &protocol witness table for UIView;
  v35[0] = v8;
  sub_10000EF80((uint64_t)v35, (uint64_t)v34);
  sub_10000EF80((uint64_t)v34, (uint64_t)v31);
  v9 = swift_allocObject(&unk_100746460, 56, 7);
  sub_100010E24(v34, v9 + 16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v35);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v11 = Strong;
    sub_1000BD084(v7, Strong);
    if (*(_BYTE *)(v1 + 65) == 1)
    {
      v12 = objc_msgSend(v11, "contentView");
      v13 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v14 = LayoutMarginsAware<>.layoutFrame.getter(v13);
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v36.origin.x = v14;
      v36.origin.y = v16;
      v36.size.width = v18;
      v36.size.height = v20;
      Width = CGRectGetWidth(v36);
      v22 = objc_msgSend(v11, "contentView");
      v23 = v32;
      v24 = v33;
      sub_100010F08(v31, v32);
      dispatch thunk of Measurable.measurements(fitting:in:)(v22, v23, v24, Width, 1.79769313e308);
      v26 = v25;

      objc_msgSend(v11, "setPreferredHeight:", v26);
      objc_msgSend(v11, "preferredHeight");
      objc_msgSend(v11, "setMinimumHeight:");
    }
    v27 = *(_QWORD *)(v1 + 32);
    v28 = *(_QWORD *)(v1 + 40);
    v29 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v1 + 32) = sub_10021EDFC;
    *(_QWORD *)(v1 + 40) = v9;
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 56) = 0;
    *(_BYTE *)(v1 + 64) = 0;
    sub_1000BDED4(v27, v28, v29, v30);

  }
  else
  {
    swift_release();
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v31);

  sub_1000BD248();
}

void sub_100219444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  char v6;
  char *v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
  v3 = sub_1002189B8();
  if (*(_BYTE *)(v2 + 65) == 1 && (v4 = *(void **)(v2 + 24)) != 0)
  {
    v12 = v3;
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v5 = v4;
    v6 = static NSObject.== infix(_:_:)(v5, v12);

    if ((v6 & 1) != 0)
    {
      v7 = sub_1002189B8();
      sub_100202920((uint64_t)_swiftEmptyArrayStorage);

      v8 = sub_1002189B8();
      *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsCoordinator] = 0;
      swift_release();
      *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension28GuidedSearchTokenPaletteView_impressionsScrollObserver] = 0;

      swift_release();
      v9 = (void *)objc_opt_self(UIView);
      v10 = swift_allocObject(&unk_1007462A8, 24, 7);
      swift_unknownObjectWeakInit(v10 + 16, v1);
      aBlock[4] = sub_10021EDD0;
      aBlock[5] = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000924A0;
      aBlock[3] = &unk_100746428;
      v11 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v9, "animateWithDuration:animations:", v11, 0.3);
      _Block_release(v11);
    }
  }
  else
  {

  }
}

uint64_t sub_1002195EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
    swift_retain(v4);

    v5 = *(void **)(v4 + 24);
    if (v5 && *(_BYTE *)(v4 + 65) == 1)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
      if (Strong)
      {
        v7 = (void *)Strong;
        objc_msgSend(v5, "setHidden:", 1);
        objc_msgSend(v7, "setMinimumHeight:", 0.0);
        objc_msgSend(v7, "setPreferredHeight:", 0.0);

        *(_BYTE *)(v4 + 65) = 0;
      }
    }
    return swift_release(v4);
  }
  return result;
}

void sub_1002196C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v6;
  uint64_t ObjectType;
  id v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;

  v3 = *(char **)(a3 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextInput);
  if (v3 && v3[OBJC_IVAR____TtC20ProductPageExtension30SearchTextInputSourceTextField_isTextExpansionDisabled] != 1)
  {
    v6 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension30SearchTextInputSourceTextField_textField];
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for GhostHintTextDisplayable) ? v6 : 0)
    {
      v15 = v3;
      v9 = v6;
      v10 = sub_1001CEA1C();

      if ((v10 & 1) == 0)
        goto LABEL_16;
      v11 = swift_getObjectType();
      v12 = swift_conformsToProtocol2(v11, &protocol descriptor for GhostHintTextDisplayable);
      v13 = v12 ? v12 : 0;
      if (!v12)
        v6 = 0;
      if (v6)
      {
        v14 = v9;
        swift_bridgeObjectRetain(a2);
        sub_1003B5160((uint64_t)v15, (char *)v6, v13, a1, a2);

        swift_bridgeObjectRelease(a2);
      }
      else
      {
LABEL_16:

      }
    }
  }
}

uint64_t (*sub_100219808(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100746500, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100746528, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10021EE64;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_10021EE6C;
}

void sub_100219880(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController) = a1;
  v6 = a1;
  if (!a1)
  {
    if (v3)
    {
      v4 = objc_msgSend(v3, "presentingViewController");
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

        v3 = v6;
        v6 = v5;
      }
    }
  }

}

id sub_100219914()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  void (**v19)(void *);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  int v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  objc_super v42;

  v1 = v0;
  v2 = type metadata accessor for AutomationSemantics(0);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_100816398);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for SearchViewController(0);
  v42.receiver = v0;
  v42.super_class = v9;
  objc_msgSendSuper2(&v42, "viewDidLoad");
  v10 = objc_msgSend(v0, "navigationItem");
  sub_1000BCED4(v10, 2, 1);

  SearchTextPresenter.onApplyTermExpansion.getter();
  v11 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v13 = static OS_dispatch_queue.main.getter(v12);
  *((_QWORD *)&v40 + 1) = v11;
  v41 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v39 = v13;
  v14 = sub_10000DAF8(&qword_1008163A0);
  v15 = sub_100010E80(&qword_1008163A8, &qword_1008163A0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
  EventEmitter.addObserver<A>(on:target:method:)(&v39, v1, sub_100219808, 0, v14, v9, v15);
  v16 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v39);
  sub_10021A5CC();
  v17 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController];
  objc_msgSend(v17, "setSearchResultsUpdater:", v1);
  objc_msgSend(v17, "setDelegate:", v1);
  objc_msgSend(v17, "setObscuresBackgroundDuringPresentation:", 0);
  v18 = swift_allocObject(&unk_1007464D8, 24, 7);
  *(_QWORD *)(v18 + 16) = v1;
  v19 = (void (**)(void *))&v17[OBJC_IVAR____TtC20ProductPageExtension16SearchController_filterButtonHandler];
  v20 = *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension16SearchController_filterButtonHandler];
  v21 = *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension16SearchController_filterButtonHandler + 8];
  *v19 = sub_10021EE44;
  v19[1] = (void (*)(void *))v18;
  v22 = v1;
  sub_100018908(v20, v21);
  v23 = objc_msgSend(v22, "navigationItem");
  objc_msgSend(v23, "setLargeTitleDisplayMode:", 3);

  v24 = objc_msgSend(v22, "navigationItem");
  objc_msgSend(v24, "setSearchController:", v17);

  v25 = objc_msgSend(v22, "navigationItem");
  objc_msgSend(v25, "setPreferredSearchBarPlacement:", 2);

  v26 = objc_msgSend(v22, "navigationItem");
  objc_msgSend(v26, "setHidesSearchBarWhenScrolling:", 0);

  objc_msgSend(v22, "setDefinesPresentationContext:", 1);
  sub_10016FD7C();
  result = objc_msgSend(v22, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v28 = result;
  v29 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v31 = (void *)static UIColor.defaultBackground.getter(v29, v30);
  objc_msgSend(v28, "setBackgroundColor:", v31);

  result = objc_msgSend(v22, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v32 = result;
  v39 = 0u;
  v40 = 0u;
  static AutomationSemantics.page(name:id:)(0x686372616573, 0xE600000000000000, &v39);
  sub_100010F2C((uint64_t)&v39, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v4);

  result = (id)(*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v4, v38);
  v33 = v22[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_showSearchLanding];
  v22[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_showSearchLanding] = 1;
  if (v33 == 1)
    return result;
  v34 = *(void **)&v22[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchLandingViewController];
  objc_msgSend(v22, "addChildViewController:", v34);
  result = objc_msgSend(v22, "view");
  if (!result)
    goto LABEL_10;
  v35 = result;
  result = objc_msgSend(v34, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v36 = result;
  objc_msgSend(v35, "addSubview:", result);

  return objc_msgSend(v34, "didMoveToParentViewController:", v22);
}

double sub_100219DF8(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  objc_super v18;

  v2 = v1;
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for SearchViewController(0);
  objc_msgSendSuper2(&v18, "viewDidAppear:", a1 & 1);
  v4 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController]
                + OBJC_IVAR____TtC20ProductPageExtension16SearchController_searchTextInput);
  v5 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextInput;
  v6 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextInput];
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextInput] = v4;
  v7 = v4;

  v8 = *(void **)&v2[v5];
  if (v8)
  {
    *((_QWORD *)&v16 + 1) = type metadata accessor for SearchTextInputSourceTextField();
    v17 = sub_10000E720(&qword_100816390, (uint64_t (*)(uint64_t))type metadata accessor for SearchTextInputSourceTextField, (uint64_t)&unk_10065E4E0);
    *(_QWORD *)&v15 = v8;
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  v9 = v8;
  SearchTextPresenter.inputSource.setter(&v15);
  v11 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_pendingSearchAction;
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_pendingSearchAction];
  if (v12)
  {
    v15 = 0u;
    v16 = 0u;
    v13 = swift_retain(v12);
    sub_10021BF5C(v14, v13);
    sub_100010F2C((uint64_t)&v15, &qword_100808F20);
    *(_QWORD *)&v2[v11] = 0;
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

id sub_100219FD4(void *a1, uint64_t a2)
{
  char *v2;
  void *v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SearchViewController(0);
  objc_msgSendSuper2(&v7, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  if (objc_msgSend(a1, "horizontalSizeClass") == (id)1)
  {
    v5 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController];
    if (v5)
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 0, 0);
  }
  return objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController], "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
}

void sub_10021A0EC(void *a1)
{
  char *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  objc_super v15;

  v2 = v1;
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for SearchViewController(0);
  objc_msgSendSuper2(&v15, "traitCollectionDidChange:", a1);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController], "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController], "traitCollection");
  sub_1001706F8(v4, a1);

  if (a1)
    v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  else
    v5 = 0;
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  if (!v5)
  {

LABEL_10:
    sub_1000BD3D4();
    return;
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v10 = v9;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v13 = v11;
  if (v8 == v12 && v10 == v11)
  {

    swift_bridgeObjectRelease_n(v10, 2);
    return;
  }
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v11, 0);

  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) == 0)
    goto LABEL_10;
}

void sub_10021A418()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  objc_super v25;

  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for SearchViewController(0);
  objc_msgSendSuper2(&v25, "viewDidLayoutSubviews");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchLandingViewController], "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = v1;
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
  v13 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController], "view");
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v14 = v13;
  v15 = objc_msgSend(v0, "view");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "bounds");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    objc_msgSend(v14, "setFrame:", v18, v20, v22, v24);
    sub_1000BD3D4();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10021A5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  void *v28;

  v1 = sub_10000DAF8((uint64_t *)&unk_100816350);
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  __chkstk_darwin(v1);
  v23 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DAF8(&qword_1008159D0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  PageFacetsPresenter.onFacetStateDidChange.getter(v5);
  v8 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v10 = static OS_dispatch_queue.main.getter(v9);
  v27 = v8;
  v28 = &protocol witness table for OS_dispatch_queue;
  v26[0] = v10;
  v11 = sub_10000DAF8((uint64_t *)&unk_100816360);
  v12 = type metadata accessor for SearchViewController(0);
  v13 = sub_100010E80(&qword_1008159D8, (uint64_t *)&unk_100816360, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
  EventEmitter.addObserver<A>(on:target:method:)(v26, v0, sub_10021A8D4, 0, v11, v12, v13);
  v14 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v14);
  v15 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
  PageFacetsPresenter.onPerformPageFacetsChangeAction.getter(v15);
  v17 = static OS_dispatch_queue.main.getter(v16);
  v27 = v8;
  v28 = &protocol witness table for OS_dispatch_queue;
  v26[0] = v17;
  v18 = sub_10000DAF8(&qword_100816370);
  v19 = sub_100010E80(&qword_100816378, &qword_100816370, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  v20 = v23;
  EventEmitter.addObserver<A>(on:target:method:)(v26, v0, sub_10021AA28, 0, v18, v12, v19);
  v21 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v20, v25, v21);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
}

id sub_10021A7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v3 = sub_10000DAF8((uint64_t *)&unk_100816380);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController);
  PageFacetsPresenter.FacetsState.facets.getter(v4);
  v8 = type metadata accessor for PageFacets(0);
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1;
  sub_100010F2C((uint64_t)v6, (uint64_t *)&unk_100816380);
  return objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC20ProductPageExtension16SearchController_filterButton), "setEnabled:", v9);
}

id (*sub_10021A8D4(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100746410, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_10021EDC8;
}

uint64_t sub_10021A928(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  __n128 v11;
  _QWORD v12[4];

  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v12[3] = type metadata accessor for SearchViewController(0);
    v12[0] = a2;
    v9 = *(_QWORD *)&a2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph];
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v4);
    v10 = a2;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v12, v7, v9);
    v11 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v11);
    return sub_100010F2C((uint64_t)v12, &qword_100808F20);
  }
  return result;
}

uint64_t (*sub_10021AA28(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_1007463C0, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_1007463E8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10021ED94;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_10021EDC0;
}

void sub_10021AAA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  __n128 v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double MidX;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  CGRect v52;
  CGRect v53;

  v2 = v1;
  v4 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v4);
  v6 = (char *)&v49[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)&v49[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetsPresenter);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph);
  v12 = objc_allocWithZone((Class)type metadata accessor for PageFacetsViewController(0));
  swift_retain(v10);
  swift_retain(v11);
  v13 = (char *)sub_10055DA44(v10, 1, v11);
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension24PageFacetsViewController_delegate + 8] = &off_100746150;
  swift_unknownObjectWeakAssign(v14);
  v15 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v13);
  v16 = objc_msgSend(v15, "navigationBar");
  objc_msgSend(v16, "setPrefersLargeTitles:", 0);

  objc_msgSend(v15, "setModalPresentationStyle:", 7);
  v17 = objc_msgSend(v15, "presentationController");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setDelegate:", v2);

  }
  v19 = objc_msgSend(v15, "popoverPresentationController");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "setSourceView:", a1);

  }
  v21 = objc_msgSend(v15, "popoverPresentationController");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "setPermittedArrowDirections:", 1);

  }
  v23 = objc_msgSend(v15, "popoverPresentationController");
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(a1, "titleLabel");
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v25, "frame");
      v28 = v27;
      v30 = v29;
      v32 = v31;
      v34 = v33;

    }
    else
    {
      objc_msgSend(a1, "bounds");
      v28 = v35;
      v30 = v36;
      v32 = v37;
      v34 = v38;
    }
    v52.origin.x = v28;
    v52.origin.y = v30;
    v52.size.width = v32;
    v52.size.height = v34;
    MidX = CGRectGetMidX(v52);
    objc_msgSend(a1, "bounds");
    objc_msgSend(v24, "setSourceRect:", MidX, CGRectGetMaxY(v53), 10.0, 10.0);

  }
  sub_1000E1E3C((uint64_t)v49);
  v40 = v50;
  if (v50)
  {
    v41 = v51;
    sub_100010F08(v49, v50);
    *v9 = v15;
    swift_storeEnumTagMultiPayload(v9, v7, 19);
    v42 = qword_100804A30;
    v43 = v15;
    if (v42 != -1)
      swift_once(&qword_100804A30, sub_10010F95C);
    v44 = type metadata accessor for FlowPresentationHints(0);
    v45 = sub_10000EFC4(v44, (uint64_t)qword_100865270);
    v46 = type metadata accessor for ReferrerData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v6, 1, 1, v46);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v41 + 16))(v9, v45, 0, 0, v6, v40, v41);
    sub_100010F2C((uint64_t)v6, (uint64_t *)&unk_100820690);
    sub_1000340D8((uint64_t)v9, type metadata accessor for FlowDestination);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
    v47 = v43;
    sub_100219880(v43);

  }
  else
  {
    __break(1u);
  }
}

void sub_10021AF00(void *a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = objc_msgSend(a1, "searchResultsController");
  if (v2)
  {
    v7 = v2;
    objc_msgSend(v1, "addChildViewController:");
    v3 = objc_msgSend(v1, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v7, "view");
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v4, "addSubview:", v5);

        objc_msgSend(v7, "didMoveToParentViewController:", v1);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10021B038(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;

  sub_1000BD9F4();
  v2 = objc_msgSend(a1, "searchResultsController");
  if (v2)
  {
    v5 = v2;
    objc_msgSend(v2, "willMoveToParentViewController:", 0);
    v3 = objc_msgSend(v5, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "removeFromSuperview");

      objc_msgSend(v5, "removeFromParentViewController");
    }
    else
    {
      __break(1u);
    }
  }
}

double sub_10021B1F4()
{
  return sub_10021B20C((uint64_t (*)(uint64_t, uint64_t, __n128))sub_1000A5434);
}

double sub_10021B200()
{
  return sub_10021B20C((uint64_t (*)(uint64_t, uint64_t, __n128))sub_1000A5428);
}

double sub_10021B20C(uint64_t (*a1)(uint64_t, uint64_t, __n128))
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  _QWORD v18[4];

  v3 = v1;
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&result = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_activeSearchBarObservingViewController];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_activeSearchBarObservingViewController];
  if (v10)
  {
    v11 = *((_QWORD *)v9 + 1);
    ObjectType = swift_getObjectType();
    v13 = swift_unknownObjectRetain(v10);
    v14 = a1(ObjectType, v11, v13);
    *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
    if (v14)
    {
      if (UIResponder.nearestActionRunner.getter())
      {
        v18[3] = type metadata accessor for SearchViewController(0);
        v18[0] = v3;
        v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph];
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v4);
        v16 = v3;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v14, v18, v8, v15);
        swift_release();
        v17 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v17);
        sub_100010F2C((uint64_t)v18, &qword_100808F20);
      }
      else
      {
        *(_QWORD *)&result = swift_release().n128_u64[0];
      }
    }
  }
  return result;
}

void sub_10021B37C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  char v17;
  void *v18;
  uint64_t Strong;
  void *v20;
  char *v21;

  v2 = v1;
  v4 = objc_msgSend(a1, "searchBar");
  v5 = objc_msgSend(v4, "text");

  if (v5)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      v11 = sub_1004FD4BC(v7, v9);
      swift_bridgeObjectRelease(v9);
      if (!v11)
      {
        sub_1004FDA1C(1);
        PageFacetsPresenter.clear()();
        v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
        v14 = sub_1002188C0();
        if (*(_BYTE *)(v13 + 65) == 1 && (v15 = *(void **)(v13 + 24)) != 0)
        {
          v21 = v14;
          sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
          v16 = v15;
          v17 = static NSObject.== infix(_:_:)(v16, v21);

          if ((v17 & 1) != 0)
          {
            v18 = *(void **)(v13 + 24);
            if (v18)
            {
              if (*(_BYTE *)(v13 + 65) == 1)
              {
                Strong = swift_unknownObjectWeakLoadStrong(v13 + 16);
                if (Strong)
                {
                  v20 = (void *)Strong;
                  objc_msgSend(v18, "setHidden:", 1);
                  objc_msgSend(v20, "setMinimumHeight:", 0.0);
                  objc_msgSend(v20, "setPreferredHeight:", 0.0);

                  *(_BYTE *)(v13 + 65) = 0;
                }
              }
            }
          }
        }
        else
        {

        }
      }
      return;
    }
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  if (objc_msgSend(a1, "isActive", v6)
    && *(_QWORD *)(*(_QWORD *)(v2
                             + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController)
                 + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_searchFocusViewController))
  {
    v12 = 3;
  }
  else
  {
    v12 = 0;
  }
  sub_1004FDA1C(v12);
  sub_10021C198();
}

id sub_10021B5FC(id result)
{
  _BYTE *v1;
  int v2;
  void *v3;
  void *v4;
  void *v5;

  if (!(_BYTE)result)
  {
    v2 = v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_showSearchLanding];
    v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_showSearchLanding] = 1;
    if (v2 == 1)
      return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController], "setShowsSearchResultsController:", 0);
    v3 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchLandingViewController];
    objc_msgSend(v1, "addChildViewController:", v3);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v4 = result;
      result = objc_msgSend(v3, "view");
      if (result)
      {
        v5 = result;
        objc_msgSend(v4, "addSubview:", result);

        objc_msgSend(v3, "didMoveToParentViewController:", v1);
        return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController], "setShowsSearchResultsController:", 0);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_10021B6FC(char a1)
{
  __asm { BR              X10 }
}

double sub_10021B744()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  double result;

  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController], "searchBar");
  objc_msgSend(v3, "_setDisableDictationButton:", 0);

  v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchLandingViewController], "collectionView");
  v5 = objc_msgSend(v0, "navigationItem");
  v6 = objc_msgSend(v0, "navigationController");
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, "navigationBar");

    v7 = objc_msgSend(v8, "scrollEdgeAppearance");
  }
  objc_msgSend(v5, "setScrollEdgeAppearance:", v7);

  sub_100219444();
  objc_msgSend(v0, "setContentScrollView:forEdge:", v4, 15);
  v9 = *(void **)(*(_QWORD *)&v0[*(_QWORD *)(v2 + 504)] + *v1);
  if (!v9)
  {
    v13 = 0;
LABEL_13:
    v12 = 0;
    goto LABEL_14;
  }
  ObjectType = swift_getObjectType();
  v11 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchBarObservingViewController);
  if (v11)
    v12 = v11;
  else
    v12 = 0;
  if (v11)
    v13 = v9;
  else
    v13 = 0;
  if (!v13)
    goto LABEL_13;
  v14 = v9;
LABEL_14:
  v15 = &v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_activeSearchBarObservingViewController];
  *(_QWORD *)v15 = v13;
  *((_QWORD *)v15 + 1) = v12;

  *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10021BDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSection) == 2
    && (v2 = *(_QWORD *)(v1
                       + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_searchResultsViewController)) != 0)
  {
    return swift_retain(*(_QWORD *)(v2 + qword_100864D50));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_10021BE40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController);
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSection))
    return 0;
  v2 = *(void **)(v1
                + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSectionViewController);
  if (!v2
    || (v10 = *(_QWORD *)(v1
                        + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSectionViewController),
        v3 = sub_100018B6C(0, (unint64_t *)&qword_100816338, UICollectionViewController_ptr),
        v4 = v2,
        v5 = sub_10000DAF8((uint64_t *)&unk_100816340),
        (swift_dynamicCast(&v11, &v10, v3, v5, 6) & 1) == 0))
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    goto LABEL_7;
  }
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_7:
    sub_100010F2C((uint64_t)&v11, &qword_100816330);
    return 0;
  }
  sub_100010E24(&v11, (uint64_t)v14);
  v6 = v15;
  v7 = v16;
  sub_100010F08(v14, v15);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
  return v8;
}

void sub_10021BF5C(uint64_t a1, __n128 a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, __n128);
  char v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = type metadata accessor for SearchOrigin(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v27 - v10;
  v12 = objc_msgSend(v2, "isViewLoaded", v9);
  if (!(_DWORD)v12)
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_pendingSearchAction] = a1;
    swift_retain(a1);
    swift_release();
    return;
  }
  SearchAction.origin.getter(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for SearchOrigin.tabBar(_:), v4);
  v13 = sub_10000E720(&qword_100816328, (uint64_t (*)(uint64_t))&type metadata accessor for SearchOrigin, (uint64_t)&protocol conformance descriptor for SearchOrigin);
  dispatch thunk of RawRepresentable.rawValue.getter(&v29, v4, v13);
  dispatch thunk of RawRepresentable.rawValue.getter(&v27, v4, v13);
  v14 = v30;
  v15 = v28;
  if (v29 == v27 && v30 == v28)
  {
    v16 = swift_bridgeObjectRelease_n(v30, 2);
    v17 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
    v17(v7, v4, v16);
    ((void (*)(char *, uint64_t))v17)(v11, v4);
LABEL_7:
    sub_10021E8D0();
    return;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v27, v28, 0);
  swift_bridgeObjectRelease(v14);
  v19 = swift_bridgeObjectRelease(v15);
  v20 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v20(v7, v4, v19);
  ((void (*)(char *, uint64_t))v20)(v11, v4);
  if ((v18 & 1) != 0)
    goto LABEL_7;
  v22 = SearchAction.term.getter(v21);
  if (!v23)
    goto LABEL_14;
  v24 = v22;
  v25 = v23;
  swift_bridgeObjectRelease(v23);
  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v24 & 0xFFFFFFFFFFFFLL;
  if (v26)
    sub_10021C5B4(a1);
  else
LABEL_14:
    sub_10021C2C0(0);
}

void sub_10021C198()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  char v5;
  void *v6;
  uint64_t Strong;
  void *v8;
  char *v9;

  PageFacetsPresenter.clear()();
  sub_100219880(0);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter);
  v2 = sub_1002188C0();
  if ((*(_BYTE *)(v1 + 65) & 1) != 0 && (v3 = *(void **)(v1 + 24)) != 0)
  {
    v9 = v2;
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v4 = v3;
    v5 = static NSObject.== infix(_:_:)(v4, v9);

    if ((v5 & 1) != 0)
    {
      v6 = *(void **)(v1 + 24);
      if (v6)
      {
        if (*(_BYTE *)(v1 + 65) == 1)
        {
          Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
          if (Strong)
          {
            v8 = (void *)Strong;
            objc_msgSend(v6, "setHidden:", 1);
            objc_msgSend(v8, "setMinimumHeight:", 0.0);
            objc_msgSend(v8, "setPreferredHeight:", 0.0);

            *(_BYTE *)(v1 + 65) = 0;
          }
        }
      }
    }
  }
  else
  {

  }
}

uint64_t sub_10021C2C0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController);
  v13 = objc_msgSend(v12, "searchBar", v9);
  objc_msgSend(v13, "becomeFirstResponder");

  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_100746370, 25, 7);
  *(_QWORD *)(v16 + 16) = v12;
  *(_BYTE *)(v16 + 24) = a1;
  aBlock[4] = sub_10021ED88;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100746388;
  v17 = _Block_copy(aBlock);
  v18 = v12;
  v19 = swift_release();
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v22 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v3, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_10021C510(void *a1, char a2)
{
  id v4;
  id v5;

  objc_msgSend(a1, "setActive:", 1);
  if ((a2 & 1) != 0)
  {
    v4 = objc_msgSend(a1, "searchBar");
    v5 = objc_msgSend(v4, "searchField");

    if (v5)
    {
      objc_msgSend(v5, "selectAll");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10021C5B4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  char v16;
  void *v17;
  uint64_t Strong;
  void *v19;
  id v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DispatchQoS(0, v5);
  v8 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter];
  v12 = sub_1002188C0();
  v13 = v12;
  if ((*(_BYTE *)(v11 + 65) & 1) != 0 && (v14 = *(void **)(v11 + 24)) != 0)
  {
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v15 = v14;
    v16 = static NSObject.== infix(_:_:)(v15, v13);

    if ((v16 & 1) != 0)
    {
      v17 = *(void **)(v11 + 24);
      if (v17)
      {
        if (*(_BYTE *)(v11 + 65) == 1)
        {
          Strong = swift_unknownObjectWeakLoadStrong(v11 + 16);
          if (Strong)
          {
            v19 = (void *)Strong;
            objc_msgSend(v17, "setHidden:", 1);
            objc_msgSend(v19, "setMinimumHeight:", 0.0);
            objc_msgSend(v19, "setPreferredHeight:", 0.0);

            *(_BYTE *)(v11 + 65) = 0;
          }
        }
      }
    }
  }
  else
  {

  }
  v20 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController], "searchBar");
  objc_msgSend(v20, "resignFirstResponder");

  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter(v21);
  v23 = swift_allocObject(&unk_100746320, 32, 7);
  *(_QWORD *)(v23 + 16) = v2;
  *(_QWORD *)(v23 + 24) = a1;
  aBlock[4] = sub_10021ED5C;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100746338;
  v24 = _Block_copy(aBlock);
  v25 = v2;
  swift_retain(a1);
  v26 = swift_release();
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v29 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v4, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v31);
}

double sub_10021C8D4(char *a1, uint64_t a2)
{
  id v3;
  id v4;
  char *v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  NSString v16;
  double result;

  sub_1004FCE50(a2);
  sub_1004FDA1C(2);
  v3 = objc_msgSend(a1, "navigationController");
  v4 = objc_msgSend(v3, "topViewController");

  if (!v4
    || (sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr),
        v5 = a1,
        v6 = v4,
        v7 = static NSObject.== infix(_:_:)(v6, v5),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
    v8 = objc_msgSend(a1, "navigationController");
    if (v8)
    {
      v9 = v8;

    }
  }
  v10 = *(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController];
  v11 = objc_msgSend(v10, "searchBar");
  SearchAction.term.getter(v12);
  if (v13)
  {
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v11, "setText:", v16, v14);

  objc_msgSend(v10, "setActive:", 1);
  *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_pendingSearchAction] = 0;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10021CA7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v6);
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GuidedSearchTokenCollection(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  if (objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController), "isActive", __chkstk_darwin(v12).n128_f64[0])&& *(_BYTE *)(*(_QWORD *)(v2+ OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController)+ OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSection) == 2)
  {
    v29 = v5;
    v30 = v4;
    v15 = sub_10000E720((unint64_t *)&qword_100816318, (uint64_t (*)(uint64_t))&type metadata accessor for GuidedSearchTokenCollection, (uint64_t)&protocol conformance descriptor for GuidedSearchTokenCollection);
    dispatch thunk of Collection.startIndex.getter(aBlock, v12, v15);
    dispatch thunk of Collection.endIndex.getter(&v34, v12, v15);
    if (aBlock[0] == v34)
    {
      sub_100219444();
    }
    else
    {
      sub_1002191C0();
      sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
      v28 = static OS_dispatch_queue.main.getter();
      v16 = swift_allocObject(&unk_1007462A8, 24, 7);
      v17 = swift_unknownObjectWeakInit(v16 + 16, v2);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v17);
      v18 = *(unsigned __int8 *)(v13 + 80);
      v19 = (v18 + 24) & ~v18;
      v20 = swift_allocObject(&unk_1007462D0, v19 + v14, v18 | 7);
      *(_QWORD *)(v20 + 16) = v16;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
      aBlock[4] = sub_10021EB08;
      aBlock[5] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000924A0;
      aBlock[3] = &unk_1007462E8;
      v21 = _Block_copy(aBlock);
      v22 = swift_release();
      static DispatchQoS.unspecified.getter(v22);
      aBlock[0] = _swiftEmptyArrayStorage;
      v23 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v24 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
      v25 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
      v26 = v30;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v30, v23);
      v27 = (void *)v28;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v26);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    }
  }
}

void sub_10021CDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[32];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for GuidedSearchTokenCollection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong)
    goto LABEL_11;
  v13 = (void *)Strong;
  v14 = sub_10021BE40();
  v16 = v15;

  if (!v14)
    goto LABEL_11;
  swift_beginAccess(v11, v39, 0, 0);
  v17 = (char *)swift_unknownObjectWeakLoadStrong(v11);
  if (!v17)
    goto LABEL_8;
  v18 = *(double *)&v17[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_paletteImpressionableThreshold];

  v19 = type metadata accessor for ImpressionsCalculator(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = swift_unknownObjectRetain(v14);
  v21 = ImpressionsCalculator.init(impressionableThreshold:tracker:)(v20, v16, v18);
  swift_beginAccess(v11, v38, 0, 0);
  v22 = swift_unknownObjectWeakLoadStrong(v11);
  if (!v22)
  {
    swift_release();
LABEL_8:
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  v23 = (void *)v22;
  v24 = sub_1002189B8();

  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v25 = sub_10000E720(&qword_100816320, (uint64_t (*)(uint64_t))&type metadata accessor for GuidedSearchTokenCollection, (uint64_t)&protocol conformance descriptor for GuidedSearchTokenCollection);
  v26 = dispatch thunk of Sequence._copyToContiguousArray()(v7, v25);
  v27 = sub_1003AF83C(v26);
  swift_release();
  swift_beginAccess(v11, v37, 0, 0);
  v28 = swift_unknownObjectWeakLoadStrong(v11);
  if (v28)
  {
    v29 = (void *)v28;
    v30 = v28 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchContainerImpressionMetrics;
    swift_beginAccess(v28 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchContainerImpressionMetrics, v36, 0, 0);
    sub_100018ADC(v30, (uint64_t)v6, &qword_1008131E0);

  }
  else
  {
    v31 = type metadata accessor for ImpressionMetrics(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 1, 1, v31);
  }
  sub_1002000DC(v21, v27, (uint64_t)v6);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v27);
  swift_release();
  sub_100010F2C((uint64_t)v6, &qword_1008131E0);
LABEL_11:
  swift_beginAccess(v11, v40, 0, 0);
  v32 = swift_unknownObjectWeakLoadStrong(v11);
  if (v32)
  {
    v33 = (void *)v32;
    v34 = sub_1002189B8();

    sub_1005EA7C4();
  }
}

uint64_t sub_10021D0C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _OWORD v10[2];

  v2 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100090180(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload(v4, v2) == 4)
  {
    v6 = *v4;
    if (v6)
    {
      memset(v10, 0, sizeof(v10));
      v7 = swift_retain(v6);
      sub_10021BF5C(v8, v7);
      swift_release_n(v6, 2);
      sub_100010F2C((uint64_t)v10, &qword_100808F20);
      return 1;
    }
  }
  else
  {
    sub_1000340D8((uint64_t)v4, type metadata accessor for FlowDestination);
  }
  return 0;
}

void sub_10021D1A0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v2 = sub_10000DAF8(&qword_10080AE38);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StoreTab(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    v35 = v46;
    if (v46 < 0)
      v36 = v46;
    else
      v36 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v46);
    v45 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v35);
    if (v45)
    {
LABEL_3:
      if (v45 < 1)
      {
        __break(1u);
        goto LABEL_36;
      }
      v38 = v8;
      v39 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph;
      v9 = v46 & 0xC000000000000001;
      swift_bridgeObjectRetain(v46);
      v10 = 0;
      v40 = v9;
      v41 = v4;
      do
      {
        if (v9)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v46);
        else
          v11 = *(id *)(v46 + 8 * v10 + 32);
        v12 = v11;
        v13 = type metadata accessor for AccountButton(0);
        v14 = swift_dynamicCastClass(v12, v13);
        if (v14)
        {
          v15 = v14;
          sub_100018ADC(v14 + qword_100864A70, (uint64_t)v4, &qword_10080AE38);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {

            sub_100010F2C((uint64_t)v4, &qword_10080AE38);
          }
          else
          {
            v16 = v5;
            (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v44, v4, v5);
            v17 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
            v18 = v42;
            v43 = *(_QWORD *)(v42 + v39);
            v19 = v6;
            v20 = type metadata accessor for ObjectGraph(0);
            v21 = v12;
            v22 = v17;
            v23 = v17;
            v4 = v41;
            inject<A, B>(_:from:)(v22, v43, v23, v20);
            v24 = (void *)v47;
            v25 = v15;
            v26 = v18;
            v9 = v40;
            v27 = v44;
            FloatingUnifiedMessageCoordinator.register(accountButton:with:for:)(v25, v26, v44);

            v6 = v19;
            v5 = v16;
            (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v16);
          }
        }
        else
        {

        }
        ++v10;
      }
      while (v45 != v10);
      swift_bridgeObjectRelease(v46);
      if (v38)
      {
        v32 = v46;
        if (v46 < 0)
          v33 = v46;
        else
          v33 = v46 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v46);
        v34 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease(v32);
        if (v34 != 1)
        {
LABEL_16:
          v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StackView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
          *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis] = 0;
          objc_msgSend(v4, "setNeedsLayout");
          *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9StackView_alignment] = 5;
          objc_msgSend(v4, "setNeedsLayout");
          *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9StackView_spacing] = 0x4030000000000000;
          objc_msgSend(v4, "setNeedsLayout");
          v47 = (unint64_t)_swiftEmptyArrayStorage;
          swift_bridgeObjectRetain(v46);
          sub_10001A304(v28);
          v5 = v47;
          if (!(v47 >> 62))
          {
            v29 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v29)
            {
LABEL_21:
              swift_bridgeObjectRelease(v5);
              return;
            }
            goto LABEL_18;
          }
LABEL_36:
          if (v5 < 0)
            v37 = v5;
          else
            v37 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v29 = _CocoaArrayWrapper.endIndex.getter(v37);
          swift_bridgeObjectRelease(v5);
          if (!v29)
            goto LABEL_21;
LABEL_18:
          if (v29 >= 1)
          {
            for (i = 0; i != v29; ++i)
            {
              v31 = *(_QWORD *)(v5 + 8 * i + 32);
              objc_msgSend(v4, "addSubview:", v31);
            }
            goto LABEL_21;
          }
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
      }
      else if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
      {
        goto LABEL_16;
      }
      if (v9)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
        return;
      }
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        *(id *)(v46 + 32);
        return;
      }
      goto LABEL_42;
    }
  }
  else
  {
    v45 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v45)
      goto LABEL_3;
  }
}

void sub_10021D61C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  char **v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char **v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  _QWORD *v60;
  unint64_t v61;
  id v62;

  v1 = (uint64_t)v0;
  v57 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_navigationAccessories;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_navigationAccessories];
  v3 = objc_msgSend(v0, "traitCollection", swift_bridgeObjectRetain(v2).n128_f64[0]);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_objectGraph];
  if ((unint64_t)v2 >> 62)
    goto LABEL_15;
  v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  v6 = v3;
  swift_retain(v4);
  v56 = (uint64_t)v0;
  while (v5)
  {
    v58 = (id)v5;
    v1 = 4;
    while (1)
    {
      v8 = v1 - 4;
      if ((v2 & 0xC000000000000001) == 0)
        break;
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v2);
      v10 = v1 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_14;
LABEL_11:
      v11 = v3;
      if ((*(unsigned __int8 (**)(id))(v9 + 16))(v3))
      {
        swift_release();
        v7 = _swiftEmptyArrayStorage;
      }
      else
      {
        v12 = *(_QWORD *)(v9 + 32);
        swift_retain(v4);
        swift_retain(v9);
        swift_bridgeObjectRetain(v12);
        v7 = sub_10021E5F4(v13, v9, v4);
        swift_bridgeObjectRelease(v12);
        swift_release_n(v9, 2);
        v5 = (uint64_t)v58;
        swift_release();
      }
      sub_10001A304((uint64_t)v7);
      ++v1;
      v3 = v11;
      if (v10 == v5)
      {
        swift_release();
        swift_bridgeObjectRelease(v2);
        v1 = v56;
        goto LABEL_20;
      }
    }
    v9 = *(_QWORD *)(v2 + 8 * v1);
    swift_retain(v9);
    v10 = v1 - 3;
    if (!__OFADD__(v8, 1))
      goto LABEL_11;
LABEL_14:
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v15 = v3;
    swift_retain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v14);
    v56 = v1;
  }
  swift_release();
  swift_bridgeObjectRelease(v2);
LABEL_20:

  swift_bridgeObjectRelease(v2);
  sub_10021D1A0((unint64_t)_swiftEmptyArrayStorage);
  v17 = v16;
  v18 = &selRef_fileURLWithPath_;
  v19 = objc_msgSend((id)v1, "navigationItem", swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);
  v55 = v17;
  objc_msgSend(v19, "_setLargeTitleAccessoryView:alignToBaseline:", v17, 0);

  v59 = objc_msgSend((id)v1, "navigationItem");
  v20 = *(_QWORD *)(v1 + v57);
  v21 = objc_msgSend((id)v1, "traitCollection", swift_bridgeObjectRetain(v20).n128_f64[0]);
  if ((unint64_t)v20 >> 62)
    goto LABEL_34;
  v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain(v4);
  swift_bridgeObjectRetain(v20);
  v23 = v21;
  if (v22)
  {
LABEL_22:
    v61 = v20 & 0xC000000000000001;
    v1 = 4;
    while (1)
    {
      v18 = (char **)v22;
      v25 = v1 - 4;
      if (v61)
      {
        v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v20);
        v27 = (char **)(v1 - 3);
        if (__OFADD__(v25, 1))
          goto LABEL_33;
      }
      else
      {
        v26 = *(_QWORD *)(v20 + 8 * v1);
        swift_retain(v26);
        v27 = (char **)(v1 - 3);
        if (__OFADD__(v25, 1))
        {
LABEL_33:
          __break(1u);
LABEL_34:
          if (v20 < 0)
            v32 = v20;
          else
            v32 = v20 & 0xFFFFFFFFFFFFFF8;
          swift_retain(v4);
          swift_bridgeObjectRetain(v20);
          v33 = v21;
          v22 = _CocoaArrayWrapper.endIndex.getter(v32);
          if (!v22)
            break;
          goto LABEL_22;
        }
      }
      v28 = v20;
      v29 = v21;
      if ((*(unsigned __int8 (**)(id))(v26 + 16))(v21) == 1)
      {
        v30 = *(_QWORD *)(v26 + 32);
        swift_retain(v4);
        swift_retain(v26);
        swift_bridgeObjectRetain(v30);
        v24 = sub_10021E5F4(v31, v26, v4);
        swift_bridgeObjectRelease(v30);
        swift_release_n(v26, 2);
        swift_release();
      }
      else
      {
        swift_release();
        v24 = _swiftEmptyArrayStorage;
      }
      sub_10001A304((uint64_t)v24);
      ++v1;
      v22 = (uint64_t)v18;
      v21 = v29;
      v20 = v28;
      if (v27 == v18)
      {
        swift_release();
        swift_bridgeObjectRelease(v28);
        v1 = v56;
        v18 = &selRef_fileURLWithPath_;
        goto LABEL_39;
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease(v20);
LABEL_39:

  swift_bridgeObjectRelease(v20);
  sub_10021D1A0((unint64_t)_swiftEmptyArrayStorage);
  v35 = v34;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v35)
  {
    v36 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v35);

  }
  else
  {
    v36 = 0;
  }
  objc_msgSend(v59, "setLeftBarButtonItem:", v36);

  v37 = objc_msgSend((id)v1, v18[56]);
  v38 = *(_QWORD *)(v1 + v57);
  v39 = objc_msgSend((id)v1, "traitCollection", swift_bridgeObjectRetain(v38).n128_f64[0]);
  if ((unint64_t)v38 >> 62)
  {
LABEL_56:
    if (v38 < 0)
      v50 = v38;
    else
      v50 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_retain(v4);
    swift_bridgeObjectRetain(v38);
    v51 = v39;
    v40 = _CocoaArrayWrapper.endIndex.getter(v50);
    if (v40)
      goto LABEL_44;
  }
  else
  {
    v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v4);
    swift_bridgeObjectRetain(v38);
    v41 = v39;
    if (v40)
    {
LABEL_44:
      v60 = v37;
      v62 = v39;
      v42 = v38 & 0xC000000000000001;
      v43 = 4;
      v44 = v38;
      while (1)
      {
        v39 = (id)v40;
        v46 = v43 - 4;
        if (v42)
        {
          v47 = specialized _ArrayBuffer._getElementSlowPath(_:)(v43 - 4, v38);
          v38 = v43 - 3;
          if (__OFADD__(v46, 1))
            goto LABEL_55;
        }
        else
        {
          v47 = *(_QWORD *)(v38 + 8 * v43);
          swift_retain(v47);
          v38 = v43 - 3;
          if (__OFADD__(v46, 1))
          {
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
        }
        if ((*(unsigned __int8 (**)(id))(v47 + 16))(v62) == 2)
        {
          v48 = *(_QWORD *)(v47 + 32);
          swift_retain(v4);
          swift_retain(v47);
          swift_bridgeObjectRetain(v48);
          v37 = sub_10021E5F4(v49, v47, v4);
          swift_bridgeObjectRelease(v48);
          swift_release_n(v47, 2);
          swift_release();
        }
        else
        {
          swift_release();
          v37 = _swiftEmptyArrayStorage;
        }
        sub_10001A304((uint64_t)v37);
        ++v43;
        v40 = (uint64_t)v39;
        v45 = v38 == (_QWORD)v39;
        v38 = v44;
        if (v45)
        {
          swift_release();
          swift_bridgeObjectRelease(v44);
          v37 = v60;
          v39 = v62;
          goto LABEL_61;
        }
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease(v38);
LABEL_61:

  swift_bridgeObjectRelease(v38);
  sub_10021D1A0((unint64_t)_swiftEmptyArrayStorage);
  v53 = v52;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v53)
  {
    v54 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v53);

  }
  else
  {
    v54 = 0;
  }
  objc_msgSend(v37, "setRightBarButtonItem:", v54);

}

uint64_t sub_10021DD2C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchController);
  v11 = objc_msgSend(v10, "searchBar", v7);
  objc_msgSend(v11, "resignFirstResponder");

  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_100746258, 24, 7);
  *(_QWORD *)(v14 + 16) = v10;
  aBlock[4] = sub_10021EA44;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100746270;
  v15 = _Block_copy(aBlock);
  v16 = v10;
  v17 = swift_release();
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v20 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v1, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_10021DFA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10021E108()
{
  return type metadata accessor for SearchViewController(0);
}

uint64_t type metadata accessor for SearchViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008162B8;
  if (!qword_1008162B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchViewController);
  return result;
}

void sub_10021E14C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[20];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = "\b";
  v4[6] = "\b";
  v4[7] = "\b";
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = "\b";
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[13] = &unk_100652EC0;
  v4[14] = "\b";
  v4[15] = &unk_100652ED8;
  v4[16] = "\b";
  sub_10021E224(319);
  if (v3 <= 0x3F)
  {
    v4[17] = *(_QWORD *)(v2 - 8) + 64;
    v4[18] = &unk_100652EC0;
    v4[19] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 20, v4, a1 + 80);
  }
}

void sub_10021E224(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100815780)
  {
    v2 = type metadata accessor for ImpressionMetrics(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100815780);
  }
}

uint64_t sub_10021E278()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_actionRunner));
}

uint64_t sub_10021E28C()
{
  return sub_10021BDE0();
}

void sub_10021E2AC(uint64_t a1, __n128 a2)
{
  sub_10021BF5C(a1, a2);
}

uint64_t sub_10021E2CC(uint64_t a1)
{
  return sub_10021D0C0(a1) & 1;
}

uint64_t sub_10021E2F0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x230))();
}

uint64_t sub_10021E314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100018ADC(a1, (uint64_t)v5, &qword_1008131E0);
  v6 = v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchContainerImpressionMetrics;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchContainerImpressionMetrics, v9, 33, 0);
  sub_1000393D8((uint64_t)v5, v6, &qword_1008131E0);
  return swift_endAccess(v9);
}

void sub_10021E3D0()
{
  sub_10021EC90();
}

char *sub_10021E3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  id v16;
  char *v17;
  _QWORD v19[5];
  _QWORD v20[5];

  v20[3] = type metadata accessor for UnimplementedAdvertLifecycleMetricsReporter(0);
  v20[4] = &protocol witness table for UnimplementedAdvertLifecycleMetricsReporter;
  v20[0] = a2;
  sub_10000EF80((uint64_t)v20, (uint64_t)v19);
  v6 = type metadata accessor for SearchFocusDiffablePagePresenter(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  swift_retain(a2);
  swift_retain(a1);
  v7 = swift_retain(a3);
  v8 = SearchFocusDiffablePagePresenter.init(objectGraph:sidePackedPage:supportsFastImpressions:advertLifecycleMetricsReporter:)(v7);
  v9 = sub_10000E720(&qword_100816310, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  v10 = sub_10000DAF8(&qword_100810390);
  v11 = type metadata accessor for Dependency(0);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100640720;
  v13 = type metadata accessor for AdvertRotationControllerProvider(0);
  sub_10000EF80((uint64_t)v20, (uint64_t)v19);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = swift_retain(v8);
  v19[0] = AdvertRotationControllerProvider.init(supportsAdvertRotation:advertLifecycleMetricsReporter:)(0, v19, v14);
  Dependency.init<A>(satisfying:with:)(v13, v19, v13);
  v15 = sub_1005A60D4(a3, v8, v9, v12, 0x6F46686372616573, 0xEF65676150737563);
  swift_release();
  swift_bridgeObjectRelease(v12);
  v16 = objc_allocWithZone((Class)type metadata accessor for SearchFocusDiffablePageViewController(0));
  v17 = sub_10005F67C(v8, v15);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v20);
  return v17;
}

void sub_10021E5D4()
{
  sub_10021D61C();
}

_QWORD *sub_10021E5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _BYTE v47[24];
  _QWORD *v48;

  v44 = a3;
  v6 = type metadata accessor for Accessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v45 = (uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (!v10)
    return result;
  v43[0] = v8;
  v43[1] = v3;
  v48 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v10);
  v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v13 = (_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(v7 + 72);
  while (1)
  {
    swift_beginAccess(v13, v47, 32, 0);
    v21 = *v13;
    if (*(_QWORD *)(*v13 + 16))
    {
      v22 = sub_10057F010(v12);
      if ((v23 & 1) != 0)
      {
        v24 = *(void **)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_endAccess(v47);
        v18 = v24;
        v25 = v18;
        goto LABEL_5;
      }
    }
    swift_endAccess(v47);
    sub_100454784(v44);
    v27 = v26;
    v28 = v45;
    sub_100090180(v12, v45, type metadata accessor for Accessory);
    swift_beginAccess(v13, v47, 33, 0);
    v25 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v13);
    v46 = (_QWORD *)*v13;
    v30 = v46;
    *v13 = 0x8000000000000000;
    v32 = sub_10057F010(v28);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v30[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v39 = v46;
        if ((v31 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_1001FCE44();
        v39 = v46;
        if ((v36 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_1001F6DFC(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_10057F010(v45);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_24;
      v32 = v37;
      v39 = v46;
      if ((v36 & 1) == 0)
      {
LABEL_16:
        v39[(v32 >> 6) + 8] |= 1 << v32;
        sub_100090180(v45, v39[6] + v32 * v14, type metadata accessor for Accessory);
        *(_QWORD *)(v39[7] + 8 * v32) = v25;
        v40 = v39[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_23;
        v39[2] = v42;
        goto LABEL_4;
      }
    }
    v15 = v39[7];
    v16 = 8 * v32;

    *(_QWORD *)(v15 + v16) = v25;
LABEL_4:
    v17 = *v13;
    *v13 = v39;
    swift_bridgeObjectRelease(v17);
    sub_1000340D8(v45, type metadata accessor for Accessory);
    v18 = (id)swift_endAccess(v47);
LABEL_5:
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v19 = v48[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
    v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v25);
    specialized ContiguousArray._endMutation()(v20);
    v12 += v14;
    if (!--v10)
      return v48;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v43[0]);
  __break(1u);
  return result;
}

void sub_10021E8D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchResultsContainerViewController);
  v2 = *(void **)(v1
                + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_activeSearchSectionViewController);
  if (v2)
  {
    v3 = type metadata accessor for SearchResultsDiffablePageViewController(0);
    if (swift_dynamicCastClass(v2, v3))
    {
      v6 = v2;
      sub_1004FDA1C(1);
      sub_10021C198();
      sub_10021C2C0(1);
LABEL_4:

      return;
    }
    v4 = type metadata accessor for SearchHintsViewController();
    if (swift_dynamicCastClass(v2, v4))
    {
      v5 = *(_QWORD *)(v1
                     + OBJC_IVAR____TtC20ProductPageExtension36SearchResultsContainerViewController_searchFocusViewController);
      v6 = v2;
      if (v5)
      {
        sub_1004FDA1C(3);
        sub_10021C198();
      }
      else
      {
        sub_1004FDA1C(0);
        sub_10021C198();
        sub_10021DD2C();
      }
      goto LABEL_4;
    }
    sub_1004FDA1C(0);
    sub_10021C198();
    sub_10021DD2C();
  }
  else
  {
    sub_10021C2C0(0);
  }
}

uint64_t sub_10021E9EC()
{
  return sub_10021ED24(40);
}

void sub_10021E9F4(uint64_t *a1)
{
  uint64_t v1;

  sub_1002187CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10021EA00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10021EA24(uint64_t a1)
{
  sub_10021CA7C(a1);
}

id sub_10021EA44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setActive:", 0);
}

uint64_t sub_10021EA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10021EA68(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10021EA70()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021EA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for GuidedSearchTokenCollection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10021EB08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GuidedSearchTokenCollection(0) - 8) + 80);
  sub_10021CDC4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_10021EB38()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_palettePresenter;
  v2 = type metadata accessor for NavigationBarPalettePresenter();
  v3 = swift_allocObject(v2, 66, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  *(_OWORD *)(v3 + 50) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_QWORD *)&v0[v1] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___resultsMessageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController____lazy_storage___tokenPalette] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_searchTextInput] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_actionRunner] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_showSearchLanding] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController] = 0;
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_activeSearchBarObservingViewController];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_pendingSearchAction] = 0;
  v5 = &v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_guidedSearchContainerImpressionMetrics];
  v6 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_prefersLargeTitle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_navigationAccessories] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/SearchViewController.swift", 47, 2, 180, 0);
  __break(1u);
}

void sub_10021EC90()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchViewController_facetNavigationController) = 0;
  if (v1)
  {
    v5 = v1;
    v2 = objc_msgSend(v1, "presentingViewController");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);

      v4 = v3;
    }
    else
    {
      v4 = v5;
    }

  }
}

uint64_t sub_10021ED1C()
{
  return sub_10021ED24(32);
}

uint64_t sub_10021ED24(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

double sub_10021ED5C()
{
  uint64_t v0;

  return sub_10021C8D4(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10021ED64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10021ED88()
{
  uint64_t v0;

  sub_10021C510(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10021ED94(uint64_t a1)
{
  uint64_t v1;

  return sub_10021A928(a1, *(char **)(v1 + 16));
}

uint64_t sub_10021ED9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10021EDC0(_QWORD *a1)
{
  uint64_t v1;

  return sub_10055D77C(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

id sub_10021EDC8(uint64_t a1)
{
  uint64_t v1;

  return sub_10021A7FC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10021EDD0()
{
  uint64_t v0;

  return sub_1002195EC(v0);
}

uint64_t sub_10021EDD8()
{
  uint64_t v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10021EDFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1003A9E70(a1, v1 + 16);
}

uint64_t sub_10021EE04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10021EE28(uint64_t a1, double a2)
{
  uint64_t v2;

  return sub_1003A9E74(a2, *(double *)(v2 + 32), a1, *(double (**)(void))(v2 + 16));
}

double sub_10021EE34(uint64_t a1)
{
  uint64_t v1;

  return sub_100218A84(a1, v1);
}

void sub_10021EE3C(uint64_t a1)
{
  uint64_t v1;

  sub_100218B6C(a1, v1);
}

void sub_10021EE44(void *a1)
{
  sub_10021AAA0(a1);
}

void sub_10021EE64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002196C4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10021EE6C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

char *sub_10021EED0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded] = 0;
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_pageGrid];
  v11 = type metadata accessor for PageGrid(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v4[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_sizeCategory] = 7;
  v4[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_originalSizeCategory] = 7;
  v4[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isTransitioning] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia] = 0;
  v12 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView;
  v13 = type metadata accessor for RevealingImageView(0);
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
  v15 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView;
  v17 = type metadata accessor for RevealingVideoView(0);
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");

  v22.receiver = v15;
  v22.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView];
  v20 = v18;
  objc_msgSend(v20, "addSubview:", v19);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView]);

  return v20;
}

void sub_10021F0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView);
  v3 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_sizeCategory;
  v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_sizeCategory);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_sizeCategory) = v4;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_mirrorDelegate);
  if (Strong)
  {
    v6 = Strong;
    (*(void (**)(uint64_t))((swift_isaMask & *Strong) + 0x128))(v4);

  }
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v8 = *(unsigned __int8 *)(v1 + v3);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory) = v8;
  v9 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate);
  if (v9)
  {
    v10 = v9;
    (*(void (**)(uint64_t))((swift_isaMask & *v9) + 0x118))(v8);

  }
}

uint64_t sub_10021F1C0(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_1000951BC();
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

void sub_10021F24C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t Strong;
  id v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;

  v2 = v1;
  v3 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_originalSizeCategory;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_originalSizeCategory) = a1;
  v4 = *(char **)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v5 = &v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  if (Strong)
  {
    v12 = (id)Strong;
    sub_10000E720(&qword_100816400, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_100667D20);
    v7 = objc_msgSend(v12, "superview");
    if (!v7)
    {
LABEL_6:

      return;
    }
    v8 = v7;
    sub_1000951BC();
    v9 = v4;
    v10 = v8;
    LOBYTE(v8) = static NSObject.== infix(_:_:)(v10, v9);

    if ((v8 & 1) != 0)
    {
      v11 = swift_unknownObjectWeakLoadStrong(v5);
      if (v11)
      {
        *(_BYTE *)(v11 + qword_1008674B0) = *(_BYTE *)(v2 + v3);
        v12 = (id)v11;
        sub_100323494();
        goto LABEL_6;
      }
    }
  }
}

void sub_10021F38C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  void *v12;
  void *v13;
  int v14;
  int v15;
  id v16;
  id v17;
  uint64_t v18;

  v7 = type metadata accessor for CornerStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == enum case for CornerStyle.continuous(_:))
  {
    v12 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView);
    objc_msgSend(v12, "_setContinuousCornerRadius:", a3);
    v13 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
    objc_msgSend(v13, "_setContinuousCornerRadius:", a3);
  }
  else
  {
    v14 = v11;
    v15 = enum case for CornerStyle.arc(_:);
    v12 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView);
    objc_msgSend(v12, "_setCornerRadius:", a3);
    v13 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
    objc_msgSend(v13, "_setCornerRadius:", a3);
    if (v14 != v15)
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v16 = objc_msgSend(v12, "layer");
  objc_msgSend(v16, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(a2));

  v17 = objc_msgSend(v13, "layer");
  objc_msgSend(v17, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(a2));

}

id sub_10021F560(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id result;

  v5 = v4;
  v9 = a2 & 1;
  if ((a2 & 1) == 0)
  {
    objc_msgSend(a1, "frame");
    objc_msgSend(v5, "setFrame:");
  }
  v10 = *(_BYTE **)&v5[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView];
  sub_10031BF28(*(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView], v9, a3, a4);
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView];
  sub_100481BB4(*(char **)&a1[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView], v9, a3);
  v12 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded;
  v13 = a1[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded];
  v5[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded] = v13;
  v10[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_isExpanded] = v13;
  objc_msgSend(v10, "setNeedsLayout");
  *(_BYTE *)(v11 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded) = v5[v12];
  sub_100480558();
  result = objc_msgSend(v5, "setHidden:", objc_msgSend(a1, "isHidden"));
  v5[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia] = a1[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia];
  return result;
}

id sub_10021F720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  void *v17;
  __n128 v18;
  uint64_t v19;
  id result;
  _BYTE v22[24];

  v1 = v0;
  v2 = sub_10000DAF8(&qword_100816410);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10000DAF8(&qword_100808E90);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_BYTE **)(v0 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView);
  v9 = type metadata accessor for Artwork.URLTemplate(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = (uint64_t)&v8[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_currentArtworkTemplate];
  swift_beginAccess(&v8[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_currentArtworkTemplate], v22, 33, 0);
  sub_1000393D8((uint64_t)v7, v10, &qword_100808E90);
  swift_endAccess(v22);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = (uint64_t)&v8[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_currentArtworkHandlerKey];
  swift_beginAccess(&v8[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_currentArtworkHandlerKey], v22, 33, 0);
  sub_1000393D8((uint64_t)v4, v12, &qword_100816410);
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_imageView], "setImage:", 0, swift_endAccess(v22).n128_f64[0]);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v14 = v13 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView;
  Strong = swift_unknownObjectWeakLoadStrong(v13 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  if (Strong)
  {
    v16 = (void *)Strong;
    *(_BYTE *)(Strong + qword_1008674B0) = 7;
    sub_100323494();

  }
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v14);
  swift_unknownObjectWeakAssign(v18);
  sub_100481308(v17);

  v19 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded) = 0;
  v8[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_isExpanded] = 0;
  objc_msgSend(v8, "setNeedsLayout");
  *(_BYTE *)(v13 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded) = *(_BYTE *)(v1 + v19);
  result = sub_100480558();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) = 0;
  return result;
}

void sub_10021F978(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  _BYTE v21[24];

  v4 = sub_10000DAF8(&qword_100816410);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v20[-v12];
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView)
      + OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_currentArtworkHandlerKey;
  swift_beginAccess(v14, v21, 0, 0);
  sub_100018ADC(v14, (uint64_t)v6, &qword_100816410);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_100816410);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    v15 = sub_10000E720(&qword_100816420, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    AnyHashable.init<A>(_:)(v10, v7, v15);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v20, a2 & 1);
    sub_100018968((uint64_t)v20);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  }
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = type metadata accessor for TodayCardVideoView(0);
    v19 = sub_10000E720(&qword_100816418, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_10066C71C);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v17, a2 & 1, v18, v19);

  }
}

void (*sub_10021FBA4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v3 = OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + v3);
  return sub_10021FBF4;
}

void sub_10021FBF4(uint64_t a1, char a2)
{
  void *v3;
  __n128 v4;
  id v5;
  id Strong;

  v3 = *(void **)a1;
  Strong = (id)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  swift_unknownObjectWeakAssign(v4);
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    sub_100481308(Strong);

  }
  else
  {
    sub_100481308(Strong);
  }

}

uint64_t sub_10021FCC0()
{
  return type metadata accessor for StoryCardMediaView(0);
}

uint64_t type metadata accessor for StoryCardMediaView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008163E0;
  if (!qword_1008163E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StoryCardMediaView);
  return result;
}

void sub_10021FD04(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100652FB8;
  sub_10021FD9C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100652FD0;
    v4[3] = &unk_100652FD0;
    v4[4] = &unk_100652FB8;
    v4[5] = &unk_100652FB8;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void sub_10021FD9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080C4F0[0])
  {
    v2 = type metadata accessor for PageGrid(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, qword_10080C4F0);
  }
}

uint64_t sub_10021FDF0()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
}

void sub_10021FE10(void *a1)
{
  uint64_t v1;
  void *Strong;
  __n128 v3;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  swift_unknownObjectWeakAssign(v3);
  sub_100481308(Strong);

}

uint64_t (*sub_10021FE80(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10021FBA4(v2);
  return sub_10001C148;
}

uint64_t sub_10021FEC4()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E720(&qword_100816408, type metadata accessor for StoryCardMediaView, (uint64_t)&unk_100653088);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_10021FF0C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_100816408, type metadata accessor for StoryCardMediaView, (uint64_t)&unk_100653088);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_10021FF6C(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E720(&qword_100816408, type metadata accessor for StoryCardMediaView, (uint64_t)&unk_100653088);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001C148;
}

uint64_t sub_10021FFE8()
{
  return sub_10000E720(&qword_1008163F0, type metadata accessor for StoryCardMediaView, (uint64_t)&unk_100652FE8);
}

uint64_t sub_100220014()
{
  return sub_10000E720(&qword_1008163F8, type metadata accessor for StoryCardMediaView, (uint64_t)&unk_100653018);
}

uint64_t sub_100220040()
{
  return sub_10000E720(&qword_100816400, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_100667D20);
}

uint64_t sub_10022006C(uint64_t a1, uint64_t a2, unsigned int a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _BYTE *v25;
  __n128 v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  double v37;
  __n128 v38;
  double v39;
  unsigned int *v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  char v46;
  double v47;
  double v48;
  void *v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  _BYTE *v63;
  _BYTE *v64;
  __n128 v65;
  _BYTE *v66;
  double v67;
  double v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  _BYTE v81[4];
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;

  v91 = a6;
  v82 = a3;
  v84 = a2;
  v89 = a1;
  v7 = type metadata accessor for Artwork.Format(0);
  __chkstk_darwin(v7);
  v96 = &v81[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Artwork.URLTemplate(0);
  v10 = __chkstk_darwin(v9);
  v92 = &v81[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for Artwork.Variant(0, v10);
  v94 = *(_QWORD *)(v12 - 8);
  v95 = v12;
  __chkstk_darwin(v12);
  v93 = &v81[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10000DAF8(&qword_100816428);
  v15 = __chkstk_darwin(v14);
  v17 = &v81[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = type metadata accessor for Artwork.Crop(0, v15);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v86 = &v81[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v87 = &v81[-v20];
  v21 = type metadata accessor for FloatingPointRoundingRule(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = &v81[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v85 = type metadata accessor for TodayCardArtworkLayout(0, v23);
  v83 = *(_QWORD *)(v85 - 8);
  v26 = __chkstk_darwin(v85);
  v28 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = type metadata accessor for TodayCardArtworkSizedLayoutMetrics.Priority(0, v26);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = &v81[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v33);
  v35 = &v81[-v34];
  v37 = static CGFloat.allColumns.getter(v36);
  v38.n128_f64[0] = PageGrid.componentMeasuringSize(spanning:)(v37);
  if (v82 == 6)
  {
    v39 = floor(v38.n128_f64[0]);
    v40 = (unsigned int *)&enum case for TodayCardArtworkSizedLayoutMetrics.Priority.extraWide(_:);
  }
  else
  {
    if (v82 == 5)
    {
      v41 = PageGrid.columnWidth.getter(v82);
    }
    else
    {
      if (v82 == 4)
      {
        v39 = floor((v38.n128_f64[0] - PageGrid.interColumnSpace.getter(v38)) * 0.5);
        v40 = (unsigned int *)&enum case for TodayCardArtworkSizedLayoutMetrics.Priority.mini(_:);
        goto LABEL_9;
      }
      sub_1004B8D9C(v82);
    }
    v39 = v41;
    v40 = (unsigned int *)&enum case for TodayCardArtworkSizedLayoutMetrics.Priority.none(_:);
  }
LABEL_9:
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v30 + 104))(v32, *v40, v29);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v35, v32, v29);
  v42 = Array<A>.bestArtworkLayoutMetrics(for:prioritizing:)(v35, v84, v39);
  v43 = (*(uint64_t (**)(_BYTE *, uint64_t))(v30 + 8))(v35, v29);
  *(double *)&v44 = COERCE_DOUBLE(TodayCardArtworkSizedLayoutMetrics.sourceSizeOverride.getter(v43));
  if ((v46 & 1) != 0)
  {
    v47 = Artwork.size.getter(v44);
    v48 = v50;
  }
  else
  {
    v47 = *(double *)&v44;
    v48 = v45;
  }
  v49 = v91;
  v51 = TodayCardArtworkSizedLayoutMetrics.layout(for:)(v91);
  v52 = TodayCardArtworkLayout.collapsedLayoutInsets.getter(v51);
  CGSize.subtracting(insets:)(v52);
  v54 = CGSize.scaled(_:)(a4 / v53, v47, v48);
  v56 = v55;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v22 + 104))(v25, enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:), v21);
  v57 = CGSize.rounded(_:)(v25, v54, v56);
  v59 = v58;
  (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v25, v21);
  (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v28, v85);
  TodayCardArtworkSizedLayoutMetrics.sourceCropOverride(for:)(v49);
  v60 = v88;
  v61 = v90;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v88 + 48))(v17, 1, v90) == 1)
  {
    v63 = v87;
    Artwork.crop.getter(v62);
    sub_100010F2C((uint64_t)v17, &qword_100816428);
  }
  else
  {
    v63 = v87;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 32))(v87, v17, v61);
  }
  v64 = v93;
  v65.n128_f64[0] = dispatch thunk of Artwork.bestVariant(prefersLayeredImage:)(0);
  v66 = v92;
  objc_msgSend(v49, "displayScale", Artwork.template.getter(v65));
  v68 = v67;
  v69 = v86;
  v70 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 16))(v86, v63, v61);
  v71 = v96;
  v72 = Artwork.Variant.format.getter(v70);
  v73 = v63;
  v74 = Artwork.Variant.quality.getter(v72);
  v76 = v75 & 1;
  v77 = type metadata accessor for ArtworkLoaderConfig(0);
  swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
  v78 = ArtworkLoaderConfig.init(template:size:scale:crop:format:quality:useWideGamut:)(v66, v69, v71, v74, v76, 0, v57, v59, v68);
  v79 = swift_release(v42);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v94 + 8))(v64, v95, v79);
  (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v73, v61);
  return v78;
}

void sub_1002205BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t Strong;
  void *v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  id v59;
  __n128 v60;
  void *v61;
  __n128 v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[6];

  v8 = v7;
  v90 = a7;
  v81 = a6;
  v78 = a5;
  v82 = a4;
  v88 = a3;
  v80 = a2;
  v10 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v10);
  v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_100811F10);
  __chkstk_darwin(v12);
  v87 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v86 = (char *)&v75 - v15;
  v17 = type metadata accessor for URL(0, v16);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v84 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DAF8(&qword_10080AA20);
  __chkstk_darwin(v20);
  v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v23);
  v85 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v75 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v75 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v75 - v32;
  v89 = a1;
  Video.videoUrl.getter(v34);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v36 = 1;
  v35(v33, 0, 1, v17);
  v83 = v8;
  v77 = *(char **)(v8 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v76 = &v77[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v77[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  if (Strong)
  {
    v38 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v30, Strong + qword_10086AA10, v17);

    v36 = 0;
  }
  v35(v30, v36, 1, v17);
  v39 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_100018ADC((uint64_t)v33, (uint64_t)v22, (uint64_t *)&unk_1008092A0);
  sub_100018ADC((uint64_t)v30, v39, (uint64_t *)&unk_1008092A0);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v40((uint64_t)v22, 1, v17) == 1)
  {
    sub_100010F2C((uint64_t)v30, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v33, (uint64_t *)&unk_1008092A0);
    if (v40(v39, 1, v17) == 1)
    {
      sub_100010F2C((uint64_t)v22, (uint64_t *)&unk_1008092A0);
      return;
    }
  }
  else
  {
    sub_100018ADC((uint64_t)v22, (uint64_t)v27, (uint64_t *)&unk_1008092A0);
    if (v40(v39, 1, v17) != 1)
    {
      v54 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v84, v39, v17);
      v55 = sub_10000E720((unint64_t *)&unk_10082CCF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v56 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v54, v17, v55);
      v57 = *(void (**)(char *, uint64_t))(v18 + 8);
      v57(v54, v17);
      sub_100010F2C((uint64_t)v30, (uint64_t *)&unk_1008092A0);
      sub_100010F2C((uint64_t)v33, (uint64_t *)&unk_1008092A0);
      v57(v27, v17);
      sub_100010F2C((uint64_t)v22, (uint64_t *)&unk_1008092A0);
      if ((v56 & 1) != 0)
        return;
      goto LABEL_9;
    }
    sub_100010F2C((uint64_t)v30, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v33, (uint64_t *)&unk_1008092A0);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
  }
  sub_100010F2C((uint64_t)v22, &qword_10080AA20);
LABEL_9:
  v41 = type metadata accessor for VideoViewManager(0);
  v42 = type metadata accessor for BaseObjectGraph(0);
  v43 = v90;
  v84 = (char *)v42;
  v44 = inject<A, B>(_:from:)(v41, v90, v41, v42);
  v45 = Video.playbackId.getter(v91, v44);
  v46 = (uint64_t)v85;
  Video.videoUrl.getter(v45);
  v47 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v35)(v46, 0, 1, v17);
  v48 = (uint64_t)v86;
  v49 = Video.templateMediaEvent.getter(v47);
  v50 = (uint64_t)v87;
  Video.templateClickEvent.getter(v49);
  v51 = type metadata accessor for TodayCardVideoView(0);
  v52 = sub_10000E720(&qword_100816400, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_100667D20);
  v53 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v91, v46, v88, v48, v50, v43, v51, v52);
  sub_100010F2C(v50, (uint64_t *)&unk_100811F10);
  sub_100010F2C(v48, (uint64_t *)&unk_100811F10);
  sub_100010F2C(v46, (uint64_t *)&unk_1008092A0);
  sub_100010F2C((uint64_t)v91, &qword_100809010);
  if (!v53)
  {
LABEL_12:
    swift_release();
    return;
  }
  if ((*((_BYTE *)v53 + qword_1008674B8) & 1) != 0)
  {

    goto LABEL_12;
  }
  v58 = v83;
  *((_BYTE *)v53 + qword_1008674B0) = *(_BYTE *)(v83
                                               + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_originalSizeCategory);
  v59 = v53;
  sub_100323494();
  swift_unknownObjectWeakAssign(v60);
  v61 = (void *)swift_unknownObjectWeakLoadStrong(v76);
  swift_unknownObjectWeakAssign(v62);
  v63 = v59;
  v64 = v77;
  sub_100481308(v61);

  v65 = v63;
  v66 = Video.preview.getter(v65);
  v67 = Artwork.size.getter(v66);
  v69 = v68;
  swift_release();
  v70 = type metadata accessor for PageGrid(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v79, v78, v70);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v72, 0, 1, v70);
  sub_100480A50(v53, v80, v72, v81, v67, v69);

  sub_100010F2C(v72, &qword_10082AF10);
  v73 = type metadata accessor for ArtworkLoader(0);
  inject<A, B>(_:from:)(v73, v43, v73, v84);
  v74 = sub_10000E720(&qword_100816418, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_10066C71C);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v82, 2, 1, v65, v51, v74);
  objc_msgSend(v64, "setHidden:", 0);
  objc_msgSend(*(id *)(v58 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView), "setHidden:", 1);
  swift_release();
  swift_release();

  *(_BYTE *)(v58 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) = 1;
}

void sub_100220D00()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded] = 0;
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_pageGrid];
  v2 = type metadata accessor for PageGrid(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_originalSizeCategory] = 7;
  v0[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isTransitioning] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia] = 0;
  v3 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView;
  v4 = type metadata accessor for RevealingImageView(0);
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  v5 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView;
  v6 = type metadata accessor for RevealingVideoView(0);
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/StoryCardMediaView.swift", 45, 2, 32, 0);
  __break(1u);
}

void sub_100220E20()
{
  qword_100866098 = 0x403C000000000000;
}

void sub_100220E30()
{
  qword_1008660A0 = 0x403E000000000000;
}

uint64_t sub_100220E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8(&qword_1008164B8);
  sub_100011980(v0, qword_100816430);
  sub_10000EFC4(v0, (uint64_t)qword_100816430);
  v5 = 10;
  v4 = 9;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for ContentMode(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

uint64_t sub_100220ED0()
{
  uint64_t v0;
  uint64_t KeyPath;
  __n128 v2;
  __n128 v3;
  uint64_t v4;
  id v6;
  id v7;

  v0 = sub_10000DAF8(&qword_1008164B0);
  sub_100011980(v0, qword_100816448);
  sub_10000EFC4(v0, (uint64_t)qword_100816448);
  KeyPath = swift_getKeyPath(&unk_100653138);
  v7 = sub_1004AF394(0xD00000000000001ELL, 0x8000000100694E60, 0, v2);
  v6 = sub_1004AF394(0xD000000000000017, 0x8000000100694E80, 0, v3);
  v4 = sub_100018B6C(0, (unint64_t *)&qword_100813270, UIImage_ptr);
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &v7, &v6, v4);
}

BOOL sub_100220FAC()
{
  void *v0;

  return objc_msgSend(v0, "userInterfaceLevel") == (id)1;
}

uint64_t sub_100220FD4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  UIColor v3;
  UIColor v4;
  UIColor v5;
  UIColor v6;
  Class v8;
  Class isa;

  v0 = sub_10000DAF8(&qword_1008164A8);
  sub_100011980(v0, qword_100816460);
  sub_10000EFC4(v0, (uint64_t)qword_100816460);
  KeyPath = swift_getKeyPath(&unk_100653138);
  v2 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v3.super.isa = (Class)static UIColor.hex(_:)(0x38463746374623, 0xE700000000000000);
  v4.super.isa = (Class)static UIColor.hex(_:)(0x33333033303323, 0xE700000000000000);
  isa = UIColor.init(light:dark:)(v3, v4).super.isa;
  v5.super.isa = (Class)static UIColor.hex(_:)(0x38463746374623, 0xE700000000000000);
  v6.super.isa = (Class)static UIColor.hex(_:)(0x45314331433123, 0xE700000000000000);
  v8 = UIColor.init(light:dark:)(v5, v6).super.isa;
  return Conditional<>.init(property:trueValue:falseValue:)(KeyPath, &isa, &v8, v2);
}

char *sub_1002210F8(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v32;
  void *v33;
  objc_super v34;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC20ProductPageExtension27EditorsChoiceBackgroundView_imageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");

  v34.receiver = v12;
  v34.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v34, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  v14 = qword_100804EE0;
  v15 = (char *)v13;
  if (v14 != -1)
    swift_once(&qword_100804EE0, sub_100220FD4);
  v16 = sub_10000DAF8(&qword_1008164A8);
  sub_10000EFC4(v16, (uint64_t)qword_100816460);
  v32 = v15;
  Conditional.evaluate(with:)(&v33, &v32, v16);
  v17 = v33;
  objc_msgSend(v15, "setBackgroundColor:", v33);

  v18 = OBJC_IVAR____TtC20ProductPageExtension27EditorsChoiceBackgroundView_imageView;
  v19 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension27EditorsChoiceBackgroundView_imageView];
  if (qword_100804ED8 != -1)
    swift_once(&qword_100804ED8, sub_100220ED0);
  v20 = sub_10000DAF8(&qword_1008164B0);
  sub_10000EFC4(v20, (uint64_t)qword_100816448);
  v32 = v15;
  Conditional.evaluate(with:)(&v33, &v32, v20);
  v21 = v33;
  objc_msgSend(v19, "setImage:", v33);

  v22 = *(void **)&v15[v18];
  if (qword_100804ED0 != -1)
    swift_once(&qword_100804ED0, sub_100220E40);
  v23 = sub_10000DAF8(&qword_1008164B8);
  sub_10000EFC4(v23, (uint64_t)qword_100816430);
  v32 = v15;
  Conditional.evaluate(with:)(&v33, &v32, v23);
  objc_msgSend(v22, "setContentMode:", v33);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[v18]);
  v24 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v25 = swift_allocObject(v24, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100640720;
  *(_QWORD *)(v25 + 32) = type metadata accessor for UITraitUserInterfaceLevel(0);
  *(_QWORD *)(v25 + 40) = &protocol witness table for UITraitUserInterfaceLevel;
  v26 = swift_allocObject(&unk_100746630, 24, 7);
  *(_QWORD *)(v26 + 16) = ObjectType;
  v27 = v15;
  UIView.registerForTraitChanges<A>(_:handler:)(v25, sub_1002217D4, v26, ObjectType);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v25);
  swift_release();
  v28 = swift_allocObject(v24, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100640720;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitLayoutDirection;
  v29 = swift_allocObject(&unk_100746658, 24, 7);
  *(_QWORD *)(v29 + 16) = ObjectType;
  v30 = v27;
  UIView.registerForTraitChanges<A>(_:handler:)(v28, sub_1002217EC, v29, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v28);
  swift_release();

  return v30;
}

void sub_100221484(char *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  void *v8;

  if (qword_100804EE0 != -1)
    swift_once(&qword_100804EE0, sub_100220FD4);
  v2 = sub_10000DAF8(&qword_1008164A8);
  sub_10000EFC4(v2, (uint64_t)qword_100816460);
  v7 = a1;
  Conditional.evaluate(with:)(&v8, &v7, v2);
  v3 = v8;
  objc_msgSend(a1, "setBackgroundColor:", v8);

  v4 = *(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension27EditorsChoiceBackgroundView_imageView];
  if (qword_100804ED8 != -1)
    swift_once(&qword_100804ED8, sub_100220ED0);
  v5 = sub_10000DAF8(&qword_1008164B0);
  sub_10000EFC4(v5, (uint64_t)qword_100816448);
  v7 = a1;
  Conditional.evaluate(with:)(&v8, &v7, v5);
  v6 = v8;
  objc_msgSend(v4, "setImage:", v8);

}

id sub_1002215B4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC20ProductPageExtension27EditorsChoiceBackgroundView_imageView);
  if (qword_100804ED0 != -1)
    swift_once(&qword_100804ED0, sub_100220E40);
  v3 = sub_10000DAF8(&qword_1008164B8);
  sub_10000EFC4(v3, (uint64_t)qword_100816430);
  v5 = a1;
  Conditional.evaluate(with:)(&v6, &v5, v3);
  return objc_msgSend(v2, "setContentMode:", v6);
}

uint64_t type metadata accessor for EditorsChoiceBackgroundView()
{
  return objc_opt_self(_TtC20ProductPageExtension27EditorsChoiceBackgroundView);
}

uint64_t sub_1002217C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002217D4(char *a1)
{
  sub_100221484(a1);
}

uint64_t sub_1002217DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002217EC(uint64_t a1)
{
  return sub_1002215B4(a1);
}

const char *sub_1002217F4()
{
  return "traitCollection";
}

id sub_100221800@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "traitCollection");
  *a2 = result;
  return result;
}

id sub_100221838@<X0>(id *a1@<X0>, BOOL *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "userInterfaceLevel");
  *a2 = result == (id)1;
  return result;
}

void sub_100221870(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  *(_QWORD *)(swift_allocObject(a4, 24, 7) + 16) = a3;
  if (a1 == a2)
  {
    v7 = a3;
LABEL_11:

    swift_release();
  }
  else
  {
    if (a2 >= a1)
    {
      a3;
      while (a1 < a2)
      {
        sub_100222F54(a1);
        if (v9)
        {
          v10 = v9;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
          v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v12 >= v11 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
          v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized Array._endMutation()(v8);
        }
        if (a2 == ++a1)
          goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1002219A0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t KeyPath;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14[2];
  _QWORD *v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = _swiftEmptyArrayStorage;
    if (!v2)
      return (uint64_t)v3;
    v15 = _swiftEmptyArrayStorage;
    result = sub_1001F16BC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      KeyPath = swift_getKeyPath(&unk_100653218);
      v13 = v7;
      v9 = v7;
      swift_getAtKeyPath(v14, &v13, KeyPath);
      swift_release();

      v15 = v3;
      v11 = v3[2];
      v10 = v3[3];
      if (v11 >= v10 >> 1)
      {
        sub_1001F16BC(v10 > 1, v11 + 1, 1);
        v3 = v15;
      }
      ++v5;
      v3[2] = v11 + 1;
      sub_100010E24(v14, (uint64_t)&v3[5 * v11 + 4]);
      if (v2 == v5)
        return (uint64_t)v3;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100221B38(void *a1)
{
  double v2;
  double v3;
  double v4;
  id v5;
  char v6;
  __n128 v7;
  __n128 v8;
  double v9;
  _QWORD v11[43];

  if (qword_100806AD8 != -1)
    swift_once(&qword_100806AD8, sub_100545BDC);
  sub_100225678((uint64_t)&xmmword_10086AF70, (uint64_t)v11);
  if (qword_100806AE0 != -1)
    swift_once(&qword_100806AE0, sub_1005460A4);
  sub_100547CBC((uint64_t)v11, (uint64_t)&xmmword_10086B0D0, a1, 0.0);
  v3 = v2;
  sub_1002256B4(v11);
  v4 = sub_1002256E8(a1);
  v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  v6 = static UIContentSizeCategory.> infix(_:_:)(v5, UIContentSizeCategoryExtraLarge);

  if ((v6 & 1) != 0)
  {
    v7.n128_u64[0] = 0;
    v8.n128_u64[0] = 8.0;
  }
  else
  {
    v7.n128_u64[0] = 20.0;
    v8.n128_u64[0] = 20.0;
  }
  v9 = static UIEdgeInsets.vertical(top:bottom:)(v7, v8);
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double))VerticalFlexStackLayout.Metrics.init(fixedChildHeight:minInterChildSpacing:maxInterChildSpacing:layoutMargins:))(ceil(v3), 0, *(_QWORD *)&v4, 0, 0, 1, v9);
}

void sub_100221C84()
{
  qword_1008164C0 = 0x4030000000000000;
}

id sub_100221C94(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  double left;
  double bottom;
  double right;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD v22[4];
  objc_super v23;

  swift_weakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph], 0);
  swift_weakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader], 0);
  v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] = 0;
  swift_weakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsCalculator], 0);
  v9 = &v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lastContentWidth] = 0;
  v10 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells;
  *(_QWORD *)&v4[v10] = sub_10050CA40(_swiftEmptyArrayStorage);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isDragging] = 0;
  v11 = &v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = (objc_class *)type metadata accessor for TodayListCardLockupContainer();
  v23.receiver = v4;
  v23.super_class = v12;
  v13 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  sub_100222938();
  v18 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100640720;
  *(_QWORD *)(v19 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v19 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v22[3] = v12;
  v22[0] = v17;
  v20 = v17;
  UIView.registerForTraitChanges(_:target:action:)(v19, v22, "applySizeCategoryUpdates");
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v19);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v22);
  return v20;
}

void sub_100221F9C(double a1, double a2, double a3, double a4)
{
  unsigned __int8 *v4;
  objc_class *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double Height;
  uint64_t v19;
  objc_super v20;
  objc_super v21;
  CGRect v22;
  CGRect v23;

  v9 = (objc_class *)type metadata accessor for TodayListCardLockupContainer();
  v21.receiver = v4;
  v21.super_class = v9;
  objc_msgSendSuper2(&v21, "frame");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v20.receiver = v4;
  v20.super_class = v9;
  objc_msgSendSuper2(&v20, "setFrame:", a1, a2, a3, a4);
  objc_msgSend(v4, "frame");
  Height = CGRectGetHeight(v22);
  v23.origin.x = v11;
  v23.origin.y = v13;
  v23.size.width = v15;
  v23.size.height = v17;
  if (Height != CGRectGetHeight(v23))
  {
    v19 = v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid];
    v4[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 1;
    sub_10022208C(v19);
  }
}

uint64_t sub_10022208C(uint64_t result)
{
  _BYTE *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _BYTE v15[24];

  if (v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] != 1
    || (result & 1) != 0)
  {
    return result;
  }
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells], v15, 0, 0);
  v3 = *v2;
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain(v3);
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_7;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v8)
      goto LABEL_25;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_25;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_25;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_24:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_7:
    result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11)+ OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView), "setNeedsLayout");
  }
  v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_25:
    swift_release(v3);
    return (uint64_t)objc_msgSend(v1, "setNeedsLayout");
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_25;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100222244()
{
  char *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  objc_super v26;
  CGRect v27;
  CGRect v28;

  v1 = (unsigned __int8 *)v0;
  swift_getObjectType();
  v2 = type metadata accessor for VerticalFlexStackLayout.Metrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for TodayListCardLockupContainer();
  v26.receiver = v0;
  v26.super_class = v6;
  objc_msgSendSuper2(&v26, "layoutSubviews");
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v25 = v7;
    else
      v25 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded];
  v10 = LayoutMarginsAware<>.layoutFrame.getter(v6);
  v12 = v11;
  v14 = v13;
  v15 = objc_msgSend(v1, "traitCollection", v10);
  v16 = v15;
  if (v9 == 1)
  {

  }
  else
  {
    sub_100221B38(v15);
    v17 = static VerticalFlexStackLayout.estimatedChildFitCount(in:metrics:)(v5, v12, v14);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    if (v8 >= v17)
      v20 = v17;
    else
      v20 = v8;
    if ((v19 & 1) != 0)
      v8 &= v8 >> 63;
    else
      v8 = v20;
  }
  v21 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lastContentWidth;
  v22 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lastContentWidth];
  v27.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v6);
  if (v22 != CGRectGetWidth(v27)
    || *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit] != v8)
  {
    v23 = v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid];
    v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 1;
    sub_10022208C(v23);
  }
  if (v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] == 1)
  {
    Strong = swift_weakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph]);
    swift_release();
    if (Strong)
    {
      *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit] = v8;
      sub_100222DB8(v8);
      sub_1002224B4();
      v28.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v6);
      *(CGFloat *)&v1[v21] = CGRectGetWidth(v28);
    }
  }
}

void sub_1002224B4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t i;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(__n128);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD aBlock[6];

  swift_getObjectType();
  v2 = type metadata accessor for VerticalFlexStackLayout.Metrics(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VerticalFlexStackLayout(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - v10;
  Strong = swift_weakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph]);
  swift_release();
  if (!Strong || v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] != 1)
    return;
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit];
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v39 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid;
  v40 = v0;
  v14 = v0;
  v44 = v14;
  sub_100221870(0, v13, v14, (uint64_t)&unk_1007467A0);
  v1 = v15;
  v16 = objc_msgSend(v14, "traitCollection");
  v17 = v5;
  v18 = v16;
  sub_100221B38(v16);

  v19 = sub_1002219A0(v1);
  VerticalFlexStackLayout.init(metrics:children:)(v4, v19);
  v20 = objc_opt_self(UIView);
  v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v41 = v11;
  v21(v8, v11, v17);
  v22 = *(unsigned __int8 *)(v6 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = (v7 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_100746728, v24 + 8, v22 | 7);
  v42 = v6;
  v43 = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v25 + v23, v8, v17);
  v26 = v44;
  *(_QWORD *)(v25 + v24) = v44;
  v27 = swift_allocObject(&unk_100746750, 32, 7);
  *(_QWORD *)(v27 + 16) = sub_100225E68;
  *(_QWORD *)(v27 + 24) = v25;
  aBlock[4] = sub_100036D9C;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100184A1C;
  aBlock[3] = &unk_100746768;
  v28 = _Block_copy(aBlock);
  v8 = v26;
  swift_retain(v27);
  objc_msgSend((id)v20, "performWithoutAnimation:", v28, swift_release().n128_f64[0]);
  _Block_release(v28);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation(v27, "", 111, 215, 40, 1);
  swift_release();
  if ((v20 & 1) != 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    if (v1 < 0)
      v33 = v1;
    else
      v33 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (v29)
      goto LABEL_7;
    goto LABEL_19;
  }
  if ((unint64_t)v1 >> 62)
    goto LABEL_15;
  v29 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  if (v29)
  {
LABEL_7:
    if (v29 < 1)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v29; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      else
        v31 = (char *)*(id *)(v1 + 8 * i + 32);
      v32 = v31;
      sub_1002244C4(v31, i);

    }
  }
LABEL_19:
  swift_bridgeObjectRelease_n(v1, 2);
  v34 = &v8[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock];
  swift_beginAccess(&v8[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock], aBlock, 0, 0);
  v35 = *(void (**)(__n128))v34;
  if (*(_QWORD *)v34)
  {
    v36 = *((_QWORD *)v34 + 1);
    v37 = swift_retain(v36);
    v35(v37);
    sub_100018908((uint64_t)v35, v36);
  }
  v38 = v40[v39];
  v40[v39] = 0;
  sub_10022208C(v38);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  swift_release();
}

void sub_1002228AC(int a1, id a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  objc_msgSend(a2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend(a2, "traitCollection");
  VerticalFlexStackLayout.place(at:with:)(v4, v6, v8, v10);

}

uint64_t sub_100222938()
{
  unsigned __int8 *v0;
  NSString *v1;
  id v2;
  NSString *v3;
  NSString *v4;
  uint64_t result;
  NSString *v6;
  id v7;
  char v8;
  UIContentSizeCategory v9;
  id v10;
  NSString *v11;
  NSString *v12;
  NSString *v13;
  id v14;
  char v15;
  uint64_t v16;

  v1 = (NSString *)objc_msgSend(v0, "traitCollection");
  v2 = -[NSString preferredContentSizeCategory](v1, "preferredContentSizeCategory");
  v3 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v4 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  result = static UIContentSizeCategory.<= infix(_:_:)(v3, v4);
  if ((result & 1) != 0)
  {
    if ((static UIContentSizeCategory.>= infix(_:_:)(v2, v3) & 1) != 0)
    {
      v6 = v4;
      v7 = v2;
      v8 = static UIContentSizeCategory.<= infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        v9 = v3;
LABEL_12:

        objc_msgSend(v0, "setMaximumContentSizeCategory:", v9);
        v16 = v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid];
        v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 1;
        sub_10022208C(v16);
        return (uint64_t)objc_msgSend(v0, "setNeedsLayout");
      }
    }
    else
    {

    }
    v10 = -[NSString preferredContentSizeCategory](v1, "preferredContentSizeCategory");
    v11 = UIContentSizeCategoryAccessibilityMedium;
    v12 = UIContentSizeCategoryAccessibilityExtraLarge;
    result = static UIContentSizeCategory.<= infix(_:_:)(v11, v12);
    if ((result & 1) != 0)
    {
      if ((static UIContentSizeCategory.>= infix(_:_:)(v10, v11) & 1) != 0)
      {
        v13 = v12;
        v14 = v10;
        v15 = static UIContentSizeCategory.<= infix(_:_:)(v14, v13);

        if ((v15 & 1) != 0)
          v9 = UIContentSizeCategoryAccessibilityLarge;
        else
          v9 = 0;
      }
      else
      {

        v9 = 0;
        v1 = v11;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100222B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  _BYTE v25[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader);
  if (!Strong)
    goto LABEL_25;
  v3 = Strong;
  v4 = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph);
  if (!v4)
  {
LABEL_24:
    swift_release();
LABEL_25:
    v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v21);
    v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages) = 0;
    swift_bridgeObjectRelease(v22);
    swift_weakAssign(v1, 0);
    v23 = *(unsigned __int8 *)(v0
                             + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid);
    *(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid) = 1;
    sub_10022208C(v23);
    return;
  }
  v5 = v4;
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells, v25, 0, 0);
  v7 = *v6;
  v8 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v7 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(v7);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_7;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v18 >= v12)
      goto LABEL_23;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v12)
        goto LABEL_23;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v12)
          goto LABEL_23;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_22:
    v11 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_7:
    v16 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v15);
    v24[3] = type metadata accessor for TodayCardSmallLockupCollectionViewCell();
    v24[0] = v16;
    v17 = v16;
    tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v24, v3, v5, 1);

    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v24);
  }
  v20 = v18 + 3;
  if (v20 >= v12)
  {
LABEL_23:
    swift_release();
    swift_release();
    goto LABEL_24;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v12)
      goto LABEL_23;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

double sub_100222DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  double result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  _QWORD v18[4];
  uint64_t v19;
  _BYTE v20[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells);
  *(_QWORD *)&result = swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells, v20, 0, 0).n128_u64[0];
  v5 = *(_QWORD *)(*v3 + 16);
  if (v5 > a1)
  {
    Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader);
    if (Strong)
    {
      v7 = Strong;
      v8 = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph);
      if (v8)
      {
        v9 = v8;
        do
        {
          swift_beginAccess(v3, v18, 33, 0);
          v10 = sub_10057E820(a1);
          if ((v11 & 1) != 0)
          {
            v12 = v10;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
            v14 = *v3;
            v19 = *v3;
            *v3 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1001FC644();
              v14 = v19;
            }
            v15 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v12);
            sub_1001F88B8(v12, v14);
            v16 = *v3;
            *v3 = v14;
            swift_bridgeObjectRelease(v16);
            swift_endAccess(v18);
            v18[3] = type metadata accessor for TodayCardSmallLockupCollectionViewCell();
            v18[0] = v15;
            v17 = v15;
            tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v18, v7, v9, 1);
            _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
            objc_msgSend(v17, "removeFromSuperview");

          }
          else
          {
            swift_endAccess(v18);
          }
          ++a1;
        }
        while (v5 != a1);
        swift_release();
      }
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_100222F54(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char *v16;
  char *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  id v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  char v36[24];

  v2 = v1;
  v4 = type metadata accessor for ComponentLayoutOptions(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups;
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups];
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v31 = v9;
    else
      v31 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v9);
    if (v32 <= a1)
      return;
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
    return;
  }
  v10 = *(_QWORD *)&v2[v8];
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
    {
      v11 = *(_QWORD *)(v10 + 8 * a1 + 32);
      swift_retain(v11);
      goto LABEL_7;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain(*(_QWORD *)&v2[v8]);
  v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v10);
  swift_bridgeObjectRelease(v10);
LABEL_7:
  v12 = &v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells], v36, 0, 0);
  v13 = *(_QWORD *)v12;
  if (*(_QWORD *)(*(_QWORD *)v12 + 16) && (v14 = sub_10057E820(a1), (v15 & 1) != 0))
  {
    v16 = (char *)*(id *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  }
  else
  {
    v17 = sub_100225B9C();
    objc_msgSend(v17, "setAutoresizingMask:", 2);
    objc_msgSend(v2, "addSubview:", v17);
    swift_beginAccess(v12, v35, 33, 0);
    v16 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v12);
    v34 = *(_QWORD *)v12;
    *(_QWORD *)v12 = 0x8000000000000000;
    sub_1001F9CB8((uint64_t)v16, a1, isUniquelyReferenced_nonNull_native);
    v19 = *(_QWORD *)v12;
    *(_QWORD *)v12 = v34;
    swift_bridgeObjectRelease(v19);
    swift_endAccess(v35);
  }
  v20 = objc_msgSend(v16, "contentView");
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  Strong = swift_weakLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph]);
  if (Strong)
  {
    v22 = Strong;
    v23 = sub_10000DAF8((uint64_t *)&unk_100816580);
    v24 = swift_allocObject(v23, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 2 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
    *(_OWORD *)(v24 + 16) = xmmword_100640600;
    v25 = static ComponentLayoutOptions.separatorHidden.getter(v24);
    static ComponentLayoutOptions.fixedHeightContainer.getter(v25);
    v35[0] = v24;
    v26 = sub_10000E720((unint64_t *)&qword_100812DC0, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
    v27 = sub_10000DAF8(&qword_100816590);
    v28 = sub_100225DA8();
    dispatch thunk of SetAlgebra.init<A>(_:)(v35, v27, v28, v4, v26);
    v29 = objc_msgSend(v2, "traitCollection");
    sub_1000585B4(v11, v22);
    swift_release();

    v30 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v30);
  }
  else
  {
    swift_release();
  }
}

double sub_1002232C0()
{
  char *v0;
  void *Strong;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double x;
  double y;
  double width;
  double height;
  double v18;
  double v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  if ((v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] & 1) == 0
    && (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView]),
        Strong,
        Strong)
    && (v2 = objc_msgSend(v0, "window")) != 0)
  {
    v3 = v2;
    objc_msgSend(v0, "bounds");
    v5 = v4;
    objc_msgSend(v3, "convertRect:fromCoordinateSpace:", v0);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    objc_msgSend(v3, "bounds");
    v23.origin.x = v7;
    v23.origin.y = v9;
    v23.size.width = v11;
    v23.size.height = v13;
    v22 = CGRectIntersection(v21, v23);
    x = v22.origin.x;
    y = v22.origin.y;
    width = v22.size.width;
    height = v22.size.height;
    if (!CGRectIsEmpty(v22))
    {
      objc_msgSend(v3, "convertRect:toCoordinateSpace:", v0, x, y, width, height);
      v5 = v20;
    }

  }
  else
  {
    objc_msgSend(v0, "bounds");
    return v18;
  }
  return v5;
}

void sub_100223434()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  char v12;
  void *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  objc_super v19;

  v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
  objc_msgSendSuper2(&v19, "didMoveToSuperview");
  v2 = objc_msgSend(v0, "superview");
  if (v2)
  {
    v3 = v2;
    while (1)
    {
      v4 = objc_opt_self(UICollectionView);
      v5 = swift_dynamicCastObjCClass(v3, v4);
      if (v5)
        break;
      v6 = objc_msgSend(v3, "superview");

      v3 = v6;
      if (!v6)
        goto LABEL_5;
    }
    v9 = v5;
    v7 = &v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView];
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView]);
    if (Strong)
    {
      v11 = (void *)Strong;
      sub_100018B6C(0, (unint64_t *)&unk_100813260, UICollectionView_ptr);
      v3 = v3;
      v12 = static NSObject.== infix(_:_:)(v9, v11);

      if ((v12 & 1) != 0)
        goto LABEL_13;
    }
  }
  else
  {
LABEL_5:
    v7 = &v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView];
    v8 = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView]);
    if (!v8)
      return;

    v3 = 0;
  }
  v13 = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (v13)
  {
    v15 = v13;
    objc_msgSend(v13, "_removeScrollViewScrollObserver:", v1);

  }
  v16 = swift_unknownObjectWeakAssign(v14);
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v16);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "_addScrollViewScrollObserver:", v1);

    v3 = v18;
  }
LABEL_13:

}

void sub_100223648(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup;
  if ((*(_BYTE *)(v2
                 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup
                 + 8) & 1) == 0)
  {
    v7 = *(_QWORD *)v6;
    v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells);
    swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells, &v16, 0, 0);
    v9 = *v8;
    if (*(_QWORD *)(v9 + 16))
    {
      v10 = sub_10057E820(v7);
      if ((v11 & 1) != 0)
        objc_msgSend(*(id *)(*(_QWORD *)(v9 + 56) + 8 * v10), "setHighlighted:", 0);
    }
  }
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  if ((a2 & 1) == 0)
  {
    v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells);
    swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells, v17, 0, 0);
    v13 = *v12;
    if (*(_QWORD *)(v13 + 16))
    {
      v14 = sub_10057E820(a1);
      if ((v15 & 1) != 0)
        objc_msgSend(*(id *)(*(_QWORD *)(v13 + 56) + 8 * v14), "setHighlighted:", 1);
    }
  }
}

void sub_10022374C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  unsigned int v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[24];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells);
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells, v22, 0, 0);
  v8 = *v7;
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(v8);
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_5:
    v17 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v16);
    objc_msgSend(v17, "convertPoint:fromCoordinateSpace:", v3, a2, a3);
    v18 = objc_msgSend(v17, "pointInside:withEvent:", a1);

    if (v18)
      goto LABEL_21;
  }
  v19 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v19 >= v13)
    goto LABEL_21;
  v20 = *(_QWORD *)(v9 + 8 * v19);
  ++v14;
  if (v20)
    goto LABEL_20;
  v14 = v19 + 1;
  if (v19 + 1 >= v13)
    goto LABEL_21;
  v20 = *(_QWORD *)(v9 + 8 * v14);
  if (v20)
    goto LABEL_20;
  v14 = v19 + 2;
  if (v19 + 2 >= v13)
    goto LABEL_21;
  v20 = *(_QWORD *)(v9 + 8 * v14);
  if (v20)
  {
LABEL_20:
    v12 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v14 << 6);
    goto LABEL_5;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
  {
LABEL_21:
    swift_release(v8);
    return;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v14 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v14 >= v13)
      goto LABEL_21;
    v20 = *(_QWORD *)(v9 + 8 * v14);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
}

void sub_100223928(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  __n128 v14;
  _QWORD v15[4];

  v2 = v1;
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups);
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups));
    specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v8);
    swift_bridgeObjectRelease(v8);
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_14:
    __break(1u);
    return;
  }
  swift_retain(*(_QWORD *)(v8 + 8 * a1 + 32));
LABEL_5:
  v10 = Lockup.clickAction.getter(v9);
  if (v10)
  {
    v11 = v10;
    Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph);
    if (Strong)
    {
      v13 = Strong;
      if (UIResponder.nearestActionRunner.getter())
      {
        dispatch thunk of Lockup.clickSender.getter(v15);
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v4);
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v11, v15, v7, v13);
        swift_release();
        swift_release();
        swift_release();
        v14 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
        sub_100010F2C((uint64_t)v15, &qword_100808F20);
        return;
      }
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  swift_release();
}

void sub_100223AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  char v13;
  uint64_t v14;
  void *v15;
  NSSet v16;
  objc_super v17;
  objc_super v18;
  objc_super v19;
  objc_super v20;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded) == 1)
  {
    v5 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch;
    v6 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch);
    if (!v6
      || objc_msgSend(v6, "phase") == (id)3
      || (v7 = *(void **)(v2 + v5)) != 0 && objc_msgSend(v7, "phase") == (id)4)
    {
      swift_bridgeObjectRetain(a1);
      v9 = (void *)sub_1004EA504(v8);
      *(_QWORD *)&v10 = swift_bridgeObjectRelease(a1).n128_u64[0];
      if (v9)
      {
        objc_msgSend(v9, "locationInView:", v2, v10);
        sub_10022374C(a2, v11, v12);
        sub_100223648(v14, v13 & 1);
        v15 = *(void **)(v2 + v5);
        *(_QWORD *)(v2 + v5) = v9;

        sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
        sub_100225F48();
        v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
        v17.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
        objc_msgSendSuper2(&v17, "touchesBegan:withEvent:", v16.super.isa, a2, v2, v17.super_class, v18.receiver, v18.super_class, v19.receiver, v19.super_class, v20.receiver, v20.super_class);
      }
      else
      {
        sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
        sub_100225F48();
        v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
        v18.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
        objc_msgSendSuper2(&v18, "touchesBegan:withEvent:", v16.super.isa, a2, v17.receiver, v17.super_class, v2, v18.super_class, v19.receiver, v19.super_class, v20.receiver, v20.super_class);
      }
    }
    else
    {
      sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
      sub_100225F48();
      v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
      v19.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
      objc_msgSendSuper2(&v19, "touchesBegan:withEvent:", v16.super.isa, a2, v17.receiver, v17.super_class, v18.receiver, v18.super_class, v2, v19.super_class, v20.receiver, v20.super_class);
    }
  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v20.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
    objc_msgSendSuper2(&v20, "touchesBegan:withEvent:", v16.super.isa, a2, v17.receiver, v17.super_class, v18.receiver, v18.super_class, v19.receiver, v19.super_class, v2, v20.super_class);
  }

}

void sub_100223D18(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  NSSet v16;
  objc_class *v17;
  char v18[24];
  objc_super v19;
  objc_super v20;
  objc_super v21;

  v3 = v2;
  if (v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] != 1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v21.receiver = v3;
    v21.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
    objc_msgSendSuper2(&v21, "touchesEnded:withEvent:", v16.super.isa, a2);
    goto LABEL_15;
  }
  v6 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch;
  v7 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch];
  if (!v7)
  {
LABEL_14:
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v20.receiver = v3;
    v20.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
    objc_msgSendSuper2(&v20, "touchesEnded:withEvent:", v16.super.isa, a2);
    goto LABEL_15;
  }
  v8 = v7;
  if ((sub_10057625C(v8, a1) & 1) == 0)
  {

    goto LABEL_14;
  }
  v9 = *(void **)&v3[v6];
  *(_QWORD *)&v3[v6] = 0;

  v10 = &v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup];
  if ((v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup + 8] & 1) == 0)
  {
    v11 = *(_QWORD *)v10;
    if ((v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isDragging] & 1) != 0)
    {
LABEL_8:
      v12 = &v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells];
      swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells], v18, 0, 0);
      v13 = *(_QWORD *)v12;
      if (*(_QWORD *)(v13 + 16))
      {
        v14 = sub_10057E820(v11);
        if ((v15 & 1) != 0)
          objc_msgSend(*(id *)(*(_QWORD *)(v13 + 56) + 8 * v14), "setHighlighted:", 0);
      }
      goto LABEL_11;
    }
    sub_100223928(*(_QWORD *)v10);
    if ((v10[8] & 1) == 0)
    {
      v11 = *(_QWORD *)v10;
      goto LABEL_8;
    }
  }
LABEL_11:
  *(_QWORD *)v10 = 0;
  v10[8] = 1;

  sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
  sub_100225F48();
  v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
  v17 = (objc_class *)type metadata accessor for TodayListCardLockupContainer();
  v19.receiver = v3;
  v19.super_class = v17;
  objc_msgSendSuper2(&v19, "touchesEnded:withEvent:", v16.super.isa, a2);
LABEL_15:

}

double sub_100223F40(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
  v10 = sub_100225F48();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_100223FD8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  NSSet v12;
  objc_class *v13;
  char v14[24];
  objc_super v15;
  objc_super v16;

  v3 = v2;
  if (v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] == 1)
  {
    v5 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch] = 0;

    v6 = &v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup];
    if ((v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup + 8] & 1) == 0)
    {
      v7 = *(_QWORD *)v6;
      v8 = (uint64_t *)&v2[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells];
      swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells], v14, 0, 0);
      v9 = *v8;
      if (*(_QWORD *)(v9 + 16))
      {
        v10 = sub_10057E820(v7);
        if ((v11 & 1) != 0)
          objc_msgSend(*(id *)(*(_QWORD *)(v9 + 56) + 8 * v10), "setHighlighted:", 0);
      }
    }
    *(_QWORD *)v6 = 0;
    v6[8] = 1;
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v12.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v13 = (objc_class *)type metadata accessor for TodayListCardLockupContainer();
    v15.receiver = v3;
    v15.super_class = v13;
    objc_msgSendSuper2(&v15, "touchesCancelled:withEvent:", v12.super.isa, a2);
  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v12.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v16.receiver = v3;
    v16.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
    objc_msgSendSuper2(&v16, "touchesCancelled:withEvent:", v12.super.isa, a2);
  }

}

void sub_100224160(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v4;
  _QWORD v5[5];
  _QWORD v6[43];

  if (a1 >= 1)
  {
    __chkstk_darwin(a1);
    v5[2] = v2;
    v5[3] = a2;
    v4 = (void *)UITraitCollection.modifyingTraits(_:)(sub_100225670, v5);
    if (qword_100806AD8 != -1)
      swift_once(&qword_100806AD8, sub_100545BDC);
    sub_100225678((uint64_t)&xmmword_10086AF70, (uint64_t)v6);
    if (qword_100806AE0 != -1)
      swift_once(&qword_100806AE0, sub_1005460A4);
    sub_100547CBC((uint64_t)v6, (uint64_t)&xmmword_10086B0D0, a2, 0.0);
    sub_1002256B4(v6);
    if (qword_100804EE8 != -1)
      swift_once(&qword_100804EE8, sub_100221C84);

  }
}

void sub_1002242D8(uint64_t a1, int a2, id a3)
{
  id v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  id v9;
  char v10;
  id v11;
  NSString *v12;
  NSString *v13;
  id v14;
  char v15;
  NSString *v16;
  uint64_t v17;
  uint64_t v18;
  NSString *v19;

  v5 = objc_msgSend(a3, "preferredContentSizeCategory");
  v6 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v7 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v6, v7) & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v5, v6) & 1) != 0)
  {
    v8 = v7;
    v9 = v5;
    v10 = static UIContentSizeCategory.<= infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
      goto LABEL_10;
  }
  else
  {

  }
  v11 = objc_msgSend(a3, "preferredContentSizeCategory");
  v19 = UIContentSizeCategoryAccessibilityMedium;
  v12 = UIContentSizeCategoryAccessibilityExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v19, v12) & 1) == 0)
  {
LABEL_14:
    __break(1u);
    return;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v11, v19) & 1) == 0)
  {

    return;
  }
  v13 = v12;
  v14 = v11;
  v15 = static UIContentSizeCategory.<= infix(_:_:)(v14, v13);

  if ((v15 & 1) != 0)
  {
    v6 = UIContentSizeCategoryAccessibilityLarge;
LABEL_10:
    v16 = v6;
    v17 = *(_QWORD *)(a1 + 24);
    v18 = *(_QWORD *)(a1 + 32);
    sub_100085788(a1, v17);
    UIMutableTraits.preferredContentSizeCategory.setter(v16, v17, v18);
  }
}

void sub_1002244C4(char *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Swift::Bool v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[4];
  _QWORD v43[5];
  UIImage_optional v44;

  v5 = type metadata accessor for Artwork.Style(0, a2);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v42[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.Crop(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader);
  if (!Strong)
    return;
  v14 = Strong;
  v15 = swift_weakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph);
  if (!v15)
  {
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups);
  v41 = v15;
  if ((v16 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v16);
    v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v16);
    swift_bridgeObjectRelease(v16);
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v17 = *(_QWORD *)(v16 + 8 * a2 + 32);
  swift_retain(v17);
LABEL_7:
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages);
  if (!v18)
    goto LABEL_16;
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_16;
  v19 = sub_10057E820(a2);
  if ((v20 & 1) == 0)
    goto LABEL_16;
  v21 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  if (!dispatch thunk of Lockup.artwork.getter(v21))
  {

LABEL_16:
    v43[3] = type metadata accessor for Lockup(0);
    v43[4] = sub_10000E720((unint64_t *)&qword_100816570, (uint64_t (*)(uint64_t))&type metadata accessor for Lockup, (uint64_t)&protocol conformance descriptor for Lockup);
    v43[0] = v17;
    v42[3] = type metadata accessor for TodayCardSmallLockupCollectionViewCell();
    v42[0] = a1;
    swift_retain(v17);
    v40 = a1;
    tryToFetch(artworkFor:into:on:asPartOf:)(v43, v42, v14, v41);
    swift_release();
    swift_release();
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v42);
    sub_100010F2C((uint64_t)v43, &qword_100819230);
    return;
  }
  v23 = Artwork.crop.getter(v22);
  v24 = Artwork.Crop.preferredContentMode.getter(v23);
  v25 = v12;
  v26 = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
  v27 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView];
  v28 = (double *)(v27 + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics);
  swift_beginAccess(v27 + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics, v43, 0, 0);
  Artwork.config(_:mode:prefersLayeredImage:)(v26, 0, *v28, v28[1]);
  v29 = *(id *)(v27 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  Artwork.style.getter(v29);
  v30 = ArtworkView.style.setter(v8);
  *(_QWORD *)&v31 = Artwork.contentMode.getter(v30).n128_u64[0];
  v33 = ArtworkLoaderConfig.size.getter(objc_msgSend(v29, "setContentMode:", v32, v31, v41));
  v35 = ArtworkView.imageSize.setter(v33, v34);
  v36 = Artwork.backgroundColor.getter(v35);
  if (!v36)
  {
    v37 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v36 = static UIColor.placeholderBackground.getter(v37);
  }
  ArtworkView.backgroundColor.setter(v36);
  objc_msgSend(v29, "setContentMode:", v26);
  v38 = v21;
  v44.value.super.isa = (Class)v21;
  v44.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v44, v39);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
}

id sub_100224868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups];
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v6);
  swift_weakAssign(&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader], a2);
  swift_weakAssign(&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph], a3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit] = 0;
  v7 = v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid];
  v3[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 1;
  sub_10022208C(v7);
  return objc_msgSend(v3, "setNeedsLayout");
}

id sub_100224904(char *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  __n128 v25;
  void *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  id result;
  char *v48;
  uint64_t v49;
  id v50;
  char v51[24];

  v3 = objc_msgSend(a1, "maximumContentSizeCategory");
  objc_msgSend(v1, "setMaximumContentSizeCategory:", v3);

  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups];
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  Strong = swift_weakLoadStrong(&a1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph]);
  swift_weakAssign(&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph], Strong);
  swift_release();
  v7 = swift_weakLoadStrong(&a1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader]);
  swift_weakAssign(&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader], v7);
  swift_release();
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit] = 0;
  v8 = v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid];
  v1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 1;
  v48 = v1;
  sub_10022208C(v8);
  v9 = &a1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells];
  swift_beginAccess(&a1[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells], v51, 0, 0);
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)v9 + 64;
  v12 = 1 << *(_BYTE *)(*(_QWORD *)v9 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(*(_QWORD *)v9 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)v9);
  v16 = 0;
  v49 = v11;
  if (!v14)
    goto LABEL_7;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v28)) + (v16 << 6))
  {
    v19 = 8 * i;
    v20 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + v19);
    v21 = *(char **)(*(_QWORD *)(v10 + 56) + v19);
    v22 = *(void **)(*(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView]
                   + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    v23 = v21;
    v24 = v22;
    v26 = (void *)ArtworkView.image.getter(v25);

    if (v26)
    {
      v50 = v26;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v32 = sub_10057E820(v20);
      v33 = _swiftEmptyDictionarySingleton[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_39;
      v36 = v31;
      if (_swiftEmptyDictionarySingleton[3] >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1001FC478();
      }
      else
      {
        sub_1001F6110(v35, isUniquelyReferenced_nonNull_native);
        v37 = sub_10057E820(v20);
        if ((v36 & 1) != (v38 & 1))
          goto LABEL_41;
        v32 = v37;
      }
      if ((v36 & 1) != 0)
      {
        v39 = _swiftEmptyDictionarySingleton[7];

        *(_QWORD *)(v39 + 8 * v32) = v50;
        v40 = v50;
      }
      else
      {
        _swiftEmptyDictionarySingleton[(v32 >> 6) + 8] |= 1 << v32;
        *(_QWORD *)(_swiftEmptyDictionarySingleton[6] + 8 * v32) = v20;
        *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v32) = v50;
        v41 = _swiftEmptyDictionarySingleton[2];
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_40;
        v40 = v50;
        _swiftEmptyDictionarySingleton[2] = v43;
      }

      swift_bridgeObjectRelease(0x8000000000000000);
      v11 = v49;
      if (v14)
        goto LABEL_4;
    }
    else
    {

      if (v14)
        goto LABEL_4;
    }
LABEL_7:
    v27 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v27 >= v15)
      goto LABEL_33;
    v28 = *(_QWORD *)(v11 + 8 * v27);
    ++v16;
    if (!v28)
    {
      v16 = v27 + 1;
      if (v27 + 1 >= v15)
        goto LABEL_33;
      v28 = *(_QWORD *)(v11 + 8 * v16);
      if (!v28)
      {
        v16 = v27 + 2;
        if (v27 + 2 >= v15)
          goto LABEL_33;
        v28 = *(_QWORD *)(v11 + 8 * v16);
        if (!v28)
          break;
      }
    }
LABEL_20:
    v14 = (v28 - 1) & v28;
  }
  v29 = v27 + 3;
  if (v29 < v15)
  {
    v28 = *(_QWORD *)(v11 + 8 * v29);
    if (!v28)
    {
      while (1)
      {
        v16 = v29 + 1;
        if (__OFADD__(v29, 1))
          break;
        if (v16 >= v15)
          goto LABEL_33;
        v28 = *(_QWORD *)(v11 + 8 * v16);
        ++v29;
        if (v28)
          goto LABEL_20;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
      return result;
    }
    v16 = v29;
    goto LABEL_20;
  }
LABEL_33:
  swift_release();
  if (_swiftEmptyDictionarySingleton[2])
  {
    v44 = v48;
    v45 = *(_QWORD *)&v48[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages];
    *(_QWORD *)&v48[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages] = _swiftEmptyDictionarySingleton;
    v46 = swift_bridgeObjectRelease(v45).n128_u64[0];
  }
  else
  {
    v46 = swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton).n128_u64[0];
    v44 = v48;
  }
  return objc_msgSend(v44, "setNeedsLayout", *(double *)&v46, v48);
}

void sub_100224D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  __n128 v42;
  BOOL v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52[24];
  char v53[24];

  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v46 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v53, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v13 = (char *)Strong;
    v14 = a2 + 16;
    swift_beginAccess(v14, v52, 0, 0);
    if (swift_weakLoadStrong(v14))
    {
      v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit];
      if (v15 < 0)
        goto LABEL_22;
      v45 = v13;
      v3 = v13;
      sub_100221870(0, v15, v3, (uint64_t)&unk_100746700);
      v2 = v16;
      if (v16 >> 62)
        goto LABEL_23;
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v16);
      for (; v17; v17 = _CocoaArrayWrapper.endIndex.getter(v44))
      {
        v50 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups;
        v51 = v2 & 0xC000000000000001;
        v18 = 4;
        v48 = v17;
        v49 = v2;
        while (1)
        {
          v19 = v18 - 4;
          v20 = v51
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v2)
              : *(id *)(v2 + 8 * v18);
          v21 = v20;
          v2 = v18 - 3;
          if (__OFADD__(v19, 1))
            break;
          v22 = *(_QWORD *)&v3[v50];
          if ((v22 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain(*(_QWORD *)&v3[v50]);
            specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v22);
            swift_bridgeObjectRelease(v22);
          }
          else
          {
            if (v19 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_21;
            swift_retain(*(_QWORD *)(v22 + 8 * v18));
          }
          Lockup.impressionMetrics.getter(v23);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          {
            swift_release();
            sub_100010F2C((uint64_t)v8, &qword_1008131E0);
          }
          else
          {
            v24 = v46;
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v46, v8, v9);
            objc_msgSend(v21, "frame");
            v26 = v25;
            v28 = v27;
            v30 = v29;
            v32 = v31;
            v33 = objc_msgSend(v3, "superview");
            objc_msgSend(v3, "convertRect:toView:", v33, v26, v28, v30, v32);
            v35 = v34;
            v37 = v36;
            v39 = v38;
            v41 = v40;

            ImpressionsCalculator.addElement(_:at:)(v24, v35, v37, v39, v41);
            v42 = swift_release();
            (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v24, v9, v42);
          }

          v43 = v2 == v48;
          v2 = v49;
          if (v43)
            goto LABEL_27;
          ++v18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        if (v2 < 0)
          v44 = v2;
        else
          v44 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v2);
      }
LABEL_27:
      swift_bridgeObjectRelease_n(v2, 2);
      swift_release();
      v13 = v45;
    }

  }
}

id sub_100225090()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayListCardLockupContainer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TodayListCardLockupContainer()
{
  return objc_opt_self(_TtC20ProductPageExtension28TodayListCardLockupContainer);
}

uint64_t sub_10022518C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_1002251D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_10022522C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_1000DFF0C;
}

uint64_t sub_10022529C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_1002252F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_100225350(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_100225394(uint64_t a1, uint64_t a2))()
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_allocObject(&unk_100746688, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_1007466B0, 24, 7);
  swift_weakInit(v4 + 16, a2);
  v5 = swift_allocObject(&unk_1007466D8, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_100225498;
}

uint64_t sub_100225424()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100225448()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10022546C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100225498()
{
  uint64_t v0;

  sub_100224D18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1002254A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease(a1);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v2)
    goto LABEL_21;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v4 = swift_retain(*(_QWORD *)(a1 + 8 * i + 32));
      if (Lockup.icon.getter(v4))
      {
        if (qword_100806AE0 != -1)
          swift_once(&qword_100806AE0, sub_1005460A4);
        v5 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_10086B0D0, *((double *)&xmmword_10086B0D0 + 1));
        swift_release();
        swift_release();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
        v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v8 >= v7 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
        v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v5);
        specialized Array._endMutation()(v9);
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

void sub_100225670(uint64_t a1)
{
  uint64_t v1;

  sub_1002242D8(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_100225678(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TodayCardLockupLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1002256B4(_QWORD *a1)
{
  destroy for TodayCardLockupLayout.Metrics(a1);
  return a1;
}

double sub_1002256E8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v1 = objc_msgSend(a1, "preferredContentSizeCategory");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v2 == v5 && v4 == v6)
    goto LABEL_14;
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
LABEL_15:

    return 20.0;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v4 = v11;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v10 == v12 && v4 == v13)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v4, 2);
    goto LABEL_15;
  }
  v15 = v13;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v4, v12, v13, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) != 0)
    goto LABEL_15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
  v19 = v18;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v22 = v20;
  if (v17 == v21 && v19 == v20)
    goto LABEL_13;
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v20, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v22);
  if ((v24 & 1) != 0)
    goto LABEL_17;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v19 = v26;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v29 = v27;
  if (v25 == v28 && v19 == v27)
    goto LABEL_13;
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v19, v28, v27, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v29);
  if ((v30 & 1) != 0)
    goto LABEL_17;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  v33 = v32;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v36 = v34;
  if (v31 == v35 && v33 == v34)
  {
    swift_bridgeObjectRelease_n(v33, 2);
LABEL_26:

    return 8.0;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v36);
  if ((v37 & 1) != 0)
    goto LABEL_26;
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
  v19 = v39;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v42 = v40;
  if (v38 == v41 && v19 == v40)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v19, 2);
LABEL_17:

    return 0.0;
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v19, v41, v40, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v42);
  if ((v43 & 1) != 0)
    goto LABEL_17;
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
  v46 = v45;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v44 == v48 && v46 == v47)
  {

    swift_bridgeObjectRelease_n(v46, 2);
    return 0.0;
  }
  v49 = v44;
  v50 = v47;
  v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v46, v48, v47, 0);

  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v50);
  result = 8.0;
  if ((v51 & 1) != 0)
    return 0.0;
  return result;
}

void sub_100225A4C()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;

  swift_weakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_objectGraph], 0);
  swift_weakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_artworkLoader], 0);
  v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] = 0;
  swift_weakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsCalculator], 0);
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_impressionsUpdateBlock];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lockups] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isListLayoutInvalid] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_lastContentWidth] = 0;
  v2 = OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells;
  *(_QWORD *)&v0[v2] = sub_10050CA40(_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_prefetchedLockupImages] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_nearestCollectionView]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_currentTouch] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isDragging] = 0;
  v3 = &v0[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_indexForHighlightedLockup];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/TodayListCardLockupContainer.swift", 55, 2, 94, 0);
  __break(1u);
}

char *sub_100225B9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  double left;
  double bottom;
  double right;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TodayCardSmallLockupCollectionViewCell()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v7 = (char *)*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView];
  objc_msgSend(v7, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v8 = qword_100806030;
  v9 = *(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel];
  if (v8 != -1)
    swift_once(&qword_100806030, sub_1004C5EA4);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10000EFC4(v10, (uint64_t)qword_100869180);
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13(v2, v11, v10);
  v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v14(v2, 0, 1, v10);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v2);

  v15 = qword_100806058;
  v16 = *(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
  if (v15 != -1)
    swift_once(&qword_100806058, sub_1004C5F24);
  v17 = sub_10000EFC4(v10, (uint64_t)qword_1008691F8);
  v13(v2, v17, v10);
  v14(v2, 0, 1, v10);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v2);

  return v3;
}

unint64_t sub_100225DA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100816598;
  if (!qword_100816598)
  {
    v1 = sub_100010DE0(&qword_100816590);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100816598);
  }
  return result;
}

uint64_t sub_100225DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for VerticalFlexStackLayout(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100225E68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for VerticalFlexStackLayout(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1002228AC(v0 + v2, *(id *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100225EA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100225EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100225EC8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void *sub_100225ED0()
{
  return &protocol witness table for UIView;
}

_QWORD *sub_100225EDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for TodayCardSmallLockupCollectionViewCell();
  return Measurable.placeable.getter(a1, v2, &protocol witness table for UIView);
}

uint64_t sub_100225F24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100225F48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008165A0;
  if (!qword_1008165A0)
  {
    v1 = sub_100018B6C(255, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1008165A0);
  }
  return result;
}

void sub_100225FA0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[24];
  CGRect v3;

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells, v2, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) < *(_QWORD *)(v0
                                                     + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_limit))
  {
    v3.origin.x = sub_1002232C0();
    if (CGRectGetHeight(v3) > COERCE_DOUBLE(1))
      sub_1002224B4();
  }
}

id sub_10022601C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  char *v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  NSString v22;
  NSString v23;
  id v24;
  id v25;
  objc_super v27;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v5, a2);
  v11 = OBJC_IVAR____TtC20ProductPageExtension39OnboardingLocationPrivacyViewController_iconView;
  v12 = objc_allocWithZone((Class)UIImageView);
  v13 = v5;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, "init");
  v14 = &v13[OBJC_IVAR____TtC20ProductPageExtension39OnboardingLocationPrivacyViewController_continueCallback];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v15 = &v13[OBJC_IVAR____TtC20ProductPageExtension39OnboardingLocationPrivacyViewController_manageCallback];
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = a4;
  swift_retain(a2);
  swift_retain(a4);

  v16._object = (void *)0x8000000100695090;
  v16._countAndFlagsBits = 0xD00000000000002BLL;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v16, v17)._object;
  v19._countAndFlagsBits = 0xD00000000000002CLL;
  v19._object = (void *)0x80000001006950C0;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = localizedString(_:comment:)(v19, v20)._object;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v27.receiver = v13;
  v27.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v27, "initWithTitle:detailText:icon:contentLayout:", v22, v23, 0, 2);

  v25 = v24;
  objc_msgSend(v25, "setModalInPresentation:", 1);

  swift_release(a2);
  swift_release(a4);
  return v25;
}

void sub_1002261D0()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  NSString v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  NSString v28;
  id v29;
  uint64_t v30;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  objc_super v36;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SystemImage(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36.receiver = v1;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "viewDidLoad", v9);
  v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 54.0);
  v13 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension39OnboardingLocationPrivacyViewController_iconView];
  v31 = v12;
  objc_msgSend(v13, "setPreferredSymbolConfiguration:");
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for SystemImage.locationSquareFill(_:), v7);
  v14 = (void *)static SystemImage.load(_:with:)(v11, 0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  objc_msgSend(v13, "setImage:", v14);

  v15 = objc_msgSend(v1, "headerView");
  v16 = objc_msgSend(v15, "customIconContainerView");

  if (v16)
  {
    objc_msgSend(v16, "addSubview:", v13);

  }
  v17 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v18._countAndFlagsBits = 0xD00000000000002ELL;
  v18._object = (void *)0x80000001006951A0;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v18, v19)._object;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setTitle:forState:", v21, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v17, "addTarget:action:forControlEvents:", v1, "didTapContinue", 64);
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  static AutomationSemantics.onboarding(elementName:id:parentId:)(0x75426E4F6E727574, 0xEC0000006E6F7474, &v34, &v32);
  sub_10001282C((uint64_t)&v32);
  sub_10001282C((uint64_t)&v34);
  UIView.setAutomationSemantics(_:)(v6);
  v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  v23 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v23, "addButton:", v17);

  v24 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
  v25._object = (void *)0x80000001006951D0;
  v25._countAndFlagsBits = 0xD00000000000002CLL;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = localizedString(_:comment:)(v25, v26)._object;
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setTitle:forState:", v28, 0, swift_bridgeObjectRelease(v27).n128_f64[0]);

  objc_msgSend(v24, "addTarget:action:forControlEvents:", v1, "didTapManage", 64);
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  static AutomationSemantics.onboarding(elementName:id:parentId:)(0x4266664F6E727574, 0xED00006E6F747475, &v34, &v32);
  sub_10001282C((uint64_t)&v32);
  sub_10001282C((uint64_t)&v34);
  UIView.setAutomationSemantics(_:)(v6);
  v22(v6, v3);
  v29 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v29, "addButton:", v24);

}

uint64_t sub_10022662C()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[6];
  objc_super v23;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v1;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidLayoutSubviews", v10);
  sub_100226820();
  sub_10006E46C();
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = swift_allocObject(&unk_100746820, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  aBlock[4] = sub_100226D34;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100746838;
  v16 = _Block_copy(aBlock);
  v17 = swift_release();
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100071858();
  v19 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v20 = sub_10004EA04();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v3, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_100226820()
{
  char *v0;
  id v1;
  void *v2;
  double MidX;
  double v4;
  double MidY;
  double v6;
  double Width;
  id v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  v1 = objc_msgSend(v0, "headerView");
  v8 = objc_msgSend(v1, "customIconContainerView");

  if (v8)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension39OnboardingLocationPrivacyViewController_iconView];
    objc_msgSend(v2, "sizeToFit");
    objc_msgSend(v8, "bounds");
    MidX = CGRectGetMidX(v9);
    objc_msgSend(v2, "frame");
    v4 = MidX - CGRectGetWidth(v10) * 0.5;
    objc_msgSend(v8, "bounds");
    MidY = CGRectGetMidY(v11);
    objc_msgSend(v2, "frame");
    v6 = MidY - CGRectGetHeight(v12) * 0.5;
    objc_msgSend(v2, "frame");
    Width = CGRectGetWidth(v13);
    objc_msgSend(v2, "frame");
    objc_msgSend(v2, "setFrame:", v4, v6, Width, CGRectGetHeight(v14));

  }
}

void sub_10022697C(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  double MidX;
  void *v4;
  id v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  int v15;
  uint64_t v16;
  void *v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  int v27;
  uint64_t v28;
  void *v29;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  CGRect v33;
  CGRect v34;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v32, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  MidX = 0.0;
  if (Strong
    && (v4 = Strong,
        v5 = objc_msgSend(Strong, "headerView"),
        v4,
        v6 = objc_msgSend(v5, "customIconContainerView"),
        v5,
        v6))
  {
    objc_msgSend(v6, "bounds");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v33.origin.x = v8;
    v33.origin.y = v10;
    v33.size.width = v12;
    v33.size.height = v14;
    MidX = CGRectGetMidX(v33);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  swift_beginAccess(v1, v31, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v1);
  if (!v16)
  {
    if ((v15 & 1) != 0)
      return;
    goto LABEL_12;
  }
  v17 = (void *)v16;
  v18 = objc_retain(*(id *)(v16
                          + OBJC_IVAR____TtC20ProductPageExtension39OnboardingLocationPrivacyViewController_iconView));

  objc_msgSend(v18, "frame");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v34.origin.x = v20;
  v34.origin.y = v22;
  v34.size.width = v24;
  v34.size.height = v26;
  if (MidX == CGRectGetMidX(v34))
    v27 = v15;
  else
    v27 = 1;
  if (v27 == 1)
  {
LABEL_12:
    swift_beginAccess(v1, v30, 0, 0);
    v28 = swift_unknownObjectWeakLoadStrong(v1);
    if (v28)
    {
      v29 = (void *)v28;
      sub_100226820();

    }
  }
}

uint64_t type metadata accessor for OnboardingLocationPrivacyViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension39OnboardingLocationPrivacyViewController);
}

uint64_t sub_100226D10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100226D34()
{
  uint64_t v0;

  sub_10022697C(v0);
}

uint64_t sub_100226D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100226D4C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100226D54()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0, v2);
  sub_100011980(v5, qword_1008660A8);
  sub_10000EFC4(v5, (uint64_t)qword_1008660A8);
  if (qword_100806950 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v6 = sub_10000EFC4(v0, (uint64_t)qword_10086AAF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0xD000000000000018, 0x80000001006532A0);
}

void sub_100226F9C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t *v14;
  uint64_t v15;
  char v16[24];

  v3 = v2;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension24UpsellGridViewController_gridView];
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension24UpsellGridViewController_artworkLoader];
  v8 = objc_msgSend(v3, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "bounds");
    v11 = v10;
    v13 = v12;

    *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_primaryIcon) = a1;
    swift_retain(a1);
    swift_release();
    v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons);
    swift_beginAccess(v6 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons, v16, 1, 0);
    v15 = *v14;
    *v14 = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_artworkLoader) = v7;
    swift_release();
    swift_retain(v7);
    sub_1004464E0(v11, v13);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for UpsellGridViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension24UpsellGridViewController);
}

uint64_t sub_100227164()
{
  return sub_1002271AC(&qword_100816630, (uint64_t)&unk_1006532DC);
}

uint64_t sub_100227188()
{
  return sub_1002271AC(&qword_100816638, (uint64_t)&unk_100653304);
}

uint64_t sub_1002271AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UpsellGridViewController();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002271E8(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  _QWORD v19[4];

  v3 = type metadata accessor for OSLogger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804EF0 != -1)
    swift_once(&qword_100804EF0, sub_100226D54);
  v7 = sub_10000EFC4(v3, (uint64_t)qword_1008660A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v9 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 2 * *(_QWORD *)(v9 + 72), *(unsigned __int8 *)(v9 + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD000000000000025, 0x8000000100685BE0);
  swift_getErrorValue(a1, v18, &v16);
  v11 = v16;
  v12 = v17;
  v19[3] = v17;
  v13 = sub_1000119C0(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v13, v11, v12);
  static LogMessage.safe(_:)(v19);
  sub_10001282C((uint64_t)v19);
  Logger.error(_:)(v10, v3, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
}

uint64_t sub_100227390@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = type metadata accessor for AdPlacementType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for AdPlacementType.searchLanding(_:))
  {
    static AppStoreConfig.thetis.getter();
  }
  else
  {
    if (v8 == enum case for AdPlacementType.searchResults(_:))
    {
      v9 = type metadata accessor for AppStoreConfig(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
    }
    if (v8 == enum case for AdPlacementType.today(_:))
    {
      static AppStoreConfig.iris.getter();
    }
    else if (v8 == enum case for AdPlacementType.productPageYMAL(_:))
    {
      static AppStoreConfig.flora.getter();
    }
    else
    {
      if (v8 != enum case for AdPlacementType.productPageYMALDuringDownload(_:))
      {
        v12 = type metadata accessor for AppStoreConfig(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      static AppStoreConfig.metis.getter();
    }
  }
  v11 = type metadata accessor for AppStoreConfig(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
}

__n128 sub_10022752C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #20.0 }
  xmmword_100816640 = (__int128)result;
  *(__n128 *)&qword_100816650 = result;
  return result;
}

char *sub_100227540(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  objc_class *v28;
  id v29;
  double left;
  double bottom;
  double right;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(_QWORD *, char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  void (*v69)(char *, uint64_t);
  void *v70;
  char *v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  UIContentSizeCategory v96;
  char *v97;
  uint64_t v98;
  void (*v99)(_QWORD *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  _QWORD v105[3];
  uint64_t v106;
  void *v107;
  _QWORD v108[3];
  uint64_t v109;
  void *v110;
  objc_super v111;

  v9 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  v10 = __chkstk_darwin(v9);
  v97 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FontSource(0, v10);
  v103 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v94 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v90 - v19;
  v21 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_materialBackground;
  v22 = objc_allocWithZone((Class)UIVisualEffectView);
  v23 = v4;
  *(_QWORD *)&v4[v21] = objc_msgSend(v22, "init");
  v24 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView;
  v25 = type metadata accessor for SmallLockupView(0);
  *(_QWORD *)&v23[v24] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)), "init");
  v26 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_tapGestureRecognizer;
  *(_QWORD *)&v23[v26] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v27 = &v23[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_selectionHandler];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;

  v28 = (objc_class *)type metadata accessor for CarouselItemLockupOverlay();
  v111.receiver = v23;
  v111.super_class = v28;
  v29 = objc_msgSendSuper2(&v111, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v33 = (char *)v29;
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v33, "setOverrideUserInterfaceStyle:", 2);
  v91 = v33;
  v96 = UIContentSizeCategoryExtraExtraExtraLarge;
  objc_msgSend(v33, "setMaximumContentSizeCategory:");
  if (qword_100804E70 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  v34 = sub_10000EFC4(v15, (uint64_t)qword_100865F50);
  v35 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v98 = v15;
  v92 = v35;
  v35(v20, (char *)v34, v15);
  SmallLockupLayout.Metrics.artworkSize.setter(60.0, 60.0);
  v104 = v20;
  if (qword_1008066E8 != -1)
    swift_once(&qword_1008066E8, sub_1004C9C0C);
  v95 = v16;
  v36 = type metadata accessor for FontUseCase(0);
  v37 = sub_10000EFC4(v36, (uint64_t)qword_10086A590);
  v93 = *(_QWORD *)(v36 - 8);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  v38(v14, v37, v36);
  v39 = v103;
  v40 = *(void (**)(char *))(v103 + 104);
  v41 = enum case for FontSource.useCase(_:);
  v40(v14);
  v42 = type metadata accessor for StaticDimension(0);
  v109 = v42;
  v110 = &protocol witness table for StaticDimension;
  sub_1000119C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v43 = sub_1000119C0(v105);
  v99 = *(void (**)(_QWORD *, char *, uint64_t))(v39 + 16);
  v99(v43, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 14.0);
  v103 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  SmallLockupLayout.Metrics.headingSpace.setter(v108);
  if (qword_1008066F0 != -1)
    swift_once(&qword_1008066F0, sub_1004C9C28);
  v44 = sub_10000EFC4(v36, (uint64_t)qword_10086A5A8);
  v100 = v44;
  v38(v14, v44, v36);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v41, v12);
  v109 = v42;
  v101 = v36;
  v110 = &protocol witness table for StaticDimension;
  sub_1000119C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v45 = sub_1000119C0(v105);
  v99(v45, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 24.0);
  v90 = v42;
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  v46 = v38;
  SmallLockupLayout.Metrics.titleRegularSpace.setter(v108);
  v47 = v101;
  v38(v14, v44, v101);
  v102 = v38;
  v48 = v41;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v41, v12);
  v109 = v42;
  v110 = &protocol witness table for StaticDimension;
  sub_1000119C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v49 = sub_1000119C0(v105);
  v50 = v99;
  v99(v49, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 18.0);
  v51 = (void (*)(char *, uint64_t))v103;
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  SmallLockupLayout.Metrics.titleMediumSpace.setter(v108);
  v52 = v100;
  v46(v14, v100, v47);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v48, v12);
  v53 = v90;
  v109 = v90;
  v110 = &protocol witness table for StaticDimension;
  sub_1000119C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v54 = sub_1000119C0(v105);
  v50(v54, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 18.0);
  v51(v14, v12);
  SmallLockupLayout.Metrics.titleShortSpace.setter(v108);
  v102(v14, v52, v101);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v48, v12);
  v109 = v53;
  v110 = &protocol witness table for StaticDimension;
  sub_1000119C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v55 = sub_1000119C0(v105);
  v50(v55, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 22.0);
  v51(v14, v12);
  SmallLockupLayout.Metrics.titleWithHeadingSpace.setter(v108);
  if (qword_100806700 != -1)
    swift_once(&qword_100806700, sub_1004C9C60);
  v56 = v101;
  v57 = sub_10000EFC4(v101, (uint64_t)qword_10086A5D8);
  v102(v14, v57, v56);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v48, v12);
  v109 = v53;
  v110 = &protocol witness table for StaticDimension;
  sub_1000119C0(v108);
  v106 = v12;
  v107 = &protocol witness table for FontSource;
  v58 = sub_1000119C0(v105);
  v50(v58, v14, v12);
  StaticDimension.init(_:scaledLike:)(v105, 20.0);
  ((void (*)(char *, uint64_t))v103)(v14, v12);
  v59 = v104;
  SmallLockupLayout.Metrics.subtitleSpace.setter(v108);
  v60 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView;
  v61 = v91;
  v62 = *(char **)&v91[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView];
  v63 = v94;
  v64 = v98;
  v92(v94, v59, v98);
  v65 = &v62[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
  swift_beginAccess(&v62[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v108, 33, 0);
  v66 = v95;
  v67 = *(void (**)(char *, char *, uint64_t))(v95 + 24);
  v68 = v62;
  v67(v65, v63, v64);
  swift_endAccess(v108);
  objc_msgSend(v68, "setNeedsLayout");
  v69 = *(void (**)(char *, uint64_t))(v66 + 8);
  v69(v63, v64);

  v70 = *(void **)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel);
  v71 = v97;
  v102(v97, v100, v56);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v71, 0, 1, v56);
  v72 = v70;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v71);

  v73 = objc_msgSend(*(id *)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel), "layer");
  v74 = kCAFilterPlusL;
  objc_msgSend(v73, "setCompositingFilter:", kCAFilterPlusL);

  v75 = *(void **)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v76 = v75;
  v77 = (void *)static UIColor.secondaryText.getter(v76);
  objc_msgSend(v76, "setTextColor:", v77);

  v78 = *(void **)(*(_QWORD *)&v61[v60] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel);
  objc_msgSend(v78, "_setTextColorFollowsTintColor:", 0);
  v79 = objc_msgSend(v78, "layer");
  objc_msgSend(v79, "setCompositingFilter:", v74);

  v80 = *(void **)&v61[v60];
  objc_msgSend(v80, "setMaximumContentSizeCategory:", v96);
  v81 = objc_msgSend(v80, "layer");
  objc_msgSend(v81, "setAllowsGroupBlending:", 0);

  v82 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_materialBackground;
  v83 = *(id *)&v61[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_materialBackground];
  sub_10035BBA8(26.0);

  v84 = *(void **)&v61[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_tapGestureRecognizer];
  objc_msgSend(v84, "setEnabled:", 0);
  objc_msgSend(v84, "addTarget:action:", v61, "handleSelection:");
  objc_msgSend(v84, "setDelegate:", v61);
  objc_msgSend(v61, "addGestureRecognizer:", v84);
  v85 = *(void **)&v61[v82];
  objc_msgSend(v61, "addSubview:", v85);
  v86 = objc_msgSend(v85, "contentView");
  objc_msgSend(v86, "addSubview:", *(_QWORD *)&v61[v60]);

  v87 = objc_msgSend(*(id *)&v61[v82], "contentView");
  v88 = objc_msgSend(v87, "layer");

  objc_msgSend(v88, "setAllowsGroupBlending:", 0);
  v69(v104, v64);
  return v61;
}

uint64_t sub_10022803C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  objc_class *v5;
  void *v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  double v10;
  double v11;
  __n128 v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  _BYTE v24[40];
  _QWORD v25[5];
  _QWORD v26[5];
  objc_super v27;

  v1 = type metadata accessor for Center(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for CarouselItemLockupOverlay();
  v27.receiver = v0;
  v27.super_class = v5;
  objc_msgSendSuper2(&v27, "layoutSubviews");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_materialBackground], "setFrame:", LayoutMarginsAware<>.layoutFrame.getter(v5));
  v6 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView];
  v26[3] = type metadata accessor for SmallLockupView(0);
  v26[4] = sub_10000E720(&qword_10080E958, type metadata accessor for SmallLockupView, (uint64_t)&unk_10065299C);
  v26[0] = v6;
  v7 = qword_100804EF8;
  v8 = v6;
  if (v7 != -1)
    swift_once(&qword_100804EF8, sub_10022752C);
  v9 = xmmword_100816640;
  v10 = *(double *)&qword_100816650;
  v11 = unk_100816658;
  sub_10000EF80((uint64_t)v26, (uint64_t)v24);
  v25[3] = type metadata accessor for Margins(0);
  v25[4] = &protocol witness table for Margins;
  sub_1000119C0(v25);
  v12 = Margins.init(insets:child:)(v24, *(double *)&v9, *((double *)&v9 + 1), v10, v11);
  v13 = static Center.Axis.neither.getter(v12);
  Center.init(_:filling:)(v25, v13);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
  v14 = LayoutMarginsAware<>.layoutFrame.getter(v5);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = objc_msgSend(v0, "traitCollection");
  dispatch thunk of Placeable.place(at:with:)(v21, v1, &protocol witness table for Center, v14, v16, v18, v20);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_100228274(double a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  double v10;
  double v11;
  __n128 v12;
  uint64_t v13;
  double v14;
  _BYTE v17[40];
  _QWORD v18[5];
  _QWORD v19[5];

  v5 = type metadata accessor for Center(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10020EB1C(v19);
  if (qword_100804EF8 != -1)
    swift_once(&qword_100804EF8, sub_10022752C);
  v9 = xmmword_100816640;
  v10 = *(double *)&qword_100816650;
  v11 = unk_100816658;
  sub_10000EF80((uint64_t)v19, (uint64_t)v17);
  v18[3] = type metadata accessor for Margins(0);
  v18[4] = &protocol witness table for Margins;
  sub_1000119C0(v18);
  v12 = Margins.init(insets:child:)(v17, *(double *)&v9, *((double *)&v9 + 1), v10, v11);
  v13 = static Center.Axis.neither.getter(v12);
  Center.init(_:filling:)(v18, v13);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
  v14 = sub_100228D78((uint64_t)v8, v2, a1, a2);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

double sub_10022852C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;

  v4 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = HeroCarouselItemOverlay.lockup.getter(v20);
  if (v23)
  {
    v25 = v23;
    v46 = v2;
    v26 = *(char **)&v2[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView];
    v27 = sub_10000DAF8(&qword_10080B190);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 1, 1, v27);
    v28 = type metadata accessor for OfferStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
    v29 = type metadata accessor for OfferEnvironment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 1, 1, v29);
    v30 = sub_10000DAF8((uint64_t *)&unk_10080A100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
    v31 = type metadata accessor for OfferTint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
    sub_10040A58C(v25, v26, (uint64_t)v22, a2, 0, 0, (uint64_t)v18, (uint64_t)v15, (uint64_t)v9, (uint64_t)v12);
    sub_100010F2C((uint64_t)v9, (uint64_t *)&unk_100815D70);
    v26[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    sub_10020F298();
    objc_msgSend(v26, "setNeedsLayout");
    sub_100010F2C((uint64_t)v12, (uint64_t *)&unk_10080A0D0);
    sub_100010F2C((uint64_t)v15, (uint64_t *)&unk_10080A0E0);
    sub_100010F2C((uint64_t)v18, &qword_100815D80);
    sub_100010F2C((uint64_t)v22, (uint64_t *)&unk_10080A0F0);
    v32 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel;
    v33 = *(void **)&v26[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel];
    if (v33)
    {
      v34 = qword_1008066E8;
      v35 = v33;
      if (v34 != -1)
        swift_once(&qword_1008066E8, sub_1004C9C0C);
      v36 = type metadata accessor for FontUseCase(0);
      v37 = sub_10000EFC4(v36, (uint64_t)qword_10086A590);
      v38 = *(_QWORD *)(v36 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v6, v37, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v6, 0, 1, v36);
      dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v6);

      v39 = *(void **)&v26[v32];
      if (v39)
      {
        v40 = (void *)objc_opt_self(UIColor);
        v41 = v39;
        v42 = objc_msgSend(v40, "secondaryLabelColor");
        objc_msgSend(v41, "setTextColor:", v42);

        v43 = *(void **)&v26[v32];
        if (v43)
        {
          v44 = objc_msgSend(v43, "layer");
          objc_msgSend(v44, "setCompositingFilter:", kCAFilterPlusL);

        }
      }
    }
    objc_msgSend(v46, "setNeedsLayout");
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100228984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;

  v3 = type metadata accessor for Artwork.Style(0, a2);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.Crop(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = HeroCarouselItemOverlay.lockup.getter(v9);
  if (v12)
  {
    v13 = dispatch thunk of Lockup.artwork.getter(v12);
    v14 = swift_release();
    if (v13)
    {
      v15 = Artwork.crop.getter(v14);
      v16 = Artwork.Crop.preferredContentMode.getter(v15);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if (qword_100804E70 != -1)
        swift_once(&qword_100804E70, sub_10020D688);
      v17 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v18 = sub_10000EFC4(v17, (uint64_t)qword_100865F50);
      v19 = SmallLockupLayout.Metrics.artworkSize.getter(v18);
      v21 = Artwork.config(_:mode:prefersLayeredImage:)(v16, 0, v19, v20);
      v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView);
      v23 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
      v24 = *(id *)(v22 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      Artwork.style.getter(v24);
      v25 = ArtworkView.style.setter(v6);
      *(_QWORD *)&v26 = Artwork.contentMode.getter(v25).n128_u64[0];
      v28 = ArtworkLoaderConfig.size.getter(objc_msgSend(v24, "setContentMode:", v27, v26));
      v30 = ArtworkView.imageSize.setter(v28, v29);
      v31 = Artwork.backgroundColor.getter(v30);
      if (!v31)
      {
        v32 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v31 = static UIColor.placeholderBackground.getter(v32);
      }
      ArtworkView.backgroundColor.setter(v31);

      v33 = *(void **)(v22 + v23);
      objc_msgSend(v33, "setContentMode:", v16);
      v34 = type metadata accessor for ArtworkView(0);
      v35 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v36 = v33;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2, 1, v36, v34, v35);
      swift_release();
      swift_release();

    }
  }
}

id sub_100228BFC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarouselItemLockupOverlay();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarouselItemLockupOverlay()
{
  return objc_opt_self(_TtC20ProductPageExtension25CarouselItemLockupOverlay);
}

uint64_t sub_100228CA8(uint64_t a1, uint64_t a2)
{
  sub_1002290F8(a1, a2);
  return sub_100018908(a1, a2);
}

void sub_100228CE4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView)
                + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v2 = type metadata accessor for ArtworkView(0);
  v3 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v4 = v1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1, v2, v3);

}

double sub_100228D78(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  id v24;
  id v25;
  double v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  double v45;
  _BYTE v47[8];
  char v48;
  _BYTE v49[40];
  _QWORD v50[3];
  uint64_t v51;
  void *v52;
  _QWORD v53[6];

  v8 = type metadata accessor for Resize.Rule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v47[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v47[-v13];
  __chkstk_darwin(v15);
  v17 = &v47[-v16];
  __chkstk_darwin(v18);
  v20 = &v47[-v19];
  v21 = type metadata accessor for Center(0);
  v53[3] = v21;
  v53[4] = &protocol witness table for Center;
  v22 = sub_1000119C0(v53);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, a1, v21);
  v23 = sub_1000E1918(a3, a4);
  v24 = objc_msgSend(a2, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");

  if (v25 == (id)2)
    v26 = 635.0;
  else
    v26 = a3;
  if (v26 <= v23)
  {
    sub_10000EF80((uint64_t)v53, (uint64_t)v49);
    *((_QWORD *)v20 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v20 + 4) = &protocol witness table for CGFloat;
    *(double *)v20 = v26;
    v40 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 104);
    v40(v20, enum case for Resize.Rule.replaced(_:), v8);
    v41 = enum case for Resize.Rule.unchanged(_:);
    v40(v17, enum case for Resize.Rule.unchanged(_:), v8);
    v40(v14, v41, v8);
    v40(v11, v41, v8);
    v51 = type metadata accessor for Resize(0);
    v52 = &protocol witness table for Resize;
    sub_1000119C0(v50);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v49, v20, v17, v14, v11);
  }
  else
  {
    v27 = MeasurementRange.init(minimum:maximum:)(*(_QWORD *)&v23, 0, *(_QWORD *)&v26, 0);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_10000EF80((uint64_t)v53, (uint64_t)v49);
    v34 = MeasurementRange.init(minimum:maximum:)(0, 1, 0, 1);
    v36 = v35;
    v38 = v37;
    v51 = type metadata accessor for Constrain(0);
    v52 = &protocol witness table for Constrain;
    sub_1000119C0(v50);
    v39 = v29 & 1;
    v33 &= 1u;
    v48 = v36 & 1;
    v47[0] = v38 & 1;
    Constrain.init(_:width:height:)(v49, v27, v39, v31, v33, v34);
    v49[0] = v39;
    v48 = v33;
    a3 = MeasurementRange.constrain(_:)(v27, v39, v31, v33, a3);
  }
  v42 = v51;
  v43 = v52;
  sub_100010F08(v50, v51);
  v44 = objc_msgSend(a2, "traitCollection");
  v45 = dispatch thunk of Placeable.measure(toFit:with:)(v44, v42, v43, a3, a4);

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v50);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
  return v45;
}

id sub_1002290F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_selectionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_selectionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_selectionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_100018918(a1, a2);
  sub_100018908(v4, v5);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_tapGestureRecognizer);
  v7 = *v3;
  v8 = v3[1];
  if (*v3)
  {
    v9 = swift_allocObject(&unk_1007468F8, 32, 7);
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = v8;
    v10 = sub_100036D9C;
  }
  else
  {
    v10 = 0;
    v9 = 0;
  }
  sub_100018918(v7, v8);
  sub_100018908((uint64_t)v10, v9);
  return objc_msgSend(v6, "setEnabled:", v7 != 0);
}

uint64_t sub_1002291B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002291DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_materialBackground;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView;
  v3 = type metadata accessor for SmallLockupView(0);
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v4 = OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_tapGestureRecognizer;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v5 = &v0[OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_selectionHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/CarouselItemLockupOverlay.swift", 52, 2, 73, 0);
  __break(1u);
}

BOOL sub_1002292B8(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend(a1, "touchesForView:", *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension25CarouselItemLockupOverlay_smallLockupView)+ OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton));
  if (!v2)
    return 1;
  v3 = v2;
  v4 = sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
  v5 = sub_100225F48();
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  if ((v6 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = v6;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaSet.count.getter(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 16);
  }
  swift_bridgeObjectRelease(v6);
  return v8 == 0;
}

uint64_t sub_10022937C()
{
  return sub_10000E720(&qword_1008166B0, type metadata accessor for PrivacyTypeCollectionViewCell, (uint64_t)&unk_1006533D0);
}

uint64_t sub_1002293AC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  __n128 v77;
  int v79;
  void (*v80)(_QWORD *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[40];
  _BYTE v101[40];
  _QWORD v102[5];
  _QWORD v103[5];
  _QWORD v104[5];

  v95 = type metadata accessor for PrivacyCategoryLayout(0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v92 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v4;
  v6 = __chkstk_darwin(v5);
  v93 = (char *)&v80 - v7;
  v8 = type metadata accessor for LabelPlaceholderCompatibility(0, v6);
  v82 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v85 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PrivacyCategoryStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v96 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for PrivacyCategoryLayout.Metrics(0, v16);
  v98 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v83 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v80 - v20;
  v97 = a2;
  sub_1000D8EA8(a1, (uint64_t)a2, (uint64_t)&v80 - v20);
  v88 = v21;
  v22 = PrivacyCategoryLayout.Metrics.iconSize.getter();
  v24 = v23;
  v25 = type metadata accessor for LayoutViewPlaceholder(0);
  v26 = *(unsigned int *)(v25 + 48);
  v27 = *(unsigned __int16 *)(v25 + 52);
  v84 = v25;
  swift_allocObject(v25, v26, v27);
  v86 = LayoutViewPlaceholder.init(representing:)(v22, v24);
  PrivacyCategory.style.getter(v28);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  v99 = v14;
  v91 = v15;
  v87 = v8;
  if (v29 == enum case for PrivacyCategoryStyle.productPage(_:))
  {
    if (qword_1008063C0 != -1)
      swift_once(&qword_1008063C0, sub_1004C7F18);
    v30 = sub_10000EFC4(v14, (uint64_t)qword_100869C18);
    v31 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v96, v30, v14);
  }
  else if (v29 == enum case for PrivacyCategoryStyle.detailPage(_:))
  {
    v31 = v96;
    if (qword_1008063C8 != -1)
      swift_once(&qword_1008063C8, sub_1004C7F30);
    v32 = sub_10000EFC4(v14, (uint64_t)qword_100869C30);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v31, v32, v14);
  }
  else
  {
    v31 = v96;
    if (qword_1008063C0 != -1)
      swift_once(&qword_1008063C0, sub_1004C7F18);
    v33 = sub_10000EFC4(v14, (uint64_t)qword_100869C18);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v31, v33, v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v34 = v85;
  v35 = v97;
  sub_10005BD18();
  v36 = objc_msgSend(v35, "traitCollection");
  v37 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v31, v36);

  v39 = PrivacyCategory.title.getter(v38);
  v41 = v40;
  v42 = type metadata accessor for Feature(0);
  v104[3] = v42;
  v81 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v104[4] = v81;
  v43 = sub_1000119C0(v104);
  v44 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v80 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104);
  v80(v43, enum case for Feature.measurement_with_labelplaceholder(_:), v42);
  v45 = (char *)(id)v37;
  LOBYTE(v37) = isFeatureEnabled(_:)(v104);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v104);
  v85 = v45;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v39, v41, v45, 4, 0, 0, 0, 0, v37 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v104, v46);
  v47 = *(void (**)(char *, uint64_t))(v82 + 8);
  v48 = v87;
  v47(v34, v87);
  if (qword_1008063D0 != -1)
    swift_once(&qword_1008063D0, sub_1004C7F48);
  v49 = sub_10000EFC4(v99, (uint64_t)qword_100869C48);
  v50 = objc_msgSend(v97, "traitCollection");
  v51 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v49, v50);

  v53 = PrivacyCategory.dataTypes.getter(v52);
  v103[0] = v53;
  v54 = sub_10000DAF8((uint64_t *)&unk_100815880);
  v55 = sub_10003C21C();
  v56 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v54, v55);
  v58 = v57;
  swift_bridgeObjectRelease(v53);
  v103[3] = v42;
  v103[4] = v81;
  v59 = sub_1000119C0(v103);
  v80(v59, v44, v42);
  v60 = (id)v51;
  v97 = v60;
  LOBYTE(v51) = isFeatureEnabled(_:)(v103);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v103);
  LOBYTE(v79) = v51 & 1;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v56, v58, v60, 4, 0, 0, 0, 0, v79);
  LabelPlaceholderCompatibility.layoutTextView.getter(v103, v61);
  v47(v34, v48);
  v62 = v83;
  v63 = v88;
  v64 = v89;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v83, v88, v89);
  v65 = v84;
  v102[3] = v84;
  v102[4] = &protocol witness table for LayoutViewPlaceholder;
  v66 = v86;
  v102[0] = v86;
  sub_10000EF80((uint64_t)v104, (uint64_t)v101);
  sub_10000EF80((uint64_t)v103, (uint64_t)v100);
  swift_retain(v66);
  v67 = v93;
  v68 = PrivacyCategoryLayout.init(metrics:iconView:titleLabel:dataTypesLabel:)(v62, v102, v101, v100);
  v69 = v94;
  v70 = v92;
  v71 = v95;
  (*(void (**)(char *, char *, uint64_t, __n128))(v94 + 16))(v92, v67, v95, v68);
  v72 = *(unsigned __int8 *)(v69 + 80);
  v73 = (v72 + 16) & ~v72;
  v74 = swift_allocObject(&unk_100746928, v73 + v90, v72 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v74 + v73, v70, v71);
  swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
  v76 = LayoutViewPlaceholder.init(measureWith:)(sub_10022A8A8, v74, v75);

  v77 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v67, v71, v77);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v103);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v104);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v96, v99);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v64);
  return v76;
}

double sub_100229BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double (*v34)(_QWORD *, uint64_t);
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  id v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, __n128);
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __n128 v52;
  int v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  double v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  void (*v75)(_QWORD);
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  char v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t);
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  objc_class *v108;
  char *v109;
  double *v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void *v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double v129;
  __n128 v130;
  int v132;
  int v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t, uint64_t);
  void (*v142)(_QWORD *, _QWORD, uint64_t);
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  double (*v160)(_QWORD *, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  _BYTE v167[40];
  _BYTE v168[40];
  _QWORD v169[5];
  _QWORD v170[5];
  _QWORD v171[5];
  __int128 v172;
  uint64_t v173;
  void *v174;
  objc_super v175;
  _QWORD v176[5];
  _QWORD v177[6];

  v2 = type metadata accessor for PrivacyTypeLayout(0);
  v145 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v144 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfLayoutContext(0);
  v162 = *(_QWORD *)(v4 - 8);
  v163 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for LabelPlaceholderCompatibility(0, v5);
  v149 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v157 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for FontUseCase(0);
  v148 = *(_QWORD **)(v154 - 8);
  __chkstk_darwin(v154);
  v150 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v153 = (char *)&v134 - v11;
  v12 = type metadata accessor for PrivacyTypeStyle(0);
  v146 = *(_QWORD *)(v12 - 8);
  v147 = v12;
  __chkstk_darwin(v12);
  v159 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v134 - v16;
  v18 = type metadata accessor for PrivacyTypeLayout.Metrics(0, v15);
  v151 = *(_QWORD *)(v18 - 8);
  v152 = v18;
  __chkstk_darwin(v18);
  v143 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v156 = (uint64_t)&v134 - v21;
  v22 = type metadata accessor for PageGrid(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (uint64_t *)((char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for PrivacyType(0, v24);
  v28 = sub_10000E720(&qword_1008166B8, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyType, (uint64_t)&protocol conformance descriptor for PrivacyType);
  v29 = a1;
  ItemLayoutContext.typedModel<A>(as:)(v177, v27, v27, v28);
  v30 = v177[0];
  if (!v177[0])
    return 0.0;
  v140 = v2;
  swift_getKeyPath(&unk_100653420);
  ItemLayoutContext.subscript.getter(v26);
  swift_release();
  v31 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v33 = v32;
  v34 = *(double (**)(_QWORD *, uint64_t))(v23 + 8);
  v165 = v26;
  v160 = v34;
  v161 = v22;
  v35 = ((uint64_t (*)(_QWORD *, uint64_t))v34)(v26, v22);
  v37 = PrivacyType.artwork.getter(v35, v36);
  PrivacyType.style.getter(v38);
  v166 = v29;
  v39 = sub_10052A948();
  sub_1003D3618(v37, (uint64_t)v17, v39, v156, v40);
  swift_unknownObjectRelease();
  v41 = swift_release();
  v43 = v146;
  v42 = v147;
  v44 = *(void (**)(char *, uint64_t, __n128))(v146 + 8);
  v44(v17, v147, v41);
  v45 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  v138 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  v137 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v46 = PrivacyTypeLayout.Metrics.iconSize.getter();
  v48 = v47;
  v49 = *(unsigned int *)(v45 + 48);
  v50 = *(unsigned __int16 *)(v45 + 52);
  v164 = v45;
  swift_allocObject(v45, v49, v50);
  v136 = LayoutViewPlaceholder.init(representing:)(v46, v48);
  v51 = v159;
  v155 = v30;
  PrivacyType.style.getter(v52);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v51, v42);
  v139 = v17;
  if (v53 != enum case for PrivacyTypeStyle.productPage(_:))
  {
    v60 = (void (*)(char *, uint64_t))v44;
    v54 = (uint64_t)v153;
    v55 = v148;
    if (v53 == enum case for PrivacyTypeStyle.intermediateDetailPage(_:)
      || v53 == enum case for PrivacyTypeStyle.detailPage(_:))
    {
      if (qword_1008063A8 != -1)
        swift_once(&qword_1008063A8, sub_1004C7ED0);
      v56 = v154;
      v64 = sub_10000EFC4(v154, (uint64_t)qword_100869BD0);
      v58 = (void (*)(uint64_t, uint64_t, uint64_t))v55[2];
      v58(v54, v64, v56);
      v63 = 4;
      goto LABEL_15;
    }
    v61 = v42;
    if (qword_1008063A0 != -1)
      swift_once(&qword_1008063A0, sub_1004C7EB8);
    v56 = v154;
    v62 = sub_10000EFC4(v154, (uint64_t)qword_100869BB8);
    v58 = (void (*)(uint64_t, uint64_t, uint64_t))v55[2];
    v58(v54, v62, v56);
    v60(v159, v61);
    goto LABEL_11;
  }
  v54 = (uint64_t)v153;
  v55 = v148;
  if (qword_1008063A0 != -1)
    goto LABEL_38;
  while (1)
  {
    v56 = v154;
    v57 = sub_10000EFC4(v154, (uint64_t)qword_100869BB8);
    v58 = (void (*)(uint64_t, uint64_t, uint64_t))v55[2];
    v58(v54, v57, v56);
LABEL_11:
    v63 = 1;
LABEL_15:
    v159 = (char *)v63;
    v65 = v150;
    v141 = (void (*)(char *, uint64_t, uint64_t))v58;
    v66 = (_QWORD *)sub_10005BD18();
    v58((uint64_t)v65, v54, v56);
    swift_getKeyPath(&unk_100653450);
    ItemLayoutContext.subscript.getter(v177);
    swift_release();
    v67 = (void *)v177[0];
    v148 = v66;
    v68 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v65, v177[0]);

    v150 = (char *)v55[1];
    v69 = ((uint64_t (*)(char *, uint64_t))v150)(v65, v56);
    v70 = PrivacyType.title.getter(v69);
    v72 = v71;
    v73 = type metadata accessor for Feature(0);
    v177[3] = v73;
    v147 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v177[4] = v147;
    v74 = sub_1000119C0(v177);
    v75 = *(void (**)(_QWORD))(*(_QWORD *)(v73 - 8) + 104);
    LODWORD(v146) = enum case for Feature.measurement_with_labelplaceholder(_:);
    v142 = (void (*)(_QWORD *, _QWORD, uint64_t))v75;
    v75(v74);
    v76 = v65;
    v77 = (id)v68;
    LOBYTE(v68) = isFeatureEnabled(_:)(v177);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v177);
    LOBYTE(v132) = v68 & 1;
    v55 = v157;
    v135 = v77;
    LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v70, v72, v77, v159, 0, 0, 0, 0, v132);
    LabelPlaceholderCompatibility.layoutTextView.getter(v177, v78);
    v79 = v158;
    v149 = *(_QWORD *)(v149 + 8);
    ((void (*)(_QWORD *, uint64_t))v149)(v55, v158);
    if (qword_1008063B0 != -1)
      swift_once(&qword_1008063B0, sub_1004C7EE8);
    v80 = sub_10000EFC4(v56, (uint64_t)qword_100869BE8);
    v141(v76, v80, v56);
    swift_getKeyPath(&unk_100653450);
    ItemLayoutContext.subscript.getter(v176);
    swift_release();
    v81 = (void *)v176[0];
    v82 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v76, v176[0]);

    v83.n128_f64[0] = ((double (*)(char *, uint64_t))v150)(v76, v56);
    v84 = PrivacyType.detail.getter(v83);
    v86 = v85;
    v176[3] = v73;
    v176[4] = v147;
    v87 = sub_1000119C0(v176);
    v142(v87, v146, v73);
    v88 = v82;
    v89 = isFeatureEnabled(_:)(v176);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v176);
    LOBYTE(v133) = v89 & 1;
    LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v84, v86, v88, v159, 0, 0, 0, 0, v133);
    LabelPlaceholderCompatibility.layoutTextView.getter(v176, v90);
    v91.n128_f64[0] = ((double (*)(_QWORD *, uint64_t))v149)(v55, v79);
    v92 = PrivacyType.categories.getter(v91);
    v54 = v92;
    if ((unint64_t)v92 >> 62)
    {
      if (v92 >= 0)
        v92 &= 0xFFFFFFFFFFFFFF8uLL;
      v93 = _CocoaArrayWrapper.endIndex.getter(v92);
    }
    else
    {
      v93 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v94 = v165;
    v148 = v88;
    if (!v93)
    {
      v96 = _swiftEmptyArrayStorage;
      goto LABEL_32;
    }
    v159 = (char *)type metadata accessor for PrivacyCategoryView();
    if (v93 >= 1)
      break;
    __break(1u);
LABEL_38:
    swift_once(&qword_1008063A0, sub_1004C7EB8);
  }
  v95 = 0;
  v96 = _swiftEmptyArrayStorage;
  v157 = (char *)(v54 & 0xC000000000000001);
  v158 = v54;
  do
  {
    if (v157)
    {
      v97 = specialized _ArrayBuffer._getElementSlowPath(_:)(v95, v54);
    }
    else
    {
      v97 = *(_QWORD *)(v54 + 8 * v95 + 32);
      v98 = swift_retain(v97);
    }
    v99 = ItemLayoutContext.parentShelfLayoutContext.getter(v98);
    ShelfLayoutContext.contentPageGrid.getter(v99);
    v100 = *(uint64_t (**)(char *, uint64_t))(v162 + 8);
    v101 = v94;
    v102 = v163;
    v103 = v100(v7, v163);
    v104 = PageGrid.containerWidth.getter(v103);
    v105.n128_f64[0] = v160(v101, v161);
    v106 = ItemLayoutContext.parentShelfLayoutContext.getter(v105);
    v107 = ShelfLayoutContext.traitCollection.getter(v106);
    v100(v7, v102);
    v108 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    v109 = (char *)objc_allocWithZone(v108);
    v110 = (double *)&v109[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
    *v110 = v104;
    v110[1] = 1.79769313e308;
    *(_QWORD *)&v109[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v107;
    v175.receiver = v109;
    v175.super_class = v108;
    v111 = objc_msgSendSuper2(&v175, "init");
    v112 = sub_1002293AC(v97, v111);

    swift_retain(v112);
    if ((swift_isUniquelyReferenced_nonNull_native(v96) & 1) == 0)
      v96 = sub_1003DA414(0, v96[2] + 1, 1, v96);
    v114 = v96[2];
    v113 = v96[3];
    v94 = v165;
    if (v114 >= v113 >> 1)
      v96 = sub_1003DA414((_QWORD *)(v113 > 1), v114 + 1, 1, v96);
    ++v95;
    v173 = v164;
    v174 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v172 = v112;
    v96[2] = v114 + 1;
    sub_100010E24(&v172, (uint64_t)&v96[5 * v114 + 4]);
    swift_release();
    swift_release();
    v54 = v158;
  }
  while (v93 != v95);
LABEL_32:
  swift_bridgeObjectRelease(v54);
  swift_getKeyPath(&unk_100653450);
  ItemLayoutContext.subscript.getter(&v172);
  swift_release();
  v115 = (void *)v172;
  v116 = static Separator.thickness(compatibleWith:)(v172);

  v117 = v164;
  swift_allocObject(v164, *(unsigned int *)(v164 + 48), *(unsigned __int16 *)(v164 + 52));
  v118 = LayoutViewPlaceholder.init(representing:)(v31, v116);
  v119 = v143;
  (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v143, v156, v152);
  v173 = v117;
  v174 = &protocol witness table for LayoutViewPlaceholder;
  v120 = v137;
  v121 = v138;
  *(_QWORD *)&v172 = v138;
  v171[3] = v117;
  v171[4] = &protocol witness table for LayoutViewPlaceholder;
  v170[4] = &protocol witness table for LayoutViewPlaceholder;
  v171[0] = v137;
  v170[3] = v117;
  v169[4] = &protocol witness table for LayoutViewPlaceholder;
  v170[0] = v118;
  v165 = (_QWORD *)v118;
  v169[3] = v117;
  v122 = v136;
  v169[0] = v136;
  sub_10000EF80((uint64_t)v177, (uint64_t)v168);
  sub_10000EF80((uint64_t)v176, (uint64_t)v167);
  swift_retain(v121);
  swift_retain(v120);
  swift_retain(v118);
  v123 = swift_retain(v122);
  v124 = v139;
  PrivacyType.style.getter(v123);
  v125 = v144;
  PrivacyTypeLayout.init(metrics:shadowView:backgroundView:separatorView:iconView:titleLabel:detailLabel:categoryViews:style:)(v119, &v172, v171, v170, v169, v168, v167, v96, v124);
  swift_getKeyPath(&unk_100653480);
  ItemLayoutContext.subscript.getter(&v172);
  swift_release();
  v126 = v172;
  v127 = sub_10000E720(&qword_1008166C0, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyTypeLayout, (uint64_t)&protocol conformance descriptor for PrivacyTypeLayout);
  v128 = v140;
  dispatch thunk of Measurable.measurements(fitting:in:)(v126, v140, v127, v31, v33);
  v59 = v129;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v130 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v145 + 8))(v125, v128, v130);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v176);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v177);
  ((void (*)(char *, uint64_t))v150)(v153, v154);
  (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v156, v152);
  return v59;
}

uint64_t sub_10022A848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PrivacyCategoryLayout(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10022A8A8()
{
  type metadata accessor for PrivacyCategoryLayout(0);
  return sub_1000D94E0();
}

char *sub_10022A8FC(char *a1, uint64_t *a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  __n128 v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  Class isa;
  void *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[16];

  v9 = a2[2];
  v47 = a2[1];
  v48 = *a2;
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  v45 = a2[7];
  v46 = a2[6];
  v43 = a2[9];
  v44 = a2[8];
  v41 = a2[11];
  v42 = a2[10];
  v13 = a2[14];
  v39 = a2[13];
  v40 = a2[12];
  v14 = a2[15];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView], 0);
  v15 = OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_videoLayer;
  v16 = objc_allocWithZone((Class)AVPlayerLayer);
  v17 = v4;
  *(_QWORD *)&v4[v15] = objc_msgSend(v16, "init");
  swift_unknownObjectWeakAssign(v18);

  if (a1)
  {
    v19 = *(void **)&a1[qword_100828468];
    v20 = v19;
  }
  else
  {
    v19 = 0;
  }
  v21 = sub_1000D1780(v19, a2, a3, a4);
  objc_msgSend(v21, "setClipsToBounds:", 1);
  objc_msgSend(v21, "setUserInteractionEnabled:", 0);
  v22 = OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_videoLayer;
  v23 = *(void **)&v21[OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_videoLayer];
  objc_msgSend(v23, "setAnchorPoint:", 0.5, 0.5);
  v24 = qword_100804948;
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_100804948, sub_1000D1550);
  sub_10000DAF8((uint64_t *)&unk_10080EB30);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "setActions:", isa);

  v27 = *(void **)&v21[v22];
  v28 = (void *)objc_opt_self(UIScreen);
  v29 = v27;
  v30 = objc_msgSend(v28, "mainScreen");
  objc_msgSend(v30, "scale");
  v32 = v31;

  objc_msgSend(v29, "setContentsScale:", v32);
  v33 = *(void **)&v21[v22];
  objc_msgSend(v33, "setMasksToBounds:", 1);
  objc_msgSend(v33, "setContentsGravity:", kCAGravityResizeAspectFill);
  v49[0] = v48;
  v49[1] = v47;
  v49[2] = v9;
  v49[3] = v10;
  v49[4] = v11;
  v49[5] = v12;
  v49[6] = v46;
  v49[7] = v45;
  v49[8] = v44;
  v49[9] = v43;
  v49[10] = v42;
  v49[11] = v41;
  v49[12] = v40;
  v49[13] = v39;
  v49[14] = v13;
  v49[15] = v14;
  objc_msgSend(v33, "setTransform:", v49);
  sub_10022B300();
  v34 = objc_msgSend(v21, "layer");
  v35 = *(void **)&v21[OBJC_IVAR____TtC20ProductPageExtension10MirrorView_artworkLayer];
  v36 = v33;
  v37 = v35;
  objc_msgSend(v34, "insertSublayer:below:", v36, v37);

  return v21;
}

void sub_10022AC74(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + qword_100828460);

    if (v6)
    {
      swift_unknownObjectRelease(v6);
      if (v6 == v1)
      {
        v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
        if (v7)
        {
          v8 = v7;

          if (a1 && v8 == a1)
            return;
        }
        else if (!a1)
        {
          return;
        }
        v9 = swift_unknownObjectWeakLoadStrong(v3);
        if (v9)
        {
          v17 = (char *)v9;
          *(_QWORD *)(v9 + qword_100828460 + 8) = 0;
          v11 = swift_unknownObjectWeakAssign(v10);
          v12 = *(void **)&v17[qword_100828488];
          if (v12 && (v13 = swift_unknownObjectWeakLoadStrong(v11)) != 0)
          {
            v14 = v13;
            v15 = *(void **)(v13 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_videoLayer);
            v16 = v12;
            objc_msgSend(v15, "setPlayer:", v16);

            swift_unknownObjectRelease(v14);
          }
          else
          {

          }
        }
      }
    }
  }
}

void sub_10022ADE8(void *a1)
{
  uint64_t v1;
  void *Strong;
  __n128 v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView);
  sub_10022AC74(a1);
  v4 = swift_unknownObjectWeakAssign(v3);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (v5)
  {
    v6 = v5;
    if (Strong)
    {
      type metadata accessor for VideoView(0);
      v7 = Strong;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
    else
    {

    }
  }
  else if (!Strong)
  {
    goto LABEL_10;
  }
  sub_10022B300();
  v7 = Strong;
LABEL_9:

LABEL_10:
}

double sub_10022B084(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  void *v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char *v28;
  char v29[24];

  v3 = v2;
  v6 = type metadata accessor for VideoConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for AspectRatio(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v28 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v16);
  v18 = &v29[-v17 - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = Strong + qword_10086AA40;
    v22 = swift_beginAccess(Strong + qword_10086AA40, v29, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v21, v6, v22);

    VideoConfiguration.aspectRatio.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
      a1 = AspectRatio.maxSize(filling:)(a1, a2);
LABEL_8:
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
      return a1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  sub_1001EA5A0((uint64_t)v12);
  v23 = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC20ProductPageExtension10MirrorView_sourceImageView);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, "image");

    if (v25)
    {
      v26 = objc_msgSend(v25, "size");
      v18 = v28;
      AspectRatio.init(_:_:)(v26);
      a1 = AspectRatio.maxSize(filling:)(a1, a2);

      goto LABEL_8;
    }
  }
  return a1;
}

void sub_10022B300()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  __n128 v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  NSString *v27;
  NSString *v28;
  NSString *v29;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView]);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + qword_100828468);

  }
  else
  {
    v4 = 0;
  }
  v5 = v4;
  sub_1000D1D30(v4);

  v6 = swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v8 = (char *)v6;
    *(_QWORD *)(v6 + qword_100828460 + 8) = &off_100746978;
    v9 = swift_unknownObjectWeakAssign(v7);
    v10 = *(void **)&v8[qword_100828488];
    if (v10 && (v11 = swift_unknownObjectWeakLoadStrong(v9)) != 0)
    {
      v12 = v11;
      v13 = *(void **)(v11 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_videoLayer);
      v14 = v0;
      v15 = v10;
      objc_msgSend(v13, "setPlayer:", v15);

      swift_unknownObjectRelease(v12);
    }
    else
    {

    }
  }
  v16 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_videoLayer];
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  v18 = v17;
  if (v17)
  {
    v19 = objc_msgSend(v17, "backgroundColor");

    if (v19)
    {
      v18 = objc_msgSend(v19, "CGColor");

    }
    else
    {
      v18 = 0;
    }
  }
  objc_msgSend(v16, "setBackgroundColor:", v18);

  v20 = swift_unknownObjectWeakLoadStrong(v1);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = *(id *)(v20 + qword_100828488);

  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v16, "setPlayer:", v22);

  v23 = swift_unknownObjectWeakLoadStrong(v1);
  if (v23
    && (v24 = (void *)v23, v25 = *(void **)(v23 + qword_100828490), v26 = v25, v24, v25))
  {
    v28 = (NSString *)objc_msgSend(v26, "videoGravity");

    v27 = v28;
  }
  else
  {
    v27 = AVLayerVideoGravityResizeAspectFill;
  }
  v29 = v27;
  objc_msgSend(v16, "setVideoGravity:");

}

void sub_10022B574()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC20ProductPageExtension15VideoMirrorView_sourceVideoView);

}

id sub_10022B5A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMirrorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoMirrorView()
{
  return objc_opt_self(_TtC20ProductPageExtension15VideoMirrorView);
}

void sub_10022B628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t, uint64_t);
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  id v27;
  char **v28;
  id v29;
  void *v30;
  void (*v31)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  char v34;
  id v35;
  id v36;
  id v37;
  id v38;
  NSString v39;
  uint64_t v40;
  id v41;
  char *v42;

  v1 = type metadata accessor for ArcadeState(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v5);
  v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v41 - v9;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_accountStore);
  v12 = objc_msgSend(v11, "ams_activeiTunesAccount", v8);
  v13 = objc_msgSend(v12, "ams_DSID");

  v14 = (void *)objc_opt_self(NSUserDefaults);
  v15 = objc_msgSend(v14, "standardUserDefaults");
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setObject:forKey:", v13, v16);

  v17 = (uint64_t)v10;
  Date.init()(v18);
  v19 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v21(v17, 0, 1, v19);
  sub_10022D1E0(v17);
  v23 = ArcadeSubscriptionManager.subscriptionState.getter(v22);
  v24 = ArcadeState.isSubscribed.getter(v23);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v24 & 1) == 0)
    return;
  v25 = (uint64_t)v42;
  v26 = objc_msgSend(v11, "ams_activeiTunesAccount");
  v27 = objc_msgSend(v26, "ams_DSID");

  v28 = &selRef_startInteractiveTransition_;
  v29 = objc_msgSend(v14, "standardUserDefaults");
  v30 = (void *)sub_1005FBA0C();

  v41 = v27;
  if (v27)
  {
    if (v30)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
      v31 = v21;
      v32 = v17;
      v33 = v41;
      v34 = static NSObject.== infix(_:_:)(v33, v30);

      v17 = v32;
      v21 = v31;
      v28 = &selRef_startInteractiveTransition_;
LABEL_7:

      goto LABEL_10;
    }
    v34 = 0;
  }
  else
  {
    if (v30)
    {
      v34 = 0;
      goto LABEL_7;
    }
    v34 = 1;
  }
LABEL_10:
  v35 = objc_msgSend(v14, v28[237], v41);
  sub_1005FBA28(v25);

  LODWORD(v35) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19);
  sub_100010F2C(v25, (uint64_t *)&unk_100816850);
  v36 = v41;
  if ((_DWORD)v35 == 1 || (v34 & 1) == 0)
  {
    v37 = v41;
    v38 = objc_msgSend(v14, v28[237]);
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setObject:forKey:", v37, v39);

    Date.init()(v40);
    v21(v17, 0, 1, v19);
    sub_10022D1E0(v17);
  }

}

uint64_t sub_10022BA14()
{
  return sub_10022BA6C();
}

uint64_t sub_10022BA40()
{
  return sub_10022BA6C();
}

uint64_t sub_10022BA6C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_10000DAF8((uint64_t *)&unk_100816850);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_accountStore), "ams_activeiTunesAccount", v2);
  v6 = objc_msgSend(v5, "ams_DSID");

  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setObject:forKey:", v6, v8);

  Date.init()(v9);
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
  return sub_10022D1E0((uint64_t)v4);
}

void sub_10022BBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  char v10;
  _BYTE *Strong;
  _BYTE *v12;
  _BYTE *v13;
  char v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for FamilyCircleLookupResult(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + 16;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v9 == enum case for FamilyCircleLookupResult.notInFamily(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v10 = *v7;
    swift_beginAccess(v8, v21, 0, 0);
    Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (Strong)
    {
      Strong[OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_isInFamily] = 0;

    }
    swift_beginAccess(v8, v20, 0, 0);
    v12 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v12)
    {
      v12[OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_isFamilyOrganizer] = 0;

    }
    swift_beginAccess(v8, v19, 0, 0);
    v13 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v13)
    {
      v13[OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_canCreateFamily] = v10;

    }
  }
  else if (v9 == enum case for FamilyCircleLookupResult.inFamily(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v14 = *v7;
    swift_beginAccess(v8, v21, 0, 0);
    v15 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v15)
    {
      v15[OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_isInFamily] = 1;

    }
    swift_beginAccess(v8, v20, 0, 0);
    v16 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v16)
    {
      v16[OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_isFamilyOrganizer] = v14;

    }
    swift_beginAccess(v8, v19, 0, 0);
    v17 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v8);
    if (v17)
    {
      v17[OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_canCreateFamily] = 0;

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_10022BDD4(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  _QWORD v19[4];

  v3 = type metadata accessor for OSLogger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100805338 != -1)
    swift_once(&qword_100805338, sub_1002D4820);
  v7 = sub_10000EFC4(v3, (uint64_t)qword_100866AA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v9 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 2 * *(_QWORD *)(v9 + 72), *(unsigned __int8 *)(v9 + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD000000000000055, 0x8000000100695530);
  swift_getErrorValue(a1, v18, &v16);
  v11 = v16;
  v12 = v17;
  v19[3] = v17;
  v13 = sub_1000119C0(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v13, v11, v12);
  static LogMessage.safe(_:)(v19);
  sub_100010F2C((uint64_t)v19, &qword_100808F20);
  Logger.error(_:)(v10, v3, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
}

uint64_t sub_10022BF84(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v5 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - v13;
  sub_10022D14C(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_100816850);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  if (!a2)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return 0;
  }
  v15 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_accountStore);
  v16 = a2;
  v17 = objc_msgSend(v15, "ams_activeiTunesAccount");
  if (!v17
    || (v18 = v17, v19 = objc_msgSend(v17, "ams_DSID"), v18, !v19))
  {

    goto LABEL_9;
  }
  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  v20 = static NSObject.== infix(_:_:)(v16, v19);
  if ((v20 & 1) != 0)
  {
    Date.init()(v20);
    v21 = Date.timeIntervalSince(_:)(v14);

    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v11, v8);
    v22(v14, v8);
    return *(_QWORD *)&v21;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);

  return 0;
}

uint64_t sub_10022C1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char v30;
  char v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  __n128 v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  double v43;
  char v44;
  id v45;
  id v46;
  void *v47;
  double v48;
  char v49;
  char v50;
  uint64_t v51;

  v4 = v3;
  v8 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArcadeState(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100694280
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100694280, a1, a2, 0) & 1) != 0)
  {
    v16 = ArcadeSubscriptionManager.subscriptionState.getter(v13);
    v17 = ArcadeState.isSubscribed.getter(v16);
LABEL_5:
    v18 = v17;
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    *(_QWORD *)(a3 + 24) = &type metadata for Bool;
    v20 = v18 & 1;
LABEL_6:
    *(_BYTE *)a3 = v20;
    return result;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100694260
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100694260, a1, a2, 0),
        (result & 1) != 0))
  {
    v21 = ArcadeSubscriptionManager.subscriptionState.getter(v13);
    v17 = ArcadeState.isTrialAvailable.getter(v21);
    goto LABEL_5;
  }
  if (a1 == 0x696D61466E497369 && a2 == 0xEA0000000000796CLL
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0x696D61466E497369, 0xEA0000000000796CLL, a1, a2, 0),
        (result & 1) != 0))
  {
    v22 = OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_isInFamily;
    goto LABEL_15;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100694240
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100694240, a1, a2, 0),
        (result & 1) != 0))
  {
    v22 = OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_isFamilyOrganizer;
    goto LABEL_15;
  }
  if (a1 == 0x74616572436E6163 && a2 == 0xEF796C696D614665
    || (result = _stringCompareWithSmolCheck(_:_:expecting:)(0x74616572436E6163, 0xEF796C696D614665, a1, a2, 0),
        (result & 1) != 0))
  {
    v22 = OBJC_IVAR____TtC20ProductPageExtension28InAppMessagesContextProvider_canCreateFamily;
LABEL_15:
    v23 = *(unsigned __int8 *)(v4 + v22);
    if (v23 != 2)
    {
      v20 = v23 & 1;
      *(_QWORD *)(a3 + 24) = &type metadata for Bool;
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x800000010068A640)
    goto LABEL_16;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000010068A640, a1, a2, 0);
  if ((result & 1) != 0)
    goto LABEL_16;
  result = 0xD000000000000014;
  if (a1 == 0xD000000000000014 && a2 == 0x8000000100687490)
    goto LABEL_16;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100687490, a1, a2, 0);
  if ((result & 1) != 0)
    goto LABEL_16;
  if (a1 == 0xD00000000000001ELL && a2 == 0x8000000100694220
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x8000000100694220, a1, a2, 0) & 1) != 0)
  {
    v24 = (void *)objc_opt_self(NSUserDefaults);
    v25 = objc_msgSend(v24, "standardUserDefaults");
    sub_1005FB8AC((uint64_t)v10);

    v26 = objc_msgSend(v24, "standardUserDefaults");
    v27 = sub_1005FB7B8();
    goto LABEL_36;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100694200
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100694200, a1, a2, 0) & 1) != 0)
  {
    v32 = (void *)objc_opt_self(NSUserDefaults);
    v33 = objc_msgSend(v32, "standardUserDefaults");
    sub_1005FB79C((uint64_t)v10);

    v26 = objc_msgSend(v32, "standardUserDefaults");
    v27 = sub_1005FB780();
    goto LABEL_36;
  }
  if (a1 == 0xD000000000000023 && a2 == 0x80000001006941D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x80000001006941D0, a1, a2, 0) & 1) != 0)
  {
    v34 = (void *)objc_opt_self(NSUserDefaults);
    v35 = objc_msgSend(v34, "standardUserDefaults");
    sub_1005FB9F0((uint64_t)v10);

    v26 = objc_msgSend(v34, "standardUserDefaults");
    v27 = sub_1005FB9D4();
    goto LABEL_36;
  }
  if (a1 == 0xD00000000000002BLL && a2 == 0x80000001006941A0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000002BLL, 0x80000001006941A0, a1, a2, 0) & 1) != 0)
  {
    v36 = (void *)objc_opt_self(NSUserDefaults);
    v37 = objc_msgSend(v36, "standardUserDefaults");
    sub_1005FBA28((uint64_t)v10);

    v26 = objc_msgSend(v36, "standardUserDefaults");
    v27 = sub_1005FBA0C();
LABEL_36:
    v28 = (void *)v27;

    v29 = sub_10022BF84((uint64_t)v10, v28);
    v31 = v30;

    result = sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100816850);
    if ((v31 & 1) == 0)
    {
      *(_QWORD *)(a3 + 24) = &type metadata for Double;
      *(_QWORD *)a3 = v29;
      return result;
    }
LABEL_16:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  if (a1 == 0xD000000000000033 && a2 == 0x8000000100694160
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000033, 0x8000000100694160, a1, a2, 0) & 1) != 0)
  {
    v39 = (void *)objc_opt_self(NSUserDefaults);
    v40 = objc_msgSend(v39, "standardUserDefaults");
    sub_1005FB9F0((uint64_t)v10);

    v41 = objc_msgSend(v39, "standardUserDefaults");
    v42 = (void *)sub_1005FB9D4();

    v43 = COERCE_DOUBLE(sub_10022BF84((uint64_t)v10, v42));
    LOBYTE(v41) = v44;

    result = sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100816850);
    if ((v41 & 1) != 0)
      goto LABEL_16;
    v45 = objc_msgSend(v39, "standardUserDefaults");
    sub_1005FBA28((uint64_t)v10);

    v46 = objc_msgSend(v39, "standardUserDefaults");
    v47 = (void *)sub_1005FBA0C();

    v48 = COERCE_DOUBLE(sub_10022BF84((uint64_t)v10, v47));
    v50 = v49;

    result = sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100816850);
    if ((v50 & 1) != 0)
      goto LABEL_16;
    *(_QWORD *)(a3 + 24) = &type metadata for Double;
    *(double *)a3 = v43 - v48;
  }
  else
  {
    result = sub_10022D358(v38, a1, a2);
    if (result == 2)
      goto LABEL_16;
    *(_QWORD *)(a3 + 24) = &type metadata for Bool;
    *(_BYTE *)a3 = result & 1;
  }
  return result;
}

uint64_t sub_10022CA74()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD aBlock[6];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1007469C0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  aBlock[4] = sub_10022D1B8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_1007469D8;
  v12 = _Block_copy(aBlock);
  v13 = swift_release();
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_100071858();
  v15 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v16 = sub_10004EA04();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v0, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10022CC50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD v13[5];
  _BYTE v14[24];

  v2 = type metadata accessor for FamilyCircleLookupTask(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = FamilyCircleLookupTask.init()();
    FamilyCircleLookupTask.perform()(v8);
    v9 = swift_allocObject(&unk_1007469C0, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
    v12 = static OS_dispatch_queue.main.getter(v11);
    v13[3] = v10;
    v13[4] = &protocol witness table for OS_dispatch_queue;
    v13[0] = v12;
    Promise.then(perform:orCatchError:on:)(sub_10022D1D8, v9, sub_10022BDD4, 0, v13);
    swift_release();
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  }
}

uint64_t type metadata accessor for InAppMessagesContextProvider()
{
  return objc_opt_self(_TtC20ProductPageExtension28InAppMessagesContextProvider);
}

uint64_t sub_10022D09C()
{
  return type metadata accessor for InAppMessagesMetricsDelegate(0);
}

uint64_t type metadata accessor for InAppMessagesMetricsDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_100816840;
  if (!qword_100816840)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppMessagesMetricsDelegate);
  return result;
}

uint64_t sub_10022D0E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for MetricsPipeline(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10022D14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100816850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022D194()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10022D1B8()
{
  uint64_t v0;

  sub_10022CC50(v0);
}

uint64_t sub_10022D1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10022D1D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10022D1D8(uint64_t a1)
{
  uint64_t v1;

  sub_10022BBB0(a1, v1);
}

uint64_t sub_10022D1E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  NSString v12;
  uint64_t v14;

  v2 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - v6;
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_10022D14C(a1, (uint64_t)v7);
  sub_10022D14C((uint64_t)v7, (uint64_t)v4);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setObject:forKey:", isa, v12);
  swift_unknownObjectRelease();

  sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_100816850);
  return sub_100010F2C(a1, (uint64_t *)&unk_100816850);
}

uint64_t sub_10022D358(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v28[4];

  v4 = type metadata accessor for OSLogger(0, a1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = objc_msgSend(v8, "bundleIdentifier");

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

  }
  else
  {
    v11 = 0x800000010068E490;
  }
  v12 = objc_allocWithZone((Class)FAEligiblityEvaluationRequest);
  swift_bridgeObjectRetain(a3);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "initWithPropertyName:bundleID:", v13, v14, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v28[0] = 0;
  v16 = objc_msgSend(v15, "fetchEligibilityWithError:", v28);
  v17 = v28[0];
  if (v28[0])
  {
    v18 = qword_100805338;
    v19 = v28[0];
    if (v18 != -1)
      swift_once(&qword_100805338, sub_1002D4820);
    v20 = sub_10000EFC4(v4, (uint64_t)qword_100866AA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v20, v4);
    v21 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v22 = type metadata accessor for LogMessage(0);
    v23 = swift_allocObject(v21, ((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) | 7);
    *(_OWORD *)(v23 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000053, 0x8000000100695590);
    v28[3] = (id)sub_100018B6C(0, (unint64_t *)&unk_100816860, NSError_ptr);
    v28[0] = v19;
    v24 = v19;
    static LogMessage.safe(_:)(v28);
    sub_100010F2C((uint64_t)v28, &qword_100808F20);
    Logger.error(_:)(v23, v4, &protocol witness table for OSLogger);

    swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {

  }
  if (v16 == (id)2)
    v25 = 1;
  else
    v25 = 2 * (v16 != (id)1);

  return v25;
}

ValueMetadata *type metadata accessor for ProductPageScrollActionImplementation()
{
  return &type metadata for ProductPageScrollActionImplementation;
}

unint64_t sub_10022D688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008168D0;
  if (!qword_1008168D0)
  {
    v1 = type metadata accessor for ProductPageScrollAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1008168D0);
  }
  return result;
}

uint64_t sub_10022D6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = type metadata accessor for ActionOutcome(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v11 = (void *)sub_100302718(Strong);

  v24 = v11;
  v12 = sub_100050BB8();
  v13 = v11;
  v14 = sub_10000DAF8(&qword_10080FCE0);
  if (swift_dynamicCast(&v21, &v24, v12, v14, 6))
  {
    sub_100010E24(&v21, (uint64_t)v25);
    v15 = v26;
    v16 = v27;
    sub_100010F08(v25, v26);
    v21 = 0u;
    v22 = 0u;
    (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t, uint64_t))(v16 + 8))(a1, &v21, a2, v15, v16);
    sub_100010F2C((uint64_t)&v21, &qword_100808F20);
    sub_10000DAF8(&qword_100808570);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionOutcome.performed(_:), v6);
    v17 = Promise.__allocating_init(value:)(v9);

    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  }
  else
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    sub_100010F2C((uint64_t)&v21, &qword_10080FCE8);
    sub_10000DAF8(&qword_100808570);
    v18 = sub_10022D8A4();
    v19 = swift_allocError(&type metadata for ProductPageScrollActionImplementation.ImplementationError, v18, 0, 0);
    v17 = Promise.__allocating_init(error:)(v19);

  }
  return v17;
}

uint64_t sub_10022D89C(uint64_t *a1, uint64_t a2)
{
  return sub_10022D6D0(*a1, a2);
}

unint64_t sub_10022D8A4()
{
  unint64_t result;

  result = qword_1008168D8;
  if (!qword_1008168D8)
  {
    result = swift_getWitnessTable(&unk_10065366C, &type metadata for ProductPageScrollActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1008168D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ProductPageScrollActionImplementation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10022D928 + 4 * asc_100653550[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10022D948 + 4 * byte_100653555[v4]))();
}

_BYTE *sub_10022D928(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10022D948(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10022D950(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10022D958(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10022D960(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10022D968(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ProductPageScrollActionImplementation.ImplementationError()
{
  return &type metadata for ProductPageScrollActionImplementation.ImplementationError;
}

unint64_t sub_10022D988()
{
  unint64_t result;

  result = qword_1008168E0;
  if (!qword_1008168E0)
  {
    result = swift_getWitnessTable(&unk_100653644, &type metadata for ProductPageScrollActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1008168E0);
  }
  return result;
}

uint64_t sub_10022D9CC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t ObjectType;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;

  v96 = a1;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for UUID(0);
  v100 = *(_QWORD *)(v2 - 8);
  v101 = v2;
  __chkstk_darwin(v2);
  v99 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v96 - v9;
  v98 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v11 = swift_allocObject(v98, 144, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1006536B0;
  v12 = swift_allocObject(&unk_100746BA8, 24, 7);
  *(_QWORD *)(v12 + 16) = v1;
  v13 = type metadata accessor for NavigationActionDebugSetting();
  swift_allocObject(v13, 104, 7);
  v14 = v1;
  v15 = sub_1004C5AA4(0xD000000000000011, 0x8000000100695750, 0, 0, (uint64_t)sub_10022EC00, v12);
  swift_release();
  *(_QWORD *)(v11 + 32) = v15;
  v16 = swift_allocObject(&unk_100746BD0, 24, 7);
  *(_QWORD *)(v16 + 16) = v14;
  swift_allocObject(v13, 104, 7);
  v17 = v14;
  v18 = sub_1004C5AA4(0x6554207961646F54, 0xEA00000000007473, 0, 0, (uint64_t)sub_10022ECB4, v16);
  swift_release();
  *(_QWORD *)(v11 + 40) = v18;
  v19 = swift_allocObject(&unk_100746BF8, 24, 7);
  *(_QWORD *)(v19 + 16) = v17;
  swift_allocObject(v13, 104, 7);
  v20 = v17;
  v21 = sub_1004C5AA4(0x542070756B636F4CLL, 0xEB00000000747365, 0, 0, (uint64_t)sub_10022ECB8, v19);
  swift_release();
  *(_QWORD *)(v11 + 48) = v21;
  v22 = swift_allocObject(&unk_100746C20, 24, 7);
  *(_QWORD *)(v22 + 16) = v20;
  swift_allocObject(v13, 104, 7);
  v23 = v20;
  v24 = sub_1004C5AA4(0x655420666C656853, 0xEF65676150207473, 0, 0, (uint64_t)sub_10022ECBC, v22);
  swift_release();
  *(_QWORD *)(v11 + 56) = v24;
  v25 = swift_allocObject(&unk_100746C48, 24, 7);
  *(_QWORD *)(v25 + 16) = v23;
  swift_allocObject(v13, 104, 7);
  v26 = v23;
  v27 = sub_1004C5AA4(0x20676E6964616F4CLL, 0xEE006E6565726353, 0, 0, (uint64_t)sub_10022ECC0, v25);
  swift_release();
  *(_QWORD *)(v11 + 64) = v27;
  v28 = swift_allocObject(&unk_100746C70, 24, 7);
  *(_QWORD *)(v28 + 16) = v26;
  swift_allocObject(v13, 104, 7);
  v29 = v26;
  v30 = sub_1004C5AA4(0x79746972616843, 0xE700000000000000, 0, 0, (uint64_t)sub_10022ECC4, v28);
  swift_release();
  *(_QWORD *)(v11 + 72) = v30;
  v31 = swift_allocObject(&unk_100746C98, 24, 7);
  *(_QWORD *)(v31 + 16) = v29;
  swift_allocObject(v13, 104, 7);
  v32 = v29;
  v33 = sub_1004C5AA4(0xD000000000000013, 0x8000000100695770, 0, 0, (uint64_t)sub_10022ECC8, v31);
  swift_release();
  *(_QWORD *)(v11 + 80) = v33;
  v34 = swift_allocObject(&unk_100746CC0, 24, 7);
  *(_QWORD *)(v34 + 16) = v32;
  swift_allocObject(v13, 104, 7);
  v35 = v32;
  v36 = sub_1004C5AA4(0xD00000000000001ALL, 0x8000000100695790, 0, 0, (uint64_t)sub_10022ECCC, v34);
  swift_release();
  *(_QWORD *)(v11 + 88) = v36;
  v37 = swift_allocObject(&unk_100746CE8, 24, 7);
  *(_QWORD *)(v37 + 16) = v35;
  swift_allocObject(v13, 104, 7);
  v38 = v35;
  v39 = sub_1004C5AA4(0xD000000000000010, 0x80000001006957B0, 0, 0, (uint64_t)sub_10022ECD0, v37);
  swift_release();
  *(_QWORD *)(v11 + 96) = v39;
  if (qword_100804D98 != -1)
    swift_once(&qword_100804D98, sub_1001D32C4);
  v40 = sub_10000EFC4(v4, (uint64_t)qword_100865C68);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v41(v10, v40, v4);
  v42 = type metadata accessor for LocalPreferences(0);
  v43 = static LocalPreferences.AppStoreKitInternal.getter(v42);
  v41(v7, (uint64_t)v10, v4);
  v44 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v45 = swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  v46 = sub_1003FCD7C(0xD00000000000001BLL, 0x80000001006957D0, 0, 0, 1, (uint64_t)v7, v43, v45);
  v47 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v47);
  *(_QWORD *)(v11 + 104) = v46;
  v48 = swift_allocObject(&unk_100746D10, 24, 7);
  *(_QWORD *)(v48 + 16) = v38;
  swift_allocObject(v13, 104, 7);
  v49 = v38;
  v50 = sub_1004C5AA4(0xD00000000000001CLL, 0x80000001006957F0, 0, 0, (uint64_t)sub_10022ECD4, v48);
  swift_release();
  *(_QWORD *)(v11 + 112) = v50;
  v51 = swift_allocObject(&unk_100746D38, 24, 7);
  *(_QWORD *)(v51 + 16) = v49;
  swift_allocObject(v13, 104, 7);
  v52 = v49;
  v53 = sub_1004C5AA4(0xD00000000000001FLL, 0x8000000100695810, 0, 0, (uint64_t)sub_10022ED00, v51);
  swift_release();
  *(_QWORD *)(v11 + 120) = v53;
  v54 = swift_allocObject(&unk_100746D60, 24, 7);
  *(_QWORD *)(v54 + 16) = v52;
  swift_allocObject(v13, 104, 7);
  v55 = v52;
  v56 = sub_1004C5AA4(0xD00000000000001BLL, 0x8000000100695830, 0, 0, (uint64_t)sub_10022ED2C, v54);
  swift_release();
  *(_QWORD *)(v11 + 128) = v56;
  v57 = swift_allocObject(&unk_100746D88, 24, 7);
  *(_QWORD *)(v57 + 16) = v55;
  swift_allocObject(v13, 104, 7);
  v58 = v55;
  v59 = sub_1004C5AA4(0x20746361746E6F43, 0xED00007364726143, 0, 0, (uint64_t)sub_10022ED58, v57);
  swift_release();
  *(_QWORD *)(v11 + 136) = v59;
  *(_QWORD *)&v104 = v11;
  specialized Array._endMutation()(v60);
  v107 = v104;
  v61 = swift_allocObject(&unk_100746DB0, 32, 7);
  v62 = v96;
  *(_QWORD *)(v61 + 16) = v58;
  *(_QWORD *)(v61 + 24) = v62;
  swift_allocObject(v13, 104, 7);
  v63 = v58;
  swift_retain(v62);
  v64 = sub_1004C5AA4(0xD000000000000012, 0x8000000100695850, 0, 0, (uint64_t)sub_10022ED60, v61);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
  v66 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v65 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v66 >= v65 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
  v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
  specialized Array._endMutation()(v67);
  v102 = 0x67615070756F7267;
  v103 = 0xEB00000000676E69;
  AnyHashable.init<A>(_:)(&v102, &type metadata for String, &protocol witness table for String);
  v68 = type metadata accessor for MenuItemDebugSetting();
  v69 = swift_allocObject(v68, 96, 7);
  *(_BYTE *)(v69 + 72) = 0;
  *(_QWORD *)(v69 + 56) = 0x67615070756F7267;
  *(_QWORD *)(v69 + 64) = 0xEB00000000676E69;
  *(_QWORD *)(v69 + 80) = sub_10022E550;
  *(_QWORD *)(v69 + 88) = 0;
  v70 = v105;
  *(_OWORD *)(v69 + 16) = v104;
  *(_OWORD *)(v69 + 32) = v70;
  *(_QWORD *)(v69 + 48) = v106;
  v102 = 0xD00000000000001ELL;
  v103 = 0x8000000100695870;
  AnyHashable.init<A>(_:)(&v102, &type metadata for String, &protocol witness table for String);
  v71 = swift_allocObject(v68, 96, 7);
  *(_BYTE *)(v71 + 72) = 0;
  *(_QWORD *)(v71 + 56) = 0xD00000000000001ELL;
  *(_QWORD *)(v71 + 64) = 0x8000000100695870;
  *(_QWORD *)(v71 + 80) = sub_10022E558;
  *(_QWORD *)(v71 + 88) = 0;
  v72 = v105;
  *(_OWORD *)(v71 + 16) = v104;
  *(_OWORD *)(v71 + 32) = v72;
  *(_QWORD *)(v71 + 48) = v106;
  v73 = v98;
  v74 = swift_allocObject(v98, 48, 7);
  *(_OWORD *)(v74 + 16) = xmmword_1006423E0;
  *(_QWORD *)(v74 + 32) = v69;
  *(_QWORD *)(v74 + 40) = v71;
  *(_QWORD *)&v104 = v74;
  specialized Array._endMutation()(v74);
  v75 = v104;
  v76 = swift_allocObject(&unk_100746DD8, 24, 7);
  *(_QWORD *)(v76 + 16) = ObjectType;
  v77 = type metadata accessor for MenuDebugSetting();
  swift_allocObject(v77, 96, 7);
  swift_retain(v69);
  swift_retain(v71);
  sub_100085A64(0xD000000000000015, 0x8000000100695890, v75, (uint64_t)sub_10022ED78, v76);
  v79 = v78;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
  v81 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v80 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v81 >= v80 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
  v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
  specialized Array._endMutation()(v82);
  v83 = swift_allocObject(v73, 40, 7);
  *(_OWORD *)(v83 + 16) = xmmword_100640AE0;
  v84 = v107;
  v85 = type metadata accessor for DebugSection();
  v86 = (_QWORD *)swift_allocObject(v85, 56, 7);
  v87 = v99;
  v89 = UUID.init()(v88);
  v90 = UUID.uuidString.getter(v89);
  v92 = v91;
  v93 = (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v87, v101);
  v86[2] = v90;
  v86[3] = v92;
  v86[4] = 0x6761502074736554;
  v86[5] = 0xEA00000000007365;
  v86[6] = v84;
  *(_QWORD *)(v83 + 32) = v86;
  *(_QWORD *)&v104 = v83;
  specialized Array._endMutation()(v93);
  v94 = v104;
  swift_release();
  swift_release();
  swift_release();
  return v94;
}

void sub_10022E550()
{
  sub_10022E560(4);
}

void sub_10022E558()
{
  sub_10022E560(2);
}

void sub_10022E560(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.shelfOrthogonalScrollingBehavior.setter(a1);

}

uint64_t sub_10022E5BC()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v7[2];

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = NSUserDefaults.shelfOrthogonalScrollingBehavior.getter();

  v2 = 0xEB00000000676E69;
  v3 = 0x67615070756F7267;
  v4 = 0xE700000000000000;
  v5 = 0x6E776F6E6B6E55;
  if (v1 == 2)
  {
    v5 = 0xD00000000000001ELL;
    v4 = 0x8000000100695870;
  }
  if (v1 != 4)
  {
    v3 = v5;
    v2 = v4;
  }
  v7[0] = v3;
  v7[1] = v2;
  return AnyHashable.init<A>(_:)(v7, &type metadata for String, &protocol witness table for String);
}

void sub_10022E698(uint64_t a1)
{
  id v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  Class isa;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = sub_1005FBE08();

  if ((v3 & 1) != 0)
  {
    sub_1004F93FC();
    v4 = *(void **)(a1 + 24);
    if (v4)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v5 = v4;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 0.5).super.isa;
      sub_1004F8C5C(0xD000000000000023, 0x8000000100695B30, (uint64_t)isa, 0, 0, 3.0);

    }
  }
}

void sub_10022E798(uint64_t a1)
{
  id v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  Class isa;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = sub_1005FBE08();

  if ((v3 & 1) != 0)
  {
    sub_1004F93FC();
    v4 = *(void **)(a1 + 24);
    if (v4)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v5 = v4;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.23137, 0.18824, 0.5).super.isa;
      sub_1004F8C5C(0xD000000000000021, 0x8000000100695B00, (uint64_t)isa, 0, 0, 3.0);

    }
  }
}

void sub_10022E8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  void *v8;
  id v9;
  Class isa;

  v3 = swift_allocObject(&unk_100746EA0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_100746EC8, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = (void *)objc_opt_self(NSUserDefaults);
  swift_retain(a2);
  v6 = objc_msgSend(v5, "standardUserDefaults", swift_retain(v4).n128_f64[0]);
  v7 = sub_1005FBE08();

  if ((v7 & 1) != 0 && (sub_1004F93FC(), (v8 = *(void **)(a2 + 24)) != 0))
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v9 = v8;
    isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.47843, 1.0, 0.5).super.isa;
    sub_1004F8C5C(0xD00000000000004ELL, 0x8000000100695A70, (uint64_t)isa, (uint64_t)sub_1002319E4, v4, 3.0);
    swift_release_n(v4, 2);

  }
  else
  {
    swift_release_n(v4, 2);
  }
}

void sub_10022EA18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSString v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  void *Strong;
  void *v10;
  void *v11;
  id v12;
  _BYTE v13[24];

  v3 = a1 + 16;
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v4, v5, 1);

  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v7, 0, 0);

  objc_msgSend(v6, "addAction:", v8);
  swift_beginAccess(v3, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v6, 1, 0);

  }
  v11 = *(void **)(a2 + 24);
  if (v11)
  {
    v12 = v11;
    sub_1004F8F08();

    v6 = v12;
  }

}

id sub_10022EB8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TestPagesSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TestPagesSettings()
{
  return objc_opt_self(_TtC20ProductPageExtension17TestPagesSettings);
}

uint64_t sub_10022EBDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10022EC04()
{
  off_1008168E8 = &off_100735580;
}

void sub_10022EC18()
{
  off_1008168F0 = &off_1007355F0;
}

unint64_t sub_10022EC2C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    swift_stdlib_random(&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          swift_stdlib_random(&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10022ECD4(uint64_t a1)
{
  sub_1002304D8(a1, 0xD00000000000002DLL, 0x8000000100695940);
}

void sub_10022ED00(uint64_t a1)
{
  sub_1002304D8(a1, 0xD000000000000030, 0x8000000100695900);
}

void sub_10022ED2C(uint64_t a1)
{
  sub_1002304D8(a1, 0xD00000000000002CLL, 0x80000001006958D0);
}

void sub_10022ED60(uint64_t a1)
{
  uint64_t v1;

  sub_10023168C(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_10022ED68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10022ED78()
{
  return sub_10022E5BC();
}

void sub_10022ED80()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v0 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v0);
  v2 = (char *)&v16[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000045, 0x8000000100695BC0);
  v9 = (uint64_t)v5 + *(int *)(sub_10000DAF8(&qword_10080F0E8) + 48);
  *v5 = 0;
  sub_10005AACC((uint64_t)v8, v9);
  swift_storeEnumTagMultiPayload(v5, v3, 9);
  sub_1000E1E3C((uint64_t)v16);
  v10 = v17;
  if (v17)
  {
    v11 = v18;
    sub_100010F08(v16, v17);
    if (qword_100804A30 != -1)
      swift_once(&qword_100804A30, sub_10010F95C);
    v12 = type metadata accessor for FlowPresentationHints(0);
    v13 = sub_10000EFC4(v12, (uint64_t)qword_100865270);
    v14 = type metadata accessor for ReferrerData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v11 + 16))(v5, v13, 0, 0, v2, v10, v11);
    sub_100010F2C((uint64_t)v2, (uint64_t *)&unk_100820690);
    sub_1000340D8((uint64_t)v5, type metadata accessor for FlowDestination);
    sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008092A0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_10022EF9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v0 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v0);
  v2 = (char *)&v18[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD00000000000001ALL, 0x8000000100695BA0);
  v10 = type metadata accessor for URL(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v5, v10);
  swift_storeEnumTagMultiPayload(v8, v6, 20);
  sub_1000E1E3C((uint64_t)v18);
  v12 = v19;
  if (!v19)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v13 = v20;
  sub_100010F08(v18, v19);
  if (qword_100804A30 != -1)
    swift_once(&qword_100804A30, sub_10010F95C);
  v14 = type metadata accessor for FlowPresentationHints(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_100865270);
  v16 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v2, 1, 1, v16);
  (*(void (**)(char *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v13 + 16))(v8, v15, 0, 0, v2, v12, v13);
  sub_100010F2C((uint64_t)v2, (uint64_t *)&unk_100820690);
  sub_1000340D8((uint64_t)v8, type metadata accessor for FlowDestination);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

void sub_10022F1CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v0 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v0);
  v2 = (char *)&v19[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v6);
  v8 = (_QWORD *)((char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v8 = 0;
  URL.init(string:)(0xD00000000000001FLL, 0x8000000100695B80);
  v10 = type metadata accessor for URL(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v12 = (char *)v8 + *(int *)(sub_10000DAF8((uint64_t *)&unk_10080FFB0) + 48);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v12, v5, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  swift_storeEnumTagMultiPayload(v8, v6, 8);
  sub_1000E1E3C((uint64_t)v19);
  v13 = v20;
  if (!v20)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v14 = v21;
  sub_100010F08(v19, v20);
  if (qword_100804A30 != -1)
    swift_once(&qword_100804A30, sub_10010F95C);
  v15 = type metadata accessor for FlowPresentationHints(0);
  v16 = sub_10000EFC4(v15, (uint64_t)qword_100865270);
  v17 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v2, 1, 1, v17);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v14 + 16))(v8, v16, 0, 0, v2, v13, v14);
  sub_100010F2C((uint64_t)v2, (uint64_t *)&unk_100820690);
  sub_1000340D8((uint64_t)v8, type metadata accessor for FlowDestination);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
}

void sub_10022F42C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v0 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v0);
  v2 = (char *)&v12[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000DAF8((uint64_t *)&unk_10080FFB0);
  *v5 = 0;
  URL.init(string:)(0xD000000000000014, 0x8000000100695B60);
  swift_storeEnumTagMultiPayload(v5, v3, 8);
  sub_1000E1E3C((uint64_t)v12);
  v6 = v13;
  if (v13)
  {
    v7 = v14;
    sub_100010F08(v12, v13);
    if (qword_100804A30 != -1)
      swift_once(&qword_100804A30, sub_10010F95C);
    v8 = type metadata accessor for FlowPresentationHints(0);
    v9 = sub_10000EFC4(v8, (uint64_t)qword_100865270);
    v10 = type metadata accessor for ReferrerData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 1, 1, v10);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v7 + 16))(v5, v9, 0, 0, v2, v6, v7);
    sub_100010F2C((uint64_t)v2, (uint64_t *)&unk_100820690);
    sub_1000340D8((uint64_t)v5, type metadata accessor for FlowDestination);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);
  }
  else
  {
    __break(1u);
  }
}

void sub_10022F5EC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  void *v10;
  uint64_t v11;

  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static JULoadingViewController.PresentationContext.placeholder.getter(v3);
  v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v7 = (id)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, 0);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setTitle:", v8);

  v9 = objc_msgSend(a1, "navigationController");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "pushViewController:animated:", v7, 1);

  }
}

void sub_10022F6F4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v0 = sub_10000DAF8((uint64_t *)&unk_100820690);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FinanceType(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowDestination(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, enum case for FinanceType.charity(_:), v4, v9);
  FinanceType.url.getter(v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = type metadata accessor for URL(0, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
  swift_storeEnumTagMultiPayload(v11, v8, 27);
  sub_1000E1E3C((uint64_t)v21);
  v15 = v22;
  if (v22)
  {
    v16 = v23;
    sub_100010F08(v21, v22);
    if (qword_100804A30 != -1)
      swift_once(&qword_100804A30, sub_10010F95C);
    v17 = type metadata accessor for FlowPresentationHints(0);
    v18 = sub_10000EFC4(v17, (uint64_t)qword_100865270);
    v19 = type metadata accessor for ReferrerData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
    (*(void (**)(char *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v16 + 16))(v11, v18, 0, 0, v3, v15, v16);
    sub_100010F2C((uint64_t)v3, (uint64_t *)&unk_100820690);
    sub_1000340D8((uint64_t)v11, type metadata accessor for FlowDestination);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v21);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10022F91C(void *a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  unsigned __int8 v17;
  void *v18;
  id v19;
  Class isa;
  __n128 v21;
  void *v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  __n128 v29;
  void *v30;
  uint64_t v31;
  void *v32;
  __n128 v33;
  void (*v34)(char *, uint64_t);
  __n128 v35;
  void *v36;
  uint64_t (*v37)(char *, uint64_t);
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  __n128 v42;
  uint64_t v44;
  void *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void **aBlock;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  void *v58;
  void (*v59)();
  uint64_t v60;

  v45 = a1;
  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for DispatchQoS(0, v2);
  v48 = *(_QWORD *)(v54 - 8);
  v5 = __chkstk_darwin(v54);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for DispatchTime(0, v5);
  v8 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v14 = type metadata accessor for DebugNotificationCenter();
  inited = swift_initStaticObject(v14, &unk_100806E88);
  v16 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v17 = sub_1005FBE08();

  if ((v17 & 1) != 0)
  {
    sub_1004F93FC();
    v18 = *(void **)(inited + 24);
    if (v18)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v19 = v18;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.47843, 1.0, 0.5).super.isa;
      sub_1004F8C5C(0xD00000000000001ELL, 0x8000000100695A50, (uint64_t)isa, 0, 0, 3.0);

    }
  }
  v52 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter(v21);
  static DispatchTime.now()();
  + infix(_:_:)(v10, 0.5);
  v44 = inited;
  v46 = *(void (**)(char *, uint64_t))(v8 + 8);
  v46(v10, v53);
  v59 = sub_100231934;
  v60 = inited;
  aBlock = _NSConcreteStackBlock;
  v56 = 1107296256;
  v57 = sub_1000924A0;
  v58 = &unk_100746DF0;
  v23 = _Block_copy(&aBlock);
  v24 = swift_release();
  static DispatchQoS.unspecified.getter(v24);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v25 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v47 = v25;
  v26 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v51 = v26;
  v50 = sub_1001B1B90((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v26, v50, v1, v25);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v7, v4, v23);
  _Block_release(v23);

  v49 = *(_QWORD *)(v49 + 8);
  ((void (*)(char *, uint64_t))v49)(v4, v1);
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v7, v54);
  v27 = v53;
  v28 = v46;
  v29.n128_f64[0] = ((double (*)(char *, uint64_t))v46)(v13, v53);
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  static DispatchTime.now()();
  + infix(_:_:)(v10, 1.0);
  v28(v10, v27);
  v31 = v44;
  v59 = sub_100231954;
  v60 = v44;
  aBlock = _NSConcreteStackBlock;
  v56 = 1107296256;
  v57 = sub_1000924A0;
  v58 = &unk_100746E18;
  v32 = _Block_copy(&aBlock);
  v33 = swift_release();
  static DispatchQoS.unspecified.getter(v33);
  aBlock = (void **)_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v50, v1, v47);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v7, v4, v32);
  _Block_release(v32);

  ((void (*)(char *, uint64_t))v49)(v4, v1);
  ((void (*)(char *, uint64_t))v48)(v7, v54);
  v34 = v46;
  v35.n128_f64[0] = ((double (*)(char *, uint64_t))v46)(v13, v27);
  v36 = (void *)static OS_dispatch_queue.main.getter(v35);
  static DispatchTime.now()();
  + infix(_:_:)(v10, 1.5);
  v34(v10, v27);
  v37 = (uint64_t (*)(char *, uint64_t))v34;
  v38 = swift_allocObject(&unk_100746E50, 32, 7);
  v39 = v45;
  *(_QWORD *)(v38 + 16) = v45;
  *(_QWORD *)(v38 + 24) = v31;
  v59 = sub_10023198C;
  v60 = v38;
  aBlock = _NSConcreteStackBlock;
  v56 = 1107296256;
  v57 = sub_1000924A0;
  v58 = &unk_100746E68;
  v40 = _Block_copy(&aBlock);
  v41 = v39;
  v42 = swift_release();
  static DispatchQoS.unspecified.getter(v42);
  aBlock = (void **)_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v50, v1, v47);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v7, v4, v40);
  _Block_release(v40);

  ((void (*)(char *, uint64_t))v49)(v4, v1);
  ((void (*)(char *, uint64_t))v48)(v7, v54);
  return v37(v13, v53);
}

void sub_10022FEB4()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  id v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  Class isa;
  id v8;
  unsigned __int8 v9;
  void *v10;
  id v11;
  Class v12;
  id v13;
  unsigned __int8 v14;
  void *v15;
  id v16;
  Class v17;

  v0 = type metadata accessor for DebugNotificationCenter();
  inited = swift_initStaticObject(v0, &unk_100806E88);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  v4 = sub_1005FBE08();

  if ((v4 & 1) != 0)
  {
    sub_1004F93FC();
    v5 = *(void **)(inited + 24);
    if (v5)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v6 = v5;
      isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.47843, 1.0, 0.5).super.isa;
      sub_1004F8C5C(0xD000000000000034, 0x80000001006959A0, (uint64_t)isa, 0, 0, -1.0);

    }
  }
  v8 = objc_msgSend(v2, "standardUserDefaults");
  v9 = sub_1005FBE08();

  if ((v9 & 1) != 0)
  {
    sub_1004F93FC();
    v10 = *(void **)(inited + 24);
    if (v10)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v11 = v10;
      v12 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 0.5).super.isa;
      sub_1004F8C5C(0xD000000000000030, 0x80000001006959E0, (uint64_t)v12, 0, 0, -1.0);

    }
  }
  v13 = objc_msgSend(v2, "standardUserDefaults");
  v14 = sub_1005FBE08();

  if ((v14 & 1) != 0)
  {
    sub_1004F93FC();
    v15 = *(void **)(inited + 24);
    if (v15)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v16 = v15;
      v17 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.23137, 0.18824, 0.5).super.isa;
      sub_1004F8C5C(0xD00000000000002ELL, 0x8000000100695A20, (uint64_t)v17, 0, 0, -1.0);

    }
  }
}

void sub_100230150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  double (*v24)(char *, _QWORD, uint64_t, uint64_t);
  __n128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v36 = a1;
  v1 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v1);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for FlowDestination(0);
  v3 = __chkstk_darwin(v35);
  v5 = (char **)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = type metadata accessor for ArcadePageUrls(0, v3);
  v6 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - v16;
  v19 = type metadata accessor for URL(0, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000024, 0x8000000100695970);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v17, v19);
  v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v23(v14, v22, v19);
  v24 = *(double (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v24(v14, 0, 1, v19);
  v33 = v22;
  v23(v11, v22, v19);
  v25.n128_f64[0] = v24(v11, 0, 1, v19);
  ArcadePageUrls.init(subscriberUrl:nonSubscriberUrl:)(v14, v11, v25);
  v26 = (char *)v5 + *(int *)(sub_10000DAF8(&qword_100810420) + 48);
  *v5 = 0;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v26, v8, v37);
  swift_storeEnumTagMultiPayload(v5, v35, 13);
  sub_1000E1E3C((uint64_t)v38);
  v27 = v39;
  if (!v39)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v28 = v40;
  sub_100010F08(v38, v39);
  if (qword_100804A30 != -1)
    swift_once(&qword_100804A30, sub_10010F95C);
  v29 = type metadata accessor for FlowPresentationHints(0);
  v30 = sub_10000EFC4(v29, (uint64_t)qword_100865270);
  v31 = type metadata accessor for ReferrerData(0);
  v32 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v34, 1, 1, v31);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v28 + 16))(v5, v30, 0, 0, v32, v27, v28);
  sub_100010F2C(v32, (uint64_t *)&unk_100820690);
  sub_1000340D8((uint64_t)v5, type metadata accessor for FlowDestination);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v37);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v33, v19);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v38);
}

void sub_1002304D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v31 = a1;
  v5 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v5);
  v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a2, a3);
  v18 = type metadata accessor for URL(0, v17);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
  {
    __break(1u);
  }
  else
  {
    v20 = sub_10000DAF8((uint64_t *)&unk_10080FFD0);
    v21 = *(int *)(v20 + 48);
    v22 = *(int *)(v20 + 64);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v13, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    *(_QWORD *)&v16[v21] = 0;
    v16[v22] = 0;
    swift_storeEnumTagMultiPayload(v16, v14, 14);
    sub_1000E1E3C((uint64_t)v32);
    v23 = v33;
    if (v33)
    {
      v24 = v34;
      sub_100010F08(v32, v33);
      v25 = enum case for FlowPresentationContext.infer(_:);
      v26 = type metadata accessor for FlowPresentationContext(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v10, v25, v26);
      v27 = &v10[*(int *)(v8 + 20)];
      v28 = enum case for FlowAnimationBehavior.infer(_:);
      v29 = type metadata accessor for FlowAnimationBehavior(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
      v30 = type metadata accessor for ReferrerData(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v7, 1, 1, v30);
      (*(void (**)(char *, char *, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v24 + 16))(v16, v10, 0, 0, v7, v23, v24);
      sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_100820690);
      sub_1000340D8((uint64_t)v10, type metadata accessor for FlowPresentationHints);
      sub_1000340D8((uint64_t)v16, type metadata accessor for FlowDestination);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v32);
      return;
    }
  }
  __break(1u);
}

void sub_1002307A8()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v0 = sub_10000DAF8(&qword_1008131E0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SuggestedFriend(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  if (qword_100804F00 != -1)
    swift_once(&qword_100804F00, sub_10022EC04);
  v7 = off_1008168E8;
  v8 = *((_QWORD *)off_1008168E8 + 2);
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain(off_1008168E8);
  v9 = sub_10022EC2C(v8);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < v7[2])
  {
    v10 = (char *)&v7[2 * v9];
    v11 = *((_QWORD *)v10 + 4);
    v12 = (void *)*((_QWORD *)v10 + 5);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRelease(v7);
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    v14._countAndFlagsBits = 32;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    if (qword_100804F08 == -1)
      goto LABEL_7;
    goto LABEL_13;
  }
  __break(1u);
LABEL_13:
  swift_once(&qword_100804F08, sub_10022EC18);
LABEL_7:
  v15 = off_1008168F0;
  v16 = *((_QWORD *)off_1008168F0 + 2);
  if (v16)
  {
    swift_bridgeObjectRetain(off_1008168F0);
    v17 = sub_10022EC2C(v16);
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < v15[2])
    {
      v18 = (char *)&v15[2 * v17];
      v19 = *((_QWORD *)v18 + 4);
      v20 = (void *)*((_QWORD *)v18 + 5);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRelease(v15);
      v21._countAndFlagsBits = v19;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease(v20);
      v22 = v27[0];
      v28 = 0;
      memset(v27, 0, sizeof(v27));
      v26 = 0;
      swift_stdlib_random(&v26, 8);
      SuggestedFriend.init(contactID:contactAssociationID:handle:fullName:supportsFriendingViaPush:)(0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, v22, *((_QWORD *)&v22 + 1), (v26 & 0x20000) == 0);
      v23 = type metadata accessor for ImpressionMetrics(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
      v24 = type metadata accessor for ImpressionableSmallPlayerCard(0);
      swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
      ImpressionableSmallPlayerCard.init(id:suggestedFriend:impressionMetrics:)(v27, v6, v3);
      return;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

void sub_100230A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double (*v68)(char *, uint64_t, uint64_t, uint64_t);
  char *v69;
  char *v70;
  __n128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t Strategy;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  _OWORD v145[2];
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  v141 = a1;
  v1 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v1);
  v118 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v116);
  v117 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_10080A2F8);
  v5 = __chkstk_darwin(v4);
  v114 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageMetrics(0, v5);
  __chkstk_darwin(v7);
  v112 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for FlowDestination(0);
  v9 = __chkstk_darwin(v113);
  v115 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Shelf.ContentsMetadata(0, v9);
  v139 = *(_QWORD *)(v11 - 8);
  v140 = v11;
  __chkstk_darwin(v11);
  v138 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Shelf.PresentationHints(0);
  __chkstk_darwin(v137);
  v136 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfBackground(0);
  v134 = *(_QWORD *)(v14 - 8);
  v135 = v14;
  v15 = __chkstk_darwin(v14);
  v133 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for ShelfHorizontalScrollTargetBehavior(0, v15);
  v131 = *(_QWORD *)(v132 - 8);
  v17 = __chkstk_darwin(v132);
  v130 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strategy = type metadata accessor for IncompleteShelfFetchStrategy(0, v17);
  v128 = *(_QWORD *)(Strategy - 8);
  __chkstk_darwin(Strategy);
  v142 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v20);
  v127 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v22);
  v144 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v24);
  v125 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v143 = (char *)&v111 - v27;
  v28 = type metadata accessor for ShelfHeader.Configuration(0);
  __chkstk_darwin(v28);
  v121 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10000DAF8(&qword_10080A300);
  __chkstk_darwin(v30);
  v120 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v119 = (char *)&v111 - v33;
  v34 = sub_10000DAF8(&qword_10080A308);
  __chkstk_darwin(v34);
  v36 = (char *)&v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = v36;
  v37 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v37);
  v39 = (char *)&v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = v39;
  v40 = type metadata accessor for Shelf.ContentType(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v43 = (char *)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = v43;
  v44 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v47 = (char *)&v111 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v126 = swift_allocObject(v48, 40, 7);
  *(_OWORD *)(v126 + 16) = xmmword_100640AE0;
  v49 = UUID.init()((__n128)xmmword_100640AE0);
  v50 = UUID.uuidString.getter(v49);
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  *(_QWORD *)&v145[0] = v50;
  *((_QWORD *)&v145[0] + 1) = v52;
  AnyHashable.init<A>(_:)(v145, &type metadata for String, &protocol witness table for String);
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v43, enum case for Shelf.ContentType.smallContactCard(_:), v40);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v39, 1, 1, v40);
  v53 = type metadata accessor for ShelfMarker(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v36, 1, 1, v53);
  v54 = sub_10000DAF8((uint64_t *)&unk_1008153F8);
  v55 = swift_allocObject(v54, 352, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100640FA0;
  sub_1002307A8();
  v57 = v56;
  v58 = type metadata accessor for ImpressionableSmallPlayerCard(0);
  *(_QWORD *)(v55 + 56) = v58;
  v59 = sub_10000E720((unint64_t *)&unk_10082F6C0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionableSmallPlayerCard, (uint64_t)&protocol conformance descriptor for ImpressionableSmallPlayerCard);
  *(_QWORD *)(v55 + 64) = v59;
  *(_QWORD *)(v55 + 32) = v57;
  sub_1002307A8();
  *(_QWORD *)(v55 + 96) = v58;
  *(_QWORD *)(v55 + 104) = v59;
  *(_QWORD *)(v55 + 72) = v60;
  sub_1002307A8();
  *(_QWORD *)(v55 + 136) = v58;
  *(_QWORD *)(v55 + 144) = v59;
  *(_QWORD *)(v55 + 112) = v61;
  sub_1002307A8();
  *(_QWORD *)(v55 + 176) = v58;
  *(_QWORD *)(v55 + 184) = v59;
  *(_QWORD *)(v55 + 152) = v62;
  sub_1002307A8();
  *(_QWORD *)(v55 + 216) = v58;
  *(_QWORD *)(v55 + 224) = v59;
  *(_QWORD *)(v55 + 192) = v63;
  sub_1002307A8();
  *(_QWORD *)(v55 + 256) = v58;
  *(_QWORD *)(v55 + 264) = v59;
  *(_QWORD *)(v55 + 232) = v64;
  sub_1002307A8();
  *(_QWORD *)(v55 + 296) = v58;
  *(_QWORD *)(v55 + 304) = v59;
  *(_QWORD *)(v55 + 272) = v65;
  sub_1002307A8();
  *(_QWORD *)(v55 + 336) = v58;
  *(_QWORD *)(v55 + 344) = v59;
  *(_QWORD *)(v55 + 312) = v66;
  v67 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v68 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56);
  v69 = v119;
  v68(v119, 1, 1, v67);
  v70 = v120;
  v71.n128_f64[0] = v68(v120, 1, 1, v67);
  v72 = v121;
  ShelfHeader.Configuration.init(eyebrowColor:eyebrowImageColor:titleColor:titleImageColor:subtitleColor:accessoryColor:includeSeparator:includeTrailingArtwork:prefersShelfHeader:)(0, 0, 0, 0, 0, 0, 2, 2, v71, 2);
  v73 = type metadata accessor for ShelfHeader(0);
  swift_allocObject(v73, *(unsigned int *)(v73 + 48), *(unsigned __int16 *)(v73 + 52));
  v121 = (char *)ShelfHeader.init(eyebrow:eyebrowArtwork:eyebrowArtworkType:eyebrowAction:eyebrowTrailingArtwork:title:titleArtwork:titleArtworkType:titleAction:subtitle:trailingArtwork:accessoryAction:configuration:)(0, 0, 0, v69, 0, 0, 0xD000000000000013, 0x80000001006958B0, 0, v70, 0, 0, 0, 0, 0, v72);
  v75 = type metadata accessor for URL(0, v74);
  v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56);
  v76(v143, 1, 1, v75);
  v77 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v144, 1, 1, v77);
  v78 = type metadata accessor for ImpressionMetrics(0);
  v79 = v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v127, 1, 1, v78);
  v80 = v125;
  v120 = (char *)v75;
  v119 = (char *)v76;
  v76(v125, 1, 1, v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v142, enum case for IncompleteShelfFetchStrategy.onPageLoad(_:), Strategy);
  v81 = v130;
  (*(void (**)(char *, _QWORD, uint64_t))(v131 + 104))(v130, enum case for ShelfHorizontalScrollTargetBehavior.viewAligned(_:), v132);
  v82 = v133;
  (*(void (**)(char *, _QWORD, uint64_t))(v134 + 104))(v133, enum case for ShelfBackground.none(_:), v135);
  v83 = sub_10000DAF8(&qword_10080A318);
  swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
  v84 = AsyncEvent.init()();
  *(_QWORD *)&v145[0] = _swiftEmptyArrayStorage;
  v85 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v86 = sub_10000DAF8(&qword_10080A320);
  v87 = sub_1001B1B90((unint64_t *)&qword_10081DB50, &qword_10080A320);
  v88 = v136;
  dispatch thunk of SetAlgebra.init<A>(_:)(v145, v86, v87, v137, v85);
  v89 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v138, enum case for Shelf.ContentsMetadata.none(_:), v140);
  v90 = type metadata accessor for Shelf(0);
  swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
  v91 = Shelf.init(id:contentType:placeholderContentType:marker:items:header:url:mergeWhenFetched:batchGroup:fetchStrategy:footerTitle:footerAction:isHidden:isHorizontal:horizontalScrollTargetBehavior:isPersonalized:rowsPerColumn:background:onShouldRemoveModel:removeModelEvents:presentationHints:contentsMetadata:nextPreferredContentRefreshDate:impressionMetrics:refreshUrl:pageChangeMetrics:adIncidents:)(&v146, v124, v123, v122, v55, v121, v143, 0, 0, 0, v142, 0, 0, 0, 256, v81, 0, 0, v82,
          v84,
          _swiftEmptyArrayStorage,
          v88,
          v89,
          v144,
          v79,
          v80,
          0,
          0);
  v92 = v126;
  *(_QWORD *)(v126 + 32) = v91;
  v146 = v92;
  specialized Array._endMutation()(v91);
  v93 = v146;
  sub_1000E1E3C((uint64_t)&v146);
  v94 = v147;
  if (v147)
  {
    v95 = v148;
    sub_100010F08(&v146, v147);
    v96 = sub_10000DAF8((uint64_t *)&unk_10080FFB0);
    v97 = v115;
    v98 = &v115[*(int *)(v96 + 48)];
    memset(v145, 0, sizeof(v145));
    v99 = v112;
    static PageMetrics.notInstrumented.getter((__n128)0);
    v100 = type metadata accessor for JSONContext(0);
    v101 = v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v114, 1, 1, v100);
    v102 = type metadata accessor for GenericPage(0);
    swift_allocObject(v102, *(unsigned int *)(v102 + 48), *(unsigned __int16 *)(v102 + 52));
    *v97 = GenericPage.init(shelves:title:shareAction:presentationOptions:nextPage:isIncomplete:uber:loadCompletedAction:pageRefreshPolicy:pageMetrics:pageRenderEvent:context:)(v93, 0x6568532074736554, 0xEA0000000000666CLL, 0, 0, v145, 0, 0, 0, 0, v99, 0, v101);
    ((void (*)(char *, uint64_t, uint64_t, char *))v119)(v98, 1, 1, v120);
    swift_storeEnumTagMultiPayload(v97, v113, 8);
    v103 = enum case for FlowPresentationContext.infer(_:);
    v104 = type metadata accessor for FlowPresentationContext(0);
    v105 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 104))(v117, v103, v104);
    v106 = v105 + *(int *)(v116 + 20);
    v107 = enum case for FlowAnimationBehavior.infer(_:);
    v108 = type metadata accessor for FlowAnimationBehavior(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v106, v107, v108);
    v109 = type metadata accessor for ReferrerData(0);
    v110 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v118, 1, 1, v109);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v95 + 16))(v97, v105, 0, 0, v110, v94, v95);
    sub_100010F2C(v110, (uint64_t *)&unk_100820690);
    sub_1000340D8(v105, type metadata accessor for FlowPresentationHints);
    sub_1000340D8((uint64_t)v97, type metadata accessor for FlowDestination);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v146);
  }
  else
  {
    __break(1u);
  }
}

void sub_10023168C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  objc_class *v12;
  char *v13;
  double v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD *, char *, _QWORD, _QWORD, char *, uint64_t, uint64_t);
  id v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  objc_super v31;

  v3 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v3);
  v5 = (char *)&v28[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v9);
  v11 = (_QWORD *)((char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (objc_class *)type metadata accessor for LocalizationTestViewController();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension30LocalizationTestViewController_objectGraph] = a2;
  v31.receiver = v13;
  v31.super_class = v12;
  *(_QWORD *)&v14 = swift_retain(a2).n128_u64[0];
  v15 = objc_msgSendSuper2(&v31, "initWithNibName:bundle:", 0, 0, v14);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setTitle:", v16);

  sub_1000E1E3C((uint64_t)v28);
  v17 = v29;
  if (v29)
  {
    v18 = v30;
    sub_100010F08(v28, v29);
    *v11 = v15;
    swift_storeEnumTagMultiPayload(v11, v9, 19);
    v19 = enum case for FlowPresentationContext.push(_:);
    v20 = type metadata accessor for FlowPresentationContext(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v8, v19, v20);
    v21 = &v8[*(int *)(v6 + 20)];
    v22 = enum case for FlowAnimationBehavior.infer(_:);
    v23 = type metadata accessor for FlowAnimationBehavior(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
    v24 = type metadata accessor for ReferrerData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
    v25 = *(void (**)(_QWORD *, char *, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v18 + 16);
    v26 = v15;
    v25(v11, v8, 0, 0, v5, v17, v18);

    sub_100010F2C((uint64_t)v5, (uint64_t *)&unk_100820690);
    sub_1000340D8((uint64_t)v8, type metadata accessor for FlowPresentationHints);
    sub_1000340D8((uint64_t)v11, type metadata accessor for FlowDestination);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  }
  else
  {
    __break(1u);
  }
}

void sub_100231934()
{
  uint64_t v0;

  sub_10022E698(v0);
}

uint64_t sub_10023193C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10023194C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100231954()
{
  uint64_t v0;

  sub_10022E798(v0);
}

uint64_t sub_100231960()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10023198C()
{
  uint64_t v0;

  sub_10022E8A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100231994()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002319B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002319E4()
{
  uint64_t v0;

  sub_10022EA18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100231A2C()
{
  uint64_t v0;
  uint64_t *v1;
  __n128 v2;

  v0 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980(v0, qword_1008660C8);
  v1 = (uint64_t *)sub_10000EFC4(v0, (uint64_t)qword_1008660C8);
  v2.n128_u64[0] = 29.0;
  return sub_100231A90(0, v1, v2);
}

uint64_t sub_100231A7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  a3.n128_u64[0] = 29.0;
  return sub_100231A90(a1, a2, a3);
}

uint64_t sub_100231A84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  a3.n128_u64[0] = 0x4045000000000000;
  return sub_100231A90(a1, a2, a3);
}

uint64_t sub_100231A90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  double v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD *v23;
  void (*v24)(_QWORD *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  _QWORD *v26;
  char *v27;
  int *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[3];
  uint64_t v43;
  void *v44;

  v3 = a3.n128_f64[0];
  v6 = type metadata accessor for FontSource(0, a3);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for StaticDimension(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v41 = (char *)&v35 - v12;
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v37 = (uint64_t)a1;
  }
  else
  {
    sub_100035178();
    v37 = static UIColor.appTint.getter();
  }
  v17 = qword_100805F68;
  v18 = a1;
  if (v17 != -1)
    swift_once(&qword_100805F68, sub_1004C5BB8);
  v19 = sub_10000EFC4(v13, (uint64_t)qword_100868F28);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20(v16, v19, v13);
  v20(v9, v19, v13);
  v21 = enum case for FontSource.useCase(_:);
  v36 = v14;
  v22 = (void (*)(char *, uint64_t, uint64_t))v7[13];
  v22(v9, enum case for FontSource.useCase(_:), v6);
  v43 = v6;
  v44 = &protocol witness table for FontSource;
  v23 = sub_1000119C0(v42);
  v35 = v16;
  v24 = (void (*)(_QWORD *, char *, uint64_t))v7[2];
  v24(v23, v9, v6);
  StaticDimension.init(_:scaledLike:)(v42, v3);
  v25 = (void (*)(char *, uint64_t))v7[1];
  v25(v9, v6);
  v20(v9, v19, v13);
  v22(v9, v21, v6);
  v43 = v6;
  v44 = &protocol witness table for FontSource;
  v26 = sub_1000119C0(v42);
  v24(v26, v9, v6);
  v27 = v39;
  StaticDimension.init(_:scaledLike:)(v42, 0.0);
  v25(v9, v6);
  v28 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v29 = (uint64_t *)((char *)a2 + v28[12]);
  v30 = type metadata accessor for ZeroDimension(0);
  v29[3] = v30;
  v29[4] = &protocol witness table for ZeroDimension;
  sub_1000119C0(v29);
  static ZeroDimension.zero.getter();
  v31 = (uint64_t *)((char *)a2 + v28[13]);
  v31[3] = v30;
  v31[4] = &protocol witness table for ZeroDimension;
  sub_1000119C0(v31);
  static ZeroDimension.zero.getter();
  a2[1] = 0;
  a2[2] = 0;
  *a2 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))((char *)a2 + v28[6], v35, v13);
  *(uint64_t *)((char *)a2 + v28[7]) = 0;
  *(_DWORD *)((char *)a2 + v28[8]) = 1077936128;
  v32 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v33 = v40;
  v32((char *)a2 + v28[9], v41, v40);
  result = ((uint64_t (*)(char *, char *, uint64_t))v32)((char *)a2 + v28[10], v27, v33);
  *(_DWORD *)((char *)a2 + v28[11]) = 1098907648;
  return result;
}

uint64_t sub_100231DD0(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  void *v43;
  __int128 v44;
  uint64_t v45;
  void *v46;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for StaticDimension(0);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v40 = (char *)&v30 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_1008660E0);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_1008660E0);
  sub_100035178();
  v36 = static UIColor.primaryText.getter();
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v34 = v15;
  v35 = v14;
  if (qword_100805F68 != -1)
    swift_once(&qword_100805F68, sub_1004C5BB8);
  v16 = sub_10000EFC4(v8, (uint64_t)qword_100868F28);
  v33 = v9;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, v16, v8);
  v17(v4, v16, v8);
  v30 = v8;
  v18 = enum case for FontSource.useCase(_:);
  v31 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v31(v4, enum case for FontSource.useCase(_:), v1);
  v45 = v1;
  v46 = &protocol witness table for FontSource;
  v19 = sub_1000119C0(&v44);
  v32 = v11;
  v20 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v20(v19, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v44, 42.0);
  v21 = (void (*)(char *, uint64_t))v2[1];
  v21(v4, v1);
  v22 = v30;
  v17(v4, v16, v30);
  v31(v4, v18, v1);
  v45 = v1;
  v46 = &protocol witness table for FontSource;
  v23 = sub_1000119C0(&v44);
  v20(v23, v4, v1);
  v24 = v38;
  StaticDimension.init(_:scaledLike:)(&v44, 2.0);
  v21(v4, v1);
  v25 = type metadata accessor for ZeroDimension(0);
  v45 = v25;
  v46 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v44);
  static ZeroDimension.zero.getter();
  v42 = v25;
  v43 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v41);
  static ZeroDimension.zero.getter();
  v26 = v35;
  *(_QWORD *)v13 = v36;
  *((_QWORD *)v13 + 1) = v26;
  *((_QWORD *)v13 + 2) = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v13[v12[6]], v32, v22);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1077936128;
  v27 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v28 = v39;
  v27(&v13[v12[9]], v40, v39);
  v27(&v13[v12[10]], v24, v28);
  *(_DWORD *)&v13[v12[11]] = 1098907648;
  sub_100010E24(&v44, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v41, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100232150(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StaticDimension(0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v35 = (char *)&v27 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_1008660F8);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_1008660F8);
  sub_100035178();
  v31 = static UIColor.primaryText.getter();
  if (qword_100805F70 != -1)
    swift_once(&qword_100805F70, sub_1004C5BD0);
  v14 = sub_10000EFC4(v8, (uint64_t)qword_100868F40);
  v30 = v9;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  v15(v4, v14, v8);
  v27 = v8;
  v16 = enum case for FontSource.useCase(_:);
  v28 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v28(v4, enum case for FontSource.useCase(_:), v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v17 = sub_1000119C0(&v39);
  v29 = v11;
  v18 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v18(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v39, 36.0);
  v19 = (void (*)(char *, uint64_t))v2[1];
  v19(v4, v1);
  v20 = v27;
  v15(v4, v14, v27);
  v28(v4, v16, v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v21 = sub_1000119C0(&v39);
  v18(v21, v4, v1);
  v22 = v33;
  StaticDimension.init(_:scaledLike:)(&v39, 16.0);
  v19(v4, v1);
  v23 = type metadata accessor for ZeroDimension(0);
  v40 = v23;
  v41 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v39);
  static ZeroDimension.zero.getter();
  v37 = v23;
  v38 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v36);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v13[v12[6]], v29, v20);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v24 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v25 = v34;
  v24(&v13[v12[9]], v35, v34);
  v24(&v13[v12[10]], v22, v25);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v39, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v36, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_1002324B0@<X0>(void *a1@<X0>, char *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double (*v21)(char *, uint64_t, uint64_t);
  __n128 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  void (*v33)(_QWORD *, char *, uint64_t);
  void (*v34)(char *, uint64_t);
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(_QWORD *, char *, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  __int128 v64;
  uint64_t v65;
  void *v66;

  v52 = a2;
  v4 = type metadata accessor for FontSource(0, a3);
  v53 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for StaticDimension(0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v60 = (char *)&v50 - v9;
  v10 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - v18;
  if (qword_100805F90 != -1)
    swift_once(&qword_100805F90, sub_1004C5C34);
  v20 = sub_10000EFC4(v13, (uint64_t)qword_100868FA0);
  v55 = v14;
  v21 = *(double (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v59 = v19;
  v22.n128_f64[0] = v21(v19, v20, v13);
  v23 = sub_1002328D0(v12, v22);
  v24 = UITraitCollection.isSizeClassCompact.getter(v23);
  v25 = sub_100035178();
  v54 = v12;
  if ((v24 & 1) != 0)
    v26 = static UIColor.primaryText.getter();
  else
    v26 = static UIColor.secondaryText.getter(v25);
  v51 = v26;
  v27 = v59;
  v21(v16, (uint64_t)v59, v13);
  v28 = sub_100236438(a1);
  v21(v6, (uint64_t)v27, v13);
  v29 = enum case for FontSource.useCase(_:);
  v50 = v16;
  v30 = v53;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 104);
  v31(v6, enum case for FontSource.useCase(_:), v4);
  v65 = v4;
  v66 = &protocol witness table for FontSource;
  v32 = sub_1000119C0(&v64);
  v33 = *(void (**)(_QWORD *, char *, uint64_t))(v30 + 16);
  v33(v32, v6, v4);
  StaticDimension.init(_:scaledLike:)(&v64, v28);
  v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v6, v4);
  v35 = v59;
  v21(v6, (uint64_t)v59, v13);
  v31(v6, v29, v4);
  v65 = v4;
  v66 = &protocol witness table for FontSource;
  v36 = sub_1000119C0(&v64);
  v33(v36, v6, v4);
  v37 = v57;
  StaticDimension.init(_:scaledLike:)(&v64, 0.0);
  v34(v6, v4);
  v38 = (uint64_t)v54;
  v39 = (char *)v54 + v10[9];
  v40 = v58;
  v65 = v58;
  v66 = &protocol witness table for StaticDimension;
  v41 = sub_1000119C0(&v64);
  v42 = v56;
  v43 = *(void (**)(_QWORD *, char *, uint64_t))(v56 + 16);
  v43(v41, v39, v40);
  v44 = v38 + v10[10];
  v62 = v40;
  v63 = &protocol witness table for StaticDimension;
  v45 = sub_1000119C0(&v61);
  v43(v45, (char *)v44, v40);
  sub_100236928(v38);
  v46 = v55;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v13);
  v47 = v52;
  *((_QWORD *)v52 + 1) = 0;
  *((_QWORD *)v47 + 2) = 0;
  *(_QWORD *)v47 = v51;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v47[v10[6]], v50, v13);
  *(_QWORD *)&v47[v10[7]] = 0;
  *(_DWORD *)&v47[v10[8]] = 1098907648;
  v48 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v48(&v47[v10[9]], v60, v40);
  v48(&v47[v10[10]], v37, v40);
  *(_DWORD *)&v47[v10[11]] = 0;
  sub_100010E24(&v64, (uint64_t)&v47[v10[12]]);
  return sub_100010E24(&v61, (uint64_t)&v47[v10[13]]);
}

uint64_t sub_1002328D0@<X0>(uint64_t *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  char *v23;
  int *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  _QWORD v38[3];
  uint64_t v39;
  void *v40;

  v3 = type metadata accessor for FontSource(0, a2);
  v4 = *(_QWORD **)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for StaticDimension(0);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v37 = (char *)&v31 - v9;
  v10 = type metadata accessor for FontUseCase(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100035178();
  v33 = static UIColor.secondaryText.getter(v14);
  if (qword_100805F88 != -1)
    swift_once(&qword_100805F88, sub_1004C5C18);
  v15 = sub_10000EFC4(v10, (uint64_t)qword_100868F88);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16(v13, v15, v10);
  v16(v6, v15, v10);
  v17 = enum case for FontSource.useCase(_:);
  v32 = v11;
  v18 = (void (*)(char *, uint64_t, uint64_t))v4[13];
  v18(v6, enum case for FontSource.useCase(_:), v3);
  v39 = v3;
  v40 = &protocol witness table for FontSource;
  v19 = sub_1000119C0(v38);
  v31 = v13;
  v20 = (void (*)(_QWORD *, char *, uint64_t))v4[2];
  v20(v19, v6, v3);
  StaticDimension.init(_:scaledLike:)(v38, 28.0);
  v21 = (void (*)(char *, uint64_t))v4[1];
  v21(v6, v3);
  v16(v6, v15, v10);
  v18(v6, v17, v3);
  v39 = v3;
  v40 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(v38);
  v20(v22, v6, v3);
  v23 = v35;
  StaticDimension.init(_:scaledLike:)(v38, 0.0);
  v21(v6, v3);
  v24 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v25 = (uint64_t *)((char *)a1 + v24[12]);
  v26 = type metadata accessor for ZeroDimension(0);
  v25[3] = v26;
  v25[4] = &protocol witness table for ZeroDimension;
  sub_1000119C0(v25);
  static ZeroDimension.zero.getter();
  v27 = (uint64_t *)((char *)a1 + v24[13]);
  v27[3] = v26;
  v27[4] = &protocol witness table for ZeroDimension;
  sub_1000119C0(v27);
  static ZeroDimension.zero.getter();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)a1 + v24[6], v31, v10);
  *(uint64_t *)((char *)a1 + v24[7]) = 0;
  *(_DWORD *)((char *)a1 + v24[8]) = 1098907648;
  v28 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v29 = v36;
  v28((char *)a1 + v24[9], v37, v36);
  result = ((uint64_t (*)(char *, char *, uint64_t))v28)((char *)a1 + v24[10], v23, v29);
  *(_DWORD *)((char *)a1 + v24[11]) = 0;
  return result;
}

uint64_t sub_100232BEC(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for StaticDimension(0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v36 = (char *)&v28 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_100866110);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_100866110);
  v14 = sub_100035178();
  v32 = static UIColor.secondaryText.getter(v14);
  if (qword_100805F78 != -1)
    swift_once(&qword_100805F78, sub_1004C5BE8);
  v15 = sub_10000EFC4(v8, (uint64_t)qword_100868F58);
  v31 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v28 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v29 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v29(v4, enum case for FontSource.useCase(_:), v1);
  v41 = v1;
  v42 = &protocol witness table for FontSource;
  v18 = sub_1000119C0(&v40);
  v30 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v40, 39.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v28;
  v16(v4, v15, v28);
  v29(v4, v17, v1);
  v41 = v1;
  v42 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v40);
  v19(v22, v4, v1);
  v23 = v34;
  StaticDimension.init(_:scaledLike:)(&v40, 5.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v40);
  static ZeroDimension.zero.getter();
  v38 = v24;
  v39 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v37);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v13[v12[6]], v30, v21);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v25 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v26 = v35;
  v25(&v13[v12[9]], v36, v35);
  v25(&v13[v12[10]], v23, v26);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v40, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v37, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100232F54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  double v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  _QWORD *v25;
  void (*v26)(_QWORD *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  __n128 v33;
  uint64_t v34;
  int *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  __int128 v49;
  uint64_t v50;
  void *v51;

  v5 = type metadata accessor for FontSource(0, a3);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for StaticDimension(0);
  v42 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v45 = (char *)&v39 - v11;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - v17;
  if (qword_100805F90 != -1)
    swift_once(&qword_100805F90, sub_1004C5C34);
  v19 = sub_10000EFC4(v12, (uint64_t)qword_100868FA0);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20(v18, v19, v12);
  v21 = sub_100236438(a1);
  v22 = sub_100035178();
  v41 = static UIColor.primaryText.getter(v22);
  v20(v15, (uint64_t)v18, v12);
  v20(v8, (uint64_t)v18, v12);
  v23 = enum case for FontSource.useCase(_:);
  v40 = v15;
  v24 = (void (*)(char *, uint64_t, uint64_t))v6[13];
  v24(v8, enum case for FontSource.useCase(_:), v5);
  v50 = v5;
  v51 = &protocol witness table for FontSource;
  v25 = sub_1000119C0(&v49);
  v39 = v13;
  v26 = (void (*)(_QWORD *, char *, uint64_t))v6[2];
  v26(v25, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v49, v21);
  v27 = (void (*)(char *, uint64_t))v6[1];
  v27(v8, v5);
  v20(v8, (uint64_t)v18, v12);
  v24(v8, v23, v5);
  v50 = v5;
  v51 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(&v49);
  v26(v28, v8, v5);
  v29 = v43;
  StaticDimension.init(_:scaledLike:)(&v49, 16.0);
  v27(v8, v5);
  v30 = type metadata accessor for ZeroDimension(0);
  v50 = v30;
  v51 = &protocol witness table for ZeroDimension;
  v31 = sub_1000119C0(&v49);
  static ZeroDimension.zero.getter(v31);
  v47 = v30;
  v48 = &protocol witness table for ZeroDimension;
  v32 = sub_1000119C0(&v46);
  v33 = static ZeroDimension.zero.getter(v32);
  v34 = v39;
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v18, v12, v33);
  *a2 = v41;
  v35 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)a2 + v35[6], v40, v12);
  *(uint64_t *)((char *)a2 + v35[7]) = 0;
  *(_DWORD *)((char *)a2 + v35[8]) = 1090519040;
  v36 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v37 = v44;
  v36((char *)a2 + v35[9], v45, v44);
  v36((char *)a2 + v35[10], v29, v37);
  *(_DWORD *)((char *)a2 + v35[11]) = 0;
  sub_100010E24(&v49, (uint64_t)a2 + v35[12]);
  return sub_100010E24(&v46, (uint64_t)a2 + v35[13]);
}

uint64_t sub_1002332D8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  uint64_t v34;
  void *v35;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  v26 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v27 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v29 = (char *)&v24 - v8;
  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_100866128);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_100866128);
  v14 = sub_100035178();
  v25 = static UIColor.secondaryText.getter(v14);
  if (qword_100805F80 != -1)
    swift_once(&qword_100805F80, sub_1004C5C00);
  v15 = sub_10000EFC4(v9, (uint64_t)qword_100868F70);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16(v28, v15, v9);
  v16(v4, v15, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v34 = v1;
  v35 = &protocol witness table for FontSource;
  v17 = sub_1000119C0(&v33);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v33, 22.0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v18 = sub_10000EFC4(v5, (uint64_t)qword_10086A7E8);
  v20 = v26;
  v19 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v27, v18, v5);
  v21 = type metadata accessor for ZeroDimension(0);
  v34 = v21;
  v35 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v33);
  static ZeroDimension.zero.getter();
  v31 = v21;
  v32 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v30);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12[6]], v28, v9);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v22 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v22(&v13[v12[9]], v29, v5);
  v22(&v13[v12[10]], v19, v5);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v33, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v30, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100233604(uint64_t a1, __n128 a2)
{
  return sub_1002340E4(a2, a1, qword_100866140, &qword_100806828, (uint64_t)qword_10086A8A8, (uint64_t)sub_1004D551C);
}

uint64_t sub_100233628(uint64_t a1, __n128 a2)
{
  return sub_1002340E4(a2, a1, qword_100866158, &qword_100806828, (uint64_t)qword_10086A8A8, (uint64_t)sub_1004D551C);
}

uint64_t sub_10023364C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StaticDimension(0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v35 = (char *)&v27 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_100866170);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_100866170);
  sub_100035178();
  v31 = static UIColor.primaryText.getter();
  if (qword_100805FA0 != -1)
    swift_once(&qword_100805FA0, sub_1004C5C6C);
  v14 = sub_10000EFC4(v8, (uint64_t)qword_100868FD0);
  v30 = v9;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  v15(v4, v14, v8);
  v27 = v8;
  v16 = enum case for FontSource.useCase(_:);
  v28 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v28(v4, enum case for FontSource.useCase(_:), v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v17 = sub_1000119C0(&v39);
  v29 = v11;
  v18 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v18(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v39, 30.0);
  v19 = (void (*)(char *, uint64_t))v2[1];
  v19(v4, v1);
  v20 = v27;
  v15(v4, v14, v27);
  v28(v4, v16, v1);
  v40 = v1;
  v41 = &protocol witness table for FontSource;
  v21 = sub_1000119C0(&v39);
  v18(v21, v4, v1);
  v22 = v33;
  StaticDimension.init(_:scaledLike:)(&v39, 34.0);
  v19(v4, v1);
  v23 = type metadata accessor for ZeroDimension(0);
  v40 = v23;
  v41 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v39);
  static ZeroDimension.zero.getter();
  v37 = v23;
  v38 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v36);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v13[v12[6]], v29, v20);
  *(_QWORD *)&v13[v12[7]] = 0x3FE8A3D70A3D70A4;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v24 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v25 = v34;
  v24(&v13[v12[9]], v35, v34);
  v24(&v13[v12[10]], v22, v25);
  *(_DWORD *)&v13[v12[11]] = 1102053376;
  sub_100010E24(&v39, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v36, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_1002339C0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4040000000000000;
  return sub_1002339E4(a2, a1, qword_100866188);
}

uint64_t sub_1002339D4(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_1002339E4(a2, a1, qword_1008661A0);
}

uint64_t sub_1002339E4(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  _QWORD *v22;
  void (*v23)(_QWORD *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  __int128 v42;
  uint64_t v43;
  void *v44;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for StaticDimension(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v36 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v38 = (char *)&v32 - v11;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v16, a3);
  v17 = (char *)sub_10000EFC4((uint64_t)v16, (uint64_t)a3);
  sub_100035178();
  v34 = static UIColor.primaryText.getter();
  if (qword_100805F98 != -1)
    swift_once(&qword_100805F98, sub_1004C5C50);
  v18 = sub_10000EFC4(v12, (uint64_t)qword_100868FB8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19(v15, v18, v12);
  v19(v8, v18, v12);
  v20 = enum case for FontSource.useCase(_:);
  v33 = v13;
  v21 = (void (*)(char *, uint64_t, uint64_t))v6[13];
  v21(v8, enum case for FontSource.useCase(_:), v5);
  v43 = v5;
  v44 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v42);
  v32 = v15;
  v23 = (void (*)(_QWORD *, char *, uint64_t))v6[2];
  v23(v22, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v42, v3);
  v24 = (void (*)(char *, uint64_t))v6[1];
  v24(v8, v5);
  if (qword_100805F78 != -1)
    swift_once(&qword_100805F78, sub_1004C5BE8);
  v25 = sub_10000EFC4(v12, (uint64_t)qword_100868F58);
  v19(v8, v25, v12);
  v21(v8, v20, v5);
  v43 = v5;
  v44 = &protocol witness table for FontSource;
  v26 = sub_1000119C0(&v42);
  v23(v26, v8, v5);
  v27 = v36;
  StaticDimension.init(_:scaledLike:)(&v42, 0.0);
  v24(v8, v5);
  v28 = type metadata accessor for ZeroDimension(0);
  v43 = v28;
  v44 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v42);
  static ZeroDimension.zero.getter();
  v40 = v28;
  v41 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v39);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v17[v16[6]], v32, v12);
  *(_QWORD *)&v17[v16[7]] = 0;
  *(_DWORD *)&v17[v16[8]] = 1090519040;
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v30 = v37;
  v29(&v17[v16[9]], v38, v37);
  v29(&v17[v16[10]], v27, v30);
  *(_DWORD *)&v17[v16[11]] = 1102053376;
  sub_100010E24(&v42, (uint64_t)&v17[v16[12]]);
  return sub_100010E24(&v39, (uint64_t)&v17[v16[13]]);
}

uint64_t sub_100233D74(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4045000000000000;
  return sub_100233D88(a2, a1, qword_1008661B8);
}

uint64_t sub_100233D88(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  __int128 v36;
  uint64_t v37;
  void *v38;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  v29 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v32 = (char *)&v27 - v12;
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v31 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v16, a3);
  v17 = (char *)sub_10000EFC4((uint64_t)v16, (uint64_t)a3);
  sub_100035178();
  v28 = static UIColor.primaryText.getter();
  if (qword_100805F98 != -1)
    swift_once(&qword_100805F98, sub_1004C5C50);
  v18 = sub_10000EFC4(v13, (uint64_t)qword_100868FB8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19(v31, v18, v13);
  v19(v8, v18, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v37 = v5;
  v38 = &protocol witness table for FontSource;
  v20 = sub_1000119C0(&v36);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v20, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v36, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v21 = sub_10000EFC4(v9, (uint64_t)qword_10086A7E8);
  v23 = v29;
  v22 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v21, v9);
  v24 = type metadata accessor for ZeroDimension(0);
  v37 = v24;
  v38 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v36);
  static ZeroDimension.zero.getter();
  v34 = v24;
  v35 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v33);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = v28;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v17[v16[6]], v31, v13);
  *(_QWORD *)&v17[v16[7]] = 0;
  *(_DWORD *)&v17[v16[8]] = 1090519040;
  v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v25(&v17[v16[9]], v32, v9);
  v25(&v17[v16[10]], v22, v9);
  *(_DWORD *)&v17[v16[11]] = 1102053376;
  sub_100010E24(&v36, (uint64_t)&v17[v16[12]]);
  return sub_100010E24(&v33, (uint64_t)&v17[v16[13]]);
}

uint64_t sub_1002340C0(uint64_t a1, __n128 a2)
{
  return sub_1002340E4(a2, a1, qword_1008661D0, &qword_1008067E8, (uint64_t)qword_10086A7E8, (uint64_t)sub_1004D51EC);
}

uint64_t sub_1002340E4(__n128 a1, uint64_t a2, uint64_t *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;

  v29 = a6;
  v31 = a4;
  v32 = a5;
  v7 = type metadata accessor for FontSource(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticDimension(0);
  v33 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v34 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v36 = (char *)&v29 - v14;
  v15 = type metadata accessor for FontUseCase(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v18, a3);
  v19 = (char *)sub_10000EFC4((uint64_t)v18, (uint64_t)a3);
  sub_100035178();
  v30 = static UIColor.primaryText.getter();
  if (qword_100805F98 != -1)
    swift_once(&qword_100805F98, sub_1004C5C50);
  v20 = sub_10000EFC4(v15, (uint64_t)qword_100868FB8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v21(v35, v20, v15);
  v21(v10, v20, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FontSource.useCase(_:), v7);
  v41 = v7;
  v42 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v40);
  (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v22, v10, v7);
  StaticDimension.init(_:scaledLike:)(&v40, 29.0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (*v31 != -1)
    swift_once(v31, v29);
  v23 = sub_10000EFC4(v11, v32);
  v25 = v33;
  v24 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v23, v11);
  v26 = type metadata accessor for ZeroDimension(0);
  v41 = v26;
  v42 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v40);
  static ZeroDimension.zero.getter();
  v38 = v26;
  v39 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v37);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v19 + 1) = 0;
  *((_QWORD *)v19 + 2) = 0;
  *(_QWORD *)v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v19[v18[6]], v35, v15);
  *(_QWORD *)&v19[v18[7]] = 0;
  *(_DWORD *)&v19[v18[8]] = 1090519040;
  v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v27(&v19[v18[9]], v36, v11);
  v27(&v19[v18[10]], v24, v11);
  *(_DWORD *)&v19[v18[11]] = 1102053376;
  sub_100010E24(&v40, (uint64_t)&v19[v18[12]]);
  return sub_100010E24(&v37, (uint64_t)&v19[v18[13]]);
}

uint64_t sub_100234408(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4045000000000000;
  return sub_10023443C(a2, a1, qword_1008661E8);
}

uint64_t sub_10023441C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 12.0;
  return sub_100233D88(a2, a1, qword_100866200);
}

uint64_t sub_10023442C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 12.0;
  return sub_10023443C(a2, a1, qword_100866218);
}

uint64_t sub_10023443C(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(_QWORD *, char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v39 = (char *)&v31 - v11;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v16, a3);
  v17 = (char *)sub_10000EFC4((uint64_t)v16, (uint64_t)a3);
  sub_100035178();
  v35 = static UIColor.primaryText.getter();
  if (qword_100805F98 != -1)
    swift_once(&qword_100805F98, sub_1004C5C50);
  v18 = sub_10000EFC4(v12, (uint64_t)qword_100868FB8);
  v34 = v13;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19(v15, v18, v12);
  v19(v8, v18, v12);
  v31 = v12;
  v20 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v6[13];
  v32(v8, enum case for FontSource.useCase(_:), v5);
  v44 = v5;
  v45 = &protocol witness table for FontSource;
  v21 = sub_1000119C0(&v43);
  v33 = v15;
  v22 = (void (*)(_QWORD *, char *, uint64_t))v6[2];
  v22(v21, v8, v5);
  StaticDimension.init(_:scaledLike:)(&v43, v3);
  v23 = (void (*)(char *, uint64_t))v6[1];
  v23(v8, v5);
  v24 = v31;
  v19(v8, v18, v31);
  v32(v8, v20, v5);
  v44 = v5;
  v45 = &protocol witness table for FontSource;
  v25 = sub_1000119C0(&v43);
  v22(v25, v8, v5);
  v26 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 0.0);
  v23(v8, v5);
  v27 = type metadata accessor for ZeroDimension(0);
  v44 = v27;
  v45 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v43);
  static ZeroDimension.zero.getter();
  v41 = v27;
  v42 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v40);
  static ZeroDimension.zero.getter();
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v17[v16[6]], v33, v24);
  *(_QWORD *)&v17[v16[7]] = 0;
  *(_DWORD *)&v17[v16[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v17[v16[9]], v39, v38);
  v28(&v17[v16[10]], v26, v29);
  *(_DWORD *)&v17[v16[11]] = 1102053376;
  sub_100010E24(&v43, (uint64_t)&v17[v16[12]]);
  return sub_100010E24(&v40, (uint64_t)&v17[v16[13]]);
}

uint64_t sub_1002347A4(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_100866230);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_100866230);
  v14 = sub_100035178();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_100805FA8 != -1)
    swift_once(&qword_100805FA8, sub_1004C5C84);
  v15 = sub_10000EFC4(v8, (uint64_t)qword_100868FE8);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000119C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 19.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 5.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000119C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000119C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v40, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100234B00(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4040000000000000;
  return sub_100234EE0(a2, a1, qword_100866248);
}

uint64_t sub_100234B14(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;

  v1 = type metadata accessor for FontSource(0, a1);
  v46 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticDimension(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980(v12, qword_100866260);
  v45 = (int *)v12;
  v13 = (char *)sub_10000EFC4(v12, (uint64_t)qword_100866260);
  if (qword_100806E40 != -1)
    swift_once(&qword_100806E40, sub_10060DBC4);
  v14 = (void *)qword_10086B950;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v43 = v16;
  v44 = v15;
  v17 = qword_100805FB8;
  v42 = v14;
  if (v17 != -1)
    swift_once(&qword_100805FB8, sub_1004C5CB4);
  v18 = sub_10000EFC4(v8, (uint64_t)qword_100869018);
  v19 = v8;
  v38 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v19);
  v20(v3, v18, v19);
  v21 = enum case for FontSource.useCase(_:);
  v41 = v11;
  v22 = v46;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  v23(v3, enum case for FontSource.useCase(_:), v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v24 = sub_1000119C0(&v53);
  v39 = v9;
  v25 = *(void (**)(_QWORD *, char *, uint64_t))(v22 + 16);
  v25(v24, v3, v1);
  v40 = v7;
  StaticDimension.init(_:scaledLike:)(&v53, 56.0);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v3, v1);
  v27 = v38;
  v20(v3, v18, v38);
  v23(v3, v21, v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(&v53);
  v25(v28, v3, v1);
  v29 = v48;
  StaticDimension.init(_:scaledLike:)(&v53, 32.0);
  v26(v3, v1);
  v30 = type metadata accessor for ZeroDimension(0);
  v54 = v30;
  v55 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v53);
  static ZeroDimension.zero.getter();
  v51 = v30;
  v52 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v50);
  static ZeroDimension.zero.getter();
  v31 = v41;
  v32 = v44;
  v33 = v45;
  *(_QWORD *)v13 = v42;
  *((_QWORD *)v13 + 1) = v32;
  *((_QWORD *)v13 + 2) = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v13[v33[6]], v31, v27);
  *(_QWORD *)&v13[v33[7]] = 0;
  *(_DWORD *)&v13[v33[8]] = 1090519040;
  v34 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v35 = v49;
  v34(&v13[v33[9]], v40, v49);
  v34(&v13[v33[10]], v29, v35);
  *(_DWORD *)&v13[v33[11]] = 0;
  sub_100010E24(&v53, (uint64_t)&v13[v33[12]]);
  return sub_100010E24(&v50, (uint64_t)&v13[v33[13]]);
}

uint64_t sub_100234ED0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0;
  return sub_100234EE0(a2, a1, qword_100866278);
}

uint64_t sub_100234EE0(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  _QWORD *v28;
  void (*v29)(_QWORD *, char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  __int128 v57;
  uint64_t v58;
  void *v59;

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v50 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for StaticDimension(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - v10;
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980(v16, a3);
  v49 = (int *)v16;
  v17 = (char *)sub_10000EFC4(v16, (uint64_t)a3);
  if (qword_100806E40 != -1)
    swift_once(&qword_100806E40, sub_10060DBC4);
  v18 = (void *)qword_10086B950;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v47 = v20;
  v48 = v19;
  v21 = qword_100805FB0;
  v46 = v18;
  if (v21 != -1)
    swift_once(&qword_100805FB0, sub_1004C5C9C);
  v22 = sub_10000EFC4(v12, (uint64_t)qword_100869000);
  v23 = v12;
  v42 = v12;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24(v15, v22, v23);
  v24(v7, v22, v23);
  v25 = enum case for FontSource.useCase(_:);
  v45 = v15;
  v26 = v50;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
  v27(v7, enum case for FontSource.useCase(_:), v5);
  v58 = v5;
  v59 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(&v57);
  v43 = v13;
  v29 = *(void (**)(_QWORD *, char *, uint64_t))(v26 + 16);
  v29(v28, v7, v5);
  v44 = v11;
  StaticDimension.init(_:scaledLike:)(&v57, 56.0);
  v30 = *(void (**)(char *, uint64_t))(v26 + 8);
  v30(v7, v5);
  v31 = v42;
  v24(v7, v22, v42);
  v27(v7, v25, v5);
  v58 = v5;
  v59 = &protocol witness table for FontSource;
  v32 = sub_1000119C0(&v57);
  v29(v32, v7, v5);
  v33 = v52;
  StaticDimension.init(_:scaledLike:)(&v57, v3);
  v30(v7, v5);
  v34 = type metadata accessor for ZeroDimension(0);
  v58 = v34;
  v59 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v57);
  static ZeroDimension.zero.getter();
  v55 = v34;
  v56 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v54);
  static ZeroDimension.zero.getter();
  v35 = v45;
  v36 = v48;
  v37 = v49;
  *(_QWORD *)v17 = v46;
  *((_QWORD *)v17 + 1) = v36;
  *((_QWORD *)v17 + 2) = v47;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v17[v37[6]], v35, v31);
  *(_QWORD *)&v17[v37[7]] = 0;
  *(_DWORD *)&v17[v37[8]] = 1090519040;
  v38 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v39 = v53;
  v38(&v17[v37[9]], v44, v53);
  v38(&v17[v37[10]], v33, v39);
  *(_DWORD *)&v17[v37[11]] = 0;
  sub_100010E24(&v57, (uint64_t)&v17[v37[12]]);
  return sub_100010E24(&v54, (uint64_t)&v17[v37[13]]);
}

uint64_t sub_1002352B0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;

  v1 = type metadata accessor for FontSource(0, a1);
  v46 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticDimension(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980(v12, qword_100866290);
  v45 = (int *)v12;
  v13 = (char *)sub_10000EFC4(v12, (uint64_t)qword_100866290);
  if (qword_100806E40 != -1)
    swift_once(&qword_100806E40, sub_10060DBC4);
  v14 = (void *)qword_10086B950;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v43 = v16;
  v44 = v15;
  v17 = qword_100805FB8;
  v42 = v14;
  if (v17 != -1)
    swift_once(&qword_100805FB8, sub_1004C5CB4);
  v18 = sub_10000EFC4(v8, (uint64_t)qword_100869018);
  v19 = v8;
  v38 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v19);
  v20(v3, v18, v19);
  v21 = enum case for FontSource.useCase(_:);
  v41 = v11;
  v22 = v46;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  v23(v3, enum case for FontSource.useCase(_:), v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v24 = sub_1000119C0(&v53);
  v39 = v9;
  v25 = *(void (**)(_QWORD *, char *, uint64_t))(v22 + 16);
  v25(v24, v3, v1);
  v40 = v7;
  StaticDimension.init(_:scaledLike:)(&v53, 56.0);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v3, v1);
  v27 = v38;
  v20(v3, v18, v38);
  v23(v3, v21, v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(&v53);
  v25(v28, v3, v1);
  v29 = v48;
  StaticDimension.init(_:scaledLike:)(&v53, 0.0);
  v26(v3, v1);
  v30 = type metadata accessor for ZeroDimension(0);
  v54 = v30;
  v55 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v53);
  static ZeroDimension.zero.getter();
  v51 = v30;
  v52 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v50);
  static ZeroDimension.zero.getter();
  v31 = v41;
  v32 = v44;
  v33 = v45;
  *(_QWORD *)v13 = v42;
  *((_QWORD *)v13 + 1) = v32;
  *((_QWORD *)v13 + 2) = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v13[v33[6]], v31, v27);
  *(_QWORD *)&v13[v33[7]] = 0;
  *(_DWORD *)&v13[v33[8]] = 1090519040;
  v34 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v35 = v49;
  v34(&v13[v33[9]], v40, v49);
  v34(&v13[v33[10]], v29, v35);
  *(_DWORD *)&v13[v33[11]] = 0;
  sub_100010E24(&v53, (uint64_t)&v13[v33[12]]);
  return sub_100010E24(&v50, (uint64_t)&v13[v33[13]]);
}

uint64_t sub_100235668(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  void (*v25)(_QWORD *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;

  v1 = type metadata accessor for FontSource(0, a1);
  v46 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticDimension(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980(v12, qword_1008662A8);
  v45 = (int *)v12;
  v13 = (char *)sub_10000EFC4(v12, (uint64_t)qword_1008662A8);
  if (qword_100806E48 != -1)
    swift_once(&qword_100806E48, sub_10060DBD8);
  v14 = (void *)qword_10086B958;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v43 = v16;
  v44 = v15;
  v17 = qword_100805FC0;
  v42 = v14;
  if (v17 != -1)
    swift_once(&qword_100805FC0, sub_1004C5D4C);
  v18 = sub_10000EFC4(v8, (uint64_t)qword_100869030);
  v19 = v8;
  v38 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v19);
  v20(v3, v18, v19);
  v21 = enum case for FontSource.useCase(_:);
  v41 = v11;
  v22 = v46;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  v23(v3, enum case for FontSource.useCase(_:), v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v24 = sub_1000119C0(&v53);
  v39 = v9;
  v25 = *(void (**)(_QWORD *, char *, uint64_t))(v22 + 16);
  v25(v24, v3, v1);
  v40 = v7;
  StaticDimension.init(_:scaledLike:)(&v53, 26.0);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v3, v1);
  v27 = v38;
  v20(v3, v18, v38);
  v23(v3, v21, v1);
  v54 = v1;
  v55 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(&v53);
  v25(v28, v3, v1);
  v29 = v48;
  StaticDimension.init(_:scaledLike:)(&v53, 32.0);
  v26(v3, v1);
  v30 = type metadata accessor for ZeroDimension(0);
  v54 = v30;
  v55 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v53);
  static ZeroDimension.zero.getter();
  v51 = v30;
  v52 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v50);
  static ZeroDimension.zero.getter();
  v31 = v41;
  v32 = v44;
  v33 = v45;
  *(_QWORD *)v13 = v42;
  *((_QWORD *)v13 + 1) = v32;
  *((_QWORD *)v13 + 2) = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v13[v33[6]], v31, v27);
  *(_QWORD *)&v13[v33[7]] = 0;
  *(_DWORD *)&v13[v33[8]] = 1090519040;
  v34 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v35 = v49;
  v34(&v13[v33[9]], v40, v49);
  v34(&v13[v33[10]], v29, v35);
  *(_DWORD *)&v13[v33[11]] = 0;
  sub_100010E24(&v53, (uint64_t)&v13[v33[12]]);
  return sub_100010E24(&v50, (uint64_t)&v13[v33[13]]);
}

uint64_t sub_100235A20(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_1008662C0);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_1008662C0);
  v14 = sub_100035178();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_100805FC8 != -1)
    swift_once(&qword_100805FC8, sub_1004C5D64);
  v15 = sub_10000EFC4(v8, (uint64_t)qword_100869048);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000119C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 28.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 24.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000119C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000119C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v40, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_100235D7C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_1008662D8);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_1008662D8);
  v14 = sub_100035178();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_100805FD0 != -1)
    swift_once(&qword_100805FD0, sub_1004C5D80);
  v15 = sub_10000EFC4(v8, (uint64_t)qword_100869060);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000119C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 40.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 16.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000119C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000119C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v40, (uint64_t)&v13[v12[13]]);
}

uint64_t sub_1002360DC(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  __int128 v43;
  uint64_t v44;
  void *v45;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticDimension(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v31 - v7;
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TitleHeaderView.TextConfiguration(0);
  sub_100011980((uint64_t)v12, qword_1008662F0);
  v13 = (char *)sub_10000EFC4((uint64_t)v12, (uint64_t)qword_1008662F0);
  v14 = sub_100035178();
  v35 = static UIColor.primaryText.getter(v14);
  if (qword_100805FD8 != -1)
    swift_once(&qword_100805FD8, sub_1004C5D98);
  v15 = sub_10000EFC4(v8, (uint64_t)qword_100869078);
  v34 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v15, v8);
  v16(v4, v15, v8);
  v31 = v8;
  v17 = enum case for FontSource.useCase(_:);
  v32 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v32(v4, enum case for FontSource.useCase(_:), v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v18 = sub_1000119C0(&v43);
  v33 = v11;
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v43, 20.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v21 = v31;
  v16(v4, v15, v31);
  v32(v4, v17, v1);
  v44 = v1;
  v45 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(&v43);
  v19(v22, v4, v1);
  v23 = v37;
  StaticDimension.init(_:scaledLike:)(&v43, 20.0);
  v20(v4, v1);
  v24 = type metadata accessor for ZeroDimension(0);
  v44 = v24;
  v45 = &protocol witness table for ZeroDimension;
  v25 = sub_1000119C0(&v43);
  static ZeroDimension.zero.getter(v25);
  v41 = v24;
  v42 = &protocol witness table for ZeroDimension;
  v26 = sub_1000119C0(&v40);
  v27 = static ZeroDimension.zero.getter(v26);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = v35;
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 32))(&v13[v12[6]], v33, v21, v27);
  *(_QWORD *)&v13[v12[7]] = 0;
  *(_DWORD *)&v13[v12[8]] = 1090519040;
  v28 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v29 = v38;
  v28(&v13[v12[9]], v39, v38);
  v28(&v13[v12[10]], v23, v29);
  *(_DWORD *)&v13[v12[11]] = 0;
  sub_100010E24(&v43, (uint64_t)&v13[v12[12]]);
  return sub_100010E24(&v40, (uint64_t)&v13[v12[13]]);
}

double sub_100236438(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  objc_msgSend(a1, "displayScale");
  v3 = v2;
  v4 = 1.0 / v2;
  if (v2 < 3.0)
    v5 = 46.0;
  else
    v5 = 46.0 - v4;
  v6 = objc_msgSend(a1, "preferredContentSizeCategory");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
LABEL_18:

    v29 = 4.0;
    if (v3 > 2.0)
      v29 = 5.0;
    return v29 + v5;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
    goto LABEL_18;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
    goto LABEL_23;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) != 0)
  {
LABEL_23:

    return v5 + 3.0;
  }
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {
    swift_bridgeObjectRelease_n(v25, 2);
    goto LABEL_25;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  if ((v31 & 1) != 0)
  {
LABEL_25:

    v29 = 2.0;
    if (v3 <= 2.0)
      v29 = 1.0;
    return v29 + v5;
  }
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v34 = v33;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v37 = v35;
  if (v32 == v36 && v34 == v35)
  {
LABEL_30:
    swift_bridgeObjectRelease_n(v34, 2);
LABEL_32:

    return v5;
  }
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v35, 0);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v37);
  if ((v38 & 1) != 0)
    goto LABEL_32;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
  v41 = v40;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v44 = v42;
  if (v39 == v43 && v41 == v42)
  {
    swift_bridgeObjectRelease_n(v41, 2);
  }
  else
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v44);
    if ((v45 & 1) == 0)
    {
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
      v49 = v48;
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v52 = v50;
      if (v47 == v51 && v49 == v50)
      {
        swift_bridgeObjectRelease_n(v49, 2);
      }
      else
      {
        v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v51, v50, 0);
        swift_bridgeObjectRelease(v49);
        swift_bridgeObjectRelease(v52);
        if ((v53 & 1) == 0)
        {
          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
          v56 = v55;
          v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          v59 = v57;
          if (v54 == v58 && v56 == v57)
          {
            swift_bridgeObjectRelease_n(v56, 2);
          }
          else
          {
            v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v58, v57, 0);
            swift_bridgeObjectRelease(v56);
            swift_bridgeObjectRelease(v59);
            if ((v60 & 1) == 0)
            {
              v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryUnspecified);
              v34 = v62;
              v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
              v65 = v63;
              if (v61 != v64 || v34 != v63)
              {
                v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v34, v64, v63, 0);
                swift_bridgeObjectRelease(v34);
                swift_bridgeObjectRelease(v65);
                if ((v66 & 1) != 0)
                  goto LABEL_32;
                v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
                v34 = v68;
                v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
                v71 = v69;
                if (v67 != v70 || v34 != v69)
                {
                  _stringCompareWithSmolCheck(_:_:expecting:)(v67, v34, v70, v69, 0);
                  swift_bridgeObjectRelease(v34);
                  swift_bridgeObjectRelease(v71);
                  goto LABEL_32;
                }
              }
              goto LABEL_30;
            }
          }

          return v5 + -5.0;
        }
      }

      v29 = v4 + -5.0;
      return v29 + v5;
    }
  }

  v46 = 2.0;
  if (v3 <= 2.0)
    v46 = 3.0;
  return v5 - v46;
}

uint64_t sub_100236928(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100236964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  void *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;

  v2 = type metadata accessor for ComponentSeparator.Position(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100653720);
  ItemLayoutContext.subscript.getter(&v13);
  v7 = swift_release(KeyPath);
  v8 = v13;
  LOBYTE(KeyPath) = UITraitCollection.isSizeClassRegular.getter(v7);

  v9 = (unsigned int *)&enum case for ComponentSeparator.Position.top(_:);
  if ((KeyPath & 1) == 0)
    v9 = (unsigned int *)&enum case for ComponentSeparator.Position.bottom(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *v9, v2);
  ComponentSeparator.init(position:leadingInset:trailingInset:)(v5, 0.0, 0.0);
  v10 = type metadata accessor for ComponentSeparator(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
}

uint64_t sub_100236A68@<X0>(uint64_t a1@<X8>)
{
  return sub_100236964(a1);
}

uint64_t sub_100236A80()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  void (*v34)(_QWORD);
  double left;
  double bottom;
  double right;
  __int128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  __n128 v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  __n128 v54;
  __int128 v55;
  __n128 v56;
  double v57;
  double v58;
  __int128 v59;
  __n128 v60;
  uint64_t result;
  int64x2_t v62;
  double v63;
  double top;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];

  v0 = sub_10000DAF8(&qword_100808208);
  v1 = __chkstk_darwin(v0);
  v3 = &v62.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v6 = (int64x2_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v7);
  v9 = &v62.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v62.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v62.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v62.i8[-v17];
  v19 = sub_10000DAF8(&qword_100808218);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v66 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100640730;
  v65 = v24;
  v69 = v24 + v23;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v25 = xmmword_100868E30;
  v72[0] = 0x3FF0000000000000;
  v26 = sub_10002128C();
  v27 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4030000000000000;
  v72[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v27);
  v72[0] = 0x4030000000000000;
  v71 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v28);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v34 = *(void (**)(_QWORD))(v4 + 104);
  v68 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v67 = (void (*)(int64x2_t *, _QWORD, uint64_t))v34;
  v34(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v38 = xmmword_100868E40;
  v72[0] = 0x3FF0000000000000;
  v39 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v39);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v40);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v38, *((double *)&v38 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v43 = xmmword_100868E50;
  v71 = 0x4000000000000000;
  v72[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v42);
  v72[0] = 0x4034000000000000;
  v44 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v44);
  v62 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v63 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v43, *((double *)&v43 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v45 = xmmword_100868E90;
  v72[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v46);
  *v6 = v62;
  v67(v6, v68, v70);
  v47 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v45, *((double *)&v45 + 1), v47, v49, v51, v53);
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v55 = xmmword_100868EA0;
  v71 = 0x4000000000000000;
  v72[0] = 0x4004000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v54);
  v72[0] = 0x4038000000000000;
  v56 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v56);
  v62 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v58 = v63;
  v57 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v55, *((double *)&v55 + 1), top, v63, bottom, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v59 = xmmword_100868EB0;
  v72[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v60);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v59, *((double *)&v59 + 1), v57, v58, bottom, right);
  qword_100866308 = v65;
  return result;
}

uint64_t type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_100816938;
  if (!qword_100816938)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductReviewSelectionHandlerCollectionElementsObserver);
  return result;
}

uint64_t sub_1002373E0(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "\b";
  v2[1] = &unk_1006537C0;
  v2[2] = &unk_1006537D8;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + qword_100866310);
}

id sub_10023743C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_100816930;
  v2 = *(void **)(v0 + qword_100816930);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_100816930);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ComponentViewOverflowTransitioning(0)), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1002374AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  void *v60;
  uint64_t v61;
  char v62;
  char *v63;
  int v64;
  int v65;
  __n128 v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  _BYTE *v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t Strong;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[3];
  uint64_t v117;
  uint64_t v118;

  v112 = a1;
  v113 = a3;
  v7 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v7);
  v100 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v98);
  v99 = (uint64_t *)((char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v10);
  v103 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ItemLayoutContext(0);
  v108 = *(_QWORD *)(v12 - 8);
  v109 = v12;
  __chkstk_darwin(v12);
  v102 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v107 = (char *)&v94 - v16;
  v17 = type metadata accessor for ProductReview.ReviewSource(0, v15);
  v110 = *(_QWORD *)(v17 - 8);
  v111 = v17;
  __chkstk_darwin(v17);
  v101 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v106 = (char *)&v94 - v20;
  v21 = type metadata accessor for PageGrid(0);
  v104 = *(_QWORD *)(v21 - 8);
  v105 = v21;
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = type metadata accessor for Shelf.PresentationHints(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (uint64_t *)((char *)&v94 - v29);
  v115 = v4;
  v31 = *(_QWORD *)(v4 + qword_100816928 + 24);
  v32 = *(_QWORD *)(v4 + qword_100816928 + 32);
  sub_100010F08((_QWORD *)(v4 + qword_100816928), v31);
  v114 = a4;
  v33 = dispatch thunk of ShelfComponentTypeMappingProvider.componentType(for:asPartOf:)(a2, a4, v31, v32);
  if (!v33
    || (v37 = v33,
        v38 = v34,
        v96 = v36,
        v97 = v35,
        v39 = type metadata accessor for ProductReview(0),
        v40 = sub_10000E720(&qword_100816988, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReview, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent), ItemLayoutContext.typedModel<A>(as:)(v116, v39, v39, v40), !v116[0]))
  {
    v54 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
    v55 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))method lookup function for SelectionHandlerCollectionElementsObserver(v54, &method descriptor for SelectionHandlerCollectionElementsObserver.didSelectCell(_:in:collectionView:asPartOf:));
    v55(v112, a2, v113, v114);
    return;
  }
  v94 = v38;
  swift_getKeyPath(&unk_100653808);
  ItemLayoutContext.subscript.getter(v30);
  v41 = swift_release();
  static Shelf.PresentationHints.isSeeAllContext.getter(v41);
  v42 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v43 = dispatch thunk of SetAlgebra.isSuperset(of:)(v27, v24, v42);
  v44 = *(void (**)(char *, uint64_t))(v25 + 8);
  v44(v27, v24);
  v45 = ((uint64_t (*)(_QWORD *, uint64_t))v44)(v30, v24);
  v95 = v37;
  if ((v43 & 1) != 0)
  {
    swift_getKeyPath(&unk_100653868);
    v46 = a2;
    ItemLayoutContext.subscript.getter(v23);
    swift_release();
    v48 = PageGrid.columnCount.getter(v47);
    v49 = (*(uint64_t (**)(_QWORD *, uint64_t))(v104 + 8))(v23, v105);
    v50 = v114;
    v51 = v115;
    v53 = v110;
    v52 = v111;
    if (v48 <= 1.0)
      goto LABEL_14;
  }
  else
  {
    v46 = a2;
    v56 = v106;
    ProductReview.source.getter(v45);
    v53 = v110;
    v52 = v111;
    v57 = (*(uint64_t (**)(char *, uint64_t))(v110 + 88))(v56, v111);
    v51 = v115;
    if (v57 == enum case for ProductReview.ReviewSource.editorsChoice(_:))
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v56, v52);
      swift_release();
      v58 = type metadata accessor for Feature.iOS(0);
      v117 = v58;
      v118 = sub_10000E720((unint64_t *)&qword_10080CC50, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
      v59 = sub_1000119C0(v116);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104))(v59, enum case for Feature.iOS.review_summarization(_:), v58);
      LOBYTE(v58) = isFeatureEnabled(_:)(v116);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v116);
      v50 = v114;
      if ((v58 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v52);
      v50 = v114;
    }
    swift_getKeyPath(&unk_100653838);
    ItemLayoutContext.subscript.getter(v116);
    swift_release();
    v60 = (void *)v116[0];
    v62 = UITraitCollection.isSizeClassRegular.getter(v61);

    if ((v62 & 1) == 0)
    {
LABEL_14:
      v67 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
      v68 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))method lookup function for SelectionHandlerCollectionElementsObserver(v67, &method descriptor for SelectionHandlerCollectionElementsObserver.didSelectCell(_:in:collectionView:asPartOf:));
      v68(v112, v46, v113, v50);
      swift_release();
      return;
    }
  }
  v63 = v101;
  ProductReview.source.getter(v49);
  v64 = (*(uint64_t (**)(char *, uint64_t))(v53 + 88))(v63, v52);
  v65 = enum case for ProductReview.ReviewSource.reviewSummary(_:);
  if (v64 == enum case for ProductReview.ReviewSource.reviewSummary(_:))
  {
    (*(void (**)(char *, uint64_t))(v53 + 96))(v63, v52);
    v66 = swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v63, v52);
  }
  v70 = v108;
  v69 = v109;
  v71 = v107;
  ItemLayoutContext.withUpdatedLayoutOptions(_:)(sub_100237D68, 0, v66);
  v72 = (uint64_t)v102;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v102, v71, v69);
  v73 = type metadata accessor for ObjectGraph(0);
  v74 = swift_dynamicCastClassUnconditional(v50, v73, 0, 0, 0);
  v75 = sub_1005A60D4(v74, 0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011, 0x800000010068ED30);
  v76 = objc_allocWithZone((Class)type metadata accessor for ProductPageReviewsOverflowViewController(0));
  v77 = sub_1005535D8(v72, v95, v94, v97, v96, v75, v64 == v65);
  swift_release();
  v78 = sub_10023743C();
  v79 = (uint64_t)v103;
  ItemLayoutContext.indexPath.getter(v80);
  v81 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v79, 0, 1, v81);
  v82 = (uint64_t)&v78[OBJC_IVAR____TtC20ProductPageExtension34ComponentViewOverflowTransitioning_selectedIndexPath];
  swift_beginAccess(&v78[OBJC_IVAR____TtC20ProductPageExtension34ComponentViewOverflowTransitioning_selectedIndexPath], v116, 33, 0);
  sub_100125F10(v79, v82);
  swift_endAccess(v116);
  v78[OBJC_IVAR____TtC20ProductPageExtension34ComponentViewOverflowTransitioning_isTransitioningFromContainer] = 1;
  objc_msgSend(v77, "setTransitioningDelegate:", v78);
  objc_msgSend(v77, "setModalPresentationStyle:", 4);
  Strong = swift_unknownObjectWeakLoadStrong(v51 + qword_100816920);
  if (Strong)
  {
    v84 = (void *)Strong;
    sub_1000E1E3C((uint64_t)v116);

    v85 = v117;
    if (v117)
    {
      v86 = v118;
      sub_100010F08(v116, v117);
      v87 = (uint64_t)v99;
      *v99 = v77;
      swift_storeEnumTagMultiPayload(v87, v98, 19);
      v88 = qword_100804A30;
      v89 = v77;
      if (v88 != -1)
        swift_once(&qword_100804A30, sub_10010F95C);
      v90 = type metadata accessor for FlowPresentationHints(0);
      v91 = sub_10000EFC4(v90, (uint64_t)qword_100865270);
      v92 = type metadata accessor for ReferrerData(0);
      v93 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v100, 1, 1, v92);
      (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v86 + 16))(v87, v91, 0, 0, v93, v85, v86);

      swift_release();
      sub_100197774(v93);
      sub_100063E80(v87);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v116);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v69);

    swift_release();
  }
}

uint64_t sub_100237D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v4 = type metadata accessor for ComponentLayoutOptions(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - v9;
  static ComponentLayoutOptions.overflowed.getter(v11);
  sub_10018E2B0(v10, (uint64_t)v7);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v12(v10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
}

void sub_100237E3C()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.ProductReviewSelectionHandlerCollectionElementsObserver", 76, "init(presenter:componentHeightCache:)", 37, 0);
  __break(1u);
}

void sub_100237E68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + qword_100816920);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + qword_100816928));

}

uint64_t sub_100237EA4()
{
  uint64_t v0;

  v0 = SelectionHandlerCollectionElementsObserver.deinit();
  swift_unknownObjectWeakDestroy(v0 + qword_100816920);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + qword_100816928));

  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_100237F00()
{
  return type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver(0);
}

uint64_t sub_100237F14()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v0 = type metadata accessor for ActionLayout.Metrics(0);
  sub_100011980(v0, qword_100866320);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100866320);
  return sub_100237F5C(v1, v2);
}

uint64_t sub_100237F5C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void *v35;
  char *v36;
  _QWORD *v37;
  _QWORD *v38;
  __n128 v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  _QWORD v53[5];
  _QWORD v54[3];
  void *v55;
  void *v56;
  _QWORD v57[5];
  _QWORD v58[5];
  _QWORD v59[5];
  __int128 v60;
  void *v61;
  void *v62;
  int64x2_t v63;
  void *v64;
  void *v65;

  v51 = a1;
  v43 = type metadata accessor for FontSource(0, a2);
  v48 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v47 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v52 = (char *)&v42 - v4;
  v5 = sub_10000DAF8(&qword_10081F170);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - v16;
  v63 = vdupq_n_s64(0x4040000000000000uLL);
  __asm { FMOV            V0.2D, #28.0 }
  v60 = _Q0;
  v23 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for CGSize(0);
  v25 = v24;
  Conditional<>.init(accessibleLayoutValue:regularLayoutValue:)(&v63, &v60, v23, v24);
  v63 = (int64x2_t)xmmword_1006538A0;
  v60 = xmmword_1006538B0;
  Conditional<>.init(accessibleLayoutValue:regularLayoutValue:)(&v63, &v60, v23, v25);
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v46 = v11;
  v44 = v17;
  v26(v11, v17, v8);
  v45 = v14;
  v26(v7, v14, v8);
  v49 = v9;
  v50 = v7;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v64 = &type metadata for Double;
  v65 = &protocol witness table for Double;
  v63.i64[0] = 0x4034000000000000;
  v61 = &type metadata for Double;
  v62 = &protocol witness table for Double;
  v59[4] = &protocol witness table for Double;
  *(_QWORD *)&v60 = 0x4048000000000000;
  v59[3] = &type metadata for Double;
  v59[0] = 0x4028000000000000;
  if (qword_100805FE8 != -1)
    swift_once(&qword_100805FE8, sub_1004C5DC8);
  v27 = type metadata accessor for FontUseCase(0);
  v28 = sub_10000EFC4(v27, (uint64_t)qword_1008690A8);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v30 = v52;
  v29(v52, v28, v27);
  v31 = enum case for FontSource.useCase(_:);
  v32 = v30;
  v33 = v48;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  v35 = (void *)v43;
  v34(v32, enum case for FontSource.useCase(_:), v43);
  v58[3] = &type metadata for Double;
  v58[4] = &protocol witness table for Double;
  v58[0] = 0x4022000000000000;
  v36 = v47;
  v29(v47, v28, v27);
  v34(v36, v31, (uint64_t)v35);
  v57[3] = type metadata accessor for StaticDimension(0);
  v57[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v57);
  v55 = v35;
  v56 = &protocol witness table for FontSource;
  v37 = sub_1000119C0(v54);
  (*(void (**)(_QWORD *, char *, void *))(v33 + 16))(v37, v36, v35);
  StaticDimension.init(_:scaledLike:)(v54, 10.0);
  (*(void (**)(char *, void *))(v33 + 8))(v36, v35);
  v56 = &protocol witness table for Double;
  v55 = &type metadata for Double;
  v54[0] = 0x4020000000000000;
  v53[3] = type metadata accessor for ZeroDimension(0);
  v53[4] = &protocol witness table for ZeroDimension;
  v38 = sub_1000119C0(v53);
  v39 = static ZeroDimension.zero.getter(v38);
  ActionLayout.Metrics.init(artworkSize:maxArtworkSize:artworkMargin:artworkLeadingMargin:labelWithArtworkLeadingMargin:accessoryMargin:labelFontSource:labelVerticalMargin:searchAdButtonTopMargin:searchAdButtonLeadingMargin:shouldLabelFitAvailableWidth:)(v46, v50, &v63, v53, &v60, v59, v52, v58, v39, v57, v54, 0);
  v40 = *(void (**)(char *, uint64_t))(v49 + 8);
  v40(v45, v8);
  return ((uint64_t (*)(char *, uint64_t))v40)(v44, v8);
}

uint64_t sub_100238374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_100011980(v0, qword_100816990);
  sub_10000EFC4(v0, (uint64_t)qword_100816990);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

id sub_1002383FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  __n128 v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  double v21[3];

  v1 = v0;
  v2 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView;
  v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView];
  if (v7)
  {
    v8 = *(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView];
  }
  else
  {
    v9 = swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics], v21, 32, 0);
    ActionLayout.Metrics.artworkSize.getter(v9);
    swift_endAccess(v21);
    v10 = objc_msgSend(v0, "traitCollection");
    Conditional.evaluate<>(in:)(v21, v10, v2);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v21[0], v21[1]);
    v12 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    ArtworkView.backgroundColor.setter(v12);
    objc_msgSend(v11, "setHidden:", 1);
    v13 = *(void **)&v1[v6];
    v14 = v11;
    if (v13)
    {
      objc_msgSend(v13, "removeFromSuperview");
      v13 = *(void **)&v1[v6];
    }
    *(_QWORD *)&v1[v6] = v11;
    v8 = v11;

    v15 = *(void **)&v1[v6];
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v1, "contentView");
      objc_msgSend(v17, "addSubview:", v16);

    }
    else
    {

    }
  }
  v18 = v7;
  return v8;
}

char *sub_1002385FC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  double left;
  double bottom;
  double right;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  __n128 v52;
  objc_super v54;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryView] = 0;
  v18 = &v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessory];
  v19 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_searchAdTransparencyButton] = 0;
  v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isDisplayingSearchAd] = 0;
  v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_hasArtworkToDisplay] = 0;
  v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isDisplayingSearchTrendingAction] = 0;
  v20 = &v5[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics];
  v21 = qword_100804FD8;
  v22 = v5;
  if (v21 != -1)
    swift_once(&qword_100804FD8, sub_100237F14);
  v23 = type metadata accessor for ActionLayout.Metrics(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_100866320);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v24, v23);
  v25 = &v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  v26 = &v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_itemLayoutContext];
  v27 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isVertical] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView] = 0;
  v28 = &v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryAction];
  *v28 = 0;
  v28[1] = 0;
  if (qword_100805FE8 != -1)
    swift_once(&qword_100805FE8, sub_1004C5DC8);
  v29 = type metadata accessor for FontUseCase(0);
  v30 = sub_10000EFC4(v29, (uint64_t)qword_1008690A8);
  v31 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v17, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  v32 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_textLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 0, 1, 0, v14, 0, 0);
  v33 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_separatorView] = v33;

  v54.receiver = v22;
  v54.super_class = ObjectType;
  v34 = (char *)objc_msgSendSuper2(&v54, "initWithFrame:", a1, a2, a3, a4);
  v35 = objc_msgSend(v34, "layer");
  objc_msgSend(v35, "setAllowsGroupOpacity:", 0);

  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v34, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v39 = objc_msgSend(v34, "contentView");
  objc_msgSend(v39, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v40 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v41 = (void *)static UIColor.tableViewCellSelectedBackground.getter();
  objc_msgSend(v40, "setBackgroundColor:", v41);

  objc_msgSend(v40, "setOpaque:", 0);
  objc_msgSend(v40, "setUserInteractionEnabled:", 0);
  objc_msgSend(v34, "setSelectedBackgroundView:", v40);
  v42 = OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_separatorView;
  v43 = *(id *)&v34[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_separatorView];
  v45 = (void *)static UIColor.defaultLine.getter(v43, v44);
  objc_msgSend(v43, "setBackgroundColor:", v45);

  v46 = *(void **)&v34[v42];
  objc_msgSend(v46, "setHidden:", 0);
  v47 = objc_msgSend(v34, "contentView");
  objc_msgSend(v47, "addSubview:", v46);

  v48 = OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_textLabel;
  v49 = *(void **)&v34[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_textLabel];
  objc_msgSend(v49, "setLineBreakMode:", 0);
  v50 = v49;
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v51 = objc_msgSend(v34, "contentView");
  objc_msgSend(v51, "addSubview:", *(_QWORD *)&v34[v48]);

  sub_100238B64(v52);
  return v34;
}

void sub_100238B64(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  __n128 v8;
  id v9;
  Class isa;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _BYTE v24[24];

  v2 = v1;
  v3 = type metadata accessor for FontSource(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1002383FC();
  v8 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics], v24, 32, 0);
  ActionLayout.Metrics.labelFontSource.getter(v8);
  swift_endAccess(v24);
  v9 = objc_msgSend(v1, "traitCollection");
  isa = FontSource.font(compatibleWith:)((UITraitCollection)v9).super.isa;

  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v11 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", isa, 1);

  ArtworkView.preferredSymbolConfiguration.setter(v11);
  v12 = sub_1002383FC();
  LOBYTE(v7) = ArtworkView.isDisplayingSymbolImage.getter();

  if ((v7 & 1) != 0)
  {
    v13 = sub_1002383FC();
    v14 = (void *)ArtworkView.preferredSymbolConfiguration.getter();

    if (v14)
    {
      v15 = sub_1002383FC();
      v16 = (void *)ArtworkView.image.getter();

      if (v16)
      {
        v17 = objc_msgSend(v16, "imageWithConfiguration:", v14);

        objc_msgSend(v17, "size");
        v19 = v18;
        v21 = v20;

        v22 = &v2[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize];
        *(_QWORD *)v22 = v19;
        *((_QWORD *)v22 + 1) = v21;
        v22[16] = 0;
        objc_msgSend(v2, "setNeedsLayout");
      }

    }
  }
}

uint64_t sub_100238D98()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  char *v28;
  __n128 v29;
  void (*v30)(char *, char *, uint64_t, __n128);
  uint64_t v31;
  void *v32;
  double *v33;
  double v34;
  double v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  id v40;
  id v41;
  void (*v42)(_QWORD *, _QWORD);
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  void *v48;
  double v49;
  double v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  char *v68;
  id v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double MinX;
  double MaxY;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  __int128 v91;
  void *v92;
  __int128 v93;
  __int128 v94;
  void *v95;
  _QWORD v96[5];
  __int128 v97;
  __int128 v98;
  void *v99;
  _QWORD v100[5];
  char v101[24];
  objc_super v102;
  CGRect v103;
  CGRect v104;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v85 = *(_QWORD *)(v3 - 8);
  v86 = v3;
  v4 = __chkstk_darwin(v3);
  v84 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActionLayout(0, v4);
  v82 = *(_QWORD *)(v6 - 8);
  v83 = v6;
  __chkstk_darwin(v6);
  v81 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v78 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionLayout.Metrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v89 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v78 - v16;
  v102.receiver = v1;
  v102.super_class = ObjectType;
  objc_msgSendSuper2(&v102, "layoutSubviews", v15);
  v18 = objc_msgSend(v1, "contentView");
  v79 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v19 = LayoutMarginsAware<>.layoutFrame.getter(v79);
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v26 = objc_msgSend(v1, "traitCollection");
  v27 = static Separator.thickness(compatibleWith:)(v26);

  v28 = &v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics];
  v29 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics], v101, 0, 0);
  v80 = v12;
  v30 = *(void (**)(char *, char *, uint64_t, __n128))(v12 + 16);
  v30(v17, v28, v11, v29);
  v31 = OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView;
  v32 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView];
  v88 = v17;
  if (v32)
  {
    v33 = (double *)&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize];
    if ((v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize + 16] & 1) != 0
      || (v35 = *v33, v34 = v33[1], *v33 == 0.0) && v34 == 0.0)
    {
      v36 = qword_100804FD8;
      v37 = v32;
      if (v36 != -1)
        swift_once(&qword_100804FD8, sub_100237F14);
      sub_10000EFC4(v11, (uint64_t)qword_100866320);
      ActionLayout.Metrics.artworkSize.getter(v38);
      v39 = v11;
      v40 = objc_msgSend(v1, "traitCollection");
      Conditional.evaluate<>(in:)(v100, v40, v8);

      v11 = v39;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v10, v8);
      v35 = *(double *)v100;
      v34 = *(double *)&v100[1];
      v17 = v88;
    }
    else
    {
      v41 = v32;
    }
    v42 = (void (*)(_QWORD *, _QWORD))ArtworkView.frame.modify(v100);
    *(double *)(v43 + 16) = v35;
    *(double *)(v43 + 24) = v34;
    v42(v100, 0);

  }
  if (v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_hasArtworkToDisplay] == 1
    && (v44 = *(void **)&v1[v31]) != 0)
  {
    *((_QWORD *)&v98 + 1) = type metadata accessor for ArtworkView(0);
    v99 = &protocol witness table for UIView;
    *(_QWORD *)&v97 = v44;
    v45 = v44;
  }
  else
  {
    v99 = 0;
    v97 = 0u;
    v98 = 0u;
  }
  sub_1000A4E3C((uint64_t)&v97, (uint64_t)v100);
  ((void (*)(char *, char *, uint64_t))v30)(v89, v17, v11);
  sub_100018ADC((uint64_t)v100, (uint64_t)&v97, (uint64_t *)&unk_10080CE00);
  v46 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_textLabel];
  v96[3] = type metadata accessor for DynamicTypeLabel(0);
  v96[4] = &protocol witness table for UILabel;
  v96[0] = v46;
  v47 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryView];
  v87 = v11;
  if (v47)
  {
    *((_QWORD *)&v94 + 1) = v79;
    v95 = &protocol witness table for UIView;
    *(_QWORD *)&v93 = v47;
  }
  else
  {
    v95 = 0;
    v93 = 0u;
    v94 = 0u;
  }
  v48 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_searchAdTransparencyButton];
  if (v48)
  {
    *((_QWORD *)&v91 + 1) = type metadata accessor for SearchAdTransparencyButton(0);
    v92 = &protocol witness table for UIView;
    *(_QWORD *)&v90 = v48;
  }
  else
  {
    v92 = 0;
    v90 = 0u;
    v91 = 0u;
  }
  v49 = v21 + v27;
  v50 = v25 - v27;
  v51 = *(void **)&v1[v31];
  v52 = v51;
  v53 = v48;
  v54 = v46;
  v55 = v47;
  v56 = objc_msgSend(v1, "traitCollection");
  v57 = v56;
  if (v51)
  {
    v58 = ArtworkView.imageBaselineOffsetFromBottom.getter();
    v60 = v59;

    v61 = v60 & 1;
  }
  else
  {

    v58 = 0;
    v61 = 1;
  }
  v63 = v82;
  v62 = v83;
  v65 = v80;
  v64 = v81;
  v66 = v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isDisplayingSearchTrendingAction];
  v67 = swift_unknownObjectRetain(v1);
  ActionLayout.init(metrics:artworkView:labelView:accessoryView:searchAdButton:artworkBaselineOffsetFromBottom:isDisplayingSearchTrendingItem:restrictArtworkSizeToMetrics:in:)(v89, &v97, v96, &v93, &v90, v58, v61, v66, v67, 0, v1);
  v68 = v84;
  ActionLayout.placeChildren(relativeTo:in:)(v1, v19, v49, v23, v25 - v27);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v68, v86);
  v69 = objc_msgSend(v1, "traitCollection");
  LOBYTE(v68) = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v68 & 1) != 0)
  {
    v70 = v19;
    v71 = v49;
    v72 = v23;
    v73 = v25 - v27;
  }
  else
  {
    objc_msgSend(v54, "frame");
  }
  MinX = CGRectGetMinX(*(CGRect *)&v70);
  objc_msgSend(v1, "bounds");
  MaxY = CGRectGetMaxY(v103);
  v76 = v87;
  v104.origin.x = v19;
  v104.origin.y = v49;
  v104.size.width = v23;
  v104.size.height = v50;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_separatorView], "setFrame:", MinX, MaxY - v27, CGRectGetWidth(v104), v27);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
  sub_100010F2C((uint64_t)v100, (uint64_t *)&unk_10080CE00);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v88, v76);
}

double sub_1002393BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double *v5;
  double result;
  uint64_t v7;
  __n128 v8;
  id v9;
  double v10;

  v1 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (double *)&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize];
  if ((v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize + 16] & 1) != 0
    || (result = *v5, *v5 == 0.0) && v5[1] == 0.0)
  {
    if (qword_100804FD8 != -1)
      swift_once(&qword_100804FD8, sub_100237F14);
    v7 = type metadata accessor for ActionLayout.Metrics(0);
    sub_10000EFC4(v7, (uint64_t)qword_100866320);
    ActionLayout.Metrics.artworkSize.getter(v8);
    v9 = objc_msgSend(v0, "traitCollection");
    Conditional.evaluate<>(in:)(&v10, v9, v1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v10;
  }
  return result;
}

void sub_100239514(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  void *v26;
  __n128 v27;
  id v28;
  Class isa;
  _QWORD v31[3];
  objc_super v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = type metadata accessor for FontSource(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v31[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v2;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, "traitCollectionDidChange:", a1, v8);
  v11 = objc_msgSend(v2, "traitCollection");
  v12 = objc_msgSend(v11, "layoutDirection");

  if (!a1 || v12 != objc_msgSend(a1, "layoutDirection"))
  {
    if (qword_100804FE0 != -1)
      swift_once(&qword_100804FE0, sub_100238374);
    v13 = sub_10000DAF8((uint64_t *)&unk_100808820);
    sub_10000EFC4(v13, (uint64_t)qword_100816990);
    v14 = objc_msgSend(v2, "traitCollection");
    Conditional.evaluate<>(in:)(v31, v14, v13);

    UILabel.alignment.setter(v31[0]);
  }
  v15 = objc_msgSend(v2, "traitCollection");
  v16 = objc_msgSend(v15, "preferredContentSizeCategory");

  if (!a1)
  {

LABEL_12:
    sub_100238B64(v24);
    v26 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_textLabel];
    v27 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics], v31, 32, 0);
    ActionLayout.Metrics.labelFontSource.getter(v27);
    swift_endAccess(v31);
    v28 = objc_msgSend(v2, "traitCollection");
    isa = FontSource.font(compatibleWith:)((UITraitCollection)v28).super.isa;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    objc_msgSend(v26, "setFont:", isa);

    objc_msgSend(v2, "setNeedsLayout");
    return;
  }
  v17 = objc_msgSend(a1, "preferredContentSizeCategory");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v23 = v21;
  if (v18 == v22 && v20 == v21)
  {

    swift_bridgeObjectRelease_n(v20, 2);
    return;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);

  swift_bridgeObjectRelease(v20);
  v24 = swift_bridgeObjectRelease(v23);
  if ((v25 & 1) == 0)
    goto LABEL_12;
}

void sub_10023985C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  double v25;
  double v26;
  double v27;
  double *v28;
  __n128 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  id v47;
  Swift::Bool v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t ObjectType;
  _BYTE *v56;
  _QWORD v57[5];
  char v58[24];
  UIImage_optional v59;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for Artwork.Style(0, v6);
  __chkstk_darwin(v7);
  v54 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionLayout.Metrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Artwork.Crop(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v51 = a2;
    v3[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_hasArtworkToDisplay] = 1;
    v21 = swift_retain(a1);
    v22 = Artwork.crop.getter(v21);
    v50 = Artwork.Crop.preferredContentMode.getter(v22);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v23 = &v3[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics];
    v24 = swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics], v58, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v13 + 16))(v16, v23, v12, v24);
    v25 = sub_10023AE00(a1, (uint64_t)v16, (uint64_t)v3);
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v28 = (double *)&v3[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize];
    *v28 = v25;
    v28[1] = v27;
    *((_BYTE *)v28 + 16) = 0;
    if (v25 == 0.0 && v27 == 0.0)
    {
      if (qword_100804FD8 != -1)
        swift_once(&qword_100804FD8, sub_100237F14);
      sub_10000EFC4(v12, (uint64_t)qword_100866320);
      ActionLayout.Metrics.artworkSize.getter(v29);
      v30 = objc_msgSend(v3, "traitCollection");
      v31 = v53;
      Conditional.evaluate<>(in:)(v57, v30, v53);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v31);
      v25 = *(double *)v57;
      v27 = *(double *)&v57[1];
    }
    v32 = Artwork.config(using:)(v25, v27);
    v33 = sub_1002383FC();
    v34 = v54;
    Artwork.style.getter(v33);
    v35 = ArtworkView.style.setter(v34);
    *(_QWORD *)&v36 = Artwork.contentMode.getter(v35).n128_u64[0];
    v38 = ArtworkLoaderConfig.size.getter(objc_msgSend(v33, "setContentMode:", v37, v36));
    v40 = ArtworkView.imageSize.setter(v38, v39);
    v41 = Artwork.backgroundColor.getter(v40);
    if (!v41)
    {
      v42 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v41 = static UIColor.placeholderBackground.getter(v42);
    }
    ArtworkView.backgroundColor.setter(v41);

    v43 = sub_1002383FC();
    objc_msgSend(v43, "setContentMode:", v50);

    v56 = v3;
    v44 = sub_10000E720(&qword_100816A20, type metadata accessor for ActionCollectionViewCell, (uint64_t)&protocol conformance descriptor for NSObject);
    v45 = v3;
    AnyHashable.init<A>(_:)(&v56, ObjectType, v44);
    v46 = swift_allocObject(&unk_100746F78, 24, 7);
    swift_unknownObjectWeakInit(v46 + 16);
    swift_retain(v46);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v32, 2, 1, v57, sub_10023B0A0, v46);
    swift_release();
    swift_release();
    swift_release();
    sub_100010F2C((uint64_t)v57, &qword_100809010);
    swift_release();
  }
  else
  {
    v47 = sub_1002383FC();
    v59.value.super.isa = 0;
    v59.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v59, v48);

    v3[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_hasArtworkToDisplay] = 0;
  }
}

void sub_100239C9C(objc_class *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  Swift::Bool v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  void *v15;
  void *v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];
  UIImage_optional v20;

  v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = sub_1002383FC();

    v20.is_nil = (a2 & 1) == 0;
    v20.value.super.isa = a1;
    ArtworkView.show(image:isAnimationPermitted:)(v20, v11);

  }
  swift_beginAccess(v7, v18, 0, 0);
  v12 = swift_unknownObjectWeakLoadStrong(v7);
  if (v12)
  {
    v14 = (void *)v12;
    sub_100238B64(v13);

  }
  swift_beginAccess(v7, v17, 0, 0);
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "setNeedsLayout");

  }
}

void sub_100239D80(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  char v39[24];

  v34 = a2;
  v4 = type metadata accessor for Accessory(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  __chkstk_darwin(v8);
  v36 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  v13 = sub_10000DAF8((uint64_t *)&unk_1008119C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v2;
  v16 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessory];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessory], v39, 0, 0);
  v17 = (uint64_t)&v15[*(int *)(v13 + 48)];
  v37 = a1;
  sub_100018ADC(a1, (uint64_t)v15, (uint64_t *)&unk_100808F40);
  sub_100018ADC(v16, v17, (uint64_t *)&unk_100808F40);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v18((uint64_t)v15, 1, v4) == 1)
  {
    if (v18(v17, 1, v4) == 1)
    {
      sub_100010F2C((uint64_t)v15, (uint64_t *)&unk_100808F40);
      return;
    }
  }
  else
  {
    sub_100018ADC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100808F40);
    if (v18(v17, 1, v4) != 1)
    {
      sub_1001FE14C(v17, (uint64_t)v7);
      sub_100456D58((uint64_t)v12, (uint64_t)v7);
      v20 = v19;
      sub_10019ADA8((uint64_t)v7);
      sub_10019ADA8((uint64_t)v12);
      sub_100010F2C((uint64_t)v15, (uint64_t *)&unk_100808F40);
      if ((v20 & 1) != 0)
        return;
      goto LABEL_8;
    }
    sub_10019ADA8((uint64_t)v12);
  }
  sub_100010F2C((uint64_t)v15, (uint64_t *)&unk_1008119C0);
LABEL_8:
  swift_beginAccess(v16, v38, 33, 0);
  v21 = v37;
  sub_10023B0A8(v37, v16);
  swift_endAccess(v38);
  v22 = v21;
  v23 = v36;
  sub_100018ADC(v22, v36, (uint64_t *)&unk_100808F40);
  if (v18(v23, 1, v4) == 1)
  {
    sub_100010F2C(v23, (uint64_t *)&unk_100808F40);
    v24 = 0;
  }
  else
  {
    sub_100454784(v34);
    v24 = v25;
    sub_10019ADA8(v23);
  }
  v26 = v35;
  v27 = OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryView;
  v28 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryView];
  if (v28)
  {
    objc_msgSend(v28, "removeFromSuperview");
    v29 = *(void **)&v26[v27];
  }
  else
  {
    v29 = 0;
  }
  *(_QWORD *)&v26[v27] = v24;
  v30 = v24;

  v31 = *(void **)&v26[v27];
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v26, "contentView");
    objc_msgSend(v33, "addSubview:", v32);

  }
  else
  {

  }
}

uint64_t sub_10023A2A0()
{
  return type metadata accessor for ActionCollectionViewCell(0);
}

uint64_t type metadata accessor for ActionCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100816A00;
  if (!qword_100816A00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActionCollectionViewCell);
  return result;
}

void sub_10023A2E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[14];

  v8[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v8[2] = "\b";
  sub_1000780CC(319, (unint64_t *)&qword_100811800, type metadata accessor for Accessory);
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    v8[4] = "\b";
    v8[5] = &unk_100653918;
    v8[6] = &unk_100653918;
    v8[7] = &unk_100653918;
    v4 = type metadata accessor for ActionLayout.Metrics(319);
    if (v5 <= 0x3F)
    {
      v8[8] = *(_QWORD *)(v4 - 8) + 64;
      v8[9] = &unk_100653930;
      sub_1000780CC(319, (unint64_t *)&qword_10080AD00, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
      if (v7 <= 0x3F)
      {
        v8[10] = *(_QWORD *)(v6 - 8) + 64;
        v8[11] = &unk_100653918;
        v8[12] = "\b";
        v8[13] = &unk_100653948;
        swift_updateClassMetadata2(a1, 256, 14, v8, a1 + 80);
      }
    }
  }
}

void sub_10023A3F8(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = sub_1002383FC();
  ArtworkView.isImageHidden.setter(1);

  v6 = sub_1002383FC();
  v4 = type metadata accessor for ArtworkView(0);
  v5 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, a2, v4, v5);

}

uint64_t sub_10023A490(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E720((unint64_t *)&unk_100816A10, type metadata accessor for ActionCollectionViewCell, (uint64_t)&unk_100653960);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_10023A4CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13)
{
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  double v37;
  double v38;
  uint64_t v39;
  id v40;
  id v41;
  __n128 v42;
  double v43;
  double v44;
  double v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  Class isa;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  objc_class *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  __n128 v60;
  double v61;
  double v62;
  double v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  __n128 v70;
  uint64_t v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  int v80;
  uint64_t v81;
  char *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  __int128 v97;
  __int128 v98;
  void *v99;
  __int128 v100;
  __int128 v101;
  void *v102;
  _BYTE v103[40];
  __int128 v104;
  __int128 v105;
  void *v106;
  _QWORD v107[5];

  v88 = a7;
  v83 = a6;
  v87 = a4;
  v86 = a3;
  v96 = a2;
  v94 = a1;
  v90 = type metadata accessor for ActionLayout.Metrics(0);
  v89 = *(_QWORD *)(v90 - 8);
  v18 = __chkstk_darwin(v90);
  v91 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for ActionLayout(0, v18);
  v92 = *(_QWORD *)(v93 - 8);
  v20 = __chkstk_darwin(v93);
  v82 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for LabelPlaceholderCompatibility(0, v20);
  v84 = *(_QWORD *)(v85 - 8);
  v22 = __chkstk_darwin(v85);
  v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FontSource(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v81 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = 0;
  if ((a5 & 1) != 0)
  {
    ActionLayout.Metrics.artworkSize.getter(v34);
    *(_QWORD *)&v104 = v96;
    Conditional.evaluate(with:)(v107, &v104, v32);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
    v37 = *(double *)v107;
    v38 = *(double *)&v107[1];
    v39 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    v95 = LayoutViewPlaceholder.init(representing:)(v37, v38);
  }
  if ((v83 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload(v31, v29, 9);
    v40 = v96;
    v41 = objc_msgSend(v96, "traitCollection");
    v43 = sub_100457E08(v42);
    v45 = v44;

    v46 = v40;
    v47 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
    v48 = LayoutViewPlaceholder.init(representing:)(v43, v45);
    sub_10019ADA8((uint64_t)v31);
    v49 = v82;
  }
  else
  {
    v48 = 0;
    v49 = v82;
    v46 = v96;
  }
  v50 = v94;
  ActionLayout.Metrics.labelFontSource.getter(v34);
  v51 = objc_msgSend(v46, "traitCollection");
  isa = FontSource.font(compatibleWith:)((UITraitCollection)v51).super.isa;

  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v53 = type metadata accessor for Feature(0);
  v107[3] = v53;
  v107[4] = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v54 = sub_1000119C0(v107);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v54, enum case for Feature.measurement_with_labelplaceholder(_:), v53);
  v55 = v87;
  swift_bridgeObjectRetain(v87);
  v56 = isa;
  LOBYTE(v53) = isFeatureEnabled(_:)(v107);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v107);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v86, v55, v56, 4, 0, 0, 3, 0, v53 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v107, v57);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v24, v85);
  v58 = 0;
  if ((v88 & 1) != 0)
  {
    v59 = objc_msgSend(v96, "traitCollection");
    v61 = sub_10018A528(v59, v60);
    v63 = v62;

    v64 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v64, *(unsigned int *)(v64 + 48), *(unsigned __int16 *)(v64 + 52));
    v58 = LayoutViewPlaceholder.init(representing:)(v61, v63);
  }
  v65 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v91, v50, v90);
  v66 = v95;
  if (v95)
  {
    *((_QWORD *)&v105 + 1) = type metadata accessor for LayoutViewPlaceholder(0);
    v106 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v104 = v66;
  }
  else
  {
    v106 = 0;
    v104 = 0u;
    v105 = 0u;
  }
  sub_10000EF80((uint64_t)v107, (uint64_t)v103);
  if (!v48)
  {
    v102 = 0;
    v101 = 0u;
    v100 = 0u;
    if (v58)
      goto LABEL_13;
LABEL_15:
    v99 = 0;
    v98 = 0u;
    v97 = 0u;
    goto LABEL_16;
  }
  v67 = type metadata accessor for LayoutViewPlaceholder(0);
  v102 = &protocol witness table for LayoutViewPlaceholder;
  *((_QWORD *)&v101 + 1) = v67;
  *(_QWORD *)&v100 = v48;
  if (!v58)
    goto LABEL_15;
LABEL_13:
  v68 = type metadata accessor for LayoutViewPlaceholder(0);
  v99 = &protocol witness table for LayoutViewPlaceholder;
  *((_QWORD *)&v98 + 1) = v68;
  *(_QWORD *)&v97 = v58;
LABEL_16:
  swift_retain(v48);
  swift_retain(v58);
  v69 = v96;
  swift_unknownObjectRetain(v96);
  v70 = swift_retain(v66);
  LOBYTE(v80) = 1;
  ActionLayout.init(metrics:artworkView:labelView:accessoryView:searchAdButton:artworkBaselineOffsetFromBottom:isDisplayingSearchTrendingItem:restrictArtworkSizeToMetrics:in:)(v65, &v104, v103, &v100, &v97, 0, 1, 0, v70, v80, v69);
  v72 = CGSize.subtracting(insets:)(v71);
  v74 = v73;
  v75 = sub_10000E720(&qword_100816A28, (uint64_t (*)(uint64_t))&type metadata accessor for ActionLayout, (uint64_t)&protocol conformance descriptor for ActionLayout);
  v76 = v93;
  *(_QWORD *)&v104 = dispatch thunk of Measurable.measurements(fitting:in:)(v69, v93, v75, v72, v74);
  *((_QWORD *)&v104 + 1) = v77;
  CGSize.add(outsets:)(a10, a11, a12, a13);
  v78 = objc_msgSend(v69, "traitCollection");
  static Separator.thickness(compatibleWith:)(v78);
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v92 + 8))(v49, v76);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v107);
  return *(double *)&v104;
}

double sub_10023ABF8(uint64_t a1, void *a2)
{
  double v3;
  id v4;

  v3 = static ActionLayout.estimatedMeasurements(fitting:using:in:)();
  v4 = objc_msgSend(a2, "traitCollection");
  static Separator.thickness(compatibleWith:)();

  return v3;
}

void sub_10023AC60()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryView] = 0;
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessory];
  v2 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_searchAdTransparencyButton] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isDisplayingSearchAd] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_hasArtworkToDisplay] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isDisplayingSearchTrendingAction] = 0;
  v3 = OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_layoutMetrics;
  if (qword_100804FD8 != -1)
    swift_once(&qword_100804FD8, sub_100237F14);
  v4 = type metadata accessor for ActionLayout.Metrics(0);
  v5 = sub_10000EFC4(v4, (uint64_t)qword_100866320);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(&v0[v3], v5, v4);
  v6 = &v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_artworkSize];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v7 = &v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_itemLayoutContext];
  v8 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_isVertical] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_lazilyCreatedArtworkView] = 0;
  v9 = &v0[OBJC_IVAR____TtC20ProductPageExtension24ActionCollectionViewCell_accessoryAction];
  *v9 = 0;
  v9[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/ActionCollectionViewCell.swift", 51, 2, 157, 0);
  __break(1u);
}

double sub_10023AE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;

  v29 = a3;
  v4 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ActionLayout.Metrics(0);
  v8 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10081F170);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for AspectRatio(0);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Artwork.size.getter(v16);
  v18 = AspectRatio.init(_:_:)(v17);
  ActionLayout.Metrics.maxArtworkSize.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    sub_100010F2C((uint64_t)v13, &qword_10081F170);
    v19 = a2;
    v20 = v31;
    v21.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v31);
    ActionLayout.Metrics.artworkSize.getter(v21);
    v33 = v29;
    Conditional.evaluate(with:)(&v34, &v33, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
    v22 = v34;
    v23 = v35;
  }
  else
  {
    v33 = v29;
    Conditional.evaluate(with:)(&v34, &v33, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    v22 = v34;
    v23 = v35;
    v24 = a2;
    v25 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v31);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
    v34 = v22;
    v35 = v23;
  }
  v26 = AspectRatio.maxSize(fitting:)(v22, v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
  return v26;
}

uint64_t sub_10023B07C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10023B0A0(objc_class *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100239C9C(a1, a2, a3, a4, v4);
}

uint64_t sub_10023B0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10023B230(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char **v4;
  id v5;
  void *v6;
  char **p_type;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  double *v26;
  double *v27;
  double MidX;
  BOOL v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  void *v33;
  double v34;
  id v35;
  double v36;
  double v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  double v48;
  double v49;
  void *v50;
  id v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  id v56;
  double v57;
  id v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  char **v74;
  id v75;
  uint64_t v76;
  void *v77;
  char **v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  id v88;
  void *v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  double v104;
  double v105;
  double width;
  double height;
  double v108;
  double v109;
  double MidY;
  __int128 aBlock;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;

  v2 = v1;
  sub_100071FF4(0);
  v4 = &selRef_setEffect_;
  v5 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey);
  v6 = v5;
  p_type = &stru_1007D5FF0.type;
  if (v5)
  {
    objc_msgSend(v5, "frame");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
  }
  else
  {
    v16 = objc_msgSend(a1, "containerView");
    objc_msgSend(v16, "bounds");
    v9 = v17;
    v11 = v18;
    v13 = v19;
    v15 = v20;

  }
  v21 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, "traitCollection");

    v24 = objc_msgSend(v23, "horizontalSizeClass");
  }
  else
  {
    v24 = 0;
  }
  v25 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCardView);
  if (!v25
    || (v26 = (double *)(v2 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toBounds),
        (*(_BYTE *)(v2 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toBounds + 32) & 1) != 0)
    || (v27 = (double *)(v2 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCenter),
        (*(_BYTE *)(v2 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCenter + 16) & 1) != 0))
  {
    v29 = v24 != (id)1 || v22 == 0;
    v108 = 0.0;
    if (v29)
      v30 = 0.25;
    else
      v30 = 0.0;
    v115.origin.x = v9;
    v115.origin.y = v11;
    v115.size.width = v13;
    v115.size.height = v15;
    v31 = v30 * CGRectGetWidth(v115);
    v116.origin.x = v9;
    v116.origin.y = v11;
    v116.size.width = v13;
    v116.size.height = v15;
    v32 = CGRectGetHeight(v116) * 0.25;
    v117.origin.x = v9;
    v117.origin.y = v11;
    v117.size.width = v13;
    v117.size.height = v15;
    v118 = CGRectInset(v117, v31, v32);
    width = v118.size.width;
    height = v118.size.height;
    v118.origin.x = v9;
    v118.origin.y = v11;
    v118.size.width = v13;
    v118.size.height = v15;
    MidX = CGRectGetMidX(v118);
    v119.origin.x = v9;
    v119.origin.y = v11;
    v119.size.width = v13;
    v119.size.height = v15;
    MidY = CGRectGetMidY(v119);
    v105 = 0.0;
  }
  else
  {
    MidX = *v27;
    MidY = v27[1];
    width = v26[2];
    height = v26[3];
    v105 = v26[1];
    v108 = *v26;
  }
  v33 = *(void **)(v2
                 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController);
  v34 = 0.0;
  v109 = MidX;
  if (v33)
  {
    v35 = objc_msgSend(v33, "view");
    v36 = 0.0;
    v37 = MidY;
    if (v35)
    {
      v38 = v35;
      objc_msgSend(v35, "bounds");
      v40 = v39;
      v42 = v41;
      v44 = v43;
      v46 = v45;
      v47 = objc_msgSend(a1, "containerView");
      objc_msgSend(v38, "convertRect:toCoordinateSpace:", v47, v40, v42, v44, v46);
      v36 = v48;
      v34 = v49;

      MidX = v109 + v36;
      v37 = MidY + v34;
    }
  }
  else
  {
    v36 = 0.0;
    v37 = MidY;
  }
  v50 = *(void **)(v2
                 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_detailPageViewController);
  if (!v50)
  {
LABEL_25:
    v104 = v37;
    v53 = MidX;
    v120.origin.x = v9;
    v120.origin.y = v11;
    v120.size.width = v13;
    v120.size.height = v15;
    v54 = CGRectGetMidX(v120);
    v121.origin.x = v9;
    v121.origin.y = v11;
    v121.size.width = v13;
    v121.size.height = v15;
    v55 = CGRectGetMidY(v121);
    sub_10023C2F8(v25, (uint64_t)v6, a1, v54, v55, 0.0, 0.0, v13, v15, v36, v34);
    v56 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
    v57 = *(double *)&v56;
    if (v56)
    {
      v58 = v56;
      v59 = objc_msgSend(a1, "containerView");
      objc_msgSend(v59, "bounds");
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v67 = v66;

      objc_msgSend(v58, "setFrame:", v61, v63, v65, v67);
      if (v25)
      {
        p_type = v25;
        v4 = (char **)objc_msgSend(a1, "containerView");
        objc_msgSend(v4, "insertSubview:below:", v58, p_type);

      }
      else
      {
        v4 = (char **)objc_msgSend(a1, "containerView");
        objc_msgSend(v4, "insertSubview:below:", v58, v6);
      }

    }
    v114 = (uint64_t)_swiftEmptyArrayStorage;
    v68 = sub_10023BC48(v25, v6, (uint64_t)a1, v108, v105, width, height, v109, MidY, v53, v104);
    if (v68)
    {
      v4 = (char **)v68;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      p_type = *(char ***)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v69 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)p_type >= v69 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, (char *)p_type + 1, 1);
      v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(p_type, v4);
      specialized Array._endMutation()(v70);

    }
    if (!v6)
      goto LABEL_39;
    v4 = v6;
    if (UIAccessibilityIsReduceMotionEnabled())
      goto LABEL_38;
    v104 = v57;
    v71 = swift_allocObject(&unk_100747150, 24, 7);
    *(_QWORD *)(v71 + 16) = v4;
    v72 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    *(_QWORD *)&v113 = sub_10023C724;
    *((_QWORD *)&v113 + 1) = v71;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v112 = sub_1000924A0;
    *((_QWORD *)&v112 + 1) = &unk_100747168;
    v73 = _Block_copy(&aBlock);
    v74 = v4;
    swift_release();
    v75 = objc_msgSend(v72, "initWithDuration:controlPoint1:controlPoint2:animations:", v73, 0.216, 0.33, 0.0, 0.83, 0.83);
    _Block_release(v73);
    v76 = swift_allocObject(&unk_1007471A0, 24, 7);
    *(_QWORD *)(v76 + 16) = v74;
    *(_QWORD *)&v113 = sub_10023C738;
    *((_QWORD *)&v113 + 1) = v76;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v112 = sub_10004A774;
    *((_QWORD *)&v112 + 1) = &unk_1007471B8;
    v77 = _Block_copy(&aBlock);
    v78 = v74;
    objc_msgSend(v75, "addCompletion:", v77, swift_release().n128_f64[0]);
    _Block_release(v77);

    v4 = (char **)v75;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    p_type = *(char ***)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v79 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)p_type >= v79 >> 1)
      goto LABEL_65;
    while (1)
    {
      v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(p_type, v4);
      specialized Array._endMutation()(v80);
      v57 = v104;
LABEL_38:

LABEL_39:
      v81 = sub_10023BF74(v25, v6, (uint64_t)a1, v108, v105, width, height, v109, MidY);
      if (v81)
      {
        v82 = v81;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v82);
        a1 = *(char **)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v83 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)a1 >= v83 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1, a1 + 1, 1);
        v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v82);
        specialized Array._endMutation()(v84);

      }
      v85 = v114;
      if ((unint64_t)v114 >> 62)
      {
        if (v114 < 0)
          v90 = v114;
        else
          v90 = v114 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v114, 2);
        v86 = _CocoaArrayWrapper.endIndex.getter(v90);
        if (!v86)
          goto LABEL_55;
      }
      else
      {
        v86 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v114, 2);
        if (!v86)
          goto LABEL_55;
      }
      if (v86 >= 1)
        break;
      __break(1u);
LABEL_65:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, (char *)p_type + 1, 1);
    }
    for (i = 0; i != v86; ++i)
    {
      if ((v85 & 0xC000000000000001) != 0)
        v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v85);
      else
        v88 = *(id *)(v85 + 8 * i + 32);
      v89 = v88;
      objc_msgSend(v88, "startAnimation", v101, v102);

    }
LABEL_55:
    swift_bridgeObjectRelease_n(v85, 2);
    if (v25)
    {
      v91 = v25;
      if (UIAccessibilityIsReduceMotionEnabled())
      {

      }
      else
      {
        v92 = swift_allocObject(&unk_100747100, 24, 7);
        *(_QWORD *)(v92 + 16) = v91;
        v93 = objc_allocWithZone((Class)UIViewPropertyAnimator);
        *(_QWORD *)&v113 = sub_1000718A0;
        *((_QWORD *)&v113 + 1) = v92;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v112 = sub_1000924A0;
        *((_QWORD *)&v112 + 1) = &unk_100747118;
        v94 = _Block_copy(&aBlock);
        v95 = v91;
        swift_release();
        v96 = objc_msgSend(v93, "initWithDuration:controlPoint1:controlPoint2:animations:", v94, 0.13, 0.17, 0.0, 0.67, 1.0);
        _Block_release(v94);

        if (v96)
        {
          objc_msgSend(v96, "startAnimationAfterDelay:", 0.083);
          v97 = v96;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
          v99 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v98 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v99 >= v98 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
          v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97);
          specialized Array._endMutation()(v100);

          v85 = v114;
          goto LABEL_63;
        }
      }
    }

LABEL_63:
    swift_bridgeObjectRelease(v85);
    return;
  }
  v51 = objc_msgSend(v50, "view");
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v51, "transform");
    v102 = v112;
    v103 = aBlock;
    v101 = v113;

    aBlock = v103;
    v112 = v102;
    v113 = v101;
    objc_msgSend(v25, "setTransform:", &aBlock);
    goto LABEL_25;
  }
  __break(1u);
}

id sub_10023BC48(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  void *v11;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void **v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;

  if (UIAccessibilityIsReduceMotionEnabled())
    return 0;
  v24 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 180.0, 22.0, 0.0, 0.0);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v24, 0.0);

  v25 = swift_allocObject(&unk_100747060, 104, 7);
  *(_QWORD *)(v25 + 16) = v11;
  *(_QWORD *)(v25 + 24) = a1;
  *(double *)(v25 + 32) = a4;
  *(double *)(v25 + 40) = a5;
  *(double *)(v25 + 48) = a6;
  *(double *)(v25 + 56) = a7;
  *(double *)(v25 + 64) = a8;
  *(double *)(v25 + 72) = a9;
  *(_QWORD *)(v25 + 80) = a2;
  *(double *)(v25 + 88) = a10;
  *(double *)(v25 + 96) = a11;
  v38 = sub_10023C678;
  v39 = v25;
  v34 = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_1000924A0;
  v37 = &unk_100747078;
  v26 = _Block_copy(&v34);
  v27 = a2;
  v28 = v11;
  v29 = a1;
  objc_msgSend(v23, "addAnimations:", v26, swift_release().n128_f64[0]);
  _Block_release(v26);
  v30 = swift_allocObject(&unk_1007470B0, 32, 7);
  *(_QWORD *)(v30 + 16) = a3;
  *(_QWORD *)(v30 + 24) = v28;
  v38 = sub_10023C6C0;
  v39 = v30;
  v34 = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10004A774;
  v37 = &unk_1007470C8;
  v31 = _Block_copy(&v34);
  v32 = v28;
  swift_unknownObjectRetain(a3);
  objc_msgSend(v23, "addCompletion:", v31, swift_release().n128_f64[0]);
  _Block_release(v31);
  return v23;
}

id sub_10023BE68(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, void *a10, void *a11)
{
  _QWORD v22[6];

  sub_100071FF4(1);
  objc_msgSend(a10, "setBounds:", a1, a2, a3, a4);
  objc_msgSend(a10, "setCenter:", a5, a6);
  if (a10)
  {
    v22[0] = 0x3FF0000000000000;
    v22[1] = 0;
    v22[2] = 0;
    v22[3] = 0x3FF0000000000000;
    v22[4] = 0;
    v22[5] = 0;
    objc_msgSend(a10, "setTransform:", v22);
  }
  objc_msgSend(a11, "setBounds:", a1, a2, a3, a4);
  return objc_msgSend(a11, "setCenter:", a7, a8);
}

id sub_10023BF74(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  void *v9;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  _QWORD *v26;
  void *v27;
  id v28;
  id v29;
  void **v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  _QWORD *v36;

  if (!UIAccessibilityIsReduceMotionEnabled())
    return 0;
  objc_msgSend(a1, "setBounds:", a4, a5, a6, a7);
  objc_msgSend(a1, "setCenter:", a8, a9);
  v19 = (_QWORD *)swift_allocObject(&unk_100746FC0, 40, 7);
  v19[2] = v9;
  v19[3] = a1;
  v19[4] = a2;
  v20 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v35 = sub_10023C5E0;
  v36 = v19;
  v31 = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_1000924A0;
  v34 = &unk_100746FD8;
  v21 = _Block_copy(&v31);
  v22 = a2;
  v23 = v9;
  v24 = a1;
  swift_release();
  v25 = objc_msgSend(v20, "initWithDuration:curve:animations:", 0, v21, 0.3);
  _Block_release(v21);
  v26 = (_QWORD *)swift_allocObject(&unk_100747010, 40, 7);
  v26[2] = a2;
  v26[3] = a3;
  v26[4] = v23;
  v35 = sub_10023C638;
  v36 = v26;
  v31 = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004A774;
  v34 = &unk_100747028;
  v27 = _Block_copy(&v31);
  v28 = v23;
  v29 = v22;
  swift_unknownObjectRetain(a3);
  objc_msgSend(v25, "addCompletion:", v27, swift_release().n128_f64[0]);
  _Block_release(v27);
  return v25;
}

id sub_10023C188(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD v12[6];
  _BYTE v13[24];

  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks, v13, 0, 0);
  v7 = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(*v5);
    v9 = (_BYTE *)(v7 + 48);
    do
    {
      if (*v9 == 1)
      {
        v11 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v9 - 2);
        v10 = *((_QWORD *)v9 - 1);
        swift_retain(v10);
        v11(1, 1);
        swift_release(v10);
      }
      v9 += 24;
      --v8;
    }
    while (v8);
    result = (id)swift_bridgeObjectRelease(v7);
  }
  if (a2)
  {
    objc_msgSend(a2, "setAlpha:", 1.0);
    v12[0] = 0x3FF0000000000000;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = 0x3FF0000000000000;
    v12[4] = 0;
    v12[5] = 0;
    result = objc_msgSend(a2, "setTransform:", v12);
  }
  if (a3)
    return objc_msgSend(a3, "setAlpha:", 0.0);
  return result;
}

uint64_t sub_10023C298(uint64_t result, id a2, id a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (!result)
  {
    v8 = v3;
    if (a2)
      objc_msgSend(a2, "setHidden:", 1);
    objc_msgSend(a3, "completeTransition:", 1, v4, v8, v5, v6);
    return sub_100071FF4(2);
  }
  return result;
}

void sub_10023C2F8(void *a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v11;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v27;

  if (a1)
  {
    v20 = *(void **)(v11
                   + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController);
    if (!v20)
    {
      v27 = a1;
      v24 = objc_msgSend(a3, "containerView");
      objc_msgSend(v24, "insertSubview:below:", v27, a2);
      goto LABEL_7;
    }
    v21 = a1;
    v22 = v20;
    v23 = objc_msgSend(v22, "view");
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, "addSubview:", v21);

LABEL_7:
      objc_msgSend(a1, "setHidden:", 0);
      objc_msgSend(a1, "setBounds:", a6, a7, a8, a9);
      objc_msgSend(a1, "setCenter:", a4 - a10, a5 - a11);
      objc_msgSend(a1, "setNeedsLayout");
      objc_msgSend(a1, "layoutIfNeeded");
      objc_msgSend(a1, "setAlpha:", 0.0);

      return;
    }
    __break(1u);
  }
}

void sub_10023C4D8()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation_detailPageViewController));
}

id sub_10023C514()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppPromotionDetailPageCloseAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppPromotionDetailPageCloseAnimation()
{
  return objc_opt_self(_TtC20ProductPageExtension36AppPromotionDetailPageCloseAnimation);
}

uint64_t sub_10023C5AC()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_10023C5E0()
{
  uint64_t v0;

  return sub_10023C188(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10023C5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10023C5FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10023C604()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10023C638(uint64_t a1)
{
  uint64_t v1;

  return sub_10023C298(a1, *(id *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_10023C644()
{
  id *v0;

  return swift_deallocObject(v0, 104, 7);
}

id sub_10023C678()
{
  uint64_t v0;

  return sub_10023BE68(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(double *)(v0 + 88), *(double *)(v0 + 96), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 80));
}

uint64_t sub_10023C694()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023C6C0(uint64_t result)
{
  uint64_t v1;

  if (!result)
  {
    objc_msgSend(*(id *)(v1 + 16), "completeTransition:", 1);
    return sub_100071FF4(2);
  }
  return result;
}

uint64_t sub_10023C700()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10023C724()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

id sub_10023C738(id result)
{
  uint64_t v1;

  if (!result)
    return objc_msgSend(*(id *)(v1 + 16), "setHidden:", 1);
  return result;
}

uint64_t sub_10023C78C(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_1000951BC();
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

char *sub_10023C818(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  double left;
  double bottom;
  double right;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  v9 = OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_preferredImageSizes] = &_swiftEmptyDictionarySingleton;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for ContentSearchResultCollectionViewCell();
  v13 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = (char *)v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v18 = objc_msgSend(v17, "contentView");
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v19 = objc_msgSend(v17, "contentView");
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_lockupView]);

  v20 = objc_msgSend(v17, "contentView");
  v21 = *(id *)&v17[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots];
  objc_msgSend(v20, "addSubview:", v21);

  return v17;
}

id sub_10023CAF8()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void (*v19)(_QWORD, _QWORD);
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  double v32;
  void *v33;
  double v34;
  objc_super v36;
  CGRect v37;
  CGRect v38;

  v1 = v0;
  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for ContentSearchResultCollectionViewCell();
  objc_msgSendSuper2(&v36, "layoutSubviews");
  v2 = objc_msgSend(v0, "contentView");
  v3 = sub_1000951BC();
  v4 = LayoutMarginsAware<>.layoutFrame.getter(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_lockupView];
  v12.n128_f64[0] = v8;
  sub_10044F944(v12, v10);
  objc_msgSend(v11, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v4));
  v37.origin.x = v4;
  v37.origin.y = v6;
  v37.size.width = v8;
  v37.size.height = v10;
  CGRectGetMinX(v37);
  objc_msgSend(v11, "frame");
  CGRectGetMaxY(v38);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v13 = type metadata accessor for StaticDimension(0);
  sub_10000EFC4(v13, (uint64_t)qword_10086A7E8);
  v14 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v16 + 32) = v14;
  v17 = v14;
  v18 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v16);
  dispatch thunk of AnyDimension.rawValue(in:)(v18, v13, &protocol witness table for StaticDimension);

  v20 = *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_title];
  v19 = *(void (**)(_QWORD, _QWORD))&v11[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_title + 8];
  v21 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel], "text", swift_bridgeObjectRetain(v19).n128_f64[0]);
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v26 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel], "text");
  if (v26)
  {
    v27 = v26;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  v31 = objc_msgSend(v1, "traitCollection");
  sub_10023D1EC(v20, v19, v23, v25, v28, v30, v31, v8, v10);
  swift_bridgeObjectRelease(v19);

  swift_bridgeObjectRelease(v30);
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v25).n128_u64[0];
  v33 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots];
  objc_msgSend(v1, "bounds", v32);
  return objc_msgSend(v33, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v34));
}

id sub_10023CF14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentSearchResultCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContentSearchResultCollectionViewCell()
{
  return objc_opt_self(_TtC20ProductPageExtension37ContentSearchResultCollectionViewCell);
}

uint64_t sub_10023CFAC()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots)+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
}

void sub_10023CFCC(void *a1)
{
  sub_10048FC80();

}

void (*sub_10023D004(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots);
  a1[1] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  return sub_10023D054;
}

void sub_10023D054(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10048FC80();

    v3 = v2;
  }
  else
  {
    sub_10048FC80();
    v3 = v4;
  }

}

uint64_t sub_10023D0AC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100653AD8, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10023D0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100653AD8, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

void (*sub_10023D12C(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100653AD8, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001EB20;
}

uint64_t sub_10023D194(uint64_t a1, uint64_t a2)
{
  return sub_100020248((unint64_t *)&unk_100822170, a2, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100653A68);
}

uint64_t sub_10023D1C0(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100816B20, a2, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100653A98);
}

double sub_10023D1EC(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, double a8, double a9)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v29;

  v18 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v22 = ((__n128 (*)(char *, uint64_t, uint64_t, uint64_t))*(_QWORD *)(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22.n128_f64[0] = a8;
  sub_100452B44(a1, a2, a3, a4, a5, a6, 0, (uint64_t)v20, v22, a9, 0, a7);
  sub_10023D3A4((uint64_t)v20);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v23 = type metadata accessor for StaticDimension(0);
  sub_10000EFC4(v23, (uint64_t)qword_10086A7E8);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v24 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v25 + 32) = a7;
  v26 = a7;
  v27 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v25);
  dispatch thunk of AnyDimension.rawValue(in:)(v27, v23, &protocol witness table for StaticDimension);

  return a8;
}

uint64_t sub_10023D3A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_100825010);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AdTransparencyActionImplementation()
{
  return &type metadata for AdTransparencyActionImplementation;
}

unint64_t sub_10023D3F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100816B28;
  if (!qword_100816B28)
  {
    v1 = type metadata accessor for AdTransparencyAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100816B28);
  }
  return result;
}

uint64_t sub_10023D440(uint64_t *a1, uint64_t a2)
{
  return sub_10023D448(*a1, a2);
}

uint64_t sub_10023D448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD v84[4];
  _OWORD v85[2];
  uint64_t v86;

  v82 = a2;
  v2 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v2);
  v83 = (char **)((char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v5 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  v81 = v5;
  v6 = __chkstk_darwin(v4);
  v64 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)type metadata accessor for FlowOrigin(0, v6);
  v78 = *(v8 - 1);
  v79 = v8;
  __chkstk_darwin(v8);
  v77 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowAnimationBehavior(0);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  __chkstk_darwin(v10);
  v74 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowPresentationContext(0);
  v72 = *(_QWORD *)(v12 - 8);
  v73 = v12;
  __chkstk_darwin(v12);
  v71 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v14);
  v70 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v18;
  v19 = type metadata accessor for FlowPage(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v22;
  v24 = type metadata accessor for ActionMetrics(0, v23);
  v67 = *(_QWORD *)(v24 - 8);
  v65 = v24;
  __chkstk_darwin(v24);
  v66 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v64 - v28;
  AdTransparencyAction.adTransparencyData.getter(v27);
  v31 = v30;
  v32 = objc_allocWithZone((Class)ADTransparencyViewController);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v32, "initWithTransparencyDetails:", v33, swift_bridgeObjectRelease(v31).n128_f64[0]);

  static ActionMetrics.notInstrumented.getter(v35);
  v86 = 0;
  memset(v85, 0, sizeof(v85));
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for FlowPage.viewController(_:), v19);
  v37 = type metadata accessor for URL(0, v36);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v18, 1, 1, v37);
  v38 = type metadata accessor for ReferrerData(0);
  v39 = v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v70, 1, 1, v38);
  v84[3] = sub_100050BB8();
  v84[0] = v34;
  v40 = v67;
  v41 = v66;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v29, v24);
  v42 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, enum case for FlowPresentationContext.infer(_:), v73);
  v43 = v74;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for FlowAnimationBehavior.infer(_:), v76);
  v44 = v77;
  (*(void (**)(char *, _QWORD, id))(v78 + 104))(v77, enum case for FlowOrigin.inapp(_:), v79);
  v79 = v34;
  v45 = static FlowActionPresentation.stackPush.getter(v79);
  v47 = v46;
  v48 = type metadata accessor for FlowAction(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v63 = v47;
  v49 = v82;
  v62 = v41;
  v50 = v80;
  v51 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(v85, 0, 0, 0, v69, v68, 0, 0, v39, v84, v62, v42, v43, v44, 0, v45, v63);
  v52 = *(void (**)(char *, uint64_t))(v40 + 8);
  v53 = v81;
  v52(v29, v65);
  swift_retain(v51);
  v54 = v83;
  BaseObjectGraph.optional<A>(_:)(v83, v50, v50);
  v55 = v54;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v53 + 48))(v54, 1, v50) == 1)
  {
    sub_10003DAAC((uint64_t)v54);
    sub_10000DAF8(&qword_100808570);
    v56 = sub_10005ABBC();
    v57 = swift_allocError(&type metadata for GeneralActionImplementationError, v56, 0, 0);
    *v58 = 1;
    v59 = Promise.__allocating_init(error:)(v57);
  }
  else
  {
    v60 = (uint64_t)v64;
    (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 32))(v64, v55, v50);
    v59 = sub_10032D5D4(v51, v49, v60);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v60, v50);
  }

  swift_release_n(v51, 2);
  return v59;
}

void sub_10023D9DC(uint64_t a1)
{
  sub_10023D9FC(a1, qword_100866378);
}

void sub_10023D9EC(uint64_t a1)
{
  sub_10023D9FC(a1, qword_100866390);
}

void sub_10023D9FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for AspectRatio(0);
  sub_100011980(v3, a2);
  v4 = sub_10000EFC4(v3, (uint64_t)a2);
  AspectRatio.init(_:_:)(v4);
}

uint64_t sub_10023DA54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, __n128 a5, double a6, double a7, double a8, double a9)
{
  char *v9;
  char *v10;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  id v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  double v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  uint64_t (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;

  v10 = v9;
  v71 = a2;
  v72 = a3;
  v16 = a5.n128_u64[0];
  v18 = type metadata accessor for LockupMediaLayout.DisplayType(0, a5);
  v68 = *(_QWORD *)(v18 - 8);
  v69 = v18;
  __chkstk_darwin(v18);
  v67 = (uint64_t)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v20);
  v73 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v66 - v27;
  v29 = sub_10000DAF8(&qword_1008081F0);
  *(_QWORD *)&v30 = __chkstk_darwin(v29).n128_u64[0];
  v32 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = objc_msgSend(v9, "contentView", v30);
  objc_msgSend(v33, "setLayoutMargins:", a6, a7, a8, a9);

  v34 = *(char **)&v10[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_lockupView];
  *(_QWORD *)&v34[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = v16;
  objc_msgSend(v34, "setNeedsLayout");
  v35 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v32, 1, 1, v35);
  v70 = a4;
  sub_10030F2E4(a1, (uint64_t)v32, a4);
  sub_100010F2C((uint64_t)v32, &qword_1008081F0);
  v36 = sub_100035178();
  v38 = static UIColor.defaultBackground.getter(v36, v37);
  objc_msgSend(v10, "setBackgroundColor:", v38);

  v40 = MixedMediaLockup.screenshotsDisplayStyle.getter(v39);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v23 + 104))(v25, enum case for ScreenshotsDisplayStyle.noScreenshots(_:), v22, v40);
  v41 = sub_10000E720((unint64_t *)&qword_100816B30, (uint64_t (*)(uint64_t))&type metadata accessor for ScreenshotsDisplayStyle, (uint64_t)&protocol conformance descriptor for ScreenshotsDisplayStyle);
  LOBYTE(v38) = dispatch thunk of static Equatable.== infix(_:_:)(v28, v25, v22, v41);
  v42 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
  v43 = v42(v25, v22);
  if ((v38 & 1) != 0)
  {
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots], "setHidden:", 1);
LABEL_44:
    objc_msgSend(v10, "setNeedsLayout", v66);
    return v42(v28, v22);
  }
  v44 = MixedMediaLockup.screenshots.getter(v43);
  v45 = v44;
  if ((unint64_t)v44 >> 62)
  {
    if (v44 >= 0)
      v44 &= 0xFFFFFFFFFFFFFF8uLL;
    v48 = _CocoaArrayWrapper.endIndex.getter(v44);
    v46 = (uint64_t)v73;
    if (v48)
      goto LABEL_5;
LABEL_12:
    swift_bridgeObjectRelease(v45);
    v23 = 0;
    goto LABEL_13;
  }
  v46 = (uint64_t)v73;
  if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_5:
  if ((v45 & 0xC000000000000001) != 0)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
  }
  else
  {
    if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_47;
    }
    v23 = *(_QWORD *)(v45 + 32);
    swift_retain(v23);
  }
  swift_bridgeObjectRelease(v45);
LABEL_13:
  v32 = *(char **)&v10[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots];
  v49 = MixedMediaLockup.trailers.getter(v47);
  v45 = v49;
  if ((unint64_t)v49 >> 62)
  {
    if (v49 >= 0)
      v49 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v49))
    {
LABEL_15:
      if ((v45 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_49;
        }
        v50 = *(char **)(v45 + 32);
        swift_retain(v50);
        goto LABEL_18;
      }
LABEL_47:
      v50 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
LABEL_18:
      *(_QWORD *)&v51 = swift_bridgeObjectRelease(v45).n128_u64[0];
      goto LABEL_23;
    }
  }
  else if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_15;
  }
  *(_QWORD *)&v51 = swift_bridgeObjectRelease(v45).n128_u64[0];
  v50 = 0;
LABEL_23:
  v52 = objc_msgSend(v71, "traitCollection", v51);
  sub_10023E078(v72, v46);

  v54 = MixedMediaLockup.screenshots.getter(v53);
  v45 = v54;
  if ((unint64_t)v54 >> 62)
  {
    if (v54 >= 0)
      v54 &= 0xFFFFFFFFFFFFFF8uLL;
    v57 = _CocoaArrayWrapper.endIndex.getter(v54);
    v73 = v50;
    if (v57)
    {
LABEL_25:
      if ((v45 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_51;
        }
        v50 = *(char **)(v45 + 32);
        swift_retain(v50);
        goto LABEL_28;
      }
LABEL_49:
      v50 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
LABEL_28:
      swift_bridgeObjectRelease(v45);
      goto LABEL_33;
    }
  }
  else
  {
    v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    v73 = v50;
    if (v55)
      goto LABEL_25;
  }
  swift_bridgeObjectRelease(v45);
  v50 = 0;
LABEL_33:
  v58 = MixedMediaLockup.trailers.getter(v56);
  v45 = v58;
  if (!((unint64_t)v58 >> 62))
  {
    result = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
    v66 = v42;
    if (result)
      goto LABEL_35;
LABEL_42:
    v60 = v46;
    v62 = v23;
    v63 = swift_bridgeObjectRelease(v45);
    v61 = 0;
    goto LABEL_43;
  }
  if (v58 >= 0)
    v58 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v58);
  v66 = v42;
  if (!result)
    goto LABEL_42;
LABEL_35:
  if ((v45 & 0xC000000000000001) != 0)
  {
LABEL_51:
    v60 = v46;
    v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
    goto LABEL_38;
  }
  if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v60 = v46;
    v61 = *(_QWORD *)(v45 + 32);
    swift_retain(v61);
LABEL_38:
    v62 = v23;
    v63 = swift_bridgeObjectRelease(v45);
LABEL_43:
    v64 = v67;
    sub_10048D0D4((uint64_t)v50, v61, (uint64_t)v28, v67, v63);
    swift_release();
    swift_release();
    sub_10010BD8C(v62, v73, v60, v64, (uint64_t)v28, v70);
    v65 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v68 + 8))(v64, v69, v65);
    sub_100010F2C(v60, (uint64_t *)&unk_100811F20);
    objc_msgSend(v32, "setHidden:", 0);
    swift_release();
    v42 = v66;
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

uint64_t sub_10023E078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  if ((UITraitCollection.isSizeClassCompact.getter(a1) & 1) == 0)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePad);
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v8 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease_n(v10, 2);
    }
    else
    {
      v14 = v12;
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v14);
      if ((v15 & 1) == 0)
      {
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePhone);
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        if (v16 == v19 && v18 == v20)
        {
          swift_bridgeObjectRelease_n(v18, 2);
        }
        else
        {
          v22 = v20;
          v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v19, v20, 0);
          swift_bridgeObjectRelease(v18);
          swift_bridgeObjectRelease(v22);
          if ((v23 & 1) == 0)
          {
            static AspectRatio.square.getter(v24);
            v4 = type metadata accessor for AspectRatio(0);
            v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
            v6 = a2;
            v7 = 0;
            return v5(v6, v7, 1, v4);
          }
        }
        if (qword_100804FF0 != -1)
          swift_once(&qword_100804FF0, sub_10023D9EC);
        v25 = type metadata accessor for AspectRatio(0);
        v26 = v25;
        v27 = qword_100866390;
LABEL_22:
        v28 = sub_10000EFC4(v25, (uint64_t)v27);
        v29 = *(_QWORD *)(v26 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(a2, v28, v26);
        v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
        v6 = a2;
        v7 = 0;
        v4 = v26;
        return v5(v6, v7, 1, v4);
      }
    }
    if (qword_100804FE8 != -1)
      swift_once(&qword_100804FE8, sub_10023D9DC);
    v25 = type metadata accessor for AspectRatio(0);
    v26 = v25;
    v27 = qword_100866378;
    goto LABEL_22;
  }
  v4 = type metadata accessor for AspectRatio(0);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v6 = a2;
  v7 = 1;
  return v5(v6, v7, 1, v4);
}

uint64_t sub_10023E284(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  void (**v11)(char *, _QWORD, uint64_t, double);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  double v22;
  double v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  Swift::Bool v36;
  uint64_t v37;
  uint64_t Strong;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  Swift::Bool v44;
  void *v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  double v67;
  void (**v68)(char *, _QWORD, uint64_t, double);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void (*v73)(char *, uint64_t);
  __n128 v74;
  uint64_t v75;
  void (*v76)(_QWORD, _QWORD);
  void (*v77)(_QWORD, _QWORD);
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  id v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  char *v104;
  void (**v105)(char *, _QWORD, uint64_t, double);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  _BYTE v112[40];
  char v113[24];
  char v114[16];
  double v115;
  double v116;
  char v117;
  UIImage_optional v118;
  UIImage_optional v119;

  v5 = v4;
  v10 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v11 = *(void (***)(char *, _QWORD, uint64_t, double))(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v100 - v15;
  v18 = type metadata accessor for Artwork.Style(0, v17);
  __chkstk_darwin(v18);
  v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1000C8DF0(a2, (uint64_t)v114);
  if ((v117 & 1) == 0)
  {
    v102 = v20;
    v22 = v115;
    v23 = v116;
    v107 = *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots);
    v24 = (uint64_t *)(v107 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v113, 0, 0);
    v25 = *v24;
    v26 = (unint64_t)*v24 >> 62;
    v108 = v10;
    v109 = a1;
    v106 = v16;
    v103 = a4;
    v105 = v11;
    v104 = v13;
    if (v26)
    {
      if (v25 < 0)
        v37 = v25;
      else
        v37 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v27 = _CocoaArrayWrapper.endIndex.getter(v37);
      v110 = a3;
      if (!v27)
        goto LABEL_14;
    }
    else
    {
      v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v25);
      v110 = a3;
      if (!v27)
        goto LABEL_14;
    }
    if (v27 < 1)
    {
      __break(1u);
      goto LABEL_32;
    }
    v28 = 0;
    v29 = v5;
    do
    {
      if ((v25 & 0xC000000000000001) != 0)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v25);
      else
        v30 = *(id *)(v25 + 8 * v28 + 32);
      v31 = v30;
      ++v28;
      v111 = v30;
      v32 = type metadata accessor for BorderedScreenshotView();
      v33 = sub_10000E720(&qword_10080FAD8, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
      v34 = v31;
      AnyHashable.init<A>(_:)(&v111, v32, v33);
      ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v112, 1);
      sub_100018968((uint64_t)v112);
      v35 = *(id *)&v34[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
      v118.value.super.isa = 0;
      v118.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v118, v36);

      v5 = v29;
    }
    while (v27 != v28);
LABEL_14:
    swift_bridgeObjectRelease(v25);
    Strong = swift_unknownObjectWeakLoadStrong(v107 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
    if (Strong)
    {
      v39 = (void *)Strong;
      objc_msgSend(*(id *)(Strong + qword_100828468), "setImage:", 0);
      v111 = v39;
      v40 = type metadata accessor for VideoView(0);
      v41 = sub_10000E720((unint64_t *)&qword_10080FAE8, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
      v42 = v39;
      AnyHashable.init<A>(_:)(&v111, v40, v41);
      ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v112, 1);

      sub_100018968((uint64_t)v112);
    }
    v16 = *(char **)(v5 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_lockupView);
    a4 = (char *)OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
    v43 = *(id *)&v16[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
    v119.value.super.isa = 0;
    v119.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v119, v44);

    v45 = *(void **)&a4[(_QWORD)v16];
    v46 = type metadata accessor for ArtworkView(0);
    v25 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v47 = v45;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v47, 1, v46, v25);

    v49 = Lockup.icon.getter(v48);
    v13 = v106;
    if (!v49)
    {
LABEL_21:
      v67 = MixedMediaLockup.screenshotsDisplayStyle.getter(v50);
      v68 = v105;
      v69 = v104;
      v70 = v108;
      v105[13](v104, enum case for ScreenshotsDisplayStyle.noScreenshots(_:), v108, v67);
      v71 = sub_10000E720((unint64_t *)&qword_100816B30, (uint64_t (*)(uint64_t))&type metadata accessor for ScreenshotsDisplayStyle, (uint64_t)&protocol conformance descriptor for ScreenshotsDisplayStyle);
      v72 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v69, v70, v71);
      v73 = (void (*)(char *, uint64_t))v68[1];
      v73(v69, v70);
      if ((v72 & 1) != 0)
        return ((uint64_t (*)(char *, uint64_t))v73)(v13, v70);
      v75 = Lockup.title.getter(v74);
      v77 = v76;
      v79 = Lockup.subtitle.getter(v78);
      v81 = v80;
      if (Lockup.searchAd.getter(v82))
      {
        v84 = SearchAd.advertisingText.getter(v83);
        v86 = v85;
        v83.n128_u64[0] = swift_release().n128_u64[0];
      }
      else
      {
        v84 = 0;
        v86 = 0;
      }
      v87 = objc_msgSend(v103, "traitCollection", v83.n128_f64[0]);
      v88 = sub_10023D1EC(v75, v77, v79, v81, v84, v86, v87, v22, v23);
      v90 = v89;

      swift_bridgeObjectRelease(v86);
      swift_bridgeObjectRelease(v81);
      swift_bridgeObjectRelease(v77);
      v92 = MixedMediaLockup.screenshots.getter(v91);
      v93 = v92;
      if ((unint64_t)v92 >> 62)
      {
        if (v92 >= 0)
          v92 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v92))
          goto LABEL_27;
      }
      else if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_27:
        if ((v93 & 0xC000000000000001) != 0)
        {
          v75 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v93);
        }
        else
        {
          if (!*(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_52;
          }
          v75 = *(_QWORD *)(v93 + 32);
          swift_retain(v75);
        }
        swift_bridgeObjectRelease(v93);
LABEL_37:
        v95 = MixedMediaLockup.trailers.getter(v94);
        v93 = v95;
        if ((unint64_t)v95 >> 62)
        {
          if (v95 >= 0)
            v95 &= 0xFFFFFFFFFFFFFF8uLL;
          result = _CocoaArrayWrapper.endIndex.getter(v95);
          if (result)
          {
LABEL_39:
            if ((v93 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return result;
              }
              v96 = *(_QWORD *)(v93 + 32);
              swift_retain(v96);
              goto LABEL_42;
            }
LABEL_52:
            v96 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v93);
LABEL_42:
            *(_QWORD *)&v97 = swift_bridgeObjectRelease(v93).n128_u64[0];
LABEL_47:
            v98 = objc_msgSend(v103, "traitCollection", v97);
            v99.n128_f64[0] = v88;
            sub_10010B258(v75, v96, (uint64_t)v98, v110, (uint64_t)v13, v99, v90);

            swift_release();
            swift_release();
            v70 = v108;
            return ((uint64_t (*)(char *, uint64_t))v73)(v13, v70);
          }
        }
        else
        {
          result = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (result)
            goto LABEL_39;
        }
        *(_QWORD *)&v97 = swift_bridgeObjectRelease(v93).n128_u64[0];
        v96 = 0;
        goto LABEL_47;
      }
      swift_bridgeObjectRelease(v93);
      v75 = 0;
      goto LABEL_37;
    }
    v101 = v46;
    v51 = qword_100804E70;
    v11 = (void (**)(char *, _QWORD, uint64_t, double))*(id *)&a4[(_QWORD)v16];
    if (v51 == -1)
    {
LABEL_18:
      v52 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v53 = sub_10000EFC4(v52, (uint64_t)qword_100865F50);
      v54 = SmallLockupLayout.Metrics.artworkSize.getter(v53);
      v56 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v11, "contentMode"), 0, v54, v55);
      v57 = v102;
      Artwork.style.getter(v56);
      v58 = ArtworkView.style.setter(v57);
      *(_QWORD *)&v59 = Artwork.contentMode.getter(v58).n128_u64[0];
      v61 = ArtworkLoaderConfig.size.getter(objc_msgSend(v11, "setContentMode:", v60, v59));
      v63 = ArtworkView.imageSize.setter(v61, v62);
      v64 = Artwork.backgroundColor.getter(v63);
      if (!v64)
      {
        v65 = sub_100035178();
        v64 = static UIColor.placeholderBackground.getter(v65);
      }
      ArtworkView.backgroundColor.setter(v64);
      v66 = *(id *)&a4[(_QWORD)v16];
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v56, 2, 1, v66, v101, v25);
      swift_release();

      swift_release();
      goto LABEL_21;
    }
LABEL_32:
    swift_once(&qword_100804E70, sub_10020D688);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_10023EA68(__n128 a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  void (*v24)(_QWORD, _QWORD);
  void (*v25)(_QWORD, _QWORD);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;

  v65 = a6;
  v66 = a4;
  v73 = a3;
  v6 = type metadata accessor for LockupMediaLayout.DisplayType(0, a1);
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v8);
  v70 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FloatingPointRoundingRule(0);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  __chkstk_darwin(v10);
  v67 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v71 = *(_QWORD *)(v12 - 8);
  v72 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19.n128_f64[0] = CGSize.subtracting(insets:)(v18);
  v20 = v19.n128_u64[0];
  v22 = v21;
  v23 = Lockup.title.getter(v19);
  v25 = v24;
  v27 = Lockup.subtitle.getter(v26);
  v29 = v28;
  if (Lockup.searchAd.getter(v30))
  {
    v32 = SearchAd.advertisingText.getter(v31);
    v34 = v33;
    swift_release();
  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v17, 1, 1, v35);
  v36 = objc_msgSend(v73, "traitCollection");
  v37.n128_u64[0] = v20;
  sub_100452B44(v23, v25, v27, v29, v32, v34, 0, (uint64_t)v17, v37, v22, 0, v36);

  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v25);
  sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_100825010);
  v38 = (uint64_t)v14;
  v40.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v39);
  if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v40) & 1) == 0 || !sub_100564884())
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v14, v72);
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v41 = type metadata accessor for StaticDimension(0);
  v42 = sub_10000EFC4(v41, (uint64_t)qword_10086A7E8);
  v43 = (uint64_t)v67;
  static Dimensions.defaultRoundingRule.getter(v42);
  AnyDimension.value(in:rounded:)(v73, v43, v41, &protocol witness table for StaticDimension);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v43, v69);
  v45 = MixedMediaLockup.screenshots.getter(v44);
  v46 = v45;
  v47 = (uint64_t)v70;
  if ((unint64_t)v45 >> 62)
  {
    if (v45 >= 0)
      v45 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v45))
      goto LABEL_10;
LABEL_18:
    swift_bridgeObjectRelease(v46);
    v41 = 0;
    goto LABEL_19;
  }
  if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_18;
LABEL_10:
  if ((v46 & 0xC000000000000001) != 0)
  {
    v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
  }
  else
  {
    if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_52;
    }
    v41 = *(_QWORD *)(v46 + 32);
    swift_retain(v41);
  }
  swift_bridgeObjectRelease(v46);
LABEL_19:
  v50 = MixedMediaLockup.trailers.getter(v48);
  v46 = v50;
  if ((unint64_t)v50 >> 62)
  {
    if (v50 >= 0)
      v50 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v50))
    {
LABEL_21:
      if ((v46 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_54;
        }
        v14 = *(char **)(v46 + 32);
        swift_retain(v14);
        goto LABEL_24;
      }
LABEL_52:
      v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
LABEL_24:
      *(_QWORD *)&v51 = swift_bridgeObjectRelease(v46).n128_u64[0];
      goto LABEL_29;
    }
  }
  else if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_21;
  }
  *(_QWORD *)&v51 = swift_bridgeObjectRelease(v46).n128_u64[0];
  v14 = 0;
LABEL_29:
  v52 = objc_msgSend(v73, "traitCollection", v51);
  sub_10023E078(v66, v47);

  v54 = MixedMediaLockup.screenshots.getter(v53);
  v46 = v54;
  if ((unint64_t)v54 >> 62)
  {
    if (v54 >= 0)
      v54 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v54))
    {
LABEL_31:
      if ((v46 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_56;
        }
        v43 = *(_QWORD *)(v46 + 32);
        swift_retain(v43);
        goto LABEL_34;
      }
LABEL_54:
      v43 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
LABEL_34:
      swift_bridgeObjectRelease(v46);
      goto LABEL_39;
    }
  }
  else if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_31;
  }
  swift_bridgeObjectRelease(v46);
  v43 = 0;
LABEL_39:
  v56 = MixedMediaLockup.trailers.getter(v55);
  v46 = v56;
  if (!((unint64_t)v56 >> 62))
  {
    result = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_41;
LABEL_48:
    swift_bridgeObjectRelease(v46);
    v57 = 0;
    goto LABEL_49;
  }
  if (v56 >= 0)
    v56 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v56);
  if (!result)
    goto LABEL_48;
LABEL_41:
  if ((v46 & 0xC000000000000001) != 0)
  {
LABEL_56:
    v57 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
    goto LABEL_44;
  }
  if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v57 = *(_QWORD *)(v46 + 32);
    swift_retain(v57);
LABEL_44:
    swift_bridgeObjectRelease(v46);
LABEL_49:
    type metadata accessor for LockupMediaView(0);
    v58 = v62;
    sub_10048D0D4(v43, v57, v38, v62, v59);
    swift_release();
    v60 = swift_release();
    v60.n128_u64[0] = v20;
    sub_10010BBCC(v41, (uint64_t)v14, v47, v60, v22, v58, (uint64_t)v73, v38);
    swift_release();
    v61 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v63 + 8))(v58, v64, v61);
    sub_100010F2C(v47, (uint64_t *)&unk_100811F20);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v38, v72);
  }
  __break(1u);
  return result;
}

void sub_10023F0CC()
{
  uint64_t v0;
  void *v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  double v18;
  void *v19;
  _QWORD *v20;
  _BYTE v21[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView);
  objc_msgSend(v1, "setHidden:", 0);
  v2 = *(char **)(v0 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView);
  objc_msgSend(v2, "setHidden:", 0);
  v3 = objc_msgSend(v1, "subviews");
  v4 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    else
      v8 = *(id *)(v5 + 8 * v7 + 32);
    v9 = v8;
    ++v7;
    objc_msgSend(v8, "setHidden:", 0);
    objc_msgSend(v9, "setAlpha:", 1.0);

  }
  while (v6 != v7);
LABEL_13:
  v11 = objc_msgSend(v2, "subviews", swift_bridgeObjectRelease_n(v5, 2).n128_f64[0]);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v4);

  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (v13)
      goto LABEL_15;
LABEL_25:
    *(_QWORD *)&v18 = swift_bridgeObjectRelease_n(v12, 2).n128_u64[0];
    v19 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
    objc_msgSend(v19, "setHidden:", 0, v18);
    objc_msgSend(v19, "setUserInteractionEnabled:", 1);
    v20 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter, v21, 1, 0);
    *v20 = 0;
    swift_release();
    return;
  }
  if (v12 < 0)
    v17 = v12;
  else
    v17 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v13)
    goto LABEL_25;
LABEL_15:
  if (v13 >= 1)
  {
    v14 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
      else
        v15 = *(id *)(v12 + 8 * v14 + 32);
      v16 = v15;
      ++v14;
      objc_msgSend(v15, "setHidden:", 0);
      objc_msgSend(v16, "setAlpha:", 1.0);

    }
    while (v13 != v14);
    goto LABEL_25;
  }
LABEL_27:
  __break(1u);
}

_QWORD *sub_10023F390()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = type metadata accessor for SmallLockupLayout.Metrics(0);
  sub_100011980(v0, qword_1008663A8);
  v1 = (_QWORD *)sub_10000EFC4(v0, (uint64_t)qword_1008663A8);
  if (qword_100804E70 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  sub_10000EFC4(v0, (uint64_t)qword_100865F50);
  return Copyable.copyWithOverrides(in:)(v1, sub_1000A07A4, 0, v0, &protocol witness table for SmallLockupLayout.Metrics);
}

char *sub_10023F554(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  objc_class *ObjCClassFromMetadata;
  id v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  __n128 v27;
  double left;
  double bottom;
  double right;
  char *v31;
  char *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;
  objc_super v54;
  objc_super v55;
  objc_super v56;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v5[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_lockupTapBlock];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter] = 0;
  v15 = type metadata accessor for SmallLockupView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v15);
  v17 = objc_allocWithZone(ObjCClassFromMetadata);
  v18 = v5;
  v19 = objc_msgSend(v17, "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView] = v19;
  v20 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView] = v20;

  v56.receiver = v18;
  v56.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v56, "initWithFrame:", a1, a2, a3, a4);
  v22 = OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView;
  v23 = *(char **)&v21[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView];
  swift_unknownObjectWeakAssign(v24);
  v25 = OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView;
  v26 = *(void **)&v21[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
  swift_unknownObjectWeakAssign(v27);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v55.receiver = v21;
  v55.super_class = ObjectType;
  v31 = v21;
  objc_msgSendSuper2(&v55, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v54.receiver = v31;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, "layoutMargins");
  objc_msgSend(v23, "setLayoutMargins:");
  v53.receiver = v31;
  v53.super_class = ObjectType;
  objc_msgSendSuper2(&v53, "layoutMargins");
  objc_msgSend(v26, "setLayoutMargins:");
  objc_msgSend(v31, "setEdgesInsettingLayoutMarginsFromSafeArea:", 0);
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView], "setHidden:", 1);
  v32 = v23;
  sub_10020E5B0(1);

  v51 = v25;
  v33 = *(char **)&v21[v25];
  objc_msgSend(v31, "addSubview:", v33);
  v52 = v22;
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v21[v22]);
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  sub_10023F9E8();
  v34 = *(void **)&v33[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel];
  v35 = qword_1008060C0;
  v36 = v34;
  if (v35 != -1)
    swift_once(&qword_1008060C0, sub_1004C6064);
  v37 = type metadata accessor for FontUseCase(0);
  v38 = sub_10000EFC4(v37, (uint64_t)qword_100869330);
  v39 = *(_QWORD *)(v37 - 8);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  v40(v13, v38, v37);
  v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
  v41(v13, 0, 1, v37);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);

  v42 = qword_1008060C8;
  v43 = *(id *)(*(_QWORD *)&v21[v51] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
  if (v42 != -1)
    swift_once(&qword_1008060C8, sub_1004C607C);
  v44 = sub_10000EFC4(v37, (uint64_t)qword_100869348);
  v40(v13, v44, v37);
  v41(v13, 0, 1, v37);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);

  v45 = v52;
  v46 = *(void **)(*(_QWORD *)&v21[v52] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel);
  v40(v13, v38, v37);
  v41(v13, 0, 1, v37);
  v47 = v46;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);

  v48 = *(void **)(*(_QWORD *)&v21[v45] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
  v40(v13, v44, v37);
  v41(v13, 0, 1, v37);
  v49 = v48;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);

  return v31;
}

id sub_10023F9E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  id v8;
  char v9;
  char *v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t);
  char *v13;
  __n128 v14;
  void (*v15)(char *, _BYTE *, uint64_t, __n128);
  void (*v16)(_BYTE *, uint64_t);
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  char *v23;
  __n128 v24;
  void (*v25)(char *, _BYTE *, uint64_t, __n128);
  void (*v26)(_BYTE *, uint64_t);
  char *v27;
  char *v28;
  __n128 v29;
  _BYTE v31[24];

  v1 = v0;
  v2 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v3 = *(_QWORD **)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = objc_msgSend(v1, "traitCollection", v4);
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");
  v9 = static UIContentSizeCategory.>= infix(_:_:)(v8, UIContentSizeCategoryExtraExtraExtraLarge);

  v10 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView];
  if ((v9 & 1) != 0)
  {
    if (qword_100804A40 != -1)
      swift_once(&qword_100804A40, sub_100118890);
    v11 = sub_10000EFC4(v2, (uint64_t)qword_1008652B0);
    v12 = (void (*)(_BYTE *, uint64_t, uint64_t))v3[2];
    v12(v6, v11, v2);
    v13 = &v10[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
    v14 = swift_beginAccess(&v10[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v31, 33, 0);
    v15 = (void (*)(char *, _BYTE *, uint64_t, __n128))v3[3];
    v15(v13, v6, v2, v14);
    swift_endAccess(v31);
    objc_msgSend(v10, "setNeedsLayout");
    v16 = (void (*)(_BYTE *, uint64_t))v3[1];
    v16(v6, v2);
    objc_msgSend(v10, "setLayoutMargins:", 16.0, 0.0, 16.0, 0.0);
    v17 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
    v12(v6, v11, v2);
    v18 = &v17[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
    v19 = swift_beginAccess(&v17[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v31, 33, 0);
    v15(v18, v6, v2, v19);
    swift_endAccess(v31);
    objc_msgSend(v17, "setNeedsLayout");
    v16(v6, v2);
    return objc_msgSend(v17, "setLayoutMargins:", 16.0, 0.0, 16.0, 0.0);
  }
  else
  {
    if (qword_100804A38 != -1)
      swift_once(&qword_100804A38, sub_1001187EC);
    v21 = sub_10000EFC4(v2, (uint64_t)qword_100865298);
    v22 = (void (*)(_BYTE *, uint64_t, uint64_t))v3[2];
    v22(v6, v21, v2);
    v23 = &v10[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
    v24 = swift_beginAccess(&v10[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v31, 33, 0);
    v25 = (void (*)(char *, _BYTE *, uint64_t, __n128))v3[3];
    v25(v23, v6, v2, v24);
    swift_endAccess(v31);
    objc_msgSend(v10, "setNeedsLayout");
    v26 = (void (*)(_BYTE *, uint64_t))v3[1];
    v26(v6, v2);
    objc_msgSend(v10, "setLayoutMargins:", 4.0, 0.0, 4.0, 0.0);
    v27 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
    v22(v6, v21, v2);
    v28 = &v27[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
    v29 = swift_beginAccess(&v27[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v31, 33, 0);
    v25(v28, v6, v2, v29);
    swift_endAccess(v31);
    objc_msgSend(v27, "setNeedsLayout");
    v26(v6, v2);
    return objc_msgSend(v27, "setLayoutMargins:", 4.0, 0.0, 4.0, 0.0);
  }
}

void sub_100240030(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t j;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;

  if ((a1 & 1) == 0)
  {
    v3 = v2;
    v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView);
    if ((objc_msgSend(v5, "isHidden") & 1) == 0)
    {
      v6 = objc_msgSend(v5, "subviews");
      v7 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      v44 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v8 >> 62)
      {
        if (v8 < 0)
          v16 = v8;
        else
          v16 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v9 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease(v8);
        if (v9)
          goto LABEL_5;
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v9)
        {
LABEL_5:
          if (v9 < 1)
          {
            __break(1u);
            goto LABEL_48;
          }
          for (i = 0; i != v9; ++i)
          {
            if ((v8 & 0xC000000000000001) != 0)
              v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
            else
              v13 = *(id *)(v8 + 8 * i + 32);
            v14 = v13;
            v15 = type metadata accessor for OfferButton();
            if (swift_dynamicCastClass(v14, v15))
            {

            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(0);
              v11 = *(void **)(v44 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
              v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v14);
              specialized ContiguousArray._endMutation()(v12);
            }
          }
          swift_bridgeObjectRelease(v8);
          v8 = v44;
LABEL_20:
          v17 = sub_10000DAF8((uint64_t *)&unk_100808840);
          v18 = swift_allocObject(v17, 40, 7);
          *(_OWORD *)(v18 + 16) = xmmword_100640AE0;
          v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView);
          *(_QWORD *)(v18 + 32) = v9;
          v44 = v18;
          specialized Array._endMutation()(v18);
          v3 = v44;
          if ((a2 & 1) != 0)
          {
            if (!(v44 >> 62))
            {
              v19 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
              v20 = (id)v9;
              swift_bridgeObjectRetain(v44);
              if (v19)
              {
LABEL_23:
                if (v19 >= 1)
                {
                  for (j = 0; j != v19; ++j)
                  {
                    if ((v3 & 0xC000000000000001) != 0)
                      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v3);
                    else
                      v22 = *(id *)(v3 + 8 * j + 32);
                    v23 = v22;
                    objc_msgSend(v22, "setHidden:", 0, v44);

                  }
                  goto LABEL_52;
                }
                __break(1u);
                goto LABEL_61;
              }
LABEL_52:
              swift_bridgeObjectRelease(v3);
              v35 = (void *)objc_opt_self(UIView);
              v36 = swift_allocObject(&unk_1007472F0, 32, 7);
              *(_QWORD *)(v36 + 16) = v8;
              *(_QWORD *)(v36 + 24) = v3;
              v48 = sub_1002424F0;
              v49 = v36;
              v44 = (unint64_t)_NSConcreteStackBlock;
              v45 = 1107296256;
              v46 = sub_1000924A0;
              v47 = &unk_100747308;
              v37 = _Block_copy(&v44);
              v38 = v49;
              swift_retain(v8);
              swift_release(v38);
              v39 = swift_allocObject(&unk_100747340, 24, 7);
              *(_QWORD *)(v39 + 16) = v8;
              v48 = sub_100242534;
              v49 = v39;
              v44 = (unint64_t)_NSConcreteStackBlock;
              v45 = 1107296256;
              v46 = sub_10004A774;
              v47 = &unk_100747358;
              v40 = _Block_copy(&v44);
              swift_release(v49);
              objc_msgSend(v35, "animateWithDuration:delay:options:animations:completion:", 4, v37, v40, 0.33, 0.0);
              _Block_release(v40);
              _Block_release(v37);
              return;
            }
LABEL_48:
            if (v3 < 0)
              v33 = v3;
            else
              v33 = v3 & 0xFFFFFFFFFFFFFF8;
            v34 = (id)v9;
            swift_bridgeObjectRetain(v3);
            v19 = _CocoaArrayWrapper.endIndex.getter(v33);
            if (v19)
              goto LABEL_23;
            goto LABEL_52;
          }
          if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
          {
            v41 = (id)v9;
            swift_retain(v8);
            v24 = _CocoaArrayWrapper.endIndex.getter(v42);
          }
          else
          {
            v24 = *(_QWORD *)(v8 + 16);
            v25 = (id)v9;
            swift_retain(v8);
          }
          if (v24)
          {
            if (v24 < 1)
            {
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
            v26 = 0;
            do
            {
              if ((v8 & 0xC000000000000001) != 0)
                v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v8);
              else
                v27 = *(id *)(v8 + 8 * v26 + 32);
              v28 = v27;
              ++v26;
              objc_msgSend(v27, "setAlpha:", 0.0, v44);
              objc_msgSend(v28, "setHidden:", 1);

            }
            while (v24 != v26);
          }
          swift_release_n(v8, 2);
          if ((unint64_t)v3 >> 62)
          {
            if (v3 < 0)
              v43 = v3;
            else
              v43 = v3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v3);
            v29 = _CocoaArrayWrapper.endIndex.getter(v43);
            if (v29)
              goto LABEL_41;
          }
          else
          {
            v29 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v3);
            if (v29)
            {
LABEL_41:
              if (v29 < 1)
              {
LABEL_62:
                __break(1u);
                return;
              }
              v30 = 0;
              do
              {
                if ((v3 & 0xC000000000000001) != 0)
                  v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v3);
                else
                  v31 = *(id *)(v3 + 8 * v30 + 32);
                v32 = v31;
                ++v30;
                objc_msgSend(v31, "setAlpha:", 1.0, v44);
                objc_msgSend(v32, "setHidden:", 0);

              }
              while (v29 != v30);
            }
          }
          swift_bridgeObjectRelease_n(v3, 2);
          return;
        }
      }
      swift_bridgeObjectRelease(v8);
      v8 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_20;
    }
  }
}

uint64_t sub_10024055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  id v12;
  void *v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v9);
    v4 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v7 = *(id *)(a1 + 8 * i + 32);
    v8 = v7;
    objc_msgSend(v7, "setAlpha:", 0.0);

  }
LABEL_13:
  swift_bridgeObjectRelease(a1);
  if (!((unint64_t)a2 >> 62))
  {
    v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a2);
    if (v10)
      goto LABEL_15;
    return swift_bridgeObjectRelease(a2);
  }
  if (a2 < 0)
    v14 = a2;
  else
    v14 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease(a2);
LABEL_15:
  if (v10 >= 1)
  {
    for (j = 0; j != v10; ++j)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, a2);
      else
        v12 = *(id *)(a2 + 8 * j + 32);
      v13 = v12;
      objc_msgSend(v12, "setAlpha:", 1.0);

    }
    return swift_bridgeObjectRelease(a2);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002406D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  if (!((unint64_t)a2 >> 62))
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a2);
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a2);
  }
  if (a2 < 0)
    v8 = a2;
  else
    v8 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(a2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      else
        v6 = *(id *)(a2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setHidden:", 1);

    }
    return swift_bridgeObjectRelease(a2);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SubscriptionLockupView()
{
  return objc_opt_self(_TtC20ProductPageExtension22SubscriptionLockupView);
}

double sub_100240820(double a1, double a2, uint64_t a3, objc_class *a4)
{
  void **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  double v15;
  objc_super v17;

  v8 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v4;
  if (qword_100804E70 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  v13 = sub_10000EFC4(v8, (uint64_t)qword_100865F50);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  v17.receiver = v12;
  v17.super_class = a4;
  objc_msgSendSuper2(&v17, "layoutMargins");
  v14 = objc_msgSend(v12, "traitCollection");
  v15 = sub_10020FBC4((uint64_t)v11, (uint64_t)v14, a1, a2);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v15;
}

uint64_t sub_100240974()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1002409BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_100240A0C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100240A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  __n128 v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;

  v82 = a4;
  v83 = a3;
  v84 = a2;
  v6 = sub_10000DAF8(&qword_100818E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v76 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v80 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v13);
  v78 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v21);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v24);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for InAppPurchaseLockup(0);
  v28 = swift_dynamicCastClass(a1, v27);
  v85 = v4;
  if (v28)
  {
    v29 = v28;
    v30 = *(char **)&v4[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView];
    v31 = type metadata accessor for OfferStyle(0);
    v81 = v10;
    v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
    v71 = v31;
    v70(v26, 1, 1, v31);
    v32 = type metadata accessor for OfferEnvironment(0);
    v75 = v8;
    v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v69 = v32;
    v68(v23, 1, 1, v32);
    v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v67(v20, 1, 1, v10);
    v33 = a1;
    v34 = type metadata accessor for OfferTint(0);
    v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
    v66(v17, 1, 1, v34);
    swift_retain(v33);
    v72 = v29;
    v35 = v29;
    v36 = v83;
    sub_10040A58C(v35, v30, v84, v83, 1, 0, (uint64_t)v26, (uint64_t)v23, (uint64_t)v17, (uint64_t)v20);
    sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_100815D70);
    v30[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    v73 = v30;
    v74 = v11;
    sub_10020F298();
    objc_msgSend(v30, "setNeedsLayout");
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_10080A0D0);
    sub_100010F2C((uint64_t)v23, (uint64_t *)&unk_10080A0E0);
    v37 = sub_100010F2C((uint64_t)v26, &qword_100815D80);
    v38 = v36;
    v39 = *(char **)&v85[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
    v41 = InAppPurchaseLockup.parent.getter(v37, v40);
    v70(v26, 1, 1, v71);
    v68(v23, 1, 1, v69);
    v67(v20, 1, 1, v81);
    v66(v17, 1, 1, v34);
    sub_10040A58C(v41, v39, v84, v38, 0, 0, (uint64_t)v26, (uint64_t)v23, (uint64_t)v17, (uint64_t)v20);
    sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_100815D70);
    v39[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    sub_10020F298();
    objc_msgSend(v39, "setNeedsLayout");
    swift_release(v41);
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_10080A0D0);
    sub_100010F2C((uint64_t)v23, (uint64_t *)&unk_10080A0E0);
    sub_100010F2C((uint64_t)v26, &qword_100815D80);
    v42 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton;
    v43 = *(void **)&v39[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
    objc_msgSend(v43, "setAlpha:", 0.0);
    objc_msgSend(v43, "setUserInteractionEnabled:", 0);
    objc_msgSend(v39, "setHidden:", 1);
    v45 = Lockup.icon.getter(v44);
    swift_release(v45);
    sub_10020E5B0(v45 != 0);
    v46 = *(void **)&v39[v42];
    swift_retain(v33);
    v47 = v46;
    v48 = Lockup.offerDisplayProperties.getter(v47);
    swift_release(v33);
    v49 = swift_retain(v33);
    v50 = Lockup.buttonAction.getter(v49);
    swift_release(v33);
    v51 = sub_10000DAF8(&qword_10080B190);
    v52 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v78, 1, 1, v51);
    v53 = v76;
    v54 = v77;
    v55 = v79;
    (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v77, enum case for OfferButtonSubtitlePosition.below(_:), v79);
    v56 = v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v75, 1, 1, v55);
    v57 = sub_10000E720((unint64_t *)&qword_10080B180, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
    v58 = (uint64_t)v80;
    AccessibilityConditional.init(value:axValue:)(v54, v56, v55, v57);
    v59 = v83;
    sub_1001B1C4C(v48, v50, 0, v52, v58, v83, 0, 0);

    swift_release(v50);
    v60 = swift_release(v48);
    (*(void (**)(uint64_t, uint64_t, __n128))(v74 + 8))(v58, v81, v60);
    sub_100010F2C(v52, (uint64_t *)&unk_10080A0F0);
    sub_100242280(v33, v85, v59);
    swift_release(v33);
  }
  else
  {
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView], "setHidden:", 1);
    v61 = *(char **)&v85[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
    v62 = type metadata accessor for OfferStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v26, 1, 1, v62);
    v63 = type metadata accessor for OfferEnvironment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v23, 1, 1, v63);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v20, 1, 1, v10);
    v64 = type metadata accessor for OfferTint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v17, 1, 1, v64);
    sub_10040A58C(a1, v61, v84, v83, 0, 0, (uint64_t)v26, (uint64_t)v23, (uint64_t)v17, (uint64_t)v20);
    sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_100815D70);
    v61[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    sub_10020F298();
    objc_msgSend(v61, "setNeedsLayout");
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_10080A0D0);
    sub_100010F2C((uint64_t)v23, (uint64_t *)&unk_10080A0E0);
    sub_100010F2C((uint64_t)v26, &qword_100815D80);
  }
  sub_100241220((uint64_t)v85, v82);
}

void sub_100241220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void (*v25)(_QWORD, __n128);
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  id v28;
  int v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  void (*v38)(char *, uint64_t);
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(uint64_t, _QWORD, uint64_t);
  unsigned int v60;
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v4 = type metadata accessor for MediaOverlayStyle(0);
  v5 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100816B80);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - v11;
  v13 = sub_10000DAF8(&qword_100816B88);
  __chkstk_darwin(v13);
  v66 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v62 = (char *)&v56 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v56 - v22;
  v64 = a1;
  v24 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView)
                 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
  v25 = (void (*)(_QWORD, __n128))v5[13];
  v60 = enum case for MediaOverlayStyle.dark(_:);
  v59 = (void (*)(uint64_t, _QWORD, uint64_t))v25;
  v25((char *)&v56 - v22, v21);
  v61 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v5[7];
  v61(v23, 0, 1, v4);
  v63 = v7;
  v26 = (uint64_t)&v12[*(int *)(v7 + 48)];
  v65 = a2;
  sub_10024253C(a2, (uint64_t)v12);
  sub_10024253C((uint64_t)v23, v26);
  v67 = v5;
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5[6];
  if (v27((uint64_t)v12, 1, v4) == 1)
  {
    v28 = v24;
    sub_100010F2C((uint64_t)v23, &qword_100816B88);
    v29 = v27(v26, 1, v4);
    v30 = (uint64_t)v62;
    if (v29 == 1)
    {
      sub_100010F2C((uint64_t)v12, &qword_100816B88);
LABEL_8:
      v39 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_10024253C((uint64_t)v12, (uint64_t)v19);
  if (v27(v26, 1, v4) == 1)
  {
    v31 = v24;
    sub_100010F2C((uint64_t)v23, &qword_100816B88);
    ((void (*)(char *, uint64_t))v67[1])(v19, v4);
    v30 = (uint64_t)v62;
LABEL_6:
    sub_100010F2C((uint64_t)v12, &qword_100816B80);
    goto LABEL_9;
  }
  v32 = v67;
  v33 = v58;
  ((void (*)(char *, uint64_t, uint64_t))v67[4])(v58, v26, v4);
  v34 = sub_10000E720((unint64_t *)&unk_100819C10, (uint64_t (*)(uint64_t))&type metadata accessor for MediaOverlayStyle, (uint64_t)&protocol conformance descriptor for MediaOverlayStyle);
  v57 = v9;
  v35 = v34;
  v36 = v24;
  v37 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v33, v4, v35);
  v38 = (void (*)(char *, uint64_t))v32[1];
  v38(v33, v4);
  sub_100010F2C((uint64_t)v23, &qword_100816B88);
  v38(v19, v4);
  v9 = v57;
  sub_100010F2C((uint64_t)v12, &qword_100816B88);
  v30 = (uint64_t)v62;
  if ((v37 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v40 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v39 = (id)static UIColor.appTint.getter(v40);
LABEL_10:
  v41 = v39;
  objc_msgSend(v24, "setTintColor:", v39);

  v42 = *(void **)(*(_QWORD *)(v64 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView)
                 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
  v59(v30, v60, v4);
  v61((char *)v30, 0, 1, v4);
  v43 = (uint64_t)&v9[*(int *)(v63 + 48)];
  sub_10024253C(v65, (uint64_t)v9);
  sub_10024253C(v30, v43);
  if (v27((uint64_t)v9, 1, v4) != 1)
  {
    sub_10024253C((uint64_t)v9, v66);
    if (v27(v43, 1, v4) != 1)
    {
      v46 = v67;
      v47 = v58;
      ((void (*)(char *, uint64_t, uint64_t))v67[4])(v58, v43, v4);
      v48 = sub_10000E720((unint64_t *)&unk_100819C10, (uint64_t (*)(uint64_t))&type metadata accessor for MediaOverlayStyle, (uint64_t)&protocol conformance descriptor for MediaOverlayStyle);
      v49 = v42;
      v50 = v66;
      v51 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v47, v4, v48);
      v52 = (void (*)(char *, uint64_t))v46[1];
      v52(v47, v4);
      sub_100010F2C(v30, &qword_100816B88);
      v52((char *)v50, v4);
      sub_100010F2C((uint64_t)v9, &qword_100816B88);
      if ((v51 & 1) != 0)
        goto LABEL_17;
LABEL_18:
      v54 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v53 = (id)static UIColor.appTint.getter(v54);
      goto LABEL_19;
    }
    v45 = v42;
    sub_100010F2C(v30, &qword_100816B88);
    ((void (*)(uint64_t, uint64_t))v67[1])(v66, v4);
LABEL_15:
    sub_100010F2C((uint64_t)v9, &qword_100816B80);
    goto LABEL_18;
  }
  v44 = v42;
  sub_100010F2C(v30, &qword_100816B88);
  if (v27(v43, 1, v4) != 1)
    goto LABEL_15;
  sub_100010F2C((uint64_t)v9, &qword_100816B88);
LABEL_17:
  v53 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
LABEL_19:
  v55 = v53;
  objc_msgSend(v42, "setTintColor:", v53);

}

void sub_100241810(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id *v48;
  id v49;
  id v50;
  char *v51;
  uint64_t v52;
  id v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id *v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void **v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  double v78;
  double v79;
  double v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id *v87;
  id v88;
  id v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  double v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id *v100;
  id v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  double v118;
  double v119;
  double v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id *v129;
  id v130;
  char *v131;
  uint64_t v132;
  id v133;
  double v134;
  double v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id *v139;
  id v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char v158[24];
  _BYTE v159[24];

  v6 = v5;
  v157 = a2;
  v11 = type metadata accessor for Artwork.Style(0, a2);
  v12 = __chkstk_darwin(v11);
  v155 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v12);
  v154 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for InAppPurchaseLockup(0);
  v22 = swift_dynamicCastClass(a1, v21);
  if (v22)
  {
    v24 = v22;
    v156 = a1;
    v153 = v6;
    v25 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView);
    v26 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon;
    v27 = *(void **)(v25 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon);
    if (v27)
    {
      v28 = v14;
      v29 = v27;
      swift_retain(v156);
      sub_1005C0404(a4, a5, v24, (uint64_t)v27, v157, a3);

      v14 = v28;
    }
    else
    {
      v70 = swift_retain(v156);
      v72 = InAppPurchaseLockup.parent.getter(v71, v70);
      v74 = Lockup.icon.getter(v73);
      v31 = swift_release(v72);
      if (v74)
      {
        v75 = v25 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
        v76 = swift_beginAccess(v25 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics, v158, 0, 0);
        v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, v75, v17, v76);
        v78 = SmallLockupLayout.Metrics.artworkSize.getter(v77);
        v80 = v79;
        v81.n128_f64[0] = (*(double (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        v82 = Artwork.crop.getter(v81);
        v83 = Artwork.Crop.preferredContentMode.getter(v82);
        v150 = *(void (**)(char *, uint64_t))(v154 + 8);
        v150(v16, v14);
        v84 = v83;
        v85 = v74;
        v151 = Artwork.config(_:mode:prefersLayeredImage:)(v84, 0, v78, v80);
        v86 = *(_QWORD *)(v25 + v26);
        if (v86)
          v87 = (id *)(v86 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
        else
          v87 = (id *)(v25 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
        v88 = *v87;
        v152 = v14;
        v89 = v88;
        v90 = v155;
        Artwork.style.getter(v88);
        v91 = v90;
        v92 = v85;
        v93 = ArtworkView.style.setter(v91);
        v94 = objc_msgSend(v89, "setContentMode:", Artwork.contentMode.getter(v93));
        v95 = ArtworkLoaderConfig.size.getter(v94);
        v97 = ArtworkView.imageSize.setter(v95, v96);
        v98 = Artwork.backgroundColor.getter(v97);
        if (!v98)
        {
          sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
          v98 = static UIColor.placeholderBackground.getter();
        }
        ArtworkView.backgroundColor.setter(v98);

        v99 = *(_QWORD *)(v25 + v26);
        if (v99)
          v100 = (id *)(v99 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
        else
          v100 = (id *)(v25 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
        v101 = *v100;
        v103 = Artwork.crop.getter(v102);
        v104 = Artwork.Crop.preferredContentMode.getter(v103);
        v149 = v92;
        v105 = v152;
        v150(v16, v152);
        objc_msgSend(v101, "setContentMode:", v104);

        v106 = *(void **)(v25 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
        v107 = type metadata accessor for ArtworkView(0);
        v108 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        v109 = v106;
        v110 = v151;
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v151, 2, 1, v109, v107, v108);
        swift_release(v149);
        swift_release(v110);

        v14 = v105;
      }
    }
    v111 = InAppPurchaseLockup.parent.getter(v30, v31);
    v113 = Lockup.icon.getter(v112);
    swift_release(v111);
    if (v113)
    {
      v114 = *(_QWORD *)(v153 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView);
      v115 = v114 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
      v116 = swift_beginAccess(v114 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics, v159, 0, 0);
      v117 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, v115, v17, v116);
      v118 = SmallLockupLayout.Metrics.artworkSize.getter(v117);
      v120 = v119;
      v121.n128_f64[0] = (*(double (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      v122 = Artwork.crop.getter(v121);
      v123 = Artwork.Crop.preferredContentMode.getter(v122);
      v124 = *(void (**)(char *, uint64_t))(v154 + 8);
      v124(v16, v14);
      v125 = Artwork.config(_:mode:prefersLayeredImage:)(v123, 0, v118, v120);
      v126 = v14;
      v127 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon;
      v128 = *(_QWORD *)(v114 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon);
      if (v128)
        v129 = (id *)(v128 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
      else
        v129 = (id *)(v114 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v130 = *v129;
      v131 = v155;
      Artwork.style.getter(v130);
      v132 = ArtworkView.style.setter(v131);
      v133 = objc_msgSend(v130, "setContentMode:", Artwork.contentMode.getter(v132));
      v134 = ArtworkLoaderConfig.size.getter(v133);
      v136 = ArtworkView.imageSize.setter(v134, v135);
      v137 = Artwork.backgroundColor.getter(v136);
      if (!v137)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v137 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v137);

      v138 = *(_QWORD *)(v114 + v127);
      if (v138)
        v139 = (id *)(v138 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
      else
        v139 = (id *)(v114 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v140 = *v139;
      v142 = Artwork.crop.getter(v141);
      v143 = Artwork.Crop.preferredContentMode.getter(v142);
      v124(v16, v126);
      objc_msgSend(v140, "setContentMode:", v143);

      v144 = *(void **)(v114 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v145 = type metadata accessor for ArtworkView(0);
      v146 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v147 = v144;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v125, 2, 1, v147, v145, v146);
      swift_release(v113);
      swift_release(v125);

    }
    swift_release(v156);
  }
  else
  {
    v32 = Lockup.icon.getter(v23);
    if (v32)
    {
      v33 = v32;
      v34 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView);
      v35 = v34 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
      v36 = swift_beginAccess(v34 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics, v159, 0, 0);
      v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, v35, v17, v36);
      v38 = SmallLockupLayout.Metrics.artworkSize.getter(v37);
      v40 = v39;
      v41.n128_f64[0] = (*(double (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      v42 = Artwork.crop.getter(v41);
      v43 = Artwork.Crop.preferredContentMode.getter(v42);
      v44 = *(void (**)(char *, uint64_t))(v154 + 8);
      v44(v16, v14);
      v45 = Artwork.config(_:mode:prefersLayeredImage:)(v43, 0, v38, v40);
      v46 = OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon;
      v47 = *(_QWORD *)(v34 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon);
      if (v47)
        v48 = (id *)(v47 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
      else
        v48 = (id *)(v34 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v49 = *v48;
      v152 = v14;
      v50 = v49;
      v51 = v155;
      Artwork.style.getter(v49);
      v52 = ArtworkView.style.setter(v51);
      v53 = objc_msgSend(v50, "setContentMode:", Artwork.contentMode.getter(v52));
      v54 = ArtworkLoaderConfig.size.getter(v53);
      v56 = ArtworkView.imageSize.setter(v54, v55);
      v57 = Artwork.backgroundColor.getter(v56);
      if (!v57)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v57 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v57);

      v58 = *(_QWORD *)(v34 + v46);
      if (v58)
        v59 = (id *)(v58 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
      else
        v59 = (id *)(v34 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v60 = *v59;
      v62 = Artwork.crop.getter(v61);
      v63 = Artwork.Crop.preferredContentMode.getter(v62);
      v44(v16, v152);
      objc_msgSend(v60, "setContentMode:", v63);

      v64 = *(_QWORD *)(v34 + v46);
      if (v64)
        v65 = (void **)(v64 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
      else
        v65 = (void **)(v34 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v66 = *v65;
      v67 = type metadata accessor for ArtworkView(0);
      v68 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v69 = v66;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v45, 2, 1, v69, v67, v68);
      swift_release(v33);
      swift_release(v45);

    }
  }
}

void sub_100242110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView);
  v5 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v6 = type metadata accessor for ArtworkView(0);
  v7 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v8 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, a2, v6, v7);

  v9 = objc_retain(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView)
                         + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView));
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v9, a2, v6, v7);

  v10 = *(char **)(v4 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_inAppPurchaseIcon);
  if (v10)
  {
    v11 = *(void **)&v10[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_tileIconArtworkView];
    v12 = v10;
    v13 = v11;
    v14 = a2 & 1;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v13, v14, v6, v7);

    v15 = *(id *)&v12[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView];
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v15, v14, v6, v7);

  }
}

void sub_100242280(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char **v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[24];

  v6 = type metadata accessor for AdamId(0);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for InAppPurchaseLockup(0);
  if (!swift_dynamicCastClass(a1, v9))
    goto LABEL_8;
  swift_retain(a1);
  v11 = Lockup.offerDisplayProperties.getter(v10);
  if (!v11
    || (v12 = v11, v13 = OfferDisplayProperties.subscriptionFamilyId.getter(), v15 = v14, swift_release(v12), !v15))
  {
    swift_release(a1);
LABEL_8:
    v26 = &a2[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter];
    swift_beginAccess(&a2[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter], v30, 1, 0);
    v27 = *(_QWORD *)v26;
    *(_QWORD *)v26 = 0;
    swift_release(v27);
    sub_100240030(0, 0);
    return;
  }
  type metadata accessor for StreamlinedInAppPurchaseOfferButtonPresenter(0);
  v16 = static StreamlinedInAppPurchaseOfferButtonPresenter.activeStateDataSource.getter();
  if (!v16)
  {
    swift_release(a1);
    swift_bridgeObjectRelease(v15);
    goto LABEL_8;
  }
  v17 = v16;
  v18 = swift_retain(a1);
  Lockup.adamId.getter(v18);
  swift_release(a1);
  v19 = *(_QWORD *)(a3 + qword_10086B3C8);
  if (v19)
  {
    v20 = *(_QWORD *)(a3 + qword_10086B3C8 + 8);
    v21 = type metadata accessor for SubscriptionLockupPresenter(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    swift_retain(v17);
    swift_unknownObjectRetain(v19);
    v22 = a2;
    v23 = SubscriptionLockupPresenter.init(subscriptionFamilyId:iapAdamId:view:iapDataSource:appStateController:)(v13, v15, (uint64_t)v8, (uint64_t)a2, (uint64_t)&off_1007472B8, v17, v19, v20);
    v24 = (char **)&v22[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter];
    swift_beginAccess(&v22[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_subscriptionLockupPresenter], v30, 1, 0);
    v25 = *v24;
    *v24 = v23;
    swift_release(a1);
    swift_release(v17);
    swift_release(v25);
  }
  else
  {
    v28 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
    swift_retain(v17);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v28, v28);
    __break(1u);
  }
}

uint64_t sub_1002424C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002424F0()
{
  uint64_t v0;

  return sub_10024055C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002424F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100242508(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100242510()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100242534(uint64_t a1)
{
  uint64_t v1;

  return sub_1002406D8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10024253C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100816B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10024258C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  _BYTE v17[24];

  v1 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  if (!Strong)
    return 0;
  v9 = Strong;
  v10 = objc_msgSend(Strong, "collectionView");
  v11 = v0 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath;
  swift_beginAccess(v11, v17, 0, 0);
  sub_1000BBDA0(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {

    sub_100010F2C((uint64_t)v3, (uint64_t *)&unk_1008102F0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return 0;
  }
  v12 = v10;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

void sub_100242754(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  v4 = 0;
  if (!Strong)
    goto LABEL_6;
  v5 = (void *)Strong;
  v6 = sub_10024258C();
  if (!v6)
  {

LABEL_6:
    v14 = 1;
    v15 = 0;
    v16 = 0;
    v17 = 0;
LABEL_13:
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v15;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v17;
    *(_BYTE *)(a1 + 32) = v14;
    return;
  }
  v7 = v6;
  v8 = objc_msgSend(v5, "collectionView");
  v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, "transform");
    v10 = v30;
    v24 = v29;
    v26 = v28;
    v12 = v31;
    v11 = v32;
    v13 = v33;
    v28 = 0x3FF0000000000000;
    v29 = 0;
    v30 = 0;
    v31 = 0x3FF0000000000000;
    v32 = 0;
    v33 = 0;
    objc_msgSend(v9, "setTransform:", &v28);
  }
  else
  {
    v24 = 0;
    v26 = 0;
    v10 = 0;
    v12 = 0;
    v11 = 0;
    v13 = 0;
  }
  v18 = objc_msgSend(v5, "view", v24, v26);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v7, "frame");
    objc_msgSend(v19, "convertRect:fromView:", v9);
    v4 = v20;
    v15 = v21;
    v16 = v22;
    v17 = v23;

    if (v9)
    {
      v28 = v27;
      v29 = v25;
      v30 = v10;
      v31 = v12;
      v32 = v11;
      v33 = v13;
      objc_msgSend(v9, "setTransform:", &v28);

    }
    else
    {
      v9 = v5;
    }

    v14 = 0;
    goto LABEL_13;
  }
  __break(1u);
}

void sub_100242918(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[8];

  v3 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1+ OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  if (!Strong)
    goto LABEL_8;
  v11 = Strong;
  v12 = objc_msgSend(Strong, "collectionView");
  v13 = v1 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath;
  swift_beginAccess(v13, v42, 0, 0);
  sub_1000BBDA0(v13, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_100010F2C((uint64_t)v5, (uint64_t *)&unk_1008102F0);
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    goto LABEL_8;
  }
  v14 = v12;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v14, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v16)
  {
LABEL_8:
    v25 = *(_OWORD *)&CATransform3DIdentity.m11;
    v24 = *(_OWORD *)&CATransform3DIdentity.m13;
    v23 = *(_OWORD *)&CATransform3DIdentity.m21;
    v22 = *(_OWORD *)&CATransform3DIdentity.m23;
    v21 = *(_OWORD *)&CATransform3DIdentity.m31;
    v20 = *(_OWORD *)&CATransform3DIdentity.m33;
    v19 = *(_OWORD *)&CATransform3DIdentity.m41;
    v18 = *(_OWORD *)&CATransform3DIdentity.m43;
    goto LABEL_9;
  }
  v17 = objc_msgSend(v16, "layer");
  objc_msgSend(v17, "transform");
  v33 = v34;
  v32 = v35;
  v31 = v36;
  v30 = v37;
  v29 = v38;
  v28 = v39;
  v27 = v40;
  v26 = v41;

  v18 = v26;
  v19 = v27;
  v20 = v28;
  v21 = v29;
  v22 = v30;
  v23 = v31;
  v24 = v32;
  v25 = v33;
LABEL_9:
  *a1 = v25;
  a1[1] = v24;
  a1[2] = v23;
  a1[3] = v22;
  a1[4] = v21;
  a1[5] = v20;
  a1[6] = v19;
  a1[7] = v18;
}

id sub_100242BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  id v21;
  _BYTE v24[24];

  v1 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v1);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  if (!Strong)
    return 0;
  v9 = Strong;
  v10 = objc_msgSend(Strong, "collectionView");
  v11 = v0 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath;
  swift_beginAccess(v11, v24, 0, 0);
  sub_1000BBDA0(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {

    sub_100010F2C((uint64_t)v3, (uint64_t *)&unk_1008102F0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return 0;
  }
  v12 = v10;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v14)
    return 0;
  ObjectType = swift_getObjectType();
  v16 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TodayCardCollectionViewCell);
  if (v16)
    v17 = v16;
  else
    v17 = 0;
  if (v16)
    v18 = v14;
  else
    v18 = 0;
  if (v18)
  {
    v19 = swift_getObjectType();
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 280);
    v14 = v14;
    v21 = (id)v20(v19, v17);

  }
  else
  {
    v21 = objc_msgSend(v14, "snapshotViewAfterScreenUpdates:", 0);
  }

  return v21;
}

id sub_100242E20(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  BOOL IsReduceMotionEnabled;
  uint64_t ObjectType;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t Strong;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id result;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  __n128 v80;
  __n128 v81;
  char v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  id v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  id v104;
  id v105;
  _QWORD v106[5];
  _QWORD v107[4];
  char v108;

  v4 = v3;
  v105 = a2;
  v7 = sub_10000DAF8(&qword_100816BE8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for PageGrid(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (id *)((char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v93 - v16;
  v18 = sub_10000DAF8(&qword_1008081F0);
  __chkstk_darwin(v18);
  v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ItemLayoutContext(0);
  v21 = *(_QWORD *)(v103 - 8);
  v22 = __chkstk_darwin(v103);
  v102 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = a1;
  sub_1002457C0(a1, v22);
  if (!v24)
    return 0;
  v27 = v24;
  v98 = v10;
  v101 = v8;
  v99 = v7;
  v28 = v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController + 8) = v25;
  swift_unknownObjectWeakAssign(v26);
  IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  v100 = OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_shouldUseReducedMotionTransition;
  *(_BYTE *)(v4
           + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_shouldUseReducedMotionTransition) = IsReduceMotionEnabled;
  ObjectType = swift_getObjectType();
  v31 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ArticlePresentingViewController);
  if (v31)
    v33 = v31;
  else
    v33 = 0;
  if (v31)
    v34 = a3;
  else
    v34 = 0;
  if (!v34)
    goto LABEL_11;
  v94 = v27;
  v35 = a3;
  sub_100281360((uint64_t)v20);
  v36 = v103;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v103) == 1)
  {

    sub_100010F2C((uint64_t)v20, &qword_1008081F0);
    v27 = v94;
LABEL_11:
    *(_QWORD *)(v4
              + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController
              + 8) = 0;
    swift_unknownObjectWeakAssign(v32);
    v37 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v14, 1, 1, v37);
    v38 = v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath;
    swift_beginAccess(v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath, v106, 33, 0);
    sub_100125F10((uint64_t)v14, v38);
    swift_endAccess(v106);
    Strong = swift_unknownObjectWeakLoadStrong(v28);
    v40 = v100;
    v41 = v101;
    if (Strong)
    {
      v42 = Strong;
      v43 = *(_BYTE *)(Strong + qword_100864BF0);
      *(_BYTE *)(v42 + qword_100864BF0) = 0;
      sub_1000978CC(v43);
      swift_unknownObjectRelease();
    }
    goto LABEL_38;
  }
  v93 = v35;
  v45 = v102;
  v46.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v21 + 32))(v102, v20, v36);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController + 8) = v33;
  swift_unknownObjectWeakAssign(v46);
  v40 = v100;
  if ((*(_BYTE *)(v4 + v100) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v45, v36);

    v41 = v101;
LABEL_37:
    v27 = v94;
    goto LABEL_38;
  }
  v47 = objc_msgSend(v34, "collectionView");
  v41 = v101;
  if (v47
    && (v48 = v47,
        v49 = objc_msgSend(v47, "indexPathsForSelectedItems"),
        v48,
        v49))
  {
    v50 = type metadata accessor for IndexPath(0);
    v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

    v52 = *(_QWORD *)(v50 - 8);
    if (*(_QWORD *)(v51 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v17, v51 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80)), v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v17, 0, 1, v50);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v17, 1, 1, v50);
    }
    swift_bridgeObjectRelease(v51);
    v40 = v100;
  }
  else
  {
    v53 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v17, 1, 1, v53);
  }
  v54 = v102;
  v55 = v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath;
  swift_beginAccess(v4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_selectedIndexPath, v106, 33, 0);
  sub_100125F10((uint64_t)v17, v55);
  swift_endAccess(v106);
  v56 = type metadata accessor for TodayCard(0);
  v57 = sub_100245B64();
  ItemLayoutContext.typedModel<A>(as:)(v106, v56, v56, v57);
  v58 = v106[0];
  if (!v106[0])
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v54, v103);

    goto LABEL_37;
  }
  v59 = sub_100242BDC();
  v60 = v103;
  v61 = v93;
  if (!v59)
  {
LABEL_36:

    v81 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v102, v60, v81);
    goto LABEL_37;
  }
  v62 = v59;
  v63 = swift_getObjectType();
  v64 = swift_conformsToProtocol2(v63, &protocol descriptor for TodayCardCollectionViewCell);
  if (v64)
    v65 = v64;
  else
    v65 = 0;
  if (v64)
    v66 = v62;
  else
    v66 = 0;
  if (!v66)
  {

    v41 = v101;
    goto LABEL_36;
  }
  result = objc_msgSend(v34, "view");
  if (result)
  {
    v68 = result;
    v69 = swift_getObjectType();
    objc_msgSend(v68, "safeAreaInsets");
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v77 = v76;

    v107[0] = v71;
    v107[1] = v73;
    v107[2] = v75;
    v107[3] = v77;
    v108 = 0;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v65 + 224))(v107, v69, v65);
    swift_getKeyPath(&unk_100653CC8);
    v78 = v95;
    ItemLayoutContext.subscript.getter(v95);
    swift_release();
    v79 = v66;
    v27 = v94;
    sub_10009B738(v58, v79, v65, (uint64_t)v78);

    v80 = swift_release();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v96 + 8))(v78, v97, v80);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v102, v103);
    v41 = v101;
LABEL_38:
    v82 = *(_BYTE *)(v4 + v40);
    v83 = objc_allocWithZone((Class)type metadata accessor for ArticlePagePresentationController());
    v84 = v105;
    v85 = v105;
    sub_100377330(v104, v84, v82);
    v44 = v86;
    *(_QWORD *)(v86
              + OBJC_IVAR____TtC20ProductPageExtension33ArticlePagePresentationController_transitioningViewProvider
              + 8) = &off_1007473A0;
    swift_unknownObjectWeakAssign(v87);
    v88 = *(_QWORD *)(v27 + qword_100864BF8);
    v89 = swift_allocObject(&unk_100747460, 24, 7);
    swift_unknownObjectWeakInit(v89 + 16);
    v90 = sub_10000DAF8(&qword_10080CB40);
    v91 = sub_100245B18();
    swift_retain(v88);
    dispatch thunk of static EventEmitter.defaultScheduler.getter(v106, v90, v91);
    v92 = v98;
    EventEmitter.addObserver(on:singleUse:_:)(v106, 0, sub_100245B10, v89, v90, v91);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v106);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v92, v99);
    swift_unknownObjectRelease();
    swift_release();
    return (id)v44;
  }
  __break(1u);
  return result;
}

void sub_10024363C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  _OWORD v32[8];
  _OWORD v33[8];

  if (*(_BYTE *)(a3
                + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_shouldUseReducedMotionTransition) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
    if (Strong)
    {
      v5 = Strong;
      v6 = *(_BYTE *)(Strong + qword_100864BF0);
      *(_BYTE *)(v5 + qword_100864BF0) = 0;
      sub_1000978CC(v6);
      swift_unknownObjectRelease();
    }
  }
  v7 = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  if (v7)
  {
    v8 = (char *)v7;
    v9 = type metadata accessor for VideoPlaybackCoordinator(0);
    v10 = *(void **)(*(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]
                   + qword_10086B3F0);
    if (!v10)
      goto LABEL_23;
    v11 = v10;
    dispatch thunk of VideoPlaybackCoordinator.shouldLoopSingleVideo.setter(1);

  }
  v12 = a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController;
  v13 = (void *)swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
  if (v13)
  {
    v14 = objc_msgSend(v13, "view");
    *(_QWORD *)&v15 = swift_unknownObjectRelease().n128_u64[0];
    if (v14)
    {
      v16 = objc_msgSend(v14, "layer", v15);

      sub_100242918(v33);
      v32[0] = v33[0];
      v32[1] = v33[1];
      v32[2] = v33[2];
      v32[3] = v33[3];
      v32[4] = v33[4];
      v32[5] = v33[5];
      v32[6] = v33[6];
      v32[7] = v33[7];
      objc_msgSend(v16, "setTransform:", v32);

      goto LABEL_10;
    }
    __break(1u);
LABEL_23:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v9, v9);
    __break(1u);
    return;
  }
LABEL_10:
  v17 = sub_10024258C();
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setHidden:", 1);

  }
  v19 = swift_unknownObjectWeakLoadStrong(v12);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + qword_10080C470);
    if (v20)
    {
      v21 = v20 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
      v22 = *(_QWORD *)(v21 + 8);
      v23 = *(id *)v21;
      swift_unknownObjectRelease();
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 248))(1, ObjectType, v22);

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v25 = swift_unknownObjectWeakLoadStrong(v12);
  if (v25)
  {
    v26 = *(_QWORD *)(v25 + qword_10080C470);
    if (v26)
    {
      v27 = v26 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell;
      v29 = *(id *)v27;
      v28 = *(_QWORD *)(v27 + 8);
      v30 = *(id *)v27;
      swift_unknownObjectRelease();
      if (v29)
      {
        v31 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 248))(1, v31, v28);

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1002438CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  double v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t ObjectType;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[8];

  v6 = a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController;
  Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_BYTE *)(Strong + qword_100864BF0);
    *(_BYTE *)(v8 + qword_100864BF0) = 0;
    sub_1000978CC(v9);
    swift_unknownObjectRelease();
  }
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (v10)
  {
    v11 = objc_msgSend(v10, "view");
    *(_QWORD *)&v12 = swift_unknownObjectRelease().n128_u64[0];
    if (!v11)
    {
      __break(1u);
      return;
    }
    v13 = objc_msgSend(v11, "layer", v12);

    v14 = *(_OWORD *)&CATransform3DIdentity.m13;
    v28[0] = *(_OWORD *)&CATransform3DIdentity.m11;
    v28[1] = v14;
    v15 = *(_OWORD *)&CATransform3DIdentity.m23;
    v28[2] = *(_OWORD *)&CATransform3DIdentity.m21;
    v28[3] = v15;
    v16 = *(_OWORD *)&CATransform3DIdentity.m33;
    v28[4] = *(_OWORD *)&CATransform3DIdentity.m31;
    v28[5] = v16;
    v17 = *(_OWORD *)&CATransform3DIdentity.m43;
    v28[6] = *(_OWORD *)&CATransform3DIdentity.m41;
    v28[7] = v17;
    objc_msgSend(v13, "setTransform:", v28);

  }
  v18 = type metadata accessor for ArticleContainerViewController();
  v19 = swift_dynamicCastClass(a4, v18);
  if (v19)
    *(_BYTE *)(v19 + OBJC_IVAR____TtC20ProductPageExtension30ArticleContainerViewController_allowTraitCollectionOverrides) = 1;
  v20 = sub_10024258C();
  if (v20)
  {
    v21 = v20;
    ObjectType = swift_getObjectType();
    v23 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyVideoViewProviding) ? v21 : 0;

    if (v23)
    {
      v24 = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
      if (v24)
      {
        v25 = (void *)v24;
        v26 = type metadata accessor for TodayDiffablePageViewController(0);
        v27 = swift_dynamicCastClass(v25, v26);
        if (v27)
          *(_BYTE *)(v27 + qword_100866538) = 0;

      }
    }
  }
}

void sub_100243A70(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  char v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  CATransform3D v59;

  v3 = a3;
  if ((a2 & 1) != 0)
  {
    v4 = (id)(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
    if (!Strong)
    {
LABEL_37:
      v33 = (char *)swift_unknownObjectWeakLoadStrong(v4);
      if (v33)
      {
        v34 = v33;
        v35 = qword_1008665D8;
        v36 = *(void **)&v33[qword_1008665D8];
        if (v36)
        {
          v37 = v36;
          v38 = objc_msgSend(v37, "layer");
          CATransform3DMakeScale(&v59, 1.0, 1.0, 1.0);
          objc_msgSend(v38, "setTransform:", &v59);

          v39 = *(void **)&v34[v35];
          *(_QWORD *)&v34[v35] = 0;

        }
        else
        {

        }
      }
      v40 = v3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController;
      v41 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
      if (v41)
      {
        v42 = *(_QWORD *)(v41 + qword_10080C470);
        if (v42)
        {
          v43 = v42 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
          v44 = *(_QWORD *)(v43 + 8);
          v45 = *(id *)v43;
          swift_unknownObjectRelease();
          ObjectType = swift_getObjectType();
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v44 + 248))(0, ObjectType, v44);

        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      v47 = swift_unknownObjectWeakLoadStrong(v40);
      if (v47)
      {
        v48 = *(_QWORD *)(v47 + qword_10080C470);
        if (v48)
        {
          v49 = v48 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell;
          v51 = *(id *)v49;
          v50 = *(_QWORD *)(v49 + 8);
          v52 = *(id *)v49;
          swift_unknownObjectRelease();
          if (v51)
          {
            v53 = swift_getObjectType();
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v50 + 248))(0, v53, v50);

          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      if (swift_unknownObjectWeakLoadStrong(v40))
      {
        v54 = (void *)swift_unknownObjectWeakLoadStrong(v4);
        sub_10009DDA4((uint64_t)v54);

        swift_unknownObjectRelease();
      }
      return;
    }
    v6 = (char *)Strong;
    v7 = qword_1008665E8;
    *(_BYTE *)(Strong + qword_1008665E8) = 0;
    v8 = (id)type metadata accessor for VideoPlaybackCoordinator(0);
    v9 = *(void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]
                  + qword_10086B3F0);
    if (!v9)
    {
LABEL_55:
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v8, v8);
      __break(1u);
      return;
    }
    v10 = v9;
    v8 = objc_msgSend(v6, "view");
    if (!v8)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    v11 = v8;
    v12 = dispatch thunk of VideoPlaybackCoordinator.isPlaying(in:)();

    if ((v12 & 1) != 0)
      dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();
    v13 = objc_msgSend(v6, "collectionView");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, "visibleCells");
      v16 = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr);
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

      if ((unint64_t)v17 >> 62)
      {
        if (v17 < 0)
          v32 = v17;
        else
          v32 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v17);
        v18 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease(v17);
        if (v18)
          goto LABEL_10;
      }
      else
      {
        v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v18)
        {
LABEL_10:
          v55 = v10;
          v56 = v3;
          v57 = v4;
          if (v18 >= 1)
          {
            for (i = 0; i != v18; ++i)
            {
              if ((v17 & 0xC000000000000001) != 0)
                v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
              else
                v20 = *(id *)(v17 + 8 * i + 32);
              v21 = v20;
              v22 = swift_getObjectType();
              v23 = swift_conformsToProtocol2(v22, &protocol descriptor for TodayCardCollectionViewCell);
              if (v23)
                v24 = v23;
              else
                v24 = 0;
              if (v23)
                v25 = v21;
              else
                v25 = 0;
              if (v25)
              {
                v26 = swift_getObjectType();
                (*(void (**)(_QWORD, uint64_t, uint64_t))(v24 + 192))(v6[v7], v26, v24);
              }

            }
            swift_bridgeObjectRelease(v17);
            v3 = v56;
            v4 = v57;
            goto LABEL_36;
          }
          __break(1u);
          goto LABEL_54;
        }
      }

      swift_bridgeObjectRelease(v17);
    }
    else
    {

    }
LABEL_36:
    *(_BYTE *)(*(_QWORD *)&v6[qword_100818340] + 24) = v6[v7];

    goto LABEL_37;
  }
  v27 = sub_10024258C();
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, "setHidden:", 0);

  }
  v29 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  if (v29)
  {
    v30 = (char *)v29;
    v8 = (id)type metadata accessor for VideoPlaybackCoordinator(0);
    v31 = *(void **)(*(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]
                   + qword_10086B3F0);
    if (v31)
    {
      v58 = v31;
      dispatch thunk of VideoPlaybackCoordinator.shouldLoopSingleVideo.setter(0);

      return;
    }
    goto LABEL_55;
  }
}

char *sub_100243FCC(void *a1)
{
  _BYTE *v1;
  char *Strong;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  BOOL v9;
  char v10;
  objc_class *v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _BYTE *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _BYTE *v23;
  id v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _BYTE v37[24];
  objc_super v38;
  _BYTE v39[40];

  Strong = (char *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController]);

  if (Strong)
  {
    v4 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController]);
    if (v4)
    {
      *(_BYTE *)(v4 + qword_100866538) = 0;
      swift_unknownObjectRelease();
    }
    sub_100242754((uint64_t)v39);
    v5 = objc_msgSend(a1, "presentingViewController");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "traitCollection");

      v8 = objc_msgSend(v7, "horizontalSizeClass");
      v9 = v8 == (id)1;
    }
    else
    {
      v9 = 0;
    }
    v10 = v1[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_shouldUseReducedMotionTransition];
    v11 = (objc_class *)type metadata accessor for TodayTransitionDismissAnimation();
    v12 = objc_allocWithZone(v11);
    sub_1000C8DF0((uint64_t)v39, (uint64_t)&v12[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionDismissAnimation_originRect]);
    v12[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionDismissAnimation_shouldAnimateTabBar] = v9;
    v12[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionDismissAnimation_shouldUseReducedMotionTransition] = v10;
    v38.receiver = v12;
    v38.super_class = v11;
    Strong = (char *)objc_msgSendSuper2(&v38, "init");
    v13 = swift_allocObject(&unk_1007473E8, 24, 7);
    *(_QWORD *)(v13 + 16) = v1;
    v14 = &Strong[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks];
    swift_beginAccess(&Strong[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks], v37, 33, 0);
    v15 = *(_QWORD **)v14;
    v16 = v1;
    swift_retain(v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
    *(_QWORD *)v14 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1003DB0E4(0, v15[2] + 1, 1, v15);
      *(_QWORD *)v14 = v15;
    }
    v19 = v15[2];
    v18 = v15[3];
    if (v19 >= v18 >> 1)
    {
      v15 = sub_1003DB0E4((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
      *(_QWORD *)v14 = v15;
    }
    v15[2] = v19 + 1;
    v20 = &v15[3 * v19];
    v20[4] = sub_1002457A8;
    v20[5] = v13;
    *((_BYTE *)v20 + 48) = 0;
    swift_endAccess(v37);
    swift_release();
    v21 = swift_allocObject(&unk_100747410, 32, 7);
    *(_QWORD *)(v21 + 16) = a1;
    *(_QWORD *)(v21 + 24) = v16;
    swift_beginAccess(v14, v37, 33, 0);
    v22 = *(_QWORD **)v14;
    v23 = v16;
    v24 = a1;
    swift_retain(v21);
    v25 = swift_isUniquelyReferenced_nonNull_native(v22);
    *(_QWORD *)v14 = v22;
    if ((v25 & 1) == 0)
    {
      v22 = sub_1003DB0E4(0, v22[2] + 1, 1, v22);
      *(_QWORD *)v14 = v22;
    }
    v27 = v22[2];
    v26 = v22[3];
    if (v27 >= v26 >> 1)
    {
      v22 = sub_1003DB0E4((_QWORD *)(v26 > 1), v27 + 1, 1, v22);
      *(_QWORD *)v14 = v22;
    }
    v22[2] = v27 + 1;
    v28 = &v22[3 * v27];
    v28[4] = sub_1002457B0;
    v28[5] = v21;
    *((_BYTE *)v28 + 48) = 1;
    swift_endAccess(v37);
    swift_release();
    v29 = swift_allocObject(&unk_100747438, 24, 7);
    *(_QWORD *)(v29 + 16) = v23;
    swift_beginAccess(v14, v37, 33, 0);
    v30 = *(_QWORD **)v14;
    v31 = v23;
    swift_retain(v29);
    v32 = swift_isUniquelyReferenced_nonNull_native(v30);
    *(_QWORD *)v14 = v30;
    if ((v32 & 1) == 0)
    {
      v30 = sub_1003DB0E4(0, v30[2] + 1, 1, v30);
      *(_QWORD *)v14 = v30;
    }
    v34 = v30[2];
    v33 = v30[3];
    if (v34 >= v33 >> 1)
    {
      v30 = sub_1003DB0E4((_QWORD *)(v33 > 1), v34 + 1, 1, v30);
      *(_QWORD *)v14 = v30;
    }
    v30[2] = v34 + 1;
    v35 = &v30[3 * v34];
    v35[4] = sub_1002457B8;
    v35[5] = v29;
    *((_BYTE *)v35 + 48) = 2;
    swift_endAccess(v37);
    swift_release();
  }
  return Strong;
}

void sub_1002443BC(uint64_t a1, uint64_t a2, char *a3)
{
  char *v3;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  id v53;

  v3 = a3;
  v4 = &a3[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController];
  Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController]);
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong + qword_10080C470);
    if (v6)
    {
      v7 = v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
      v8 = *(_QWORD *)(v7 + 8);
      v9 = *(id *)v7;
      swift_unknownObjectRelease();
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 248))(1, ObjectType, v8);

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v11 = swift_unknownObjectWeakLoadStrong(v4);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + qword_10080C470);
    if (v12)
    {
      v13 = v12 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell;
      v14 = *(id *)v13;
      v15 = *(_QWORD *)(v13 + 8);
      v16 = *(id *)v13;
      swift_unknownObjectRelease();
      if (v14)
      {
        v17 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 248))(1, v17, v15);

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v18 = swift_unknownObjectWeakLoadStrong(v4);
  if (v18)
  {
    v19 = v18;
    v20 = sub_10024258C();
    if (v20)
    {
      v21 = v20;
      v22 = swift_getObjectType();
      if (swift_conformsToProtocol2(v22, &protocol descriptor for TodayCardCollectionViewCell))
        v23 = v21;
      else
        v23 = 0;
      if (!v23)

    }
    else
    {
      v23 = 0;
    }
    v24 = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController]);
    *(_QWORD *)(v19 + qword_10080C468) = 0;

    swift_unknownObjectRelease();
    swift_release();
  }
  v25 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (!v25
    || (v26 = objc_msgSend(v25, "traitCollection"),
        v27 = objc_msgSend(v26, "horizontalSizeClass", swift_unknownObjectRelease().n128_f64[0]),
        v26,
        v27 != (id)1))
  {
    v28 = (void *)swift_unknownObjectWeakLoadStrong(v4);
    if (v28)
    {
      v29 = objc_msgSend(v28, "navigationController");
      *(_QWORD *)&v30 = swift_unknownObjectRelease().n128_u64[0];
      if (v29)
      {
        v31 = objc_msgSend(v29, "viewControllers", v30);
        v32 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
        v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

        v51 = v29;
        v52 = v3;
        if ((unint64_t)v33 >> 62)
        {
LABEL_35:
          if (v33 < 0)
            v46 = v33;
          else
            v46 = v33 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v33);
          v34 = _CocoaArrayWrapper.endIndex.getter(v46);
          swift_bridgeObjectRelease(v33);
          if (v34)
            goto LABEL_25;
        }
        else
        {
          v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v34)
          {
LABEL_25:
            v35 = 4;
            do
            {
              if ((v33 & 0xC000000000000001) != 0)
                v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35 - 4, v33);
              else
                v36 = *(id *)(v33 + 8 * v35);
              v37 = v36;
              v38 = v35 - 3;
              if (__OFADD__(v35 - 4, 1))
              {
                __break(1u);
                goto LABEL_35;
              }
              v39 = objc_opt_self(UICollectionViewController);
              v40 = swift_dynamicCastObjCClass(v37, v39);
              if (v40)
              {
                v41 = (void *)v40;
                v42 = v37;
                v43 = objc_msgSend(v41, "collectionView");
                if (!v43)
                {
                  __break(1u);
LABEL_45:
                  __break(1u);
                  return;
                }
                v44 = v43;
                v45 = objc_msgSend(v43, "collectionViewLayout");

                objc_msgSend(v45, "invalidateLayout");
              }

              ++v35;
            }
            while (v38 != v34);
          }
        }

        v47 = objc_msgSend(v51, "navigationBar");
        objc_msgSend(v47, "setHidden:", 1);

        v3 = v52;
      }
    }
  }
  v48 = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController]);
  if (v48)
  {
    v49 = v48;
    v50 = objc_msgSend(v48, "collectionView");

    if (!v50)
      goto LABEL_45;
    v53 = objc_msgSend(v50, "collectionViewLayout");

    objc_msgSend(v53, "invalidateLayout");
  }
}

void sub_100244848(int a1, int a2, id a3, uint64_t a4)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t Strong;
  uint64_t v16;
  char v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v5 = objc_msgSend(a3, "_existingPresentationControllerImmediate:effective:", 1, 1);
  if (v5)
  {
    v6 = v5;
    v7 = type metadata accessor for ArticlePagePresentationController();
    v8 = swift_dynamicCastClass(v6, v7);
    v9 = (void *)v8;
    if (v8)
    {
      v10 = v8 + OBJC_IVAR____TtC20ProductPageExtension33ArticlePagePresentationController_interactiveDismissal;
      swift_beginAccess(v8 + OBJC_IVAR____TtC20ProductPageExtension33ArticlePagePresentationController_interactiveDismissal, v21, 0, 0);
      if (*(_QWORD *)(v10 + 24))
      {
        sub_10000EF80(v10, (uint64_t)v18);
        v11 = v19;
        v12 = v20;
        sub_100010F08(v18, v19);
        v13 = *(void (**)(uint64_t, uint64_t))(v12 + 24);
        v14 = v6;
        v13(v11, v12);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);

      }
    }
    else
    {

    }
  }
  else
  {
    v9 = 0;
  }
  if ((*(_BYTE *)(a4
                 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_shouldUseReducedMotionTransition) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
    if (Strong)
    {
      v16 = Strong;
      v17 = *(_BYTE *)(Strong + qword_100864BF0);
      *(_BYTE *)(v16 + qword_100864BF0) = 1;
      sub_1000978CC(v17);
      swift_unknownObjectRelease();
    }
  }

}

void sub_100244998(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  char v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;
  id v42;
  void *v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(id, id, uint64_t, uint64_t, uint64_t);
  id v93;
  void *v94;
  void *v95;
  id v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(_BYTE *, uint64_t, _QWORD *);
  char *v104;
  void (*v105)(_BYTE *, uint64_t, uint64_t, _QWORD *);
  Class isa;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  char *v112;
  id v113;
  void *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t j;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  id v140;
  id v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  id v148;
  _BYTE v149[12];
  _BOOL4 v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  id v157;
  id v158;
  id v159;
  char *v160;

  v5 = (_QWORD *)type metadata accessor for IndexPath(0);
  v6 = *(v5 - 1);
  __chkstk_darwin(v5);
  v160 = &v149[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v8);
  v10 = &v149[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 1) == 0)
  {
    v24 = a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController;
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
    if (Strong)
    {
      v26 = Strong;
      v27 = *(_BYTE *)(Strong + qword_100864BF0);
      *(_BYTE *)(v26 + qword_100864BF0) = 0;
      sub_1000978CC(v27);
      swift_unknownObjectRelease();
    }
    v28 = swift_unknownObjectWeakLoadStrong(v24);
    if (v28)
    {
      *(_BYTE *)(v28 + qword_100866538) = 1;
      swift_unknownObjectRelease();
    }
    v29 = (char *)swift_unknownObjectWeakLoadStrong(a3+ OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
    if (!v29)
      return;
    v30 = qword_1008665E8;
    v29[qword_1008665E8] = 0;
    v160 = v29;
    v14 = (id)type metadata accessor for VideoPlaybackCoordinator(0);
    v31 = *(void **)(*(_QWORD *)&v160[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]
                   + qword_10086B3F0);
    if (!v31)
      goto LABEL_144;
    v32 = v31;
    v14 = objc_msgSend(v160, "view");
    if (!v14)
      goto LABEL_143;
    v33 = v14;
    v34 = dispatch thunk of VideoPlaybackCoordinator.isPlaying(in:)();

    if ((v34 & 1) != 0)
      dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();
    v35 = objc_msgSend(v160, "collectionView");
    if (!v35)
    {

LABEL_115:
      v128 = v160;
      *(_BYTE *)(*(_QWORD *)&v160[qword_100818340] + 24) = v160[v30];

      return;
    }
    v36 = v35;
    v37 = objc_msgSend(v35, "visibleCells");
    v38 = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr);
    v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

    if ((unint64_t)v39 >> 62)
    {
      if (v39 < 0)
        v127 = v39;
      else
        v127 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v39);
      v40 = _CocoaArrayWrapper.endIndex.getter(v127);
      swift_bridgeObjectRelease(v39);
      if (v40)
        goto LABEL_20;
    }
    else
    {
      v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v40)
      {
LABEL_20:
        v159 = v32;
        if (v40 < 1)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        for (i = 0; i != v40; ++i)
        {
          if ((v39 & 0xC000000000000001) != 0)
            v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v39);
          else
            v42 = *(id *)(v39 + 8 * i + 32);
          v43 = v42;
          ObjectType = swift_getObjectType();
          v45 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TodayCardCollectionViewCell);
          if (v45)
            v46 = v45;
          else
            v46 = 0;
          if (v45)
            v47 = v43;
          else
            v47 = 0;
          if (v47)
          {
            v48 = swift_getObjectType();
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v46 + 192))(v160[v30], v48, v46);
          }

        }
        goto LABEL_114;
      }
    }

LABEL_114:
    swift_bridgeObjectRelease(v39);
    goto LABEL_115;
  }
  v11 = a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController;
  v12 = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController);
  if (v12)
  {
    v13 = (char *)v12;
    v14 = (id)type metadata accessor for VideoPlaybackCoordinator(0);
    v15 = *(void **)(*(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]
                   + qword_10086B3F0);
    if (!v15)
      goto LABEL_144;
    v16 = v15;
    dispatch thunk of VideoPlaybackCoordinator.shouldLoopSingleVideo.setter(0);

  }
  v17 = (void *)(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
  v18 = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController);
  if (v18)
  {
    v19 = *(_QWORD *)(v18 + qword_10080C470);
    if (v19)
    {
      v20 = v19 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
      v21 = *(_QWORD *)(v20 + 8);
      v22 = *(id *)v20;
      swift_unknownObjectRelease();
      v23 = swift_getObjectType();
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v21 + 248))(0, v23, v21);

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v159 = v17;
  v49 = swift_unknownObjectWeakLoadStrong(v17);
  if (v49)
  {
    v50 = *(_QWORD *)(v49 + qword_10080C470);
    if (v50)
    {
      v51 = v50 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell;
      v53 = *(id *)v51;
      v52 = *(_QWORD *)(v51 + 8);
      v54 = *(id *)v51;
      swift_unknownObjectRelease();
      if (v53)
      {
        v55 = swift_getObjectType();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v52 + 248))(0, v55, v52);

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v56 = sub_10024258C();
  if (!v56)
    return;
  v57 = v56;
  v58 = swift_getObjectType();
  v59 = swift_conformsToProtocol2(v58, &protocol descriptor for TodayCardCollectionViewCell);
  if (v59)
    v60 = v59;
  else
    v60 = 0;
  if (v59)
    v61 = v57;
  else
    v61 = 0;
  v158 = v61;
  if (v61)
  {
    v62 = v57;
  }
  else
  {
    v158 = 0;
    v60 = 0;
  }
  v63 = swift_unknownObjectWeakLoadStrong(v159);
  v155 = v57;
  v156 = v11;
  if (v63)
  {
    v64 = *(_QWORD *)(v63 + qword_10080C470);
    if (v64)
    {
      v65 = v64 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
      v66 = *(void **)v65;
      v157 = *(id *)(v65 + 8);
      v67 = v66;
      swift_unknownObjectRelease();
      v68 = swift_getObjectType();
      v69 = swift_conformsToProtocol2(v68, &protocol descriptor for AnyVideoViewProviding);
      if (v69)
        v70 = v67;
      else
        v70 = 0;
      if (v69)
        v71 = v69;
      else
        v71 = 0;
      if (v70)
      {
        v72 = swift_unknownObjectWeakLoadStrong(v159);
        if (v72)
        {
          v153 = v71;
          v154 = v60;
          v73 = *(_QWORD *)(v72 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
          v74 = v67;
          swift_retain(v73);
          swift_unknownObjectRelease();
          v75 = v158;
          v152 = v74;
          if (v158)
          {
            v76 = swift_getObjectType();
            if (swift_conformsToProtocol2(v76, &protocol descriptor for AnyVideoViewProviding))
              v77 = v75;
            else
              v77 = 0;
            if (v77)
              v78 = v75;
          }
          else
          {
            v77 = 0;
          }
          swift_unknownObjectRelease();
          v79 = type metadata accessor for VideoPlaybackCoordinator(0);
          v151 = v73;
          v80 = *(void **)(v73 + qword_10086B3F0);
          if (!v80)
            goto LABEL_145;
          v150 = v77 == 0;
          v81 = swift_getObjectType();
          v82 = v80;
          v83 = v153;
          v84 = (void *)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v81, v153);
          v86 = v85;
          v87 = *(_QWORD *)(v83 + 8);
          v88 = v152;
          dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v84, v86, v70, v87, v150);
          swift_release();

          v57 = v155;
          v11 = v156;
          v60 = v154;
        }
      }
      v89 = v158;
      if (v158)
      {
        v90 = swift_getObjectType();
        v91 = v60;
        v92 = *(void (**)(id, id, uint64_t, uint64_t, uint64_t))(v60 + 272);
        v93 = v89;
        v92(v67, v157, 1, v90, v91);

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  objc_msgSend(v57, "setHidden:", 0);
  v94 = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (v94)
  {
    v95 = v94;
    v96 = objc_msgSend(v94, "collectionView");

    if (v96)
    {
      v97 = objc_msgSend(v96, "indexPathsForSelectedItems");
      if (v97)
      {
        v98 = v97;
        v99 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v97, v5);

        v100 = *(_QWORD *)(v99 + 16);
        if (v100)
        {
          v101 = *(unsigned __int8 *)(v6 + 80);
          v154 = v99;
          v102 = v99 + ((v101 + 32) & ~v101);
          v157 = *(id *)(v6 + 72);
          v103 = *(void (**)(_BYTE *, uint64_t, _QWORD *))(v6 + 16);
          v104 = v160;
          while (1)
          {
            v103(v10, v102, v5);
            v105 = *(void (**)(_BYTE *, uint64_t, uint64_t, _QWORD *))(v6 + 56);
            v105(v10, 0, 1, v5);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, _QWORD *))(v6 + 48))(v10, 1, v5) == 1)
              break;
            (*(void (**)(char *, _BYTE *, _QWORD *))(v6 + 32))(v104, v10, v5);
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            (*(void (**)(char *, _QWORD *))(v6 + 8))(v104, v5);
            objc_msgSend(v96, "deselectItemAtIndexPath:animated:", isa, 0);

            v102 += (uint64_t)v157;
            if (!--v100)
            {
              v99 = v154;
              goto LABEL_85;
            }
          }

          v107 = v154;
        }
        else
        {
          v105 = *(void (**)(_BYTE *, uint64_t, uint64_t, _QWORD *))(v6 + 56);
LABEL_85:
          v105(v10, 1, 1, v5);

          v107 = v99;
        }
        swift_bridgeObjectRelease(v107);
        v57 = v155;
      }
      else
      {

      }
    }
  }
  v108 = v156;
  v109 = swift_unknownObjectWeakLoadStrong(v156);
  if (!v109)
    goto LABEL_123;
  v5 = (_QWORD *)v109;
  v110 = qword_1008665E8;
  *(_BYTE *)(v109 + qword_1008665E8) = 1;
  v14 = (id)type metadata accessor for VideoPlaybackCoordinator(0);
  v111 = *(void **)(*(_QWORD *)((char *)v5
                              + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph)
                  + qword_10086B3F0);
  if (!v111)
  {
LABEL_144:
    v79 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v14, v14);
    __break(1u);
LABEL_145:
    v137 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v79, v79);
    __break(1u);
LABEL_146:
    v147 = v137;
    v148 = v158;
    swift_retain(v5);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v147, v147);
    __break(1u);
    return;
  }
  v112 = v111;
  dispatch thunk of VideoPlaybackCoordinator.resumeAutoPlayVideo()();
  v113 = objc_msgSend(v5, "collectionView");
  if (v113)
  {
    v114 = v113;
    v115 = objc_msgSend(v113, "visibleCells");
    v116 = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr);
    v117 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v115, v116);

    if ((unint64_t)v117 >> 62)
    {
      if (v117 < 0)
        v129 = v117;
      else
        v129 = v117 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v117);
      v118 = _CocoaArrayWrapper.endIndex.getter(v129);
      swift_bridgeObjectRelease(v117);
      if (v118)
      {
LABEL_93:
        v157 = v114;
        v160 = v112;
        if (v118 >= 1)
        {
          for (j = 0; j != v118; ++j)
          {
            if ((v117 & 0xC000000000000001) != 0)
              v120 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v117);
            else
              v120 = *(id *)(v117 + 8 * j + 32);
            v121 = v120;
            v122 = swift_getObjectType();
            v123 = swift_conformsToProtocol2(v122, &protocol descriptor for TodayCardCollectionViewCell);
            if (v123)
              v124 = v123;
            else
              v124 = 0;
            if (v123)
              v125 = v121;
            else
              v125 = 0;
            if (v125)
            {
              v126 = swift_getObjectType();
              (*(void (**)(_QWORD, uint64_t, uint64_t))(v124 + 192))(*((unsigned __int8 *)v5 + v110), v126, v124);
            }

          }
          goto LABEL_121;
        }
        goto LABEL_142;
      }
    }
    else
    {
      v118 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v118)
        goto LABEL_93;
    }

LABEL_121:
    swift_bridgeObjectRelease(v117);
    v108 = v156;
    goto LABEL_122;
  }

LABEL_122:
  *(_BYTE *)(*(_QWORD *)((char *)v5 + qword_100818340) + 24) = *((_BYTE *)v5 + v110);

  v57 = v155;
LABEL_123:
  if (!swift_unknownObjectWeakLoadStrong(v159))
  {

    return;
  }
  v130 = (char *)swift_unknownObjectWeakLoadStrong(v108);
  v131 = v130;
  v132 = v158;
  if (v158)
  {
    v133 = swift_getObjectType();
    v134 = swift_conformsToProtocol2(v133, &protocol descriptor for AnyVideoViewProviding);
    if (v134)
      v135 = v134;
    else
      v135 = 0;
    if (v134)
      v136 = v132;
    else
      v136 = 0;
    if (v136)
    {
      if (v131)
      {
        v5 = *(_QWORD **)&v131[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph];
        v137 = type metadata accessor for VideoPlaybackCoordinator(0);
        v138 = *(void **)((char *)v5 + qword_10086B3F0);
        if (v138)
        {
          v139 = swift_getObjectType();
          v140 = v158;
          swift_retain(v5);
          v141 = v138;
          v142 = (void *)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(v139, v135);
          v144 = v143;
          v145 = *(_QWORD *)(v135 + 8);
          v146 = v140;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v142, v144, v136, v145);

          swift_unknownObjectRelease();
          swift_release();

          return;
        }
        goto LABEL_146;
      }
    }
    else
    {

    }
    swift_unknownObjectRelease();

  }
  else
  {

    swift_unknownObjectRelease();
  }

}

id sub_100245638()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayArticleTransitioningDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002456C0()
{
  return type metadata accessor for TodayArticleTransitioningDelegate(0);
}

uint64_t type metadata accessor for TodayArticleTransitioningDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_100816BD0;
  if (!qword_100816BD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayArticleTransitioningDelegate);
  return result;
}

void sub_100245704(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100653C88;
  v4[1] = &unk_100653C88;
  sub_1001CDA50(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100653CA0;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_100245784()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002457A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002443BC(a1, a2, *(char **)(v2 + 16));
}

void sub_1002457B0(int a1, int a2)
{
  uint64_t v2;

  sub_100244848(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1002457B8(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100244998(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1002457C0(void *a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t ObjectType;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  _QWORD v32[4];

  v3 = type metadata accessor for OSLogger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArticleContainerViewController();
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = *(void **)(v8 + OBJC_IVAR____TtC20ProductPageExtension30ArticleContainerViewController_articleViewController);
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TodayPresentableViewController) ? v9 : 0)
    {
      v12 = v9;
      return;
    }
  }
  v13 = objc_opt_self(UINavigationController);
  v14 = swift_dynamicCastObjCClass(a1, v13);
  if (!v14)
    goto LABEL_24;
  v15 = (void *)v14;
  v16 = a1;
  v17 = objc_msgSend(v15, "viewControllers");
  v18 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if (!((unint64_t)v19 >> 62))
  {
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_22:
    swift_bridgeObjectRelease(v19);
LABEL_23:

LABEL_24:
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v26 = sub_10000EFC4(v3, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v26, v3);
    v27 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v28 = type metadata accessor for LogMessage(0);
    v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) | 7);
    *(_OWORD *)(v29 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000024, 0x8000000100696160);
    v32[3] = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    v32[0] = a1;
    v30 = a1;
    static LogMessage.sensitive(_:)(v32);
    sub_100010F2C((uint64_t)v32, &qword_100808F20);
    Logger.debug(_:)(v29, v3, &protocol witness table for OSLogger);
    v31 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v31);
    return;
  }
  if (v19 < 0)
    v24 = v19;
  else
    v24 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v19);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v19);
  if (!v25)
    goto LABEL_22;
LABEL_10:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
  }
  else
  {
    if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v20 = *(id *)(v19 + 32);
  }
  v21 = v20;
  swift_bridgeObjectRelease(v19);

  v22 = swift_getObjectType();
  if (swift_conformsToProtocol2(v22, &protocol descriptor for TodayPresentableViewController))
    v23 = v21;
  else
    v23 = 0;
  v16 = v21;
  if (!v23)
    goto LABEL_23;
}

uint64_t sub_100245AEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100245B10(char *a1)
{
  uint64_t v1;

  sub_10037A294(a1, v1);
}

unint64_t sub_100245B18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100816BF0;
  if (!qword_100816BF0)
  {
    v1 = sub_100010DE0(&qword_10080CB40);
    result = swift_getWitnessTable(&protocol conformance descriptor for AsyncEvent<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100816BF0);
  }
  return result;
}

unint64_t sub_100245B64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081F6D0;
  if (!qword_10081F6D0)
  {
    v1 = type metadata accessor for TodayCard(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCard, v1);
    atomic_store(result, (unint64_t *)&qword_10081F6D0);
  }
  return result;
}

char *sub_100245BB0(void *a1, void *a2)
{
  _BYTE *v2;
  void *Strong;
  id v6;
  id v7;
  BOOL v8;
  char v9;
  objc_class *v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _BYTE *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _BYTE *v23;
  id v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE v40[24];
  objc_super v41;
  _BYTE v42[40];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentingViewController]);

  if (Strong)
  {
    sub_100242754((uint64_t)v42);
    v6 = objc_msgSend(a2, "traitCollection");
    v7 = objc_msgSend(v6, "horizontalSizeClass");

    v8 = v7 == (id)1;
    v9 = v2[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_shouldUseReducedMotionTransition];
    v10 = (objc_class *)type metadata accessor for TodayTransitionPresentAnimation();
    v11 = objc_allocWithZone(v10);
    sub_1000C8DF0((uint64_t)v42, (uint64_t)&v11[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionPresentAnimation_originRect]);
    v11[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionPresentAnimation_shouldAnimateTabBar] = v8;
    v11[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionPresentAnimation_shouldUseReducedMotionTransition] = v9;
    v41.receiver = v11;
    v41.super_class = v10;
    v12 = (char *)objc_msgSendSuper2(&v41, "init");
    v13 = swift_allocObject(&unk_100747488, 24, 7);
    *(_QWORD *)(v13 + 16) = v2;
    v14 = &v12[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks];
    swift_beginAccess(&v12[OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks], v40, 33, 0);
    v15 = *(_QWORD **)v14;
    v16 = v2;
    swift_retain(v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
    *(_QWORD *)v14 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1003DB0E4(0, v15[2] + 1, 1, v15);
      *(_QWORD *)v14 = v15;
    }
    v19 = v15[2];
    v18 = v15[3];
    if (v19 >= v18 >> 1)
    {
      v15 = sub_1003DB0E4((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
      *(_QWORD *)v14 = v15;
    }
    v15[2] = v19 + 1;
    v20 = &v15[3 * v19];
    v20[4] = sub_100245F90;
    v20[5] = v13;
    *((_BYTE *)v20 + 48) = 0;
    swift_endAccess(v40);
    swift_release();
    v21 = swift_allocObject(&unk_1007474B0, 32, 7);
    *(_QWORD *)(v21 + 16) = v16;
    *(_QWORD *)(v21 + 24) = a1;
    swift_beginAccess(v14, v40, 33, 0);
    v22 = *(_QWORD **)v14;
    v23 = v16;
    v24 = a1;
    swift_retain(v21);
    v25 = swift_isUniquelyReferenced_nonNull_native(v22);
    *(_QWORD *)v14 = v22;
    if ((v25 & 1) == 0)
    {
      v22 = sub_1003DB0E4(0, v22[2] + 1, 1, v22);
      *(_QWORD *)v14 = v22;
    }
    v27 = v22[2];
    v26 = v22[3];
    if (v27 >= v26 >> 1)
    {
      v22 = sub_1003DB0E4((_QWORD *)(v26 > 1), v27 + 1, 1, v22);
      *(_QWORD *)v14 = v22;
    }
    v22[2] = v27 + 1;
    v28 = &v22[3 * v27];
    v28[4] = sub_100245FC4;
    v28[5] = v21;
    *((_BYTE *)v28 + 48) = 1;
    swift_endAccess(v40);
    swift_release();
    v29 = swift_allocObject(&unk_1007474D8, 24, 7);
    *(_QWORD *)(v29 + 16) = v23;
    swift_beginAccess(v14, v40, 33, 0);
    v30 = *(_QWORD **)v14;
    v31 = v23;
    swift_retain(v29);
    v32 = swift_isUniquelyReferenced_nonNull_native(v30);
    *(_QWORD *)v14 = v30;
    if ((v32 & 1) == 0)
    {
      v30 = sub_1003DB0E4(0, v30[2] + 1, 1, v30);
      *(_QWORD *)v14 = v30;
    }
    v34 = v30[2];
    v33 = v30[3];
    if (v34 >= v33 >> 1)
    {
      v30 = sub_1003DB0E4((_QWORD *)(v33 > 1), v34 + 1, 1, v30);
      *(_QWORD *)v14 = v30;
    }
    v30[2] = v34 + 1;
    v35 = &v30[3 * v34];
    v35[4] = sub_100245FCC;
    v35[5] = v29;
    *((_BYTE *)v35 + 48) = 2;
    swift_endAccess(v40);
    swift_release();
  }
  else
  {
    v36 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension33TodayArticleTransitioningDelegate_presentedViewController]);
    if (v36)
    {
      v37 = v36;
      v38 = *(_BYTE *)(v36 + qword_100864BF0);
      *(_BYTE *)(v37 + qword_100864BF0) = 0;
      sub_1000978CC(v38);
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return v12;
}

void sub_100245F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10024363C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100245F98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100245FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002438CC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_100245FCC(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100243A70(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_100245FE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100816BF8;
  if (!qword_100816BF8)
  {
    v1 = type metadata accessor for RibbonBarItemCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_100653CF4, v1);
    atomic_store(result, (unint64_t *)&qword_100816BF8);
  }
  return result;
}

double sub_100246030()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v7;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v2);
  v5 = sub_1002460C4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

double sub_1002460C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  objc_class *v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  __n128 v12;
  uint64_t (*v13)(char *, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)ShelfLayoutContext.traitCollection.getter(v4);
  sub_10017AF0C(v5, 0, 0, 0, 0, 1, JUMeasuringSizeExpanded[0], JUMeasuringSizeExpanded[1]);
  v7 = v6;

  type metadata accessor for RibbonBarItemCellLayout(0);
  v8 = static RibbonBarItemCellLayout.topPadding.getter();
  v22 = v9;
  v10 = ShelfLayoutContext.traitEnvironment.getter(v8);
  static Dimensions.defaultRoundingRule.getter(v10);
  v11 = AnyDimension.value(in:rounded:)(v10, v3, &type metadata for Double, &protocol witness table for Double);
  v12 = swift_unknownObjectRelease();
  v13 = *(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8);
  v14 = v13(v3, v0, v12);
  v15 = static RibbonBarItemCellLayout.bottomPadding.getter(v14);
  v22 = v16;
  v17 = ShelfLayoutContext.traitEnvironment.getter(v15);
  static Dimensions.defaultRoundingRule.getter(v17);
  v18 = AnyDimension.value(in:rounded:)(v17, v3, &type metadata for Double, &protocol witness table for Double);
  v19 = swift_unknownObjectRelease();
  v13(v3, v0, v19);
  return v7 + v11 + v18;
}

id sub_100246390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  NSString v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension23CollectionTableViewCell_dataSource] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC20ProductPageExtension23CollectionTableViewCell_delegate]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension23CollectionTableViewCell_collectionView] = 0;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for CollectionTableViewCell();
  v7 = objc_msgSendSuper2(&v9, "initWithStyle:reuseIdentifier:", a1, v6);

  return v7;
}

id sub_1002464F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionTableViewCell()
{
  return objc_opt_self(_TtC20ProductPageExtension23CollectionTableViewCell);
}

double sub_100246590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  double result;
  _QWORD v15[3];
  uint64_t v16;

  v4 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView)
                + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
  sub_100081524(a1, (uint64_t)v15);
  v5 = v16;
  if (v16)
  {
    v6 = sub_100010F08(v15, v16);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = v4;
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
  }
  else
  {
    v13 = v4;
    v12 = 0;
  }
  objc_msgSend(v4, "addTarget:action:forControlEvents:", v12, a2, 64);

  *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  return result;
}

char *sub_1002466AC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(_QWORD *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(_QWORD *, char *, uint64_t);
  void (*v44)(char *, uint64_t);
  _QWORD *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *);
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  id v55;
  char *v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  objc_class *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t);
  id v69;
  id v70;
  id v71;
  double left;
  double bottom;
  double right;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  __int128 v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  void (*v96)(_QWORD *, char *, uint64_t);
  unsigned int v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  objc_class *ObjectType;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *);
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  objc_super v115;
  uint64_t v116;
  _QWORD v117[5];
  _QWORD v118[5];
  _QWORD v119[3];
  uint64_t v120;
  void *v121;
  _QWORD v122[3];
  uint64_t v123;
  void *v124;
  _QWORD v125[3];
  uint64_t v126;
  void *v127;
  _QWORD v128[3];
  uint64_t v129;
  void *v130;
  _QWORD v131[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v108 = type metadata accessor for DividerView.Style(0);
  __chkstk_darwin(v108);
  v109 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for DirectionalTextAlignment(0);
  v103 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v106 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v11);
  v105 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v13);
  v110 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
  v16 = __chkstk_darwin(v15);
  v100 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FontSource(0, v16);
  v19 = *(_QWORD **)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = &v4[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_metrics];
  v22 = qword_1008063F8;
  v104 = v4;
  if (v22 != -1)
    swift_once(&qword_1008063F8, sub_1004C7FC4);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_100869CC0);
  v25 = *(_QWORD *)(v23 - 8);
  v101 = v24;
  v102 = v25;
  v112 = *(void (**)(char *))(v25 + 16);
  v112(v21);
  v26 = (void (*)(char *, uint64_t, uint64_t))v19[13];
  v97 = enum case for FontSource.useCase(_:);
  v27 = v26;
  ((void (*)(char *))v26)(v21);
  v98 = type metadata accessor for StaticDimension(0);
  v131[3] = v98;
  v131[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v131);
  v129 = v18;
  v130 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(v128);
  v96 = (void (*)(_QWORD *, char *, uint64_t))v19[2];
  v96(v28, v21, v18);
  StaticDimension.init(_:scaledLike:)(v128, 34.0);
  v114 = (void (*)(char *, uint64_t))v19[1];
  v114(v21, v18);
  if (qword_1008063E8 != -1)
    swift_once(&qword_1008063E8, sub_1004C7F90);
  v29 = sub_10000EFC4(v23, (uint64_t)qword_100869C90);
  v94 = v23;
  v30 = (void (*)(char *, uint64_t, uint64_t))v112;
  ((void (*)(char *, uint64_t, uint64_t))v112)(v21, v29, v23);
  v31 = v97;
  v95 = v27;
  v27(v21, v97, v18);
  v32 = v98;
  v129 = v98;
  v130 = &protocol witness table for StaticDimension;
  sub_1000119C0(v128);
  v126 = v18;
  v127 = &protocol witness table for FontSource;
  v33 = sub_1000119C0(v125);
  v34 = v96;
  v96(v33, v21, v18);
  StaticDimension.init(_:scaledLike:)(v125, 32.0);
  v114(v21, v18);
  v111 = v29;
  v30(v21, v29, v23);
  v35 = v31;
  v36 = v31;
  v37 = v95;
  v95(v21, v36, v18);
  v126 = v32;
  v127 = &protocol witness table for StaticDimension;
  sub_1000119C0(v125);
  v123 = v18;
  v124 = &protocol witness table for FontSource;
  v38 = sub_1000119C0(v122);
  v34(v38, v21, v18);
  StaticDimension.init(_:scaledLike:)(v122, 31.0);
  v114(v21, v18);
  v39 = v29;
  v40 = v94;
  v30(v21, v39, v94);
  v37(v21, v35, v18);
  v123 = v32;
  v41 = v32;
  v124 = &protocol witness table for StaticDimension;
  sub_1000119C0(v122);
  v120 = v18;
  v121 = &protocol witness table for FontSource;
  v42 = sub_1000119C0(v119);
  v34(v42, v21, v18);
  v43 = v34;
  StaticDimension.init(_:scaledLike:)(v119, 40.0);
  v44 = v114;
  v114(v21, v18);
  v120 = type metadata accessor for ZeroDimension(0);
  v121 = &protocol witness table for ZeroDimension;
  v45 = sub_1000119C0(v119);
  v46 = static ZeroDimension.zero.getter(v45);
  v47 = v40;
  v48 = v40;
  v49 = v112;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v112)(v21, v111, v48, v46);
  v37(v21, v35, v18);
  v118[3] = v41;
  v118[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v118);
  v117[3] = v18;
  v117[4] = &protocol witness table for FontSource;
  v50 = sub_1000119C0(v117);
  v43(v50, v21, v18);
  StaticDimension.init(_:scaledLike:)(v117, 35.0);
  v44(v21, v18);
  v116 = 0x4034000000000000;
  v117[0] = 0x4052000000000000;
  v51 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  v52 = v100;
  v53 = Conditional<>.init(regularValue:compactValue:)(v117, &v116, v51, &type metadata for CGFloat);
  InstallPagePreInstallPaidLayout.Metrics.init(titleSpace:subtitleSpace:separatorSpace:descriptionSpace:iconViewMargin:bottomLockupMargin:horizontalMargin:)(v131, v128, v125, v122, v119, v118, v52, v53);
  v54 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_divider;
  v55 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DividerView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v56 = v104;
  *(_QWORD *)&v104[v54] = v55;
  v57 = (void (*)(char *, uint64_t, uint64_t))v49;
  if (qword_100805368 != -1)
    swift_once(&qword_100805368, sub_1002EA62C);
  v58 = (uint64_t)v110;
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&qword_100866C38);
  v59 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  *(_QWORD *)&v56[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_inAppPurchaseView] = sub_1004BC704(v58, 0);
  v60 = v105;
  ((void (*)(char *, uint64_t, uint64_t))v49)(v105, v101, v47);
  v114 = *(void (**)(char *, uint64_t))(v102 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v114)(v60, 0, 1, v47);
  v61 = v56;
  LODWORD(v110) = enum case for DirectionalTextAlignment.none(_:);
  v103 = *(_QWORD *)(v103 + 104);
  v62 = v106;
  v63 = v113;
  ((void (*)(char *))v103)(v106);
  v64 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v65 = objc_allocWithZone(v64);
  *(_QWORD *)&v56[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v60, 0, 0, 1, 0, v62, 0, 0);
  v66 = v111;
  v57(v60, v111, v47);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v114)(v60, 0, 1, v47);
  v67 = v63;
  v68 = (void (*)(char *, _QWORD, uint64_t))v103;
  ((void (*)(char *, _QWORD, uint64_t))v103)(v62, v110, v67);
  v69 = objc_allocWithZone(v64);
  *(_QWORD *)&v61[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_descriptionLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v60, 0, 0, 1, 0, v62, 0, 0);
  v57(v60, v66, v47);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v114)(v60, 0, 1, v47);
  v68(v62, v110, v113);
  v70 = objc_allocWithZone(v64);
  *(_QWORD *)&v61[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_messageLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v60, 0, 0, 1, 0, v62, 0, 0);
  *(_QWORD *)&v61[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v115.receiver = v61;
  v115.super_class = ObjectType;
  v71 = objc_msgSendSuper2(&v115, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v75 = (char *)v71;
  objc_msgSend(v75, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v75, "setScrollEnabled:", 1);
  objc_msgSend(v75, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v76 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_divider;
  v77 = *(char **)&v75[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_divider];
  if (qword_100805EE0 != -1)
    swift_once(&qword_100805EE0, sub_1004B2F10);
  v78 = sub_10000EFC4(v108, (uint64_t)qword_100868DD8);
  v79 = v109;
  sub_1001C0D08(v78, v109);
  v80 = &v77[OBJC_IVAR____TtC20ProductPageExtension11DividerView_style];
  swift_beginAccess(&v77[OBJC_IVAR____TtC20ProductPageExtension11DividerView_style], v131, 33, 0);
  sub_1001C0D4C(v79, (uint64_t)v80);
  swift_endAccess(v131);
  v81 = &v77[OBJC_IVAR____TtC20ProductPageExtension11DividerView_separatorInset];
  v82 = *((_OWORD *)v80 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v80;
  *((_OWORD *)v81 + 1) = v82;
  objc_msgSend(v77, "setNeedsLayout");
  objc_msgSend(v77, "setNeedsLayout");
  sub_1001C0D90(v79);
  v83 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel;
  v84 = *(void **)&v75[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel];
  objc_msgSend(v84, "setTextAlignment:", 1);
  v85 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_descriptionLabel;
  objc_msgSend(*(id *)&v75[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_descriptionLabel], "setTextAlignment:", 1);
  v86 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_messageLabel;
  objc_msgSend(*(id *)&v75[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_messageLabel], "setTextAlignment:", 1);
  sub_100035178();
  v87 = v84;
  v88 = (void *)static UIColor.primaryText.getter(v87);
  objc_msgSend(v87, "setTextColor:", v88);

  v89 = *(id *)&v75[v85];
  v90 = (void *)static UIColor.primaryText.getter(v89);
  objc_msgSend(v89, "setTextColor:", v90);

  v91 = *(id *)&v75[v86];
  v92 = (void *)static UIColor.secondaryText.getter(v91);
  objc_msgSend(v91, "setTextColor:", v92);

  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v75[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_inAppPurchaseView]);
  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v75[v83]);
  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v75[v85]);
  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v75[v76]);
  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v75[v86]);
  objc_msgSend(v75, "addSubview:", *(_QWORD *)&v75[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView]);

  return v75;
}

double sub_1002471EC(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  _QWORD v35[5];
  _QWORD v36[5];
  _QWORD v37[5];
  _QWORD v38[5];
  _QWORD v39[5];

  v7 = type metadata accessor for InstallPagePreInstallPaidLayout.Metrics(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v11;
  v33 = type metadata accessor for InstallPagePreInstallPaidLayout(0, v9);
  v32 = *(_QWORD *)(v33 - 8);
  v12 = __chkstk_darwin(v33);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_metrics, v7, v12);
  v15 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_inAppPurchaseView);
  v39[3] = type metadata accessor for InAppPurchaseView(0);
  v39[4] = &protocol witness table for UIView;
  v39[0] = v15;
  v16 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel);
  v17 = type metadata accessor for DynamicTypeLabel(0);
  v38[3] = v17;
  v38[4] = &protocol witness table for UILabel;
  v37[4] = &protocol witness table for UILabel;
  v38[0] = v16;
  v18 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_descriptionLabel);
  v37[3] = v17;
  v37[0] = v18;
  v19 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_divider);
  v36[3] = type metadata accessor for DividerView(0);
  v36[4] = &protocol witness table for UIView;
  v36[0] = v19;
  v20 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_messageLabel);
  v35[4] = &protocol witness table for UILabel;
  v35[3] = v17;
  v35[0] = v20;
  v21 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView);
  v22 = type metadata accessor for SmallLockupView(0);
  v34[4] = &protocol witness table for UIView;
  v34[3] = v22;
  v34[0] = v21;
  v23 = v15;
  v24 = v16;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  InstallPagePreInstallPaidLayout.init(metrics:iconView:titleText:subtitleText:separator:descriptionText:bottomLockupView:)(v31, v39, v38, v37, v36, v35, v34);
  v29 = InstallPagePreInstallPaidLayout.measurements(fitting:in:)(v4, a1, a2);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
  return v29;
}

uint64_t sub_10024747C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  char *v28;
  double Width;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  objc_class *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];
  _QWORD v42[5];
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];
  _QWORD v46[5];
  objc_super v47;
  CGRect v48;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v35 = ObjectType;
  v3 = type metadata accessor for LayoutRect(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v36 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for InstallPagePreInstallPaidLayout.Metrics(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v10;
  v11 = type metadata accessor for InstallPagePreInstallPaidLayout(0, v8);
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v34 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47.receiver = v1;
  v47.super_class = ObjectType;
  objc_msgSendSuper2(&v47, "layoutSubviews", v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, &v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_metrics], v6);
  v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_inAppPurchaseView];
  v46[3] = type metadata accessor for InAppPurchaseView(0);
  v46[4] = &protocol witness table for UIView;
  v46[0] = v14;
  v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel];
  v16 = type metadata accessor for DynamicTypeLabel(0);
  v45[3] = v16;
  v45[4] = &protocol witness table for UILabel;
  v45[0] = v15;
  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_descriptionLabel];
  v44[3] = v16;
  v44[4] = &protocol witness table for UILabel;
  v44[0] = v17;
  v18 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_divider];
  v43[3] = type metadata accessor for DividerView(0);
  v43[4] = &protocol witness table for UIView;
  v42[4] = &protocol witness table for UILabel;
  v43[0] = v18;
  v19 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_messageLabel];
  v42[3] = v16;
  v42[0] = v19;
  v20 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView];
  v41[3] = type metadata accessor for SmallLockupView(0);
  v41[4] = &protocol witness table for UIView;
  v41[0] = v20;
  v21 = v14;
  v22 = v15;
  v23 = v17;
  v24 = v18;
  v25 = v19;
  v26 = v20;
  v27 = v34;
  InstallPagePreInstallPaidLayout.init(metrics:iconView:titleText:subtitleText:separator:descriptionText:bottomLockupView:)(v33, v46, v45, v44, v43, v42, v41);
  LayoutMarginsAware<>.layoutFrame.getter(v35);
  v28 = v36;
  InstallPagePreInstallPaidLayout.placeChildren(relativeTo:in:)(v1, 0.0, 0.0);
  objc_msgSend(v1, "frame");
  Width = CGRectGetWidth(v48);
  LayoutRect.size.getter(v30);
  objc_msgSend(v1, "setContentSize:", Width);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v27, v38);
}

uint64_t sub_1002477F8()
{
  return type metadata accessor for InstallPagePreInstallPaidOfferView(0);
}

uint64_t type metadata accessor for InstallPagePreInstallPaidOfferView(uint64_t a1)
{
  uint64_t result;

  result = qword_100816CD0;
  if (!qword_100816CD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstallPagePreInstallPaidOfferView);
  return result;
}

uint64_t sub_10024783C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[7];

  result = type metadata accessor for InstallPagePreInstallPaidLayout.Metrics(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1002478C0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(char *);
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(_QWORD *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __n128 v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD *, char *, uint64_t);
  void (*v39)(char *);
  char *v40;
  char *v41;
  unsigned int v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[5];
  _QWORD v48[5];
  _QWORD v49[3];
  uint64_t v50;
  void *v51;
  _QWORD v52[3];
  uint64_t v53;
  void *v54;
  _QWORD v55[3];
  uint64_t v56;
  void *v57;
  _QWORD v58[3];
  uint64_t v59;
  void *v60;
  _QWORD v61[6];

  v0 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
  v1 = __chkstk_darwin(v0);
  v41 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FontSource(0, v1);
  v4 = *(_QWORD **)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_metrics;
  if (qword_1008063F8 != -1)
    swift_once(&qword_1008063F8, sub_1004C7FC4);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = sub_10000EFC4(v8, (uint64_t)qword_100869CC0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10(v6, v9, v8);
  v11 = enum case for FontSource.useCase(_:);
  v39 = (void (*)(char *))v4[13];
  v39(v6);
  v44 = type metadata accessor for StaticDimension(0);
  v61[3] = v44;
  v61[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v61);
  v59 = v3;
  v60 = &protocol witness table for FontSource;
  v12 = sub_1000119C0(v58);
  v38 = (void (*)(_QWORD *, char *, uint64_t))v4[2];
  v38(v12, v6, v3);
  StaticDimension.init(_:scaledLike:)(v58, 34.0);
  v43 = (void (*)(char *, uint64_t))v4[1];
  v43(v6, v3);
  if (qword_1008063E8 != -1)
    swift_once(&qword_1008063E8, sub_1004C7F90);
  v40 = &v45[v7];
  v13 = sub_10000EFC4(v8, (uint64_t)qword_100869C90);
  v36 = v13;
  v10(v6, v13, v8);
  v42 = v11;
  v14 = v39;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v6, v11, v3);
  v59 = v44;
  v15 = v44;
  v60 = &protocol witness table for StaticDimension;
  sub_1000119C0(v58);
  v56 = v3;
  v57 = &protocol witness table for FontSource;
  v16 = sub_1000119C0(v55);
  v17 = v38;
  v38(v16, v6, v3);
  StaticDimension.init(_:scaledLike:)(v55, 32.0);
  v43(v6, v3);
  v10(v6, v13, v8);
  v18 = v42;
  ((void (*)(char *, _QWORD, uint64_t))v14)(v6, v42, v3);
  v56 = v15;
  v57 = &protocol witness table for StaticDimension;
  sub_1000119C0(v55);
  v53 = v3;
  v54 = &protocol witness table for FontSource;
  v19 = sub_1000119C0(v52);
  v17(v19, v6, v3);
  StaticDimension.init(_:scaledLike:)(v52, 31.0);
  v20 = v43;
  v43(v6, v3);
  v21 = v8;
  v37 = v8;
  v22 = v36;
  v10(v6, v36, v21);
  ((void (*)(char *, uint64_t, uint64_t))v14)(v6, v18, v3);
  v23 = v14;
  v24 = v44;
  v53 = v44;
  v54 = &protocol witness table for StaticDimension;
  sub_1000119C0(v52);
  v50 = v3;
  v51 = &protocol witness table for FontSource;
  v25 = sub_1000119C0(v49);
  v17(v25, v6, v3);
  StaticDimension.init(_:scaledLike:)(v49, 40.0);
  v20(v6, v3);
  v50 = type metadata accessor for ZeroDimension(0);
  v51 = &protocol witness table for ZeroDimension;
  v26 = sub_1000119C0(v49);
  v27 = static ZeroDimension.zero.getter(v26);
  ((void (*)(char *, uint64_t, uint64_t, __n128))v10)(v6, v22, v37, v27);
  ((void (*)(char *, _QWORD, uint64_t))v23)(v6, v42, v3);
  v48[3] = v24;
  v48[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v48);
  v47[3] = v3;
  v47[4] = &protocol witness table for FontSource;
  v28 = sub_1000119C0(v47);
  v17(v28, v6, v3);
  StaticDimension.init(_:scaledLike:)(v47, 35.0);
  v20(v6, v3);
  v46 = 0x4034000000000000;
  v47[0] = 0x4052000000000000;
  v29 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  v30 = v41;
  v31 = Conditional<>.init(regularValue:compactValue:)(v47, &v46, v29, &type metadata for CGFloat);
  InstallPagePreInstallPaidLayout.Metrics.init(titleSpace:subtitleSpace:separatorSpace:descriptionSpace:iconViewMargin:bottomLockupMargin:horizontalMargin:)(v61, v58, v55, v52, v49, v48, v30, v31);
  v32 = OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_divider;
  v33 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DividerView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v34 = v45;
  *(_QWORD *)&v45[v32] = v33;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/InstallPagePreInstallPaidOfferView.swift", 61, 2, 73, 0);
  __break(1u);
}

ValueMetadata *type metadata accessor for SearchAdActionImplementation()
{
  return &type metadata for SearchAdActionImplementation;
}

unint64_t sub_100247DF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100816CE0;
  if (!qword_100816CE0)
  {
    v1 = type metadata accessor for SearchAdAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100816CE0);
  }
  return result;
}

uint64_t sub_100247E38(uint64_t *a1, uint64_t a2)
{
  return sub_100247E40(*a1, a2);
}

uint64_t sub_100247E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = SearchAdAction.action.getter(v8);
  BaseObjectGraph.optional<A>(_:)(v5, v6, v6);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10003DAAC((uint64_t)v5);
    sub_10000DAF8(&qword_100808570);
    v12 = sub_10005ABBC();
    v13 = swift_allocError(&type metadata for GeneralActionImplementationError, v12, 0, 0);
    *v14 = 1;
    v15 = Promise.__allocating_init(error:)(v13);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v10, v5, v6);
    v15 = sub_10032D5C0(v11, a2, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_release();
  return v15;
}

uint64_t sub_100247FB4()
{
  return sub_10000E720(&qword_100816CF0, type metadata accessor for SmallBreakoutCollectionViewCell, (uint64_t)&unk_100653E80);
}

double sub_100247FE4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  double v11;
  double v12;
  double v13;
  id v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  _QWORD v33[5];

  v0 = type metadata accessor for SmallBreakoutLayout.Metrics(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SmallBreakoutLayout(0, v1);
  v31 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_100653ED0);
  ItemLayoutContext.subscript.getter(v10);
  swift_release();
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v13 = v12;
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  v14 = sub_10052A948();
  v15.n128_f64[0] = v11;
  sub_100543488(v14, (uint64_t)v3, v15);
  swift_getObjectType();
  v16 = swift_unknownObjectRetain(v14);
  v18 = sub_100544538(v17, v16);
  v20 = v19;
  swift_unknownObjectRelease();
  v21 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = LayoutViewPlaceholder.init(representing:)(v18, v20);
  v33[3] = v21;
  v33[4] = &protocol witness table for LayoutViewPlaceholder;
  v33[0] = v22;
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v32[3] = v21;
  v32[4] = &protocol witness table for LayoutViewPlaceholder;
  v32[0] = v23;
  SmallBreakoutLayout.init(metrics:iconView:detailsView:)(v3, v33, v32);
  swift_getKeyPath(&unk_100653F00);
  ItemLayoutContext.subscript.getter(v33);
  swift_release();
  v24 = v33[0];
  v25 = sub_10000E720(&qword_100828180, (uint64_t (*)(uint64_t))&type metadata accessor for SmallBreakoutLayout, (uint64_t)&protocol conformance descriptor for SmallBreakoutLayout);
  dispatch thunk of Measurable.measurements(fitting:in:)(v24, v4, v25, v11, v13);
  v27 = v26;
  swift_unknownObjectRelease();
  v28 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v6, v4, v28);
  return v27;
}

char *sub_100248280(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  double left;
  double bottom;
  double right;
  uint64_t v27;
  void *v28;
  id v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  objc_super v51;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for AutomationSemantics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v5[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_itemLayoutContext];
  v16 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView;
  v18 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0));
  v19 = v5;
  *(_QWORD *)&v5[v17] = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView] = 0;
  v20 = &v19[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separator];
  v21 = type metadata accessor for Separator(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v19[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_hideSeparatorIndependentlyOfLayout] = 0;

  v51.receiver = v19;
  v51.super_class = ObjectType;
  v22 = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", a1, a2, a3, a4);
  v23 = objc_msgSend(v22, "contentView");
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  objc_msgSend(v22, "setClipsToBounds:", 0);
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v27 = OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView;
  v28 = *(void **)(*(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView]
                 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel);
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v29 = v28;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974, 0xE500000000000000, &v49, &v47);
  sub_100010F2C((uint64_t)&v47, &qword_100808F20);
  sub_100010F2C((uint64_t)&v49, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v14);

  v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v14, v11);
  v31 = *(void **)(*(_QWORD *)&v22[v27] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v32 = v31;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974627573, 0xE800000000000000, &v49, &v47);
  sub_100010F2C((uint64_t)&v47, &qword_100808F20);
  sub_100010F2C((uint64_t)&v49, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v14);

  v30(v14, v11);
  v33 = *(void **)(*(_QWORD *)&v22[v27] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v34 = v33;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6B726F77747261, 0xE700000000000000, &v49, &v47);
  sub_100010F2C((uint64_t)&v47, &qword_100808F20);
  sub_100010F2C((uint64_t)&v49, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v14);

  v30(v14, v11);
  v35 = *(void **)(*(_QWORD *)&v22[v27] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_ordinalLabel);
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v36 = v35;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x4C6C616E6964726FLL, 0xEC0000006C656261, &v49, &v47);
  sub_100010F2C((uint64_t)&v47, &qword_100808F20);
  sub_100010F2C((uint64_t)&v49, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v14);

  v30(v14, v11);
  v37 = *(_QWORD *)&v22[v27];
  v38 = *(void **)(v37 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel);
  if (v38)
  {
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v39 = v38;
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x4C676E6964616568, 0xEC0000006C656261, &v49, &v47);
    sub_100010F2C((uint64_t)&v47, &qword_100808F20);
    sub_100010F2C((uint64_t)&v49, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v14);

    v30(v14, v11);
    v37 = *(_QWORD *)&v22[v27];
  }
  v40 = *(void **)(v37 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
  if (v40)
  {
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v41 = v40;
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x7972616974726574, 0xED0000656C746954, &v49, &v47);
    sub_100010F2C((uint64_t)&v47, &qword_100808F20);
    sub_100010F2C((uint64_t)&v49, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v14);

    v30(v14, v11);
    v37 = *(_QWORD *)&v22[v27];
  }
  v42 = *(void **)(v37 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel);
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v43 = v42;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x62614C726566666FLL, 0xEA00000000006C65, &v49, &v47);
  sub_100010F2C((uint64_t)&v47, &qword_100808F20);
  sub_100010F2C((uint64_t)&v49, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v14);

  v30(v14, v11);
  v44 = objc_msgSend(v22, "contentView");
  v45 = *(id *)&v22[v27];
  objc_msgSend(v44, "addSubview:", v45);

  return v22;
}

id sub_1002488AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  id result;
  char *v13;
  char *v14;
  void (*v15)(char *, _BYTE *, uint64_t);
  char *v16;
  void (*v17)(_BYTE *, uint64_t);
  char *v18;
  char *v19;
  __n128 v20;
  _BYTE v21[24];
  char v22[24];

  v1 = sub_10000DAF8((uint64_t *)&unk_10080B170);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Separator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v21[-v9];
  v11 = v0 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separator, v22, 0, 0);
  sub_100078770(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100010F2C((uint64_t)v3, (uint64_t *)&unk_10080B170);
    result = *(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView);
    if (result)
      return objc_msgSend(result, "setHidden:", 1);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v10, v3, v4);
    v13 = *(char **)(v0 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView);
    if (v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
      v14 = &v13[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
      swift_beginAccess(&v13[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v21, 33, 0);
      v15 = *(void (**)(char *, _BYTE *, uint64_t))(v5 + 24);
      v16 = v13;
      v15(v14, v7, v4);
      objc_msgSend(v16, "setNeedsLayout", swift_endAccess(v21).n128_f64[0]);
      v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v17(v7, v4);
      objc_msgSend(v16, "setHidden:", 0);

      return (id)((uint64_t (*)(_BYTE *, uint64_t))v17)(v10, v4);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
      v18 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v19 = &v18[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
      v20 = swift_beginAccess(&v18[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v21, 33, 0);
      (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 40))(v19, v7, v4, v20);
      swift_endAccess(v21);
      sub_1002493EC(v18);

      return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  return result;
}

void sub_100248B44()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  id (*v19)();
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char isEscapingClosureAtFileLocation;
  char *v25;
  __n128 v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[6];
  double v30;
  double v31;
  double v32;
  double v33;
  objc_super v34;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for Separator(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34.receiver = v1;
  v34.super_class = ObjectType;
  objc_msgSendSuper2(&v34, "layoutSubviews", v5);
  v8 = objc_msgSend(v1, "contentView");
  v9 = sub_1000951BC();
  v10 = LayoutMarginsAware<>.layoutFrame.getter(v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v30 = v10;
  v31 = v12;
  v32 = v14;
  v33 = v16;
  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView];
  if (!v17)
    goto LABEL_4;
  v18 = v17;
  if ((objc_msgSend(v18, "isHidden") & 1) != 0)
  {

LABEL_4:
    v19 = 0;
    v20 = 0;
LABEL_7:
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView], "setFrame:", v10, v12, v14, v16);
    sub_100018908((uint64_t)v19, v20);
    return;
  }
  v28 = (id)objc_opt_self(UIView);
  v20 = swift_allocObject(&unk_1007475E8, 32, 7);
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = &v30;
  v21 = swift_allocObject(&unk_100747610, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_1002494B8;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_100036D9C;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100184A1C;
  aBlock[3] = &unk_100747628;
  v22 = _Block_copy(aBlock);
  v23 = (char *)v18;
  swift_retain(v21);
  objc_msgSend(v28, "performWithoutAnimation:", v22, swift_release().n128_f64[0]);
  _Block_release(v22);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 112, 126, 44, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v25 = &v23[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
    v26 = swift_beginAccess(&v23[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], aBlock, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v7, v25, v3, v26);
    CGRect.inset(bySeparator:in:)(v7, v1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v10 = v30;
    v12 = v31;
    v19 = sub_1002494B8;
    v14 = v32;
    v16 = v33;
    goto LABEL_7;
  }
  __break(1u);
}

id sub_100248E10(char *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char v22[24];

  v4 = type metadata accessor for Separator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = &a1[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
  swift_beginAccess(&a1[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v22, 0, 0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v12, v4);
  v13 = Separator.frame(forBoundingRect:in:)(a1, v8, v9, v10, v11);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return objc_msgSend(a1, "setFrame:", v13, v15, v17, v19);
}

uint64_t sub_10024905C()
{
  return type metadata accessor for SmallLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for SmallLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100816D20;
  if (!qword_100816D20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallLockupCollectionViewCell);
  return result;
}

void sub_1002490A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1000780CC(319, (unint64_t *)&qword_10080AD00, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = "\b";
    sub_1000780CC(319, (unint64_t *)&unk_10080B140, (uint64_t (*)(uint64_t))&type metadata accessor for Separator);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100653F88;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

id sub_100249164()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView)
                           + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView));
}

double sub_100249184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _BYTE v10[24];

  v1 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView)
     + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
  swift_beginAccess(v5, v10, 0, 0);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v7 = SmallLockupLayout.Metrics.artworkSize.getter(v6);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

void sub_10024925C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView);
  v5 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v6 = *(id *)(v4 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  ArtworkView.isImageHidden.setter(1);

  v7 = *(void **)(v4 + v5);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v10 = v7;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, a2, v8, v9);

}

uint64_t sub_100249314(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E720(&qword_100816D30, type metadata accessor for SmallLockupCollectionViewCell, (uint64_t)&unk_100653FA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_100249350(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;

  type metadata accessor for SmallLockupView(0);
  if (qword_100804E70 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  v2 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v3 = sub_10000EFC4(v2, (uint64_t)qword_100865F50);
  sub_10020FE04(v3, a1, 0.0, 0.0);
  return v4;
}

id sub_1002493EC(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "addSubview:", v8);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_100249494()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1002494B8()
{
  uint64_t v0;

  return sub_100248E10(*(char **)(v0 + 16), *(double **)(v0 + 24));
}

uint64_t sub_1002494C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002494D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002494E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1002494E8()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_itemLayoutContext];
  v2 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separatorView] = 0;
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_separator];
  v5 = type metadata accessor for Separator(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v0[OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_hideSeparatorIndependentlyOfLayout] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/SmallLockupCollectionViewCell.swift", 56, 2, 48, 0);
  __break(1u);
}

uint64_t sub_1002495F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v0 = type metadata accessor for MetadataRibbonTextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for MetadataRibbonIconWithLabelView.Configuration(0);
  sub_100011980((uint64_t)v4, qword_100866420);
  v5 = sub_10000EFC4((uint64_t)v4, (uint64_t)qword_100866420);
  if (qword_100804810 != -1)
    swift_once(&qword_100804810, sub_1000BFD38);
  v6 = sub_10000EFC4(v0, (uint64_t)qword_100864DC0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v7(v3, v6, v0);
  v8 = sub_100035178();
  v9 = static UIColor.secondaryText.getter(v8);
  if (qword_100804830 != -1)
    swift_once(&qword_100804830, sub_1000BFEE0);
  v10 = sub_10000EFC4(v0, (uint64_t)qword_100864E20);
  v11 = static UIColor.secondaryText.getter(v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(_QWORD *)(v5 + v4[5]) = v9;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v5 + v4[6], v10, v0);
  *(_QWORD *)(v5 + v4[7]) = v11;
  return result;
}

char *sub_100249770(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  char *v39;
  int v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  __n128 v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  char *v57;
  uint64_t v58;
  id v59;
  id v60;
  UIFont v61;
  id v62;
  char v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  objc_class *ObjectType;
  _QWORD v93[5];
  char v94[24];
  objc_super v95;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for MetadataRibbonIconWithLabelView.Configuration(0);
  __chkstk_darwin(v9);
  v87 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetadataRibbonItemType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v83 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_10000DAF8(&qword_100816E30);
  __chkstk_darwin(v85);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8(&qword_100809018);
  __chkstk_darwin(v16);
  v84 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v82 - v22;
  v24 = type metadata accessor for MetadataRibbonIconWithLabelViewLayout.Metrics(0);
  v90 = *(_QWORD *)(v24 - 8);
  v91 = v24;
  __chkstk_darwin(v24);
  v88 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v86 = (char *)&v82 - v27;
  v28 = v4;
  ((void (*)(void))static MetadataRibbonIconWithLabelViewLayout.Metrics.standard.getter)();
  *(_QWORD *)&v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artwork] = 0;
  v29 = &v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_id];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((_QWORD *)v29 + 4) = 0;
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v30(&v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_itemType], 1, 1, v11);
  v31 = &v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_labelMaxWidth];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v32 = &v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkSize];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v33 = (uint64_t)&v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_configuration];
  if (qword_100805000 != -1)
    swift_once(&qword_100805000, sub_1002495F4);
  v89 = (char *)v9;
  v34 = sub_10000EFC4(v9, (uint64_t)qword_100866420);
  sub_10024BD20(v34, v33);
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_label] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v28[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v95.receiver = v28;
  v95.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v95, "initWithFrame:", a1, a2, a3, a4);
  v36 = (uint64_t)&v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_itemType];
  swift_beginAccess(&v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_itemType], v94, 0, 0);
  sub_100018ADC(v36, (uint64_t)v23, &qword_100809018);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v20, enum case for MetadataRibbonItemType.developer(_:), v11);
  v30(v20, 0, 1, v11);
  v37 = (uint64_t)&v15[*(int *)(v85 + 48)];
  sub_100018ADC((uint64_t)v23, (uint64_t)v15, &qword_100809018);
  sub_100018ADC((uint64_t)v20, v37, &qword_100809018);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v38((uint64_t)v15, 1, v11) == 1)
  {
    v39 = v35;
    sub_100010F2C((uint64_t)v20, &qword_100809018);
    sub_100010F2C((uint64_t)v23, &qword_100809018);
    v40 = v38(v37, 1, v11);
    v41 = v89;
    if (v40 == 1)
    {
      v42 = sub_100010F2C((uint64_t)v15, &qword_100809018);
      v43 = v86;
LABEL_10:
      static MetadataRibbonIconWithLabelViewLayout.Metrics.developer.getter(v42);
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  v44 = v84;
  sub_100018ADC((uint64_t)v15, v84, &qword_100809018);
  if (v38(v37, 1, v11) == 1)
  {
    v45 = v35;
    sub_100010F2C((uint64_t)v20, &qword_100809018);
    sub_100010F2C((uint64_t)v23, &qword_100809018);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v44, v11);
    v41 = v89;
LABEL_8:
    v42 = sub_100010F2C((uint64_t)v15, &qword_100816E30);
    v43 = v86;
    goto LABEL_11;
  }
  v46 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v83, v37, v11);
  v47 = sub_10000E720(&qword_100816E38, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonItemType, (uint64_t)&protocol conformance descriptor for MetadataRibbonItemType);
  v48 = v35;
  v49 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v46, v11, v47);
  v50 = *(void (**)(char *, uint64_t))(v12 + 8);
  v50(v46, v11);
  sub_100010F2C((uint64_t)v20, &qword_100809018);
  sub_100010F2C((uint64_t)v23, &qword_100809018);
  v50((char *)v44, v11);
  v42 = sub_100010F2C((uint64_t)v15, &qword_100809018);
  v41 = v89;
  v43 = v86;
  if ((v49 & 1) != 0)
    goto LABEL_10;
LABEL_11:
  static MetadataRibbonIconWithLabelViewLayout.Metrics.standard.getter(v42);
LABEL_12:
  v51 = &v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_metrics];
  v89 = &v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_metrics];
  v52 = swift_beginAccess(&v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_metrics], v93, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v90 + 40))(v51, v43, v91, v52);
  swift_endAccess(v93);
  objc_msgSend(v35, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v53 = OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView;
  v54 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView];
  objc_msgSend(v54, "setContentMode:", 0);
  v55 = v54;
  ArtworkView.shouldSymbolImageSelfSize.setter(1);

  v56 = *(void **)&v35[v53];
  v57 = &v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_configuration];
  v58 = v87;
  sub_10024BD20((uint64_t)&v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_configuration], v87);
  v59 = v56;
  v60 = objc_msgSend(v35, "traitCollection");
  v61.super.isa = MetadataRibbonTextStyle.font(compatibleWith:)((UITraitCollection)v60).super.isa;
  v62 = objc_msgSend(v60, "preferredContentSizeCategory");
  v63 = UIContentSizeCategory.isAccessibilityCategory.getter(v62);

  if ((v63 & 1) != 0)
    v64 = 3;
  else
    v64 = 1;
  v65 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v61.super.isa, v64);

  sub_10024BD64(v58);
  ArtworkView.preferredSymbolConfiguration.setter(v65);

  v66 = *(void **)&v57[*((int *)v41 + 7)];
  v67 = *(id *)&v35[v53];
  v68 = v66;
  ArtworkView.artworkTintColor.setter(v66);

  v69 = OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_label;
  v70 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_label];
  objc_msgSend(v70, "setTextColor:", *(_QWORD *)&v57[*((int *)v41 + 5)]);
  v71 = type metadata accessor for MetadataRibbonTextStyle(0);
  v93[3] = v71;
  v93[4] = sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
  v72 = sub_1000119C0(v93);
  (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v72, v57, v71);
  dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v93);
  v73 = v90;
  v74 = v88;
  v75 = v91;
  v76 = (*(uint64_t (**)(char *, char *, uint64_t))(v90 + 16))(v88, v89, v91);
  v77 = MetadataRibbonIconWithLabelViewLayout.Metrics.labelNumberOfLines.getter(v76);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
  objc_msgSend(v70, "setNumberOfLines:", v77);
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v35[v69]);
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v35[v53]);
  v78 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v79 = swift_allocObject(v78, 48, 7);
  *(_OWORD *)(v79 + 16) = xmmword_100640720;
  *(_QWORD *)(v79 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v79 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v80 = v35;
  UIView.registerForTraitChanges<A>(_:handler:)(v79, sub_10024B304, 0, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v79);

  return v80;
}

