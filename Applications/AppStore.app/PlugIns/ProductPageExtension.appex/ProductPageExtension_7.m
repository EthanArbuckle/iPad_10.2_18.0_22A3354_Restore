uint64_t initializeWithCopy for OpenAppActionImplementation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for OpenAppActionImplementation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for OpenAppActionImplementation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for OpenAppActionImplementation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for OpenAppActionImplementation(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenAppActionImplementation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenAppActionImplementation()
{
  return &type metadata for OpenAppActionImplementation;
}

uint64_t sub_10040B618()
{
  return sub_10000E720(&qword_10081C8B0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenAppAction, (uint64_t)&protocol conformance descriptor for Action);
}

uint64_t sub_10040B644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char v34;
  const char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char **v54;
  Class isa;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  double v73;
  id v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  const char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD aBlock[6];
  _BYTE v93[24];

  v5 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v90 = v5;
  v91 = v6;
  __chkstk_darwin(v5);
  v87 = v7;
  v88 = (char *)&v77 - ((unint64_t)(v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v77 - v9;
  v11 = type metadata accessor for AdamId(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v77 - v16;
  v18 = sub_10000DAF8(&qword_100808570);
  v19 = Promise.__allocating_init()(v18);
  v89 = a1;
  v21 = OpenAppAction.adamId.getter(v20);
  v22 = (void *)AdamId.numberValue.getter(v21);
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v17, v11);
  if (!v22)
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v38 = type metadata accessor for OSLogger(0, v24);
    sub_10000EFC4(v38, (uint64_t)qword_10086AB38);
    v39 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v40 = type metadata accessor for LogMessage(0);
    v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) | 7);
    *(_OWORD *)(v41 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000036, 0x80000001006876C0);
    Logger.error(_:)(v41, v38, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v41);
    v42 = sub_10040CCF4();
    v43 = swift_allocError(&type metadata for OpenAppActionImplementation.ImplementationError, v42, 0, 0);
    *v44 = 0;
    Promise.reject(_:)(v43);
    swift_errorRelease(v43);
    return v19;
  }
  v84 = v2;
  v86 = v19;
  v85 = a2;
  v25 = *(_QWORD *)(a2 + qword_10086B3C8);
  if (v25)
  {
    v26 = *(_QWORD *)(a2 + qword_10086B3C8 + 8);
    ObjectType = swift_getObjectType();
    v28 = swift_unknownObjectRetain(v25);
    OpenAppAction.adamId.getter(v28);
    v29 = dispatch thunk of AppStateController.stateMachine(forApp:)(v14, ObjectType, v26);
    v31 = v30;
    v32 = swift_unknownObjectRelease();
    ((void (*)(char *, uint64_t, __n128))v23)(v14, v11, v32);
    v33 = swift_getObjectType();
    v83 = v29;
    v34 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter(v33, v31);
    v35 = "RootActionRunner[ASDAppQuery]:handleOpenAppAction";
    if ((v34 & 1) != 0)
    {
      v36 = OpenAppAction.allowBetaApps.getter();
      if ((v36 & 1) != 0)
      {
        v35 = "RootActionRunner[ASDAppQuery.BetaApps]:handleOpenAppAction";
        v37 = 58;
      }
      else
      {
        v37 = 49;
      }
    }
    else
    {
      v36 = 0;
      v37 = 49;
    }
    v45 = v10;
    type metadata accessor for SignpostAggregator(0);
    v46 = static SignpostAggregator.log.getter();
    v47 = OSSignpostID.init(log:)(v46);
    v48 = static os_signpost_type_t.begin.getter(v47);
    v49 = (void *)static SignpostAggregator.log.getter();
    os_signpost(_:dso:log:name:signpostID:)(v48, &_mh_execute_header, v49, v35, v37, 2, v10);

    v50 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v51 = swift_allocObject(v50, 40, 7);
    *(_OWORD *)(v51 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v51 + 32) = v22;
    v52 = v84;
    v82 = v36;
    v80 = v37;
    v81 = v35;
    aBlock[0] = v51;
    specialized Array._endMutation()(v51);
    v53 = aBlock[0];
    if ((v36 & 1) != 0)
      v54 = &selRef_queryForBetaAppsWithStoreItemIDs_;
    else
      v54 = &selRef_queryForStoreItemIDs_;
    sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    v78 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v53);
    v79 = objc_msgSend((id)objc_opt_self(ASDAppQuery), *v54, isa);

    v56 = v90;
    v57 = v91;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v45, v90);
    sub_10040CD38(v52, (uint64_t)v93);
    v58 = *(unsigned __int8 *)(v57 + 80);
    v59 = (v58 + 33) & ~v58;
    v60 = &v87[v59];
    v61 = (unint64_t)&v87[v59] & 0xFFFFFFFFFFFFFFF8;
    v87 = v45;
    v62 = (v61 + 23) & 0xFFFFFFFFFFFFFFF8;
    v63 = (v62 + 23) & 0xFFFFFFFFFFFFFFF8;
    v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
    v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    v66 = swift_allocObject(&unk_100753020, v65 + 8, v58 | 7);
    v67 = v80;
    *(_QWORD *)(v66 + 16) = v81;
    *(_QWORD *)(v66 + 24) = v67;
    *(_BYTE *)(v66 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v66 + v59, v88, v56);
    v60[v66] = v82 & 1;
    v68 = v89;
    *(_QWORD *)(v61 + v66 + 8) = v89;
    sub_10040CE34((uint64_t)v93, v66 + v62);
    v69 = v85;
    v19 = v86;
    *(_QWORD *)(v66 + v63) = v85;
    *(_QWORD *)(v66 + v64) = v19;
    v70 = v78;
    *(_QWORD *)(v66 + v65) = v78;
    aBlock[4] = sub_10040CE6C;
    aBlock[5] = v66;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A7B0;
    aBlock[3] = &unk_100753038;
    v71 = _Block_copy(aBlock);
    v72 = v70;
    swift_retain(v68);
    swift_retain(v69);
    swift_retain(v19);
    *(_QWORD *)&v73 = swift_release().n128_u64[0];
    v74 = v79;
    objc_msgSend(v79, "executeQueryWithResultHandler:", v71, v73);
    _Block_release(v71);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v90);
    return v19;
  }
  v76 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v76, v76);
  __break(1u);
  return result;
}

double sub_10040BC2C(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  __n128 v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  int v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  double result;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  __n128 v83;
  unint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  uint64_t v102;
  void **aBlock;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t);
  void *v106;
  uint64_t (*v107)();
  _QWORD *v108;
  _BYTE v109[24];

  v97 = a8;
  v102 = a7;
  v101 = a6;
  v100 = a5;
  v98 = a9;
  v99 = a12;
  v96 = a11;
  v15 = type metadata accessor for OSLogger(0, a2);
  v94 = *(_QWORD *)(v15 - 8);
  v95 = v15;
  __chkstk_darwin(v15);
  v93 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v17);
  v91 = (uint64_t *)((char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v90 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v89 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ActionMetrics(0, v20);
  __chkstk_darwin(v21);
  v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for AdamId(0);
  __chkstk_darwin(v24);
  v26 = (void **)((char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for OpenableDestination(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v88 - v33;
  v35 = static os_signpost_type_t.end.getter(v32);
  type metadata accessor for SignpostAggregator(0);
  v36 = (void *)static SignpostAggregator.log.getter();
  os_signpost(_:dso:log:name:signpostID:)(v35, &_mh_execute_header, v36, a4, v100, v101, v102);

  if (!a1)
  {
LABEL_18:
    if ((v97 & 1) != 0)
    {
      v56 = Action.title.getter(v37);
      v58 = v57;
      v60 = v59;
      v61 = OpenAppAction.adamId.getter(v56);
      v62.n128_f64[0] = OpenAppAction.destination.getter(v61);
      v63 = Action.presentationStyle.getter(v62);
      Action.actionMetrics.getter(v64);
      v65 = type metadata accessor for OpenAppAction(0);
      swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
      v66 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(v58, v60, v26, 0, v30, v63, v23);
      v68 = v91;
      v67 = v92;
      v69 = v96;
      BaseObjectGraph.optional<A>(_:)(v91, v92, v92);
      v70 = v90;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48))(v68, 1, v67) == 1)
      {
        sub_100010F2C((uint64_t)v68, (uint64_t *)&unk_100809290);
        sub_10000DAF8(&qword_100808570);
        v71 = sub_10005ABBC();
        v72 = swift_allocError(&type metadata for GeneralActionImplementationError, v71, 0, 0);
        *v73 = 1;
        Promise.__allocating_init(error:)(v72);
      }
      else
      {
        v87 = (uint64_t)v89;
        (*(void (**)(char *, _QWORD *, uint64_t))(v70 + 32))(v89, v68, v67);
        sub_10032D7E4(v66, v69, v87);
        v74.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v70 + 8))(v87, v67);
      }
      Promise.pipe(to:)(v99, v74);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
    v26 = a13;
    if (qword_100806968 == -1)
    {
LABEL_22:
      v75 = v95;
      v76 = sub_10000EFC4(v95, (uint64_t)qword_10086AB38);
      v78 = v93;
      v77 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v76, v75);
      v79 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v80 = type metadata accessor for LogMessage(0);
      v81 = swift_allocObject(v79, ((*(unsigned __int8 *)(*(_QWORD *)(v80 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v80 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v80 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v80 - 8) + 80) | 7);
      *(_OWORD *)(v81 + 16) = xmmword_1006405F0;
      LogMessage.init(stringLiteral:)(0xD000000000000016, 0x8000000100687780);
      v106 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
      aBlock = v26;
      v82 = v26;
      static LogMessage.traceableSensitive(_:)(&aBlock);
      sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
      LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001006875A0);
      Logger.error(_:)(v81, v75, &protocol witness table for OSLogger);
      v83 = swift_bridgeObjectRelease(v81);
      (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v78, v75, v83);
      v84 = sub_10040CCF4();
      v85 = swift_allocError(&type metadata for OpenAppActionImplementation.ImplementationError, v84, 0, 0);
      *v86 = 1;
      Promise.reject(_:)(v85);
      swift_errorRelease(v85);
      return result;
    }
LABEL_27:
    swift_once(&qword_100806968, sub_10050332C);
    goto LABEL_22;
  }
  if (!((unint64_t)a1 >> 62))
  {
    v38 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v38)
      goto LABEL_4;
    goto LABEL_17;
  }
  if (a1 >= 0)
    v55 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v55 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v55))
  {
LABEL_17:
    v37 = swift_bridgeObjectRelease(a1);
    goto LABEL_18;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_27;
  }
  v39 = *(id *)(a1 + 32);
LABEL_7:
  v40 = v39;
  swift_bridgeObjectRelease(a1);
  v41 = v98;
  v43 = OpenAppAction.destination.getter(v42);
  v44 = (*(uint64_t (**)(char *, uint64_t, double))(v28 + 88))(v34, v27, v43);
  if (v44 == enum case for OpenableDestination.app(_:))
  {
    v45 = (void *)objc_opt_self(ASDAppLibrary);
    sub_10040CD38(a10, (uint64_t)v109);
    v46 = (_QWORD *)swift_allocObject(&unk_1007530C0, 56, 7);
    sub_10040CE34((uint64_t)v109, (uint64_t)(v46 + 2));
    v47 = v96;
    v46[4] = v41;
    v46[5] = v47;
    v48 = v99;
    v46[6] = v99;
    v107 = sub_10040CF38;
    v108 = v46;
    aBlock = _NSConcreteStackBlock;
    v104 = 1107296256;
    v105 = sub_10004A774;
    v106 = &unk_1007530D8;
    v49 = _Block_copy(&aBlock);
    swift_retain(v41);
    swift_retain(v47);
    swift_retain(v48);
    objc_msgSend(v45, "launchApp:withResultHandler:", v40, v49, swift_release().n128_f64[0]);
LABEL_11:

    _Block_release(v49);
    return result;
  }
  if (v44 == enum case for OpenableDestination.messages(_:))
  {
    v50 = (void *)objc_opt_self(ASDAppLibrary);
    sub_10040CD38(a10, (uint64_t)v109);
    v51 = (_QWORD *)swift_allocObject(&unk_100753070, 56, 7);
    sub_10040CE34((uint64_t)v109, (uint64_t)(v51 + 2));
    v52 = v96;
    v51[4] = v41;
    v51[5] = v52;
    v53 = v99;
    v51[6] = v99;
    v107 = sub_10040CF38;
    v108 = v51;
    aBlock = _NSConcreteStackBlock;
    v104 = 1107296256;
    v105 = sub_10004A774;
    v106 = &unk_100753088;
    v49 = _Block_copy(&aBlock);
    swift_retain(v41);
    swift_retain(v52);
    swift_retain(v53);
    objc_msgSend(v50, "launchMessagesExtensionForApp:withResultHandler:", v40, v49, swift_release().n128_f64[0]);
    goto LABEL_11;
  }

  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v27);
  return result;
}

uint64_t sub_10040C3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  unint64_t v55;
  __n128 v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[3];
  void *v68;
  double (*v69)();
  uint64_t v70;
  _BYTE v71[16];

  v60 = a3;
  v66 = a2;
  v4 = type metadata accessor for ActionOutcome(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for AdamId(0);
  v8 = *(_QWORD *)(v65 - 8);
  v9 = __chkstk_darwin(v65);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0, v9);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v46 = v64;
    v47 = sub_10000EFC4(v64, (uint64_t)qword_10086AB38);
    v49 = v62;
    v48 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v47, v46);
    v50 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v51 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v52 = swift_allocObject(v50, ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ 2 * *(_QWORD *)(v51 + 72), *(unsigned __int8 *)(v51 + 80) | 7);
    *(_OWORD *)(v52 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000013, 0x80000001006877A0);
    v68 = (void *)v65;
    sub_1000119C0(aBlock);
    OpenAppAction.adamId.getter(v53);
    static LogMessage.traceableSensitive(_:)(aBlock);
    sub_100010F2C((uint64_t)aBlock, &qword_100808F20);
    Logger.error(_:)(v52, v46, &protocol witness table for OSLogger);
    v54 = swift_bridgeObjectRelease(v52);
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v49, v46, v54);
    sub_10000DAF8(&qword_100808570);
    v55 = sub_10040CCF4();
    v43 = swift_allocError(&type metadata for OpenAppActionImplementation.ImplementationError, v55, 0, 0);
    v45 = 1;
    goto LABEL_9;
  }
  if (a1 == 1)
  {
    v23 = v20;
    sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
    v25 = (void *)static OS_dispatch_queue.main.getter(v24);
    sub_10040CD38(v61, (uint64_t)v71);
    v26 = swift_allocObject(&unk_100753110, 40, 7);
    sub_10040CE34((uint64_t)v71, v26 + 16);
    v27 = v60;
    *(_QWORD *)(v26 + 32) = v60;
    v69 = sub_10040CFE4;
    v70 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000924A0;
    v68 = &unk_100753128;
    v28 = _Block_copy(aBlock);
    swift_retain(v27);
    v29 = swift_release();
    static DispatchQoS.unspecified.getter(v29);
    aBlock[0] = _swiftEmptyArrayStorage;
    v30 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
    v32 = sub_10004EA04();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v14, v30);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v22, v17, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v23);
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v33 = v64;
    v34 = sub_10000EFC4(v64, (uint64_t)qword_10086AB38);
    v36 = v62;
    v35 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v34, v33);
    v37 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v38 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v39 = swift_allocObject(v37, ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ 2 * *(_QWORD *)(v38 + 72), *(unsigned __int8 *)(v38 + 80) | 7);
    *(_OWORD *)(v39 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000017, 0x80000001006877C0);
    v68 = (void *)v65;
    sub_1000119C0(aBlock);
    OpenAppAction.adamId.getter(v40);
    static LogMessage.traceableSensitive(_:)(aBlock);
    sub_100010F2C((uint64_t)aBlock, &qword_100808F20);
    Logger.error(_:)(v39, v33, &protocol witness table for OSLogger);
    v41 = swift_bridgeObjectRelease(v39);
    (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v36, v33, v41);
    sub_10000DAF8(&qword_100808570);
    v42 = sub_10040CCF4();
    v43 = swift_allocError(&type metadata for OpenAppActionImplementation.ImplementationError, v42, 0, 0);
    v45 = 2;
LABEL_9:
    *v44 = v45;
    return Promise.__allocating_init(error:)(v43);
  }
  if (swift_unknownObjectWeakLoadStrong(v61))
  {
    OpenAppAction.adamId.getter(v57);
    sub_1006133E8((uint64_t)v11, 1);
    v58 = swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v65, v58);
  }
  sub_10000DAF8(&qword_100808570);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionOutcome.performed(_:), v4);
  return Promise.__allocating_init(value:)(v7);
}

double sub_10040CA00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v2 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v33 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AlertActionStyle(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0, v12);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16._object = (void *)0x80000001006877E0;
  v16._countAndFlagsBits = 0xD000000000000021;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v18 = localizedString(_:comment:)(v16, v17);
  v19._countAndFlagsBits = 0xD000000000000023;
  v19._object = (void *)0x8000000100687810;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = localizedString(_:comment:)(v19, v20);
  static ActionMetrics.notInstrumented.getter(v21._countAndFlagsBits);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for AlertActionStyle.normal(_:), v8);
  v22 = type metadata accessor for AlertAction(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = v34;
  v24 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)(v18._countAndFlagsBits, v18._object, v21._countAndFlagsBits, v21._object, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 1, v11, 0, 0, 1, 0, v15);
  BaseObjectGraph.optional<A>(_:)(v4, v5, v5);
  v25 = v33;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v4, 1, v5) == 1)
  {
    sub_100010F2C((uint64_t)v4, (uint64_t *)&unk_100809290);
    sub_10000DAF8(&qword_100808570);
    v26 = sub_10005ABBC();
    v27 = swift_allocError(&type metadata for GeneralActionImplementationError, v26, 0, 0);
    *v28 = 1;
    Promise.__allocating_init(error:)(v27);
  }
  else
  {
    v29 = (uint64_t)v32;
    (*(void (**)(char *, _QWORD *, uint64_t))(v25 + 32))(v32, v4, v5);
    sub_10032D834(v24, v23, v29);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v5);
  }
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10040CCEC(uint64_t *a1, uint64_t a2)
{
  return sub_10040B644(*a1, a2);
}

unint64_t sub_10040CCF4()
{
  unint64_t result;

  result = qword_100821E98;
  if (!qword_100821E98)
  {
    result = swift_getWitnessTable(&unk_100660E1C, &type metadata for OpenAppActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100821E98);
  }
  return result;
}

uint64_t sub_10040CD38(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_10040CD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + v0;
  v8 = ((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v7 + 8));
  swift_unknownObjectWeakDestroy(v0 + v8);
  swift_release(*(_QWORD *)(v0 + v9));
  swift_release(*(_QWORD *)(v0 + v10));

  return swift_deallocObject(v0, v11 + 8, v6);
}

uint64_t sub_10040CE34(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

double sub_10040CE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v5 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = ((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_10040BC2C(a1, v9, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + v6, *(unsigned __int8 *)(v2 + v7), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), v2 + v8, *(_QWORD *)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void ***)(v2+ ((((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10040CF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10040CF2C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10040CF40()
{
  _QWORD *v0;

  swift_unknownObjectWeakDestroy(v0 + 2);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

double sub_10040CF7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 v3;
  double result;

  v2 = v1[6];
  sub_10040C3D4(a1, v1[4], v1[5]);
  Promise.pipe(to:)(v2, v3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10040CFB8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10040CFE4()
{
  uint64_t v0;

  return sub_10040CA00(v0 + 16, *(_QWORD *)(v0 + 32));
}

uint64_t storeEnumTagSinglePayload for OpenAppActionImplementation.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10040D03C + 4 * byte_100660D15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10040D070 + 4 * byte_100660D10[v4]))();
}

uint64_t sub_10040D070(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040D078(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10040D080);
  return result;
}

uint64_t sub_10040D08C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10040D094);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10040D098(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040D0A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenAppActionImplementation.ImplementationError()
{
  return &type metadata for OpenAppActionImplementation.ImplementationError;
}

unint64_t sub_10040D0C0()
{
  unint64_t result;

  result = qword_100821EA0;
  if (!qword_100821EA0)
  {
    result = swift_getWitnessTable(&unk_100660DF4, &type metadata for OpenAppActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100821EA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalActionImplementation()
{
  return &type metadata for LocalActionImplementation;
}

unint64_t sub_10040D130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100821EA8;
  if (!qword_100821EA8)
  {
    v1 = type metadata accessor for LocalAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100821EA8);
  }
  return result;
}

uint64_t sub_10040D178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalAction.perform()();
  sub_10000DAF8(&qword_100808570);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  return Promise.__allocating_init(value:)(v3);
}

ValueMetadata *type metadata accessor for FamilyCircleActionImplementation()
{
  return &type metadata for FamilyCircleActionImplementation;
}

unint64_t sub_10040D230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100821EB0;
  if (!qword_100821EB0)
  {
    v1 = type metadata accessor for FamilyCircleAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100821EB0);
  }
  return result;
}

uint64_t sub_10040D278(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v2 = type metadata accessor for ActionOutcome(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "success", v4))
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for ActionOutcome.performed(_:), v2);
    Promise.resolve(_:)(v6);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    v8 = objc_msgSend(a1, "error");
    v9 = sub_10040D6E4();
    v10 = swift_allocError(&type metadata for FamilyCircleActionImplementation.ImplementationError, v9, 0, 0);
    *v11 = v8;
    Promise.reject(_:)(v10);
    return swift_errorRelease(v10);
  }
}

uint64_t sub_10040D38C()
{
  return sub_10040D394();
}

uint64_t sub_10040D394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  int v12;
  id *v13;
  id v14;
  void (*v15)(char *, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  NSDictionary v25;
  id v26;
  void *v27;
  _QWORD aBlock[6];

  v1 = type metadata accessor for FamilyCircleAction.EventType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)aBlock - v6;
  v8 = sub_10000DAF8(&qword_100808570);
  v9 = Promise.__allocating_init()(v8);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0);
  v11 = (void *)sub_100302718(Strong);

  FamilyCircleAction.eventType.getter();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v12 == enum case for FamilyCircleAction.EventType.initiate(_:))
  {
    v13 = (id *)&FACircleEventTypeInitiate;
LABEL_5:
    v14 = *v13;
    goto LABEL_7;
  }
  if (v12 == enum case for FamilyCircleAction.EventType.addFamilyMember(_:))
  {
    v13 = (id *)&FACircleEventTypeAddFamilyMemberV3;
    goto LABEL_5;
  }
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14 = FACircleEventTypeInitiate;
  v15(v4, v1);
LABEL_7:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  v16 = objc_msgSend(objc_allocWithZone((Class)FACircleContext), "initWithEventType:", v14);

  FamilyCircleAction.clientName.getter();
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setClientName:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21 = objc_msgSend(v20, "bundleIdentifier");

  objc_msgSend(v16, "setClientBundleID:", v21);
  v22 = FamilyCircleAction.additionalParameters.getter();
  if (v22)
  {
    v24 = v22;
    v25.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v25.super.isa = 0;
  }
  objc_msgSend(v16, "setAdditionalParameters:", v25.super.isa, v23);

  v26 = objc_msgSend(objc_allocWithZone((Class)FACircleStateController), "initWithPresenter:", v11);
  aBlock[4] = sub_10040D6C4;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004AFAC;
  aBlock[3] = &unk_100753330;
  v27 = _Block_copy(aBlock);
  swift_retain(v9);
  objc_msgSend(v26, "performWithContext:completion:", v16, v27, swift_release().n128_f64[0]);
  _Block_release(v27);

  return v9;
}

uint64_t sub_10040D6C4(void *a1)
{
  return sub_10040D278(a1);
}

uint64_t sub_10040D6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10040D6DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10040D6E4()
{
  unint64_t result;

  result = qword_100821EB8;
  if (!qword_100821EB8)
  {
    result = swift_getWitnessTable(&unk_100660FB4, &type metadata for FamilyCircleActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100821EB8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FamilyCircleActionImplementation.ImplementationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

uint64_t destroy for FamilyCircleActionImplementation.ImplementationError(_QWORD *a1)
{
  return swift_errorRelease(*a1);
}

uint64_t *assignWithCopy for FamilyCircleActionImplementation.ImplementationError(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *a2;
  swift_errorRetain(*a2);
  *a1 = v4;
  swift_errorRelease(v3);
  return a1;
}

uint64_t *assignWithTake for FamilyCircleActionImplementation.ImplementationError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_errorRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FamilyCircleActionImplementation.ImplementationError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FamilyCircleActionImplementation.ImplementationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FamilyCircleActionImplementation.ImplementationError()
{
  return &type metadata for FamilyCircleActionImplementation.ImplementationError;
}

int64x2_t sub_10040D894()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404F000000000000uLL);
  xmmword_100821EC0 = (__int128)result;
  return result;
}

int64x2_t sub_10040D8AC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4045000000000000uLL);
  xmmword_100821ED0 = (__int128)result;
  return result;
}

void sub_10040D8C4()
{
  qword_100821EE0 = 0x4032000000000000;
}

int64x2_t sub_10040D8D4()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_100821EE8 = (__int128)result;
  return result;
}

void sub_10040D8EC()
{
  qword_100821EF8 = 0x402A000000000000;
}

__n128 sub_10040D8FC()
{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  xmmword_100821F00 = (__int128)result;
  return result;
}

void sub_10040D910()
{
  qword_100821F10 = 0x4010000000000000;
}

char *sub_10040D920(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  objc_class *ObjCClassFromMetadata;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double left;
  double bottom;
  double right;
  char *v21;
  objc_super v23;

  v9 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1;
  v10 = type metadata accessor for ArtworkView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v10);
  v12 = objc_allocWithZone(ObjCClassFromMetadata);
  v13 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v12, "init");
  v14 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v15 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v16 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon4;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_iconCount] = 0;

  v23.receiver = v13;
  v23.super_class = (Class)type metadata accessor for CollectionLockupArtwork();
  v17 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v21 = (char *)v17;
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1]);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2]);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3]);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon4]);

  return v21;
}

id sub_10040DB18(id result)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL8 v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_iconCount;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_iconCount];
  if ((id)v3 != result)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2];
    v5 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3];
    v6 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon4];
    v7 = v3 < 1;
    v8 = *(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1];
    v9 = v4;
    v10 = v5;
    v11 = v6;
    objc_msgSend(v8, "setHidden:", v7);
    objc_msgSend(v9, "setHidden:", *(_QWORD *)&v1[v2] < 2);
    objc_msgSend(v10, "setHidden:", *(_QWORD *)&v1[v2] < 3);
    objc_msgSend(v11, "setHidden:", *(_QWORD *)&v1[v2] < 4);

    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_10040DDEC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_iconCount);
  if (v3 == 3)
    return sub_10040E180(a1);
  if (v3 == 2)
    return sub_10040DF3C(a1);
  if (v3 != 1)
    return sub_10040E46C(a1);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1);
  v4 = qword_100805BE8;
  v5 = v11;
  if (v4 != -1)
    swift_once(&qword_100805BE8, sub_10040D894);
  v6 = xmmword_100821EC0;
  v7 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v12, v7, &protocol witness table for UIView, *(double *)&v6, *((double *)&v6 + 1));

  v8 = v13;
  v9 = v14;
  sub_100010F08(v12, v13);
  Measurable.placeable.getter(a1, v8, *(_QWORD *)(v9 + 8));
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);
}

uint64_t sub_10040DF3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DisjointStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v21 - v9;
  DisjointStack.init(with:)(0, 0);
  v21[0] = *(id *)(v1 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1);
  v11 = qword_100805BF0;
  v12 = v21[0];
  if (v11 != -1)
    swift_once(&qword_100805BF0, sub_10040D8AC);
  v13 = xmmword_100821ED0;
  v14 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v22, v14, &protocol witness table for UIView, *(double *)&v13, *((double *)&v13 + 1));

  v15 = v23;
  v16 = v24;
  sub_100010F08(v22, v23);
  Measurable.placeable.getter(v21, v15, *(_QWORD *)(v16 + 8));
  DisjointStack.inserting(_:at:with:)(v21, 0, 1, sub_10040E17C, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v21);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v22);
  v21[0] = *(id *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2);
  LayoutView.withMeasurements(representing:)(v22, v14, &protocol witness table for UIView, *(double *)&xmmword_100821ED0, *((double *)&xmmword_100821ED0 + 1));
  v18 = v23;
  v19 = v24;
  sub_100010F08(v22, v23);
  Measurable.placeable.getter(v21, v18, *(_QWORD *)(v19 + 8));
  a1[3] = v4;
  a1[4] = &protocol witness table for DisjointStack;
  sub_1000119C0(a1);
  DisjointStack.inserting(_:at:with:)(v21, 0, 1, sub_10040EDB4, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v21);
  v17(v10, v4);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v22);
}

uint64_t sub_10040E180@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for DisjointStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v24 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v24 - v12;
  if (qword_100805C00 != -1)
    swift_once(&qword_100805C00, sub_10040D8D4);
  v14 = xmmword_100821EE8;
  DisjointStack.init(with:)(0, 0);
  v24[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1);
  v15 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v25, v15, &protocol witness table for UIView, *(double *)&v14, *((double *)&v14 + 1));
  v16 = v26;
  v17 = v27;
  sub_100010F08(v25, v26);
  Measurable.placeable.getter(v24, v16, *(_QWORD *)(v17 + 8));
  DisjointStack.inserting(_:at:with:)(v24, 0, 1, sub_10040E17C, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v24);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  v24[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2);
  LayoutView.withMeasurements(representing:)(v25, v15, &protocol witness table for UIView, *(double *)&v14, *((double *)&v14 + 1));
  v19 = v26;
  v20 = v27;
  sub_100010F08(v25, v26);
  Measurable.placeable.getter(v24, v19, *(_QWORD *)(v20 + 8));
  DisjointStack.inserting(_:at:with:)(v24, 0, 1, sub_10040EDD0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v24);
  v18(v10, v4);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  v24[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3);
  LayoutView.withMeasurements(representing:)(v25, v15, &protocol witness table for UIView, *(double *)&v14, *((double *)&v14 + 1));
  v21 = v26;
  v22 = v27;
  sub_100010F08(v25, v26);
  Measurable.placeable.getter(v24, v21, *(_QWORD *)(v22 + 8));
  a1[3] = v4;
  a1[4] = &protocol witness table for DisjointStack;
  sub_1000119C0(a1);
  DisjointStack.inserting(_:at:with:)(v24, 0, 1, sub_10040EEF0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v24);
  v18(v13, v4);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
}

uint64_t sub_10040E46C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[5];
  _QWORD v46[3];
  uint64_t v47;
  _QWORD *v48;
  _QWORD v49[3];
  uint64_t v50;
  _QWORD *v51;

  v2 = v1;
  v44 = a1;
  v3 = type metadata accessor for HorizontalStack(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - v8;
  v43 = type metadata accessor for VerticalStack(0);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v42 = (char *)&v39 - v14;
  if (qword_100805C10 != -1)
    swift_once(&qword_100805C10, sub_10040D8FC);
  v15 = xmmword_100821F00;
  VerticalStack.init(with:)(0, 0, v13);
  HorizontalStack.init(with:)(0, 0, v16);
  v46[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1);
  v17 = type metadata accessor for ArtworkView(0);
  v40 = v1;
  LayoutView.withMeasurements(representing:)(v49, v17, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v18 = v50;
  v19 = v51;
  sub_100010F08(v49, v50);
  Measurable.placeable.getter(v46, v18, v19[1]);
  HorizontalStack.adding(_:with:)(v46, sub_10040EFFC, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v46);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v6, v3);
  v21 = v20;
  v39 = v20;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  v49[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2);
  LayoutView.withMeasurements(representing:)(v46, v17, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v22 = v47;
  v23 = v48;
  sub_100010F08(v46, v47);
  Measurable.placeable.getter(v45, v22, v23[1]);
  v50 = v3;
  v51 = &protocol witness table for HorizontalStack;
  sub_1000119C0(v49);
  HorizontalStack.adding(_:with:)(v45, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v45);
  v21(v9, v3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v46);
  v24 = v42;
  VerticalStack.adding(_:with:)(v49, sub_10040F008, 0);
  v41 = *(_QWORD *)(v41 + 8);
  v25 = v43;
  ((void (*)(char *, uint64_t))v41)(v11, v43);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  HorizontalStack.init(with:)(0, 0, v26);
  v27 = v40;
  v46[0] = *(_QWORD *)(v40 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3);
  LayoutView.withMeasurements(representing:)(v49, v17, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v28 = v50;
  v29 = v51;
  sub_100010F08(v49, v50);
  Measurable.placeable.getter(v46, v28, v29[1]);
  HorizontalStack.adding(_:with:)(v46, sub_10040EFFC, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v46);
  v30 = v6;
  v31 = v39;
  v39(v30, v3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  v46[0] = *(_QWORD *)(v27 + OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon4);
  LayoutView.withMeasurements(representing:)(v49, v17, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v32 = v50;
  v33 = v51;
  sub_100010F08(v49, v50);
  Measurable.placeable.getter(v45, v32, v33[1]);
  v47 = v3;
  v48 = &protocol witness table for HorizontalStack;
  sub_1000119C0(v46);
  HorizontalStack.adding(_:with:)(v45, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v45);
  v31(v9, v3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  v50 = v25;
  v51 = &protocol witness table for VerticalStack;
  sub_1000119C0(v49);
  VerticalStack.adding(_:with:)(v46, 0, 0);
  ((void (*)(char *, uint64_t))v41)(v24, v25);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v46);
  v35 = static Center.Axis.neither.getter(v34);
  v36 = type metadata accessor for Center(0);
  v37 = v44;
  v44[3] = v36;
  v37[4] = &protocol witness table for Center;
  sub_1000119C0(v37);
  return Center.init(_:filling:)(v49, v35);
}

double sub_10040E918(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double result;
  id *v32;
  id *v33;
  id *v34;
  id *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v38 = a2;
  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, "setNeedsLayout", v9);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v30 = a1;
    else
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
    {
LABEL_3:
      if (v12 < 1)
      {
        __break(1u);
        JUMPOUT(0x10040EC58);
      }
      v13 = 0;
      v34 = (id *)&v2[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon4];
      v33 = (id *)&v2[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3];
      v32 = (id *)&v2[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2];
      v35 = (id *)&v2[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1];
      v39 = a1 & 0xC000000000000001;
      while (v39)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        if (v13 <= 3)
          goto LABEL_11;
LABEL_6:
        ++v13;
        swift_release();
        if (v12 == v13)
          goto LABEL_24;
      }
      swift_retain(*(_QWORD *)(a1 + 8 * v13 + 32));
LABEL_11:
      v16 = v35;
      switch(v13)
      {
        case 0uLL:
          goto LABEL_15;
        case 1uLL:
          v16 = v32;
          goto LABEL_15;
        case 2uLL:
          v16 = v33;
          goto LABEL_15;
        case 3uLL:
          v16 = v34;
LABEL_15:
          v17 = *v16;
          v19 = Artwork.crop.getter(v18);
          v20 = Artwork.Crop.preferredContentMode.getter(v19);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
          if (qword_100805BE8 != -1)
            swift_once(&qword_100805BE8, sub_10040D894);
          v21 = Artwork.config(_:mode:prefersLayeredImage:)(v20, 0, *(double *)&xmmword_100821EC0, *((double *)&xmmword_100821EC0 + 1));
          Artwork.style.getter(v21);
          v22 = ArtworkView.style.setter(v7);
          *(_QWORD *)&v23 = Artwork.contentMode.getter(v22).n128_u64[0];
          v25 = ArtworkLoaderConfig.size.getter(objc_msgSend(v17, "setContentMode:", v24, v23));
          v27 = ArtworkView.imageSize.setter(v25, v26);
          v28 = Artwork.backgroundColor.getter(v27);
          if (!v28)
          {
            v29 = sub_100035178();
            v28 = static UIColor.placeholderBackground.getter(v29);
          }
          ArtworkView.backgroundColor.setter(v28);
          objc_msgSend(v17, "setContentMode:", v20);
          v14 = type metadata accessor for ArtworkView(0);
          v15 = sub_1000116A4();
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2, 1, v17, v14, v15);
          swift_release();

          break;
        default:
          goto LABEL_6;
      }
      goto LABEL_6;
    }
  }
LABEL_24:
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

id sub_10040EC68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionLockupArtwork();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionLockupArtwork()
{
  return objc_opt_self(_TtC20ProductPageExtension23CollectionLockupArtwork);
}

double sub_10040ED10(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_10040DDEC(v10);
  v6 = v11;
  v7 = v12;
  sub_100010F08(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v10);
  return v8;
}

uint64_t sub_10040EDB4(uint64_t a1)
{
  return sub_10040EDEC(a1, &qword_100805BF8, &qword_100821EE0, (uint64_t)sub_10040D8C4);
}

uint64_t sub_10040EDD0(uint64_t a1)
{
  return sub_10040EDEC(a1, &qword_100805C08, &qword_100821EF8, (uint64_t)sub_10040D8EC);
}

uint64_t sub_10040EDEC(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;

  v7 = type metadata accessor for DisjointStack.EdgePosition(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*a2 != -1)
    swift_once(a2, a4);
  v11 = *a3;
  v10[3] = &type metadata for CGFloat;
  v10[4] = &protocol witness table for CGFloat;
  *v10 = v11;
  v12 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, enum case for DisjointStack.EdgePosition.anchored(_:), v7);
  DisjointStack.Properties.topEdge.setter(v10);
  v10[3] = &type metadata for CGFloat;
  v10[4] = &protocol witness table for CGFloat;
  *v10 = v11;
  v13(v10, v12, v7);
  return DisjointStack.Properties.leadingEdge.setter(v10);
}

uint64_t sub_10040EEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t);
  uint64_t v8;

  v0 = type metadata accessor for DisjointStack.EdgePosition(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100805C08 != -1)
    swift_once(&qword_100805C08, sub_10040D8EC);
  v4 = *(double *)&qword_100821EF8 + *(double *)&qword_100821EF8;
  *((_QWORD *)v3 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v3 + 4) = &protocol witness table for CGFloat;
  *(double *)v3 = v4;
  v5 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v6(v3, enum case for DisjointStack.EdgePosition.anchored(_:), v0);
  DisjointStack.Properties.topEdge.setter(v3);
  *((_QWORD *)v3 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v3 + 4) = &protocol witness table for CGFloat;
  *(double *)v3 = v4;
  v6(v3, v5, v0);
  return DisjointStack.Properties.leadingEdge.setter(v3);
}

uint64_t sub_10040EFFC(uint64_t a1)
{
  return sub_10040F014(a1, (uint64_t (*)(_QWORD *))&HorizontalStack.Properties.trailingSpacing.setter);
}

uint64_t sub_10040F008(uint64_t a1)
{
  return sub_10040F014(a1, (uint64_t (*)(_QWORD *))&VerticalStack.Properties.bottomSpacing.setter);
}

uint64_t sub_10040F014(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  _QWORD v4[5];

  if (qword_100805C18 != -1)
    swift_once(&qword_100805C18, sub_10040D910);
  v4[3] = &type metadata for CGFloat;
  v4[4] = &protocol witness table for CGFloat;
  v4[0] = qword_100821F10;
  return a2(v4);
}

void sub_10040F08C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjCClassFromMetadata;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon1;
  v2 = type metadata accessor for ArtworkView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v2);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v4 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon2;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v5 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon3;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v6 = OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_icon4;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension23CollectionLockupArtwork_iconCount] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/CollectionLockupArtwork.swift", 50, 2, 56, 0);
  __break(1u);
}

char *sub_10040F17C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  id v26;
  double left;
  double bottom;
  double right;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  objc_class *ObjectType;
  objc_super v35;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView;
  v19 = qword_100806058;
  v20 = v5;
  if (v19 != -1)
    swift_once(&qword_100806058, sub_1004C5F24);
  v21 = sub_10000EFC4(v14, (uint64_t)qword_1008691F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
  if (qword_100805C20 != -1)
    swift_once(&qword_100805C20, sub_10040F4C4);
  v22 = sub_10000EFC4(v10, (uint64_t)qword_100821F68);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v22, v10);
  v23 = objc_allocWithZone((Class)type metadata accessor for ArcadeLockupView(0));
  *(_QWORD *)&v5[v18] = sub_10016E158((uint64_t)v17, (uint64_t)v13, 0.0, 0.0, 0.0, 0.0);
  v24 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_backgroundEffectView;
  if (qword_100805C28 != -1)
    swift_once(&qword_100805C28, sub_10040F734);
  *(_QWORD *)&v20[v24] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", qword_100821F80);
  swift_weakInit(&v20[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsCalculator]);
  v25 = &v20[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v20[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_isExpanded] = 0;
  v20[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_sizeCategory] = 7;

  v35.receiver = v20;
  v35.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v30 = (char *)v26;
  objc_msgSend(v30, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_backgroundEffectView]);
  v31 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView;
  objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView], "setClipsToBounds:", 1);
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[v31]);

  return v30;
}

uint64_t sub_10040F4C4(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, char *, uint64_t);
  void (*v13)(char *, uint64_t);
  _QWORD *v14;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  _QWORD v21[3];
  uint64_t v22;
  void *v23;
  _QWORD v24[5];
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[6];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  sub_100011980(v5, qword_100821F68);
  v19 = sub_10000EFC4(v5, (uint64_t)qword_100821F68);
  v28[3] = &type metadata for Double;
  v28[4] = &protocol witness table for Double;
  v27[4] = &protocol witness table for Double;
  v28[0] = 0x4053800000000000;
  v27[3] = &type metadata for Double;
  v27[0] = 0x4024000000000000;
  v26[3] = &type metadata for Double;
  v26[4] = &protocol witness table for Double;
  v25[4] = &protocol witness table for Double;
  v26[0] = 0x4034000000000000;
  v25[3] = &type metadata for Double;
  v25[0] = 0x402C000000000000;
  if (qword_100806058 != -1)
    swift_once(&qword_100806058, sub_1004C5F24);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_1008691F8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v18 = v7;
  v17(v4, v7, v6);
  v8 = enum case for FontSource.useCase(_:);
  v9 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v9(v4, enum case for FontSource.useCase(_:), v1);
  v10 = type metadata accessor for StaticDimension(0);
  v24[3] = v10;
  v24[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v24);
  v22 = v1;
  v23 = &protocol witness table for FontSource;
  v11 = sub_1000119C0(v21);
  v12 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v12(v11, v4, v1);
  StaticDimension.init(_:scaledLike:)(v21, 20.0);
  v13 = (void (*)(char *, uint64_t))v2[1];
  v13(v4, v1);
  v17(v4, v18, v6);
  v9(v4, v8, v1);
  v22 = v10;
  v23 = &protocol witness table for StaticDimension;
  sub_1000119C0(v21);
  v20[3] = v1;
  v20[4] = &protocol witness table for FontSource;
  v14 = sub_1000119C0(v20);
  v12(v14, v4, v1);
  StaticDimension.init(_:scaledLike:)(v20, 16.0);
  v13(v4, v1);
  return ArcadeLockupLayout.Metrics.init(minimumHeight:offerButtonMargin:wordmarkTopSpace:wordmarkSpace:subtitleLeadingSpace:bottomSpace:numberOfLinesForSubtitle:)(v28, v27, v26, v25, v24, v21, 0);
}

id sub_10040F734()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 9);
  qword_100821F80 = (uint64_t)result;
  return result;
}

void sub_10040F89C()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double MinX;
  char *v14;
  void (*v15)(__n128);
  uint64_t v16;
  __n128 v17;
  char v18[24];
  objc_super v19;
  CGRect v20;
  CGRect v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v19.receiver = v0;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_backgroundEffectView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "_effectWithBlurRadius:scale:", 50.0, 0.125);
  objc_msgSend(v2, "_setEffect:", v3);

  v4 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView;
  v5 = *(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView];
  LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  objc_msgSend(v5, "sizeThatFits:", v6, v7);
  v9 = v8;
  v11 = v10;

  v12 = *(id *)&v0[v4];
  v20.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  MinX = CGRectGetMinX(v20);
  v21.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  objc_msgSend(v12, "setFrame:", MinX, CGRectGetMidY(v21) + v11 * -0.5, v9, v11);

  v14 = &v0[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock], v18, 0, 0);
  v15 = *(void (**)(__n128))v14;
  if (*(_QWORD *)v14)
  {
    v16 = *((_QWORD *)v14 + 1);
    v17 = swift_retain(v16);
    v15(v17);
    sub_100018908((uint64_t)v15, v16);
  }
}

void sub_10040FA78()
{
  char *v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v1 = objc_msgSend(v0, "overrideUserInterfaceStyle");
  v2 = &kCAFilterPlusD;
  if (v1 != (id)1)
    v2 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView;
  v7 = objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView]+ OBJC_IVAR____TtC20ProductPageExtension16ArcadeLockupView_wordmarkView), "layer");
  objc_msgSend(v7, "setCompositingFilter:", v5);

  v8 = objc_msgSend(*(id *)(*(_QWORD *)&v0[v6] + OBJC_IVAR____TtC20ProductPageExtension16ArcadeLockupView_subtitleLabel), "layer");
  objc_msgSend(v8, "setCompositingFilter:", v5);

  v9 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)&v0[v6] + OBJC_IVAR____TtC20ProductPageExtension16ArcadeLockupView_offerButton)+ OBJC_IVAR____TtC20ProductPageExtension11OfferButton_subtitleLabel), "layer");
  objc_msgSend(v9, "setCompositingFilter:", v5);

}

void sub_10040FBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  __n128 v40;
  uint64_t v41;
  _BYTE v42[40];
  _BYTE v43[24];
  _BYTE v44[24];

  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v44, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v43, 0, 0);
    if (!swift_weakLoadStrong(v15))
    {

      return;
    }
    sub_10000EF80(a3, (uint64_t)v42);
    v16 = sub_10000DAF8(&qword_10080E910);
    v17 = type metadata accessor for TodayCard(0);
    v18 = swift_dynamicCast(&v41, v42, v16, v17, 6);
    if ((v18 & 1) != 0)
    {
      v19 = TodayCard.overlay.getter(v18);
      swift_release();
      if (v19)
      {
        v20 = type metadata accessor for TodayCardArcadeLockupOverlay(0);
        if (swift_dynamicCastClass(v19, v20))
        {
          v21 = TodayCardArcadeLockupOverlay.arcadeLockup.getter();
          ArcadeLockup.impressionMetrics.getter(v21);
          v22 = swift_release();
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v22) == 1)
          {

            swift_release();
            swift_release();
            sub_1004105BC((uint64_t)v8);
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
            objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView], "frame");
            v24 = v23;
            v26 = v25;
            v28 = v27;
            v30 = v29;
            v31 = objc_msgSend(v14, "superview");
            objc_msgSend(v14, "convertRect:toView:", v31, v24, v26, v28, v30);
            v33 = v32;
            v35 = v34;
            v37 = v36;
            v39 = v38;

            ImpressionsCalculator.addElement(_:at:)(v12, v33, v35, v37, v39);
            swift_release();
            v40 = swift_release();
            (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v40);
          }
          return;
        }
        swift_release();
      }
    }

    swift_release();
  }
}

uint64_t type metadata accessor for TodayCardArcadeLockupOverlayView()
{
  return objc_opt_self(_TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView);
}

void sub_10040FF00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  sub_100410220(*a1, a2, a3, a4, a5);
}

id sub_10040FF08(char a1)
{
  _BYTE *v1;

  v1[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_isExpanded] = a1;
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_10040FF28()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_10040FF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_10040FFC8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_1000DFF0C;
}

uint64_t sub_100410038()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_100410090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_1004100EC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_100410130(uint64_t a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  __int128 v7[2];

  v2 = swift_allocObject(&unk_1007534F8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  sub_10000EF80(a1, (uint64_t)v7);
  v3 = swift_allocObject(&unk_100753520, 24, 7);
  swift_weakInit(v3 + 16);
  sub_100010E24(v7, (uint64_t)v6);
  v4 = swift_allocObject(&unk_100753548, 72, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_100010E24(v6, v4 + 32);
  return sub_1004105B0;
}

uint64_t sub_1004101F4()
{
  return sub_10000E720((unint64_t *)&qword_100821FE0, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardArcadeLockupOverlay, (uint64_t)&protocol conformance descriptor for TodayCardOverlay);
}

void sub_100410220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  char *v5;
  char *v6;
  int v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  int v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = v5;
  v10 = a5;
  v11 = type metadata accessor for TodayCard.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v5[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_sizeCategory];
  v5[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_sizeCategory] = a5;
  if (v10 == 7)
  {
    if (v16 == 7)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (v16 == 7)
    goto LABEL_5;
  switch(v10)
  {
    case 6:
      if (v16 == 6)
        goto LABEL_6;
      goto LABEL_5;
    case 5:
      if (v16 == 5)
        goto LABEL_6;
      goto LABEL_5;
    case 4:
      if (v16 == 4)
        goto LABEL_6;
      goto LABEL_5;
  }
  if ((v16 - 7) > 0xFFFFFFFC || v16 != v10)
LABEL_5:
    objc_msgSend(v5, "setNeedsLayout");
LABEL_6:
  v17 = objc_msgSend(v5, "traitCollection", v13);
  v18 = v17;
  v19 = 12.0;
  v20 = 12.0;
  if (v10 != 4)
  {
    v21 = PageGrid.horizontalDirectionalMargins.getter(v17);
    v20 = 20.0;
    v19 = v22 <= 20.0 ? v22 : 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v21);
    if (v23 <= 20.0)
      v20 = v23;
  }
  v24 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v18, "layoutDirection"), 0.0, v19, 0.0, v20);
  v26 = v25;
  v28 = v27;
  v30 = v29;

  objc_msgSend(v5, "setLayoutMargins:", v24, v26, v28, v30);
  v31 = (void *)sub_1002A7D14(a4);
  objc_msgSend(v6, "setBackgroundColor:", v31);

  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for TodayCard.Style.white(_:), v11);
  v32 = sub_10000E720((unint64_t *)&qword_100818E50, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard.Style, (uint64_t)&protocol conformance descriptor for TodayCard.Style);
  dispatch thunk of RawRepresentable.rawValue.getter(&v43, v11, v32);
  dispatch thunk of RawRepresentable.rawValue.getter(&v41, v11, v32);
  v33 = v44;
  v34 = v42;
  if (v43 == v41 && v44 == v42)
  {
    v35 = swift_bridgeObjectRelease_n(v44, 2);
    v36 = 1;
  }
  else
  {
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
    swift_bridgeObjectRelease(v33);
    v35 = swift_bridgeObjectRelease(v34);
    if ((v37 & 1) != 0)
      v36 = 1;
    else
      v36 = 2;
  }
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v15, v11, v35);
  objc_msgSend(v6, "setOverrideUserInterfaceStyle:", v36);
  v38 = *(id *)&v6[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView];
  v39 = TodayCardArcadeLockupOverlay.arcadeLockup.getter();
  sub_10056FB1C(v39, a2);

  swift_release();
  sub_10040FA78();
}

uint64_t sub_100410534()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100410558()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041057C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1004105B0()
{
  uint64_t v0;

  sub_10040FBB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

uint64_t sub_1004105BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_1008131E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1004105FC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for ArcadeLockupLayout.Metrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_arcadeLockupView;
  if (qword_100806058 != -1)
    swift_once(&qword_100806058, sub_1004C5F24);
  v11 = sub_10000EFC4(v6, (uint64_t)qword_1008691F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_100805C20 != -1)
    swift_once(&qword_100805C20, sub_10040F4C4);
  v12 = sub_10000EFC4(v2, (uint64_t)qword_100821F68);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
  v13 = objc_allocWithZone((Class)type metadata accessor for ArcadeLockupView(0));
  *(_QWORD *)&v1[v10] = sub_10016E158((uint64_t)v9, (uint64_t)v5, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_backgroundEffectView;
  if (qword_100805C28 != -1)
    swift_once(&qword_100805C28, sub_10040F734);
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", qword_100821F80);
  swift_weakInit(&v1[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsCalculator]);
  v15 = &v1[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_impressionsUpdateBlock];
  *v15 = 0;
  v15[1] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_isExpanded] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension32TodayCardArcadeLockupOverlayView_sizeCategory] = 7;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/TodayCardArcadeLockupOverlayView.swift", 59, 2, 32, 0);
  __break(1u);
}

id sub_100410840(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_presenter] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_objectGraph] = a2;
  v13.receiver = v3;
  v13.super_class = ObjectType;
  swift_retain(a1);
  *(_QWORD *)&v7 = swift_retain(a2).n128_u64[0];
  v8 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", 0, 0, v7);
  v10 = sub_100020248(&qword_1008220D8, v9, (uint64_t (*)(uint64_t))type metadata accessor for PersonalizationTransparencyPageViewController, (uint64_t)&unk_100661218);
  v11 = v8;
  dispatch thunk of PersonalizationTransparencyPagePresenter.view.setter(v8, v10);

  swift_release();
  swift_release();
  return v11;
}

void sub_1004109FC(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  id v35;

  v2 = sub_100410D04(a1);
  v3 = objc_msgSend(v1, "childViewControllers");
  v4 = sub_100050BB8();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v5);
    if (v14)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v5);
    v10 = 0;
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  v8 = type metadata accessor for GenericAccountPageViewController();
  v9 = (void *)swift_dynamicCastClass(v7, v8);
  v10 = v9;
  if (v9)
  {
    objc_msgSend(v9, "willMoveToParentViewController:", 0);
    v11 = objc_msgSend(v10, "view");
    if (!v11)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v12 = v11;
    objc_msgSend(v11, "removeFromSuperview");

    objc_msgSend(v10, "removeFromParentViewController");
  }
  else
  {

  }
LABEL_15:
  objc_msgSend(v1, "addChildViewController:", v2);
  v15 = objc_msgSend(v2, "view");
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = v15;
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v18 = v17;
  objc_msgSend(v17, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  objc_msgSend(v16, "setFrame:", v20, v22, v24, v26);
  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v28 = v27;
  v29 = objc_msgSend(v2, "view");
  if (!v29)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v30 = v29;
  objc_msgSend(v28, "addSubview:", v29);

  objc_msgSend(v2, "didMoveToParentViewController:", v1);
  v31 = objc_msgSend(v1, "navigationItem");
  GenericAccountPage.title.getter();
  if (v32)
  {
    v34 = v32;
    v35 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  else
  {
    v35 = 0;
  }
  objc_msgSend(v31, "setTitle:", v35, v33);

}

id sub_100410D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  objc_super v17;

  v3 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_objectGraph);
  v8 = type metadata accessor for URL(0, v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = type metadata accessor for GenericAccountPagePresenter(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  swift_retain(v6);
  v10 = swift_retain(a1);
  v11 = GenericAccountPagePresenter.init(objectGraph:url:page:)(v6, v5, a1, v10);
  v12 = sub_100020248(&qword_1008103D8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for GenericAccountPagePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_retain(v11);
  v13 = sub_1005A60D4(v6, v11, v12, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000012, 0x800000010068E5B0);
  swift_release();
  v14 = (objc_class *)type metadata accessor for GenericAccountPageViewController();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension32GenericAccountPageViewController_overlayViewController] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension32GenericAccountPageViewController_presenter] = v11;
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension32GenericAccountPageViewController_objectGraph] = v13;
  v17.receiver = v15;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, "initWithStyle:", 2);
}

void sub_100410E98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, "childViewControllers", v3);
  v7 = sub_100050BB8();
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  LOBYTE(v6) = Array.isNotEmpty.getter(v8, v7);
  swift_bridgeObjectRelease(v8);
  if ((v6 & 1) != 0)
  {
    v10 = OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
    v11 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
    v12 = v11;
    static ViewControllerContainment.remove(_:)(v11);

    v13 = *(void **)&v1[v10];
    *(_QWORD *)&v1[v10] = 0;

    v14 = *(void **)&v1[v10];
    v44 = v14;
    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "bounds");
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      v45 = v18;
      v46 = v20;
      v47 = v22;
      v48 = v24;
      v49 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v14, v1, &v45);

      return;
    }
    __break(1u);
  }
  else
  {
    static JULoadingViewController.PresentationContext.placeholder.getter(v9);
    v25 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v26 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, 0);
    v27 = OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
    v28 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
    v29 = v28;
    static ViewControllerContainment.remove(_:)(v28);

    v30 = *(void **)&v1[v27];
    *(_QWORD *)&v1[v27] = v26;
    v31 = v26;

    v32 = *(void **)&v1[v27];
    v33 = v32;
    v34 = objc_msgSend(v1, "view");
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v34, "bounds");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;

      v45 = v37;
      v46 = v39;
      v47 = v41;
      v48 = v43;
      v49 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v32, v1, &v45);

      return;
    }
  }
  __break(1u);
}

void sub_100411100()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[4];
  char v18;

  v1 = OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
  v3 = v2;
  static ViewControllerContainment.remove(_:)(v2);

  v4 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  v5 = *(void **)&v0[v1];
  v16 = v5;
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v17[0] = v9;
    v17[1] = v11;
    v17[2] = v13;
    v17[3] = v15;
    v18 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v5, v0, v17);

  }
  else
  {
    __break(1u);
  }
}

void sub_1004111D4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v24[4];
  char v25;

  v2 = v1;
  type metadata accessor for JUContentUnavailableViewController(0);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_presenter];
  v5 = sub_100020248((unint64_t *)&unk_1008220E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PersonalizationTransparencyPagePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_errorRetain(a1);
  swift_retain(v4);
  v6 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(a1, v4, v5, 1, 0, 0);
  v7 = OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController;
  v8 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension45PersonalizationTransparencyPageViewController_overlayViewController];
  v9 = v8;
  static ViewControllerContainment.remove(_:)(v8);

  v10 = *(void **)&v2[v7];
  *(_QWORD *)&v2[v7] = v6;
  v11 = v6;

  v12 = *(void **)&v2[v7];
  v23 = v12;
  v13 = objc_msgSend(v2, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v24[0] = v16;
    v24[1] = v18;
    v24[2] = v20;
    v24[3] = v22;
    v25 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v12, v2, v24);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for PersonalizationTransparencyPageViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension45PersonalizationTransparencyPageViewController);
}

uint64_t sub_1004113DC(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_1008220D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for PersonalizationTransparencyPageViewController, (uint64_t)&unk_1006611E0);
}

void sub_100411408(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  void *v46;
  double v47;
  id v48;
  id v49;
  id v50;
  __n128 v51;
  double top;
  double v53;
  double left;
  double v55;
  double bottom;
  double v57;
  double right;
  __n128 v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  double v69;
  id v70;
  id v71;
  id v72;
  __n128 v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  double v90;
  double v91;
  double v92;
  double v93;
  id v94;
  uint64_t v95;
  char *v96;
  void *v97;
  uint64_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  id v103;
  uint64_t v104;
  id v105;
  id v106;
  Class isa;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  double v123;
  id v124;
  id v125;
  id v126;
  double v127;
  double v128;
  double v129;
  double v130;
  uint64_t v131;
  void *v132;
  void *v133;
  id v134;
  id v135;
  uint64_t v136;
  void *v137;
  char *v138;
  void *Strong;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  char *v143;
  id v144;
  void *v145;
  void *v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  void *v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  __n128 v159;
  uint64_t v160;
  id v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  double v171;
  double v172;
  id v173;
  id v174;
  double v175;
  double v176;
  double v177;
  double v178;
  double v179;
  double v180;
  double v181;
  double v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  Class v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  void *v204;
  void *v205;
  uint64_t v206;
  void *v207;
  uint64_t v208;
  id v209;
  id v210;
  uint64_t v211;
  void *v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  id v216;
  char *v217;
  id v218;
  id v219;
  uint64_t v220;
  id v221;
  id v222;
  id v223;
  char *v224;
  id v225;
  id v226;
  char *v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  BOOL v233;

  v4 = v3;
  v8 = dispatch thunk of SearchResultsPresenter.result(at:)(a3);
  if (!v8)
    return;
  v9 = v8;
  v10 = objc_msgSend(a1, "traitCollection");
  v11 = dispatch thunk of SearchResultsPresenter.shouldResultHaveCondensedAppearance(at:in:)(a3, v10);

  v12 = type metadata accessor for AppSearchResult(0);
  if (swift_dynamicCastClass(v9, v12))
  {
    v13 = type metadata accessor for ContentSearchResultCollectionViewCell();
    v14 = swift_dynamicCastClass(a2, v13);
    if (v14)
    {
      v15 = (char *)v14;
      swift_retain(v9);
      v16 = a2;
      AppSearchResult.lockup.getter();
      v17 = sub_1005649C4(v11 & 1);
      swift_release();
      sub_10041249C(v17, v15, a3, a1);

LABEL_5:
      swift_release();
      v18 = v9;
      v19 = 2;
LABEL_6:
      swift_release_n(v18, v19);
      return;
    }
    goto LABEL_73;
  }
  v20 = type metadata accessor for BundleSearchResult(0);
  if (!swift_dynamicCastClass(v9, v20))
  {
    v32 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v9, v32))
    {
      v34 = type metadata accessor for AdvertSearchResultCollectionViewCell();
      v35 = swift_dynamicCastClass(a2, v34);
      if (!v35)
        goto LABEL_73;
      v36 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_advertRotationController;
      v37 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
      if (v37)
      {
        v38 = (char *)v35;
        v39 = a2;
        v40 = swift_retain(v37);
        dispatch thunk of AdvertRotationController.currentAdvert.getter(&v229, v40);
        swift_release();
        v41 = sub_10000DAF8((uint64_t *)&unk_100825030);
        v42 = type metadata accessor for MixedMediaLockup(0);
        if ((swift_dynamicCast(&v228, &v229, v41, v42, 6) & 1) != 0)
        {
          v211 = v36;
          v217 = v38;
          v223 = v228;
          v43 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
          v45 = v44;
          v46 = *(void **)(v4 + v43);
          *(_QWORD *)&v47 = swift_unknownObjectRetain(v46).n128_u64[0];
          v49 = objc_msgSend(v48, "traitCollection", v47);
          v50 = objc_msgSend(v49, "horizontalSizeClass");

          v212 = v39;
          v213 = v46;
          if (v50 == (id)1)
          {
            objc_msgSend(*(id *)(v4 + v43), "pageMarginInsets");
            top = v51.n128_f64[0];
            left = v53;
            bottom = v55;
            right = v57;
          }
          else
          {
            top = UIEdgeInsetsZero.top;
            left = UIEdgeInsetsZero.left;
            bottom = UIEdgeInsetsZero.bottom;
            right = UIEdgeInsetsZero.right;
          }
          v103 = (id)ASKDeviceTypeGetCurrent(v51);
          v104 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph);
          v214 = OBJC_IVAR____TtC20ProductPageExtension36AdvertSearchResultCollectionViewCell_advertsContentView;
          v105 = *(id *)&v217[OBJC_IVAR____TtC20ProductPageExtension36AdvertSearchResultCollectionViewCell_advertsContentView];
          v106 = objc_msgSend(v213, "traitCollection");
          v215 = v104;
          sub_1003AAF44((uint64_t)v223, (uint64_t)v106, (uint64_t)v103, v104, v45, top, left, bottom, right);

          objc_msgSend(v217, "setNeedsLayout");
          swift_unknownObjectRelease();

          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v108 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", isa);

          if (v108)
          {
            objc_msgSend(v108, "frame");
            v110 = v109;
            v112 = v111;
            v114 = v113;
            v116 = v115;

          }
          else
          {
            v110 = 0;
            v112 = 0;
            v114 = 0;
            v116 = 0;
          }
          v229 = v110;
          v230 = v112;
          v231 = v114;
          v232 = v116;
          v233 = v108 == 0;
          v131 = *(_QWORD *)(v4
                           + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
          v132 = *(void **)(v4 + v43);
          v133 = *(void **)&v217[v214];
          swift_unknownObjectRetain(v132);
          v134 = v133;
          v135 = objc_msgSend(v132, "traitCollection");
          sub_1003AB504((uint64_t)v223, (uint64_t)&v229, v131, (uint64_t)v135);
          swift_unknownObjectRelease();

          v136 = type metadata accessor for VideoPlaybackCoordinator(0);
          v137 = *(void **)(v104 + qword_10086B3F0);
          if (v137)
          {
            v138 = *(char **)&v217[v214];
            Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v138[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots]+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
            if (Strong)
            {
              v140 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
              v141 = Strong;
            }
            else
            {
              v141 = 0;
              v140 = 0;
            }
            v142 = sub_10000E720(&qword_100816F30, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_100663690);
            v143 = v138;
            v144 = v137;
            v145 = v141;
            v146 = v144;
            dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v145, v140, v138, v142);

            swift_retain(v223);
            sub_100413840(v147, v212, v4);
            v149 = Lockup.searchAd.getter(v148);
            swift_release();
            v150 = *(void **)&v217[v214];
            if (v149)
            {
              v151 = (void *)objc_opt_self(UIColor);
              v152 = v150;
              v153 = objc_msgSend(v151, "clearColor");
              objc_msgSend(v152, "setBackgroundColor:", v153);

            }
            else
            {
              v154 = v150;
            }
            objc_msgSend(v150, "setNeedsLayout", sub_10031041C(v149, v215));

            objc_msgSend(v217, "setNeedsLayout");
            swift_release();
            v155 = swift_allocObject(&unk_100753608, 24, 7);
            swift_unknownObjectWeakInit(v155 + 16);
            swift_retain(v155);
            sub_1004A6AC0((uint64_t)sub_100418F40, v155);
            swift_release();
            v156 = *(_QWORD *)(v4 + v211);
            if (v156)
            {
              v157 = sub_10000E720(&qword_100822168, (uint64_t (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell, (uint64_t)&unk_10065E0F8);
              v158 = v212;
              v159 = swift_retain(v156);
              dispatch thunk of AdvertRotationController.didApplyCell(_:in:)(v217, v157, a1, v159);
              swift_release();
              swift_release();
              swift_release();

            }
            else
            {
              swift_release();
              swift_release();

            }
            return;
          }
          v98 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v136, v136);
          __break(1u);
LABEL_86:
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v98, v98);
          __break(1u);
          return;
        }

      }
      swift_release();
      return;
    }
    v63 = type metadata accessor for EditorialSearchResult(0, v33);
    v64 = swift_dynamicCastClass(v9, v63);
    if (v64)
    {
      v65 = v64;
      v66 = type metadata accessor for EditorialSearchResultCollectionViewCell();
      v224 = (char *)swift_dynamicCastClass(a2, v66);
      if (v224)
      {
        v67 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        v68 = *(_BYTE **)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits);
        swift_getObjectType();
        swift_retain(v9);
        v218 = a2;
        *(_QWORD *)&v69 = swift_unknownObjectRetain(v68).n128_u64[0];
        v71 = objc_msgSend(v70, "traitCollection", v69);
        v72 = objc_msgSend(v71, "horizontalSizeClass");

        if (v72 == (id)1)
        {
          objc_msgSend(*(id *)(v4 + v67), "pageMarginInsets");
          v74 = v73.n128_f64[0];
          v76 = v75;
          v78 = v77;
          v80 = v79;
        }
        else
        {
          v74 = UIEdgeInsetsZero.top;
          v76 = UIEdgeInsetsZero.left;
          v78 = UIEdgeInsetsZero.bottom;
          v80 = UIEdgeInsetsZero.right;
        }
        v94 = (id)ASKDeviceTypeGetCurrent(v73);
        v95 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph);
        sub_10010D148(v65, v68, v95, *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkIconFetcher), *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader), v224, v74, v76, v78, v80);
        swift_unknownObjectRelease();

        v96 = &v224[OBJC_IVAR____TtC20ProductPageExtension39EditorialSearchResultCollectionViewCell_videoView];
        v97 = (void *)swift_unknownObjectWeakLoadStrong(&v224[OBJC_IVAR____TtC20ProductPageExtension39EditorialSearchResultCollectionViewCell_videoView]);

        if (v97)
        {
          v98 = type metadata accessor for VideoPlaybackCoordinator(0);
          v99 = *(void **)(v95 + qword_10086B3F0);
          if (!v99)
            goto LABEL_86;
          v100 = (void *)swift_unknownObjectWeakLoadStrong(v96);
          if (v100)
          {
            v101 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
            v102 = v100;
          }
          else
          {
            v102 = 0;
            v101 = 0;
          }
          v160 = sub_10000E720((unint64_t *)&unk_1008221C0, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultCollectionViewCell, (uint64_t)&unk_100645FD8);
          v161 = v218;
          v162 = v99;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v102, v101, v224, v160);

        }
        else
        {

        }
      }
      else
      {
        swift_retain(v9);
      }
      swift_retain(v9);
      sub_100413BD0(v65, a2, v4);
    }
    else
    {
      v81 = type metadata accessor for InAppPurchaseSearchResult(0);
      if (swift_dynamicCastClass(v9, v81))
      {
        v83 = type metadata accessor for InAppPurchaseSearchResultCollectionViewCell(0);
        v84 = swift_dynamicCastClass(a2, v83);
        swift_retain(v9);
        if (v84)
        {
          v225 = a2;
          v86 = InAppPurchaseSearchResult.lockup.getter(v225);
          v87 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          v219 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits), "traitCollection");
          v88 = objc_msgSend(*(id *)(v3 + v87), "traitCollection");
          v89 = objc_msgSend(v88, "horizontalSizeClass");

          if (v89 == (id)1)
          {
            objc_msgSend(*(id *)(v4 + v87), "pageMarginInsets");
          }
          else
          {
            v90 = UIEdgeInsetsZero.top;
            v91 = UIEdgeInsetsZero.left;
            v92 = UIEdgeInsetsZero.bottom;
            v93 = UIEdgeInsetsZero.right;
          }
          sub_10037E964(v86, *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph), *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader), v90, v91, v92, v93);

          swift_release();
        }
        v163 = InAppPurchaseSearchResult.lockup.getter(v85);
        sub_100413F60(v163, a2, v4);
        goto LABEL_5;
      }
      v117 = type metadata accessor for LockupCollectionSearchResult(0, v82);
      v118 = swift_dynamicCastClass(v9, v117);
      if (v118)
      {
        v119 = v118;
        v120 = type metadata accessor for SearchLockupListCollectionViewCell();
        if (swift_dynamicCastClass(a2, v120))
        {
          v220 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph);
          v226 = *(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
          v121 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
          v122 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits);
          swift_retain(v9);
          v216 = a2;
          *(_QWORD *)&v123 = swift_unknownObjectRetain(v122).n128_u64[0];
          v125 = objc_msgSend(v124, "traitCollection", v123);
          v126 = objc_msgSend(v125, "horizontalSizeClass");

          if (v126 == (id)1)
          {
            objc_msgSend(*(id *)(v3 + v121), "pageMarginInsets");
          }
          else
          {
            v127 = UIEdgeInsetsZero.top;
            v128 = UIEdgeInsetsZero.left;
            v129 = UIEdgeInsetsZero.bottom;
            v130 = UIEdgeInsetsZero.right;
          }
          sub_100315194(v119, (uint64_t)v226, v220, v122, v127, v128, v129, v130);

          swift_unknownObjectRelease();
        }
        else
        {
          swift_retain(v9);
        }
        swift_retain(v9);
        sub_1004142F0(v119, a2, v3);
      }
      else
      {
        v164 = type metadata accessor for AppEventSearchResult(0);
        v165 = swift_dynamicCastClass(v9, v164);
        if (!v165)
          goto LABEL_73;
        v166 = v165;
        v167 = type metadata accessor for AppEventSearchResultCollectionViewCell();
        v168 = swift_dynamicCastClass(a2, v167);
        if (!v168)
        {
          v183 = type metadata accessor for ContentSearchResultCollectionViewCell();
          v184 = swift_dynamicCastClass(a2, v183);
          if (v184)
          {
            v185 = (char *)v184;
            swift_retain(v9);
            v186 = a2;
            AppEventSearchResult.lockup.getter(v186);
            v187 = sub_1005649C4(v11 & 1);
            swift_release();
            sub_10041249C(v187, v185, a3, a1);

            goto LABEL_5;
          }
LABEL_73:
          swift_release();
          return;
        }
        v227 = (char *)v168;
        v169 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        v170 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits);
        swift_retain(v9);
        v221 = a2;
        objc_msgSend(v170, "pageMarginInsets");
        v172 = v171;
        v173 = objc_msgSend(*(id *)(v4 + v169), "traitCollection");
        v174 = objc_msgSend(v173, "horizontalSizeClass");

        if (v174 == (id)1)
        {
          objc_msgSend(*(id *)(v4 + v169), "pageMarginInsets");
          v176 = v175;
          v178 = v177;
          v180 = v179;
          v182 = v181;
        }
        else
        {
          v176 = UIEdgeInsetsZero.top;
          v178 = UIEdgeInsetsZero.left;
          v180 = UIEdgeInsetsZero.bottom;
          v182 = UIEdgeInsetsZero.right;
        }
        v188 = v166;
        v189 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph);
        swift_unknownObjectRetain(*(_QWORD *)(v4 + v169));
        sub_100344440(v166, v189, v172, v176, v178, v180, v182);
        swift_unknownObjectRelease();
        v190 = IndexPath._bridgeToObjectiveC()().super.isa;
        v191 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", v190);

        if (v191)
        {
          objc_msgSend(v191, "frame");
          v193 = v192;
          v195 = v194;
          v197 = v196;
          v199 = v198;

        }
        else
        {
          v193 = 0;
          v195 = 0;
          v197 = 0;
          v199 = 0;
        }
        v229 = v193;
        v230 = v195;
        v231 = v197;
        v232 = v199;
        v233 = v191 == 0;
        v200 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
        swift_unknownObjectRetain(*(_QWORD *)(v4 + v169));
        sub_100344698(v188, (uint64_t)&v229, v200);
        swift_unknownObjectRelease();
        v201 = *(_QWORD *)&v227[OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView];
        v202 = OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView;
        v203 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v201 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);

        if (v203)
        {
          v98 = type metadata accessor for VideoPlaybackCoordinator(0);
          v204 = *(void **)(v189 + qword_10086B3F0);
          if (!v204)
            goto LABEL_86;
          v205 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v201 + v202) + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
          if (v205)
          {
            v206 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
            v207 = v205;
          }
          else
          {
            v207 = 0;
            v206 = 0;
          }
          v208 = sub_10000E720(&qword_100814F08, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_1006513C8);
          v209 = v221;
          v210 = v204;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v207, v206, v227, v208);

        }
        swift_retain(v9);
        sub_100414680(v188, v227, v4);

      }
    }
    v18 = v9;
    v19 = 3;
    goto LABEL_6;
  }
  v21 = type metadata accessor for BundleSearchResultCollectionViewCell();
  if (!swift_dynamicCastClass(a2, v21))
    goto LABEL_73;
  swift_retain(v9);
  v222 = a2;
  v22 = ((uint64_t (*)(void))BundleSearchResult.lockup.getter)();
  v23 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
  *(_QWORD *)&v24 = swift_unknownObjectRetain(*(_QWORD *)(v3
                                                        + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits)).n128_u64[0];
  v26 = objc_msgSend(v25, "traitCollection", v24);
  v27 = objc_msgSend(v26, "horizontalSizeClass");

  if (v27 == (id)1)
  {
    objc_msgSend(*(id *)(v4 + v23), "pageMarginInsets");
  }
  else
  {
    v28 = UIEdgeInsetsZero.top;
    v29 = UIEdgeInsetsZero.left;
    v30 = UIEdgeInsetsZero.bottom;
    v31 = UIEdgeInsetsZero.right;
  }
  sub_1001118AC(v22, *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph), v28, v29, v30, v31);
  swift_release();
  v59 = swift_unknownObjectRelease();
  v60 = BundleSearchResult.lockup.getter(v59);
  sub_100111638(v60, *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader));
  v61 = swift_release();
  v62 = BundleSearchResult.lockup.getter(v61);
  sub_100413840(v62, v222, v4);
  swift_release();
  swift_release_n(v9, 2);

}

void sub_100412420(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
    swift_retain(v4);

    if (v4)
    {
      dispatch thunk of AdvertRotationController.didInteractWithAdvert()();
      swift_release(v4);
    }
  }
}

void sub_10041249C(uint64_t a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  double v13;
  id v14;
  id v15;
  id v16;
  __n128 v17;
  double top;
  double v19;
  double left;
  double v21;
  double bottom;
  double v23;
  double right;
  id v25;
  uint64_t v26;
  __n128 v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *Strong;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v48[4];
  BOOL v49;

  v5 = v4;
  v9 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
  v11 = v10;
  v12 = *(void **)(v4 + v9);
  *(_QWORD *)&v13 = swift_unknownObjectRetain(v12).n128_u64[0];
  v15 = objc_msgSend(v14, "traitCollection", v13);
  v16 = objc_msgSend(v15, "horizontalSizeClass");

  if (v16 == (id)1)
  {
    objc_msgSend(*(id *)(v5 + v9), "pageMarginInsets");
    top = v17.n128_f64[0];
    left = v19;
    bottom = v21;
    right = v23;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  v25 = (id)ASKDeviceTypeGetCurrent(v17);
  v26 = *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph);
  v27.n128_u64[0] = v11;
  sub_10023DA54(a1, v12, (uint64_t)v25, v26, v27, top, left, bottom, right);
  swift_unknownObjectRelease();

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(a4, "layoutAttributesForItemAtIndexPath:", isa);

  if (v29)
  {
    objc_msgSend(v29, "frame");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;

  }
  else
  {
    v31 = 0;
    v33 = 0;
    v35 = 0;
    v37 = 0;
  }
  v48[0] = v31;
  v48[1] = v33;
  v48[2] = v35;
  v48[3] = v37;
  v49 = v29 == 0;
  v38 = *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
  v39 = *(char **)(v5 + v9);
  swift_unknownObjectRetain(v39);
  sub_10023E284(a1, (uint64_t)v48, v38, v39);
  swift_unknownObjectRelease();
  v40 = type metadata accessor for VideoPlaybackCoordinator(0);
  v41 = *(void **)(v26 + qword_10086B3F0);
  if (v41)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&a2[OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots]+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
    if (Strong)
    {
      v43 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
      v44 = Strong;
    }
    else
    {
      v44 = 0;
      v43 = 0;
    }
    v45 = sub_10000E720((unint64_t *)&unk_100822170, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100653A68);
    v47 = v41;
    dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v44, v43, a2, v45);

    swift_retain(a1);
    sub_100413840(v46, a2, v5);
    swift_release();

  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v40, v40);
    __break(1u);
  }
}

void sub_100412790(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  Swift::Bool v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Swift::Bool v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  Swift::Bool v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  Swift::Bool v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  __n128 v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  char v115[24];
  uint64_t v116;
  _QWORD v117[6];
  UIImage_optional v118;
  UIImage_optional v119;
  UIImage_optional v120;

  v4 = v3;
  v7 = type metadata accessor for ContentSearchResultCollectionViewCell();
  v8 = swift_dynamicCastClass(a2, v7);
  v114 = a2;
  if (!v8)
    goto LABEL_21;
  v9 = v8;
  v111 = a3;
  v110 = *(_QWORD *)(v8 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_screenshots);
  v10 = (uint64_t *)(v110 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v110 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v115, 0, 0);
  v11 = *v10;
  v112 = v4;
  v113 = v9;
  if ((unint64_t)*v10 >> 62)
  {
    if (v11 < 0)
      v24 = *v10;
    else
      v24 = v11 & 0xFFFFFFFFFFFFFF8;
    v25 = a2;
    swift_bridgeObjectRetain(v11);
    v15 = _CocoaArrayWrapper.endIndex.getter(v24);
    v13 = v15;
    if (!v15)
      goto LABEL_14;
  }
  else
  {
    v12 = a2;
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v12;
    swift_bridgeObjectRetain(v11);
    if (!v13)
      goto LABEL_14;
  }
  if (v13 < 1)
  {
    __break(1u);
LABEL_57:
    v65 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v15, v15);
    __break(1u);
    goto LABEL_58;
  }
  v16 = 0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v11);
    else
      v17 = *(id *)(v11 + 8 * v16 + 32);
    v18 = v17;
    ++v16;
    v116 = (uint64_t)v17;
    v19 = type metadata accessor for BorderedScreenshotView();
    v20 = sub_10000E720(&qword_10080FAD8, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v21 = v18;
    AnyHashable.init<A>(_:)(&v116, v19, v20);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v117, 1);
    sub_100018968((uint64_t)v117);
    v22 = *(id *)&v21[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
    v118.value.super.isa = 0;
    v118.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v118, v23);

  }
  while (v13 != v16);
LABEL_14:
  swift_bridgeObjectRelease(v11);
  v26 = v110 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView;
  Strong = swift_unknownObjectWeakLoadStrong(v110 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v28 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_100828468), "setImage:", 0);
    v116 = (uint64_t)v28;
    v29 = type metadata accessor for VideoView(0);
    v30 = sub_10000E720((unint64_t *)&qword_10080FAE8, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v31 = v28;
    AnyHashable.init<A>(_:)(&v116, v29, v30);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v117, 1);

    sub_100018968((uint64_t)v117);
  }
  v32 = *(_QWORD *)(v113 + OBJC_IVAR____TtC20ProductPageExtension37ContentSearchResultCollectionViewCell_lockupView);
  v33 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v34 = *(id *)(v32 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v119.value.super.isa = 0;
  v119.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v119, v35);

  v36 = *(void **)(v32 + v33);
  v37 = type metadata accessor for ArtworkView(0);
  v38 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v39 = v36;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v39, 1, v37, v38);

  v15 = type metadata accessor for VideoPlaybackCoordinator(0);
  v4 = v112;
  v40 = *(void **)(*(_QWORD *)(v112
                             + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph)
                 + qword_10086B3F0);
  a2 = v114;
  if (!v40)
    goto LABEL_57;
  v41 = (void *)swift_unknownObjectWeakLoadStrong(v26);
  if (v41)
  {
    v42 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
    v43 = v41;
  }
  else
  {
    v43 = 0;
    v42 = 0;
  }
  v44 = sub_10000E720((unint64_t *)&unk_100822170, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100653A68);
  v45 = v114;
  v46 = v40;
  dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v43, v42, v113, v44, 1);

  a3 = v111;
LABEL_21:
  v47 = dispatch thunk of SearchResultsPresenter.result(at:)(a3);
  if (!v47)
    return;
  v48 = v47;
  v49 = type metadata accessor for AppEventSearchResultCollectionViewCell();
  v50 = swift_dynamicCastClass(a2, v49);
  if (v50)
  {
    v51 = v50;
    v52 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
    v53 = *(_QWORD *)(v50 + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_lockupView);
    v54 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
    v55 = *(void **)(v53 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    v56 = a2;
    v57 = v55;
    v120.value.super.isa = 0;
    v120.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v120, v58);

    v59 = *(void **)(v53 + v54);
    v60 = type metadata accessor for ArtworkView(0);
    v61 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v62 = v59;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v62, 1, v60, v61);

    v63 = *(_QWORD *)(*(_QWORD *)(v51
                                + OBJC_IVAR____TtC20ProductPageExtension38AppEventSearchResultCollectionViewCell_appEventView)
                    + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
    sub_10045BAFC(v52, 1, v64);
    v65 = type metadata accessor for VideoPlaybackCoordinator(0);
    v66 = *(void **)(*(_QWORD *)(v4
                               + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_objectGraph)
                   + qword_10086B3F0);
    if (v66)
    {
      v67 = (void *)swift_unknownObjectWeakLoadStrong(v63 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
      if (v67)
      {
        v68 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
        v69 = v67;
      }
      else
      {
        v69 = 0;
        v68 = 0;
      }
      v70 = sub_10000E720(&qword_100814F08, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_1006513C8);
      v71 = v56;
      v72 = v66;
      dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v69, v68, v51, v70, 1);

      a2 = v114;
      goto LABEL_28;
    }
LABEL_58:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v65, v65);
    __break(1u);
    return;
  }
LABEL_28:
  v73 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  v74 = swift_dynamicCastClass(a2, v73);
  if (v74)
  {
    v75 = *(_QWORD *)(v4
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_advertRotationController);
    if (v75)
    {
      v76 = v74;
      v77 = sub_10000E720(&qword_100822168, (uint64_t (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell, (uint64_t)&unk_10065E0F8);
      v78 = a2;
      v79 = swift_retain(v75);
      dispatch thunk of AdvertRotationController.didEndDisplaying(_:in:)(v76, v77, a1, v79);
      swift_release();

    }
  }
  v80 = type metadata accessor for AppSearchResult(0);
  if (!swift_dynamicCastClass(v48, v80))
  {
    v85 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v48, v85))
    {
      if (*(_QWORD *)(v4
                     + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_advertRotationController))
      {
        v87 = swift_retain(*(_QWORD *)(v4
                                     + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_advertRotationController));
        dispatch thunk of AdvertRotationController.currentAdvert.getter(v117, v87);
        swift_release();
        v88 = sub_10000DAF8((uint64_t *)&unk_100825030);
        v89 = type metadata accessor for MixedMediaLockup(0);
        if ((swift_dynamicCast(&v116, v117, v88, v89, 6) & 1) != 0)
        {
          v90 = v116;
          swift_retain(v116);
          sub_100414FB8(v91, v4);
          swift_release();
          v83 = v90;
          goto LABEL_36;
        }
      }
    }
    else
    {
      v92 = type metadata accessor for EditorialSearchResult(0, v86);
      v93 = swift_dynamicCastClass(v48, v92);
      if (v93)
      {
        v94 = v93;
        swift_retain(v48);
        sub_100415178(v94, v4);
        goto LABEL_35;
      }
      v95 = type metadata accessor for InAppPurchaseSearchResult(0);
      if (swift_dynamicCastClass(v48, v95))
      {
        swift_retain(v48);
        v97 = InAppPurchaseSearchResult.lockup.getter(v96);
        sub_100415338(v97, v4);
        goto LABEL_34;
      }
      v98 = type metadata accessor for BundleSearchResult(0);
      if (swift_dynamicCastClass(v48, v98))
      {
        v100 = swift_retain(v48);
        v82 = BundleSearchResult.lockup.getter(v100);
        goto LABEL_33;
      }
      v101 = type metadata accessor for LockupCollectionSearchResult(0, v99);
      v102 = swift_dynamicCastClass(v48, v101);
      if (v102)
      {
        v103 = v102;
        swift_retain(v48);
        sub_1004154F8(v103, v4);
        goto LABEL_35;
      }
      v104 = type metadata accessor for AppEventSearchResult(0);
      v105 = swift_dynamicCastClass(v48, v104);
      if (v105)
      {
        v106 = v105;
        v107 = swift_retain(v48);
        v108 = dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)(v106, v107);
        if ((v108 & 1) != 0)
        {
          swift_retain(v48);
          sub_1004156B8(v106, v4);
          v83 = v48;
          v84 = 3;
          goto LABEL_37;
        }
        v82 = AppEventSearchResult.lockup.getter(v108);
        goto LABEL_33;
      }
    }
    swift_release();
    return;
  }
  v81 = swift_retain(v48);
  v82 = AppSearchResult.lockup.getter(v81);
LABEL_33:
  sub_100414FB8(v82, v4);
LABEL_34:
  swift_release();
LABEL_35:
  v83 = v48;
LABEL_36:
  v84 = 2;
LABEL_37:
  swift_release_n(v83, v84);
}

void sub_100413374(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  id v26;
  __n128 v27;
  double top;
  double v29;
  double left;
  double v31;
  double bottom;
  double v33;
  double right;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  _BYTE v41[48];

  v13 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  if (swift_dynamicCastClass(a1, v13))
  {
    sub_100131804(a3, (uint64_t)v41);
    v14 = a1;
    v15 = sub_10000DAF8((uint64_t *)&unk_100825030);
    v16 = type metadata accessor for MixedMediaLockup(0);
    if ((swift_dynamicCast(&v40, v41, v15, v16, 6) & 1) != 0)
    {
      v17 = v40;
      sub_100131804(a4, (uint64_t)v41);
      if ((swift_dynamicCast(&v40, v41, v15, v16, 6) & 1) != 0)
      {
        v18 = v40;
        swift_retain(v17);
        sub_100414FB8(v19, v7);
        swift_release();
        swift_retain(v18);
        sub_100413840(v20, v14, v7);
        *(_QWORD *)&v21 = swift_release().n128_u64[0];
        v22 = OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits;
        objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets", v21);
        v24 = v23;
        v39 = objc_msgSend(*(id *)(v7 + v22), "traitCollection");
        v25 = objc_msgSend(*(id *)(v7 + v22), "traitCollection");
        v26 = objc_msgSend(v25, "horizontalSizeClass");

        if (v26 == (id)1)
        {
          objc_msgSend(*(id *)(v7 + v22), "pageMarginInsets");
          top = v27.n128_f64[0];
          left = v29;
          bottom = v31;
          right = v33;
        }
        else
        {
          top = UIEdgeInsetsZero.top;
          left = UIEdgeInsetsZero.left;
          bottom = UIEdgeInsetsZero.bottom;
          right = UIEdgeInsetsZero.right;
        }
        v35 = (id)ASKDeviceTypeGetCurrent(v27);
        v36 = *(_QWORD *)(v7 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_artworkLoader);
        v37 = type metadata accessor for ObjectGraph(0);
        v38 = swift_dynamicCastClassUnconditional(a7, v37, 0, 0, 0);
        sub_1003AC164(v18, (uint64_t)v39, (uint64_t)v35, v36, v38, a6 & 1, v24, top, left, bottom, right);

        swift_release();
        swift_release();

      }
      else
      {
        swift_release();

      }
    }
    else
    {

    }
  }
}

id sub_100413620()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsCollectionViewDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100413734()
{
  return type metadata accessor for SearchResultsCollectionViewDelegate(0);
}

uint64_t type metadata accessor for SearchResultsCollectionViewDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_100822150;
  if (!qword_100822150)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsCollectionViewDelegate);
  return result;
}

void sub_100413778(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = "\b";
  sub_10021E224(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_1006612B0;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_1006612C8;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = "\b";
    v4[11] = "\b";
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

uint64_t sub_100413840(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t *v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  id v51;
  _QWORD v52[5];
  uint64_t v53[5];

  v51 = a2;
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v50 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - v15;
  v17 = type metadata accessor for MixedMediaLockup(0);
  v53[3] = v17;
  v53[4] = sub_10000E720(&qword_1008192B0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v53[0] = a1;
  sub_100018ADC(a3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_1008131E0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
    v19 = a3;
    v20 = v51;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v51;
      objc_msgSend(v51, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v51;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_10000EF80((uint64_t)v53, (uint64_t)v52);
  v22 = sub_10000E720(&qword_100822160, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v7, &qword_1008131E0);
  }
  else
  {
    v23 = v50;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v50, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23, v25, v26, v27, v28);
    }
    objc_msgSend(v20, "frame");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v37 = sub_100010F08(v52, v52[3]);
    sub_100415A38(*v37, v24, v30, v32, v34, v36);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
  ObjectType = swift_getObjectType();
  v39 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v39)
    v40 = v39;
  else
    v40 = 0;
  if (v39)
    v41 = v20;
  else
    v41 = 0;
  if (v41)
  {
    v42 = v20;
    objc_msgSend(v42, "frame");
    v47 = sub_100414DA0(v53[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, &qword_100822160, (uint64_t)&protocol conformance descriptor for Lockup, v43, v44, v45, v46);
    v48 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v47, v48, v40);

  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
}

uint64_t sub_100413BD0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t *v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  id v52;
  _QWORD v53[5];
  uint64_t v54[5];

  v52 = a2;
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v51 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v51 - v16;
  v18 = type metadata accessor for EditorialSearchResult(0, v15);
  v54[3] = v18;
  v54[4] = sub_10000E720(&qword_100822180, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v54[0] = a1;
  sub_100018ADC(a3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_1008131E0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
    v20 = a3;
    v21 = v52;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v52;
      objc_msgSend(v52, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v52;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_10000EF80((uint64_t)v54, (uint64_t)v53);
  v23 = sub_10000E720(&qword_100822188, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v7, &qword_1008131E0);
  }
  else
  {
    v24 = v51;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v51, v7, v11);
    v25 = *(_QWORD *)(v20
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24, v26, v27, v28, v29);
    }
    objc_msgSend(v21, "frame");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v38 = sub_100010F08(v53, v53[3]);
    sub_100415FA0(*v38, v25, v31, v33, v35, v37);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
  ObjectType = swift_getObjectType();
  v40 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v40)
    v41 = v40;
  else
    v41 = 0;
  if (v40)
    v42 = v21;
  else
    v42 = 0;
  if (v42)
  {
    v43 = v21;
    objc_msgSend(v43, "frame");
    v48 = sub_100414DA0(v54[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, &qword_100822188, (uint64_t)&protocol conformance descriptor for SearchResult, v44, v45, v46, v47);
    v49 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v48, v49, v41);

  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v54);
}

uint64_t sub_100413F60(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t *v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  id v51;
  _QWORD v52[5];
  uint64_t v53[5];

  v51 = a2;
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v50 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - v15;
  v17 = type metadata accessor for InAppPurchaseLockup(0);
  v53[3] = v17;
  v53[4] = sub_10000E720(&qword_100822190, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v53[0] = a1;
  sub_100018ADC(a3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_1008131E0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
    v19 = a3;
    v20 = v51;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v51;
      objc_msgSend(v51, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v51;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_10000EF80((uint64_t)v53, (uint64_t)v52);
  v22 = sub_10000E720((unint64_t *)&unk_100822198, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v7, &qword_1008131E0);
  }
  else
  {
    v23 = v50;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v50, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23, v25, v26, v27, v28);
    }
    objc_msgSend(v20, "frame");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v37 = sub_100010F08(v52, v52[3]);
    sub_100416508(*v37, v24, v30, v32, v34, v36);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
  ObjectType = swift_getObjectType();
  v39 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v39)
    v40 = v39;
  else
    v40 = 0;
  if (v39)
    v41 = v20;
  else
    v41 = 0;
  if (v41)
  {
    v42 = v20;
    objc_msgSend(v42, "frame");
    v47 = sub_100414DA0(v53[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (unint64_t *)&unk_100822198, (uint64_t)&protocol conformance descriptor for Lockup, v43, v44, v45, v46);
    v48 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v47, v48, v40);

  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
}

uint64_t sub_1004142F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t *v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  id v52;
  _QWORD v53[5];
  uint64_t v54[5];

  v52 = a2;
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v51 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v51 - v16;
  v18 = type metadata accessor for LockupCollectionSearchResult(0, v15);
  v54[3] = v18;
  v54[4] = sub_10000E720(&qword_100813210, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v54[0] = a1;
  sub_100018ADC(a3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_1008131E0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
    v20 = a3;
    v21 = v52;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v52;
      objc_msgSend(v52, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v52;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_10000EF80((uint64_t)v54, (uint64_t)v53);
  v23 = sub_10000E720((unint64_t *)&unk_1008221A8, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v7, &qword_1008131E0);
  }
  else
  {
    v24 = v51;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v51, v7, v11);
    v25 = *(_QWORD *)(v20
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24, v26, v27, v28, v29);
    }
    objc_msgSend(v21, "frame");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v38 = sub_100010F08(v53, v53[3]);
    sub_100416A70(*v38, v25, v31, v33, v35, v37);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
  ObjectType = swift_getObjectType();
  v40 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v40)
    v41 = v40;
  else
    v41 = 0;
  if (v40)
    v42 = v21;
  else
    v42 = 0;
  if (v42)
  {
    v43 = v21;
    objc_msgSend(v43, "frame");
    v48 = sub_100414DA0(v54[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (unint64_t *)&unk_1008221A8, (uint64_t)&protocol conformance descriptor for SearchResult, v44, v45, v46, v47);
    v49 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v48, v49, v41);

  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v54);
}

uint64_t sub_100414680(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t *v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  id v51;
  _QWORD v52[5];
  uint64_t v53[5];

  v51 = a2;
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v50 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - v15;
  v17 = type metadata accessor for AppEventSearchResult(0);
  v53[3] = v17;
  v53[4] = sub_10000E720((unint64_t *)&qword_100808030, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v53[0] = a1;
  sub_100018ADC(a3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_1008131E0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
    v19 = a3;
    v20 = v51;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v51;
      objc_msgSend(v51, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v51;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_10000EF80((uint64_t)v53, (uint64_t)v52);
  v22 = sub_10000E720(&qword_1008221B8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v7, &qword_1008131E0);
  }
  else
  {
    v23 = v50;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v50, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23, v25, v26, v27, v28);
    }
    objc_msgSend(v20, "frame");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v37 = sub_100010F08(v52, v52[3]);
    sub_100416FD8(*v37, v24, v30, v32, v34, v36);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
  ObjectType = swift_getObjectType();
  v39 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v39)
    v40 = v39;
  else
    v40 = 0;
  if (v39)
    v41 = v20;
  else
    v41 = 0;
  if (v41)
  {
    v42 = v20;
    objc_msgSend(v42, "frame");
    v47 = sub_100414DA0(v53[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, &qword_1008221B8, (uint64_t)&protocol conformance descriptor for SearchResult, v43, v44, v45, v46);
    v48 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v47, v48, v40);

  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
}

uint64_t sub_100414A10(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t *v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  id v51;
  _QWORD v52[5];
  uint64_t v53[5];

  v51 = a2;
  v5 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v50 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - v15;
  v17 = type metadata accessor for LinkableText(0);
  v53[3] = v17;
  v53[4] = sub_10000E720((unint64_t *)&qword_1008221D0, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v53[0] = a1;
  sub_100018ADC(a3 + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_1008131E0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_100010F2C((uint64_t)v10, &qword_1008131E0);
    v19 = a3;
    v20 = v51;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3
                   + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v51;
      objc_msgSend(v51, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v51;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_10000EF80((uint64_t)v53, (uint64_t)v52);
  v22 = sub_10000E720(&qword_1008221D8, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v7, &qword_1008131E0);
  }
  else
  {
    v23 = v50;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v50, v7, v11);
    v24 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23, v25, v26, v27, v28);
    }
    objc_msgSend(v20, "frame");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v37 = sub_100010F08(v52, v52[3]);
    sub_100418F48(*v37, v24, v30, v32, v34, v36);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
  ObjectType = swift_getObjectType();
  v39 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v39)
    v40 = v39;
  else
    v40 = 0;
  if (v39)
    v41 = v20;
  else
    v41 = 0;
  if (v41)
  {
    v42 = v20;
    objc_msgSend(v42, "frame");
    v47 = sub_100414DA0(v53[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, &qword_1008221D8, (uint64_t)&protocol conformance descriptor for LinkableText, v43, v44, v45, v46);
    v48 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v47, v48, v40);

  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
}

uint64_t sub_100414DA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v18 = type metadata accessor for ImpressionMetrics.ID(0);
  v35 = *(_QWORD *)(v18 - 8);
  v36 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v21);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ImpressionMetrics(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  v29 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v26);
  v30 = sub_10000E720(a4, a3, a5);
  dispatch thunk of ViewModel.impressionMetrics.getter(v29, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_100010F2C((uint64_t)v23, &qword_1008131E0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v23, v24);
  if (!*(_QWORD *)(a2
                  + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator))
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    return 0;
  }
  ImpressionsCalculator.addElement(_:at:)(v28, a6, a7, a8, a9);
  ImpressionMetrics.id.getter(v31);
  v32 = ImpressionsCalculator.makeChildCalculator(for:)(v20);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v36);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  return v32;
}

uint64_t sub_100414FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MixedMediaLockup(0);
  v18[3] = v11;
  v18[4] = sub_10000E720(&qword_1008192B0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v18[0] = a1;
  sub_10000EF80((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E720(&qword_100822160, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100010F08(v17, v17[3]);
    sub_100417540(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

uint64_t sub_100415178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialSearchResult(0, v9);
  v19[3] = v12;
  v19[4] = sub_10000E720(&qword_100822180, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v19[0] = a1;
  sub_10000EF80((uint64_t)v19, (uint64_t)v18);
  v13 = sub_10000E720(&qword_100822188, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100010F08(v18, v18[3]);
    sub_100417A6C(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
}

uint64_t sub_100415338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InAppPurchaseLockup(0);
  v18[3] = v11;
  v18[4] = sub_10000E720(&qword_100822190, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v18[0] = a1;
  sub_10000EF80((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E720((unint64_t *)&unk_100822198, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100010F08(v17, v17[3]);
    sub_100417F98(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

uint64_t sub_1004154F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LockupCollectionSearchResult(0, v9);
  v19[3] = v12;
  v19[4] = sub_10000E720(&qword_100813210, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v19[0] = a1;
  sub_10000EF80((uint64_t)v19, (uint64_t)v18);
  v13 = sub_10000E720((unint64_t *)&unk_1008221A8, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100010F08(v18, v18[3]);
    sub_1004184C4(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
}

uint64_t sub_1004156B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AppEventSearchResult(0);
  v18[3] = v11;
  v18[4] = sub_10000E720((unint64_t *)&qword_100808030, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v18[0] = a1;
  sub_10000EF80((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E720(&qword_1008221B8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100010F08(v17, v17[3]);
    sub_1004189F0(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

uint64_t sub_100415878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LinkableText(0);
  v18[3] = v11;
  v18[4] = sub_10000E720((unint64_t *)&qword_1008221D0, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v18[0] = a1;
  sub_10000EF80((uint64_t)v18, (uint64_t)v17);
  v12 = sub_10000E720(&qword_1008221D8, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010F2C((uint64_t)v6, &qword_1008131E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC20ProductPageExtension35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100010F08(v17, v17[3]);
    sub_100419650(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

uint64_t sub_100415A38(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68[2];
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[6];

  v65 = a2;
  v11 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v67 = (uint64_t)&v58 - v15;
  v16 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v16);
  v66 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v63 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v58 - v25;
  v27 = type metadata accessor for MixedMediaLockup(0);
  v76[3] = v27;
  v76[4] = sub_10000E720(&qword_1008192B0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v76[0] = a1;
  sub_10000EF80((uint64_t)v76, (uint64_t)v70);
  swift_retain(a1);
  v28 = sub_10000DAF8(&qword_10080E910);
  v29 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v68, v70, v28, v29, 6))
  {
    v64 = v13;
    sub_100010E24(v68, (uint64_t)v73);
    v30 = v74;
    v31 = v75;
    sub_100010F08(v73, v74);
    v32 = dispatch thunk of ComponentModelContainer.children.getter(v30, v31);
    if (v32)
    {
      v58 = v32;
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        v34 = v58 + 32;
        v62 = v27;
        v59 = v21;
        v60 = v22;
        v61 = v26;
        do
        {
          sub_10000EF80(v34, (uint64_t)v70);
          v36 = v71;
          v35 = v72;
          sub_100010F08(v70, v71);
          dispatch thunk of ViewModel.impressionMetrics.getter(v36, *(_QWORD *)(v35 + 8));
          v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
          if (v37((uint64_t)v20, 1, v21) == 1)
          {
            sub_100010F2C((uint64_t)v20, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v20, v21);
            v38 = sub_10000E720(&qword_100822160, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v39 = v66;
            dispatch thunk of ViewModel.impressionMetrics.getter(v27, v38);
            if (v37(v39, 1, v21) == 1)
            {
              sub_100010F2C(v66, &qword_1008131E0);
              v41 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v67, 1, 1, v41);
            }
            else
            {
              v42 = v67;
              v43 = v66;
              ImpressionMetrics.id.getter(v40);
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v43, v21);
              v44 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 0, 1, v44);
            }
            v45 = (uint64_t)v64;
            if (v65)
            {
              sub_100018ADC(v67, (uint64_t)v64, (uint64_t *)&unk_100819220);
              v46 = type metadata accessor for ImpressionMetrics.ID(0);
              v47 = *(_QWORD *)(v46 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
              {
                sub_100010F2C(v45, (uint64_t *)&unk_100819220);
                v49 = 0;
                v50 = 0;
              }
              else
              {
                v51 = v45;
                v49 = ImpressionMetrics.ID.element.getter(v48);
                v50 = v52;
                v21 = v59;
                (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v46);
              }
              v22 = v60;
              v53 = v63;
              v54 = v61;
              ImpressionMetrics.withParentId(_:)(v49, v50);
              swift_bridgeObjectRelease(v50);
              ImpressionsCalculator.addElement(_:at:)(v53, a3, a4, a5, a6);
              v55 = *(void (**)(char *, uint64_t))(v22 + 8);
              v56 = v53;
              v26 = v54;
              v55(v56, v21);
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              v55(v54, v21);
              v27 = v62;
            }
            else
            {
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
          v34 += 40;
          --v33;
        }
        while (v33);
      }
      swift_bridgeObjectRelease(v58);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
  }
  else
  {
    v69 = 0;
    memset(v68, 0, sizeof(v68));
    sub_100010F2C((uint64_t)v68, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
}

uint64_t sub_100415FA0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69[2];
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[6];

  v66 = a2;
  v11 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v68 = (uint64_t)&v59 - v15;
  v16 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v16);
  v67 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v64 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for EditorialSearchResult(0, v25);
  v77[3] = v28;
  v77[4] = sub_10000E720(&qword_100822180, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v77[0] = a1;
  sub_10000EF80((uint64_t)v77, (uint64_t)v71);
  swift_retain(a1);
  v29 = sub_10000DAF8(&qword_10080E910);
  v30 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v69, v71, v29, v30, 6))
  {
    v65 = v13;
    sub_100010E24(v69, (uint64_t)v74);
    v31 = v75;
    v32 = v76;
    sub_100010F08(v74, v75);
    v33 = dispatch thunk of ComponentModelContainer.children.getter(v31, v32);
    if (v33)
    {
      v59 = v33;
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v35 = v59 + 32;
        v63 = v28;
        v60 = v21;
        v61 = v22;
        v62 = v27;
        do
        {
          sub_10000EF80(v35, (uint64_t)v71);
          v37 = v72;
          v36 = v73;
          sub_100010F08(v71, v72);
          dispatch thunk of ViewModel.impressionMetrics.getter(v37, *(_QWORD *)(v36 + 8));
          v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
          if (v38((uint64_t)v20, 1, v21) == 1)
          {
            sub_100010F2C((uint64_t)v20, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
            v39 = sub_10000E720(&qword_100822188, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v40 = v67;
            dispatch thunk of ViewModel.impressionMetrics.getter(v28, v39);
            if (v38(v40, 1, v21) == 1)
            {
              sub_100010F2C(v67, &qword_1008131E0);
              v42 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v68, 1, 1, v42);
            }
            else
            {
              v43 = v68;
              v44 = v67;
              ImpressionMetrics.id.getter(v41);
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v44, v21);
              v45 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v43, 0, 1, v45);
            }
            v46 = (uint64_t)v65;
            if (v66)
            {
              sub_100018ADC(v68, (uint64_t)v65, (uint64_t *)&unk_100819220);
              v47 = type metadata accessor for ImpressionMetrics.ID(0);
              v48 = *(_QWORD *)(v47 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
              {
                sub_100010F2C(v46, (uint64_t *)&unk_100819220);
                v50 = 0;
                v51 = 0;
              }
              else
              {
                v52 = v46;
                v50 = ImpressionMetrics.ID.element.getter(v49);
                v51 = v53;
                v21 = v60;
                (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v47);
              }
              v22 = v61;
              v54 = v64;
              v55 = v62;
              ImpressionMetrics.withParentId(_:)(v50, v51);
              swift_bridgeObjectRelease(v51);
              ImpressionsCalculator.addElement(_:at:)(v54, a3, a4, a5, a6);
              v56 = *(void (**)(char *, uint64_t))(v22 + 8);
              v57 = v54;
              v27 = v55;
              v56(v57, v21);
              sub_100010F2C(v68, (uint64_t *)&unk_100819220);
              v56(v55, v21);
              v28 = v63;
            }
            else
            {
              sub_100010F2C(v68, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v71);
          v35 += 40;
          --v34;
        }
        while (v34);
      }
      swift_bridgeObjectRelease(v59);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v74);
  }
  else
  {
    v70 = 0;
    memset(v69, 0, sizeof(v69));
    sub_100010F2C((uint64_t)v69, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v77);
}

uint64_t sub_100416508(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68[2];
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[6];

  v65 = a2;
  v11 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v67 = (uint64_t)&v58 - v15;
  v16 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v16);
  v66 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v63 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v58 - v25;
  v27 = type metadata accessor for InAppPurchaseLockup(0);
  v76[3] = v27;
  v76[4] = sub_10000E720(&qword_100822190, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v76[0] = a1;
  sub_10000EF80((uint64_t)v76, (uint64_t)v70);
  swift_retain(a1);
  v28 = sub_10000DAF8(&qword_10080E910);
  v29 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v68, v70, v28, v29, 6))
  {
    v64 = v13;
    sub_100010E24(v68, (uint64_t)v73);
    v30 = v74;
    v31 = v75;
    sub_100010F08(v73, v74);
    v32 = dispatch thunk of ComponentModelContainer.children.getter(v30, v31);
    if (v32)
    {
      v58 = v32;
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        v34 = v58 + 32;
        v62 = v27;
        v59 = v21;
        v60 = v22;
        v61 = v26;
        do
        {
          sub_10000EF80(v34, (uint64_t)v70);
          v36 = v71;
          v35 = v72;
          sub_100010F08(v70, v71);
          dispatch thunk of ViewModel.impressionMetrics.getter(v36, *(_QWORD *)(v35 + 8));
          v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
          if (v37((uint64_t)v20, 1, v21) == 1)
          {
            sub_100010F2C((uint64_t)v20, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v20, v21);
            v38 = sub_10000E720((unint64_t *)&unk_100822198, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v39 = v66;
            dispatch thunk of ViewModel.impressionMetrics.getter(v27, v38);
            if (v37(v39, 1, v21) == 1)
            {
              sub_100010F2C(v66, &qword_1008131E0);
              v41 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v67, 1, 1, v41);
            }
            else
            {
              v42 = v67;
              v43 = v66;
              ImpressionMetrics.id.getter(v40);
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v43, v21);
              v44 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 0, 1, v44);
            }
            v45 = (uint64_t)v64;
            if (v65)
            {
              sub_100018ADC(v67, (uint64_t)v64, (uint64_t *)&unk_100819220);
              v46 = type metadata accessor for ImpressionMetrics.ID(0);
              v47 = *(_QWORD *)(v46 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
              {
                sub_100010F2C(v45, (uint64_t *)&unk_100819220);
                v49 = 0;
                v50 = 0;
              }
              else
              {
                v51 = v45;
                v49 = ImpressionMetrics.ID.element.getter(v48);
                v50 = v52;
                v21 = v59;
                (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v46);
              }
              v22 = v60;
              v53 = v63;
              v54 = v61;
              ImpressionMetrics.withParentId(_:)(v49, v50);
              swift_bridgeObjectRelease(v50);
              ImpressionsCalculator.addElement(_:at:)(v53, a3, a4, a5, a6);
              v55 = *(void (**)(char *, uint64_t))(v22 + 8);
              v56 = v53;
              v26 = v54;
              v55(v56, v21);
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              v55(v54, v21);
              v27 = v62;
            }
            else
            {
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
          v34 += 40;
          --v33;
        }
        while (v33);
      }
      swift_bridgeObjectRelease(v58);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
  }
  else
  {
    v69 = 0;
    memset(v68, 0, sizeof(v68));
    sub_100010F2C((uint64_t)v68, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
}

uint64_t sub_100416A70(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69[2];
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[6];

  v66 = a2;
  v11 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v68 = (uint64_t)&v59 - v15;
  v16 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v16);
  v67 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v64 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for LockupCollectionSearchResult(0, v25);
  v77[3] = v28;
  v77[4] = sub_10000E720(&qword_100813210, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v77[0] = a1;
  sub_10000EF80((uint64_t)v77, (uint64_t)v71);
  swift_retain(a1);
  v29 = sub_10000DAF8(&qword_10080E910);
  v30 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v69, v71, v29, v30, 6))
  {
    v65 = v13;
    sub_100010E24(v69, (uint64_t)v74);
    v31 = v75;
    v32 = v76;
    sub_100010F08(v74, v75);
    v33 = dispatch thunk of ComponentModelContainer.children.getter(v31, v32);
    if (v33)
    {
      v59 = v33;
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v35 = v59 + 32;
        v63 = v28;
        v60 = v21;
        v61 = v22;
        v62 = v27;
        do
        {
          sub_10000EF80(v35, (uint64_t)v71);
          v37 = v72;
          v36 = v73;
          sub_100010F08(v71, v72);
          dispatch thunk of ViewModel.impressionMetrics.getter(v37, *(_QWORD *)(v36 + 8));
          v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
          if (v38((uint64_t)v20, 1, v21) == 1)
          {
            sub_100010F2C((uint64_t)v20, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
            v39 = sub_10000E720((unint64_t *)&unk_1008221A8, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v40 = v67;
            dispatch thunk of ViewModel.impressionMetrics.getter(v28, v39);
            if (v38(v40, 1, v21) == 1)
            {
              sub_100010F2C(v67, &qword_1008131E0);
              v42 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v68, 1, 1, v42);
            }
            else
            {
              v43 = v68;
              v44 = v67;
              ImpressionMetrics.id.getter(v41);
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v44, v21);
              v45 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v43, 0, 1, v45);
            }
            v46 = (uint64_t)v65;
            if (v66)
            {
              sub_100018ADC(v68, (uint64_t)v65, (uint64_t *)&unk_100819220);
              v47 = type metadata accessor for ImpressionMetrics.ID(0);
              v48 = *(_QWORD *)(v47 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
              {
                sub_100010F2C(v46, (uint64_t *)&unk_100819220);
                v50 = 0;
                v51 = 0;
              }
              else
              {
                v52 = v46;
                v50 = ImpressionMetrics.ID.element.getter(v49);
                v51 = v53;
                v21 = v60;
                (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v47);
              }
              v22 = v61;
              v54 = v64;
              v55 = v62;
              ImpressionMetrics.withParentId(_:)(v50, v51);
              swift_bridgeObjectRelease(v51);
              ImpressionsCalculator.addElement(_:at:)(v54, a3, a4, a5, a6);
              v56 = *(void (**)(char *, uint64_t))(v22 + 8);
              v57 = v54;
              v27 = v55;
              v56(v57, v21);
              sub_100010F2C(v68, (uint64_t *)&unk_100819220);
              v56(v55, v21);
              v28 = v63;
            }
            else
            {
              sub_100010F2C(v68, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v71);
          v35 += 40;
          --v34;
        }
        while (v34);
      }
      swift_bridgeObjectRelease(v59);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v74);
  }
  else
  {
    v70 = 0;
    memset(v69, 0, sizeof(v69));
    sub_100010F2C((uint64_t)v69, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v77);
}

uint64_t sub_100416FD8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68[2];
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[6];

  v65 = a2;
  v11 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v67 = (uint64_t)&v58 - v15;
  v16 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v16);
  v66 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v63 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v58 - v25;
  v27 = type metadata accessor for AppEventSearchResult(0);
  v76[3] = v27;
  v76[4] = sub_10000E720((unint64_t *)&qword_100808030, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v76[0] = a1;
  sub_10000EF80((uint64_t)v76, (uint64_t)v70);
  swift_retain(a1);
  v28 = sub_10000DAF8(&qword_10080E910);
  v29 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v68, v70, v28, v29, 6))
  {
    v64 = v13;
    sub_100010E24(v68, (uint64_t)v73);
    v30 = v74;
    v31 = v75;
    sub_100010F08(v73, v74);
    v32 = dispatch thunk of ComponentModelContainer.children.getter(v30, v31);
    if (v32)
    {
      v58 = v32;
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        v34 = v58 + 32;
        v62 = v27;
        v59 = v21;
        v60 = v22;
        v61 = v26;
        do
        {
          sub_10000EF80(v34, (uint64_t)v70);
          v36 = v71;
          v35 = v72;
          sub_100010F08(v70, v71);
          dispatch thunk of ViewModel.impressionMetrics.getter(v36, *(_QWORD *)(v35 + 8));
          v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
          if (v37((uint64_t)v20, 1, v21) == 1)
          {
            sub_100010F2C((uint64_t)v20, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v20, v21);
            v38 = sub_10000E720(&qword_1008221B8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v39 = v66;
            dispatch thunk of ViewModel.impressionMetrics.getter(v27, v38);
            if (v37(v39, 1, v21) == 1)
            {
              sub_100010F2C(v66, &qword_1008131E0);
              v41 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v67, 1, 1, v41);
            }
            else
            {
              v42 = v67;
              v43 = v66;
              ImpressionMetrics.id.getter(v40);
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v43, v21);
              v44 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 0, 1, v44);
            }
            v45 = (uint64_t)v64;
            if (v65)
            {
              sub_100018ADC(v67, (uint64_t)v64, (uint64_t *)&unk_100819220);
              v46 = type metadata accessor for ImpressionMetrics.ID(0);
              v47 = *(_QWORD *)(v46 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
              {
                sub_100010F2C(v45, (uint64_t *)&unk_100819220);
                v49 = 0;
                v50 = 0;
              }
              else
              {
                v51 = v45;
                v49 = ImpressionMetrics.ID.element.getter(v48);
                v50 = v52;
                v21 = v59;
                (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v46);
              }
              v22 = v60;
              v53 = v63;
              v54 = v61;
              ImpressionMetrics.withParentId(_:)(v49, v50);
              swift_bridgeObjectRelease(v50);
              ImpressionsCalculator.addElement(_:at:)(v53, a3, a4, a5, a6);
              v55 = *(void (**)(char *, uint64_t))(v22 + 8);
              v56 = v53;
              v26 = v54;
              v55(v56, v21);
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              v55(v54, v21);
              v27 = v62;
            }
            else
            {
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
          v34 += 40;
          --v33;
        }
        while (v33);
      }
      swift_bridgeObjectRelease(v58);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
  }
  else
  {
    v69 = 0;
    memset(v68, 0, sizeof(v68));
    sub_100010F2C((uint64_t)v68, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
}

uint64_t sub_100417540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for MixedMediaLockup(0);
  v69[3] = v19;
  v69[4] = sub_10000E720(&qword_1008192B0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v69[0] = a1;
  sub_10000EF80((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DAF8(&qword_10080E910);
  v21 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010E24(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100010F08(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_10000EF80(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100010F08(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E720(&qword_100822160, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100010F2C(v59, &qword_1008131E0);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_100018ADC(v60, (uint64_t)v57, (uint64_t *)&unk_100819220);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100010F2C(v37, (uint64_t *)&unk_100819220);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100010F2C((uint64_t)v61, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v69);
}

uint64_t sub_100417A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for EditorialSearchResult(0, v17);
  v70[3] = v20;
  v70[4] = sub_10000E720(&qword_100822180, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v70[0] = a1;
  sub_10000EF80((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v21 = sub_10000DAF8(&qword_10080E910);
  v22 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v62, v64, v21, v22, 6))
  {
    v58 = v5;
    sub_100010E24(v62, (uint64_t)v67);
    v23 = v68;
    v24 = v69;
    sub_100010F08(v67, v68);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v52 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v52 + 32;
        v56 = v20;
        v53 = v13;
        v54 = v14;
        v55 = v19;
        do
        {
          sub_10000EF80(v27, (uint64_t)v64);
          v29 = v65;
          v28 = v66;
          sub_100010F08(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E720(&qword_100822188, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100010F2C(v60, &qword_1008131E0);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v58;
            if (v59)
            {
              sub_100018ADC(v61, (uint64_t)v58, (uint64_t *)&unk_100819220);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100010F2C(v38, (uint64_t *)&unk_100819220);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v54;
              v46 = v57;
              v47 = v55;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              v48 = swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.removeElement(_:)(v46, v48);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v46;
              v19 = v47;
              v49(v50, v13);
              sub_100010F2C(v61, (uint64_t *)&unk_100819220);
              v49(v47, v13);
              v20 = v56;
            }
            else
            {
              sub_100010F2C(v61, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_100010F2C((uint64_t)v62, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
}

uint64_t sub_100417F98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for InAppPurchaseLockup(0);
  v69[3] = v19;
  v69[4] = sub_10000E720(&qword_100822190, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v69[0] = a1;
  sub_10000EF80((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DAF8(&qword_10080E910);
  v21 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010E24(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100010F08(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_10000EF80(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100010F08(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E720((unint64_t *)&unk_100822198, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100010F2C(v59, &qword_1008131E0);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_100018ADC(v60, (uint64_t)v57, (uint64_t *)&unk_100819220);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100010F2C(v37, (uint64_t *)&unk_100819220);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100010F2C((uint64_t)v61, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v69);
}

uint64_t sub_1004184C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for LockupCollectionSearchResult(0, v17);
  v70[3] = v20;
  v70[4] = sub_10000E720(&qword_100813210, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v70[0] = a1;
  sub_10000EF80((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v21 = sub_10000DAF8(&qword_10080E910);
  v22 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v62, v64, v21, v22, 6))
  {
    v58 = v5;
    sub_100010E24(v62, (uint64_t)v67);
    v23 = v68;
    v24 = v69;
    sub_100010F08(v67, v68);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v52 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v52 + 32;
        v56 = v20;
        v53 = v13;
        v54 = v14;
        v55 = v19;
        do
        {
          sub_10000EF80(v27, (uint64_t)v64);
          v29 = v65;
          v28 = v66;
          sub_100010F08(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_10000E720((unint64_t *)&unk_1008221A8, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            if (v30(v32, 1, v13) == 1)
            {
              sub_100010F2C(v60, &qword_1008131E0);
              v34 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v33);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v37 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
            }
            v38 = (uint64_t)v58;
            if (v59)
            {
              sub_100018ADC(v61, (uint64_t)v58, (uint64_t *)&unk_100819220);
              v39 = type metadata accessor for ImpressionMetrics.ID(0);
              v40 = *(_QWORD *)(v39 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
              {
                sub_100010F2C(v38, (uint64_t *)&unk_100819220);
                v42 = 0;
                v43 = 0;
              }
              else
              {
                v44 = v38;
                v42 = ImpressionMetrics.ID.element.getter(v41);
                v43 = v45;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v39);
              }
              v14 = v54;
              v46 = v57;
              v47 = v55;
              ImpressionMetrics.withParentId(_:)(v42, v43);
              v48 = swift_bridgeObjectRelease(v43);
              ImpressionsCalculator.removeElement(_:)(v46, v48);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v46;
              v19 = v47;
              v49(v50, v13);
              sub_100010F2C(v61, (uint64_t *)&unk_100819220);
              v49(v47, v13);
              v20 = v56;
            }
            else
            {
              sub_100010F2C(v61, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_100010F2C((uint64_t)v62, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
}

uint64_t sub_1004189F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for AppEventSearchResult(0);
  v69[3] = v19;
  v69[4] = sub_10000E720((unint64_t *)&qword_100808030, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v69[0] = a1;
  sub_10000EF80((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DAF8(&qword_10080E910);
  v21 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010E24(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100010F08(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_10000EF80(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100010F08(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E720(&qword_1008221B8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100010F2C(v59, &qword_1008131E0);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_100018ADC(v60, (uint64_t)v57, (uint64_t *)&unk_100819220);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100010F2C(v37, (uint64_t *)&unk_100819220);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100010F2C((uint64_t)v61, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v69);
}

uint64_t sub_100418F1C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100418F40()
{
  uint64_t v0;

  sub_100412420(v0);
}

uint64_t sub_100418F48(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68[2];
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[6];

  v65 = a2;
  v11 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v67 = (uint64_t)&v58 - v15;
  v16 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v16);
  v66 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - v19;
  v21 = type metadata accessor for ImpressionMetrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v63 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v58 - v25;
  v27 = type metadata accessor for LinkableText(0);
  v76[3] = v27;
  v76[4] = sub_10000E720((unint64_t *)&qword_1008221D0, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v76[0] = a1;
  sub_10000EF80((uint64_t)v76, (uint64_t)v70);
  swift_retain(a1);
  v28 = sub_10000DAF8(&qword_10080E910);
  v29 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v68, v70, v28, v29, 6))
  {
    v64 = v13;
    sub_100010E24(v68, (uint64_t)v73);
    v30 = v74;
    v31 = v75;
    sub_100010F08(v73, v74);
    v32 = dispatch thunk of ComponentModelContainer.children.getter(v30, v31);
    if (v32)
    {
      v58 = v32;
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        v34 = v58 + 32;
        v62 = v27;
        v59 = v21;
        v60 = v22;
        v61 = v26;
        do
        {
          sub_10000EF80(v34, (uint64_t)v70);
          v36 = v71;
          v35 = v72;
          sub_100010F08(v70, v71);
          dispatch thunk of ViewModel.impressionMetrics.getter(v36, *(_QWORD *)(v35 + 8));
          v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
          if (v37((uint64_t)v20, 1, v21) == 1)
          {
            sub_100010F2C((uint64_t)v20, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v20, v21);
            v38 = sub_10000E720(&qword_1008221D8, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
            v39 = v66;
            dispatch thunk of ViewModel.impressionMetrics.getter(v27, v38);
            if (v37(v39, 1, v21) == 1)
            {
              sub_100010F2C(v66, &qword_1008131E0);
              v41 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v67, 1, 1, v41);
            }
            else
            {
              v42 = v67;
              v43 = v66;
              ImpressionMetrics.id.getter(v40);
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v43, v21);
              v44 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 0, 1, v44);
            }
            v45 = (uint64_t)v64;
            if (v65)
            {
              sub_100018ADC(v67, (uint64_t)v64, (uint64_t *)&unk_100819220);
              v46 = type metadata accessor for ImpressionMetrics.ID(0);
              v47 = *(_QWORD *)(v46 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
              {
                sub_100010F2C(v45, (uint64_t *)&unk_100819220);
                v49 = 0;
                v50 = 0;
              }
              else
              {
                v51 = v45;
                v49 = ImpressionMetrics.ID.element.getter(v48);
                v50 = v52;
                v21 = v59;
                (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v46);
              }
              v22 = v60;
              v53 = v63;
              v54 = v61;
              ImpressionMetrics.withParentId(_:)(v49, v50);
              swift_bridgeObjectRelease(v50);
              ImpressionsCalculator.addElement(_:at:)(v53, a3, a4, a5, a6);
              v55 = *(void (**)(char *, uint64_t))(v22 + 8);
              v56 = v53;
              v26 = v54;
              v55(v56, v21);
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              v55(v54, v21);
              v27 = v62;
            }
            else
            {
              sub_100010F2C(v67, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
          v34 += 40;
          --v33;
        }
        while (v33);
      }
      swift_bridgeObjectRelease(v58);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
  }
  else
  {
    v69 = 0;
    memset(v68, 0, sizeof(v68));
    sub_100010F2C((uint64_t)v68, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
}

void sub_1004194B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;

  v4 = v3;
  v8 = type metadata accessor for SearchTransparencyView();
  v10 = static UICollectionReusableView.elementKind.getter(v9);
  if (v10 == a2 && v11 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v10, v11, 0);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
      return;
  }
  v15 = swift_dynamicCastClass(a1, v8);
  if (v15)
  {
    v16 = (void *)v15;
    v25 = a1;
    v17 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter(v25);
    if (v17)
    {
      v18 = v17;
      v19 = LinkableText.linkedSubstrings.getter();
      sub_1005B4244(v19, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100037F7C);
      v21 = v20;
      v22 = swift_bridgeObjectRelease(v19);
      v23 = LinkableText.styledText.getter(v22);
      sub_10043DA0C(v23, 0, v21);
      swift_bridgeObjectRelease(v21);
      objc_msgSend(v16, "setNeedsLayout", swift_release().n128_f64[0]);
      swift_retain(v18);
      sub_100414A10(v24, v25, v4);
      swift_release_n(v18, 2);

    }
    else
    {

    }
  }
}

uint64_t sub_100419650(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];

  v58 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100819220);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - v7;
  v8 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  v19 = type metadata accessor for LinkableText(0);
  v69[3] = v19;
  v69[4] = sub_10000E720((unint64_t *)&qword_1008221D0, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v69[0] = a1;
  sub_10000EF80((uint64_t)v69, (uint64_t)v63);
  swift_retain(a1);
  v20 = sub_10000DAF8(&qword_10080E910);
  v21 = sub_10000DAF8(&qword_100819278);
  if (swift_dynamicCast(v61, v63, v20, v21, 6))
  {
    v57 = v5;
    sub_100010E24(v61, (uint64_t)v66);
    v22 = v67;
    v23 = v68;
    sub_100010F08(v66, v67);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v51 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v51 + 32;
        v55 = v19;
        v52 = v13;
        v53 = v14;
        v54 = v18;
        do
        {
          sub_10000EF80(v26, (uint64_t)v63);
          v28 = v64;
          v27 = v65;
          sub_100010F08(v63, v64);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_100010F2C((uint64_t)v12, &qword_1008131E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_10000E720(&qword_1008221D8, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
            v31 = v59;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            if (v29(v31, 1, v13) == 1)
            {
              sub_100010F2C(v59, &qword_1008131E0);
              v33 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v60, 1, 1, v33);
            }
            else
            {
              v34 = v60;
              v35 = v59;
              ImpressionMetrics.id.getter(v32);
              (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v13);
              v36 = type metadata accessor for ImpressionMetrics.ID(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
            }
            v37 = (uint64_t)v57;
            if (v58)
            {
              sub_100018ADC(v60, (uint64_t)v57, (uint64_t *)&unk_100819220);
              v38 = type metadata accessor for ImpressionMetrics.ID(0);
              v39 = *(_QWORD *)(v38 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
              {
                sub_100010F2C(v37, (uint64_t *)&unk_100819220);
                v41 = 0;
                v42 = 0;
              }
              else
              {
                v43 = v37;
                v41 = ImpressionMetrics.ID.element.getter(v40);
                v42 = v44;
                v13 = v52;
                (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v43, v38);
              }
              v14 = v53;
              v45 = v56;
              v46 = v54;
              ImpressionMetrics.withParentId(_:)(v41, v42);
              v47 = swift_bridgeObjectRelease(v42);
              ImpressionsCalculator.removeElement(_:)(v45, v47);
              v48 = *(void (**)(char *, uint64_t))(v14 + 8);
              v49 = v45;
              v18 = v46;
              v48(v49, v13);
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              v48(v46, v13);
              v19 = v55;
            }
            else
            {
              sub_100010F2C(v60, (uint64_t *)&unk_100819220);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v63);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v51);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v66);
  }
  else
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    sub_100010F2C((uint64_t)v61, (uint64_t *)&unk_100819280);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v69);
}

uint64_t type metadata accessor for GenericPageCollectionElementsObserver()
{
  return objc_opt_self(_TtC20ProductPageExtension37GenericPageCollectionElementsObserver);
}

uint64_t sub_100419B9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100419C2C(a1, a2, a4);
}

void sub_100419BA4(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  ObjectType = swift_getObjectType();
  v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyAvatarShowcaseDisplaying);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = a1;
  else
    v5 = 0;
  if (v5)
  {
    v6 = swift_getObjectType();
    v7 = a1;
    dispatch thunk of AnyAvatarShowcaseDisplaying.unapply()(v6, v4);

  }
}

uint64_t sub_100419C2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  id v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)();
  id v58;
  unsigned __int8 v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  id v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  __int128 v88[2];
  uint64_t v89;
  _BYTE v90[40];
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;

  v84 = a3;
  v86 = a1;
  v3 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v3);
  v81 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for ShelfBackground(0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (uint64_t *)((char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Shelf.ContentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v87 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_100661410);
  ItemLayoutContext.subscript.getter(v16);
  v17 = swift_release();
  ItemLayoutContext.item.getter(v17);
  ReadOnlyLens.value.getter(v94, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  KeyPath = swift_getKeyPath(&unk_100661440);
  ReadOnlyLens.subscript.getter(v9, KeyPath, v14);
  swift_release();
  v19 = sub_100375634();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if (!v19)
  {
    v20 = v84;
    v21 = swift_getKeyPath(&unk_100661470);
    v22 = v82;
    v80 = v14;
    ReadOnlyLens.subscript.getter(v82, v21, v14);
    swift_release();
    v23 = (id)sub_1003C262C();
    (*(void (**)(_QWORD *, uint64_t))(v83 + 8))(v22, v85);
    v24 = v86;
    if (objc_msgSend(v86, "overrideUserInterfaceStyle") != v23)
      objc_msgSend(v24, "setOverrideUserInterfaceStyle:", v23);
    ObjectType = swift_getObjectType();
    v26 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SearchAdDisplaying);
    if (v26)
      v27 = v26;
    else
      v27 = 0;
    if (v26)
      v28 = v24;
    else
      v28 = 0;
    if (v28)
    {
      sub_10000EF80((uint64_t)v94, (uint64_t)v90);
      v29 = v24;
      v30 = sub_10000DAF8(&qword_10080E910);
      v31 = sub_10000DAF8(&qword_100808858);
      if ((swift_dynamicCast(v88, v90, v30, v31, 6) & 1) != 0)
      {
        sub_100010E24(v88, (uint64_t)v91);
        v32 = swift_getObjectType();
        v33 = v92;
        v34 = v93;
        sub_100010F08(v91, v92);
        v35 = dispatch thunk of SearchAdProviding.searchAd.getter(v33, v34);
        dispatch thunk of SearchAdDisplaying.apply(searchAd:asPartOf:)(v35, v20, v32, v27);

        swift_release();
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v91);
      }
      else
      {
        v89 = 0;
        memset(v88, 0, sizeof(v88));

        sub_100010F2C((uint64_t)v88, &qword_100819250);
      }
    }
    v36 = swift_getObjectType();
    v37 = swift_conformsToProtocol2(v36, &protocol descriptor for AnyAvatarShowcaseDisplaying);
    if (v37)
      v38 = v37;
    else
      v38 = 0;
    if (v37)
      v39 = v24;
    else
      v39 = 0;
    if (v39)
    {
      v40 = swift_getObjectType();
      v41 = v24;
      dispatch thunk of AnyAvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(v94, v20, v40, v38);

    }
    v42 = swift_getObjectType();
    v43 = swift_conformsToProtocol2(v42, &protocol descriptor for ExpandableTextCell);
    if (v43)
      v44 = v43;
    else
      v44 = 0;
    if (v43)
      v45 = v24;
    else
      v45 = 0;
    if (v45)
    {
      v85 = (uint64_t)v16;
      v46 = swift_getObjectType();
      v47 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8);
      v48 = v24;
      v49 = (char *)v47(v46, v44);
      v50 = (uint64_t *)&v49[OBJC_IVAR____TtC20ProductPageExtension18ExpandableTextView_moreTapHandler];
      v51 = *(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension18ExpandableTextView_moreTapHandler];
      v52 = *(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension18ExpandableTextView_moreTapHandler + 8];
      *v50 = 0;
      v50[1] = 0;
      sub_100018908(v51, v52);
      v53 = *(void **)&v49[OBJC_IVAR____TtC20ProductPageExtension18ExpandableTextView_moreButton];
      v54 = *v50;
      v55 = v50[1];
      if (*v50)
      {
        v56 = swift_allocObject(&unk_100753648, 32, 7);
        *(_QWORD *)(v56 + 16) = v54;
        *(_QWORD *)(v56 + 24) = v55;
        v57 = sub_100036D9C;
      }
      else
      {
        v57 = 0;
        v56 = 0;
      }
      v16 = (_QWORD *)v85;
      sub_100018918(v54, v55);
      sub_100018908((uint64_t)v57, v56);
      objc_msgSend(v53, "setUserInteractionEnabled:", v54 != 0);

    }
    v58 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v59 = sub_1005FBB2C((uint64_t)v58);

    v14 = v80;
    if ((v59 & 1) != 0)
    {
      objc_msgSend(v24, "bounds");
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v67 = v66;
      v68 = objc_msgSend((id)objc_opt_self(UIColor), "blueColor");
      v69 = objc_allocWithZone((Class)type metadata accessor for ImpressionMetricsDebugOverlay());
      v70 = sub_1000E7B58(v68, (uint64_t)v69, v61, v63, v65, v67);
      v71 = v16;
      v73 = v95;
      v72 = v96;
      sub_100010F08(v94, v95);
      v74 = *(_QWORD *)(v72 + 8);
      v75 = (uint64_t)v81;
      dispatch thunk of ViewModel.impressionMetrics.getter(v73, v74);
      sub_1000E7E98(v75);
      sub_100010F2C(v75, &qword_1008131E0);
      v76 = objc_msgSend(v24, "contentView");
      v77 = objc_msgSend(v76, "viewWithTag:", 58236912);

      objc_msgSend(v77, "removeFromSuperview");
      v78 = objc_msgSend(v24, "contentView");
      objc_msgSend(v78, "addSubview:", v70);

      v16 = v71;
    }
  }
  (*(void (**)(_QWORD *, uint64_t))(v87 + 8))(v16, v14);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v94);
}

void sub_10041A2F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  unsigned __int8 v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  id v52;
  char *v53;
  __n128 v54;
  uint64_t KeyPath;
  __n128 v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[5];

  v9 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v9);
  v11 = (id *)((char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v17 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SectionBackgroundView);
  if (v17)
    v18 = v17;
  else
    v18 = 0;
  if (v17)
    v19 = a1;
  else
    v19 = 0;
  v60 = a2;
  if (v19)
  {
    v20 = swift_getObjectType();
    v21 = type metadata accessor for ObjectGraph(0);
    v22 = swift_dynamicCastClassUnconditional(a5, v21, 0, 0, 0);
    v23 = a1;
    v24 = a2;
    v25 = v13;
    v26 = v23;
    sub_1000FA174(v24, v22, v20, v18);

    v13 = v25;
  }
  else
  {
    v27 = type metadata accessor for TodayDebugSectionBackgroundView();
    if (swift_dynamicCastClass(a1, v27))
    {
      v28 = a1;
      sub_1003E9A7C(a2, v29);

    }
    else
    {
      v30 = type metadata accessor for InteractiveSectionBackgroundView(0);
      v31 = swift_dynamicCastClass(a1, v30);
      if (v31)
      {
        v32 = v31;
        v33 = type metadata accessor for InteractiveSectionBackgroundScrollObserverStore();
        v59 = v13;
        v34 = v33;
        v35 = type metadata accessor for BaseObjectGraph(0);
        v58 = a1;
        v36 = v34;
        v37 = v34;
        v13 = v59;
        inject<A, B>(_:from:)(v36, a5, v37, v35);
        v38 = type metadata accessor for ObjectGraph(0);
        v39 = swift_dynamicCastClassUnconditional(a5, v38, 0, 0, 0);
        sub_10010F478(v60, a4, v39);
        v61[3] = v30;
        v61[4] = &off_1007441B8;
        v61[0] = v32;
        v40 = v58;
        sub_100394D68((uint64_t)v61);
        swift_release();
        swift_release();

        sub_100010F2C((uint64_t)v61, (uint64_t *)&unk_100826520);
      }
    }
  }
  v41 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v42 = sub_1005FBB2C((uint64_t)v41);

  if ((v42 & 1) != 0)
  {
    objc_msgSend(a1, "bounds");
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v51 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
    v52 = objc_allocWithZone((Class)type metadata accessor for ImpressionMetricsDebugOverlay());
    v53 = sub_1000E7B58(v51, (uint64_t)v52, v44, v46, v48, v50);
    ShelfLayoutContext.shelf.getter(v54);
    KeyPath = swift_getKeyPath(&unk_1006613E0);
    ReadOnlyLens.subscript.getter(v11, KeyPath, v12);
    v56 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v56);
    sub_1000E7E98((uint64_t)v11);
    sub_100010F2C((uint64_t)v11, &qword_1008131E0);
    v57 = objc_msgSend(a1, "viewWithTag:", 58236912);
    objc_msgSend(v57, "removeFromSuperview");

    objc_msgSend(a1, "addSubview:", v53);
  }
}

uint64_t sub_10041A6BC()
{
  return Shelf.impressionMetrics.getter();
}

uint64_t sub_10041A6E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10041A70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  __n128 v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  __n128 v50;
  uint64_t KeyPath;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  id v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD v116[4];
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  char v122[8];
  char v123[8];

  v114 = a4;
  v90 = a3;
  v108 = type metadata accessor for ActionRunner.Origin(0);
  v107 = *(_QWORD *)(v108 - 8);
  v6 = __chkstk_darwin(v108);
  v106 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for FlowOrigin(0, v6);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v105 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for FlowAnimationBehavior(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v104 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for FlowPresentationContext(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v102 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetrics(0, v11);
  __chkstk_darwin(v12);
  v100 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v14);
  v97 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v16);
  v95 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for FlowPage(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v93 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v20 = (uint64_t *)((char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ItemLayoutContext(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Shelf.ContentType(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v89 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v110 = (uint64_t *)((char *)&v84 - v31);
  v111 = type metadata accessor for IndexPath(0);
  v109 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v115 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v123, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v34 = Strong;
    v35 = a2 + 16;
    swift_beginAccess(v35, v122, 0, 0);
    v36 = (void *)swift_unknownObjectWeakLoadStrong(v35);
    if (v36)
    {
      v37 = v36;
      v38 = UIResponder.nearestActionRunner.getter();

      v86 = v38;
      if (v38)
      {
        v85 = v37;
        v39 = v90;
        v40 = dispatch thunk of ComponentContainerCollectionElementsObserver.ContainerDelegate.indexPath(ofItem:)(v90);
        dispatch thunk of ComponentContainerCollectionElementsObserver.ContainerDelegate.modelContainment.getter(&v120, v40);
        v84 = v34;
        if (v121)
        {
          sub_100010E24(&v120, (uint64_t)&v117);
          v41 = *((_QWORD *)&v118 + 1);
          v42 = v119;
          sub_100010F08(&v117, *((uint64_t *)&v118 + 1));
          dispatch thunk of ComponentModelContainment.model(at:)(v39, v41, v42);
          v43 = *((_QWORD *)&v118 + 1);
          v44 = v119;
          sub_100010F08(&v117, *((uint64_t *)&v118 + 1));
          v45 = v110;
          dispatch thunk of ComponentModelContainment.contentType(for:)(v39, v43, v44);
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v117);
        }
        else
        {
          v46 = sub_100010F2C((uint64_t)&v120, &qword_100810A98);
          v47.n128_f64[0] = ComponentContainerCollectionElementsObserver.ContainerDelegate.itemLayoutContext.getter(v46);
          ItemLayoutContext.item.getter(v47);
          v48 = *(void (**)(char *, uint64_t))(v26 + 8);
          v48(v28, v25);
          ReadOnlyLens.value.getter(&v120, v21);
          v49 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
          ComponentContainerCollectionElementsObserver.ContainerDelegate.itemLayoutContext.getter(v49);
          swift_getKeyPath(&unk_1006614B0);
          ItemLayoutContext.subscript.getter(v20);
          v50 = swift_release();
          ((void (*)(char *, uint64_t, __n128))v48)(v28, v25, v50);
          KeyPath = swift_getKeyPath(&unk_1006614E0);
          v45 = v110;
          v52 = v88;
          ReadOnlyLens.subscript.getter(v110, KeyPath, v88);
          v53 = swift_release();
          (*(void (**)(_QWORD *, uint64_t, __n128))(v87 + 8))(v20, v52, v53);
        }
        v54 = type metadata accessor for ComponentViewOverflowViewController();
        sub_10000EF80((uint64_t)&v120, (uint64_t)&v117);
        v55 = (uint64_t)v89;
        (*(void (**)(char *, _QWORD *, uint64_t))(v112 + 16))(v89, v45, v113);
        v56 = sub_1005A60D4(v114, 0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011, 0x800000010068ED30);
        v57 = *((_QWORD *)&v118 + 1);
        v58 = v119;
        v59 = sub_100085788((uint64_t)&v117, *((uint64_t *)&v118 + 1));
        v60 = (void *)sub_10035D9CC(v59, v55, v56, v54, v57, v58);
        swift_release();
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v117);
        v119 = 0;
        v117 = 0u;
        v118 = 0u;
        v61 = v93;
        (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v93, enum case for FlowPage.componentOverflow(_:), v92);
        v63 = type metadata accessor for URL(0, v62);
        v64 = v95;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v95, 1, 1, v63);
        v65 = type metadata accessor for ReferrerData(0);
        v66 = v97;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v97, 1, 1, v65);
        v67 = type metadata accessor for ComponentOverflowData(0);
        v116[3] = v67;
        v68 = (char *)sub_1000119C0(v116);
        (*(void (**)(char *, char *, uint64_t))(v109 + 16))(&v68[*(int *)(v67 + 20)], v115, v111);
        *(_QWORD *)v68 = v60;
        v69 = v60;
        v70 = v100;
        static ActionMetrics.notInstrumented.getter(v69);
        v71 = v102;
        (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v102, enum case for FlowPresentationContext.infer(_:), v96);
        v72 = v104;
        (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v104, enum case for FlowAnimationBehavior.infer(_:), v99);
        v73 = v105;
        v74 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v101 + 104))(v105, enum case for FlowOrigin.inapp(_:), v103);
        v75 = static FlowActionPresentation.stackPush.getter(v74);
        v77 = v76;
        v78 = type metadata accessor for FlowAction(0);
        swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
        v79 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v117, 0, 0, 0, v61, v64, 0, 0, v66, v116, v70, v71, v72, v73, 0, v75, v77);
        v117 = 0u;
        v118 = 0u;
        v80 = v107;
        v81 = v106;
        v82 = v108;
        (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v106, enum case for ActionRunner.Origin.userInitiated(_:), v108);
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v79, &v117, v81, v114);

        swift_release();
        swift_release();
        v83 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v81, v82, v83);
        sub_100010F2C((uint64_t)&v117, &qword_100808F20);
        (*(void (**)(_QWORD *, uint64_t))(v112 + 8))(v110, v113);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v120);
        (*(void (**)(char *, uint64_t))(v109 + 8))(v115, v111);
      }
      else
      {
        swift_release();

      }
    }
    else
    {
      swift_release();
    }
  }
}

void (*sub_10041B0C4(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = swift_allocObject(&unk_100753700, 24, 7);
  swift_weakInit(v5 + 16);
  v6 = swift_allocObject(&unk_100753728, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = (_QWORD *)swift_allocObject(&unk_100753750, 48, 7);
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a3;
  swift_retain(a3);
  return sub_10041B1F4;
}

uint64_t sub_10041B178()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041B19C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041B1C0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10041B1F4()
{
  uint64_t *v0;

  sub_10041A70C(v0[2], v0[3], v0[4], v0[5]);
}

void sub_10041B208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;

  v7 = v6;
  v8 = sub_10007644C(a1, a3, a4, a5, a6);
  InAppPurchaseLockup.parent.getter(v8, v9);
  v11 = Lockup.title.getter(v10);
  v13 = v12;
  swift_release();
  if (v13)
  {
    v14._object = (void *)0x80000001006A35D0;
    v15._countAndFlagsBits = 0x465F4E4F5F444441;
    v15._object = (void *)0xEE005050415F524FLL;
    v14._countAndFlagsBits = 0xD000000000000031;
    v16 = localizedString(_:comment:)(v15, v14);
    v17 = sub_10000DAF8(&qword_100810E60);
    v18 = swift_allocObject(v17, 72, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100640720;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    *(_QWORD *)(v18 + 64) = sub_10013F398();
    *(_QWORD *)(v18 + 32) = v11;
    *(_QWORD *)(v18 + 40) = v13;
    v19 = swift_bridgeObjectRetain(v13);
    String.init(format:_:)(v16._countAndFlagsBits, v16._object, v18, v19);
    v21 = v20;
    swift_bridgeObjectRelease(v16._object);
    v22 = objc_allocWithZone((Class)NSMutableAttributedString);
    swift_bridgeObjectRetain(v21);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v22, "initWithString:", v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

    v25 = objc_allocWithZone((Class)NSString);
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "initWithString:", v26, swift_bridgeObjectRelease(v21).n128_f64[0]);

    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v27, "rangeOfString:options:", v28, 4, swift_bridgeObjectRelease(v13).n128_f64[0]);
    v31 = v30;

    v36 = objc_msgSend(v7, "tintColor");
    v32 = sub_10000DAF8(&qword_1008222D8);
    v33 = Optional._bridgeToObjectiveC()(v32);

    objc_msgSend(v24, "addAttribute:value:range:", NSForegroundColorAttributeName, v33, v29, v31);
    swift_unknownObjectRelease();
    v34 = *(void **)(*(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView]
                   + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_subtitleLabel);
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v35, "setAttributedText:", v24);

    }
  }
}

void sub_10041B4B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_10041B208(*a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10041B4B8()
{
  return sub_10000E720(&qword_100822190, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
}

uint64_t type metadata accessor for AppStoreVideoPlayerViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension33AppStoreVideoPlayerViewController);
}

id sub_10041B658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  Swift::String_optional v24;
  Class isa;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  id v31;
  __int128 v32;
  __int128 v33;
  UIImage_optional v34;
  UIAction_optional v35;
  UIMenu_optional v36;

  *(_BYTE *)(v2 + qword_100822370) = 0;
  v5 = qword_100822378;
  v6 = type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver();
  v7 = swift_allocObject(v6, 17, 7);
  *(_BYTE *)(v7 + 16) = 0;
  *(_QWORD *)(v2 + v5) = v7;
  swift_retain(a1);
  swift_retain(a2);
  v8 = (id)sub_1002547A4(a1, a2);
  result = objc_msgSend(v8, "collectionView");
  if (result)
  {
    v10 = result;
    v11 = sub_10000DAF8((uint64_t *)&unk_10080B800);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100640720;
    *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v13 = sub_100018B6C(0, (unint64_t *)&unk_100813260, UICollectionView_ptr);
    UIView.registerForTraitChanges<A>(_:handler:)(v12, sub_10041B904, 0, v13);
    swift_unknownObjectRelease();

    v14 = swift_bridgeObjectRelease(v12);
    v15 = ReviewsDiffablePagePresenter.trailingNavBarAction.getter(v14);
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v8, "navigationItem");
      sub_100018B6C(0, (unint64_t *)&qword_100820720, UIBarButtonItem_ptr);
      v18 = swift_retain(v16);
      v19 = Action.title.getter(v18);
      v21 = v20;
      swift_release();
      v32 = 0u;
      v33 = 0u;
      swift_retain(a1);
      v22 = swift_retain(v16);
      v34.is_nil = sub_10041D77C(v23, a1, 0, (uint64_t)&v32, v22);
      v24.value._countAndFlagsBits = v19;
      v24.value._object = v21;
      v34.value.super.isa = 0;
      v35.value.super.super.isa = 0;
      isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v24, v34, v35, v36).super.super.isa;
      objc_msgSend(v17, "setRightBarButtonItem:", isa, v32, v33);
      swift_release();

    }
    v26 = v8;
    ReviewsDiffablePagePresenter.title.getter();
    v28 = v27;
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setTitle:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

    *((_BYTE *)v26 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle) = 1;
    v30 = v26;
    v31 = objc_msgSend(v30, "navigationItem");
    objc_msgSend(v31, "setLargeTitleDisplayMode:", 3);

    swift_release();
    swift_release();

    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10041B904(void *a1)
{
  return objc_msgSend(a1, "reloadData");
}

uint64_t sub_10041B910(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_10000DAF8(&qword_100822920);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ItemLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21.receiver = v1;
  v21.super_class = ObjectType;
  result = (uint64_t)objc_msgSendSuper2(&v21, "viewWillAppear:", a1 & 1, v13);
  v18 = qword_100822370;
  if ((*((_BYTE *)v1 + qword_100822370) & 1) == 0)
  {
    sub_10041BAE0((uint64_t)v6, v17);
    v19 = sub_10000DAF8(&qword_100822928);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v6, 1, v19) == 1)
    {
      result = sub_100010F2C((uint64_t)v6, &qword_100822920);
    }
    else
    {
      v20 = &v6[*(int *)(v19 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v6, v11);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v20, v7);
      sub_10041C418((uint64_t)v15);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
  }
  *((_BYTE *)v1 + v18) = 1;
  return result;
}

uint64_t sub_10041BAE0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *);
  char *v33;
  id *v34;
  __n128 v35;
  id v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t result;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  __n128 v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t (**v99)(_QWORD, _QWORD);
  uint64_t v100;
  uint64_t v101;
  unint64_t *v102;
  char v103[24];
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  _OWORD v107[2];
  uint64_t v108;

  v84 = a1;
  v3 = type metadata accessor for ProductReview.ReviewSource(0, a2);
  v99 = *(uint64_t (***)(_QWORD, _QWORD))(v3 - 8);
  v100 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for ItemLayoutContext.Metadata(0, v4);
  v94 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v93 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for ItemLayoutContext(0);
  v91 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for IndexPath(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v98 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v101 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8(&qword_100822930);
  v96 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v85 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8(&qword_100822938);
  __chkstk_darwin(v16);
  v102 = (unint64_t *)((char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v95 = (char *)&v79 - v19;
  v86 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v83 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v82 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(&qword_10080D0E0);
  __chkstk_darwin(v21);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ShelfLayoutContext(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v97 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v2;
  ReviewsDiffablePagePresenter.initialFocusedReviewId.getter(&v104, v28);
  if (!*((_QWORD *)&v105 + 1))
  {
    v29 = &qword_100809010;
    v30 = (char *)&v104;
    goto LABEL_5;
  }
  v107[0] = v104;
  v107[1] = v105;
  v108 = v106;
  sub_10041D29C(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_100018968((uint64_t)v107);
    v29 = &qword_10080D0E0;
    v30 = v23;
LABEL_5:
    sub_100010F2C((uint64_t)v30, v29);
    goto LABEL_23;
  }
  v31 = v24;
  v79 = v25;
  v32 = *(void (**)(char *, char *))(v25 + 32);
  v33 = v97;
  v80 = v31;
  v32(v97, v23);
  v34 = (id *)(v2 + qword_100817450);
  v35 = swift_beginAccess(v27 + qword_100817450, v103, 0, 0);
  if (*v34)
  {
    v36 = *v34;
    v37 = v82;
    ShelfLayoutContext.shelf.getter(v38);
    v39 = dispatch thunk of ModelMappedDiffableDataSource.itemModels(in:)(v37);

    result = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v37, v86);
    if (v39)
    {
      v41 = 0;
      v82 = (char *)v39;
      v42 = *(_QWORD *)(v39 + 16);
      LODWORD(v83) = enum case for ProductReview.ReviewSource.user(_:);
      v43 = v98;
      v44 = v102;
      v86 = v42;
      v81 = v9;
      v87 = v14;
      while (1)
      {
        if (v41 == v42)
        {
          v46 = 1;
          v41 = v42;
          v47 = v101;
        }
        else
        {
          v47 = v101;
          if (v41 >= *((_QWORD *)v82 + 2))
          {
            __break(1u);
            return result;
          }
          v48 = &v85[*(int *)(v14 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v48, &v82[((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(_QWORD *)(v101 + 72) * v41], v11);
          v49 = (char *)v102 + *(int *)(v14 + 48);
          *v102 = v41;
          v50 = v48;
          v43 = v98;
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v50, v11);
          v44 = v102;
          v46 = 0;
          ++v41;
        }
        v51 = v96;
        (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v44, v46, 1, v14);
        v52 = (uint64_t)v44;
        v53 = v95;
        sub_10002548C(v52, (uint64_t)v95, &qword_100822938);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v53, 1, v14) == 1)
        {
          v74 = swift_bridgeObjectRelease(v82);
          (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v97, v80, v74);
          sub_100018968((uint64_t)v107);
          v71 = sub_10000DAF8(&qword_100822928);
          v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
          v73 = v84;
          return v72(v73, 1, 1, v71);
        }
        v54 = *(_QWORD *)v53;
        v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v47 + 32))(v13, &v53[*(int *)(v14 + 48)], v11);
        v56 = v13;
        v57 = v47;
        v58 = v11;
        v59 = v43;
        v60 = ShelfLayoutContext.index.getter(v55);
        v61 = IndexPath.init(item:section:)(v54, v60);
        v62 = v93;
        ItemLayoutContext.Metadata.init()(v61);
        ShelfLayoutContext.itemLayoutContext(for:at:metadata:)(v56, v43, v62);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v92);
        v63 = type metadata accessor for ProductReview(0);
        v64 = sub_10000E720(&qword_100816988, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReview, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
        v65 = ItemLayoutContext.typedModel<A>(as:)(&v104, v63, v63, v64);
        if ((_QWORD)v104)
        {
          ProductReview.source.getter(v65);
          v66 = ((uint64_t (**)(char *, uint64_t))v99)[11](v6, v100);
          if (v66 != (_DWORD)v83)
          {
            v45 = swift_release();
            (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v9, v90, v45);
            v43 = v98;
            (*(void (**)(char *, uint64_t))(v88 + 8))(v98, v89);
            v13 = v56;
            v11 = v58;
            (*(void (**)(char *, uint64_t))(v101 + 8))(v56, v58);
            result = ((uint64_t (**)(char *, uint64_t))v99)[1](v6, v100);
            goto LABEL_10;
          }
          v67 = v91;
          v68 = ((uint64_t (**)(char *, uint64_t))v99)[12](v6, v100);
          Review.id.getter(&v104, v68);
          v69 = static AnyHashable.== infix(_:_:)(&v104, v107);
          swift_release();
          swift_release();
          sub_100018968((uint64_t)&v104);
          v11 = v58;
          (*(void (**)(char *, uint64_t))(v101 + 8))(v56, v58);
          if ((v69 & 1) != 0)
          {
            v75 = swift_bridgeObjectRelease(v82);
            (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v97, v80, v75);
            sub_100018968((uint64_t)v107);
            v76 = sub_10000DAF8(&qword_100822928);
            v77 = v84;
            v78 = v84 + *(int *)(v76 + 48);
            (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v84, v98, v89);
            (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v78, v81, v90);
            return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v77, 0, 1, v76);
          }
          v9 = v81;
          (*(void (**)(char *, uint64_t))(v67 + 8))(v81, v90);
          v43 = v98;
          result = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v98, v89);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v91 + 8))(v9, v90);
          (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v89);
          result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v56, v58);
          v43 = v59;
          v11 = v58;
        }
        v13 = v56;
LABEL_10:
        v14 = v87;
        v44 = v102;
        v42 = v86;
      }
    }
  }
  (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v33, v80, v35);
  sub_100018968((uint64_t)v107);
LABEL_23:
  v70 = v84;
  v71 = sub_10000DAF8(&qword_100822928);
  v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v73 = v70;
  return v72(v73, 1, 1, v71);
}

uint64_t sub_10041C418(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  Class isa;
  _QWORD v23[2];

  v2 = v1;
  v23[0] = a1;
  v3 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100816170);
  __chkstk_darwin(v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_10080F9F8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.mutableState.getter(v14);
  WritableStateLens.init(_:)(v9, &_s5StateVN_8);
  v15 = sub_100109550();
  WritableStateLens<A>.updateValue(_:)(sub_1000FE5DC, 0, v10, v15);
  ItemLayoutContext.item.getter(v16);
  v17 = type metadata accessor for ReviewsDiffablePagePresenter(0);
  v18 = sub_10000E720(&qword_1008228F0, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  ReloadableItemPagePresenter.reloadItem(_:)(v6, v17, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = objc_msgSend(v2, "collectionView", v23[0]);
  if (v19)
  {
    v20 = v19;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_10041C620(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10041B910(a3);

}

uint64_t sub_10041C660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_10000DAF8(&qword_100822918);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v6, v2) != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:)
    || (ReviewsDiffablePagePresenter.isUpdatingSortOption.getter() & 1) == 0)
  {
    sub_100602694(a1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_10041C73C(void *a1, double a2, double a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  double (*v13)(uint64_t, uint64_t);
  void *v14;
  void (*v15)(int);
  uint64_t v16;
  objc_super v17;

  v17.receiver = v3;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v15 = (void (*)(int))static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  v16 = 0;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1005F3AC0;
  v14 = &unk_100753848;
  v7 = _Block_copy(&v11);
  v8 = swift_allocObject(&unk_100753880, 24, 7);
  *(_QWORD *)(v8 + 16) = v3;
  v15 = sub_10041DB90;
  v16 = v8;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1005F3AC0;
  v14 = &unk_100753898;
  v9 = _Block_copy(&v11);
  v10 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v7, v9, swift_release().n128_f64[0]);
  _Block_release(v9);
  _Block_release(v7);
}

void sub_10041C868(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "collectionView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

void sub_10041C8B4(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_10041C73C(a5, a2, a3);
  swift_unknownObjectRelease();

}

unint64_t sub_10041C920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  unint64_t result;

  v3 = *(_QWORD *)(v1 + qword_1008664F0);
  v4 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain(v3);
  v6 = PageGridCache.init()(v5);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v8 = PageGridCache.init()(v7);
  a1[3] = (uint64_t)&type metadata for ReviewsPageGridProvider;
  result = sub_10041DB10();
  a1[4] = result;
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v3;
  return result;
}

uint64_t sub_10041C9C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t result;
  double *v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[40];
  _QWORD v26[5];
  __int128 v27;
  __int128 v28;
  _QWORD v29[4];
  _QWORD v30[4];

  ObjectType = swift_getObjectType();
  v28 = xmmword_100640600;
  v4 = sub_10000E720(&qword_1008228E8, type metadata accessor for ReviewsDiffablePageViewController, (uint64_t)&unk_100654940);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v29[3] = swift_getObjectType();
  v29[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v30[3] = swift_getObjectType();
  v30[0] = v6;
  sub_100010D84((uint64_t)v29, (uint64_t)v26);
  sub_100010D84((uint64_t)v26, (uint64_t)v25);
  v7 = sub_10000DAF8((uint64_t *)&unk_100817640);
  v8 = sub_10000DAF8(&qword_100807BE0);
  if ((swift_dynamicCast(&v27, v25, v7, v8, 6) & 1) == 0)
    v27 = 0uLL;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
  if ((_QWORD)v27)
  {
    v23 = v27;
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = (double *)sub_1003D99D0(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = *((_QWORD *)v9 + 2);
    v10 = *((_QWORD *)v9 + 3);
    if (v11 >= v10 >> 1)
      v9 = (double *)sub_1003D99D0((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v23;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100010D84((uint64_t)v30, (uint64_t)v26);
  sub_100010D84((uint64_t)v26, (uint64_t)v25);
  v12 = sub_10000DAF8((uint64_t *)&unk_100817640);
  v13 = sub_10000DAF8(&qword_100807BE0);
  if ((swift_dynamicCast(&v27, v25, v12, v13, 6) & 1) == 0)
    v27 = 0uLL;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
  if ((_QWORD)v27)
  {
    v24 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = (double *)sub_1003D99D0(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v15 = *((_QWORD *)v9 + 2);
    v14 = *((_QWORD *)v9 + 3);
    v16 = v24;
    if (v15 >= v14 >> 1)
    {
      v22 = (double *)sub_1003D99D0((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v24;
      v9 = v22;
    }
    *((_QWORD *)v9 + 2) = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v29, v28, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v26, ObjectType, v4);
  v17 = *(_QWORD *)(v1 + qword_100866540);
  v18 = type metadata accessor for GenericPageLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  sub_10000EF80((uint64_t)v26, (uint64_t)v25);
  v19 = swift_retain(v17);
  v20 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v25, v9, v17, 0, v19);
  result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v20;
  return result;
}

uint64_t sub_10041CCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_1008664F0);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
  v3 = type metadata accessor for ReviewsPageShelfSupplementaryProvider();
  v4 = swift_allocObject(v3, 48, 7);
  v5 = swift_weakInit(v4 + 40);
  swift_weakAssign(v5, v1);
  v6 = sub_10000E720(&qword_1008228F8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  *(_QWORD *)(v4 + 32) = 0;
  swift_unknownObjectWeakInit(v4 + 24);
  *(_QWORD *)(v4 + 32) = v6;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v4 + 16) = v2;
  sub_10000E720(&qword_100822908, (uint64_t (*)(uint64_t))type metadata accessor for ReviewsPageShelfSupplementaryProvider, (uint64_t)&unk_100658410);
  swift_retain(v2);
  return v4;
}

uint64_t sub_10041CDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::OpaquePointer v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1005B6830();
  v4 = type metadata accessor for CompoundCollectionElementsObserver(0);
  if (swift_dynamicCastClass(v3, v4))
  {
    v5 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_10041D02C, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v5 = CompoundCollectionElementsObserver.init(children:)(_swiftEmptyArrayStorage);
  }
  v6 = sub_10000DAF8(&qword_100807C20);
  v7._rawValue = (void *)swift_allocObject(v6, 64, 7);
  *((_OWORD *)v7._rawValue + 1) = xmmword_100640600;
  v8 = sub_10000E720(&qword_1008228E8, type metadata accessor for ReviewsDiffablePageViewController, (uint64_t)&unk_100654940);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v20, ObjectType, v8);
  v9 = *(_QWORD *)(v1 + qword_1008664F0);
  v10 = *(_QWORD *)(v1 + qword_100866540);
  v11 = sub_10000E720(&qword_1008228F0, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = sub_10000E720(&qword_1008228F8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v13 = type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  swift_unknownObjectWeakInit(v14 + qword_100816920);
  *(_QWORD *)(v14 + qword_100816930) = 0;
  swift_unknownObjectWeakAssign();
  sub_10000EF80((uint64_t)v20, v14 + qword_100816928);
  swift_retain(v9);
  v15 = swift_retain(v10);
  v16 = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v9, v11, v12, v10, v15);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v20);
  *((_QWORD *)v7._rawValue + 4) = v16;
  *((_QWORD *)v7._rawValue + 5) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v17 = *(_QWORD *)(v1 + qword_100822378);
  v18 = sub_10000E720(&qword_100822900, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver, (uint64_t)&unk_1006489D8);
  *((_QWORD *)v7._rawValue + 6) = v17;
  *((_QWORD *)v7._rawValue + 7) = v18;
  swift_retain(v17);
  CompoundCollectionElementsObserver.addChildren(_:)(v7);
  swift_bridgeObjectRelease(v7._rawValue);
  return v5;
}

BOOL sub_10041D02C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  return swift_dynamicCastClass(a1, v2) != 0;
}

void sub_10041D064(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];

  v2 = v1;
  v4 = objc_msgSend(v2, "traitCollection");
  v9[2] = a1;
  v5 = (void *)UITraitCollection.modifyingTraits(_:)(sub_10041DB08, v9);

  v6 = objc_msgSend(v2, "view");
  if (v6)
  {
    v7 = v6;
    if (qword_100806918 != -1)
      swift_once(&qword_100806918, sub_1004F26EC);
    v8 = objc_msgSend((id)qword_10086AA98, "resolvedColorWithTraitCollection:", v5);
    objc_msgSend(v7, "setBackgroundColor:", v8);

    *(_BYTE *)(*(_QWORD *)&v2[qword_100822378] + 16) = 1;
  }
  else
  {
    __break(1u);
  }
}

void sub_10041D174(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (a2)
  {
    v7 = a2;
    v3 = objc_msgSend(v7, "traitCollection");
    v4 = objc_msgSend(v3, "userInterfaceLevel");

    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(a1 + 32);
    sub_100085788(a1, v5);
    UIMutableTraits.userInterfaceLevel.setter(v4, v5, v6);

  }
}

void sub_10041D208()
{
  char *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

    *(_BYTE *)(*(_QWORD *)&v0[qword_100822378] + 16) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_10041D29C(char *a1@<X8>)
{
  char *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  __n128 v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, __n128);
  uint64_t v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  char *v39;
  double (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[32];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Shelf.ContentType(0);
  v52 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v50 = (char **)((char *)&v39 - v8);
  v9 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  __chkstk_darwin(v9);
  v46 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10080D0E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfLayoutContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v49 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (id *)&v1[qword_100817450];
  v18 = swift_beginAccess(v17, v57, 0, 0);
  if (*v17)
  {
    v19 = *v17;
    v20 = objc_msgSend(v2, "collectionView");
    if (!v20)
    {
LABEL_21:
      __break(1u);
      return;
    }
    v21 = v20;
    v22 = dispatch thunk of UICollectionViewDiffableDataSource.numberOfSections(in:)();

    if (v22 < 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v22)
    {
      v39 = a1;
      v43 = enum case for Shelf.ContentType.productReview(_:);
      v23 = sub_10000E720(&qword_1008228E8, type metadata accessor for ReviewsDiffablePageViewController, (uint64_t)&unk_100654940);
      v24 = 0;
      v41 = v23;
      v42 = ObjectType;
      v44 = v15;
      v45 = v14;
      while (v22 != v24)
      {
        ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v24, ObjectType, v23);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
        {
          sub_100010F2C((uint64_t)v13, &qword_10080D0E0);
        }
        else
        {
          v40 = *(double (**)(char *, char *, uint64_t))(v15 + 32);
          v25.n128_f64[0] = v40(v49, v13, v14);
          v26 = v46;
          ShelfLayoutContext.shelf.getter(v25);
          KeyPath = swift_getKeyPath(&unk_1006615F0);
          v28 = v48;
          ReadOnlyLens.subscript.getter(v50, KeyPath, v48);
          v29 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v26, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, v43, v5);
          v30 = sub_10000E720((unint64_t *)&qword_100808860, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
          dispatch thunk of RawRepresentable.rawValue.getter(&v55, v5, v30);
          dispatch thunk of RawRepresentable.rawValue.getter(&v53, v5, v30);
          v31 = v56;
          v32 = v54;
          if (v55 == v53 && v56 == v54)
          {
            v37 = swift_bridgeObjectRelease_n(v56, 2);
            v38 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
            v38(v51, v5, v37);
            ((void (*)(_QWORD *, uint64_t))v38)(v50, v5);
LABEL_17:
            a1 = v39;
            v14 = v45;
            v40(v39, v49, v45);
            v36 = 0;
            v15 = v44;
            goto LABEL_18;
          }
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, v53, v54, 0);
          swift_bridgeObjectRelease(v31);
          v34 = swift_bridgeObjectRelease(v32);
          v35 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
          v35(v51, v5, v34);
          ((void (*)(_QWORD *, uint64_t))v35)(v50, v5);
          if ((v33 & 1) != 0)
            goto LABEL_17;
          v15 = v44;
          v14 = v45;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v45);
          v23 = v41;
          ObjectType = v42;
        }
        if (v22 == ++v24)
        {
          v36 = 1;
          a1 = v39;
          goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  v36 = 1;
LABEL_18:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(a1, v36, 1, v14, v18);
}

uint64_t sub_10041D6CC()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_100822378));
}

uint64_t sub_10041D6DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + qword_100822378));
}

uint64_t type metadata accessor for ReviewsDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008223A8;
  if (!qword_1008223A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReviewsDiffablePageViewController);
  return result;
}

uint64_t sub_10041D728(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_1006615D8;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_10041D774()
{
  return type metadata accessor for ReviewsDiffablePageViewController(0);
}

uint64_t sub_10041D77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  _BYTE v20[32];

  v9 = Action.title.getter(a5);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = Action.artwork.getter(v9);
    if (v13)
    {
      v14 = v13;
      if ((dispatch thunk of Artwork.isSystemImage.getter(v13) & 1) != 0)
      {
        v15 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v14, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        v15 = sub_1004AF5F4(v14, 0);
      }
      else
      {
        v15 = 0;
      }
      swift_release();
    }
    else
    {
      v15 = 0;
    }
    sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
    sub_100081524(a4, (uint64_t)v20);
    v17 = (_QWORD *)swift_allocObject(&unk_100753808, 72, 7);
    v17[2] = a2;
    v17[3] = &protocol witness table for ReviewsDiffablePagePresenter;
    v17[4] = a1;
    sub_10002548C((uint64_t)v20, (uint64_t)(v17 + 5), &qword_100808F20);
    v16 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v12, 0, 0, v15, 0, 0, 0, v18, 0, a3, 0, sub_10041D91C, v17);
  }
  else
  {
    swift_release();
    swift_release();
    v16 = 0;
  }
  sub_100010F2C(a4, &qword_100808F20);
  return v16;
}

uint64_t sub_10041D91C(uint64_t a1)
{
  uint64_t *v1;

  return sub_100115E14(a1, v1[2], v1[3], v1[4], (uint64_t)(v1 + 5));
}

uint64_t sub_10041D92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  _BYTE v20[32];

  v9 = Action.title.getter(a5);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = Action.artwork.getter(v9);
    if (v13)
    {
      v14 = v13;
      if ((dispatch thunk of Artwork.isSystemImage.getter(v13) & 1) != 0)
      {
        v15 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v14, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        v15 = sub_1004AF5F4(v14, 0);
      }
      else
      {
        v15 = 0;
      }
      swift_release();
    }
    else
    {
      v15 = 0;
    }
    sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
    sub_100081524(a4, (uint64_t)v20);
    v17 = (_QWORD *)swift_allocObject(&unk_100753830, 72, 7);
    v17[2] = a2;
    v17[3] = &protocol witness table for ReviewsPagePresenter;
    v17[4] = a1;
    sub_10002548C((uint64_t)v20, (uint64_t)(v17 + 5), &qword_100808F20);
    v16 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v12, 0, 0, v15, 0, 0, 0, v18, 0, a3, 0, sub_10041DBA4, v17);
  }
  else
  {
    swift_release();
    swift_release();
    v16 = 0;
  }
  sub_100010F2C(a4, &qword_100808F20);
  return v16;
}

uint64_t sub_10041DACC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 64))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10041DB08(uint64_t a1)
{
  uint64_t v1;

  sub_10041D174(a1, *(void **)(v1 + 16));
}

unint64_t sub_10041DB10()
{
  unint64_t result;

  result = qword_100822910;
  if (!qword_100822910)
  {
    result = swift_getWitnessTable(&unk_10064F6A0, &type metadata for ReviewsPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_100822910);
  }
  return result;
}

uint64_t sub_10041DB54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10041DB64(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10041DB6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10041DB90(int a1)
{
  uint64_t v1;

  sub_10041C868(a1, *(id *)(v1 + 16));
}

double ShelfHeaderLayout.measure(toFit:with:)(void *a1, double a2, double a3)
{
  id v6;
  char v7;
  uint64_t (*v8)();
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  double v12;
  __int128 v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v6 = objc_msgSend(a1, "preferredContentSizeCategory");
  v7 = static UIContentSizeCategory.> infix(_:_:)(v6, UIContentSizeCategoryAccessibilityExtraLarge);

  v15 = type metadata accessor for Margins(0);
  v16 = &protocol witness table for Margins;
  sub_1000119C0(&v14);
  if ((v7 & 1) != 0)
  {
    v8 = sub_1001815F4;
    v9 = (void (*)(uint64_t))sub_100420418;
  }
  else
  {
    v8 = sub_10018407C;
    v9 = (void (*)(uint64_t))sub_10041EF50;
  }
  sub_10041ECB0((uint64_t)a1, (uint64_t)v8, v9);
  sub_100010E24(&v14, (uint64_t)v17);
  v10 = v18;
  v11 = v19;
  sub_100010F08(v17, v18);
  v12 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v10, v11, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  return v12;
}

uint64_t ShelfHeaderLayout.place(at:with:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v10;
  char v11;
  uint64_t (*v12)();
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v10 = objc_msgSend(a1, "preferredContentSizeCategory");
  v11 = static UIContentSizeCategory.> infix(_:_:)(v10, UIContentSizeCategoryAccessibilityExtraLarge);

  v18 = type metadata accessor for Margins(0);
  v19 = &protocol witness table for Margins;
  sub_1000119C0(&v17);
  if ((v11 & 1) != 0)
  {
    v12 = sub_1001815F4;
    v13 = (void (*)(uint64_t))sub_100420418;
  }
  else
  {
    v12 = sub_10018407C;
    v13 = (void (*)(uint64_t))sub_10041EF50;
  }
  sub_10041ECB0((uint64_t)a1, (uint64_t)v12, v13);
  sub_100010E24(&v17, (uint64_t)v20);
  v14 = v21;
  v15 = v22;
  sub_100010F08(v20, v21);
  dispatch thunk of Placeable.place(at:with:)(a1, v14, v15, a2, a3, a4, a5);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v20);
}

uint64_t ShelfHeaderLayout.init(metrics:separatorView:eyebrowButton:eyebrowImage:titleLabel:titleImage:subtitleLabel:accessoryView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v53 = a7;
  v54 = a6;
  v55 = a5;
  v56 = a4;
  v57 = a3;
  v52 = a1;
  sub_100090180(a1, a9, type metadata accessor for ShelfHeaderLayout.Metrics);
  v51 = a2;
  sub_100018ADC(a2, (uint64_t)v58, (uint64_t *)&unk_10080CE00);
  v12 = v59;
  if (v59)
  {
    v13 = v60;
    sub_100010F08(v58, v59);
    v14 = type metadata accessor for Optional(0, v12);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = __chkstk_darwin(v14);
    v18 = (char *)&v51 - v17;
    LayoutView.nilIfHidden()(v12, v13, v16);
    v19 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v12) == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      v63 = 0;
      v61 = 0u;
      v62 = 0u;
    }
    else
    {
      *((_QWORD *)&v62 + 1) = v12;
      v63 = v13;
      v20 = sub_1000119C0(&v61);
      (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 32))(v20, v18, v12);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v58);
  }
  else
  {
    sub_100010F2C((uint64_t)v58, (uint64_t *)&unk_10080CE00);
    v61 = 0u;
    v62 = 0u;
    v63 = 0;
  }
  v21 = (int *)type metadata accessor for ShelfHeaderLayout(0);
  sub_1000A4E3C((uint64_t)&v61, a9 + v21[5]);
  sub_100018ADC(v57, a9 + v21[6], &qword_100810F00);
  sub_100018ADC(v56, (uint64_t)v58, (uint64_t *)&unk_10080CE00);
  v22 = v59;
  if (v59)
  {
    v23 = v60;
    sub_100010F08(v58, v59);
    v24 = type metadata accessor for Optional(0, v22);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = __chkstk_darwin(v24);
    v28 = (char *)&v51 - v27;
    LayoutView.nilIfHidden()(v22, v23, v26);
    v29 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v28, 1, v22) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
      v63 = 0;
      v61 = 0u;
      v62 = 0u;
    }
    else
    {
      *((_QWORD *)&v62 + 1) = v22;
      v63 = v23;
      v30 = sub_1000119C0(&v61);
      (*(void (**)(_QWORD *, char *, uint64_t))(v29 + 32))(v30, v28, v22);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v58);
  }
  else
  {
    sub_100010F2C((uint64_t)v58, (uint64_t *)&unk_10080CE00);
    v61 = 0u;
    v62 = 0u;
    v63 = 0;
  }
  sub_1000A4E3C((uint64_t)&v61, a9 + v21[7]);
  sub_10000EF80((uint64_t)v55, a9 + v21[8]);
  sub_100018ADC(v54, (uint64_t)v58, (uint64_t *)&unk_10080CE00);
  v31 = v59;
  if (v59)
  {
    v32 = v60;
    sub_100010F08(v58, v59);
    v33 = type metadata accessor for Optional(0, v31);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = __chkstk_darwin(v33);
    v37 = (char *)&v51 - v36;
    LayoutView.nilIfHidden()(v31, v32, v35);
    v38 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v37, 1, v31) == 1)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
      v63 = 0;
      v61 = 0u;
      v62 = 0u;
    }
    else
    {
      *((_QWORD *)&v62 + 1) = v31;
      v63 = v32;
      v40 = sub_1000119C0(&v61);
      (*(void (**)(_QWORD *, char *, uint64_t))(v38 + 32))(v40, v37, v31);
    }
    v39 = v53;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v58);
  }
  else
  {
    sub_100010F2C((uint64_t)v58, (uint64_t *)&unk_10080CE00);
    v61 = 0u;
    v62 = 0u;
    v63 = 0;
    v39 = v53;
  }
  sub_1000A4E3C((uint64_t)&v61, a9 + v21[9]);
  sub_100018ADC(v39, a9 + v21[10], &qword_100810F00);
  sub_100018ADC(a8, (uint64_t)v58, (uint64_t *)&unk_10080CE00);
  v41 = v59;
  if (v59)
  {
    v42 = v60;
    sub_100010F08(v58, v59);
    v43 = type metadata accessor for Optional(0, v41);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = __chkstk_darwin(v43);
    v47 = (char *)&v51 - v46;
    LayoutView.nilIfHidden()(v41, v42, v45);
    v48 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v47, 1, v41) == 1)
    {
      sub_100010F2C(a8, (uint64_t *)&unk_10080CE00);
      sub_100010F2C(v53, &qword_100810F00);
      sub_100010F2C(v54, (uint64_t *)&unk_10080CE00);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v55);
      sub_100010F2C(v56, (uint64_t *)&unk_10080CE00);
      sub_100010F2C(v57, &qword_100810F00);
      sub_100010F2C(v51, (uint64_t *)&unk_10080CE00);
      sub_10041EECC(v52);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v43);
      v63 = 0;
      v61 = 0u;
      v62 = 0u;
    }
    else
    {
      *((_QWORD *)&v62 + 1) = v41;
      v63 = v42;
      v49 = sub_1000119C0(&v61);
      (*(void (**)(_QWORD *, char *, uint64_t))(v48 + 32))(v49, v47, v41);
      sub_100010F2C(a8, (uint64_t *)&unk_10080CE00);
      sub_100010F2C(v53, &qword_100810F00);
      sub_100010F2C(v54, (uint64_t *)&unk_10080CE00);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v55);
      sub_100010F2C(v56, (uint64_t *)&unk_10080CE00);
      sub_100010F2C(v57, &qword_100810F00);
      sub_100010F2C(v51, (uint64_t *)&unk_10080CE00);
      sub_10041EECC(v52);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v58);
  }
  else
  {
    sub_100010F2C(a8, (uint64_t *)&unk_10080CE00);
    sub_100010F2C(v39, &qword_100810F00);
    sub_100010F2C(v54, (uint64_t *)&unk_10080CE00);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v55);
    sub_100010F2C(v56, (uint64_t *)&unk_10080CE00);
    sub_100010F2C(v57, &qword_100810F00);
    sub_100010F2C(v51, (uint64_t *)&unk_10080CE00);
    sub_10041EECC(v52);
    sub_100010F2C((uint64_t)v58, (uint64_t *)&unk_10080CE00);
    v61 = 0u;
    v62 = 0u;
    v63 = 0;
  }
  return sub_1000A4E3C((uint64_t)&v61, a9 + v21[11]);
}

double ShelfHeaderLayout.Metrics.eyebrowLineHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ShelfHeaderLayout.Metrics.eyebrowLineHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

double ShelfHeaderLayout.Metrics.eyebrowVerticalMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void ShelfHeaderLayout.Metrics.eyebrowVerticalMargins.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[5] = a1;
  v4[6] = a2;
  v4[7] = a3;
  v4[8] = a4;
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkMaxWidth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 28);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkMaxWidth.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 28);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShelfHeaderLayout.Metrics.eyebrowArtworkMaxWidth.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkMaxHeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 32);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkMaxHeight.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 32);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShelfHeaderLayout.Metrics.eyebrowArtworkMaxHeight.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ShelfHeaderLayout.Metrics.eyebrowArtworkTrailingMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 36));
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkTrailingMargin.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  *(double *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ShelfHeaderLayout.Metrics.eyebrowArtworkTrailingMargin.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkAspectRatio.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 40), a1, (uint64_t *)&unk_100811F20);
}

uint64_t ShelfHeaderLayout.Metrics.eyebrowArtworkAspectRatio.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 40);
  return sub_10041EF08(a1, v3);
}

uint64_t (*ShelfHeaderLayout.Metrics.eyebrowArtworkAspectRatio.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ShelfHeaderLayout.Metrics.titleLineHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 44));
}

uint64_t ShelfHeaderLayout.Metrics.titleLineHeight.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  *(double *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*ShelfHeaderLayout.Metrics.titleLineHeight.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ShelfHeaderLayout.Metrics.titleVerticalMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 48));
}

uint64_t ShelfHeaderLayout.Metrics.titleVerticalMargins.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v10 = (double *)(v4 + *(int *)(result + 48));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

uint64_t (*ShelfHeaderLayout.Metrics.titleVerticalMargins.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkMaxWidth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 52);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkMaxWidth.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 52);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShelfHeaderLayout.Metrics.titleArtworkMaxWidth.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkMaxHeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 56);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkMaxHeight.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 56);
  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShelfHeaderLayout.Metrics.titleArtworkMaxHeight.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkAspectRatio.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_100811F20);
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkAspectRatio.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 60);
  return sub_10041EF08(a1, v3);
}

uint64_t (*ShelfHeaderLayout.Metrics.titleArtworkAspectRatio.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ShelfHeaderLayout.Metrics.titleArtworkTrailingMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 64));
}

uint64_t ShelfHeaderLayout.Metrics.titleArtworkTrailingMargin.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  *(double *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*ShelfHeaderLayout.Metrics.titleArtworkTrailingMargin.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double ShelfHeaderLayout.Metrics.accessoryMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 68));
}

uint64_t ShelfHeaderLayout.Metrics.accessoryMargins.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v10 = (double *)(v4 + *(int *)(result + 68));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

uint64_t (*ShelfHeaderLayout.Metrics.accessoryMargins.modify())()
{
  type metadata accessor for ShelfHeaderLayout.Metrics(0);
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ShelfHeaderLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100090180(v1, a1, type metadata accessor for ShelfHeaderLayout.Metrics);
}

uint64_t ShelfHeaderLayout.separatorView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_10080CE00);
}

uint64_t ShelfHeaderLayout.eyebrowButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 24), a1, &qword_100810F00);
}

uint64_t ShelfHeaderLayout.eyebrowImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_10080CE00);
}

uint64_t ShelfHeaderLayout.titleLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ShelfHeaderLayout(0) + 32);
  return sub_10000EF80(v3, a1);
}

uint64_t ShelfHeaderLayout.titleImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 36), a1, (uint64_t *)&unk_10080CE00);
}

uint64_t ShelfHeaderLayout.subtitleLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 40), a1, &qword_100810F00);
}

uint64_t ShelfHeaderLayout.accessoryView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShelfHeaderLayout(0);
  return sub_100018ADC(v1 + *(int *)(v3 + 44), a1, (uint64_t *)&unk_10080CE00);
}

uint64_t sub_10041ECB0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  _QWORD *v23;
  __n128 v24;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  _QWORD *v30;

  v6 = v3;
  v8 = type metadata accessor for VerticalStack(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  VerticalStack.init(with:)(a2, 0, v10);
  v13 = type metadata accessor for ShelfHeaderLayout(0);
  sub_100018ADC(v3 + *(int *)(v13 + 20), (uint64_t)&v26, (uint64_t *)&unk_10080CE00);
  if (v27)
  {
    sub_100010E24(&v26, (uint64_t)v28);
    v14 = v29;
    v15 = v30;
    sub_100010F08(v28, v29);
    Measurable.placeable.getter(&v26, v14, v15[1]);
    VerticalStack.add(_:with:)(&v26, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v26);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  }
  else
  {
    sub_100010F2C((uint64_t)&v26, (uint64_t *)&unk_10080CE00);
  }
  v29 = type metadata accessor for Margins(0);
  v30 = &protocol witness table for Margins;
  sub_1000119C0(v28);
  a3(a1);
  VerticalStack.add(_:with:)(v28, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  v16 = static UIEdgeInsets.horizontal(left:right:)(*(double *)(v6 + 8), *(double *)(v6 + 24));
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v29 = v8;
  v30 = &protocol witness table for VerticalStack;
  v23 = sub_1000119C0(v28);
  (*(void (**)(_QWORD *, char *, uint64_t))(v9 + 16))(v23, v12, v8);
  v24 = Margins.init(insets:child:)(v28, v16, v18, v20, v22);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v24);
}

uint64_t type metadata accessor for ShelfHeaderLayout.Metrics(uint64_t a1)
{
  return sub_100019B28(a1, qword_100822A40, (uint64_t)&nominal type descriptor for ShelfHeaderLayout.Metrics);
}

uint64_t type metadata accessor for ShelfHeaderLayout(uint64_t a1)
{
  return sub_100019B28(a1, qword_100822998, (uint64_t)&nominal type descriptor for ShelfHeaderLayout);
}

uint64_t sub_10041EECC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10041EF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041EF50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  void *v35;

  v3 = v2;
  v32 = a2;
  v5 = type metadata accessor for ShelfHeaderLayout(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v33[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VerticalStack(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  VerticalStack.init(with:)(sub_10018407C, 0, v11);
  sub_100018ADC((uint64_t)v3 + *(int *)(v5 + 24), (uint64_t)v33, &qword_100810F00);
  v14 = v34;
  sub_100010F2C((uint64_t)v33, &qword_100810F00);
  if (v14)
  {
    v34 = type metadata accessor for HorizontalStack(0);
    v35 = &protocol witness table for HorizontalStack;
    v16 = sub_1000119C0(v33);
    sub_10041F190(a1, (uint64_t)v16);
    sub_100090180((uint64_t)v3, (uint64_t)&v33[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShelfHeaderLayout);
    v17 = *(unsigned __int8 *)(v6 + 80);
    v18 = (v17 + 16) & ~v17;
    v19 = swift_allocObject(&unk_100753948, v18 + v7, v17 | 7);
    sub_100423600((uint64_t)v8, v19 + v18);
    VerticalStack.add(_:with:)(v33, sub_100423654, v19);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v33);
  }
  sub_10041F858(a1, v33, v15);
  VerticalStack.add(_:with:)(v33, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v33);
  v20.n128_u64[0] = *v3;
  v21.n128_u64[0] = v3[2];
  v22 = static UIEdgeInsets.vertical(top:bottom:)(v20, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v34 = v9;
  v35 = &protocol witness table for VerticalStack;
  v29 = sub_1000119C0(v33);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v29, v13, v9);
  v30 = Margins.init(insets:child:)(v33, v22, v24, v26, v28);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v30);
}

uint64_t sub_10041F190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  double v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  void (*v44)(double *, uint64_t, uint64_t);
  uint64_t v45;
  double *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  __n128 v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double *v68;
  double *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void *v80;
  uint64_t v81;
  _QWORD v82[5];
  _QWORD v83[5];
  _QWORD v84[5];
  _QWORD v85[5];
  _QWORD v86[5];
  __int128 v87;
  uint64_t v88;
  void *v89;
  _QWORD v90[3];
  uint64_t v91;
  uint64_t v92;

  v3 = v2;
  v80 = a1;
  v5 = type metadata accessor for ShelfHeaderLayout(0);
  v76 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v77 = v6;
  v78 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for Resize.Rule(0);
  v67 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v71 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v70 = (char *)&v64 - v9;
  __chkstk_darwin(v10);
  v69 = (double *)((char *)&v64 - v11);
  __chkstk_darwin(v12);
  v68 = (double *)((char *)&v64 - v13);
  v14 = type metadata accessor for Resize(0);
  v74 = *(_QWORD *)(v14 - 8);
  v75 = v14;
  __chkstk_darwin(v14);
  v73 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FloatingPointRoundingRule(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AspectRatio(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v79 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalStack.init(with:)(sub_1003C3A7C, 0, v25);
  v81 = v5;
  v27 = *(int *)(v5 + 28);
  v28 = v3;
  sub_100018ADC(v3 + v27, (uint64_t)&v87, (uint64_t *)&unk_10080CE00);
  if (v88)
  {
    v66 = a2;
    sub_100010E24(&v87, (uint64_t)v90);
    v29 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
    sub_100018ADC(v3 + *(int *)(v29 + 40), (uint64_t)v22, (uint64_t *)&unk_100811F20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    {
      sub_100010F2C((uint64_t)v22, (uint64_t *)&unk_100811F20);
    }
    else
    {
      v64 = v23;
      v65 = v24;
      v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v79, v22, v23);
      static Dimensions.defaultRoundingRule.getter(v30);
      v31 = v80;
      v32 = StaticDimension.value(compatibleWith:rounded:)(v80, v19);
      v33 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
      v34 = v33(v19, v16);
      static Dimensions.defaultRoundingRule.getter(v34);
      v35 = StaticDimension.value(compatibleWith:rounded:)(v31, v19);
      v33(v19, v16);
      v36 = AspectRatio.maxSize(fitting:)(v32, v35);
      v38 = v37;
      v39 = (*(double *)(v28 + 32) - v37) * 0.5;
      v40 = v91;
      v41 = v92;
      sub_100010F08(v90, v91);
      Measurable.placeable.getter(&v87, v40, *(_QWORD *)(v41 + 8));
      v42 = v68;
      *((_QWORD *)v68 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v42 + 4) = &protocol witness table for CGFloat;
      *v42 = v36;
      v43 = enum case for Resize.Rule.replaced(_:);
      v44 = *(void (**)(double *, uint64_t, uint64_t))(v67 + 104);
      v45 = v72;
      v44(v42, enum case for Resize.Rule.replaced(_:), v72);
      v46 = v69;
      *((_QWORD *)v69 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v46 + 4) = &protocol witness table for CGFloat;
      *v46 = v38;
      v44(v46, v43, v45);
      v47 = enum case for Resize.Rule.unchanged(_:);
      v48 = v70;
      v44((double *)v70, enum case for Resize.Rule.unchanged(_:), v45);
      v49 = v71;
      v44((double *)v71, v47, v45);
      v50 = v73;
      Resize.init(_:width:height:firstBaseline:lastBaseline:)(&v87, v42, v46, v48, v49);
      v51 = v75;
      v86[3] = v75;
      v86[4] = &protocol witness table for Resize;
      v52 = sub_1000119C0(v86);
      v53 = v74;
      (*(void (**)(_QWORD *, char *, uint64_t))(v74 + 16))(v52, v50, v51);
      v85[3] = &type metadata for CGFloat;
      v85[4] = &protocol witness table for CGFloat;
      *(double *)v85 = v39;
      v54 = type metadata accessor for ZeroDimension(0);
      v84[3] = v54;
      v84[4] = &protocol witness table for ZeroDimension;
      sub_1000119C0(v84);
      static ZeroDimension.zero.getter();
      v83[3] = v54;
      v83[4] = &protocol witness table for ZeroDimension;
      sub_1000119C0(v83);
      static ZeroDimension.zero.getter();
      v82[3] = v54;
      v82[4] = &protocol witness table for ZeroDimension;
      sub_1000119C0(v82);
      static ZeroDimension.zero.getter();
      v88 = type metadata accessor for Margins(0);
      v89 = &protocol witness table for Margins;
      sub_1000119C0(&v87);
      Margins.init(_:top:leading:bottom:trailing:)(v86, v85, v84, v83, v82);
      v55 = v78;
      sub_100090180(v28, v78, type metadata accessor for ShelfHeaderLayout);
      v56 = *(unsigned __int8 *)(v76 + 80);
      v57 = (v56 + 16) & ~v56;
      v58 = (v77 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
      v59 = swift_allocObject(&unk_100753970, v58 + 8, v56 | 7);
      sub_100423600(v55, v59 + v57);
      v60 = v80;
      *(_QWORD *)(v59 + v58) = v80;
      v61 = v60;
      HorizontalStack.add(_:with:)(&v87, sub_100423854, v59);
      v62 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v50, v51, v62);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v79, v64);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v87);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
  }
  else
  {
    sub_100010F2C((uint64_t)&v87, (uint64_t *)&unk_10080CE00);
  }
  sub_100018ADC(v28 + *(int *)(v81 + 24), (uint64_t)&v87, &qword_100810F00);
  if (!v88)
    return sub_100010F2C((uint64_t)&v87, &qword_100810F00);
  sub_100010E24(&v87, (uint64_t)v90);
  HorizontalStack.add(_:with:)(v90, 0, 0);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
}

uint64_t sub_10041F7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  void *v7;
  void *v8;

  v3 = *(_QWORD *)(a2 + 40);
  v7 = &type metadata for CGFloat;
  v8 = &protocol witness table for CGFloat;
  v6[0] = v3;
  VerticalStack.Properties.topSpacing.setter(v6);
  v4 = *(_QWORD *)(a2 + 56);
  v7 = &type metadata for CGFloat;
  v8 = &protocol witness table for CGFloat;
  v6[0] = v4;
  return VerticalStack.Properties.bottomSpacing.setter(v6);
}

uint64_t sub_10041F858@<X0>(void *a1@<X0>, _QWORD *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double (**v19)(double, double);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  double v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  _QWORD *v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(double (**)(double, double), uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  void (*v67)(double (**)(double, double), uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  double *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  __n128 v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  __n128 v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, __n128);
  uint64_t v86;
  double *v87;
  double v88;
  double v89;
  double v90;
  double v91;
  uint64_t v92;
  _QWORD *v93;
  __n128 v94;
  char *v95;
  _QWORD *v96;
  __n128 v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  double *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  _QWORD v131[5];
  _QWORD v132[5];
  _QWORD v133[5];
  _QWORD v134[5];
  _QWORD v135[3];
  uint64_t v136;
  void *v137;
  __int128 v138;
  uint64_t v139;
  void *v140;
  _QWORD v141[3];
  uint64_t v142;
  _QWORD *v143;

  v4 = v3;
  v109 = a1;
  v118 = a2;
  v5 = type metadata accessor for Pin.Edge(0, a3);
  v110 = *(_QWORD *)(v5 - 8);
  v111 = v5;
  __chkstk_darwin(v5);
  v112 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for VerticalStack(0);
  v115 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v113 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v116 = (char *)&v103 - v9;
  v10 = type metadata accessor for ShelfHeaderLayout(0);
  v125 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v126 = v11;
  v127 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for Resize.Rule(0);
  v122 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v124 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v123 = (char *)&v103 - v14;
  __chkstk_darwin(v15);
  v120 = (double *)((char *)&v103 - v16);
  __chkstk_darwin(v17);
  v19 = (double (**)(double, double))((char *)&v103 - v18);
  v121 = type metadata accessor for Resize(0);
  v108 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v106 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FloatingPointRoundingRule(0);
  v105 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v24);
  v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for AspectRatio(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v107 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for HorizontalStack(0);
  v128 = *(_QWORD *)(v114 - 8);
  v30 = __chkstk_darwin(v114);
  v130 = (char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalStack.init(with:)(sub_100423B44, 0, v30);
  v129 = v10;
  sub_100018ADC(v4 + *(int *)(v10 + 36), (uint64_t)&v138, (uint64_t *)&unk_10080CE00);
  if (v139)
  {
    sub_100010E24(&v138, (uint64_t)v141);
    v32 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
    sub_100018ADC(v4 + *(int *)(v32 + 60), (uint64_t)v26, (uint64_t *)&unk_100811F20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      v33 = v4;
      sub_100010F2C((uint64_t)v26, (uint64_t *)&unk_100811F20);
    }
    else
    {
      v103 = v27;
      v104 = v28;
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v107, v26, v27);
      v35 = v4;
      static Dimensions.defaultRoundingRule.getter(v34);
      v36 = v109;
      v37 = StaticDimension.value(compatibleWith:rounded:)(v109, v23);
      v38 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
      v39 = v38(v23, v21);
      static Dimensions.defaultRoundingRule.getter(v39);
      v40 = StaticDimension.value(compatibleWith:rounded:)(v36, v23);
      v38(v23, v21);
      v41 = AspectRatio.maxSize(fitting:)(v37, v40);
      v43 = v42;
      v44 = (*(double *)(v4 + *(int *)(v32 + 44)) - v42) * 0.5;
      v45 = v142;
      v46 = v143;
      sub_100010F08(v141, v142);
      Measurable.placeable.getter(&v138, v45, v46[1]);
      v48 = v119;
      v47 = v120;
      v19[3] = (double (*)(double, double))&type metadata for CGFloat;
      v19[4] = (double (*)(double, double))&protocol witness table for CGFloat;
      *(double *)v19 = v41;
      v49 = enum case for Resize.Rule.replaced(_:);
      v50 = *(void (**)(double (**)(double, double), uint64_t, uint64_t))(v122 + 104);
      v50(v19, enum case for Resize.Rule.replaced(_:), v48);
      *((_QWORD *)v47 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v47 + 4) = &protocol witness table for CGFloat;
      *v47 = v43;
      v50((double (**)(double, double))v47, v49, v48);
      v51 = enum case for Resize.Rule.unchanged(_:);
      v52 = v123;
      v50((double (**)(double, double))v123, enum case for Resize.Rule.unchanged(_:), v48);
      v53 = v124;
      v50((double (**)(double, double))v124, v51, v48);
      v54 = v106;
      Resize.init(_:width:height:firstBaseline:lastBaseline:)(&v138, v19, v47, v52, v53);
      v55 = v121;
      v136 = v121;
      v137 = &protocol witness table for Resize;
      v56 = sub_1000119C0(v135);
      (*(void (**)(_QWORD *, char *, uint64_t))(v108 + 16))(v56, v54, v55);
      v134[3] = &type metadata for CGFloat;
      v134[4] = &protocol witness table for CGFloat;
      *(double *)v134 = v44;
      v57 = type metadata accessor for ZeroDimension(0);
      v133[3] = v57;
      v133[4] = &protocol witness table for ZeroDimension;
      sub_1000119C0(v133);
      static ZeroDimension.zero.getter();
      v132[3] = v57;
      v132[4] = &protocol witness table for ZeroDimension;
      sub_1000119C0(v132);
      static ZeroDimension.zero.getter();
      v131[3] = v57;
      v131[4] = &protocol witness table for ZeroDimension;
      sub_1000119C0(v131);
      static ZeroDimension.zero.getter();
      v139 = type metadata accessor for Margins(0);
      v140 = &protocol witness table for Margins;
      sub_1000119C0(&v138);
      Margins.init(_:top:leading:bottom:trailing:)(v135, v134, v133, v132, v131);
      v33 = v35;
      v58 = v127;
      sub_100090180(v35, v127, type metadata accessor for ShelfHeaderLayout);
      v59 = *(unsigned __int8 *)(v125 + 80);
      v60 = (v59 + 16) & ~v59;
      v61 = (v126 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
      v62 = swift_allocObject(&unk_1007539C0, v61 + 8, v59 | 7);
      sub_100423600(v58, v62 + v60);
      v63 = v109;
      *(_QWORD *)(v62 + v61) = v109;
      v64 = v63;
      HorizontalStack.add(_:with:)(&v138, sub_100423AD4, v62);
      v65 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v54, v55, v65);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v107, v103);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v138);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
  }
  else
  {
    v33 = v4;
    sub_100010F2C((uint64_t)&v138, (uint64_t *)&unk_10080CE00);
  }
  v66 = v129;
  sub_10000EF80(v33 + *(int *)(v129 + 32), (uint64_t)&v138);
  *v19 = sub_100079E4C;
  v19[1] = 0;
  v67 = *(void (**)(double (**)(double, double), uint64_t, uint64_t))(v122 + 104);
  v68 = v119;
  v67(v19, enum case for Resize.Rule.recalculated(_:), v119);
  v69 = enum case for Resize.Rule.unchanged(_:);
  v70 = v120;
  v67((double (**)(double, double))v120, enum case for Resize.Rule.unchanged(_:), v68);
  v71 = v123;
  v67((double (**)(double, double))v123, v69, v68);
  v72 = v124;
  v67((double (**)(double, double))v124, v69, v68);
  v142 = v121;
  v143 = &protocol witness table for Resize;
  sub_1000119C0(v141);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(&v138, v19, v70, v71, v72);
  v73 = v130;
  HorizontalStack.add(_:with:)(v141, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
  v74 = v113;
  VerticalStack.init(with:)(sub_10018407C, 0, v75);
  v76 = v114;
  v142 = v114;
  v143 = &protocol witness table for HorizontalStack;
  v77 = sub_1000119C0(v141);
  (*(void (**)(_QWORD *, char *, uint64_t))(v128 + 16))(v77, v73, v76);
  v78 = v127;
  sub_100090180(v33, v127, type metadata accessor for ShelfHeaderLayout);
  v79 = *(unsigned __int8 *)(v125 + 80);
  v80 = (v79 + 16) & ~v79;
  v81 = swift_allocObject(&unk_100753998, v80 + v126, v79 | 7);
  sub_100423600(v78, v81 + v80);
  v82 = v116;
  VerticalStack.adding(_:with:)(v141, sub_100423A78, v81);
  v83 = swift_release();
  v84 = v115;
  v85 = *(void (**)(char *, uint64_t, __n128))(v115 + 8);
  v86 = v117;
  v85(v74, v117, v83);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
  sub_100018ADC(v33 + *(int *)(v66 + 40), (uint64_t)&v138, &qword_100810F00);
  if (v139)
  {
    sub_100010E24(&v138, (uint64_t)v141);
    VerticalStack.add(_:with:)(v141, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
  }
  else
  {
    sub_100010F2C((uint64_t)&v138, &qword_100810F00);
  }
  sub_100018ADC(v33 + *(int *)(v129 + 44), (uint64_t)&v138, (uint64_t *)&unk_10080CE00);
  if (v139)
  {
    sub_100010E24(&v138, (uint64_t)v141);
    v87 = (double *)(v33 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 68));
    v88 = *v87;
    v89 = v87[1];
    v90 = v87[2];
    v91 = v87[3];
    v92 = v142;
    v93 = v143;
    sub_100010F08(v141, v142);
    Measurable.placeable.getter(v135, v92, v93[1]);
    v139 = type metadata accessor for Margins(0);
    v140 = &protocol witness table for Margins;
    sub_1000119C0(&v138);
    v94 = Margins.init(insets:child:)(v135, v88, v89, v90, v91);
    v95 = v112;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v110 + 104))(v112, enum case for Pin.Edge.trailingEdge(_:), v111, v94);
    v136 = v86;
    v137 = &protocol witness table for VerticalStack;
    v96 = sub_1000119C0(v135);
    v97.n128_f64[0] = (*(double (**)(_QWORD *, char *, uint64_t))(v84 + 16))(v96, v82, v86);
    v98 = type metadata accessor for Pin(0, v97);
    v99 = v118;
    v118[3] = v98;
    v99[4] = &protocol witness table for Pin;
    sub_1000119C0(v99);
    Pin.init(_:to:of:)(&v138, v95, v135);
    ((void (*)(char *, uint64_t))v85)(v82, v86);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v130, v76);
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
  }
  else
  {
    sub_100010F2C((uint64_t)&v138, (uint64_t *)&unk_10080CE00);
    v101 = v118;
    v118[3] = v86;
    v101[4] = &protocol witness table for VerticalStack;
    v102 = sub_1000119C0(v101);
    (*(void (**)(_QWORD *, char *, uint64_t))(v84 + 32))(v102, v82, v86);
    return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v130, v76);
  }
}

uint64_t sub_1004202D4(uint64_t a1, uint64_t a2, void *a3)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  double v9;
  _QWORD v11[5];

  v4 = *(double *)(a2 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 36));
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v6 + 32) = a3;
  v7 = a3;
  v8 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v6);
  v9 = CGFloat.rawValue(in:)(v4);

  v11[3] = &type metadata for CGFloat;
  v11[4] = &protocol witness table for CGFloat;
  *(double *)v11 = v9;
  return HorizontalStack.Properties.trailingSpacing.setter(v11);
}

uint64_t sub_1004203A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  void *v7;
  void *v8;

  v2 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 48));
  v3 = *v2;
  v7 = &type metadata for CGFloat;
  v8 = &protocol witness table for CGFloat;
  v6[0] = v3;
  VerticalStack.Properties.topSpacing.setter(v6);
  v4 = v2[2];
  v7 = &type metadata for CGFloat;
  v8 = &protocol witness table for CGFloat;
  v6[0] = v4;
  return VerticalStack.Properties.bottomSpacing.setter(v6);
}

uint64_t sub_100420418@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void *v33;
  double v34;
  double *v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(double *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  double *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  double *v54;
  double *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  double v61;
  uint64_t (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  double *v71;
  uint64_t v72;
  void (*v73)(double *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  double *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  __n128 v88;
  int *v89;
  uint64_t v90;
  _QWORD *v91;
  __n128 v92;
  __n128 v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  _QWORD v128[5];
  __int128 v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;

  v3 = v2;
  v123 = a1;
  v124 = a2;
  v4 = type metadata accessor for ShelfHeaderLayout(0);
  v113 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v114 = v5;
  v112 = (uint64_t)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for Resize.Rule(0);
  v118 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v122 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v121 = (char *)&v106 - v8;
  __chkstk_darwin(v9);
  v119 = (double *)((char *)&v106 - v10);
  __chkstk_darwin(v11);
  v115 = (double *)((char *)&v106 - v12);
  v117 = type metadata accessor for FloatingPointRoundingRule(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v15);
  v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v106 - v19;
  v21 = type metadata accessor for AspectRatio(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v111 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v106 - v25;
  v126 = type metadata accessor for VerticalStack(0);
  v125 = *(_QWORD *)(v126 - 8);
  v27 = __chkstk_darwin(v126);
  v29 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  VerticalStack.init(with:)(0, 0, v27);
  v127 = (int *)v4;
  sub_100018ADC((uint64_t)v3 + *(int *)(v4 + 28), (uint64_t)&v129, (uint64_t *)&unk_10080CE00);
  if (v130)
  {
    v108 = v17;
    sub_100010E24(&v129, (uint64_t)&v132);
    v30 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
    sub_100018ADC((uint64_t)v3 + *(int *)(v30 + 40), (uint64_t)v20, (uint64_t *)&unk_100811F20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    {
      sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_100811F20);
    }
    else
    {
      v31 = *(uint64_t (**)(char *, char *, uint64_t))(v22 + 32);
      v107 = v26;
      v32 = v31(v26, v20, v21);
      static Dimensions.defaultRoundingRule.getter(v32);
      v110 = v21;
      v33 = v123;
      v34 = StaticDimension.value(compatibleWith:rounded:)(v123, v14);
      v109 = v22;
      v35 = v115;
      v36 = *(uint64_t (**)(char *, uint64_t))(v116 + 8);
      v37 = v117;
      v38 = v36(v14, v117);
      static Dimensions.defaultRoundingRule.getter(v38);
      v39 = StaticDimension.value(compatibleWith:rounded:)(v33, v14);
      v36(v14, v37);
      v40 = AspectRatio.maxSize(fitting:)(v34, v39);
      v42 = v41;
      v43 = v133;
      v44 = v134;
      sub_100010F08(&v132, v133);
      Measurable.placeable.getter(v128, v43, v44[1]);
      *((_QWORD *)v35 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v35 + 4) = &protocol witness table for CGFloat;
      *v35 = v40;
      v45 = enum case for Resize.Rule.replaced(_:);
      v46 = *(void (**)(double *, uint64_t, uint64_t))(v118 + 104);
      v47 = v29;
      v48 = v120;
      v46(v35, enum case for Resize.Rule.replaced(_:), v120);
      v49 = v119;
      *((_QWORD *)v119 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v49 + 4) = &protocol witness table for CGFloat;
      *(_QWORD *)v49 = v42;
      v46(v49, v45, v48);
      v50 = enum case for Resize.Rule.unchanged(_:);
      v51 = v121;
      v46((double *)v121, enum case for Resize.Rule.unchanged(_:), v48);
      v52 = v122;
      v53 = v48;
      v29 = v47;
      v46((double *)v122, v50, v53);
      v130 = type metadata accessor for Resize(0);
      v131 = &protocol witness table for Resize;
      sub_1000119C0(&v129);
      v54 = v35;
      v55 = v49;
      v21 = v110;
      v22 = v109;
      Resize.init(_:width:height:firstBaseline:lastBaseline:)(v128, v54, v55, v51, v52);
      VerticalStack.add(_:with:)(&v129, 0, 0);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v107, v21);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v129);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v132);
    v17 = v108;
  }
  else
  {
    sub_100010F2C((uint64_t)&v129, (uint64_t *)&unk_10080CE00);
  }
  sub_100018ADC((uint64_t)v3 + v127[6], (uint64_t)&v129, &qword_100810F00);
  if (v130)
  {
    sub_100010E24(&v129, (uint64_t)&v132);
    VerticalStack.add(_:with:)(&v132, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v132);
  }
  else
  {
    sub_100010F2C((uint64_t)&v129, &qword_100810F00);
  }
  sub_100018ADC((uint64_t)v3 + v127[9], (uint64_t)&v129, (uint64_t *)&unk_10080CE00);
  if (v130)
  {
    sub_100010E24(&v129, (uint64_t)&v132);
    v56 = v22;
    v57 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
    sub_100018ADC((uint64_t)v3 + *(int *)(v57 + 60), (uint64_t)v17, (uint64_t *)&unk_100811F20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v17, 1, v21) == 1)
    {
      sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_100811F20);
    }
    else
    {
      v58 = v111;
      v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v56 + 32))(v111, v17, v21);
      v109 = v56;
      static Dimensions.defaultRoundingRule.getter(v59);
      v110 = v21;
      v60 = v123;
      v61 = StaticDimension.value(compatibleWith:rounded:)(v123, v14);
      v62 = *(uint64_t (**)(char *, uint64_t))(v116 + 8);
      v63 = v117;
      v64 = v62(v14, v117);
      static Dimensions.defaultRoundingRule.getter(v64);
      v65 = StaticDimension.value(compatibleWith:rounded:)(v60, v14);
      v62(v14, v63);
      v66 = AspectRatio.maxSize(fitting:)(v61, v65);
      v68 = v67;
      v69 = v133;
      v70 = v134;
      sub_100010F08(&v132, v133);
      Measurable.placeable.getter(v128, v69, v70[1]);
      v71 = v115;
      *((_QWORD *)v115 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v71 + 4) = &protocol witness table for CGFloat;
      *v71 = v66;
      v72 = enum case for Resize.Rule.replaced(_:);
      v73 = *(void (**)(double *, uint64_t, uint64_t))(v118 + 104);
      v74 = v29;
      v75 = v120;
      v73(v71, enum case for Resize.Rule.replaced(_:), v120);
      v76 = v119;
      *((_QWORD *)v119 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v76 + 4) = &protocol witness table for CGFloat;
      *(_QWORD *)v76 = v68;
      v73(v76, v72, v75);
      v77 = enum case for Resize.Rule.unchanged(_:);
      v78 = v121;
      v73((double *)v121, enum case for Resize.Rule.unchanged(_:), v75);
      v79 = v122;
      v80 = v75;
      v29 = v74;
      v73((double *)v122, v77, v80);
      v130 = type metadata accessor for Resize(0);
      v131 = &protocol witness table for Resize;
      sub_1000119C0(&v129);
      Resize.init(_:width:height:firstBaseline:lastBaseline:)(v128, v71, v76, v78, v79);
      v81 = v112;
      sub_100090180((uint64_t)v3, v112, type metadata accessor for ShelfHeaderLayout);
      v82 = *(unsigned __int8 *)(v113 + 80);
      v83 = (v82 + 16) & ~v82;
      v84 = (v114 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
      v85 = swift_allocObject(&unk_100753920, v84 + 8, v82 | 7);
      sub_100423600(v81, v85 + v83);
      v86 = v123;
      *(_QWORD *)(v85 + v84) = v123;
      v87 = v86;
      VerticalStack.add(_:with:)(&v129, sub_100423644, v85);
      v88 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v58, v110, v88);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v129);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v132);
  }
  else
  {
    sub_100010F2C((uint64_t)&v129, (uint64_t *)&unk_10080CE00);
  }
  v89 = v127;
  VerticalStack.add(_:with:)((char *)v3 + v127[8], 0, 0);
  sub_100018ADC((uint64_t)v3 + v89[10], (uint64_t)&v129, &qword_100810F00);
  if (v130)
  {
    sub_100010E24(&v129, (uint64_t)&v132);
    VerticalStack.add(_:with:)(&v132, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v132);
  }
  else
  {
    sub_100010F2C((uint64_t)&v129, &qword_100810F00);
  }
  sub_100018ADC((uint64_t)v3 + v127[11], (uint64_t)&v129, (uint64_t *)&unk_10080CE00);
  if (v130)
  {
    sub_100010E24(&v129, (uint64_t)&v132);
    v90 = v133;
    v91 = v134;
    sub_100010F08(&v132, v133);
    Measurable.placeable.getter(&v129, v90, v91[1]);
    VerticalStack.add(_:with:)(&v129, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v129);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v132);
  }
  else
  {
    sub_100010F2C((uint64_t)&v129, (uint64_t *)&unk_10080CE00);
  }
  v92.n128_u64[0] = *v3;
  v93.n128_u64[0] = v3[2];
  v94 = static UIEdgeInsets.vertical(top:bottom:)(v92, v93);
  v96 = v95;
  v98 = v97;
  v100 = v99;
  v101 = v126;
  v133 = v126;
  v134 = &protocol witness table for VerticalStack;
  v102 = sub_1000119C0(&v132);
  v103 = v125;
  (*(void (**)(_QWORD *, char *, uint64_t))(v125 + 16))(v102, v29, v101);
  v104 = Margins.init(insets:child:)(&v132, v94, v96, v98, v100);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v103 + 8))(v29, v101, v104);
}

uint64_t sub_100420E94(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD *))
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  _QWORD v13[5];

  v6 = *(double *)(a2 + *(int *)(type metadata accessor for ShelfHeaderLayout.Metrics(0) + 64));
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v7 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v8 + 32) = a3;
  v9 = a3;
  v10 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v8);
  v11 = CGFloat.rawValue(in:)(v6);

  v13[3] = &type metadata for CGFloat;
  v13[4] = &protocol witness table for CGFloat;
  *(double *)v13 = v11;
  return a4(v13);
}

char *initializeBufferWithCopyOfBuffer for ShelfHeaderLayout(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  unsigned int (*v72)(char *, uint64_t, uint64_t);

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    v8 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
    v9 = v8[7];
    v10 = &v4[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for StaticDimension(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&v4[v8[8]], (uint64_t)a2 + v8[8], v12);
    *(_QWORD *)&v4[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    v14 = v8[10];
    v15 = &v4[v14];
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for AspectRatio(0);
    v18 = *(_QWORD *)(v17 - 8);
    v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v72(v16, 1, v17))
    {
      v19 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    *(_QWORD *)&v4[v8[11]] = *(uint64_t *)((char *)a2 + v8[11]);
    v21 = v8[12];
    v22 = &v4[v21];
    v23 = (_OWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *(_OWORD *)v22 = *v23;
    *((_OWORD *)v22 + 1) = v24;
    v13(&v4[v8[13]], (uint64_t)a2 + v8[13], v12);
    v13(&v4[v8[14]], (uint64_t)a2 + v8[14], v12);
    v25 = v8[15];
    v26 = &v4[v25];
    v27 = (char *)a2 + v25;
    if (v72((char *)a2 + v25, 1, v17))
    {
      v28 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v26, v27, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v26, 0, 1, v17);
    }
    *(_QWORD *)&v4[v8[16]] = *(uint64_t *)((char *)a2 + v8[16]);
    v29 = v8[17];
    v30 = &v4[v29];
    v31 = (_OWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *(_OWORD *)v30 = *v31;
    *((_OWORD *)v30 + 1) = v32;
    v33 = a3[5];
    v34 = &v4[v33];
    v35 = (uint64_t)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33 + 24);
    if (v36)
    {
      v37 = *(_QWORD *)(v35 + 32);
      *((_QWORD *)v34 + 3) = v36;
      *((_QWORD *)v34 + 4) = v37;
      (**(void (***)(void))(v36 - 8))();
    }
    else
    {
      v38 = *(_OWORD *)(v35 + 16);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      *((_QWORD *)v34 + 4) = *(_QWORD *)(v35 + 32);
    }
    v39 = a3[6];
    v40 = &v4[v39];
    v41 = (uint64_t)a2 + v39;
    v42 = *(uint64_t *)((char *)a2 + v39 + 24);
    if (v42)
    {
      v43 = *(_QWORD *)(v41 + 32);
      *((_QWORD *)v40 + 3) = v42;
      *((_QWORD *)v40 + 4) = v43;
      (**(void (***)(void))(v42 - 8))();
    }
    else
    {
      v44 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v44;
      *((_QWORD *)v40 + 4) = *(_QWORD *)(v41 + 32);
    }
    v45 = a3[7];
    v46 = &v4[v45];
    v47 = (uint64_t)a2 + v45;
    v48 = *(uint64_t *)((char *)a2 + v45 + 24);
    if (v48)
    {
      v49 = *(_QWORD *)(v47 + 32);
      *((_QWORD *)v46 + 3) = v48;
      *((_QWORD *)v46 + 4) = v49;
      (**(void (***)(void))(v48 - 8))();
    }
    else
    {
      v50 = *(_OWORD *)(v47 + 16);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v50;
      *((_QWORD *)v46 + 4) = *(_QWORD *)(v47 + 32);
    }
    v51 = a3[8];
    v52 = *(_OWORD *)((char *)a2 + v51 + 24);
    *(_OWORD *)&v4[v51 + 24] = v52;
    (**(void (***)(void))(v52 - 8))();
    v53 = a3[9];
    v54 = &v4[v53];
    v55 = (uint64_t)a2 + v53;
    v56 = *(uint64_t *)((char *)a2 + v53 + 24);
    if (v56)
    {
      v57 = *(_QWORD *)(v55 + 32);
      *((_QWORD *)v54 + 3) = v56;
      *((_QWORD *)v54 + 4) = v57;
      (**(void (***)(void))(v56 - 8))();
    }
    else
    {
      v58 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v58;
      *((_QWORD *)v54 + 4) = *(_QWORD *)(v55 + 32);
    }
    v59 = a3[10];
    v60 = &v4[v59];
    v61 = (uint64_t)a2 + v59;
    v62 = *(uint64_t *)((char *)a2 + v59 + 24);
    if (v62)
    {
      v63 = *(_QWORD *)(v61 + 32);
      *((_QWORD *)v60 + 3) = v62;
      *((_QWORD *)v60 + 4) = v63;
      (**(void (***)(void))(v62 - 8))();
    }
    else
    {
      v64 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v64;
      *((_QWORD *)v60 + 4) = *(_QWORD *)(v61 + 32);
    }
    v65 = a3[11];
    v66 = &v4[v65];
    v67 = (uint64_t)a2 + v65;
    v68 = *(uint64_t *)((char *)a2 + v65 + 24);
    if (v68)
    {
      v69 = *(_QWORD *)(v67 + 32);
      *((_QWORD *)v66 + 3) = v68;
      *((_QWORD *)v66 + 4) = v69;
      (**(void (***)(void))(v68 - 8))();
    }
    else
    {
      v70 = *(_OWORD *)(v67 + 16);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v70;
      *((_QWORD *)v66 + 4) = *(_QWORD *)(v67 + 32);
    }
  }
  return v4;
}

_QWORD *destroy for ShelfHeaderLayout(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *result;

  v4 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v5 = a1 + v4[7];
  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + v4[8], v6);
  v8 = a1 + v4[10];
  v9 = type metadata accessor for AspectRatio(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v7(a1 + v4[13], v6);
  v7(a1 + v4[14], v6);
  v12 = a1 + v4[15];
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  v13 = (_QWORD *)(a1 + a2[5]);
  if (v13[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v13);
  v14 = (_QWORD *)(a1 + a2[6]);
  if (v14[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
  v15 = (_QWORD *)(a1 + a2[7]);
  if (v15[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + a2[8]));
  v16 = (_QWORD *)(a1 + a2[9]);
  if (v16[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
  v17 = (_QWORD *)(a1 + a2[10]);
  if (v17[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  result = (_QWORD *)(a1 + a2[11]);
  if (result[3])
    return (_QWORD *)_s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(result);
  return result;
}

uint64_t initializeWithCopy for ShelfHeaderLayout(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v7 = v6[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for StaticDimension(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + v6[8], a2 + v6[8], v10);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v12 = v6[10];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v6[11]) = *(_QWORD *)(a2 + v6[11]);
  v19 = v6[12];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v11(a1 + v6[13], a2 + v6[13], v10);
  v11(a1 + v6[14], a2 + v6[14], v10);
  v23 = v6[15];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  if (v17((const void *)(a2 + v23), 1, v15))
  {
    v26 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v24, v25, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v6[16]) = *(_QWORD *)(a2 + v6[16]);
  v27 = v6[17];
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[5];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 24);
  if (v34)
  {
    v35 = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 24) = v34;
    *(_QWORD *)(v32 + 32) = v35;
    (**(void (***)(void))(v34 - 8))();
  }
  else
  {
    v36 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v36;
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  }
  v37 = a3[6];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a2 + v37 + 24);
  if (v40)
  {
    v41 = *(_QWORD *)(v39 + 32);
    *(_QWORD *)(v38 + 24) = v40;
    *(_QWORD *)(v38 + 32) = v41;
    (**(void (***)(void))(v40 - 8))();
  }
  else
  {
    v42 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *(_OWORD *)(v38 + 16) = v42;
    *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  }
  v43 = a3[7];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a2 + v43 + 24);
  if (v46)
  {
    v47 = *(_QWORD *)(v45 + 32);
    *(_QWORD *)(v44 + 24) = v46;
    *(_QWORD *)(v44 + 32) = v47;
    (**(void (***)(void))(v46 - 8))();
  }
  else
  {
    v48 = *(_OWORD *)(v45 + 16);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *(_OWORD *)(v44 + 16) = v48;
    *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  }
  v49 = a3[8];
  v50 = *(_OWORD *)(a2 + v49 + 24);
  *(_OWORD *)(a1 + v49 + 24) = v50;
  (**(void (***)(void))(v50 - 8))();
  v51 = a3[9];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a2 + v51 + 24);
  if (v54)
  {
    v55 = *(_QWORD *)(v53 + 32);
    *(_QWORD *)(v52 + 24) = v54;
    *(_QWORD *)(v52 + 32) = v55;
    (**(void (***)(void))(v54 - 8))();
  }
  else
  {
    v56 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 16) = v56;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  }
  v57 = a3[10];
  v58 = a1 + v57;
  v59 = a2 + v57;
  v60 = *(_QWORD *)(a2 + v57 + 24);
  if (v60)
  {
    v61 = *(_QWORD *)(v59 + 32);
    *(_QWORD *)(v58 + 24) = v60;
    *(_QWORD *)(v58 + 32) = v61;
    (**(void (***)(void))(v60 - 8))();
  }
  else
  {
    v62 = *(_OWORD *)(v59 + 16);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *(_OWORD *)(v58 + 16) = v62;
    *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
  }
  v63 = a3[11];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)(a2 + v63 + 24);
  if (v66)
  {
    v67 = *(_QWORD *)(v65 + 32);
    *(_QWORD *)(v64 + 24) = v66;
    *(_QWORD *)(v64 + 32) = v67;
    (**(void (***)(void))(v66 - 8))();
  }
  else
  {
    v68 = *(_OWORD *)(v65 + 16);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_OWORD *)(v64 + 16) = v68;
    *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
  }
  return a1;
}

char *assignWithCopy for ShelfHeaderLayout(char *a1, char *a2, int *a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  void (*v72)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
  *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
  v5 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v6 = v5[7];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for StaticDimension(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v72 = v10;
  v10(&a1[v5[8]], &a2[v5[8]], v9);
  *(_QWORD *)&a1[v5[9]] = *(_QWORD *)&a2[v5[9]];
  v11 = v5[10];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for AspectRatio(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (v18)
    {
      v19 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      v20 = v15;
    }
    else
    {
      v20 = v15;
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  else
  {
    v20 = v15;
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
      v21 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
    }
  }
  *(_QWORD *)&a1[v5[11]] = *(_QWORD *)&a2[v5[11]];
  v22 = v5[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
  *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
  v72(&a1[v5[13]], &a2[v5[13]], v9);
  v72(&a1[v5[14]], &a2[v5[14]], v9);
  v25 = v5[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = v16(&a1[v25], 1, v14);
  v29 = v16(v27, 1, v14);
  if (v28)
  {
    v30 = a3;
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v26, v27, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v26, 0, 1, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v30 = a3;
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v14);
LABEL_13:
    v31 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v26, v27, v14);
LABEL_14:
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  v32 = v5[17];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
  *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
  v35 = v30[5];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)&a2[v35 + 24];
  if (*(_QWORD *)&a1[v35 + 24])
  {
    if (v38)
    {
      sub_10002D2D4(v36, v37);
      goto LABEL_21;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v36);
  }
  else if (v38)
  {
    *((_QWORD *)v36 + 3) = v38;
    *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
    (**(void (***)(char *, char *))(v38 - 8))(v36, v37);
    goto LABEL_21;
  }
  v39 = *(_OWORD *)v37;
  v40 = *((_OWORD *)v37 + 1);
  *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
  *(_OWORD *)v36 = v39;
  *((_OWORD *)v36 + 1) = v40;
LABEL_21:
  v41 = v30[6];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(_QWORD *)&a2[v41 + 24];
  if (*(_QWORD *)&a1[v41 + 24])
  {
    if (v44)
    {
      sub_10002D2D4(v42, v43);
      goto LABEL_28;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v42);
  }
  else if (v44)
  {
    *((_QWORD *)v42 + 3) = v44;
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    (**(void (***)(char *, char *))(v44 - 8))(v42, v43);
    goto LABEL_28;
  }
  v45 = *(_OWORD *)v43;
  v46 = *((_OWORD *)v43 + 1);
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  *(_OWORD *)v42 = v45;
  *((_OWORD *)v42 + 1) = v46;
LABEL_28:
  v47 = v30[7];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)&a2[v47 + 24];
  if (*(_QWORD *)&a1[v47 + 24])
  {
    if (v50)
    {
      sub_10002D2D4(v48, v49);
      goto LABEL_35;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v48);
  }
  else if (v50)
  {
    *((_QWORD *)v48 + 3) = v50;
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    (**(void (***)(char *, char *))(v50 - 8))(v48, v49);
    goto LABEL_35;
  }
  v51 = *(_OWORD *)v49;
  v52 = *((_OWORD *)v49 + 1);
  *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
  *(_OWORD *)v48 = v51;
  *((_OWORD *)v48 + 1) = v52;
LABEL_35:
  sub_10002D2D4(&a1[v30[8]], &a2[v30[8]]);
  v53 = v30[9];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = *(_QWORD *)&a2[v53 + 24];
  if (*(_QWORD *)&a1[v53 + 24])
  {
    if (v56)
    {
      sub_10002D2D4(v54, v55);
      goto LABEL_42;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v54);
  }
  else if (v56)
  {
    *((_QWORD *)v54 + 3) = v56;
    *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
    (**(void (***)(char *, char *))(v56 - 8))(v54, v55);
    goto LABEL_42;
  }
  v57 = *(_OWORD *)v55;
  v58 = *((_OWORD *)v55 + 1);
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  *(_OWORD *)v54 = v57;
  *((_OWORD *)v54 + 1) = v58;
LABEL_42:
  v59 = v30[10];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)&a2[v59 + 24];
  if (*(_QWORD *)&a1[v59 + 24])
  {
    if (v62)
    {
      sub_10002D2D4(v60, v61);
      goto LABEL_49;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v60);
  }
  else if (v62)
  {
    *((_QWORD *)v60 + 3) = v62;
    *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
    (**(void (***)(char *, char *))(v62 - 8))(v60, v61);
    goto LABEL_49;
  }
  v63 = *(_OWORD *)v61;
  v64 = *((_OWORD *)v61 + 1);
  *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
  *(_OWORD *)v60 = v63;
  *((_OWORD *)v60 + 1) = v64;
LABEL_49:
  v65 = v30[11];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = *((_QWORD *)v67 + 3);
  if (!*(_QWORD *)&a1[v65 + 24])
  {
    if (v68)
    {
      *((_QWORD *)v66 + 3) = v68;
      *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
      (**(void (***)(char *, char *))(v68 - 8))(v66, v67);
      return a1;
    }
LABEL_55:
    v69 = *(_OWORD *)v67;
    v70 = *((_OWORD *)v67 + 1);
    *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
    *(_OWORD *)v66 = v69;
    *((_OWORD *)v66 + 1) = v70;
    return a1;
  }
  if (!v68)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v66);
    goto LABEL_55;
  }
  sub_10002D2D4(v66, v67);
  return a1;
}

uint64_t initializeWithTake for ShelfHeaderLayout(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  unsigned int (*v61)(const void *, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for StaticDimension(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[8], a2 + v7[8], v11);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v13 = v7[10];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v16 - 8);
  v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  if (v61(v15, 1, v16))
  {
    v18 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_QWORD *)(a1 + v7[11]) = *(_QWORD *)(a2 + v7[11]);
  v19 = v7[12];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v12(a1 + v7[13], a2 + v7[13], v11);
  v12(a1 + v7[14], a2 + v7[14], v11);
  v23 = v7[15];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  if (v61((const void *)(a2 + v23), 1, v16))
  {
    v26 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v24, v25, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v16);
  }
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  v27 = v7[17];
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[5];
  v32 = a3[6];
  v33 = a1 + v31;
  v34 = a2 + v31;
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  v36 = a1 + v32;
  v37 = a2 + v32;
  v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  v39 = a3[7];
  v40 = a3[8];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  v44 = a1 + v40;
  v45 = (__int128 *)(a2 + v40);
  v46 = *v45;
  v47 = v45[1];
  *(_QWORD *)(v44 + 32) = *((_QWORD *)v45 + 4);
  *(_OWORD *)v44 = v46;
  *(_OWORD *)(v44 + 16) = v47;
  v48 = a3[9];
  v49 = a3[10];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
  v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  v53 = a1 + v49;
  v54 = a2 + v49;
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  v56 = a3[11];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v59;
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
  return a1;
}

uint64_t assignWithTake for ShelfHeaderLayout(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  void (*v66)(uint64_t, uint64_t, uint64_t);

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for StaticDimension(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v66 = v12;
  v12(a1 + v7[8], a2 + v7[8], v11);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v13 = v7[10];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (v20)
    {
      v21 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v22 = v17;
    }
    else
    {
      v22 = v17;
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    v22 = v17;
    if (v20)
    {
      (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
      v23 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
    }
  }
  *(_QWORD *)(a1 + v7[11]) = *(_QWORD *)(a2 + v7[11]);
  v24 = v7[12];
  v25 = (_OWORD *)(a1 + v24);
  v26 = (_OWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v66(a1 + v7[13], a2 + v7[13], v11);
  v66(a1 + v7[14], a2 + v7[14], v11);
  v28 = v7[15];
  v29 = (void *)(a1 + v28);
  v30 = (void *)(a2 + v28);
  v31 = v18((void *)(a1 + v28), 1, v16);
  v32 = v18(v30, 1, v16);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v29, v30, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v16);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v29, v16);
LABEL_13:
    v33 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v29, v30, v16);
LABEL_14:
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  v34 = v7[17];
  v35 = (_OWORD *)(a1 + v34);
  v36 = (_OWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = a3[5];
  v39 = a1 + v38;
  v40 = a2 + v38;
  if (*(_QWORD *)(a1 + v38 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)v39);
  v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  v42 = a3[6];
  v43 = a1 + v42;
  v44 = a2 + v42;
  if (*(_QWORD *)(a1 + v42 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)v43);
  v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
  v46 = a3[7];
  v47 = a1 + v46;
  v48 = a2 + v46;
  if (*(_QWORD *)(a1 + v46 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)v47);
  v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
  v50 = a3[8];
  v51 = a1 + v50;
  v52 = a2 + v50;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + v50));
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  v54 = a3[9];
  v55 = a1 + v54;
  v56 = a2 + v54;
  if (*(_QWORD *)(a1 + v54 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)v55);
  v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  v58 = a3[10];
  v59 = a1 + v58;
  v60 = a2 + v58;
  if (*(_QWORD *)(a1 + v58 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)v59);
  v61 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v61;
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  v62 = a3[11];
  v63 = a1 + v62;
  if (*(_QWORD *)(a1 + v62 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + v62));
  v64 = *(_OWORD *)(a2 + v62 + 16);
  *(_OWORD *)v63 = *(_OWORD *)(a2 + v62);
  *(_OWORD *)(v63 + 16) = v64;
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(a2 + v62 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfHeaderLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004225AC);
}

uint64_t sub_1004225AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfHeaderLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100422638);
}

uint64_t sub_100422638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1004226B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = type metadata accessor for ShelfHeaderLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    v4[2] = "(";
    v4[3] = "(";
    v4[4] = &unk_1006616E0;
    v4[5] = "(";
    v4[6] = "(";
    v4[7] = "(";
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ShelfHeaderLayout.Metrics(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    v11 = type metadata accessor for StaticDimension(0);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v11);
    v13 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for AspectRatio(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      v19 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v21 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v22 = (_OWORD *)((char *)v4 + v21);
    v23 = (_OWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v12((uint64_t)v4 + a3[13], (uint64_t)a2 + a3[13], v11);
    v12((uint64_t)v4 + a3[14], (uint64_t)a2 + a3[14], v11);
    v25 = a3[15];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    if (v18((char *)a2 + v25, 1, v16))
    {
      v28 = sub_10000DAF8((uint64_t *)&unk_100811F20);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v27, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
    }
    v29 = a3[17];
    *(_QWORD *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    v30 = (_OWORD *)((char *)v4 + v29);
    v31 = (_OWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
  }
  return v4;
}

uint64_t destroy for ShelfHeaderLayout.Metrics(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t result;

  v4 = a1 + a2[7];
  v5 = type metadata accessor for StaticDimension(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[8], v5);
  v7 = a1 + a2[10];
  v8 = type metadata accessor for AspectRatio(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v6(a1 + a2[13], v5);
  v6(a1 + a2[14], v5);
  v11 = a1 + a2[15];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v11, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  return result;
}

uint64_t initializeWithCopy for ShelfHeaderLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for StaticDimension(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v11(a1 + a3[13], a2 + a3[13], v10);
  v11(a1 + a3[14], a2 + a3[14], v10);
  v23 = a3[15];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  if (v17((const void *)(a2 + v23), 1, v15))
  {
    v26 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v24, v25, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
  }
  v27 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  return a1;
}

char *assignWithCopy for ShelfHeaderLayout.Metrics(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v33)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
  *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
  v6 = a3[7];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for StaticDimension(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v33 = v10;
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v11 = a3[10];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for AspectRatio(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  v20 = a3[12];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
  v33(&a1[a3[13]], &a2[a3[13]], v9);
  v33(&a1[a3[14]], &a2[a3[14]], v9);
  v23 = a3[15];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = v16(&a1[v23], 1, v14);
  v27 = v16(v25, 1, v14);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v24, v25, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v24, v25, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
LABEL_13:
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v29 = a3[17];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
  return a1;
}

uint64_t initializeWithTake for ShelfHeaderLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for StaticDimension(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v11(a1 + a3[13], a2 + a3[13], v10);
  v11(a1 + a3[14], a2 + a3[14], v10);
  v23 = a3[15];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  if (v17((const void *)(a2 + v23), 1, v15))
  {
    v26 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v24, v25, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
  }
  v27 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  return a1;
}

uint64_t assignWithTake for ShelfHeaderLayout.Metrics(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for StaticDimension(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v37 = v12;
  v12(a1 + a3[8], a2 + a3[8], v11);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  v22 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v37(a1 + a3[13], a2 + a3[13], v11);
  v37(a1 + a3[14], a2 + a3[14], v11);
  v26 = a3[15];
  v27 = (void *)(a1 + v26);
  v28 = (void *)(a2 + v26);
  v29 = v18((void *)(a1 + v26), 1, v16);
  v30 = v18(v28, 1, v16);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v27, v28, v16);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v27, v16);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    v31 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v27, v28, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v16);
LABEL_13:
  v32 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v33 = (_OWORD *)(a1 + v32);
  v34 = (_OWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfHeaderLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042343C);
}

uint64_t sub_10042343C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 28);
  }
  else
  {
    v8 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 40);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ShelfHeaderLayout.Metrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004234BC);
}

uint64_t sub_1004234BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = type metadata accessor for StaticDimension(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 28);
  }
  else
  {
    v10 = sub_10000DAF8((uint64_t *)&unk_100811F20);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 40);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_100423538(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[6];
  uint64_t v8;
  char *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const char *v15;

  v7[0] = " ";
  v7[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v7[2] = " ";
  v2 = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v7[3] = v4;
    v7[4] = v4;
    v7[5] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_1003370A0(319);
    if (v6 <= 0x3F)
    {
      v8 = *(_QWORD *)(v5 - 8) + 64;
      v9 = (char *)&value witness table for Builtin.Int64 + 64;
      v10 = " ";
      v11 = v4;
      v12 = v4;
      v13 = v8;
      v14 = (char *)&value witness table for Builtin.Int64 + 64;
      v15 = " ";
      swift_initStructMetadata(a1, 256, 14, v7, a1 + 16);
    }
  }
}

uint64_t sub_100423600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShelfHeaderLayout(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100423644(uint64_t a1)
{
  return sub_100423AE0(a1, (uint64_t (*)(_QWORD *))&VerticalStack.Properties.bottomSpacing.setter);
}

uint64_t sub_100423654(uint64_t a1)
{
  return sub_100423A84(a1, sub_10041F7F0);
}

uint64_t sub_100423664()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (int *)type metadata accessor for ShelfHeaderLayout(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 64);
  v24 = (v3 + 16) & ~v3;
  v25 = v0;
  v4 = v0 + v24;
  v5 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v6 = v0 + v24 + v5[7];
  v7 = type metadata accessor for StaticDimension(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v0 + v24 + v5[8], v7);
  v9 = v0 + v24 + v5[10];
  v10 = type metadata accessor for AspectRatio(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v8(v4 + v5[13], v7);
  v8(v4 + v5[14], v7);
  v13 = v4 + v5[15];
  if (!v12(v13, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  v14 = (_QWORD *)(v4 + v1[5]);
  if (v14[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
  v15 = (_QWORD *)(v4 + v1[6]);
  if (v15[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
  v16 = (_QWORD *)(v4 + v1[7]);
  if (v16[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v4 + v1[8]));
  v17 = (_QWORD *)(v4 + v1[9]);
  if (v17[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  v18 = (_QWORD *)(v4 + v1[10]);
  if (v18[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  v19 = (_QWORD *)(v4 + v1[11]);
  if (v19[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
  v20 = (v23 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = v20 + 8;

  return swift_deallocObject(v25, v21, v3 | 7);
}

uint64_t sub_100423854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ShelfHeaderLayout(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1004202D4(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1004238A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (int *)type metadata accessor for ShelfHeaderLayout(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  v22 = (v3 + 16) & ~v3;
  v23 = v0;
  v4 = v0 + v22;
  v5 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  v6 = v0 + v22 + v5[7];
  v7 = type metadata accessor for StaticDimension(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v0 + v22 + v5[8], v7);
  v9 = v0 + v22 + v5[10];
  v10 = type metadata accessor for AspectRatio(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v8(v4 + v5[13], v7);
  v8(v4 + v5[14], v7);
  v13 = v4 + v5[15];
  if (!v12(v13, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  v14 = (_QWORD *)(v4 + v1[5]);
  if (v14[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
  v15 = (_QWORD *)(v4 + v1[6]);
  if (v15[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
  v16 = (_QWORD *)(v4 + v1[7]);
  if (v16[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v4 + v1[8]));
  v17 = (_QWORD *)(v4 + v1[9]);
  if (v17[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  v18 = (_QWORD *)(v4 + v1[10]);
  if (v18[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  v19 = (_QWORD *)(v4 + v1[11]);
  if (v19[3])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
  return swift_deallocObject(v23, v22 + v21, v3 | 7);
}

uint64_t sub_100423A78(uint64_t a1)
{
  return sub_100423A84(a1, sub_1004203A0);
}

uint64_t sub_100423A84(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfHeaderLayout(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_100423AD4(uint64_t a1)
{
  return sub_100423AE0(a1, (uint64_t (*)(_QWORD *))&HorizontalStack.Properties.trailingSpacing.setter);
}

uint64_t sub_100423AE0(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for ShelfHeaderLayout(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100420E94(a1, v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

double *sub_100423B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  double *v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_10000DAF8(&qword_100822B10);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DAF8(&qword_100820890);
  v6 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v24 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return _swiftEmptyArrayStorage;
  v23 = v1;
  swift_bridgeObjectRetain(a1);
  v22 = a1;
  v12 = (uint64_t *)(a1 + 40);
  v13 = _swiftEmptyArrayStorage;
  do
  {
    v14 = (void *)*(v12 - 1);
    v15 = *v12;
    ObjectType = swift_getObjectType();
    v17 = v14;
    dispatch thunk of MetadataRibbonItemView.searchLayoutContext.getter(ObjectType, v15);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v25) == 1)
    {
      sub_100010F2C((uint64_t)v5, &qword_100822B10);
    }
    else
    {
      sub_10002548C((uint64_t)v5, (uint64_t)v10, &qword_100820890);
      sub_10002548C((uint64_t)v10, v24, &qword_100820890);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
        v13 = (double *)sub_1003D9B1C(0, *((_QWORD *)v13 + 2) + 1, 1, (unint64_t)v13);
      v19 = *((_QWORD *)v13 + 2);
      v18 = *((_QWORD *)v13 + 3);
      if (v19 >= v18 >> 1)
        v13 = (double *)sub_1003D9B1C(v18 > 1, v19 + 1, 1, (unint64_t)v13);
      *((_QWORD *)v13 + 2) = v19 + 1;
      sub_10002548C(v24, (uint64_t)v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, &qword_100820890);
    }
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease(v22);
  return v13;
}

int64_t sub_100423D88(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

id sub_100423DCC(uint64_t a1, char a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  char *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _QWORD *v53;

  v7 = type metadata accessor for MetadataRibbonItemViewType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_shouldEvenlyDistribute] = a2;
  v53 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v35 = a1;
    else
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v35);
    v11 = (uint64_t)result;
    if (result)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease(a1);
    v34 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain(a1);
  if (!v11)
    goto LABEL_35;
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  v44 = v3;
  v45 = a3;
  v13 = 0;
  v14 = a1 & 0xC000000000000001;
  v15 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
  v52 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
  v51 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
  v50 = enum case for MetadataRibbonItemViewType.starRating(_:);
  v49 = enum case for MetadataRibbonItemViewType.textLabel(_:);
  v48 = enum case for MetadataRibbonItemViewType.divider(_:);
  v47 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
  v46 = v10;
  do
  {
    if (v14)
    {
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
    }
    else
    {
      v16 = *(_QWORD *)(a1 + 8 * v13 + 32);
      v17 = swift_retain(v16);
    }
    MetadataRibbonItem.viewContainerType.getter(v17);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if ((_DWORD)v18 == (_DWORD)v15
      || (_DWORD)v18 == v52
      || (_DWORD)v18 == v51
      || (_DWORD)v18 == v50
      || (_DWORD)v18 == v49
      || (_DWORD)v18 == v48
      || (_DWORD)v18 == v47)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v25 = v15;
      v26 = v14;
      v27 = v7;
      v28 = v8;
      v29 = v11;
      v30 = a1;
      v31 = v53[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
      v32 = v31;
      a1 = v30;
      v11 = v29;
      v8 = v28;
      v7 = v27;
      v14 = v26;
      v15 = v25;
      v10 = v46;
      v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v16);
      specialized ContiguousArray._endMutation()(v33);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_release(v16);
    }
    ++v13;
  }
  while (v11 != v13);
  swift_bridgeObjectRelease(a1);
  v34 = v53;
  v3 = v44;
  a3 = v45;
LABEL_36:
  v36 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels];
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels] = v34;
  swift_bridgeObjectRelease(v36);
  swift_retain(a3);
  v37 = v3;
  v39 = sub_100425218(a1, a3, v37, v38);
  swift_release(a3);

  v40 = OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews;
  v41 = *(_QWORD *)&v37[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v37[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews]);
    v43 = 32;
    do
    {
      objc_msgSend(*(id *)(v41 + v43), "removeFromSuperview", v44, v45);
      v43 += 16;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease(v41);
    v41 = *(_QWORD *)&v37[v40];
  }
  *(_QWORD *)&v37[v40] = v39;
  swift_bridgeObjectRelease(v41);
  sub_10042434C();
  return objc_msgSend(v37, "setNeedsLayout");
}

UIContentSizeCategory sub_100424108()
{
  qword_100822AA8 = (uint64_t)UIContentSizeCategoryAccessibilityExtraLarge;
  return UIContentSizeCategoryAccessibilityExtraLarge;
}

id sub_100424120(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  __n128 v11;
  char *v12;
  id v13;
  double left;
  double bottom;
  double right;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews] = _swiftEmptyArrayStorage;
  v10 = v4;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter(v11);
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v10[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_shouldEvenlyDistribute] = 1;
  v10[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsCalculator] = 0;
  v12 = &v10[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;

  v24.receiver = v10;
  v24.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v18 = qword_100805C30;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_100805C30, sub_100424108);
  objc_msgSend(v19, "setMaximumContentSizeCategory:", qword_100822AA8);

  v20 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100640720;
  *(_QWORD *)(v21 + 32) = type metadata accessor for UITraitLegibilityWeight(0);
  *(_QWORD *)(v21 + 40) = &protocol witness table for UITraitLegibilityWeight;
  v22 = v19;
  UIView.registerForTraitChanges<A>(_:handler:)(v21, sub_100135CE4, 0, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v21);

  return v22;
}

id sub_10042434C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
  v3 = swift_bridgeObjectRetain(v2);
  v4 = SearchTagsRibbonViewLayout.Metrics.maximumNumberOfItems.getter(v3);
  result = (id)sub_100423D88(v4, v2);
  v9 = result;
  v10 = (v8 >> 1) - v7;
  if (v8 >> 1 == v7)
    return objc_msgSend(v1, "setNeedsLayout", swift_unknownObjectRelease(v9).n128_f64[0]);
  if ((uint64_t)(v8 >> 1) > v7)
  {
    v11 = (uint64_t *)(v6 + 16 * v7);
    do
    {
      v12 = *v11;
      v11 += 2;
      objc_msgSend(v1, "addSubview:", v12);
      --v10;
    }
    while (v10);
    return objc_msgSend(v1, "setNeedsLayout", swift_unknownObjectRelease(v9).n128_f64[0]);
  }
  __break(1u);
  return result;
}

double sub_1004243F0()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  __n128 v18;
  double v19;
  char *v20;
  __n128 v21;
  void (*v22)(__n128);
  uint64_t v23;
  __n128 v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[32];
  objc_super v31;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v27 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SearchTagsRibbonViewLayout(0, v8);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31.receiver = v1;
  v31.super_class = ObjectType;
  objc_msgSendSuper2(&v31, "layoutSubviews", v12);
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
  swift_bridgeObjectRetain(v15);
  v17 = sub_100423B48(v16);
  v18 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v10, &v1[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metrics], v6, v18);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v17, v10, v1[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_shouldEvenlyDistribute]);
  v19 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  SearchTagsRibbonViewLayout.placeChildren(relativeTo:in:)(v1, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  v20 = &v1[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock];
  v21 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock], v30, 32, 0);
  v22 = *(void (**)(__n128))v20;
  if (*(_QWORD *)v20)
  {
    v23 = *((_QWORD *)v20 + 1);
    swift_endAccess(v30);
    v24 = swift_retain(v23);
    v22(v24);
    sub_100018908((uint64_t)v22, v23);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v14, v29, v21);
    *(_QWORD *)&result = swift_endAccess(v30).n128_u64[0];
  }
  return result;
}

double sub_100424634(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  __n128 v17;
  double v18;
  _BYTE v20[16];

  v5 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SearchTagsRibbonViewLayout(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews);
  swift_bridgeObjectRetain(v14);
  v16 = sub_100423B48(v15);
  v17 = swift_bridgeObjectRelease(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metrics, v5, v17);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v16, v9, *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_shouldEvenlyDistribute));
  v18 = SearchTagsRibbonViewLayout.measurements(fitting:in:)(a1, a2);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  return v18;
}

uint64_t sub_10042489C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  swift_getObjectType();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  v2 = swift_bridgeObjectRetain(v1);
  v3 = sub_1000C50E8(v2, 0);
  swift_bridgeObjectRelease(v1);
  return v3 & 1;
}

id sub_100424904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v1);
  v2 = OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews));
    v5 = 32;
    do
    {
      objc_msgSend(*(id *)(v3 + v5), "removeFromSuperview");
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
    v3 = *(_QWORD *)(v0 + v2);
  }
  *(_QWORD *)(v0 + v2) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  return sub_10042434C();
}

void sub_1004249A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  __n128 v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53[24];
  char v54[24];

  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v54, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = a2 + 16;
    swift_beginAccess(v13, v53, 0, 0);
    v14 = swift_weakLoadStrong(v13);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels];
      if (v16
        && (v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews],
            (v18 = *(_QWORD *)(v17 + 16)) != 0))
      {
        v19 = *(void **)(v17 + 32);
        v20 = v16 & 0xFFFFFFFFFFFFFF8;
        v48 = *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
        v52 = v16;
        v46 = v16 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)v16 >> 62)
          goto LABEL_27;
        v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v17);
        v16 = v19;
        if (v21)
        {
          do
          {
            v45 = v15;
            v47 = v10;
            v17 = 0;
            v22 = v52;
            v20 = v52 & 0xC000000000000001;
            v49 = v21 - 1;
            v50 = v18 - 1;
            v51 = v52 & 0xC000000000000001;
            v18 = 48;
            v15 = v48;
            if ((v52 & 0xC000000000000001) != 0)
            {
LABEL_8:
              v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v22);
              goto LABEL_11;
            }
            while (v17 < *(_QWORD *)(v46 + 16))
            {
              v10 = *(char **)(v22 + 8 * v17 + 32);
              v23 = swift_retain(v10);
LABEL_11:
              dispatch thunk of MetadataRibbonItem.impressionMetrics.getter(v23);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
              {
                swift_release();

                v16 = sub_100010F2C((uint64_t)v6, &qword_1008131E0);
              }
              else
              {
                v24 = v47;
                (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v47, v6, v7);
                if ((objc_msgSend(v19, "isHidden", v45) & 1) != 0)
                {
                  (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v7);
                  swift_release();

                }
                else
                {
                  objc_msgSend(v19, "frame");
                  v26 = v25;
                  v28 = v27;
                  v30 = v29;
                  v32 = v31;
                  v33 = objc_msgSend(v12, "superview");
                  objc_msgSend(v12, "convertRect:toView:", v33, v26, v28, v30, v32);
                  v35 = v34;
                  v37 = v36;
                  v39 = v38;
                  v41 = v40;

                  ImpressionsCalculator.addElement(_:at:)(v24, v35, v37, v39, v41);
                  v42 = swift_release();
                  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v24, v7, v42);
                }
                v15 = v48;
              }
              if (v50 == v17)
              {
LABEL_24:

                swift_release();
                swift_bridgeObjectRelease(v52);
                swift_bridgeObjectRelease(v15);
                return;
              }
              v20 = *(_QWORD *)(v15 + 16);
              if (v17 + 1 >= v20)
              {
                __break(1u);
                break;
              }
              if (v49 == v17)
                goto LABEL_24;
              v16 = (uint64_t)*(id *)(v15 + v18);
              v19 = (void *)v16;
              ++v17;
              v18 += 16;
              v22 = v52;
              if (v51)
                goto LABEL_8;
            }
            __break(1u);
LABEL_27:
            if (v16 >= 0)
              v43 = v20;
            else
              v43 = v16;
            swift_bridgeObjectRetain(v16);
            swift_bridgeObjectRetain(v17);
            v44 = v19;
            v16 = _CocoaArrayWrapper.endIndex.getter(v43);
            v21 = v16;
          }
          while (v16);
        }

        swift_release();
        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v48);

      }
      else
      {

        swift_release();
      }
    }
    else
    {

    }
  }
}

uint64_t sub_100424E14()
{
  return type metadata accessor for SearchTagsRibbonView(0);
}

uint64_t type metadata accessor for SearchTagsRibbonView(uint64_t a1)
{
  uint64_t result;

  result = qword_100822AE0;
  if (!qword_100822AE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchTagsRibbonView);
  return result;
}

uint64_t sub_100424E58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = &unk_100661770;
    v4[4] = &unk_100661770;
    v4[5] = "\b";
    v4[6] = &unk_100661788;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100424EF4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_100424F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_100424F8C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100424FD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_100425028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_100425084(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

void (*sub_1004250C8())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject(&unk_100753A48, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = swift_allocObject(&unk_100753A70, 24, 7);
  swift_weakInit(v1 + 16);
  v2 = swift_allocObject(&unk_100753A98, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1004268D4;
}

uint64_t sub_100425158(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[3];
  v3 = a1[4];
  sub_100010F08(a1, v2);
  v4 = UIMutableTraits.preferredContentSizeCategory.getter(v2, v3);
  if (qword_100805C30 != -1)
    swift_once(&qword_100805C30, sub_100424108);
  v5 = (id)qword_100822AA8;
  v6 = static UIContentSizeCategory.< infix(_:_:)(v5, v4);
  if ((v6 & 1) != 0)
    v7 = (void *)v4;
  else
    v7 = v5;
  if ((v6 & 1) != 0)
    v4 = (uint64_t)v5;

  v8 = a1[3];
  v9 = a1[4];
  sub_100085788((uint64_t)a1, v8);
  return UIMutableTraits.preferredContentSizeCategory.setter(v4, v8, v9);
}

_QWORD *sub_100425218(uint64_t a1, uint64_t a2, void *a3, __n128 a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  int v27;
  void *v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t (*v31)(uint64_t);
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t);
  uint64_t v51;
  _BYTE *v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  _BYTE *v56;
  double v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  _BYTE v68[4];
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  int v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  Swift::Int v85;
  uint64_t v86;
  int v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  unint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD v102[5];

  v94 = a2;
  v84 = type metadata accessor for LabelPlaceholder(0, a4);
  v83 = *(_QWORD *)(v84 - 8);
  v6 = __chkstk_darwin(v84);
  v82 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = type metadata accessor for DynamicTextAppearance(0, v6);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v93 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v79 = &v68[-v10];
  __chkstk_darwin(v11);
  v78 = &v68[-v12];
  v13 = sub_10000DAF8(&qword_100809018);
  __chkstk_darwin(v13);
  v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for MetadataRibbonItemViewType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v95 = &v68[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((unint64_t)a1 >> 62)
    goto LABEL_38;
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v19)
  {
    v88 = v15;
    v92 = a1 & 0xC000000000000001;
    v91 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v77 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v73 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v72 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v71 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v70 = enum case for MetadataRibbonItemViewType.divider(_:);
    v20 = 4;
    v69 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v21 = JUMeasuringSizeCompressed[0];
    v22 = JUMeasuringSizeCompressed[1];
    v23 = _swiftEmptyArrayStorage;
    v89 = a1;
    v76 = a3;
    v75 = v16;
    v74 = v17;
    v90 = v19;
    while (1)
    {
      v101 = v23;
      v15 = (_BYTE *)(v20 - 4);
      if (!v92)
        break;
      v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a1);
      v25 = v20 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_37;
LABEL_9:
      v98 = v25;
      v26 = v95;
      v100 = v24;
      MetadataRibbonItem.viewContainerType.getter();
      v27 = (*(uint64_t (**)(_BYTE *, uint64_t))(v17 + 88))(v26, v16);
      v97 = v20;
      if (v27 == v91)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
        v30 = (unint64_t *)&unk_100822B08;
        v31 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
        v32 = &unk_10065C9D0;
LABEL_23:
        v33 = sub_10000E720(v30, v31, (uint64_t)v32);
        v34 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v29)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v35 = dispatch thunk of MetadataRibbonItemView.apply(_:asPartOf:)(v100, v94, v29, v33);
        MetadataRibbonItem.id.getter(v102, v35);
        v36 = dispatch thunk of MetadataRibbonItemView.id.setter(v102, v29, v33);
        v37 = v88;
        MetadataRibbonItem.itemType.getter(v36);
        v38 = type metadata accessor for MetadataRibbonItemType(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
        v96 = v29;
        v99 = v33;
        v39 = dispatch thunk of MetadataRibbonItemView.itemType.setter(v37, v29, v33);
        v40 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter(v39);
        LODWORD(v29) = v41;
        a3 = v28;
        v42 = objc_msgSend(v28, "traitCollection");
        if ((v29 & 1) != 0)
        {

          v58 = 0.0;
          a1 = v89;
        }
        else
        {
          v85 = v40;
          v86 = (uint64_t)v42;
          v87 = v29;
          v43 = DynamicTextAppearance.init()(v42);
          static CustomTextStyle<>.metadataRibbon.getter(v43);
          if (qword_100804810 != -1)
            swift_once(&qword_100804810, sub_1000BFD38);
          v44 = type metadata accessor for MetadataRibbonTextStyle(0);
          v45 = sub_10000EFC4(v44, (uint64_t)qword_100864DC0);
          v102[3] = v44;
          v102[4] = sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
          v46 = sub_1000119C0(v102);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v46, v45, v44);
          v47 = v79;
          v48 = v93;
          DynamicTextAppearance.withCustomTextStyle(_:)(v102);
          v49 = v80;
          v50 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
          v51 = v81;
          v50(v48, v81);
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v102);
          v52 = v78;
          DynamicTextAppearance.withNumberOfLines(_:)(1);
          v50(v47, v51);
          v53._countAndFlagsBits = 77;
          v53._object = (void *)0xE100000000000000;
          v54 = String.init(repeating:count:)(v53, v85);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v47, v52, v51);
          v55 = LabelPlaceholder.Options.init(rawValue:)(0);
          v56 = v82;
          LabelPlaceholder.init(_:with:where:)(v54._countAndFlagsBits, v54._object, v47, v55);
          v29 = v86;
          v57 = LabelPlaceholder.measure(toFit:with:)(v86, v21, v22);
          (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v56, v84);
          v50(v52, v51);

          v58 = v57;
          a1 = v89;
          a3 = v76;
          v16 = v75;
          v17 = v74;
          LOBYTE(v29) = v87;
        }
        dispatch thunk of MetadataRibbonItemView.labelMaxWidth.setter(*(_QWORD *)&v58, v29 & 1, v96, v99);
        swift_release(v100);
        if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) != 0)
          v23 = v101;
        else
          v23 = sub_1003DA0D0(0, v101[2] + 1, 1, v101);
        v60 = v23[2];
        v59 = v23[3];
        if (v60 >= v59 >> 1)
          v23 = sub_1003DA0D0((_QWORD *)(v59 > 1), v60 + 1, 1, v23);
        v23[2] = v60 + 1;
        v61 = &v23[2 * v60];
        v62 = v99;
        v61[4] = v34;
        v61[5] = v62;
        v63 = v90;
        v64 = v97;
        goto LABEL_33;
      }
      if (v27 == v77)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v30 = (unint64_t *)&unk_100824880;
        v31 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v32 = &unk_10066B8A0;
        goto LABEL_23;
      }
      if (v27 == v73)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v30 = (unint64_t *)&unk_100822B00;
        v31 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v32 = &unk_1006540A0;
        goto LABEL_23;
      }
      if (v27 == v72)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v30 = (unint64_t *)&unk_100824890;
        v31 = type metadata accessor for MetadataRibbonStarRatingView;
        v32 = &unk_100669C90;
        goto LABEL_23;
      }
      if (v27 == v71)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonTagView(0);
        v30 = (unint64_t *)&unk_100822AF8;
        v31 = type metadata accessor for MetadataRibbonTagView;
        v32 = &unk_100650268;
        goto LABEL_23;
      }
      if (v27 == v70)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonBarView(0);
        v30 = (unint64_t *)&unk_100824870;
        v31 = type metadata accessor for MetadataRibbonBarView;
        v32 = &unk_10064CBC8;
        goto LABEL_23;
      }
      if (v27 == v69)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v30 = (unint64_t *)&unk_100822AF0;
        v31 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v32 = &unk_1006419B8;
        goto LABEL_23;
      }
      (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v95, v16);
      swift_release(v100);
      v63 = v90;
      v64 = v97;
      v23 = v101;
LABEL_33:
      v20 = v64 + 1;
      if (v98 == v63)
      {
        v65 = v23;
        swift_bridgeObjectRelease(a1);
        return v65;
      }
    }
    swift_retain(*(_QWORD *)(a1 + 8 * v20));
    v25 = v20 - 3;
    if (!__OFADD__(v15, 1))
      goto LABEL_9;
LABEL_37:
    __break(1u);
LABEL_38:
    if (a1 < 0)
      v67 = a1;
    else
      v67 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v19 = _CocoaArrayWrapper.endIndex.getter(v67);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100425AA8(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  int v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  double v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  double *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  __int128 *v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  id v99;
  void *v100;
  int v101;
  int v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD v139[5];

  v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchTagsRibbonViewLayout(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for LabelPlaceholder(0, v12);
  v118 = *(_QWORD *)(v119 - 8);
  v15 = __chkstk_darwin(v119);
  v117 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DynamicTextAppearance(0, v15);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v129 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v114 = (char *)&v101 - v19;
  __chkstk_darwin(v20);
  v113 = (char *)&v101 - v21;
  v22 = sub_10000DAF8(&qword_100820890);
  v128 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v120 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v133 = (uint64_t)&v101 - v25;
  __chkstk_darwin(v26);
  v138 = (_QWORD *)((char *)&v101 - v27);
  v28 = type metadata accessor for MetadataRibbonItemViewType(0);
  v131 = *(_QWORD *)(v28 - 8);
  v132 = v28;
  __chkstk_darwin(v28);
  v130 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MetadataRibbonItem(0);
  result = Array.isNotEmpty.getter(a1, v30);
  if ((result & 1) == 0)
    return result;
  v112 = UITraitCollection.modifyingTraits(_:)(sub_100425158, 0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v94 = a1;
    else
      v94 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v94);
    v32 = result;
    if (result)
      goto LABEL_4;
LABEL_40:
    v92 = swift_bridgeObjectRelease(a1);
    v93 = _swiftEmptyArrayStorage;
LABEL_41:
    static SearchTagsRibbonViewLayout.Metrics.standard.getter(v92);
    SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v93, v9, 0);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v95 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v96 = swift_allocObject(v95, 40, 7);
    *(_OWORD *)(v96 + 16) = xmmword_100640AE0;
    v97 = (void *)v112;
    *(_QWORD *)(v96 + 32) = v112;
    v139[0] = v96;
    specialized Array._endMutation()(v96);
    v98 = v139[0];
    v99 = v97;
    v100 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v98);
    SearchTagsRibbonViewLayout.measurements(fitting:in:)(a2, a3);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a1);
  if (!v32)
    goto LABEL_40;
LABEL_4:
  if (v32 >= 1)
  {
    v103 = v9;
    v104 = v14;
    v105 = v11;
    v106 = v10;
    v33 = 0;
    v127 = a1 & 0xC000000000000001;
    v126 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v111 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v109 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v108 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v123 = v138 + 5;
    v107 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v102 = enum case for MetadataRibbonItemViewType.divider(_:);
    v122 = (__int128 *)(v133 + 40);
    v101 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v34 = (uint64_t)v120;
    v121 = v120 + 40;
    v35 = JUMeasuringSizeCompressed[0];
    v36 = JUMeasuringSizeCompressed[1];
    v37 = _swiftEmptyArrayStorage;
    v125 = a1;
    v110 = v22;
    v124 = v32;
    while (1)
    {
      if (v127)
      {
        v38 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a1);
      }
      else
      {
        v38 = *(_QWORD *)(a1 + 8 * v33 + 32);
        v39 = swift_retain(v38);
      }
      v40 = v130;
      MetadataRibbonItem.viewContainerType.getter(v39);
      v41 = (*(uint64_t (**)(char *, uint64_t))(v131 + 88))(v40, v132);
      v136 = v33;
      v137 = v37;
      if (v41 == v126)
        break;
      if (v41 == v111)
      {
        v42 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v43 = (unint64_t *)&unk_100824880;
        v44 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v45 = &unk_10066B8A0;
        goto LABEL_23;
      }
      if (v41 == v109)
      {
        v42 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v43 = (unint64_t *)&unk_100822B00;
        v44 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v45 = &unk_1006540A0;
        goto LABEL_23;
      }
      if (v41 == v108)
      {
        v42 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v43 = (unint64_t *)&unk_100824890;
        v44 = type metadata accessor for MetadataRibbonStarRatingView;
        v45 = &unk_100669C90;
        goto LABEL_23;
      }
      if (v41 == v107)
      {
        v42 = type metadata accessor for MetadataRibbonTagView(0);
        v43 = (unint64_t *)&unk_100822AF8;
        v44 = type metadata accessor for MetadataRibbonTagView;
        v45 = &unk_100650268;
        goto LABEL_23;
      }
      if (v41 == v102)
      {
        v42 = type metadata accessor for MetadataRibbonBarView(0);
        v43 = (unint64_t *)&unk_100824870;
        v44 = type metadata accessor for MetadataRibbonBarView;
        v45 = &unk_10064CBC8;
        goto LABEL_23;
      }
      if (v41 == v101)
      {
        v42 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v43 = (unint64_t *)&unk_100822AF0;
        v44 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v45 = &unk_1006419B8;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v132);
      swift_release(v38);
      a1 = v125;
      v87 = v124;
LABEL_32:
      if (v87 == ++v33)
      {
        v92 = swift_bridgeObjectRelease(a1);
        v10 = v106;
        v93 = v37;
        v11 = v105;
        v14 = v104;
        v9 = v103;
        goto LABEL_41;
      }
    }
    v42 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
    v43 = (unint64_t *)&unk_100822B08;
    v44 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    v45 = &unk_10065C9D0;
LABEL_23:
    v46 = sub_10000E720(v43, v44, (uint64_t)v45);
    v47 = (_QWORD *)swift_allocObject(&unk_100753A20, 40, 7);
    v47[2] = v42;
    v47[3] = v46;
    v47[4] = v38;
    v48 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    v49 = swift_retain(v38);
    v50 = LayoutViewPlaceholder.init(measureWith:)(sub_100426634, v47, v49);
    v51 = v138;
    v52 = (char *)v138 + *(int *)(v22 + 96);
    MetadataRibbonItem.id.getter(v138, v50);
    v51[8] = v48;
    v51[9] = &protocol witness table for LayoutViewPlaceholder;
    v51[5] = v50;
    v134 = v50;
    v53 = swift_retain(v50);
    *((_BYTE *)v51 + 80) = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter(v42, v46, v53) & 1;
    v54 = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v42, v46);
    *((_BYTE *)v51 + 81) = v54 & 1;
    MetadataRibbonItem.itemType.getter(v54);
    v55 = type metadata accessor for MetadataRibbonItemType(0);
    v56 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v52, 0, 1, v55);
    v135 = v38;
    v57 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter(v56);
    v59 = v58;
    v60 = 0.0;
    if ((v58 & 1) == 0)
    {
      v61 = v57;
      v62 = DynamicTextAppearance.init()(v57);
      static CustomTextStyle<>.metadataRibbon.getter(v62);
      if (qword_100804810 != -1)
        swift_once(&qword_100804810, sub_1000BFD38);
      v63 = type metadata accessor for MetadataRibbonTextStyle(0);
      v64 = sub_10000EFC4(v63, (uint64_t)qword_100864DC0);
      v139[3] = v63;
      v139[4] = sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
      v65 = sub_1000119C0(v139);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v65, v64, v63);
      v66 = v114;
      v67 = v129;
      DynamicTextAppearance.withCustomTextStyle(_:)(v139);
      v68 = v115;
      v69 = *(void (**)(char *, uint64_t))(v115 + 8);
      v70 = v116;
      v69(v67, v116);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v139);
      v71 = v113;
      DynamicTextAppearance.withNumberOfLines(_:)(1);
      v69(v66, v70);
      v72._countAndFlagsBits = 77;
      v72._object = (void *)0xE100000000000000;
      v73 = String.init(repeating:count:)(v72, v61);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v66, v71, v70);
      v74 = LabelPlaceholder.Options.init(rawValue:)(0);
      v75 = v117;
      LabelPlaceholder.init(_:with:where:)(v73._countAndFlagsBits, v73._object, v66, v74);
      v60 = LabelPlaceholder.measure(toFit:with:)(v112, v35, v36);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v75, v119);
      v69(v71, v70);
      v22 = v110;
      v34 = (uint64_t)v120;
    }
    v76 = v138;
    v77 = (double *)((char *)v138 + *(int *)(v22 + 112));
    *v77 = v60;
    v78 = v59 & 1;
    *((_BYTE *)v77 + 8) = v78;
    v79 = v133;
    v80 = v133 + *(int *)(v22 + 96);
    sub_10007EF1C((uint64_t)v76, v133);
    v81 = v122;
    sub_10000EF80((uint64_t)v123, (uint64_t)v122);
    v82 = *((_BYTE *)v76 + 80);
    v83 = *((_BYTE *)v76 + 81);
    sub_100426660((uint64_t)v52, v80);
    v84 = v34 + *(int *)(v22 + 96);
    v85 = v34 + *(int *)(v22 + 112);
    v86 = *(_OWORD *)(v79 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v79;
    *(_OWORD *)(v34 + 16) = v86;
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(v79 + 32);
    sub_100010E24(v81, (uint64_t)v121);
    *(_BYTE *)(v34 + 80) = v82;
    *(_BYTE *)(v34 + 81) = v83;
    sub_10002548C(v80, v84, &qword_100809018);
    *(double *)v85 = v60;
    *(_BYTE *)(v85 + 8) = v78;
    v37 = v137;
    if ((swift_isUniquelyReferenced_nonNull_native(v137) & 1) == 0)
      v37 = (_QWORD *)sub_1003D9B1C(0, v37[2] + 1, 1, (unint64_t)v37);
    a1 = v125;
    v87 = v124;
    v88 = v135;
    v33 = v136;
    v89 = v134;
    v91 = v37[2];
    v90 = v37[3];
    if (v91 >= v90 >> 1)
      v37 = (_QWORD *)sub_1003D9B1C(v90 > 1, v91 + 1, 1, (unint64_t)v37);
    v37[2] = v91 + 1;
    sub_10002548C(v34, (uint64_t)v37+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v91, &qword_100820890);
    swift_release(v89);
    swift_release(v88);
    sub_100010F2C((uint64_t)v138, &qword_100820890);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_100426610()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100426634(uint64_t a1)
{
  uint64_t v1;

  return dispatch thunk of static MetadataRibbonItemView.measurements(for:fitting:in:)(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_100426660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100809018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004266A8(uint64_t a1, unint64_t a2)
{
  return sub_1004266C0(a1, a2, (void (*)(_QWORD))&type metadata accessor for ArtworkView);
}

uint64_t sub_1004266B4(uint64_t a1, unint64_t a2)
{
  return sub_1004266C0(a1, a2, (void (*)(_QWORD))sub_100035178);
}

uint64_t sub_1004266C0(uint64_t result, unint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = a3;
    v3 = a2;
    v4 = result;
    v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v3 < 0)
    v17 = v3;
  else
    v17 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v7 = _CocoaArrayWrapper.endIndex.getter(v17);
  result = swift_bridgeObjectRelease(v3);
LABEL_4:
  if (v7 >= v4)
    v8 = v4;
  else
    v8 = v7;
  if (v7 < 0)
    v8 = v4;
  if (v4)
    v9 = v8;
  else
    v9 = 0;
  if (v6)
  {
    if (v3 < 0)
      v11 = v3;
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    result = swift_bridgeObjectRelease(v3);
    if (v12 < 0)
      goto LABEL_37;
    swift_bridgeObjectRetain(v3);
    v10 = _CocoaArrayWrapper.endIndex.getter(v11);
    result = swift_bridgeObjectRelease(v3);
  }
  else
  {
    v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9)
  {
    v5(0);
    v13 = 0;
    do
    {
      v14 = v13 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v13);
      v13 = v14;
    }
    while (v9 != v14);
  }
  if (v6)
  {
    if (v3 < 0)
      v16 = v3;
    else
      v16 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v15 = _CocoaArrayWrapper.subscript.getter(0, v9, v16);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v15 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  return v15;
}

uint64_t sub_100426860()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100426884()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004268A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004268D4()
{
  uint64_t v0;

  sub_1004249A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1004268DC()
{
  _BYTE *v0;
  _QWORD *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemViews] = _swiftEmptyArrayStorage;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter();
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_shouldEvenlyDistribute] = 1;
  v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsCalculator] = 0;
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_impressionsUpdateBlock];
  *v1 = 0;
  v1[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/SearchTagsRibbonView.swift", 47, 2, 43, 0);
  __break(1u);
}

uint64_t type metadata accessor for AppPromotionIAPFallbackView(uint64_t a1)
{
  uint64_t result;

  result = qword_100822B40;
  if (!qword_100822B40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionIAPFallbackView);
  return result;
}

uint64_t sub_1004269DC(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = "H";
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + qword_100868888);
}

char *sub_100426A38(__int128 *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  char *v30;
  _BYTE *v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  char *result;
  id v47;
  uint64_t v48;
  Class isa;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = qword_100822B20;
  v17 = type metadata accessor for ArtworkView(0);
  v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17));
  v19 = v6;
  *(_QWORD *)&v6[v16] = objc_msgSend(v18, "init");
  v20 = qword_100822B28;
  *(_QWORD *)&v19[v20] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v21 = qword_100822B30;
  *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v22 = &v19[qword_100822B38];
  v23 = a1[3];
  *((_OWORD *)v22 + 2) = a1[2];
  *((_OWORD *)v22 + 3) = v23;
  v24 = *a1;
  v25 = a1[1];
  *((_QWORD *)v22 + 8) = *((_QWORD *)a1 + 8);
  *(_OWORD *)v22 = v24;
  *((_OWORD *)v22 + 1) = v25;
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 1, *(double *)a1);
  v26 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  *(_QWORD *)&v19[qword_100822B18] = sub_1004BC704((uint64_t)v15, 2);

  v52.receiver = v19;
  v52.super_class = ObjectType;
  v27 = (char *)objc_msgSendSuper2(&v52, "initWithFrame:", a2, a3, a4, a5);
  v28 = qword_100822B28;
  v29 = *(_BYTE **)&v27[qword_100822B28];
  v29[OBJC_IVAR____TtC20ProductPageExtension12GradientView_kind] = 2;
  v30 = v27;
  v31 = v29;
  v32 = objc_msgSend(v31, "layer");
  v33 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v32, v33, 0, 0, 0), "setType:", kCAGradientLayerConic);

  v34 = *(id *)&v27[v28];
  v35 = objc_msgSend(v34, "layer");
  v36 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v35, v36, 0, 0, 0), "setStartPoint:", 0.5, 0.5);

  v37 = *(id *)&v27[v28];
  v38 = objc_msgSend(v37, "layer");
  v39 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v38, v39, 0, 0, 0), "setEndPoint:", 0.5, 1.0);

  v40 = qword_100822B30;
  v41 = *(void **)&v30[qword_100822B30];
  v42 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v43 = swift_allocObject(v42, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1006423E0;
  v44 = (void *)objc_opt_self(UIBlurEffect);
  v45 = v41;
  result = (char *)objc_msgSend(v44, "effectWithBlurRadius:", 100.0);
  if (result)
  {
    *(_QWORD *)(v43 + 32) = result;
    v47 = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.25);
    *(_QWORD *)(v43 + 40) = v47;
    v51 = v43;
    specialized Array._endMutation()(v47);
    v48 = v51;
    sub_100018B6C(0, (unint64_t *)&qword_10080E900, UIVisualEffect_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v45, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v27[v28]);
    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[v40]);
    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[qword_100822B20]);
    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[qword_100822B18]);

    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100426E70(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100427AC0();
}

double sub_100426E94()
{
  double result;

  xmmword_1008687F0 = xmmword_100661820;
  unk_100868800 = xmmword_100661830;
  result = 20.0;
  xmmword_100868810 = xmmword_100661840;
  unk_100868820 = xmmword_100661850;
  qword_100868830 = 0x4020000000000000;
  return result;
}

double sub_100426ED0()
{
  double result;

  xmmword_100868840 = xmmword_100661860;
  *(_OWORD *)algn_100868850 = xmmword_100661830;
  result = 146.0;
  xmmword_100868860 = xmmword_100661870;
  unk_100868870 = xmmword_100661880;
  qword_100868880 = 0x4020000000000000;
  return result;
}

__n128 sub_100426F0C@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  __n128 result;
  __n128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v2 = v1;
  v15 = *(_OWORD *)(v2 + qword_100822B38 + 16);
  v16 = *(_OWORD *)(v2 + qword_100822B38);
  v13 = *(__n128 *)(v2 + qword_100822B38 + 48);
  v14 = *(_OWORD *)(v2 + qword_100822B38 + 32);
  v4 = *(_QWORD *)(v2 + qword_100822B38 + 64);
  v5 = *(void **)(v2 + qword_100822B18);
  a1[3] = (uint64_t)&type metadata for AppPromotionIAPFallbackLayout;
  a1[4] = sub_100427B8C();
  v6 = swift_allocObject(&unk_100753B18, 248, 7);
  *a1 = v6;
  *(_QWORD *)(v6 + 112) = type metadata accessor for InAppPurchaseView(0);
  *(_QWORD *)(v6 + 120) = sub_10000E720(&qword_100822B98, type metadata accessor for InAppPurchaseView, (uint64_t)&unk_10065B868);
  *(_QWORD *)(v6 + 88) = v5;
  v7 = type metadata accessor for GradientView();
  v8 = v5;
  Measurable.placeable.getter((_QWORD *)(v6 + 128), v7, &protocol witness table for UIView);
  v9 = *(void **)(v2 + qword_100822B20);
  *(_QWORD *)(v6 + 232) = type metadata accessor for ArtworkView(0);
  *(_QWORD *)(v6 + 240) = sub_10000E720((unint64_t *)&qword_100810F20, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  *(_QWORD *)(v6 + 208) = v9;
  v10 = sub_100018B6C(0, &qword_100819C40, UIVisualEffectView_ptr);
  v11 = v9;
  Measurable.placeable.getter((_QWORD *)(v6 + 168), v10, &protocol witness table for UIView);
  *(_OWORD *)(v6 + 16) = v16;
  *(_OWORD *)(v6 + 32) = v15;
  result = v13;
  *(_OWORD *)(v6 + 48) = v14;
  *(__n128 *)(v6 + 64) = v13;
  *(_QWORD *)(v6 + 80) = v4;
  return result;
}

id sub_1004270C0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  void *v4;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v17;
  CGFloat v18;
  CGAffineTransform v19;
  CGRect v20;
  CGRect v21;

  v1 = type metadata accessor for CustomLayoutView(0);
  v2 = (void (*)(void))method lookup function for CustomLayoutView(v1, &method descriptor for CustomLayoutView.didLayout());
  v2();
  v3 = v0 + qword_100822B38;
  v4 = *(void **)(v0 + qword_100822B18);
  CGAffineTransformMakeRotation(&v19, *(double *)(v0 + qword_100822B38 + 40) * 3.14159265 / 180.0);
  objc_msgSend(v4, "setTransform:", &v19);
  CGAffineTransformMakeRotation(&v19, *(double *)(v3 + 48) * 3.14159265 / 180.0);
  a = v19.a;
  b = v19.b;
  c = v19.c;
  d = v19.d;
  tx = v19.tx;
  ty = v19.ty;
  v17 = v19.ty;
  v18 = v19.tx;
  v11 = *(void **)(v0 + qword_100822B20);
  objc_msgSend(v11, "bounds");
  v19.a = a;
  v19.b = b;
  v19.c = c;
  v19.d = d;
  v19.tx = tx;
  v19.ty = ty;
  v21 = CGRectApplyAffineTransform(v20, &v19);
  objc_msgSend(v11, "center", v21.origin.x, v21.origin.y);
  v13 = v12;
  objc_msgSend(v4, "center");
  v15 = v14;
  v19.a = 1.0;
  v19.b = 0.0;
  v19.c = 0.0;
  v19.d = 1.0;
  v19.tx = 0.0;
  v19.ty = 0.0;
  objc_msgSend(v11, "setTransform:", &v19);
  objc_msgSend(v11, "bounds");
  objc_msgSend(v11, "setBounds:");
  objc_msgSend(v11, "setCenter:", v13, v15);
  v19.a = a;
  v19.b = b;
  v19.c = c;
  v19.d = d;
  v19.tx = v18;
  v19.ty = v17;
  return objc_msgSend(v11, "setTransform:", &v19);
}

void sub_10042728C()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.AppPromotionIAPFallbackView", 48, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_1004272B8()
{
  uint64_t v0;

}

void sub_100427304(uint64_t a1)
{

}

uint64_t sub_10042735C()
{
  return type metadata accessor for AppPromotionIAPFallbackView(0);
}

double sub_100427364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  id v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  double result;
  uint64_t v29;

  v1 = v0;
  v2 = OfferItem.iapArtwork.getter();
  v3 = ((uint64_t (*)(void))OfferItem.offerLockup.getter)();
  v4 = type metadata accessor for InAppPurchaseLockup(0);
  v5 = swift_dynamicCastClass(v3, v4);
  if (v5)
  {
    v7 = InAppPurchaseLockup.parent.getter(v5, v6);
    v9 = Lockup.icon.getter(v8);
    swift_release(v7);
  }
  else
  {
    v10 = swift_release(v3);
    v3 = OfferItem.offerLockup.getter(v10);
    v9 = Lockup.icon.getter(v11);
  }
  swift_release(v3);
  if ((!v9 || (swift_retain(v9), v13 = (id)Artwork.backgroundColor.getter(v12), swift_release(v9), !v13))
    && (v13 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor"),
        !v9)
    || (v14 = swift_retain(v9), v15 = (id)Artwork.backgroundGradientColor.getter(v14), swift_release(v9), !v15))
  {
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    if (!v2)
      goto LABEL_12;
LABEL_11:
    swift_retain(v2);
    v17 = (id)Artwork.backgroundColor.getter(v16);
    swift_release(v2);
    if (v17)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (v2)
    goto LABEL_11;
LABEL_12:
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  if (!v2)
  {
LABEL_14:
    v19 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    goto LABEL_15;
  }
LABEL_13:
  v18 = swift_retain(v2);
  v19 = (id)Artwork.backgroundGradientColor.getter(v18);
  swift_release(v2);
  if (!v19)
    goto LABEL_14;
LABEL_15:
  v20 = *(_QWORD *)(v1 + qword_100822B28);
  v21 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v22 = swift_allocObject(v21, 64, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100644360;
  *(_QWORD *)(v22 + 32) = v15;
  *(_QWORD *)(v22 + 40) = v13;
  *(_QWORD *)(v22 + 48) = v17;
  *(_QWORD *)(v22 + 56) = v19;
  v29 = v22;
  specialized Array._endMutation()(v22);
  v23 = *(_QWORD *)(v20 + OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors);
  *(_QWORD *)(v20 + OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors) = v29;
  v24 = v15;
  v25 = v13;
  v26 = v17;
  v27 = v19;
  swift_bridgeObjectRelease(v23);
  sub_10017F014();

  swift_release(v2);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_1004275D4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  double v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[40];
  _QWORD v83[5];

  v10 = type metadata accessor for Artwork.Style(0, a2);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83[3] = a4;
  v83[4] = a5;
  v18 = sub_1000119C0(v83);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v18, a1, a4);
  sub_10000EF80((uint64_t)v83, (uint64_t)v82);
  v19 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v20 = type metadata accessor for OfferItem(0);
  if (swift_dynamicCast(&v81, v82, v19, v20, 6))
  {
    v21 = v81;
    v22 = OfferItem.iapArtwork.getter();
    v24 = OfferItem.offerLockup.getter(v23);
    v25 = type metadata accessor for InAppPurchaseLockup(0);
    v26 = swift_dynamicCastClass(v24, v25);
    v79 = v21;
    if (v26)
    {
      v28 = InAppPurchaseLockup.parent.getter(v26, v27);
      v30 = Lockup.icon.getter(v29);
      swift_release(v24);
    }
    else
    {
      v31 = swift_release(v24);
      v28 = OfferItem.offerLockup.getter(v31);
      v30 = Lockup.icon.getter(v32);
    }
    swift_release(v28);
    v80 = a2;
    if (v30)
    {
      v33 = *(double *)&a3[qword_100822B38 + 8];
      v34 = swift_retain(v30);
      v35 = Artwork.crop.getter(v34);
      v36 = Artwork.Crop.preferredContentMode.getter(v35);
      v37 = *(void (**)(char *, uint64_t))(v15 + 8);
      v37(v17, v14);
      v38 = Artwork.config(_:mode:prefersLayeredImage:)(v36, 0, v33, v33);
      v39 = a3;
      v40 = v38;
      v78 = v39;
      v41 = *(void **)&v39[qword_100822B20];
      Artwork.style.getter(v38);
      v42 = ArtworkView.style.setter(v13);
      v43 = objc_msgSend(v41, "setContentMode:", Artwork.contentMode.getter(v42));
      v44 = ArtworkLoaderConfig.size.getter(v43);
      v46 = ArtworkView.imageSize.setter(v44, v45);
      v47 = Artwork.backgroundColor.getter(v46);
      if (!v47)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v47 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v47);
      v49 = Artwork.crop.getter(v48);
      v50 = Artwork.Crop.preferredContentMode.getter(v49);
      v37(v17, v14);
      objc_msgSend(v41, "setContentMode:", v50);
      v51 = type metadata accessor for ArtworkView(0);
      v52 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v40, 2, 1, v41, v51, v52);
      swift_release(v30);
      swift_release(v40);
      a3 = v78;
    }
    if (v22)
    {
      v53 = *(double *)&a3[qword_100822B38];
      v54 = swift_retain(v22);
      v55 = Artwork.crop.getter(v54);
      v56 = Artwork.Crop.preferredContentMode.getter(v55);
      v78 = *(char **)(v15 + 8);
      ((void (*)(char *, uint64_t))v78)(v17, v14);
      v57 = Artwork.config(_:mode:prefersLayeredImage:)(v56, 0, v53, v53);
      v58 = a3;
      v59 = v57;
      v60 = *(_QWORD *)&v58[qword_100822B18];
      v61 = OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView;
      v62 = *(id *)(v60 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
      Artwork.style.getter(v62);
      v63 = ArtworkView.style.setter(v13);
      v64 = objc_msgSend(v62, "setContentMode:", Artwork.contentMode.getter(v63));
      v65 = ArtworkLoaderConfig.size.getter(v64);
      v67 = ArtworkView.imageSize.setter(v65, v66);
      v68 = Artwork.backgroundColor.getter(v67);
      if (!v68)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v68 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v68);

      v69 = *(id *)(v60 + v61);
      v71 = Artwork.crop.getter(v70);
      v72 = Artwork.Crop.preferredContentMode.getter(v71);
      ((void (*)(char *, uint64_t))v78)(v17, v14);
      objc_msgSend(v69, "setContentMode:", v72);

      v73 = *(void **)(v60 + v61);
      v74 = type metadata accessor for ArtworkView(0);
      v75 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v76 = v73;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v59, 2, 1, v76, v74, v75);
      swift_release(v79);
      swift_release(v59);

      swift_release_n(v22, 2);
    }
    else
    {
      swift_release(v79);
    }
    swift_release(v30);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v83);
}

void sub_100427AC0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = qword_100822B20;
  v2 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = qword_100822B28;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v4 = qword_100822B30;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/AppPromotionIAPFallbackView.swift", 54, 2, 43, 0);
  __break(1u);
}

unint64_t sub_100427B8C()
{
  unint64_t result;

  result = qword_100822B90;
  if (!qword_100822B90)
  {
    result = swift_getWitnessTable(&unk_10064EC08, &type metadata for AppPromotionIAPFallbackLayout);
    atomic_store(result, (unint64_t *)&qword_100822B90);
  }
  return result;
}

uint64_t sub_100427BD0()
{
  _QWORD *v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 11);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 21);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 26);
  return swift_deallocObject(v0, 248, 7);
}

void sub_100427C0C(uint64_t a1)
{
  sub_100427D10(1.0, a1, qword_100822BA0);
}

void sub_100427C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  uint64_t v9;
  double v10;

  v0 = type metadata accessor for SearchResultsContextCardLayout.Metrics(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_100808210);
  sub_100011980(v4, qword_100822BB8);
  v5 = sub_10000EFC4(v4, (uint64_t)qword_100822BB8);
  v6 = static SearchResultsContextCardLayout.Metrics.standard.getter(v5);
  v7 = SearchResultsContextCardLayout.Metrics.maxCardWidth.getter(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = v7;
  v8 = sub_10002128C();
  PageGrid.DirectionalValue.init(_:)(&v10, &type metadata for CGFloat, v8);
}

void sub_100427CFC(uint64_t a1)
{
  sub_100427D10(32.0, a1, qword_100822BD0);
}

void sub_100427D10(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  double v7;

  v5 = sub_10000DAF8(&qword_100808210);
  sub_100011980(v5, a3);
  sub_10000EFC4(v5, (uint64_t)a3);
  v7 = a1;
  v6 = sub_10002128C();
  PageGrid.DirectionalValue.init(_:)(&v7, &type metadata for CGFloat, v6);
}

uint64_t sub_100427D88()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void (*v30)(char *);
  unint64_t v31;
  __n128 v32;
  int64x2_t *v38;
  void (*v39)(_QWORD);
  double left;
  double bottom;
  double right;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __n128 v49;
  void (*v51)(int64x2_t *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(int64x2_t *, uint64_t, uint64_t);
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t, __n128);
  char *v62;
  __n128 v63;
  char *v64;
  int64x2_t *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __n128 v69;
  uint64_t v70;
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t result;
  uint64_t v76;
  int64x2_t *v77;
  double v78;
  double v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t, uint64_t, __n128);
  __n128 v86;
  _QWORD v87[2];
  void (*v88)(char *, uint64_t);
  void (*v89)(int64x2_t *, uint64_t, uint64_t);
  int64x2_t v90;
  char *v91;
  char *v92;
  void (*v93)(char *, uint64_t, uint64_t, __n128);
  uint64_t v94;
  int64x2_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[2];

  v0 = sub_10000DAF8(&qword_100808208);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v96 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v5 = (int64x2_t *)((char *)v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DAF8(&qword_100808210);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v91 = (char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v87 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v87 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v87 - v16;
  v94 = type metadata accessor for PageGrid.Breakpoint(0);
  v18 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v90.i64[0] = (uint64_t)v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v87 - v21;
  v23 = sub_10000DAF8(&qword_100808218);
  v24 = *(_QWORD *)(v18 + 72);
  v98 = v18;
  v25 = *(unsigned __int8 *)(v18 + 80);
  v26 = (v25 + 32) & ~v25;
  v102 = v24;
  v27 = swift_allocObject(v23, v26 + 5 * v24, v25 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_100642200;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v92 = v3;
  v95 = v5;
  v101 = v27 + v26;
  v28 = xmmword_100868E30;
  if (qword_100805C48 != -1)
    swift_once(&qword_100805C48, sub_100427C0C);
  v87[0] = v27;
  v29 = sub_10000EFC4(v6, (uint64_t)qword_100822BA0);
  v30 = *(void (**)(char *))(v7 + 16);
  v93 = (void (*)(char *, uint64_t, uint64_t, __n128))v29;
  v30(v17);
  v103 = 0x4030000000000000;
  v104[0] = 0x4020000000000000;
  v31 = sub_10002128C();
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v104, &v103, &type metadata for CGFloat, v31, v32);
  if (qword_100805C58 != -1)
    swift_once(&qword_100805C58, sub_100427CFC);
  v99 = sub_10000EFC4(v6, (uint64_t)qword_100822BD0);
  v30(v11);
  __asm { FMOV            V0.2D, #16.0 }
  v38 = v95;
  *v95 = _Q0;
  v97 = v6;
  v39 = *(void (**)(_QWORD))(v96 + 104);
  LODWORD(v96) = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v89 = (void (*)(int64x2_t *, _QWORD, uint64_t))v39;
  v39(v38);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v104[0]) = 0;
  v43 = v92;
  PageGrid.DirectionalValue.init(_:)(v104, &type metadata for Bool, &protocol witness table for Bool);
  v104[0] = 0;
  v44 = v91;
  PageGrid.DirectionalValue.init(_:)(v104, &type metadata for CGFloat, v31);
  v45 = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v43, v44, v14, v11, v38, *(double *)&v28, *((double *)&v28 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v46 = v101;
  PageGrid.Breakpoint.centered.getter(v45);
  v88 = *(void (**)(char *, uint64_t))(v98 + 8);
  v88(v22, v94);
  v87[1] = v46 + v102;
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v47 = xmmword_100868E40;
  v48 = v97;
  v49.n128_f64[0] = ((double (*)(char *, void (*)(char *, uint64_t, uint64_t, __n128), uint64_t))v30)(v17, v93, v97);
  v103 = 0x4034000000000000;
  v104[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v104, &v103, &type metadata for CGFloat, v31, v49);
  v93 = (void (*)(char *, uint64_t, uint64_t, __n128))v30;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v11, v99, v48);
  __asm { FMOV            V0.2D, #20.0 }
  *v38 = _Q0;
  v51 = v89;
  v89(v38, v96, v100);
  LOBYTE(v104[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v104, &type metadata for Bool, &protocol witness table for Bool);
  v104[0] = 0;
  v98 = v31;
  PageGrid.DirectionalValue.init(_:)(v104, &type metadata for CGFloat, v31);
  v52 = v90.i64[0];
  v53 = v17;
  v91 = v14;
  v92 = v11;
  v54 = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v43, v44, v14, v11, v38, *(double *)&v47, *((double *)&v47 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  PageGrid.Breakpoint.centered.getter(v54);
  v88((char *)v52, v94);
  v94 = v101 + 2 * v102;
  v55 = v51;
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v56 = xmmword_100868E50;
  if (qword_100805C50 != -1)
    swift_once(&qword_100805C50, sub_100427C1C);
  v57 = v97;
  v58 = sub_10000EFC4(v97, (uint64_t)qword_100822BB8);
  v59 = v53;
  v60 = v53;
  v61 = v93;
  ((void (*)(char *, uint64_t, uint64_t))v93)(v60, v58, v57);
  v104[0] = 0x4034000000000000;
  v62 = v91;
  v63 = PageGrid.DirectionalValue.init(_:)(v104, &type metadata for CGFloat, v98);
  v64 = v92;
  v61(v92, v99, v57, v63);
  v65 = v95;
  v90 = vdupq_n_s64(0x4041000000000000uLL);
  *v95 = v90;
  v66 = v96;
  v67 = v100;
  v55(v65, v96, v100);
  PageGrid.Breakpoint.init(range:centeredColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v59, v62, v64, v65, *(double *)&v56, *((double *)&v56 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v88 = (void (*)(char *, uint64_t))(v101 + 3 * v102);
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v68 = xmmword_100868E90;
  v94 = v58;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v59, v58, v57);
  v104[0] = 0x4034000000000000;
  v69 = PageGrid.DirectionalValue.init(_:)(v104, &type metadata for CGFloat, v98);
  v70 = v99;
  v61(v64, v99, v57, v69);
  *v65 = v90;
  v55(v65, v66, v67);
  v71 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  result = PageGrid.Breakpoint.init(range:centeredColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v59, v62, v64, v65, *(double *)&v68, *((double *)&v68 + 1), v71, v72, v73, v74);
  v76 = v67;
  v77 = v65;
  if (qword_100805F30 != -1)
    result = swift_once(&qword_100805F30, sub_1004B9BF0);
  v78 = *(double *)&xmmword_100868EA0;
  if (qword_100805F38 != -1)
    result = swift_once(&qword_100805F38, sub_1004B9C04);
  v79 = *((double *)&xmmword_100868EB0 + 1);
  if (v78 > *((double *)&xmmword_100868EB0 + 1))
  {
    __break(1u);
  }
  else
  {
    v102 = v101 + 4 * v102;
    v80 = v59;
    v81 = v70;
    v82 = v76;
    v83 = v97;
    v84 = v59;
    v85 = v93;
    ((void (*)(char *, uint64_t, uint64_t))v93)(v80, v94, v97);
    v104[0] = 0x4038000000000000;
    v86 = PageGrid.DirectionalValue.init(_:)(v104, &type metadata for CGFloat, v98);
    v85(v64, v81, v83, v86);
    *v77 = vdupq_n_s64(0x404A000000000000uLL);
    v55(v77, v66, v82);
    PageGrid.Breakpoint.init(range:centeredColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v84, v62, v64, v77, v78, v79, UIEdgeInsetsZero.top, left, bottom, right);
    return v87[0];
  }
  return result;
}

uint64_t sub_100428650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  _QWORD v15[4];

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = GameCenterPlayer.action.getter(v7);
  if (v10)
  {
    v11 = v10;
    if (UIResponder.nearestActionRunner.getter())
    {
      v15[3] = type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0);
      v15[0] = v3;
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v5);
      v12 = v3;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v11, v15, v9, a3);
      swift_release();
      v13 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v13);
      sub_10001282C((uint64_t)v15);
    }
    else
    {
      swift_release();
    }
  }
  return 3;
}

double sub_100428764(uint64_t *a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1004287D4(*a1, a2, a3, a5, a7, a8);
}

void sub_100428778(_QWORD *a1, int a2, int a3, int a4, int a5, id a6)
{
  sub_100428BE0(*a1, a2, a4, a5, a6);
}

uint64_t sub_10042878C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_100428650(*a1, a2, a3);
  return 3;
}

uint64_t sub_1004287A8()
{
  return sub_10000E720(&qword_100822BE8, (uint64_t (*)(uint64_t))&type metadata accessor for SmallGameCenterPlayer, (uint64_t)&protocol conformance descriptor for GameCenterPlayer);
}

double sub_1004287D4(uint64_t a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(_QWORD *, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[5];
  _QWORD v69[5];
  _OWORD v70[11];

  v8 = a2.n128_f64[0];
  v10 = type metadata accessor for LabelPlaceholderCompatibility(0, a2);
  v54 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804A68 != -1)
    swift_once(&qword_100804A68, sub_10012E504);
  v59 = v10;
  sub_10012F57C(&xmmword_1008652F0, v70);
  v13 = v70[0];
  v14 = type metadata accessor for LayoutViewPlaceholder(0);
  v15 = *(unsigned int *)(v14 + 48);
  v16 = *(unsigned __int16 *)(v14 + 52);
  v57 = v14;
  swift_allocObject(v14, v15, v16);
  v58 = LayoutViewPlaceholder.init(representing:)(*(double *)&v13, *((double *)&v13 + 1));
  v17 = GameCenterPlayer.alias.getter();
  v19 = v18;
  v20 = sub_10005BD18();
  v53 = a1;
  v21 = v20;
  if (qword_100806378 != -1)
    swift_once(&qword_100806378, sub_1004C7E40);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_10000EFC4(v22, (uint64_t)qword_100869B40);
  ObjectType = swift_getObjectType();
  v24 = objc_msgSend(a6, "traitCollection");
  v55 = a6;
  v25 = v24;
  v26 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v23, v24);

  v27 = type metadata accessor for Feature(0);
  v52 = v21;
  v28 = v27;
  v61 = v27;
  v51 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v62 = v51;
  v29 = sub_1000119C0(&v60);
  v30 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v31 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
  v31(v29, enum case for Feature.measurement_with_labelplaceholder(_:), v28);
  v32 = isFeatureEnabled(_:)(&v60);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v60);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v17, v19, v26, 4, 0, 0, 1, 0, v32 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v69, v33);
  v34 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
  v35 = v59;
  v36 = v34(v12, v59);
  v37 = GameCenterPlayer.displayName.getter(v36);
  v53 = v38;
  v54 = v37;
  if (qword_100806380 != -1)
    swift_once(&qword_100806380, sub_1004C7E58);
  v39 = sub_10000EFC4(v22, (uint64_t)qword_100869B58);
  v40 = (uint64_t)v55;
  v41 = objc_msgSend(v55, "traitCollection");
  v42 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v39, v41);

  v61 = v28;
  v62 = v51;
  v43 = sub_1000119C0(&v60);
  v31(v43, v30, v28);
  v44 = isFeatureEnabled(_:)(&v60);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v60);
  LOBYTE(v49) = v44 & 1;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v54, v53, v42, 4, 0, 0, 1, 0, v49);
  LabelPlaceholderCompatibility.layoutTextView.getter(v68, v45);
  v34(v12, v35);
  sub_10012F57C(v70, &v60);
  v46 = v58;
  v64 = v57;
  v65 = &protocol witness table for LayoutViewPlaceholder;
  v63 = v58;
  sub_10000EF80((uint64_t)v69, (uint64_t)&v67);
  sub_10000EF80((uint64_t)v68, (uint64_t)&v66);
  swift_retain(v46);
  v47 = sub_1004D44B0(v40, (uint64_t)&v60, v8, a3);
  swift_release();
  sub_10012F5B8(&v60);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v68);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v69);
  sub_100428D04(v70);
  return v47;
}

void sub_100428BE0(int a1, int a2, int a3, int a4, id a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Bool v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  UIImage_optional v22;

  v6 = v5;
  objc_msgSend(a5, "pageMarginInsets");
  v7 = (_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension39SmallGameCenterPlayerCollectionViewCell_insets);
  *v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v11;
  v12 = objc_retain(*(id *)(v5
                          + OBJC_IVAR____TtC20ProductPageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView));
  v22.value.super.isa = 0;
  v22.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v22, v13);

  v14 = *(void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension39SmallGameCenterPlayerCollectionViewCell_displayName);
  GameCenterPlayer.displayName.getter();
  if (v15)
  {
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v14, "setText:", v17);

  v18 = *(void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension39SmallGameCenterPlayerCollectionViewCell_alias);
  GameCenterPlayer.alias.getter();
  if (v19)
  {
    v20 = v19;
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v18, "setText:", v21);

}

_QWORD *sub_100428D04(_QWORD *a1)
{
  destroy for SmallGameCenterPlayerLayout.Metrics(a1);
  return a1;
}

void sub_100428D38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *Strong;
  void *v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  id v25;
  char v26;
  char *v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  uint64_t v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  double v39;
  void (*v40)(double, double);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  __n128 v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  double v68;
  void (*v69)(_QWORD, __n128, double);
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  void (*v76)(_QWORD, __n128, double);
  uint64_t v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v2 = v1;
  v4 = type metadata accessor for Uber.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  v81 = v4;
  v82 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100808530);
  __chkstk_darwin(v8);
  v80 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100808538);
  __chkstk_darwin(v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v75 - v17;
  if (!*(_QWORD *)(v2 + 32))
    return;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
    return;
  v20 = Strong;
  v21 = objc_msgSend(Strong, "collectionView");

  if (!v21)
    return;
  sub_10042A298();
  v22 = a1;
  v78 = v18;
  v23 = v12;
  v24 = v7;
  v25 = v22;
  v26 = static NSObject.== infix(_:_:)(v22, v21);

  v79 = v25;
  v27 = v24;
  v28 = (uint64_t)v23;

  if ((v26 & 1) == 0 || *(_BYTE *)(v2 + 88) != 1)
    return;
  v29 = v79;
  objc_msgSend(v79, "_systemContentInset");
  objc_msgSend(v29, "contentOffset");
  v31 = v30;
  v32 = *(void **)(v2 + 32);
  v33 = 0.0;
  v34 = v2 + 16;
  if (v32)
  {
    v35 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
    v36 = v32;
    sub_1001C2BD0(v35);
    v33 = v37;

  }
  v38 = fmin(v31 / v33, 1.0);
  if (v38 < 0.0)
    v39 = 0.0;
  else
    v39 = v38;
  v40 = *(void (**)(double, double))(v2 + 40);
  if (v40)
  {
    v41 = *(_QWORD *)(v2 + 48);
    swift_retain(v41);
    v40(v39, 0.0);
    sub_100018908((uint64_t)v40, v41);
  }
  v42 = *(_QWORD *)(v2 + 72);
  v43 = v81;
  v44 = v82;
  if (!v42)
    goto LABEL_31;
  v76 = *(void (**)(_QWORD, __n128, double))(v2 + 72);
  v77 = v2 + 16;
  v45 = *(_QWORD *)(v2 + 80);
  v46 = *(_QWORD *)(v2 + 32);
  v75 = v45;
  if (v46)
  {
    v47 = *(_QWORD *)(v46 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_uber);
    sub_100018918(v42, v45);
    v48 = swift_retain(v47);
    v49 = (uint64_t)v78;
    Uber.style.getter(v48);
    v50 = swift_release();
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v51)(v49, 0, 1, v43, v50);
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
    v53 = v45;
    v49 = (uint64_t)v78;
    v51(v78, 1, 1, v81);
    v54 = v53;
    v29 = v79;
    v52 = swift_retain(v54);
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v44 + 104))(v15, enum case for Uber.Style.inline(_:), v43, v52);
  v51(v15, 0, 1, v43);
  v55 = *(int *)(v8 + 48);
  v56 = v80;
  v57 = v80 + v55;
  sub_10042A2D4(v49, v80);
  sub_10042A2D4((uint64_t)v15, v57);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v58(v56, 1, v43) == 1)
  {
    sub_100010F2C((uint64_t)v15, &qword_100808538);
    v56 = v80;
    sub_100010F2C(v49, &qword_100808538);
    v59 = v58(v57, 1, v43);
    v34 = v77;
    if (v59 == 1)
    {
      v60 = sub_100010F2C(v56, &qword_100808538);
LABEL_24:
      if (v39 >= 0.5)
        v68 = 0.35;
      else
        v68 = 0.2;
      v61.n128_u64[0] = 1.0;
      if (v39 < 0.5)
        v61.n128_f64[0] = 0.0;
      v70 = v75;
      v69 = v76;
      v76(v60, v61, v68);
      sub_100429C0C(v29, *(uint64_t *)&v68, 0, v39);
      sub_100018908((uint64_t)v69, v70);
      goto LABEL_32;
    }
  }
  else
  {
    sub_10042A2D4(v56, v28);
    v62 = v58(v57, 1, v43);
    v34 = v77;
    if (v62 != 1)
    {
      v63 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v27, v57, v43);
      v64 = sub_10042A31C();
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v27, v43, v64);
      v66 = v43;
      v67 = *(void (**)(char *, uint64_t))(v63 + 8);
      v29 = v79;
      v67(v27, v66);
      sub_100010F2C((uint64_t)v15, &qword_100808538);
      sub_100010F2C((uint64_t)v78, &qword_100808538);
      v67((char *)v28, v66);
      v60 = sub_100010F2C(v56, &qword_100808538);
      if ((v65 & 1) != 0)
        goto LABEL_24;
      goto LABEL_30;
    }
    sub_100010F2C((uint64_t)v15, &qword_100808538);
    sub_100010F2C((uint64_t)v78, &qword_100808538);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v28, v43);
  }
  sub_100010F2C(v56, &qword_100808530);
LABEL_30:
  sub_100018908((uint64_t)v76, v75);
LABEL_31:
  sub_100429C0C(v29, 0, 1, v39);
LABEL_32:
  sub_100167738(v39);
  v71 = (void *)swift_unknownObjectWeakLoadStrong(v34);
  if (v71)
  {
    v72 = v71;
    v73 = objc_msgSend(v71, "navigationController");

    if (v73)
    {
      v74 = objc_msgSend(v73, "navigationBar");

      objc_msgSend(v74, "_setTitleOpacity:", v39);
    }
  }
}

void sub_100429308()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(double, double);
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;

  v1 = v0;
  v2 = *(void (**)(double, double))(v0 + 40);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    swift_retain(*(_QWORD *)(v1 + 48));
    v2(1.0, 0.0);
    sub_100018908((uint64_t)v2, v3);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      v7 = objc_msgSend(v6, "navigationBar");

      objc_msgSend(v7, "_setTitleOpacity:", 1.0);
    }
  }
  *(_BYTE *)(v1 + 88) = 0;
}

double sub_1004293C4()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  double v3;
  double MaxY;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  CGRect v21;

  v1 = v0 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  v3 = 0.0;
  MaxY = 0.0;
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      v7 = objc_msgSend(v6, "navigationBar");

      objc_msgSend(v7, "frame");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v21.origin.x = v9;
      v21.origin.y = v11;
      v21.size.width = v13;
      v21.size.height = v15;
      MaxY = CGRectGetMaxY(v21);
    }
  }
  v16 = *(void **)(v0 + 32);
  if (v16)
  {
    v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    v18 = v16;
    sub_1001C2BD0(v17);
    v3 = v19;

  }
  return fmax(v3 - MaxY, 16.0);
}

void sub_1004294D0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t Strong;
  _QWORD *v32;
  double v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v36 = a2;
  v4 = type metadata accessor for Uber.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100808530);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100808538);
  __chkstk_darwin(v10);
  v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  v18 = *(void **)(v2 + 32);
  v37 = v2;
  *(_QWORD *)(v2 + 32) = a1;
  a1;

  if (a1)
  {
    Uber.style.getter(v19);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 0, 1, v4);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 1, 1, v4);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v14, enum case for Uber.Style.inline(_:), v4);
  v20(v14, 0, 1, v4);
  v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10042A2D4((uint64_t)v17, (uint64_t)v9);
  sub_10042A2D4((uint64_t)v14, v21);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v23 = v22(v9, 1, v4);
  v24 = v35;
  if (v23 == 1)
  {
    sub_100010F2C((uint64_t)v14, &qword_100808538);
    sub_100010F2C((uint64_t)v17, &qword_100808538);
    v25 = v22((char *)v21, 1, v4);
    v26 = v37;
    if (v25 == 1)
    {
      sub_100010F2C((uint64_t)v9, &qword_100808538);
      goto LABEL_13;
    }
  }
  else
  {
    sub_10042A2D4((uint64_t)v9, v35);
    if (v22((char *)v21, 1, v4) != 1)
    {
      v27 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v34, v21, v4);
      v28 = sub_10042A31C();
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v27, v4, v28);
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v27, v4);
      sub_100010F2C((uint64_t)v14, &qword_100808538);
      sub_100010F2C((uint64_t)v17, &qword_100808538);
      v30((char *)v24, v4);
      sub_100010F2C((uint64_t)v9, &qword_100808538);
      v26 = v37;
      if ((v29 & 1) != 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_100010F2C((uint64_t)v14, &qword_100808538);
    sub_100010F2C((uint64_t)v17, &qword_100808538);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
    v26 = v37;
  }
  sub_100010F2C((uint64_t)v9, &qword_100808530);
LABEL_11:
  Strong = swift_unknownObjectWeakLoadStrong(v26 + 16);
  if (Strong)
  {
    v32 = (_QWORD *)Strong;
    v33 = sub_1004293C4();
    (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *v32) + 0x1C0))(*(_QWORD *)&v33, 0);

  }
LABEL_13:
  sub_100428D38(v36);
}

uint64_t sub_100429864(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  unint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  void *Strong;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v43;

  v7 = v6;
  v11 = type metadata accessor for Uber.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8(&qword_100808530);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8(&qword_100808538);
  __chkstk_darwin(v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v43 - v22;
  v26 = __chkstk_darwin(v24);
  v27 = (char *)&v43 - v25;
  if (a4 > a2)
    goto LABEL_2;
  v26.n128_f64[0] = fabs(a6);
  if (v26.n128_f64[0] <= 0.4)
  {
    v29 = *(_QWORD *)(v6 + 32);
    if (v29)
    {
      v30 = swift_retain(*(_QWORD *)(v29 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_uber));
      Uber.style.getter(v30);
      v31 = swift_release();
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      v32(v27, 0, 1, v11, v31);
    }
    else
    {
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      v32((char *)&v43 - v25, 1, 1, v11, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v23, enum case for Uber.Style.inline(_:), v11);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v32)(v23, 0, 1, v11);
    v33 = (uint64_t)&v17[*(int *)(v15 + 48)];
    sub_10042A2D4((uint64_t)v27, (uint64_t)v17);
    sub_10042A2D4((uint64_t)v23, v33);
    v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (v34((uint64_t)v17, 1, v11) == 1)
    {
      sub_100010F2C((uint64_t)v23, &qword_100808538);
      sub_100010F2C((uint64_t)v27, &qword_100808538);
      if (v34(v33, 1, v11) == 1)
      {
        sub_100010F2C((uint64_t)v17, &qword_100808538);
        v28 = 0;
        return v28 & 1;
      }
      goto LABEL_12;
    }
    sub_10042A2D4((uint64_t)v17, (uint64_t)v20);
    if (v34(v33, 1, v11) == 1)
    {
      sub_100010F2C((uint64_t)v23, &qword_100808538);
      sub_100010F2C((uint64_t)v27, &qword_100808538);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
LABEL_12:
      sub_100010F2C((uint64_t)v17, &qword_100808530);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v33, v11);
    v35 = sub_10042A31C();
    v36 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v14, v11, v35);
    v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    v37(v14, v11);
    sub_100010F2C((uint64_t)v23, &qword_100808538);
    sub_100010F2C((uint64_t)v27, &qword_100808538);
    v37(v20, v11);
    sub_100010F2C((uint64_t)v17, &qword_100808538);
    if ((v36 & 1) != 0)
    {
LABEL_2:
      v28 = 0;
      return v28 & 1;
    }
  }
LABEL_14:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7 + 16);
  if (Strong)
  {
    v39 = Strong;
    v40 = objc_msgSend(Strong, "traitCollection");

    LOBYTE(v39) = UITraitCollection.prefersAccessibilityLayouts.getter(v41);
    v28 = v39 ^ 1;
  }
  else
  {
    v28 = 1;
  }
  return v28 & 1;
}

uint64_t sub_100429C0C(void *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  double v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v32;
  unint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(double, double);
  uint64_t v37;
  char *v38;
  id v39;

  v39 = a1;
  v8 = type metadata accessor for Uber.Style(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v38 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_100808530);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8(&qword_100808538);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v38 - v22;
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v39, "_verticalVelocity", v21.n128_f64[0]);
    v24 = v21.n128_f64[0];
  }
  else
  {
    v24 = *(double *)&a2;
  }
  v25 = v4[4];
  if (v25)
  {
    v26 = swift_retain(*(_QWORD *)(v25 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_uber));
    Uber.style.getter(v26);
    v27 = swift_release();
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v28(v23, 0, 1, v8, v27);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v28(v23, 1, 1, v8, v21);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v19, enum case for Uber.Style.inline(_:), v8);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v28)(v19, 0, 1, v8);
  v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10042A2D4((uint64_t)v23, (uint64_t)v13);
  sub_10042A2D4((uint64_t)v19, v29);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v13, 1, v8) == 1)
  {
    sub_100010F2C((uint64_t)v19, &qword_100808538);
    sub_100010F2C((uint64_t)v23, &qword_100808538);
    if (v30(v29, 1, v8) == 1)
    {
      result = sub_100010F2C((uint64_t)v13, &qword_100808538);
LABEL_14:
      v36 = (void (*)(double, double))v4[7];
      if (!v36)
        return result;
      v37 = v4[8];
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  sub_10042A2D4((uint64_t)v13, (uint64_t)v16);
  if (v30(v29, 1, v8) == 1)
  {
    sub_100010F2C((uint64_t)v19, &qword_100808538);
    sub_100010F2C((uint64_t)v23, &qword_100808538);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
LABEL_12:
    result = sub_100010F2C((uint64_t)v13, &qword_100808530);
    goto LABEL_16;
  }
  v32 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v38, v29, v8);
  v33 = sub_10042A31C();
  v34 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v32, v8, v33);
  v35 = *(void (**)(char *, uint64_t))(v9 + 8);
  v35(v32, v8);
  sub_100010F2C((uint64_t)v19, &qword_100808538);
  sub_100010F2C((uint64_t)v23, &qword_100808538);
  v35(v16, v8);
  result = sub_100010F2C((uint64_t)v13, &qword_100808538);
  if ((v34 & 1) != 0)
    goto LABEL_14;
LABEL_16:
  v36 = (void (*)(double, double))v4[5];
  if (!v36)
    return result;
  v37 = v4[6];
LABEL_18:
  swift_retain(v37);
  v36(a4, v24);
  return sub_100018908((uint64_t)v36, v37);
}

void sub_100429FAC(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v11;
  id v12;
  id v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double MaxY;
  void *v28;
  id v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  void *v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  CGRect v50;

  v5 = v4;
  if (*(_QWORD *)(v4 + 32))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
    if (Strong)
    {
      v11 = Strong;
      v12 = objc_msgSend(Strong, "collectionView");

      if (v12)
      {
        sub_10042A298();
        v13 = a1;
        v14 = static NSObject.== infix(_:_:)(v13, v12);

        if ((v14 & 1) != 0)
        {
          objc_msgSend(v13, "contentSize");
          v16 = v15;
          v18 = v17;
          objc_msgSend(v13, "frame");
          if ((sub_100429864(v16, v18, v19, v20, a3, a4) & 1) != 0 && *(double *)(a2 + 8) > 0.0)
          {
            objc_msgSend(v13, "contentInset");
            v22 = v21;
            objc_msgSend(v13, "_systemContentInset");
            v24 = v23;
            v25 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
            v26 = 0.0;
            MaxY = 0.0;
            if (v25)
            {
              v28 = v25;
              v29 = objc_msgSend(v25, "navigationController");

              if (v29)
              {
                v30 = objc_msgSend(v29, "navigationBar");

                objc_msgSend(v30, "frame");
                v32 = v31;
                v34 = v33;
                v36 = v35;
                v38 = v37;

                v50.origin.x = v32;
                v50.origin.y = v34;
                v50.size.width = v36;
                v50.size.height = v38;
                MaxY = CGRectGetMaxY(v50);
              }
            }
            v39 = *(void **)(v5 + 32);
            if (v39)
            {
              v40 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
              v41 = v39;
              sub_1001C2BD0(v40);
              v43 = v42;

              v44 = *(_QWORD *)(v5 + 32);
              if (v44)
                v26 = *(double *)(v44 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_reflectionOutset);
            }
            else
            {
              v43 = 0.0;
            }
            v45 = v43 + v26 - v24;
            if (v45 < 0.0)
              v45 = 0.0;
            v46 = *(double *)(a2 + 8);
            if (v46 <= v45)
            {
              v47 = 0.07;
              if (a4 < 0.0)
                v47 = 0.5;
              v48 = v47 * v45;
              v49 = v45 - MaxY;
              if (v46 <= v48)
                v49 = -(v22 + v24);
              *(double *)(a2 + 8) = v49;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10042A22C()
{
  uint64_t v0;

  sub_100010D1C(v0 + 16);

  sub_100018908(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_100018908(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_100018908(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for UberedPageScrollObserver()
{
  return objc_opt_self(_TtC20ProductPageExtension24UberedPageScrollObserver);
}

unint64_t sub_10042A298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081C138;
  if (!qword_10081C138)
  {
    v1 = objc_opt_self(UIScrollView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10081C138);
  }
  return result;
}

uint64_t sub_10042A2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100808538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10042A31C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808550;
  if (!qword_100808550)
  {
    v1 = type metadata accessor for Uber.Style(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Uber.Style, v1);
    atomic_store(result, (unint64_t *)&qword_100808550);
  }
  return result;
}

id sub_10042A364(uint64_t a1, uint64_t a2)
{
  return sub_10042A38C(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension9BadgeView_caption, &OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel);
}

id sub_10042A378(uint64_t a1, uint64_t a2)
{
  return sub_10042A38C(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension9BadgeView_heading, &OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel);
}

id sub_10042A38C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  char *v4;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;

  v6 = &v4[*a3];
  v7 = *((_QWORD *)v6 + 1);
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)&v4[*a4];
  v9 = *((_QWORD *)v6 + 1);
  if (v9)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v6 + 1));
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v8, "setText:", v10);

  v11 = *(_QWORD *)v6;
  v12 = *((_QWORD *)v6 + 1);
  swift_bridgeObjectRetain(v12);
  LOBYTE(v11) = static String.isNilOrEmpty(_:)(v11, v12);
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v8, "setHidden:", v11 & 1);
  return objc_msgSend(v4, "setNeedsLayout");
}

id sub_10042A468()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  double v9;
  NSString v10;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText];
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText + 8])
  {
    v3 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel])
    {
      type metadata accessor for FadeableDynamicTypeLabel(0);
      v4 = (void *)DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
      sub_10042D794(v4);

      v5 = *(void **)&v0[v3];
      if (v5)
        objc_msgSend(v5, "setLineBreakMode:", 2);
    }
  }
  else
  {
    sub_10042D794(0);
  }
  v6 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel];
  if (v6)
  {
    v7 = *((_QWORD *)v2 + 1);
    v8 = v6;
    if (v7)
    {
      swift_bridgeObjectRetain(v7);
      v10 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v9 = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
    else
    {
      v10 = 0;
    }
    objc_msgSend(v6, "setText:", v10, v9);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_10042A580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BOOL8 v9;
  id v10;
  _BYTE v13[24];

  v3 = sub_10000DAF8(&qword_100819850);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_action;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_action, v13, 33, 0);
  sub_1002B6078(a1, v6);
  swift_endAccess(v13);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_tapGestureRecognizer);
  sub_100018ADC(v6, (uint64_t)v5, &qword_100819850);
  v8 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  v9 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  v10 = v7;
  sub_100010F2C((uint64_t)v5, &qword_100819850);
  objc_msgSend(v10, "setEnabled:", v9);

  return sub_100010F2C(a1, &qword_100819850);
}

uint64_t sub_10042A6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void (*v24)(_BYTE *, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD *, _BYTE *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(_BYTE *, uint64_t);
  _QWORD *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE v39[4];
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t);
  void (*v57)(_QWORD *, _BYTE *, uint64_t);
  _QWORD v58[5];
  _QWORD v59[3];
  uint64_t v60;
  void *v61;
  _QWORD v62[3];
  uint64_t v63;
  void *v64;
  _QWORD v65[3];
  uint64_t v66;
  void *v67;
  _QWORD v68[3];
  uint64_t v69;
  void *v70;
  _QWORD v71[3];
  uint64_t v72;
  void *v73;
  _QWORD v74[6];

  v0 = type metadata accessor for BadgeValueViewAlignment(0);
  v50 = *(_QWORD *)(v0 - 8);
  v51 = v0;
  __chkstk_darwin(v0);
  v54 = &v39[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = type metadata accessor for BadgeType(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  v3 = __chkstk_darwin(v2);
  v53 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = type metadata accessor for BadgeCaptionCappingType(0, v3);
  v44 = *(_QWORD *)(v46 - 8);
  v5 = __chkstk_darwin(v46);
  v52 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for BadgeViewSpacing(0, v5);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v8 = __chkstk_darwin(v7);
  v49 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for FontSource(0, v8);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v12);
  sub_100011980(v15, qword_100868898);
  v45 = sub_10000EFC4(v15, (uint64_t)qword_100868898);
  if (qword_1008061A0 != -1)
    swift_once(&qword_1008061A0, sub_1004C6F50);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = sub_10000EFC4(v16, (uint64_t)qword_1008695B8);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v14, v17, v16);
  v19 = enum case for FontSource.useCase(_:);
  v20 = (void (*)(_BYTE *, uint64_t, uint64_t))v11[13];
  v20(v14, enum case for FontSource.useCase(_:), v10);
  v21 = type metadata accessor for StaticDimension(0);
  v74[3] = v21;
  v74[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v74);
  v72 = v10;
  v73 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(v71);
  v57 = (void (*)(_QWORD *, _BYTE *, uint64_t))v11[2];
  v57(v22, v14, v10);
  StaticDimension.init(_:scaledLike:)(v71, 24.0);
  v56 = (void (*)(_BYTE *, uint64_t))v11[1];
  v56(v14, v10);
  if (qword_100806198 != -1)
    swift_once(&qword_100806198, sub_1004C6F38);
  v55 = sub_10000EFC4(v16, (uint64_t)qword_1008695A0);
  v18(v14, v55, v16);
  v20(v14, v19, v10);
  v72 = v21;
  v73 = &protocol witness table for StaticDimension;
  sub_1000119C0(v71);
  v69 = v10;
  v70 = &protocol witness table for FontSource;
  v23 = sub_1000119C0(v68);
  v57(v23, v14, v10);
  StaticDimension.init(_:scaledLike:)(v68, 22.0);
  v24 = v56;
  v56(v14, v10);
  v41 = v16;
  v18(v14, v55, v16);
  v20(v14, v19, v10);
  v55 = v21;
  v69 = v21;
  v70 = &protocol witness table for StaticDimension;
  sub_1000119C0(v68);
  v66 = v10;
  v67 = &protocol witness table for FontSource;
  v25 = sub_1000119C0(v65);
  v57(v25, v14, v10);
  StaticDimension.init(_:scaledLike:)(v65, 16.0);
  v24(v14, v10);
  if (qword_100806180 != -1)
    swift_once(&qword_100806180, sub_1004C6DEC);
  v26 = v41;
  v27 = sub_10000EFC4(v41, (uint64_t)qword_100869558);
  v18(v14, v27, v26);
  v20(v14, v19, v10);
  v66 = v55;
  v67 = &protocol witness table for StaticDimension;
  sub_1000119C0(v65);
  v40 = v19;
  v63 = v10;
  v64 = &protocol witness table for FontSource;
  v28 = sub_1000119C0(v62);
  v29 = v57;
  v57(v28, v14, v10);
  StaticDimension.init(_:scaledLike:)(v62, 12.0);
  v56(v14, v10);
  v18(v14, v27, v26);
  v20(v14, v19, v10);
  v30 = v55;
  v63 = v55;
  v64 = &protocol witness table for StaticDimension;
  sub_1000119C0(v62);
  v60 = v10;
  v61 = &protocol witness table for FontSource;
  v31 = sub_1000119C0(v59);
  v29(v31, v14, v10);
  StaticDimension.init(_:scaledLike:)(v59, 10.0);
  v32 = v56;
  v56(v14, v10);
  v18(v14, v27, v26);
  v20(v14, v40, v10);
  v60 = v30;
  v61 = &protocol witness table for StaticDimension;
  sub_1000119C0(v59);
  v58[3] = v10;
  v58[4] = &protocol witness table for FontSource;
  v33 = sub_1000119C0(v58);
  v29(v33, v14, v10);
  StaticDimension.init(_:scaledLike:)(v58, 32.0);
  v32(v14, v10);
  v34 = v49;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v42 + 104))(v49, enum case for BadgeViewSpacing.standard(_:), v43);
  v35 = v52;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v44 + 104))(v52, enum case for BadgeCaptionCappingType.none(_:), v46);
  v36 = v53;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v47 + 104))(v53, enum case for BadgeType.chartPosition(_:), v48);
  v37 = v54;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v50 + 104))(v54, enum case for BadgeValueViewAlignment.baseline(_:), v51);
  return BadgeViewRibbonLayout.Metrics.init(headingSpace:captionSpace:captionBottomSpace:badgeValueEditorsChoiceSpace:badgeValueIconSpace:badgeValueTextSpace:badgeValueBaselineOffset:badgeIconSize:valueBufferSpace:spacingType:captionCappingType:badgeType:isLabelLeading:valueViewAlignment:alignment:regularBadgeInsets:accessibleBadgeInsets:)(v74, v71, v68, v65, v62, v59, v34, v35, 0.0, 26.0, 26.0, 4.0, 0.0, 8.0, 0.0, 8.0, v36, 1, v37,
           1,
           0,
           0x4038000000000000,
           0,
           0x4038000000000000);
}

char *sub_10042AD28(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  objc_class *ObjCClassFromMetadata;
  uint64_t v42;
  objc_class *v43;
  id v44;
  double left;
  double bottom;
  double right;
  id v48;
  void *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  void (*v59)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  void *v61;
  uint64_t v62;
  objc_super v64;

  v9 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue];
  v14 = enum case for BadgeLeadingValue.infer(_:);
  v15 = type metadata accessor for BadgeLeadingValue(0, v10);
  v16.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v17 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_caption];
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView] = 0;
  v18 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_heading];
  *v18 = 0;
  v18[1] = 0;
  v19 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment] = 1;
  v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_isTruncatable] = 1;
  v20 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType];
  v21 = enum case for BadgeCaptionCappingType.none(_:);
  v22 = type metadata accessor for BadgeCaptionCappingType(0, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_requiresRemainingWidth] = 0;
  v23 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueViewAlignment];
  v24 = enum case for BadgeValueViewAlignment.baseline(_:);
  v25 = type metadata accessor for BadgeValueViewAlignment(0);
  v26.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  v27 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_spacing];
  v28 = enum case for BadgeViewSpacing.standard(_:);
  v29 = type metadata accessor for BadgeViewSpacing(0, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  v30 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_action];
  v31 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgeType];
  v33 = enum case for BadgeType.custom(_:);
  v34 = type metadata accessor for BadgeType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView] = 0;
  v35 = &v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgePositionInRibbon];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_overallBadgeCount] = 0;
  v36 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_tapGestureRecognizer;
  v37 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v38 = v4;
  *(_QWORD *)&v4[v36] = objc_msgSend(v37, "init");
  v39 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel;
  v40 = type metadata accessor for FadeableDynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v40);
  *(_QWORD *)&v38[v39] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v42 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel;
  *(_QWORD *)&v38[v42] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");

  v43 = (objc_class *)type metadata accessor for BadgeView(0);
  v64.receiver = v38;
  v64.super_class = v43;
  v44 = objc_msgSendSuper2(&v64, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v48 = v44;
  objc_msgSend(v48, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v49 = (void *)objc_opt_self(UIColor);
  v50 = (char *)v48;
  v51 = objc_msgSend(v49, "systemGrayColor");
  objc_msgSend(v50, "setTintColor:", v51);

  v52 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_tapGestureRecognizer;
  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_tapGestureRecognizer], "setEnabled:", 0);
  objc_msgSend(*(id *)&v50[v52], "addTarget:action:", v50, "didTapBadgeView:");
  objc_msgSend(v50, "addGestureRecognizer:", *(_QWORD *)&v50[v52]);
  v53 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel;
  v54 = *(void **)&v50[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel];
  objc_msgSend(v54, "setNumberOfLines:", 1);
  objc_msgSend(v54, "setTextAlignment:", 1);
  objc_msgSend(v54, "setLineBreakMode:", 2);
  if (qword_100806198 != -1)
    swift_once(&qword_100806198, sub_1004C6F38);
  v55 = type metadata accessor for FontUseCase(0);
  v56 = sub_10000EFC4(v55, (uint64_t)qword_1008695A0);
  v57 = *(_QWORD *)(v55 - 8);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v58(v12, v56, v55);
  v59 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56);
  v59(v12, 0, 1, v55);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v12);
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[v53]);
  v60 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel;
  v61 = *(void **)&v50[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel];
  objc_msgSend(v61, "setNumberOfLines:", 1);
  objc_msgSend(v61, "setTextAlignment:", 1);
  objc_msgSend(v61, "setLineBreakMode:", 2);
  if (qword_1008061A0 != -1)
    swift_once(&qword_1008061A0, sub_1004C6F50);
  v62 = sub_10000EFC4(v55, (uint64_t)qword_1008695B8);
  v58(v12, v62, v55);
  v59(v12, 0, 1, v55);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v12);
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[v60]);
  sub_10042B8A4();
  sub_10042BC3C();

  return v50;
}

id sub_10042B308()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BadgeView(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10042B5A8()
{
  return type metadata accessor for BadgeView(0);
}

uint64_t type metadata accessor for BadgeView(uint64_t a1)
{
  return sub_100019B28(a1, (uint64_t *)&unk_100822D38, (uint64_t)&nominal type descriptor for BadgeView);
}

uint64_t sub_10042B5C4()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  _BYTE v26[24];

  v1 = sub_10000DAF8(&qword_100819850);
  v2 = __chkstk_darwin(v1);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for BadgeCaptionCappingType(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for BadgeLeadingValue(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v11 + 104))(v14, enum case for BadgeLeadingValue.infer(_:), v10, v12);
  v15 = &v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue];
  v16 = swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue], v26, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v11 + 24))(v15, v14, v10, v16);
  swift_endAccess(v26);
  objc_msgSend(v0, "setNeedsLayout");
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
  sub_10042A364(0, 0);
  sub_10042A378(0, 0);
  v17 = &v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText];
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText + 8];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  swift_bridgeObjectRelease(v18);
  sub_10042A468();
  sub_10042D794(0);
  sub_10042D89C(0);
  v19 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView] = 0;

  v20 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment] = 4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel], "setTextAlignment:", 4);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v0[v20]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v0[v20]);
  objc_msgSend(v0, "setNeedsLayout");
  v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_isTruncatable] = 1;
  objc_msgSend(v0, "setNeedsLayout");
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for BadgeCaptionCappingType.none(_:), v5);
  v21 = &v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType];
  v22 = swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType], v26, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v6 + 24))(v21, v9, v5, v22);
  swift_endAccess(v26);
  objc_msgSend(v0, "setNeedsLayout");
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  v23 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
  return sub_10042A580((uint64_t)v4);
}

void sub_10042B8A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  id v11;
  Class isa;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806180 != -1)
    swift_once(&qword_100806180, sub_1004C6DEC);
  v9 = sub_10000EFC4(v5, (uint64_t)qword_100869558);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10(v8, v9, v5);
  v11 = objc_msgSend(v1, "traitCollection");
  isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v11).super.isa;
  v13 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

  if (v13)
  {
    v14 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v13, 0.0);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v14)
    {
      v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel];
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v16, "setFont:", v14);

      }
      goto LABEL_10;
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel];
  if (!v17)
    return;
  v10(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v14 = v17;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v4);
LABEL_10:

}

void sub_10042BAD0()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for BadgeView(0);
  objc_msgSendSuper2(&v7, "tintColorDidChange");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "tintColor");
    objc_msgSend(v2, "setTintColor:", v3);

  }
  v4 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v0, "tintColor");
    objc_msgSend(v5, "setTextColor:", v6);

  }
}

void sub_10042BC3C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  Class isa;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "systemBackgroundColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = objc_msgSend(v1, "systemGrayColor");
  objc_msgSend(v0, "setTintColor:", v3);

  v4 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel];
  v5 = objc_msgSend(v1, "systemGrayColor");
  objc_msgSend(v4, "setTextColor:", v5);

  v6 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  isa = UIColor.init(light:dark:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.235294118, 0.235294118, 0.262745098, 0.4), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.921568627, 0.921568627, 0.960784314, 0.5)).super.isa;
  objc_msgSend(v6, "setTextColor:", isa);

}

void sub_10042BDC8(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  char *v28;
  __n128 v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  char *v40;
  __n128 v41;
  void *v42;
  id v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];
  char v61[24];
  char v62[24];
  char v63[24];
  char v64[32];

  v2 = v1;
  v4 = type metadata accessor for BadgeType(0);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  v5 = __chkstk_darwin(v4);
  v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BadgeViewSpacing(0, v5);
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  v8 = __chkstk_darwin(v7);
  v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BadgeLeadingValue(0, v8);
  v53 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  v52 = type metadata accessor for BadgeValueViewAlignment(0);
  v51 = *(_QWORD *)(v52 - 8);
  v16 = __chkstk_darwin(v52);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for BadgeCaptionCappingType(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100805C60 != -1)
    swift_once(&qword_100805C60, sub_10042A6A4);
  v24 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v21);
  v25 = sub_10000EFC4(v24, (uint64_t)qword_100868898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, v25, v24);
  v26 = &v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType];
  v27 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType], v64, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v20 + 16))(v23, v26, v19, v27);
  BadgeViewRibbonLayout.Metrics.captionCappingType.setter(v23);
  v28 = &v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueViewAlignment];
  v29 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueViewAlignment], v63, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v51 + 16))(v18, v28, v52, v29);
  BadgeViewRibbonLayout.Metrics.valueViewAlignment.setter(v18);
  BadgeViewRibbonLayout.Metrics.alignment.setter(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment]);
  v30 = &v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue];
  v31 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue], v62, 0, 0);
  v32 = v53;
  (*(void (**)(char *, char *, uint64_t, __n128))(v53 + 16))(v15, v30, v10, v31);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v12, enum case for BadgeLeadingValue.view(_:), v10);
  v33 = sub_10000E720(&qword_100822DE8, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeLeadingValue, (uint64_t)&protocol conformance descriptor for BadgeLeadingValue);
  LOBYTE(v30) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v12, v10, v33);
  v34 = *(void (**)(char *, uint64_t))(v32 + 8);
  v34(v12, v10);
  v34(v15, v10);
  BadgeViewRibbonLayout.Metrics.isLabelLeading.setter((v30 & 1) == 0);
  v35 = &v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_spacing];
  v36 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_spacing], v61, 0, 0);
  v37 = v54;
  (*(void (**)(char *, char *, uint64_t, __n128))(v55 + 16))(v54, v35, v56, v36);
  BadgeViewRibbonLayout.Metrics.spacingType.setter(v37);
  v38 = &v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgeType];
  v39 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgeType], v60, 0, 0);
  v40 = v57;
  (*(void (**)(char *, char *, uint64_t, __n128))(v58 + 16))(v57, v38, v59, v39);
  BadgeViewRibbonLayout.Metrics.badgeType.setter(v40);
  v42 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView];
  if (v42)
  {
    v43 = v42;
    v44 = ArtworkView.imageBaselineOffsetFromBottom.getter();
    v46 = v45;

    v41.n128_u64[0] = v44;
    if ((v46 & 1) != 0)
      v41.n128_f64[0] = 0.0;
  }
  else
  {
    v41.n128_u64[0] = 0;
  }
  BadgeViewRibbonLayout.Metrics.badgeValueBaselineOffset.setter(v41);
  if ((v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgePositionInRibbon + 8] & 1) == 0)
  {
    v47 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgePositionInRibbon];
    v48 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_overallBadgeCount];
    v49 = objc_msgSend(v2, "traitCollection");
    sub_10042D684(a1, v47, v48);

  }
}

uint64_t sub_10042C238()
{
  char *v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  _QWORD v34[5];
  _QWORD v35[5];
  objc_super v36;

  v27 = type metadata accessor for LayoutRect(0);
  v26 = *(_QWORD *)(v27 - 8);
  v1 = __chkstk_darwin(v27);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v1);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for BadgeViewRibbonLayout(0, v5);
  v24 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for BadgeView(0);
  v36.receiver = v0;
  v36.super_class = v10;
  objc_msgSendSuper2(&v36, "layoutSubviews");
  sub_10042BDC8((uint64_t)v7);
  v11 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel];
  v12 = type metadata accessor for DynamicTypeLabel(0);
  v35[3] = v12;
  v35[4] = &protocol witness table for UILabel;
  v35[0] = v11;
  v13 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView];
  v14 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v34[3] = v14;
  v34[4] = &protocol witness table for UIView;
  if (v13)
    v15 = v13;
  else
    v15 = *(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel];
  v34[0] = v15;
  v16 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel];
  if (v16)
  {
    *((_QWORD *)&v32 + 1) = v12;
    v33 = &protocol witness table for UILabel;
    *(_QWORD *)&v31 = v16;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  v17 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView];
  if (v17)
  {
    *((_QWORD *)&v29 + 1) = v14;
    v30 = &protocol witness table for UIView;
    *(_QWORD *)&v28 = v17;
  }
  else
  {
    v30 = 0;
    v29 = 0u;
    v28 = 0u;
  }
  v18 = v16;
  v19 = v17;
  v20 = v11;
  v21 = v13;
  BadgeViewRibbonLayout.init(metrics:headingLabel:captionView:valueLabel:valueView:)(v7, v35, v34, &v31, &v28);
  v22 = LayoutMarginsAware<>.layoutFrame.getter(v10);
  BadgeViewRibbonLayout.placeChildren(relativeTo:in:)(v0, v22);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v9, v25);
}

double sub_10042C4EC(__n128 a1, double a2)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  double v25;
  __int128 v27;
  __int128 v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  _QWORD v33[5];
  _QWORD v34[6];

  v4 = a1.n128_f64[0];
  v5 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, a1);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BadgeViewRibbonLayout(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10042BDC8((uint64_t)v8);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel);
  v14 = type metadata accessor for DynamicTypeLabel(0);
  v34[3] = v14;
  v34[4] = &protocol witness table for UILabel;
  v34[0] = v13;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView);
  v16 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v33[3] = v16;
  v33[4] = &protocol witness table for UIView;
  if (v15)
    v17 = v15;
  else
    v17 = *(id *)(v2 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel);
  v33[0] = v17;
  v18 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel);
  if (v18)
  {
    *((_QWORD *)&v31 + 1) = v14;
    v32 = &protocol witness table for UILabel;
    *(_QWORD *)&v30 = v18;
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  v19 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView);
  if (v19)
  {
    *((_QWORD *)&v28 + 1) = v16;
    v29 = &protocol witness table for UIView;
    *(_QWORD *)&v27 = v19;
  }
  else
  {
    v29 = 0;
    v28 = 0u;
    v27 = 0u;
  }
  v20 = v18;
  v21 = v19;
  v22 = v13;
  v23 = v15;
  BadgeViewRibbonLayout.init(metrics:headingLabel:captionView:valueLabel:valueView:)(v8, v34, v33, &v30, &v27);
  v24 = sub_10000E720(&qword_100822DF0, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeViewRibbonLayout, (uint64_t)&protocol conformance descriptor for BadgeViewRibbonLayout);
  v25 = dispatch thunk of Measurable.measurements(fitting:in:)(v2, v9, v24, v4, a2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v25;
}

void sub_10042C764(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for BadgeView(0);
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  v6 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment;
  if ((v5 & 1) != 0)
    v7 = 4;
  else
    v7 = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment] = v7;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel], "setTextAlignment:");
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v2[v6]);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v2[v6]);
  objc_msgSend(v2, "setNeedsLayout");
  sub_10042B8A4();
}

void sub_10042C938(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[21];

  v2 = type metadata accessor for BadgeLeadingValue(319);
  if (v4 <= 0x3F)
  {
    v16[0] = *(_QWORD *)(v2 - 8) + 64;
    v16[1] = &unk_100661A20;
    v16[2] = &unk_100661A38;
    v16[3] = &unk_100661A20;
    v16[4] = &unk_100661A20;
    v16[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v16[6] = &unk_100661A50;
    v5 = type metadata accessor for BadgeCaptionCappingType(319, v3);
    if (v6 <= 0x3F)
    {
      v16[7] = *(_QWORD *)(v5 - 8) + 64;
      v16[8] = &unk_100661A38;
      v16[9] = &unk_100661A38;
      v16[10] = &unk_100661A50;
      v7 = type metadata accessor for BadgeValueViewAlignment(319);
      if (v9 <= 0x3F)
      {
        v16[11] = *(_QWORD *)(v7 - 8) + 64;
        v10 = type metadata accessor for BadgeViewSpacing(319, v8);
        if (v11 <= 0x3F)
        {
          v16[12] = *(_QWORD *)(v10 - 8) + 64;
          sub_10019C5E8(319);
          if (v13 <= 0x3F)
          {
            v16[13] = *(_QWORD *)(v12 - 8) + 64;
            v14 = type metadata accessor for BadgeType(319);
            if (v15 <= 0x3F)
            {
              v16[14] = *(_QWORD *)(v14 - 8) + 64;
              v16[15] = &unk_100661A38;
              v16[16] = &unk_100661A68;
              v16[17] = (char *)&value witness table for Builtin.Int64 + 64;
              v16[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
              v16[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
              v16[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
              swift_updateClassMetadata2(a1, 256, 21, v16, a1 + 80);
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for FadeableDynamicTypeLabel(uint64_t a1)
{
  return sub_100019B28(a1, (uint64_t *)&unk_100822D90, (uint64_t)&nominal type descriptor for FadeableDynamicTypeLabel);
}

uint64_t sub_10042CAA0(uint64_t a1)
{
  _QWORD v2[7];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[3] = &unk_100661A50;
  v2[4] = &unk_100661A50;
  v2[5] = &unk_100661A38;
  v2[6] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 0, 7, v2, a1 + qword_100822D80);
}

void sub_10042CB14()
{
  char *v0;
  uint64_t v1;
  void *v2;
  BOOL v3;
  id v4;
  id v5;
  char v6;
  id v7;
  char v8;
  id v9;

  if (v0[qword_100822D68] == 1)
  {
    if (!*(_QWORD *)&v0[qword_100822D70])
    {
      v1 = *(_QWORD *)&v0[qword_100822D78];
      v2 = *(void **)&v0[qword_100822D48];
      if (v1 == -1)
      {
        v5 = v2;
        v7 = objc_msgSend(v0, "traitCollection");
        v8 = UITraitCollection.prefersRightToLeftLayouts.getter();

        v6 = v8 & 1;
        v4 = v5;
      }
      else
      {
        v3 = v1 == 1;
        v4 = v2;
        v5 = v4;
        v6 = v3;
      }
      v9 = sub_10047B7E4(v4, v6);

      sub_10042DE54(v9);
    }
  }
  else
  {
    sub_10042DE54(0);
  }
}

id sub_10042CC1C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  v1 = v8.receiver;
  v2 = objc_msgSendSuper2(&v8, "text");
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    return v6;
  }
  else
  {

    return 0;
  }
}

void sub_10042CCBC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  char *v9;
  uint64_t v10;
  char Attributed;
  char v12;
  uint64_t v13;
  void *v14;
  double Width;
  uint64_t v16;
  objc_super v17;
  CGRect v18;

  if (a3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v6 = v5;
    v7 = a1;
    swift_bridgeObjectRetain(v6);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v9 = a1;
    v8 = 0;
    v4 = 0;
    v6 = 0;
  }
  v17.receiver = a1;
  v17.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  objc_msgSendSuper2(&v17, "setText:", v8);

  v10 = type metadata accessor for LanguageAwareString(0);
  Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter(v10);
  v12 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
  v13 = LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:keepStatisticsOnLanguageComponents:)(v4, v6, 0, Attributed & 1, v12 & 1);
  if (v13)
  {
    v14 = (void *)v13;
    objc_msgSend(a1, "bounds");
    Width = CGRectGetWidth(v18);
    v16 = dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)(0, 1, objc_msgSend(a1, "lineBreakMode"), 0, Width);

  }
  else
  {
    v16 = -1;
  }
  *(_QWORD *)&a1[qword_100822D78] = v16;

}

id sub_10042CE00(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  return objc_msgSendSuper2(&v2, "attributedText");
}

void sub_10042CE48(void *a1, uint64_t a2, void *a3)
{
  char *v4;
  id v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  double Width;
  uint64_t v13;
  objc_super v14;
  CGRect v15;

  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  v4 = (char *)v14.receiver;
  v5 = a3;
  objc_msgSendSuper2(&v14, "setAttributedText:", v5);
  if (v5)
  {
    v6 = (objc_class *)type metadata accessor for LanguageAwareString(0);
    v7 = v5;
    v9 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter(v7, v8);
    v10 = objc_allocWithZone(v6);
    v11 = (void *)LanguageAwareString.init(_:baseParagraphStyle:keepStatisticsOnLanguageComponents:)(v7, 0, v9 & 1);
    objc_msgSend(v4, "bounds", v14.receiver, v14.super_class);
    Width = CGRectGetWidth(v15);
    v13 = dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)(0, 1, objc_msgSend(v4, "lineBreakMode"), 0, Width);

  }
  else
  {
    v13 = -1;
  }
  *(_QWORD *)&v4[qword_100822D78] = v13;

}

void sub_10042CF64()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  BOOL v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  objc_msgSendSuper2(&v13, "layoutSubviews");
  if (v0[qword_100822D60] == 1)
  {
    objc_msgSend(v0, "frame");
    objc_msgSend(v0, "sizeThatFits:", v1, v2);
    v4 = v3;
    objc_msgSend(v0, "frame");
    v5 = floor(v4 - CGRectGetWidth(v14)) > COERCE_DOUBLE(1);
    v6 = qword_100822D68;
    v0[qword_100822D68] = v5;
    sub_10042CB14();
    v7 = *(void **)&v0[qword_100822D70];
    if (v7)
    {
      if (v0[v6] == 1)
      {
        v8 = v7;
        objc_msgSend(v0, "frame");
        CGRectGetWidth(v15);
        objc_msgSend(v0, "bounds");
        CGRectGetMaxX(v16);
        objc_msgSend(v0, "bounds");
        CGRectGetMinY(v17);
        objc_msgSend(v0, "bounds");
        CGRectGetHeight(v18);
        v9 = *(_QWORD *)&v0[qword_100822D78];
        v10 = v8;
        objc_msgSend(v0, "bounds");
        if (v9 == -1)
          v12 = CGRect.withLayoutDirection(in:relativeTo:)(v0, v11);
        else
          CGRect.withLayoutDirection(_:relativeTo:)(v9, v11);
        objc_msgSend(v10, "setFrame:", v12);

      }
    }
  }
}

void sub_10042D13C(void *a1)
{
  id v1;

  v1 = a1;
  sub_10042CF64();

}

void sub_10042D170()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (*(_QWORD *)&v0[qword_100822D70])
  {
    v1 = *(_QWORD *)&v0[qword_100822D78];
    v2 = *(void **)&v0[qword_100822D48];
    if (v1 == -1)
    {
      v5 = v2;
      v6 = objc_msgSend(v0, "traitCollection");
      v3 = UITraitCollection.prefersRightToLeftLayouts.getter();

    }
    else
    {
      v3 = v1 == 1;
      v4 = v2;
    }
    v7 = sub_10047B7E4(v2, v3 & 1);

    sub_10042DE54(v7);
  }
}

void sub_10042D244(void *a1)
{
  id v1;

  v1 = a1;
  sub_10042D170();

}

uint64_t sub_10042D278(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  char v16;
  id v17;

  v16 = a4 & 1;
  v17 = objc_allocWithZone(v8);
  return sub_10042D300(a1, a2, a3, v16, a5, a6, a7, a8);
}

uint64_t sub_10042D300(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[4];
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a7;
  v29 = a8;
  v27 = a5;
  v25 = a2;
  v26 = a3;
  v24 = a4 & 1;
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v15);
  v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = qword_100822D48;
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v19 = v8;
  *(_QWORD *)&v8[v18] = static UIColor.defaultBackground.getter(v19, v20);
  *(_QWORD *)&v19[qword_100822D50] = 0x3FD0000000000000;
  *(_QWORD *)&v19[qword_100822D58] = 0x4034000000000000;
  v19[qword_100822D60] = 1;
  v19[qword_100822D68] = 0;
  *(_QWORD *)&v19[qword_100822D70] = 0;
  *(_QWORD *)&v19[qword_100822D78] = -1;

  sub_100018ADC(a1, (uint64_t)v17, (uint64_t *)&unk_100808F50);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  v21 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, v25, v26, v24, v27, v14, v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a6, v11);
  sub_100010F2C(a1, (uint64_t *)&unk_100808F50);
  return v21;
}

void sub_10042D4D0()
{
  uint64_t v0;

}

id sub_10042D4FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FadeableDynamicTypeLabel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10042D530(uint64_t a1)
{

}

uint64_t sub_10042D568()
{
  return type metadata accessor for FadeableDynamicTypeLabel(0);
}

uint64_t storeEnumTagSinglePayload for LineBreakModeTruncationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10042D5BC + 4 * byte_1006619F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10042D5F0 + 4 * byte_1006619F0[v4]))();
}

uint64_t sub_10042D5F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042D5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10042D600);
  return result;
}

uint64_t sub_10042D60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10042D614);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10042D618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042D620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineBreakModeTruncationStyle()
{
  return &type metadata for LineBreakModeTruncationStyle;
}

unint64_t sub_10042D640()
{
  unint64_t result;

  result = qword_100822DE0;
  if (!qword_100822DE0)
  {
    result = swift_getWitnessTable(&unk_100661B00, &type metadata for LineBreakModeTruncationStyle);
    atomic_store(result, (unint64_t *)&qword_100822DE0);
  }
  return result;
}

uint64_t sub_10042D684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  _BYTE v15[32];

  result = UITraitCollection.prefersRightToLeftLayouts.getter();
  v6 = result;
  if (!a2 && (result & 1) == 0)
    goto LABEL_5;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (((a3 - 1 == a2) & result) == 1)
  {
LABEL_5:
    v7 = (void (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.accessibleBadgeInsets.modify(v15);
    *(_QWORD *)(v8 + 8) = 0;
    v7(v15, 0);
    v9 = (uint64_t (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.regularBadgeInsets.modify(v15);
    *(_QWORD *)(v10 + 8) = 0;
    result = v9(v15, 0);
  }
  if (a2 || ((v6 ^ 1) & 1) != 0)
  {
    if (!__OFSUB__(a3, 1))
    {
      if ((a3 - 1 != a2) | v6 & 1)
        return result;
      goto LABEL_10;
    }
LABEL_13:
    __break(1u);
    return result;
  }
LABEL_10:
  v11 = (void (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.accessibleBadgeInsets.modify(v15);
  *(_QWORD *)(v12 + 24) = 0;
  v11(v15, 0);
  v13 = (uint64_t (*)(_BYTE *, _QWORD))BadgeViewRibbonLayout.Metrics.regularBadgeInsets.modify(v15);
  *(_QWORD *)(v14 + 24) = 0;
  return v13(v15, 0);
}

id sub_10042D794(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v8, "setNumberOfLines:", 1);
    objc_msgSend(v8, "setLineBreakMode:", 2);
    objc_msgSend(v8, "setTextAlignment:", 1);
    v9 = v8;
    v10 = objc_msgSend(v1, "tintColor");
    objc_msgSend(v9, "setTextColor:", v10);

    objc_msgSend(v1, "addSubview:", v9);
    sub_10042B8A4();

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_10042D89C(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "tintColor");
    objc_msgSend(v8, "setTintColor:", v9);

    objc_msgSend(v1, "addSubview:", v8);
  }
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_10042D95C(__n128 a1)
{
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *ObjCClassFromMetadata;
  uint64_t v29;

  v2 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue];
  v3 = enum case for BadgeLeadingValue.infer(_:);
  v4 = type metadata accessor for BadgeLeadingValue(0, a1);
  v5.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  v6 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_caption];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView] = 0;
  v7 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_heading];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment] = 1;
  v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_isTruncatable] = 1;
  v9 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType];
  v10 = enum case for BadgeCaptionCappingType.none(_:);
  v11 = type metadata accessor for BadgeCaptionCappingType(0, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueView] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_requiresRemainingWidth] = 0;
  v12 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueViewAlignment];
  v13 = enum case for BadgeValueViewAlignment.baseline(_:);
  v14 = type metadata accessor for BadgeValueViewAlignment(0);
  v15.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v16 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_spacing];
  v17 = enum case for BadgeViewSpacing.standard(_:);
  v18 = type metadata accessor for BadgeViewSpacing(0, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_action];
  v20 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgeType];
  v22 = enum case for BadgeType.custom(_:);
  v23 = type metadata accessor for BadgeType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView] = 0;
  v24 = &v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgePositionInRibbon];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_overallBadgeCount] = 0;
  v25 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_tapGestureRecognizer;
  *(_QWORD *)&v1[v25] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v26 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel;
  v27 = type metadata accessor for FadeableDynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v27);
  *(_QWORD *)&v1[v26] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v29 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel;
  *(_QWORD *)&v1[v29] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/BadgeView.swift", 36, 2, 228, 0);
  __break(1u);
}

uint64_t sub_10042DC1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  _QWORD v21[4];
  uint64_t v22;
  char v23[24];

  v1 = v0;
  v2 = type metadata accessor for ActionRunner.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_100819850);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_10081D490);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_action];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_action], v23, 0, 0);
  sub_100018ADC(v13, (uint64_t)v8, &qword_100819850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v14 = &qword_100819850;
    v15 = v8;
    return sub_100010F2C((uint64_t)v15, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  if (UIResponder.nearestActionRunner.getter())
  {
    ObjectGraphPair.value.getter(&v22, v9);
    v16 = v22;
    v21[3] = type metadata accessor for BadgeView(0);
    v21[0] = v1;
    v17 = v1;
    v18 = ObjectGraphPair.objectGraph.getter(v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionRunner.Origin.userInitiated(_:), v2);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v16, v21, v5, v18);
    swift_release();
    swift_release();
    v19 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v19);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v14 = &qword_100808F20;
    v15 = (char *)v21;
    return sub_100010F2C((uint64_t)v15, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_10042DE54(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v3 = qword_100822D70;
  v4 = *(void **)&v1[qword_100822D70];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperlayer");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "setMasksToBounds:", 0);

  v8 = *(void **)&v1[v3];
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v1, "layer");
    objc_msgSend(v10, "addSublayer:", v9);

  }
}

void sub_10042DF38(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_avatarShowcase;
  v3 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_avatarShowcase];
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_avatarShowcase] = a1;
  v7 = a1;
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = *(void **)&v1[v2];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v1, "contentView");
    objc_msgSend(v6, "addSubview:", v5);

    v3 = v5;
    v7 = v6;
  }

}

char *sub_10042DFE4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  objc_super v41;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for CornerStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v4[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_itemLayoutContext];
  v19 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView;
  v21 = objc_allocWithZone((Class)type metadata accessor for VideoCardView(0));
  v22 = v5;
  *(_QWORD *)&v5[v20] = objc_msgSend(v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_avatarShowcase] = 0;
  v23 = OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_shadowView;
  v24 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v22[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");

  v41.receiver = v22;
  v41.super_class = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v41, "initWithFrame:", a1, a2, a3, a4);
  v26 = objc_msgSend(v25, "contentView");
  objc_msgSend(v26, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v27 = objc_msgSend(v25, "contentView");
  objc_msgSend(v27, "setClipsToBounds:", 0);

  v28 = OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_shadowView;
  if (qword_100804AC0 != -1)
    swift_once(&qword_100804AC0, sub_100141304);
  v29 = type metadata accessor for Shadow(0);
  v30 = sub_10000EFC4(v29, (uint64_t)qword_1008654C0);
  v31 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v17, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v29);
  dispatch thunk of ShadowView.shadow.setter(v17);
  if (qword_1008047D0 != -1)
    swift_once(&qword_1008047D0, sub_1000A7870);
  v32 = *(double *)&qword_100864CB0;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for CornerStyle.continuous(_:), v11);
  dispatch thunk of ShadowView.setCorner(radius:style:)(v14, v32);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v33 = *(void **)&v25[v28];
  v34 = (void *)objc_opt_self(UIColor);
  v35 = v33;
  v36 = objc_msgSend(v34, "secondarySystemBackgroundColor");
  objc_msgSend(v35, "setBackgroundColor:", v36);

  v37 = objc_msgSend(v25, "contentView");
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v25[v28]);

  v38 = objc_msgSend(v25, "contentView");
  v39 = *(id *)&v25[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView];
  objc_msgSend(v38, "addSubview:", v39);

  return v25;
}

uint64_t sub_10042E3F8(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_1000951BC();
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

void sub_10042E484()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView];
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
  objc_msgSend(v1, "layoutIfNeeded");
  v11 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_shadowView];
  v12 = objc_msgSend(v0, "contentView");
  objc_msgSend(v12, "bounds");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  objc_msgSend(v11, "setFrame:", v14, v16, v18, v20);
  sub_10000E720(&qword_10081A5C8, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100656A38);
  AvatarShowcaseDisplaying.placeAvatarShowcase()();
}

uint64_t sub_10042E6D4()
{
  return type metadata accessor for VideoCardCollectionViewCell(0);
}

uint64_t type metadata accessor for VideoCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100822E20;
  if (!qword_100822E20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VideoCardCollectionViewCell);
  return result;
}

void sub_10042E718(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_10042E79C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView)+ OBJC_IVAR____TtC20ProductPageExtension13VideoCardView_videoView);
}

void sub_10042E7BC(void *a1)
{
  sub_1000A7AD0();

}

void (*sub_10042E7F4(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView);
  a1[1] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension13VideoCardView_videoView);
  return sub_1000A71E0;
}

double sub_10042E844(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t ObjectType;

  v8 = type metadata accessor for VideoCardView(0);
  ObjectType = swift_getObjectType();
  return sub_1000A7880(a3, a4, a1, a2, v8, ObjectType);
}

uint64_t sub_10042E8A8()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E720(&qword_100822E48, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100661C58);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_10042E8F0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_100822E48, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100661C58);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_10042E950(_QWORD *a1))(_QWORD *a1)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E720(&qword_100822E48, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100661C58);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001EB20;
}

uint64_t sub_10042E9C8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1000A7CF4(*(_QWORD *)(*v1 + OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView)+ OBJC_IVAR____TtC20ProductPageExtension13VideoCardView_metrics, a1);
}

uint64_t sub_10042E9F4()
{
  return sub_10000E720(&qword_100822E30, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100661B88);
}

uint64_t sub_10042EA20()
{
  return sub_10000E720(&qword_100822E38, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100661BB8);
}

uint64_t sub_10042EA4C()
{
  return sub_10000E720(&qword_100822E40, type metadata accessor for VideoCardCollectionViewCell, (uint64_t)&unk_100661BE8);
}

void sub_10042EA78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_itemLayoutContext];
  v2 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_videoCardView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoCardView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_avatarShowcase] = 0;
  v4 = OBJC_IVAR____TtC20ProductPageExtension27VideoCardCollectionViewCell_shadowView;
  v5 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/VideoCardCollectionViewCell.swift", 54, 2, 34, 0);
  __break(1u);
}

id sub_10042EB70(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  objc_class *v12;
  id v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_presenter] = a1;
  v7 = objc_allocWithZone((Class)UIPickerView);
  v8 = v1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_countryPicker] = objc_msgSend(v7, "init", swift_retain(a1).n128_f64[0]);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIPickerView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker] = v9;
  type metadata accessor for DynamicTypeButton(0);
  if (qword_100806548 != -1)
    swift_once(&qword_100806548, sub_1004C94D4);
  v10 = sub_10000EFC4(v3, (uint64_t)qword_10086A0B0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11(v6, v10, v3);
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_submitButton] = DynamicTypeButton.__allocating_init(useCase:)(v6);
  v11(v6, v10, v3);
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_backToUSButton] = DynamicTypeButton.__allocating_init(useCase:)(v6);

  v12 = (objc_class *)type metadata accessor for DebugStorefrontPickerViewController();
  v17.receiver = v8;
  v17.super_class = v12;
  v13 = objc_msgSendSuper2(&v17, "initWithNibName:bundle:", 0, 0);
  v14 = sub_10042FC40(&qword_100822F70, (uint64_t)&unk_100661D54);
  v15 = v13;
  dispatch thunk of StorefrontPickerPagePresenter.view.setter(v13, v14);

  swift_release();
  return v15;
}

id sub_10042EDA0()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  objc_super v30;

  v1 = v0;
  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for DebugStorefrontPickerViewController();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = result;
  objc_msgSend(v1, "pageMarginInsets");
  objc_msgSend(v3, "setLayoutMargins:");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v6);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = result;
  v8 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_countryPicker];
  objc_msgSend(result, "addSubview:", v8);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = result;
  v10 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker];
  objc_msgSend(result, "addSubview:", v10);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = result;
  v12 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_submitButton];
  objc_msgSend(result, "addSubview:", v12);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = result;
  v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_backToUSButton];
  objc_msgSend(result, "addSubview:", v14);

  objc_msgSend(v8, "setDelegate:", v1);
  objc_msgSend(v8, "setDataSource:", v1);
  objc_msgSend(v10, "setDelegate:", v1);
  v15 = objc_msgSend(v8, "selectRow:inComponent:animated:", dispatch thunk of StorefrontPickerPagePresenter.selectedCountryIndex.getter(objc_msgSend(v10, "setDataSource:", v1)), 0, 0);
  objc_msgSend(v10, "selectRow:inComponent:animated:", dispatch thunk of StorefrontPickerPagePresenter.selectedLanguageIndex.getter(v15), 0, 0);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setTitle:forState:", v16, 0);

  v17 = objc_msgSend(v12, "titleLabel");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setTextAlignment:", 1);

  }
  result = objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_20;
  v19 = result;
  v20 = objc_msgSend(result, "tintColor");

  objc_msgSend(v12, "setBackgroundColor:", v20);
  v21 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v12, "setTitleColor:forState:", v21, 0);

  v22 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v12, "setTitleColor:forState:", v22, 2);

  objc_msgSend(v12, "setTitleEdgeInsets:", 5.0, 10.0, 5.0, 10.0);
  objc_msgSend(v12, "addTarget:action:forControlEvents:", v1, "setStorefront", 64);
  objc_msgSend(v12, "_setCornerRadius:", 10.0);
  sub_10042F764();
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setTitle:forState:", v23, 0);

  v24 = objc_msgSend(v14, "titleLabel");
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "setTextAlignment:", 1);

  }
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend(result, "tintColor");

    objc_msgSend(v14, "setBackgroundColor:", v27);
    v28 = objc_msgSend(v5, "whiteColor");
    objc_msgSend(v14, "setTitleColor:forState:", v28, 0);

    v29 = objc_msgSend(v5, "whiteColor");
    objc_msgSend(v14, "setTitleColor:forState:", v29, 2);

    objc_msgSend(v14, "setTitleEdgeInsets:", 5.0, 10.0, 5.0, 10.0);
    objc_msgSend(v14, "addTarget:action:forControlEvents:", v1, "setStorefrontToUS", 64);
    return objc_msgSend(v14, "_setCornerRadius:", 10.0);
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_10042F35C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double MinX;
  CGFloat v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double MaxY;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  double Width;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  double v39;
  double v40;
  objc_super v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for DebugStorefrontPickerViewController();
  objc_msgSendSuper2(&v41, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_countryPicker];
    v5 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v4, "sizeThatFits:", v6, v7);
    v9 = v8;
    v42.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    MinX = CGRectGetMinX(v42);
    v43.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v11 = CGRectGetMinY(v43) + 20.0;
    v44.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v4, "setFrame:", MinX, v11, CGRectGetWidth(v44), v9);
    v12 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker];
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v12, "sizeThatFits:", v13, v14);
    v16 = v15;
    v45.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v17 = CGRectGetMinX(v45);
    objc_msgSend(v4, "frame");
    MaxY = CGRectGetMaxY(v46);
    v47.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v12, "setFrame:", v17, MaxY, CGRectGetWidth(v47), v16);
    v19 = *(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_submitButton];
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v19, "measurementsWithFitting:in:", v3, v20, v21);
    v23 = v22;

    v48.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v24 = CGRectGetMinX(v48);
    objc_msgSend(v12, "frame");
    v25 = CGRectGetMaxY(v49) + 20.0;
    v50.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    Width = CGRectGetWidth(v50);
    objc_msgSend(v19, "titleEdgeInsets");
    v28 = v23 + v27;
    objc_msgSend(v19, "titleEdgeInsets");
    objc_msgSend(v19, "setFrame:", v24, v25, Width, v28 + v29);
    v30 = *(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_backToUSButton];
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v30, "measurementsWithFitting:in:", v3, v31, v32);
    v34 = v33;

    v51.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v35 = CGRectGetMinX(v51);
    objc_msgSend(v19, "frame");
    v36 = CGRectGetMaxY(v52) + 10.0;
    v53.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v37 = CGRectGetWidth(v53);
    objc_msgSend(v30, "titleEdgeInsets");
    v39 = v34 + v38;
    objc_msgSend(v30, "titleEdgeInsets");
    objc_msgSend(v30, "setFrame:", v35, v36, v37, v39 + v40);

  }
}

void sub_10042F764()
{
  void *v0;
  void *v1;
  char updated;
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id (*v15)();
  uint64_t v16;

  v1 = v0;
  updated = dispatch thunk of StorefrontPickerPagePresenter.canUpdateStorefront.getter();
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_100753D90, 25, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v5 = updated & 1;
  *(_BYTE *)(v4 + 24) = updated & 1;
  v15 = sub_10042FCA0;
  v16 = v4;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000924A0;
  v14 = &unk_100753DA8;
  v6 = _Block_copy(&v11);
  v7 = v1;
  swift_release();
  v8 = swift_allocObject(&unk_100753DE0, 25, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_BYTE *)(v8 + 24) = v5;
  v15 = sub_10042FCEC;
  v16 = v8;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10004A774;
  v14 = &unk_100753DF8;
  v9 = _Block_copy(&v11);
  v10 = v7;
  swift_release();
  objc_msgSend(v3, "animateWithDuration:animations:completion:", v6, v9, 0.2);
  _Block_release(v9);
  _Block_release(v6);
}

id sub_10042FAE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugStorefrontPickerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugStorefrontPickerViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension35DebugStorefrontPickerViewController);
}

uint64_t sub_10042FB9C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker);
  objc_msgSend(v1, "reloadAllComponents");
  return dispatch thunk of StorefrontPickerPagePresenter.didSelectLanguage(at:)(objc_msgSend(v1, "selectedRowInComponent:", 0));
}

uint64_t sub_10042FBF8()
{
  return sub_10042FC40(&qword_100822F60, (uint64_t)&unk_100661CF4);
}

uint64_t sub_10042FC1C()
{
  return sub_10042FC40(&qword_100822F68, (uint64_t)&unk_100661D1C);
}

uint64_t sub_10042FC40(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugStorefrontPickerViewController();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10042FC7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_10042FCA0()
{
  uint64_t v0;
  double v1;

  v1 = 0.4;
  if (*(_BYTE *)(v0 + 24))
    v1 = 1.0;
  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_submitButton), "setAlpha:", v1);
}

uint64_t sub_10042FCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10042FCE4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10042FCEC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_submitButton), "setEnabled:", *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_10042FD0C(uint64_t a1)
{
  uint64_t v1;

  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_countryPicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.numberOfCountries.getter();
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.numberOfLanguages.getter();
  return 0;
}

uint64_t sub_10042FDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_countryPicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.country(at:)(a2);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.language(at:for:)(a2, 0, 0);
  return 0;
}

uint64_t sub_10042FE64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_countryPicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.didSelectCountry(at:)(a2);
  result = static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension35DebugStorefrontPickerViewController_languagePicker));
  if ((result & 1) != 0)
    return dispatch thunk of StorefrontPickerPagePresenter.didSelectLanguage(at:)(a2);
  return result;
}

void sub_1004300EC(void *a1)
{
  char *v1;
  void *v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v16[24];

  v2 = v1;
  v4 = (void **)&v1[OBJC_IVAR____TtC20ProductPageExtension22UberCollectionViewCell_uberView];
  swift_beginAccess(v4, v16, 1, 0);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;
  v7 = v6;
  if (a1)
  {
    v7 = v6;
    v8 = objc_msgSend(v2, "contentView");
    objc_msgSend(v8, "addSubview:", v7);

    objc_msgSend(v2, "setNeedsLayout");
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_100753E98, 24, 7);
    *(_QWORD *)(v10 + 16) = v2;
    v11 = swift_allocObject(&unk_100753EC0, 32, 7);
    *(_QWORD *)(v11 + 16) = sub_100430674;
    *(_QWORD *)(v11 + 24) = v10;
    aBlock[4] = sub_100036D9C;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100184A1C;
    aBlock[3] = &unk_100753ED8;
    v12 = _Block_copy(aBlock);
    v13 = v2;
    swift_retain(v11);
    objc_msgSend(v9, "performWithoutAnimation:", v12, swift_release().n128_f64[0]);

    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 105, 44, 44, 1);

    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  if (v5)
  {
    objc_msgSend(v5, "removeFromSuperview");

  }
}

void sub_1004302D4()
{
  char *v0;
  id *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  _BYTE v12[24];
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v1 = (id *)&v0[OBJC_IVAR____TtC20ProductPageExtension22UberCollectionViewCell_uberView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension22UberCollectionViewCell_uberView], v12, 0, 0);
  if (*v1)
  {
    v2 = *v1;
    v3 = objc_msgSend(v0, "contentView");
    objc_msgSend(v3, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  }
}

void sub_1004303E4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  char *v8;
  double v9;
  char v10[24];
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "applyLayoutAttributes:", a1);
  v3 = type metadata accessor for BaseCollectionViewLayoutAttributes();
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = v4;
    v6 = &v1[OBJC_IVAR____TtC20ProductPageExtension22UberCollectionViewCell_uberView];
    swift_beginAccess(v6, v10, 0, 0);
    if (*(_QWORD *)v6)
    {
      v7 = *(double *)(v5 + OBJC_IVAR____TtC20ProductPageExtension34BaseCollectionViewLayoutAttributes_parallaxY);
      v8 = *(char **)(*(_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR____TtC20ProductPageExtension14UberHeaderView_contentView)
                    + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer);
      v9 = *(double *)&v8[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_parallaxY];
      *(double *)&v8[OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_parallaxY] = v7;
      if (v7 != v9)
        objc_msgSend(v8, "setNeedsLayout");
    }
  }
}

uint64_t sub_100430548()
{
  return type metadata accessor for UberCollectionViewCell(0);
}

uint64_t type metadata accessor for UberCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100822FA0;
  if (!qword_100822FA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UberCollectionViewCell);
  return result;
}

void sub_10043058C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void *sub_100430600()
{
  _QWORD *v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(*v0 + OBJC_IVAR____TtC20ProductPageExtension22UberCollectionViewCell_uberView);
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

uint64_t sub_100430650()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100430674()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "layoutIfNeeded");
}

uint64_t sub_100430684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100430694(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004306A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004306AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  __n128 v52;
  uint64_t (*v53)(char *, _QWORD, uint64_t, __n128);
  uint64_t v54;
  char *v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  id v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  __n128 v83;
  uint64_t (*v84)(char *, uint64_t);
  uint64_t v85;
  __n128 v86;
  unsigned int (*v87)(char *, uint64_t);
  unsigned int v88;
  uint64_t (*v89)(char *, uint64_t);
  char *v90;
  uint64_t v91;
  unsigned int v92;
  char *v93;
  unsigned int v94;
  uint64_t (*v95)(char *, uint64_t);
  void (*v96)(char *, _QWORD, uint64_t);
  char *v97;
  uint64_t (*v98)(char *, uint64_t);
  char *v99;
  __n128 v100;
  __n128 v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t);
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  __n128 v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  __n128 v118;
  void (*v119)(char *, uint64_t, __n128);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(char *, uint64_t);
  char *v130;
  __n128 v131;
  char *v132;
  __n128 v133;
  __n128 v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void *v140;
  char *v141;
  uint64_t v142;
  void *v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  void *v149;
  char *v150;
  void *v151;
  uint64_t v152;
  void *v153;
  id v154;
  uint64_t v155;
  id v156;
  Swift::String v157;
  void *object;
  uint64_t v159;
  uint64_t v160;
  uint64_t result;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  _QWORD *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(char *, uint64_t);
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _OWORD v196[2];
  _OWORD v197[2];

  v7 = v6;
  v178 = a5;
  v184 = a4;
  v183 = a3;
  v182 = a2;
  v10 = type metadata accessor for AutomationSemantics(0);
  v187 = *(_QWORD *)(v10 - 8);
  v188 = v10;
  __chkstk_darwin(v10);
  v186 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100819850);
  v13 = __chkstk_darwin(v12);
  v179 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for BadgeViewSpacing(0, v13);
  v175 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v173 = (char **)((char *)&v162 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v174 = (char *)&v162 - v17;
  v18 = type metadata accessor for BadgeType(0);
  v19 = *(_QWORD *)(v18 - 8);
  v194 = v18;
  v195 = v19;
  __chkstk_darwin(v18);
  v180 = (char *)&v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v177 = (char *)&v162 - v22;
  __chkstk_darwin(v23);
  v191 = (char *)&v162 - v24;
  __chkstk_darwin(v25);
  v190 = (char *)&v162 - v26;
  __chkstk_darwin(v27);
  v172 = (char *)&v162 - v28;
  __chkstk_darwin(v29);
  v168 = (char *)&v162 - v30;
  v171 = type metadata accessor for BadgeValueViewAlignment(0);
  v189 = *(uint64_t (**)(char *, uint64_t))(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v162 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v170 = (char *)&v162 - v33;
  v34 = sub_10000DAF8(&qword_10081B9E0);
  v35 = __chkstk_darwin(v34);
  v162 = (char *)&v162 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for BadgeLeadingValue(0, v35);
  v37 = *(_QWORD *)(v181 - 8);
  v38 = __chkstk_darwin(v181);
  v40 = (char *)&v162 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for BadgeCaptionCappingType(0, v38);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v166 = (char *)&v162 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v162 - v45;
  v47 = type metadata accessor for ArtworkLoader(0);
  v163 = a6;
  v48 = *(_QWORD *)(a6 + qword_10086B3B8);
  if (v48)
  {
    swift_retain(*(_QWORD *)(a6 + qword_10086B3B8));
    v165 = sub_100432A9C();
    v164 = v49;
    swift_retain(v48);
    sub_100432FC4(a1, v48);
    v51 = v50;
    v185 = v48;
    v52 = swift_release();
    v167 = v42;
    v53 = *(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v42 + 104);
    v192 = v46;
    v193 = v41;
    v54 = v53(v46, enum case for BadgeCaptionCappingType.none(_:), v41, v52);
    Badge.leadingValue.getter(v54);
    v55 = &v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue];
    v56 = swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_leadingValue], v197, 33, 0);
    v57 = v55;
    v58 = v181;
    (*(void (**)(char *, char *, uint64_t, __n128))(v37 + 24))(v57, v40, v181, v56);
    objc_msgSend(v7, "setNeedsLayout", swift_endAccess(v197).n128_f64[0]);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v58);
    v59 = (uint64_t *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText];
    v60 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueText + 8];
    v61 = v164;
    *v59 = v165;
    v59[1] = v61;
    swift_bridgeObjectRelease(v60);
    sub_10042A468();
    v62 = v51;
    sub_10042D89C(v51);

    v64 = Badge.heading.getter(v63);
    v67 = v64;
    v181 = (uint64_t)v62;
    if (v65)
    {
      *(_QWORD *)&v197[0] = v64;
      *((_QWORD *)&v197[0] + 1) = v65;
      v68 = (uint64_t)v162;
      static Locale.storefront.getter(v66);
      v69 = type metadata accessor for Locale(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1, v69);
      v70 = sub_1000FCE08();
      v67 = StringProtocol.uppercased(with:)(v68, &type metadata for String, v70);
      v72 = v71;
      sub_100010F2C(v68, &qword_10081B9E0);
      swift_bridgeObjectRelease(*((_QWORD *)&v197[0] + 1));
    }
    else
    {
      v72 = 0;
    }
    v73 = v194;
    v74 = v168;
    v75 = v166;
    sub_10042A378(v67, v72);
    v76 = objc_msgSend(v7, "traitCollection");
    v77 = UITraitCollection.prefersAccessibilityLayouts.getter(v76);

    if ((v77 & 1) != 0)
      v78 = 4;
    else
      v78 = 1;
    v79 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment;
    *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_alignment] = v78;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueLabel], "setTextAlignment:");
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v7[v79]);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v7[v79]);
    objc_msgSend(v7, "setNeedsLayout");
    v80 = v167;
    v81 = v193;
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v75, v192, v193);
    v82 = &v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType];
    v83 = swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionCappingType], v197, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v80 + 24))(v82, v75, v81, v83);
    objc_msgSend(v7, "setNeedsLayout", swift_endAccess(v197).n128_f64[0]);
    v84 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
    v85 = v84(v75, v81);
    v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_isTruncatable] = dispatch thunk of Badge.isTruncatable.getter(v85) & 1;
    objc_msgSend(v7, "setNeedsLayout");
    Badge.type.getter(v86);
    v87 = *(unsigned int (**)(char *, uint64_t))(v195 + 88);
    v88 = v87(v74, v73);
    if (v88 == enum case for BadgeType.contentRating(_:))
    {
      v89 = v189;
      v90 = v169;
      v91 = v171;
      (*((void (**)(char *, _QWORD, uint64_t))v189 + 13))(v169, enum case for BadgeValueViewAlignment.center(_:), v171);
      v92 = enum case for BadgeType.chartPosition(_:);
      v93 = v172;
    }
    else
    {
      v94 = v88;
      v92 = enum case for BadgeType.chartPosition(_:);
      v93 = v172;
      v91 = v171;
      v90 = v169;
      if (v88 == enum case for BadgeType.chartPosition(_:))
      {
        v95 = v189;
        (*((void (**)(char *, _QWORD, uint64_t))v189 + 13))(v169, enum case for BadgeValueViewAlignment.topOfValueLabel(_:), v171);
        v92 = v94;
        v89 = v95;
      }
      else
      {
        v96 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v189 + 13);
        if (v88 == enum case for BadgeType.paragraph(_:))
        {
          v96(v169, enum case for BadgeValueViewAlignment.topOfView(_:), v171);
        }
        else
        {
          v96(v169, enum case for BadgeValueViewAlignment.baseline(_:), v171);
          (*(void (**)(char *, uint64_t))(v195 + 8))(v74, v194);
        }
        v89 = v189;
      }
    }
    v189 = v84;
    v97 = v170;
    (*((void (**)(char *, char *, uint64_t))v89 + 4))(v170, v90, v91);
    v98 = v89;
    v99 = &v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueViewAlignment];
    v100 = swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_valueViewAlignment], v197, 33, 0);
    (*((void (**)(char *, char *, uint64_t, __n128))v98 + 3))(v99, v97, v91, v100);
    objc_msgSend(v7, "setNeedsLayout", swift_endAccess(v197).n128_f64[0]);
    v101.n128_f64[0] = (*((double (**)(char *, uint64_t))v98 + 1))(v97, v91);
    Badge.type.getter(v101);
    v102 = v194;
    v103 = v87;
    if (v87(v93, v194) == v92)
    {
      v104 = v173;
      *v173 = 0;
      v105 = v175;
      v106 = v176;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v175 + 104))(v104, enum case for BadgeViewSpacing.spacing(_:), v176);
      v107 = v102;
      v108 = v195;
    }
    else
    {
      v109 = v93;
      v105 = v175;
      v104 = v173;
      v106 = v176;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v175 + 104))(v173, enum case for BadgeViewSpacing.standard(_:), v176);
      v108 = v195;
      (*(void (**)(char *, uint64_t))(v195 + 8))(v109, v102);
      v107 = v102;
    }
    v110 = v174;
    (*(void (**)(char *, _QWORD *, uint64_t))(v105 + 32))(v174, v104, v106);
    v111 = &v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_spacing];
    v112 = swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_spacing], v197, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v105 + 24))(v111, v110, v106, v112);
    objc_msgSend(v7, "setNeedsLayout", swift_endAccess(v197).n128_f64[0]);
    v113.n128_f64[0] = (*(double (**)(char *, uint64_t))(v105 + 8))(v110, v106);
    Badge.type.getter(v113);
    (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v191, enum case for BadgeType.paragraph(_:), v107);
    v114 = sub_10000E720(&qword_100819D08, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
    dispatch thunk of RawRepresentable.rawValue.getter(v197, v107, v114);
    dispatch thunk of RawRepresentable.rawValue.getter(v196, v107, v114);
    v115 = *((_QWORD *)&v197[0] + 1);
    v116 = *((_QWORD *)&v196[0] + 1);
    if (v197[0] == v196[0])
    {
      v117 = 1;
      v116 = *((_QWORD *)&v197[0] + 1);
    }
    else
    {
      v117 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v197[0], *((_QWORD *)&v197[0] + 1), *(_QWORD *)&v196[0], *((_QWORD *)&v196[0] + 1), 0);
    }
    swift_bridgeObjectRelease(v115);
    v118 = swift_bridgeObjectRelease(v116);
    v119 = *(void (**)(char *, uint64_t, __n128))(v108 + 8);
    v119(v191, v107, v118);
    ((void (*)(char *, uint64_t))v119)(v190, v107);
    v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_requiresRemainingWidth] = v117 & 1;
    v120 = v178;
    if (v178)
    {
      *(_QWORD *)&v197[0] = v178;
      v121 = type metadata accessor for Action(0);
      v122 = type metadata accessor for ObjectGraph(0);
      v123 = sub_10000E720(&qword_10080A310, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      swift_retain(v120);
      v124 = v121;
      v125 = (uint64_t)v179;
      v126 = v123;
      v107 = v194;
      ComponentModel.pairedWith<A>(objectGraph:)(v163, v124, v122, v126);
      swift_release();
      v127 = sub_10000DAF8((uint64_t *)&unk_10081D490);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v125, 0, 1, v127);
    }
    else
    {
      v128 = sub_10000DAF8((uint64_t *)&unk_10081D490);
      v125 = (uint64_t)v179;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v179, 1, 1, v128);
    }
    v129 = v189;
    sub_10042A580(v125);
    v130 = v177;
    Badge.type.getter(v131);
    v132 = &v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgeType];
    v133 = swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgeType], v197, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v195 + 40))(v132, v130, v107, v133);
    v134 = swift_endAccess(v197);
    v135 = &v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_badgePositionInRibbon];
    *(_QWORD *)v135 = v182;
    v135[8] = v183 & 1;
    v136 = v184;
    *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_overallBadgeCount] = v184;
    v137 = v180;
    Badge.type.getter(v134);
    if (v103(v137, v107) == enum case for BadgeType.rating(_:))
    {
      v138 = sub_100432E34();
      v139 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView;
      v140 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView];
      v141 = v138;
      if (v140)
      {
        objc_msgSend(v140, "removeFromSuperview");
        v140 = *(void **)&v7[v139];
      }
      v146 = v187;
      v145 = v188;
      v147 = v186;
      *(_QWORD *)&v7[v139] = v138;
      v148 = v138;

      v149 = *(void **)&v7[v139];
      v150 = v148;
      if (v149)
      {
        v150 = v149;
        objc_msgSend(v7, "addSubview:", v150);
        objc_msgSend(v7, "setNeedsLayout");

      }
      sub_10042A364(0, 0);

      v151 = (void *)v181;
    }
    else
    {
      ((void (*)(char *, uint64_t))v119)(v137, v107);
      v142 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView;
      v143 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_captionView];
      if (v143)
      {
        objc_msgSend(v143, "removeFromSuperview");
        v144 = *(void **)&v7[v142];
      }
      else
      {
        v144 = 0;
      }
      v146 = v187;
      v145 = v188;
      v147 = v186;
      *(_QWORD *)&v7[v142] = 0;

      v153 = *(void **)&v7[v142];
      if (v153)
      {
        v154 = v153;
        objc_msgSend(v7, "addSubview:", v154);
        objc_msgSend(v7, "setNeedsLayout");

      }
      if (v136 < 4 || (v152 = Badge.longCaption.getter(v152), !v155))
        v152 = Badge.caption.getter(v152);
      v151 = (void *)v181;
      sub_10042A364(v152, v155);
    }
    sub_10042BC3C();
    v156 = objc_msgSend(v7, "setNeedsLayout");
    *(_QWORD *)&v197[0] = 0x2E6567646162;
    *((_QWORD *)&v197[0] + 1) = 0xE600000000000000;
    v157._countAndFlagsBits = dispatch thunk of Badge.accessibilityIdentifier.getter(v156);
    object = v157._object;
    String.append(_:)(v157);
    swift_bridgeObjectRelease(object);
    v160 = *((_QWORD *)&v197[0] + 1);
    v159 = *(_QWORD *)&v197[0];
    memset(v197, 0, sizeof(v197));
    memset(v196, 0, sizeof(v196));
    static AutomationSemantics.productPage(elementName:id:parentId:)(v159, v160, v197, v196);
    swift_bridgeObjectRelease(v160);
    sub_100010F2C((uint64_t)v196, &qword_100808F20);
    sub_100010F2C((uint64_t)v197, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v147);
    swift_release();

    (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v145);
    return v129(v192, v193);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v47, v47);
    __break(1u);
  }
  return result;
}

void sub_100431560(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Bool v17;
  void *v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  _BYTE v31[32];
  _BYTE v32[24];
  UIImage_optional v33;

  v10 = sub_10000DAF8(&qword_100808E90);
  __chkstk_darwin(v10);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a6 + 16;
  sub_100035260(a3, (uint64_t)v12);
  v14 = type metadata accessor for Artwork.URLTemplate(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_100010F2C((uint64_t)v12, &qword_100808E90);
  }
  else
  {
    v19 = Artwork.URLTemplate.isSystemImage.getter();
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v12, v14);
    if ((v19 & 1) != 0)
    {
      if (a1)
      {
        v20 = objc_msgSend(a1, "imageByApplyingSymbolConfiguration:", a5);
        if (v20)
        {
          v21 = v20;
          objc_msgSend(v20, "size");
          v23 = v22;
          v25 = v24;

          swift_beginAccess(v13, v32, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v13);
          if (Strong)
          {
            v27 = (void *)Strong;
            v28 = (void (*)(_BYTE *, _QWORD))ArtworkView.frame.modify(v31);
            *(_QWORD *)(v29 + 16) = v23;
            *(_QWORD *)(v29 + 24) = v25;
            v28(v31, 0);

          }
        }
      }
    }
  }
  swift_beginAccess(v13, v31, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v13);
  if (v16)
  {
    v18 = (void *)v16;
    v33.value.super.isa = (Class)a1;
    v33.is_nil = 0;
    ArtworkView.show(image:isAnimationPermitted:)(v33, v17);

  }
}

double sub_10043170C(uint64_t (*a1)(char *, uint64_t), uint64_t a2, int a3, uint64_t a4, char *a5, __n128 a6, double a7, uint64_t a8, uint64_t a9)
{
  double v11;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  double v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t);
  uint64_t v58;
  int v59;
  id v60;
  double v61;
  double v62;
  double v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  Class isa;
  id v79;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  __n128 v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  char *v92;
  uint64_t v93;
  BOOL v94;
  char v95;
  double v96;
  uint64_t v97;
  id v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  id v104;
  double v105;
  double v106;
  uint64_t v107;
  _QWORD *v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  double v119;
  id v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  id v130;
  double v131;
  double v132;
  uint64_t v133;
  char *v134;
  char *v135;
  double Width;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  _QWORD *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __n128 v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  double v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  void (*v180)(char *, _QWORD *, uint64_t);
  char *v181;
  char *v182;
  uint64_t v183;
  id v184;
  double v185;
  int v187;
  int v188;
  char v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t countAndFlagsBits;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  uint64_t (*v207)(char *, uint64_t);
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  CGRect v223;

  countAndFlagsBits = a9;
  v11 = a6.n128_f64[0];
  v198 = a4;
  v205 = a3;
  v196 = a2;
  v193 = type metadata accessor for LabelPlaceholderCompatibility(0, a6);
  v192 = *(_QWORD *)(v193 - 8);
  v13 = __chkstk_darwin(v193);
  v191 = (char *)&v190 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for BadgeViewSpacing(0, v13);
  v202 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (uint64_t *)((char *)&v190 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v16);
  v200 = (char *)&v190 - v18;
  v206 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v17);
  v204 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v20 = (char *)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(&qword_10081B9E0);
  v22 = __chkstk_darwin(v21);
  v197 = (char *)&v190 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for BadgeCaptionCappingType(0, v22);
  v216 = *(_QWORD *)(v24 - 8);
  v217 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v190 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v215 = (char *)&v190 - v28;
  v29 = type metadata accessor for BadgeType(0);
  v213 = *(_QWORD *)(v29 - 8);
  v214 = v29;
  __chkstk_darwin(v29);
  v199 = (char *)&v190 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v190 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v190 - v35;
  v210 = type metadata accessor for FontUseCase(0);
  v211 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v38 = (char *)&v190 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v209 = (char *)&v190 - v40;
  v41 = sub_100432A9C();
  v208 = v43;
  if (v43)
  {
    v44 = v41;
    v195 = v38;
    v45 = v33;
    v207 = a1;
    v46 = v20;
    v47 = v26;
    v48 = a5;
    if (qword_100806180 != -1)
      swift_once(&qword_100806180, sub_1004C6DEC);
    v49 = v210;
    v50 = sub_10000EFC4(v210, (uint64_t)qword_100869558);
    v51 = v211;
    v52 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(v211 + 16))(v209, v50, v49);
    v53 = type metadata accessor for Feature(0);
    *((_QWORD *)&v221 + 1) = v53;
    v222 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v54 = sub_1000119C0(&v220);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v54, enum case for Feature.measurement_with_labelplaceholder(_:), v53);
    LOBYTE(v53) = isFeatureEnabled(_:)(&v220);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v220);
    v189 = v53 & 1;
    a5 = v48;
    v55 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v44, v208, v52, 4, 0, 0, 0, 0, v11, a7, v48, v189);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v49);
    if (v55 > v11)
      v55 = v11;
    v26 = v47;
    v20 = v46;
    v33 = v45;
    v38 = v195;
  }
  else
  {
    v55 = 0.0;
  }
  v212 = v20;
  Badge.type.getter(v42);
  v56 = v214;
  v57 = *(uint64_t (**)(char *, uint64_t))(v213 + 88);
  v58 = v57(v36, v214);
  v59 = enum case for BadgeType.rating(_:);
  v207 = v57;
  if ((_DWORD)v58 == enum case for BadgeType.rating(_:))
  {
    v60 = objc_msgSend(a5, "traitCollection");
    v61 = sub_100069600(1, 0, 1, 5.0);
    v63 = v62;

LABEL_39:
    v70 = v198;
    goto LABEL_57;
  }
  if ((_DWORD)v58 == enum case for BadgeType.contentRating(_:))
  {
    v65 = Badge.content.getter(v58);
    v66 = BadgeContentKeyContentRatingResource.getter();
    v68 = v67;
    if (*(_QWORD *)(v65 + 16))
    {
      v69 = sub_10057E9FC(v66, v67);
      v70 = v198;
      if ((v71 & 1) != 0)
      {
        sub_100010D84(*(_QWORD *)(v65 + 56) + 32 * v69, (uint64_t)&v220);
      }
      else
      {
        v220 = 0u;
        v221 = 0u;
      }
    }
    else
    {
      v220 = 0u;
      v221 = 0u;
      v70 = v198;
    }
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v65);
    if (*((_QWORD *)&v221 + 1))
    {
      if ((swift_dynamicCast(&v218, &v220, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v97 = v219;
        v98 = sub_1004AF394((uint64_t)v218, v219, 0, v64);
        objc_msgSend(v98, "size", swift_bridgeObjectRelease(v97).n128_f64[0]);
        v61 = v99;
        v63 = v100;

LABEL_56:
        v57 = v207;
        goto LABEL_57;
      }
LABEL_55:
      v63 = 0.0;
      v61 = 0.0;
      goto LABEL_56;
    }
LABEL_54:
    sub_100010F2C((uint64_t)&v220, &qword_100808F20);
    goto LABEL_55;
  }
  if ((_DWORD)v58 == enum case for BadgeType.chartPosition(_:))
  {
    v72._countAndFlagsBits = 0xD000000000000020;
    v72._object = (void *)0x800000010068D5B0;
    v73._countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    v74 = localizedString(_:comment:)(v72, v73);
    countAndFlagsBits = v74._countAndFlagsBits;
    if (qword_100806188 != -1)
      swift_once(&qword_100806188, sub_1004C6E08);
    v75 = v210;
    v76 = sub_10000EFC4(v210, (uint64_t)qword_100869570);
    (*(void (**)(char *, uint64_t, uint64_t))(v211 + 16))(v38, v76, v75);
    v195 = a5;
    v77 = objc_msgSend(a5, "traitCollection");
    isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v77).super.isa;
    v79 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

    if (v79)
    {
      v80 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v79, 0.0);

      if (v80)
      {
        v81 = type metadata accessor for Feature(0);
        *((_QWORD *)&v221 + 1) = v81;
        v222 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
        v82 = sub_1000119C0(&v220);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v82, enum case for Feature.measurement_with_labelplaceholder(_:), v81);
        v83 = v80;
        LOBYTE(v81) = isFeatureEnabled(_:)(&v220);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v220);
        LOBYTE(v187) = v81 & 1;
        v84 = v191;
        LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(countAndFlagsBits, v74._object, v83, 4, 0, 0, 0, 0, v187);
        v85 = sub_10000E720((unint64_t *)&unk_1008181B0, (uint64_t (*)(uint64_t))&type metadata accessor for LabelPlaceholderCompatibility, (uint64_t)&protocol conformance descriptor for LabelPlaceholderCompatibility);
        a5 = v195;
        v86 = v193;
        v61 = dispatch thunk of Measurable.measurements(fitting:in:)(v195, v193, v85, v11, a7);
        v63 = v87;

        (*(void (**)(char *, uint64_t))(v192 + 8))(v84, v86);
LABEL_36:
        if (v61 > v11)
          v61 = v11;
        (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v38, v210, v88);
        goto LABEL_39;
      }
    }
    else
    {

    }
    v107 = type metadata accessor for Feature(0);
    *((_QWORD *)&v221 + 1) = v107;
    v222 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v108 = sub_1000119C0(&v220);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v107 - 8) + 104))(v108, enum case for Feature.measurement_with_labelplaceholder(_:), v107);
    LOBYTE(v107) = isFeatureEnabled(_:)(&v220);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v220);
    LOBYTE(v188) = v107 & 1;
    a5 = v195;
    v61 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(countAndFlagsBits, v74._object, v38, 4, 0, 0, 0, 0, v11, a7, v195, v188);
    v63 = v109;
    v88 = swift_bridgeObjectRelease(v74._object);
    goto LABEL_36;
  }
  if ((_DWORD)v58 == enum case for BadgeType.editorsChoice(_:))
  {
    type metadata accessor for EditorsChoiceView();
    v89._countAndFlagsBits = 0xD000000000000050;
    v90._object = (void *)0x80000001006870A0;
    v89._object = (void *)0x80000001006870C0;
    v90._countAndFlagsBits = 0xD000000000000017;
    v91 = localizedString(_:comment:)(v90, v89);
    v92 = v33;
    v93 = String.count.getter(v91._countAndFlagsBits, v91._object);
    v57 = v207;
    swift_bridgeObjectRelease(v91._object);
    v94 = v93 < 19;
    v33 = v92;
    v95 = v94;
    sub_100041454(v95, 1, 0, a5, v11, 0, 2u);
    v61 = v64.n128_f64[0];
    v63 = v96;
    goto LABEL_39;
  }
  if ((_DWORD)v58 == enum case for BadgeType.artwork(_:))
  {
    v70 = v198;
    if (qword_100805C60 != -1)
      swift_once(&qword_100805C60, sub_10042A6A4);
    sub_10000EFC4(v206, (uint64_t)qword_100868898);
    v101 = BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v103 = v102;
    v104 = objc_msgSend(a5, "traitCollection");
    v105 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v104);

    v64.n128_f64[0] = CGSize.scaled(_:)(v105, v101, v103);
    v61 = v64.n128_f64[0];
    v63 = v106;
  }
  else if ((_DWORD)v58 == enum case for BadgeType.paragraph(_:))
  {
    LODWORD(countAndFlagsBits) = enum case for BadgeType.rating(_:);
    v195 = v33;
    v110 = sub_100432C04();
    v112 = v111;
    if (qword_100806178 != -1)
      swift_once(&qword_100806178, sub_1004C6DD0);
    v113 = v210;
    v114 = sub_10000EFC4(v210, (uint64_t)qword_100869540);
    v115 = v211;
    v116 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(v211 + 16))(v209, v114, v113);
    v117 = type metadata accessor for Feature(0);
    *((_QWORD *)&v221 + 1) = v117;
    v222 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v118 = sub_1000119C0(&v220);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v117 - 8) + 104))(v118, enum case for Feature.measurement_with_labelplaceholder(_:), v117);
    LOBYTE(v117) = isFeatureEnabled(_:)(&v220);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v220);
    LOBYTE(v188) = v117 & 1;
    v119 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v110, v112, v116, 4, 0, 0, 0, 0, v11, a7, a5, v188);
    v120 = objc_msgSend(a5, "traitCollection");
    v61 = sub_100019F98(v120, v119, v11);
    v63 = v121;

    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v113);
    v64 = swift_bridgeObjectRelease(v112);
    v70 = v198;
    v57 = v207;
    v33 = v195;
    v59 = countAndFlagsBits;
  }
  else
  {
    if ((_DWORD)v58 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v213 + 8))(v36, v56);
      v63 = 0.0;
      v61 = 0.0;
      goto LABEL_39;
    }
    v122 = Badge.content.getter(v58);
    v123 = BadgeContentKeyNativeContentView.getter();
    v125 = v124;
    if (*(_QWORD *)(v122 + 16))
    {
      v126 = sub_10057E9FC(v123, v124);
      v70 = v198;
      if ((v127 & 1) != 0)
      {
        sub_100010D84(*(_QWORD *)(v122 + 56) + 32 * v126, (uint64_t)&v220);
      }
      else
      {
        v220 = 0u;
        v221 = 0u;
      }
    }
    else
    {
      v220 = 0u;
      v221 = 0u;
      v70 = v198;
    }
    swift_bridgeObjectRelease(v125);
    swift_bridgeObjectRelease(v122);
    if (!*((_QWORD *)&v221 + 1))
      goto LABEL_54;
    v128 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v129 = swift_dynamicCast(&v218, &v220, (char *)&type metadata for Any + 8, v128, 6);
    v57 = v207;
    if ((v129 & 1) != 0)
    {
      v130 = v218;
      objc_msgSend(v218, "sizeThatFits:", v11, a7);
      v61 = v131;
      v63 = v132;

    }
    else
    {
      v63 = 0.0;
      v61 = 0.0;
    }
  }
LABEL_57:
  Badge.type.getter(v64);
  v133 = v214;
  v134 = a5;
  if (v57(v33, v214) == v59)
  {
    v135 = sub_100432E34();
    objc_msgSend(v135, "frame");
    Width = CGRectGetWidth(v223);

    v137 = swift_bridgeObjectRelease(v208);
  }
  else
  {
    v138 = (*(uint64_t (**)(char *, uint64_t))(v213 + 8))(v33, v133);
    if (v70 >= 4 && (v138 = Badge.longCaption.getter(v138), v139) || (v138 = Badge.caption.getter(v138), v139))
    {
      v140 = v138;
      v141 = v139;
      v142 = v26;
      v143 = v70;
      if (qword_100806198 != -1)
        swift_once(&qword_100806198, sub_1004C6F38);
      v144 = v210;
      v145 = sub_10000EFC4(v210, (uint64_t)qword_1008695A0);
      v146 = v211;
      v147 = v209;
      (*(void (**)(char *, uint64_t, uint64_t))(v211 + 16))(v209, v145, v144);
      v148 = type metadata accessor for Feature(0);
      *((_QWORD *)&v221 + 1) = v148;
      v222 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v149 = sub_1000119C0(&v220);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v148 - 8) + 104))(v149, enum case for Feature.measurement_with_labelplaceholder(_:), v148);
      LOBYTE(v148) = isFeatureEnabled(_:)(&v220);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v220);
      LOBYTE(v188) = v148 & 1;
      Width = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v140, v141, v147, 4, 0, 0, 0, 0, v11, a7, v134, v188);
      v150 = swift_bridgeObjectRelease(v141);
      (*(void (**)(char *, uint64_t, __n128))(v146 + 8))(v147, v144, v150);
      v137 = swift_bridgeObjectRelease(v208);
      if (Width > v11)
        Width = v11;
      v70 = v143;
      v26 = v142;
    }
    else
    {
      v137 = swift_bridgeObjectRelease(v208);
      Width = 0.0;
    }
  }
  v151 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v216 + 104))(v215, enum case for BadgeCaptionCappingType.none(_:), v217, v137);
  v152 = Badge.heading.getter(v151);
  if (v153)
  {
    v155 = v26;
    v156 = v70;
    *(_QWORD *)&v220 = v152;
    *((_QWORD *)&v220 + 1) = v153;
    v157 = (uint64_t)v197;
    static Locale.storefront.getter(v154);
    v158 = type metadata accessor for Locale(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v157, 0, 1, v158);
    v159 = sub_1000FCE08();
    v160 = StringProtocol.uppercased(with:)(v157, &type metadata for String, v159);
    v162 = v161;
    sub_100010F2C(v157, &qword_10081B9E0);
    swift_bridgeObjectRelease(*((_QWORD *)&v220 + 1));
    if (qword_1008061A0 != -1)
      swift_once(&qword_1008061A0, sub_1004C6F50);
    v163 = v210;
    v164 = sub_10000EFC4(v210, (uint64_t)qword_1008695B8);
    v165 = v211;
    v166 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(v211 + 16))(v209, v164, v163);
    v167 = type metadata accessor for Feature(0);
    *((_QWORD *)&v221 + 1) = v167;
    v222 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v168 = sub_1000119C0(&v220);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v167 - 8) + 104))(v168, enum case for Feature.measurement_with_labelplaceholder(_:), v167);
    LOBYTE(v167) = isFeatureEnabled(_:)(&v220);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v220);
    LOBYTE(v188) = v167 & 1;
    v169 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v160, v162, v166, 4, 0, 0, 0, 0, v11, a7, v134, v188);
    v170 = swift_bridgeObjectRelease(v162);
    (*(void (**)(char *, uint64_t, __n128))(v165 + 8))(v166, v163, v170);
    if (v169 > v11)
      v169 = v11;
    v70 = v156;
    v26 = v155;
  }
  else
  {
    v169 = 0.0;
  }
  v171 = v206;
  v172 = v204;
  v173 = v203;
  v174 = v199;
  if (qword_100805C60 != -1)
    swift_once(&qword_100805C60, sub_10042A6A4);
  v175 = sub_10000EFC4(v171, (uint64_t)qword_100868898);
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v212, v175, v171);
  (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v26, v215, v217);
  v176.n128_f64[0] = BadgeViewRibbonLayout.Metrics.captionCappingType.setter(v26);
  Badge.type.getter(v176);
  v177 = v214;
  if (v207(v174, v214) == enum case for BadgeType.chartPosition(_:))
  {
    v178 = v201;
    *v201 = 0;
    v179 = v202;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v202 + 104))(v178, enum case for BadgeViewSpacing.spacing(_:), v173);
  }
  else
  {
    v179 = v202;
    v178 = v201;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v202 + 104))(v201, enum case for BadgeViewSpacing.standard(_:), v173);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v174, v177);
  }
  v180 = *(void (**)(char *, _QWORD *, uint64_t))(v179 + 32);
  v181 = v200;
  v180(v200, v178, v173);
  v182 = v181;
  v183 = (uint64_t)v212;
  BadgeViewRibbonLayout.Metrics.spacingType.setter(v182);
  if ((v205 & 1) == 0)
  {
    v184 = objc_msgSend(v134, "traitCollection");
    sub_10042D684(v183, v196, v70);

  }
  v185 = static BadgeViewRibbonLayout.measurements(valueLabelWidth:viewSize:captionWidth:headingLabelWidth:fitting:using:in:)(v183, v134, v55, v61, v63, Width, v169, v11, a7);
  (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v183, v171);
  (*(void (**)(char *, uint64_t))(v216 + 8))(v215, v217);
  return v185;
}

uint64_t sub_100432A9C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for BadgeType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter(v2);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == enum case for BadgeType.contentRating(_:))
  {
    v6 = Badge.content.getter();
    v7 = BadgeContentKeyContentRating.getter();
  }
  else
  {
    if (v5 != enum case for BadgeType.chartPosition(_:))
    {
      v15 = 0;
      v16 = 0;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      return v15;
    }
    v6 = Badge.content.getter();
    v7 = BadgeContentKeyChartPosition.getter();
  }
  v9 = v8;
  if (*(_QWORD *)(v6 + 16) && (v10 = sub_10057E9FC(v7, v8), (v11 & 1) != 0))
  {
    sub_100010D84(*(_QWORD *)(v6 + 56) + 32 * v10, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v6);
  if (*((_QWORD *)&v14 + 1))
  {
    if ((swift_dynamicCast(&v15, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v15;
  }
  else
  {
    sub_100010F2C((uint64_t)&v13, &qword_100808F20);
  }
  v15 = 0;
  v16 = 0;
  return v15;
}

uint64_t sub_100432C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __n128 v11;
  void (*v12)(char *, uint64_t, __n128);
  uint64_t v13;
  char v14;
  __n128 v15;
  void (*v16)(char *, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v0 = type metadata accessor for BadgeType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - v6;
  Badge.type.getter(v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for BadgeType.paragraph(_:), v0);
  v8 = sub_10000E720(&qword_100819D08, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v0, v8);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v0, v8);
  v9 = *((_QWORD *)&v24 + 1);
  v10 = v26;
  if (v24 == v26)
  {
    v11 = swift_bridgeObjectRelease_n(*((_QWORD *)&v24 + 1), 2);
    v12 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v12(v3, v0, v11);
    v13 = ((uint64_t (*)(char *, uint64_t))v12)(v7, v0);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, *((_QWORD *)&v24 + 1), v26, *((_QWORD *)&v26 + 1), 0);
    swift_bridgeObjectRelease(v9);
    v15 = swift_bridgeObjectRelease(*((_QWORD *)&v10 + 1));
    v16 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v16(v3, v0, v15);
    v13 = ((uint64_t (*)(char *, uint64_t))v16)(v7, v0);
    if ((v14 & 1) == 0)
      return 0;
  }
  v17 = Badge.content.getter(v13);
  v18 = BadgeContentKeyParagraphText.getter();
  v20 = v19;
  if (*(_QWORD *)(v17 + 16) && (v21 = sub_10057E9FC(v18, v19), (v22 & 1) != 0))
  {
    sub_100010D84(*(_QWORD *)(v17 + 56) + 32 * v21, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v17);
  if (*((_QWORD *)&v25 + 1))
  {
    if ((swift_dynamicCast(&v26, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v26;
  }
  else
  {
    sub_100010F2C((uint64_t)&v24, &qword_100808F20);
  }
  return 0;
}

char *sub_100432E34()
{
  id v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  float v10;
  id v11;
  void *v12;
  id v14;
  __int128 v15;
  __int128 v16;

  v0 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  v1 = sub_100067A50(5, 1, 0, 1, 0, 0, 1);
  v2 = Badge.content.getter(v1);
  v3 = BadgeContentKeyRating.getter();
  v5 = v4;
  if (!*(_QWORD *)(v2 + 16) || (v6 = sub_10057E9FC(v3, v4), (v7 & 1) == 0))
  {
    v15 = 0u;
    v16 = 0u;
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v2);
    goto LABEL_7;
  }
  sub_100010D84(*(_QWORD *)(v2 + 56) + 32 * v6, (uint64_t)&v15);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v16 + 1))
  {
LABEL_7:
    sub_100010F2C((uint64_t)&v15, &qword_100808F20);
    goto LABEL_8;
  }
  v8 = sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
  if ((swift_dynamicCast(&v14, &v15, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
LABEL_8:
    sub_100067688(0.0);
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "systemMidGrayColor");
    v12 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor] = v11;
    v9 = v11;
    sub_100067708((uint64_t)v12);

    goto LABEL_9;
  }
  v9 = v14;
  objc_msgSend(v14, "floatValue");
  sub_100067688(v10);
LABEL_9:

  return v1;
}

void sub_100432FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, id);
  void (*v51)(char *, _QWORD, uint64_t);
  char *v52;
  id v53;
  void *v54;
  id v55;
  Class isa;
  id v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  void *object;
  NSString v62;
  void *v63;
  id v64;
  id v65;
  __n128 v66;
  uint64_t v67;
  id v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  double v77;
  double v78;
  double v79;
  id v80;
  double v81;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  __n128 v88;
  uint64_t (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  id v94;
  id v95;
  char *v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  double v103;
  uint64_t v104;
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  id v112;
  id v113;
  double v114;
  double v115;
  double v116;
  id v117;
  double v118;
  double v119;
  double v120;
  id v121;
  __n128 v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  id v132;
  id v133;
  __n128 v134;
  char v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(__int128 *, _QWORD);
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  void *v146;
  NSString v147;
  uint64_t v148;
  char *v149;
  void *v150;
  char *v151;
  NSString v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  uint64_t v159;
  double v160;
  uint64_t v161;
  void (*v162)(__int128 *, _QWORD);
  uint64_t v163;
  uint64_t v164;
  void *v165;
  id v166;
  uint64_t v167;
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t i;
  uint64_t v185;
  uint64_t v186;
  __n128 v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  _QWORD *v192;
  unint64_t v193;
  _QWORD v194[2];
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  id v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;

  v196 = a2;
  v3 = type metadata accessor for AvatarShowcaseLayoutConfiguration(0, a2);
  __chkstk_darwin(v3);
  v195 = (char *)v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for DirectionalTextAlignment(0);
  v5 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v204 = (char *)v194 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v7);
  v9 = (char *)v194 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)type metadata accessor for FontUseCase(0);
  v206 = *(v10 - 1);
  v207 = v10;
  __chkstk_darwin(v10);
  v205 = (char *)v194 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork.Style(0, v12);
  v14 = __chkstk_darwin(v13);
  v200 = (char *)v194 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for Artwork.Crop(0, v14);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v197 = (char *)v194 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v202 - 8);
  v18 = __chkstk_darwin(v202);
  v201 = (char *)v194 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v18);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v194 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for BadgeType(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)v194 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter(v26);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v24);
  if ((_DWORD)v29 == enum case for BadgeType.rating(_:))
  {
    v30 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v31 = Badge.content.getter(v30);
    v32 = BadgeContentKeyRatingFormatted.getter();
    v34 = v33;
    if (*(_QWORD *)(v31 + 16) && (v35 = sub_10057E9FC(v32, v33), (v36 & 1) != 0))
    {
      sub_100010D84(*(_QWORD *)(v31 + 56) + 32 * v35, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v31);
    if (*((_QWORD *)&v212 + 1))
    {
      if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v43 = v210;
        v44 = *(void **)&v30[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel];
        v45 = String._bridgeToObjectiveC()();
LABEL_23:
        objc_msgSend(v44, "setText:", v45);

LABEL_24:
        objc_msgSend(v30, "setNeedsLayout");
        swift_bridgeObjectRelease(v43);
        return;
      }
    }
    else
    {
      sub_100010F2C((uint64_t)&v211, &qword_100808F20);
    }
    v45 = 0;
    v43 = 0;
    v44 = *(void **)&v30[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel];
    goto LABEL_23;
  }
  v194[1] = a1;
  if ((_DWORD)v29 == enum case for BadgeType.contentRating(_:))
  {
    v37 = Badge.content.getter(v29);
    v38 = BadgeContentKeyContentRatingResource.getter();
    v40 = v39;
    if (*(_QWORD *)(v37 + 16) && (v41 = sub_10057E9FC(v38, v39), (v42 & 1) != 0))
    {
      sub_100010D84(*(_QWORD *)(v37 + 56) + 32 * v41, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v37);
    if (*((_QWORD *)&v212 + 1))
    {
      if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v67 = v210;
        v68 = sub_1004AF394(v209, v210, 0, v66);
        swift_bridgeObjectRelease(v67);
        objc_msgSend(objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v68), "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);

      }
      return;
    }
LABEL_84:
    sub_100010F2C((uint64_t)&v211, &qword_100808F20);
    return;
  }
  if ((_DWORD)v29 == enum case for BadgeType.chartPosition(_:))
  {
    if (qword_100806188 != -1)
      swift_once(&qword_100806188, sub_1004C6E08);
    v46 = v207;
    v47 = sub_10000EFC4((uint64_t)v207, (uint64_t)qword_100869570);
    v49 = v205;
    v48 = v206;
    v50 = *(void (**)(char *, uint64_t, id))(v206 + 16);
    v50(v205, v47, v46);
    v50(v9, (uint64_t)v49, v46);
    (*(void (**)(char *, _QWORD, uint64_t, id))(v48 + 56))(v9, 0, 1, v46);
    v51 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v52 = v204;
    v51(v204, enum case for DirectionalTextAlignment.none(_:), v203);
    v53 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
    v54 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v9, 1, 2, 0, 0, v52, 0, 0);
    v55 = objc_msgSend(v208, "traitCollection");
    isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v55).super.isa;
    v57 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

    if (v57)
    {
      v58 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v57, 0.0);

      if (!v58)
      {
LABEL_20:
        objc_msgSend(v54, "setTextAlignment:", 1);
        v59._countAndFlagsBits = 0xD000000000000020;
        v59._object = (void *)0x800000010068D5B0;
        v60._countAndFlagsBits = 0;
        v60._object = (void *)0xE000000000000000;
        object = localizedString(_:comment:)(v59, v60)._object;
        v62 = String._bridgeToObjectiveC()();
        objc_msgSend(v54, "setText:", v62, swift_bridgeObjectRelease(object).n128_f64[0]);

        v63 = (void *)objc_opt_self(UIColor);
        v64 = v54;
        v65 = objc_msgSend(v63, "systemGrayColor");
        objc_msgSend(v64, "setTextColor:", v65);

        (*(void (**)(char *, id))(v48 + 8))(v49, v46);
        return;
      }
      objc_msgSend(v54, "setFont:", v58);
      v55 = v58;
    }

    goto LABEL_20;
  }
  if ((_DWORD)v29 == enum case for BadgeType.editorsChoice(_:))
  {
    v69._countAndFlagsBits = 0xD000000000000050;
    v70._object = (void *)0x80000001006870A0;
    v69._object = (void *)0x80000001006870C0;
    v70._countAndFlagsBits = 0xD000000000000017;
    v71 = localizedString(_:comment:)(v70, v69);
    v72 = String.count.getter(v71._countAndFlagsBits, v71._object);
    swift_bridgeObjectRelease(v71._object);
    v73 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
    sub_10003F690(v72 < 19, 1, 0, 0, 2u);
    return;
  }
  if ((_DWORD)v29 == enum case for BadgeType.artwork(_:))
  {
    v74 = Badge.artwork.getter();
    if (!v74)
      return;
    v75 = v74;
    v76 = v208;
    sub_10042BDC8((uint64_t)v23);
    v77 = BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v79 = v78;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v80 = objc_msgSend(v76, "traitCollection");
    v81 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v80);

    v82 = CGSize.scaled(_:)(v81, v77, v79);
    v84 = v83;
    Artwork.size.getter(v85);
    v86 = v201;
    v88 = AspectRatio.init(_:_:)(v87);
    LOBYTE(v80) = AspectRatio.isLandscape.getter(v88);
    v89 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v90 = v202;
    v91 = v89(v86, v202);
    if ((v80 & 1) != 0)
    {
      Artwork.size.getter(v91);
      AspectRatio.init(_:_:)(v92);
      v82 = AspectRatio.maxSize(filling:)(v82, v84);
      v84 = v93;
      v89(v86, v90);
    }
    v94 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v82, v84);
    v95 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleTitle1);
    v207 = v95;
    ArtworkView.preferredSymbolConfiguration.setter(v95);
    v96 = v197;
    v98 = Artwork.crop.getter(v97);
    v99 = Artwork.Crop.preferredContentMode.getter(v98);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v96, v199);
    v100 = Artwork.config(_:mode:prefersLayeredImage:)(v99, 0, v82, v84);
    v101 = v200;
    Artwork.style.getter(v100);
    v102 = ArtworkView.style.setter(v101);
    *(_QWORD *)&v103 = Artwork.contentMode.getter(v102).n128_u64[0];
    v105 = ArtworkLoaderConfig.size.getter(objc_msgSend(v94, "setContentMode:", v104, v103));
    v107 = ArtworkView.imageSize.setter(v105, v106);
    v108 = Artwork.backgroundColor.getter(v107);
    if (!v108)
    {
      v109 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v108 = static UIColor.placeholderBackground.getter(v109);
    }
    ArtworkView.backgroundColor.setter(v108);
    v110 = (void *)objc_opt_self(UIColor);
    v111 = ArtworkView.backgroundColor.setter(objc_msgSend(v110, "clearColor"));
    if ((Badge.isMonochrome.getter(v111) & 1) != 0)
      v112 = objc_msgSend(v110, "secondaryLabelColor");
    else
      v112 = 0;
    v131 = ArtworkView.artworkTintColor.setter(v112);
    if ((dispatch thunk of Artwork.isBundleImage.getter(v131) & 1) == 0)
    {
      v141 = v207;
      if (v196)
      {
        v213 = 0;
        v211 = 0u;
        v212 = 0u;
        v142 = swift_allocObject(&unk_100753F18, 24, 7);
        swift_unknownObjectWeakInit(v142 + 16);
        v143 = swift_allocObject(&unk_100753F40, 32, 7);
        *(_QWORD *)(v143 + 16) = v141;
        *(_QWORD *)(v143 + 24) = v142;
        v144 = v141;
        swift_retain(v142);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v100, 2, 1, &v211, sub_1004342C8, v143);
        swift_release();
        sub_100010F2C((uint64_t)&v211, &qword_100809010);
        swift_release();
      }
      goto LABEL_66;
    }
    v132 = sub_1004AF5F4(v75, 0);
    v133 = v132;
    ArtworkView.image.setter(v132);
    if (v132)
    {
      v134 = AspectRatio.init(_:_:)(objc_msgSend(v133, "size"));
      v135 = AspectRatio.isPortrait.getter(v134);
      v89(v86, v90);
      AspectRatio.init(_:_:)(objc_msgSend(v133, "size"));
      if ((v135 & 1) != 0)
      {
        v136 = AspectRatio.maxSize(fitting:)(v82, v84);
        v138 = v137;
        v89(v86, v90);
        v139 = (void (*)(__int128 *, _QWORD))ArtworkView.frame.modify(&v211);
        *(double *)(v140 + 16) = v136;
        *(_QWORD *)(v140 + 24) = v138;
        v139(&v211, 0);

        v141 = v207;
LABEL_66:
        v164 = OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView;
        v165 = *(void **)&v76[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView];
        *(_QWORD *)&v76[OBJC_IVAR____TtC20ProductPageExtension9BadgeView_artworkView] = v94;
        swift_release();
        swift_release();

        v166 = *(id *)&v76[v164];
        return;
      }
      v160 = AspectRatio.maxSize(filling:)(v82, v84);
      v159 = v161;
      v89(v86, v90);
    }
    else
    {
      v159 = 0;
      v160 = 0.0;
    }
    v141 = v207;
    v162 = (void (*)(__int128 *, _QWORD))ArtworkView.frame.modify(&v211);
    *(double *)(v163 + 16) = v160;
    *(_QWORD *)(v163 + 24) = v159;
    v162(&v211, 0);

    goto LABEL_66;
  }
  if ((_DWORD)v29 == enum case for BadgeType.controller(_:))
  {
    v113 = v208;
    sub_10042BDC8((uint64_t)v23);
    v114 = BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v116 = v115;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v117 = objc_msgSend(v113, "traitCollection");
    v118 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v117);

    v119 = CGSize.scaled(_:)(v118, v114, v116);
    v121 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, v119, v120);
    v123 = sub_1004AF394(0x6C6C6F72746E6F43, 0xEF65676461427265, 0, v122);
    objc_msgSend(v121, "setImage:", v123);

    objc_msgSend(v121, "setContentMode:", 1);
    v124 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    objc_msgSend(v121, "setTintColor:", v124);

    return;
  }
  if ((_DWORD)v29 == enum case for BadgeType.storefrontContentRating(_:))
  {
    v125 = Badge.content.getter(v29);
    v126 = BadgeContentKeyContentRating.getter();
    v128 = v127;
    if (*(_QWORD *)(v125 + 16) && (v129 = sub_10057E9FC(v126, v127), (v130 & 1) != 0))
    {
      sub_100010D84(*(_QWORD *)(v125 + 56) + 32 * v129, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v128);
    swift_bridgeObjectRelease(v125);
    if (!*((_QWORD *)&v212 + 1))
      goto LABEL_84;
    if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v148 = v210;
      v149 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StorefrontAgeRatingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v150 = *(void **)&v149[OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_label];
      v151 = v149;
      v152 = String._bridgeToObjectiveC()();
      objc_msgSend(v150, "setText:", v152, swift_bridgeObjectRelease(v148).n128_f64[0]);

    }
  }
  else if ((_DWORD)v29 == enum case for BadgeType.paragraph(_:))
  {
    v30 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_100432C04();
    if (v145)
    {
      v43 = v145;
      v146 = *(void **)&v30[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel];
      v147 = String._bridgeToObjectiveC()();
      objc_msgSend(v146, "setText:", v147);

      goto LABEL_24;
    }
  }
  else
  {
    if ((_DWORD)v29 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
      return;
    }
    v153 = Badge.content.getter(v29);
    v154 = BadgeContentKeyNumberOfAvatarsToDisplay.getter();
    v156 = v155;
    if (*(_QWORD *)(v153 + 16) && (v157 = sub_10057E9FC(v154, v155), (v158 & 1) != 0))
    {
      sub_100010D84(*(_QWORD *)(v153 + 56) + 32 * v157, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v156);
    swift_bridgeObjectRelease(v153);
    if (!*((_QWORD *)&v212 + 1))
      goto LABEL_84;
    v167 = sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, v167, 6) & 1) == 0)
      return;
    v168 = (id)v209;
    v169 = objc_msgSend((id)v209, "integerValue");

    v171 = Badge.content.getter(v170);
    v172 = GameCenterFriends.getter();
    v174 = v173;
    if (*(_QWORD *)(v171 + 16) && (v175 = sub_10057E9FC(v172, v173), (v176 & 1) != 0))
    {
      sub_100010D84(*(_QWORD *)(v171 + 56) + 32 * v175, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v174);
    swift_bridgeObjectRelease(v171);
    if (!*((_QWORD *)&v212 + 1))
      goto LABEL_84;
    v177 = sub_10000DAF8(&qword_100822FB0);
    if (swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, v177, 6))
    {
      v178 = v209;
      if (!v196)
      {
        swift_bridgeObjectRelease(v209);
        return;
      }
      if ((unint64_t)v209 >> 62)
      {
        if (v209 < 0)
          v193 = v209;
        else
          v193 = v209 & 0xFFFFFFFFFFFFFF8;
        swift_retain(v196);
        swift_bridgeObjectRetain(v178);
        v179 = _CocoaArrayWrapper.endIndex.getter(v193);
        swift_bridgeObjectRelease(v178);
      }
      else
      {
        v179 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain(v196);
      }
      if (v179 >= (uint64_t)v169)
        v179 = (uint64_t)v169;
      v180 = (uint64_t)v195;
      AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(24.0, 15.0);
      v181 = objc_allocWithZone((Class)type metadata accessor for AvatarShowcaseView(0));
      sub_10005E61C(v179, v180);
      *(_QWORD *)&v211 = _swiftEmptyArrayStorage;
      if ((unint64_t)v178 >> 62)
      {
        if (v178 < 0)
          v183 = v178;
        else
          v183 = v178 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v178);
        v182 = _CocoaArrayWrapper.endIndex.getter(v183);
      }
      else
      {
        v182 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v178);
      }
      if (v182)
      {
        if (v182 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v182; ++i)
        {
          if ((v178 & 0xC000000000000001) != 0)
            v186 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v178);
          else
            v187 = swift_retain(*(_QWORD *)(v178 + 8 * i + 32));
          v188 = dispatch thunk of GameCenterPlayer.artwork.getter(v186, v187);
          swift_release();
          if (v188)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v189);
            v191 = *(_QWORD *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v190 = *(_QWORD *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v191 >= v190 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v190 > 1, v191 + 1, 1);
            v185 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v191, v188);
            specialized Array._endMutation()(v185);
          }
        }
        swift_bridgeObjectRelease(v178);
        v192 = (_QWORD *)v211;
      }
      else
      {
        swift_bridgeObjectRelease(v178);
        v192 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease(v178);
      sub_10005E7CC((uint64_t)v192, v196);
      swift_bridgeObjectRelease(v192);
      swift_release();
    }
  }
}

uint64_t sub_100434278()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10043429C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004342C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100431560(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1004342D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for ComponentSeparator.Position(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v6 + 104))(v5, enum case for ComponentSeparator.Position.trailing(_:), v3);
  if (qword_100804D90 != -1)
    swift_once(&qword_100804D90, sub_1001CFC5C);
  ComponentSeparator.init(position:leadingInset:trailingInset:)(v5, *(double *)&qword_100865C58, *(double *)&qword_100865C58);
  v7 = type metadata accessor for ComponentSeparator(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
}

void sub_1004343A4(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;

  v16 = objc_msgSend(*(id *)(v1 + 16), "view");
  if (v16)
  {
    objc_msgSend(a1, "_systemContentInset");
    v4 = v3;
    v6 = v5;
    objc_msgSend(a1, "contentOffset");
    v8 = v7;
    v10 = v9;
    objc_msgSend(a1, "contentInset");
    v12 = v6 + v8 + v11;
    v14 = v4 + v10 + v13;
    objc_msgSend(a1, "bounds");
    objc_msgSend(v16, "setFrame:", sub_10043447C(v12, v14, v15));

  }
  else
  {
    __break(1u);
  }
}

double sub_10043447C(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v3 + 16);
  sub_1002AF5C0(a3);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell);
  v6 = type metadata accessor for ListTodayCardCollectionViewCell(0);
  if (!swift_dynamicCastClass(v5, v6))
  {
    v7 = type metadata accessor for LegacyListTodayCardCollectionViewCell(0);
    swift_dynamicCastClass(v5, v7);
  }
  return 0.0;
}

uint64_t sub_100434558()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for ArticleHeaderScrollObserver()
{
  return objc_opt_self(_TtC20ProductPageExtension27ArticleHeaderScrollObserver);
}

uint64_t type metadata accessor for BaseActionRunner(uint64_t a1)
{
  uint64_t result;

  result = qword_100823068;
  if (!qword_100823068)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BaseActionRunner);
  return result;
}

uint64_t sub_1004345E4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_100868978);
}

uint64_t sub_100434620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  void *v47;
  char v48[24];

  v42 = a1;
  v5 = sub_10000DAF8((uint64_t *)&unk_100820670);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v44 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Dependency(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MetricsFieldsContext(0);
  v43 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - v20;
  v22 = type metadata accessor for ObjectGraph(0);
  if (swift_dynamicCastClass(a4, v22))
  {
    v41 = a4;
    swift_retain(a4);
    sub_100434A68();
    v23 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v23(v18, v21, v16);
    Dependency.init<A>(satisfying:with:)(v16, v18, v16);
    v24 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v15);
    v25 = v15;
    v26 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
    v27 = v26 + qword_10086B3B0;
    swift_beginAccess(v26 + qword_10086B3B0, v48, 0, 0);
    sub_10005E588(v27, (uint64_t)v10);
    v12 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v10, 1, v40) != 1)
    {
      v28 = v39;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v39, v10, v12);
      v46 = type metadata accessor for Action(0);
      v47 = (void *)sub_10000E720(&qword_10081C890, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      v29 = v42;
      v45[0] = v42;
      v23(v7, v21, v16);
      v31 = v37;
      v30 = v38;
      (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v7, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v38);
      v32 = swift_retain(v29);
      ActionDispatcher.perform(_:withMetrics:asPartOf:)(v45, v7, v26, v12, v32);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v45);
      v33 = sub_10006E46C();
      swift_retain_n(v29, 2);
      v35 = static OS_dispatch_queue.main.getter(v34);
      v46 = v33;
      v47 = &protocol witness table for OS_dispatch_queue;
      v45[0] = v35;
      Promise.then(perform:orCatchError:on:)(sub_1004351AC, v29, sub_1004351B4, v29, v45);
      swift_release();
      swift_release();
      swift_release();
      swift_release_n(v29, 2);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v45);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v12);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v21, v16);
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000053, 0x80000001006A4220, "ProductPageExtension/BaseActionRunner.swift", 43, 2, 33, 0);
    __break(1u);
  }
  sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100809290);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v12, v12);
  __break(1u);
  return result;
}

uint64_t sub_100434A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  char v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  _QWORD v18[5];
  _QWORD v19[2];

  v0 = sub_10000DAF8(&qword_1008095D0);
  BaseObjectGraph.optional<A>(_:)(v19, v0, v0);
  v1 = v19[0];
  v2 = v19[1];
  type metadata accessor for MetricsActivity(0);
  static MetricsActivity.current.getter(v3);
  v4 = dispatch thunk of MetricsActivity.currentPageFields.getter();
  v5 = swift_release();
  static MetricsActivity.current.getter(v5);
  v6 = dispatch thunk of MetricsActivity.preloaded.getter();
  v7 = swift_release();
  static MetricsActivity.current.getter(v7);
  dispatch thunk of MetricsActivity.currentSearchAdRotationDataProvider.getter(v18);
  v8 = swift_release();
  v9 = type metadata accessor for SearchGhostHintMetricsTracker(0, v8);
  BaseObjectGraph.optional<A>(_:)(&v14, v9, v9);
  if (v14)
  {
    *((_QWORD *)&v16 + 1) = v9;
    v17 = &protocol witness table for SearchGhostHintMetricsTracker;
    *(_QWORD *)&v15 = v14;
  }
  else
  {
    v10 = 0uLL;
    v15 = 0u;
    v16 = 0u;
    v17 = 0;
  }
  static MetricsActivity.current.getter(v10);
  v11 = dispatch thunk of MetricsActivity.contextualAction.getter();
  v12 = swift_release();
  static MetricsFieldsContext.createFieldsContext(impressionsTracker:adamIdString:pageContextOverride:referrer:participatingInCrossfireReferral:pageFields:preloaded:advertRotationData:searchGhostHintData:contextualAction:impressionsAppendixData:)(v1, v2, 0, 0, 0, 0, 0, 0, v12, 0, v4, v6, v18, &v15, v11, 0, 0);
  swift_release();
  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease();
  sub_100010F2C((uint64_t)v18, &qword_1008095D8);
  return sub_100010F2C((uint64_t)&v15, (uint64_t *)&unk_1008095E0);
}

uint64_t sub_100434C10(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];

  v5 = type metadata accessor for OSLogger(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionOutcome(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for ActionOutcome.performed(_:), v9, v11);
  v14 = sub_10000E720(&qword_1008230B8, (uint64_t (*)(uint64_t))&type metadata accessor for ActionOutcome, (uint64_t)&protocol conformance descriptor for ActionOutcome);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v13, a1, v9, v14);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if ((a1 & 1) == 0)
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v16 = sub_10000EFC4(v5, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5);
    v17 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v18 = type metadata accessor for LogMessage(0);
    v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
    *(_OWORD *)(v19 + 16) = xmmword_100640720;
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    v20._countAndFlagsBits = 0x5B206E6F69746341;
    v20._object = (void *)0xE800000000000000;
    String.append(_:)(v20);
    v25 = a2;
    v21 = type metadata accessor for Action(0);
    _print_unlocked<A, B>(_:_:)(&v25, v26, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v22._object = (void *)0x80000001006A42B0;
    v22._countAndFlagsBits = 0xD000000000000025;
    String.append(_:)(v22);
    v26[3] = &type metadata for String;
    static LogMessage.safe(_:)(v26);
    sub_100010F2C((uint64_t)v26, &qword_100808F20);
    Logger.error(_:)(v19, v5, &protocol witness table for OSLogger);
    v23 = swift_bridgeObjectRelease(v19);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v23);
  }
  return result;
}

uint64_t sub_100434EAC(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  __n128 v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34[8];
  uint64_t v35;
  _QWORD v36[3];
  void *v37;

  v28 = a2;
  v31 = a1;
  v3 = type metadata accessor for OSLogger(0, a3);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v7 = sub_10000EFC4(v3, (uint64_t)qword_10086AB38);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v29 = v7;
  v30 = v8;
  v8(v6, v7, v3);
  v9 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v10 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = ((v12 + 32) & ~v12) + v11;
  v14 = v12 | 7;
  v15 = swift_allocObject(v9, v13, v12 | 7);
  v27 = xmmword_100640720;
  *(_OWORD *)(v15 + 16) = xmmword_100640720;
  v36[0] = 0;
  v36[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  v16._object = (void *)0x80000001006A4280;
  v16._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v16);
  v35 = v28;
  v17 = type metadata accessor for Action(0);
  _print_unlocked<A, B>(_:_:)(&v35, v36, v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v18._countAndFlagsBits = 93;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  v37 = &type metadata for String;
  static LogMessage.safe(_:)(v36);
  sub_100010F2C((uint64_t)v36, &qword_100808F20);
  Logger.error(_:)(v15, v3, &protocol witness table for OSLogger);
  v19 = swift_bridgeObjectRelease(v15);
  v20 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v20(v6, v3, v19);
  v30(v6, v29, v3);
  v21 = swift_allocObject(v9, v13, v14);
  *(_OWORD *)(v21 + 16) = v27;
  swift_getErrorValue(v31, v34, &v32);
  v22 = v32;
  v23 = v33;
  v37 = v33;
  v24 = sub_1000119C0(v36);
  (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v23 - 1) + 16))(v24, v22, v23);
  static LogMessage.safe(_:)(v36);
  sub_100010F2C((uint64_t)v36, &qword_100808F20);
  Logger.error(_:)(v21, v3, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v21);
  return ((uint64_t (*)(char *, uint64_t, __n128))v20)(v6, v3, v25);
}

uint64_t sub_100435158()
{
  uint64_t v0;

  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return ActionRunner.init()();
}

uint64_t sub_100435188()
{
  uint64_t v0;

  v0 = ActionRunner.deinit();
  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_1004351A4()
{
  return type metadata accessor for BaseActionRunner(0);
}

uint64_t sub_1004351AC(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  return sub_100434C10(a1, v2, a2);
}

uint64_t sub_1004351B4(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  return sub_100434EAC(a1, v2, a2);
}

id sub_100435214()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double MaxX;
  double v12;
  CGFloat v13;
  objc_super v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, "layoutSubviews");
  v1 = objc_msgSend(v0, "textLabel");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "frame");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v16.origin.x = v4;
    v16.origin.y = v6;
    v16.size.width = v8;
    v16.size.height = v10;
    MaxX = CGRectGetMaxX(v16);
  }
  else
  {
    MaxX = 0.0;
  }
  objc_msgSend(v0, "bounds");
  v12 = MaxX + 10.0;
  v13 = CGRectGetMaxX(v17) - MaxX + -20.0;
  objc_msgSend(v0, "bounds");
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension15DebugSliderCell_slider], "setFrame:", v12, 0.0, v13, CGRectGetHeight(v18));
}

uint64_t type metadata accessor for DebugSliderCell()
{
  return objc_opt_self(_TtC20ProductPageExtension15DebugSliderCell);
}

uint64_t sub_1004353B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v1 = swift_allocObject(v0, 112, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100642200;
  v2 = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  *(_QWORD *)(v1 + 48) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v1 + 56) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(_QWORD *)(v1 + 64) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v1 + 72) = &protocol witness table for UITraitLayoutDirection;
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = &protocol witness table for UITraitUserInterfaceStyle;
  result = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v1 + 96) = result;
  *(_QWORD *)(v1 + 104) = &protocol witness table for UITraitHorizontalSizeClass;
  qword_1008230F0 = v1;
  return result;
}

double sub_100435458()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100011980(v0, qword_100868990);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100868990);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

__n128 sub_1004354A8()
{
  __n128 result;
  __int128 v1;

  result = *(__n128 *)&UIEdgeInsetsZero.top;
  v1 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  xmmword_1008689B0 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)&qword_1008689C0 = v1;
  return result;
}

_QWORD *sub_1004354C4()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = type metadata accessor for SmallLockupLayout.Metrics(0);
  sub_100011980(v0, qword_1008230F8);
  v1 = (_QWORD *)sub_10000EFC4(v0, (uint64_t)qword_1008230F8);
  if (qword_100804E70 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  sub_10000EFC4(v0, (uint64_t)qword_100865F50);
  return Copyable.copyWithOverrides(in:)(v1, sub_1002B8EB0, 0, v0, &protocol witness table for SmallLockupLayout.Metrics);
}

_QWORD *sub_100435568()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = type metadata accessor for SmallLockupLayout.Metrics(0);
  sub_100011980(v0, qword_100823110);
  v1 = (_QWORD *)sub_10000EFC4(v0, (uint64_t)qword_100823110);
  if (qword_100805C80 != -1)
    swift_once(&qword_100805C80, sub_1004354C4);
  sub_10000EFC4(v0, (uint64_t)qword_1008230F8);
  return Copyable.copyWithOverrides(in:)(v1, sub_1000A0EA0, 0, v0, &protocol witness table for SmallLockupLayout.Metrics);
}

uint64_t sub_10043560C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  double left;
  double bottom;
  double right;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  void *v49;
  void *v50;
  char *v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  void *v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  char *v96;
  __n128 v97;
  void *v98;
  uint64_t v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  id v112;
  __n128 v113;
  void *v114;
  uint64_t v115;
  char *v116;
  void *v117;
  void *v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  char *v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t result;
  uint64_t v129;
  char *v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t ObjectType;
  uint64_t v139;
  uint64_t v140;
  objc_super v141;

  v139 = a1;
  ObjectType = swift_getObjectType();
  v2 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v2);
  v4 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_displayModeTransitionCoordinator] = 0;
  v6 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView;
  v7 = objc_allocWithZone((Class)UIScrollView);
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_shadowView;
  v10 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  v11 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView;
  v12 = type metadata accessor for RoundedCornerView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v14 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView;
  *(_QWORD *)&v8[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppPromotionMediaContainerView(0)), "init");
  v15 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView;
  v16 = objc_allocWithZone((Class)type metadata accessor for AppPromotionDetailPageContentView(0));
  *(_QWORD *)&v8[v15] = sub_1005ABA34(0);
  v17 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton;
  v18 = objc_allocWithZone((Class)type metadata accessor for CardHeaderButton(0));
  *(_QWORD *)&v8[v17] = sub_1000C6894(0);
  v19 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView;
  v20 = objc_allocWithZone((Class)type metadata accessor for AppPromotionLearnMoreView(0));
  *(_QWORD *)&v8[v19] = sub_10052EEB8(0);
  v21 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_separatorView;
  v22 = type metadata accessor for SeparatorView(0);
  *(_QWORD *)&v8[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22)), "init");
  v23 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView;
  v24 = type metadata accessor for SubscriptionLockupView();
  *(_QWORD *)&v8[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");
  v25 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView;
  *(_QWORD *)&v8[v25] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView] = 0;
  v26 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_dismissTapGestureRecognizer;
  *(_QWORD *)&v8[v26] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_videoBackgroundColor] = 0;
  v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_haveFlashedScrollIndicators] = 0;
  v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_isCollapsing] = 0;
  v27 = &v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaOverlayStyle];
  v28 = enum case for MediaOverlayStyle.matchSystem(_:);
  v29 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_includeBorderInDarkMode] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_defaultPageMargin] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator] = 0;

  v30 = (objc_class *)type metadata accessor for AppPromotionDetailPageView(0);
  v141.receiver = v8;
  v141.super_class = v30;
  v31 = objc_msgSendSuper2(&v141, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v35 = (char *)v31;
  objc_msgSend(v35, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v35, "setClipsToBounds:", 0);
  v36 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView;
  v37 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView];
  objc_msgSend(v37, "setClipsToBounds:", 0);
  objc_msgSend(v37, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(v35, "addSubview:", v37);
  v38 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_shadowView;
  if (qword_100804AF0 != -1)
    swift_once(&qword_100804AF0, sub_1001414AC);
  v39 = type metadata accessor for Shadow(0);
  v40 = sub_10000EFC4(v39, (uint64_t)qword_100865550);
  v41 = *(_QWORD *)(v39 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v4, v40, v39);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v4, 0, 1, v39);
  dispatch thunk of ShadowView.shadow.setter(v4);
  v42 = *(id *)&v35[v38];
  dispatch thunk of ShadowView.shouldAnimateBoundsChange.setter(1);

  v43 = *(void **)&v35[v36];
  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v35[v38]);
  v44 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView;
  v45 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView];
  objc_msgSend(v43, "addSubview:", v45);
  v46 = *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView];
  *(_QWORD *)(v46 + OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_delegate + 8) = &off_100754080;
  swift_unknownObjectWeakAssign(v47);
  objc_msgSend(v45, "addSubview:", v46);
  v140 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView;
  objc_msgSend(v45, "addSubview:", *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView]);
  v137 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView;
  objc_msgSend(v45, "addSubview:", *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView]);
  v136 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton;
  objc_msgSend(v45, "addSubview:", *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton]);
  v48 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_separatorView;
  v49 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_separatorView];
  v50 = (void *)objc_opt_self(UIColor);
  v51 = v49;
  v52 = objc_msgSend(v50, "labelColor");
  v53 = objc_msgSend(v52, "colorWithAlphaComponent:", 0.5);

  v134 = v36;
  v54 = OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_lineColor;
  v55 = *(void **)&v51[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_lineColor];
  *(_QWORD *)&v51[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_lineColor] = v53;
  v56 = v53;

  objc_msgSend(*(id *)&v51[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_lineView], "setBackgroundColor:", *(_QWORD *)&v51[v54]);
  v57 = *(void **)&v35[v44];
  objc_msgSend(v57, "addSubview:", *(_QWORD *)&v35[v48]);
  v135 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView;
  objc_msgSend(v57, "addSubview:", *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView]);
  v58 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView;
  v59 = *(id *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView];
  v60 = objc_msgSend(v50, "whiteColor");
  v61 = objc_msgSend(v60, "colorWithAlphaComponent:", 0.2);

  dispatch thunk of RoundedCornerView.borderColor.setter(v61);
  v62 = *(id *)&v35[v58];
  dispatch thunk of RoundedCornerView.borderWidth.setter(v62);

  v63 = *(void **)&v35[v58];
  objc_msgSend(v63, "setUserInteractionEnabled:", 0);
  objc_msgSend(v63, "setHidden:", 1);
  objc_msgSend(*(id *)&v35[v134], "addSubview:", v63);
  v64 = *(void **)&v35[v140];
  v65 = sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
  v66 = swift_allocObject(&unk_1007540A0, 24, 7);
  swift_unknownObjectWeakInit(v66 + 16, v35);
  v67 = v64;
  v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v68, 0, 0, 0, sub_10043A074, v66);
  v70 = OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_learnMoreButtonAction;
  v71 = *(void **)&v67[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_learnMoreButtonAction];
  *(_QWORD *)&v67[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_learnMoreButtonAction] = v69;
  v72 = v69;
  if (v71)
    objc_msgSend(*(id *)&v67[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_learnMoreButton], "removeAction:forControlEvents:", v71, 64);
  v134 = v65;
  v73 = *(_QWORD *)&v67[v70];
  if (v73)
    objc_msgSend(*(id *)&v67[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_learnMoreButton], "addAction:forControlEvents:", v73, 64);

  v74 = swift_allocObject(&unk_1007540A0, 24, 7);
  swift_unknownObjectWeakInit(v74 + 16, v35);
  v75 = *(char **)&v35[v140];
  v76 = (uint64_t *)(*(_QWORD *)&v75[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_lockupView]
                  + OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_lockupTapBlock);
  v77 = *v76;
  v78 = v76[1];
  *v76 = (uint64_t)sub_10043A07C;
  v76[1] = v74;
  swift_retain_n(v74, 2);
  v79 = v75;
  sub_100018908(v77, v78);
  v80 = *v76;
  v81 = v76[1];
  sub_100018918(*v76, v81);
  sub_10021003C(v80, v81);
  sub_100018908(v80, v81);
  v82 = *v76;
  v83 = v76[1];
  sub_100018918(*v76, v83);
  sub_10021003C(v82, v83);
  sub_100018908(v82, v83);

  swift_release();
  v84 = *(char **)&v35[v135];
  v85 = (uint64_t *)&v84[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_lockupTapBlock];
  v86 = *(_QWORD *)&v84[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_lockupTapBlock];
  v87 = *(_QWORD *)&v84[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_lockupTapBlock + 8];
  *v85 = (uint64_t)sub_10043A07C;
  v85[1] = v74;
  swift_retain_n(v74, 2);
  v88 = v84;
  sub_100018908(v86, v87);
  v89 = *v85;
  v90 = v85[1];
  sub_100018918(*v85, v90);
  sub_10021003C(v89, v90);
  sub_100018908(v89, v90);
  v91 = *v85;
  v92 = v85[1];
  sub_100018918(*v85, v92);
  sub_10021003C(v91, v92);
  sub_100018908(v91, v92);

  v135 = v74;
  swift_release();
  v93 = v137;
  v94 = *(void **)&v35[v137];
  v95 = swift_allocObject(&unk_1007540A0, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v35);
  v96 = v94;
  v98 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v97, 0, 0, 0, sub_10043A0A8, v95);
  v99 = OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_backButtonAction;
  v100 = *(void **)&v96[OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_backButtonAction];
  *(_QWORD *)&v96[OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_backButtonAction] = v98;
  v101 = v98;
  if (v100)
    objc_msgSend(*(id *)&v96[OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_backButton], "removeAction:forControlEvents:", v100, 64);
  v102 = *(_QWORD *)&v96[v99];
  v103 = v139;
  if (v102)
    objc_msgSend(*(id *)&v96[OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_backButton], "addAction:forControlEvents:", v102, 64);

  v104 = v136;
  v105 = *(id *)&v35[v136];
  v106 = objc_msgSend(v35, "traitCollection");
  v107 = objc_msgSend(v106, "userInterfaceStyle");

  v108 = type metadata accessor for AppPromotionDetailCloseButtonAppearanceCoordinator();
  v109 = swift_allocObject(v108, 48, 7);
  *(_WORD *)(v109 + 24) = 1;
  *(_QWORD *)(v109 + 16) = v105;
  *(_QWORD *)(v109 + 32) = v107;
  *(_QWORD *)(v109 + 40) = 0;
  *(_QWORD *)&v35[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator] = v109;
  swift_release();
  v110 = *(void **)&v35[v104];
  v111 = swift_allocObject(&unk_1007540A0, 24, 7);
  swift_unknownObjectWeakInit(v111 + 16, v35);
  v112 = v110;
  v114 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v113, 0, 0, 0, sub_10043A0B0, v111);
  objc_msgSend(v112, "addAction:forControlEvents:", v114, 64);

  v115 = qword_100805C68;
  v116 = v35;
  if (v115 != -1)
    swift_once(&qword_100805C68, sub_1004353B0);
  UIView.registerForTraitChanges<A>(_:handler:)(qword_1008230F0, sub_10043A084, 0, ObjectType);
  swift_unknownObjectRelease();

  v117 = *(void **)&v116[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_dismissTapGestureRecognizer];
  objc_msgSend(v117, "addTarget:action:", v116, "dismissTapGestureRecognized");
  objc_msgSend(v117, "setDelegate:", v116);
  objc_msgSend(v116, "addGestureRecognizer:", v117);
  sub_100438B60(0);
  v118 = *(void **)&v35[v140];
  v119 = *(void **)&v35[v93];
  v120 = type metadata accessor for VideoPlaybackCoordinator(0);
  v121 = *(void **)(v103 + qword_10086B3F0);
  if (v121)
  {
    v122 = type metadata accessor for AppPromotionDisplayModeTransitionCoordinator();
    swift_allocObject(v122, 72, 7);
    v123 = v116;
    v124 = v118;
    v125 = v119;
    v126 = v121;
    v127 = sub_1003EB4A0(0, (uint64_t)v116, (uint64_t)v118, (uint64_t)&off_10075E0F0, (uint64_t)v119, (uint64_t)&off_10075B2E0, v126);
    swift_release();
    swift_release();

    *(_QWORD *)&v123[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_displayModeTransitionCoordinator] = v127;
    swift_release();
    return (uint64_t)v123;
  }
  else
  {
    v129 = v120;
    v130 = v116;
    v131 = v118;
    v132 = v119;
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v129, v129);
    __break(1u);
  }
  return result;
}

void sub_1004362BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  char v37;
  _OWORD v38[2];
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];

  v3 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v3);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_10081C870);
  __chkstk_darwin(v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0, v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v38 - v18;
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v21 = (char *)Strong;
  v22 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate);
  if (v22)
  {
    v23 = v22;
    v24 = v22 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageViewController_learnMoreActionMetrics;
    swift_beginAccess(v22 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageViewController_learnMoreActionMetrics, v41, 0, 0);
    sub_100018ADC(v24, (uint64_t)v11, &qword_10081C870);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
    {
      v25 = &qword_10081C870;
      v26 = (uint64_t)v11;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v11, v13);
      v27 = *(_QWORD *)(v23 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageViewController_objectGraph)
          + qword_10086B3B0;
      swift_beginAccess(v27, v40, 0, 0);
      sub_100018ADC(v27, (uint64_t)v8, (uint64_t *)&unk_100809290);
      v28 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) != 1)
      {
        v39 = 0;
        memset(v38, 0, sizeof(v38));
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
        v30 = type metadata accessor for ImpressionMetrics(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
        v31 = type metadata accessor for BlankAction(0);
        swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
        v32 = BlankAction.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(v38, 0, 0, 0, 0, v16, v5);
        v33 = sub_10032CBA4();
        sub_10032D820(v32, v33, (uint64_t)v8);
        swift_release();
        v34 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v19, v13, v34);
        v35 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v8, v28, v35);
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v25 = (uint64_t *)&unk_100809290;
      v26 = (uint64_t)v8;
    }
    sub_100010F2C(v26, v25);
LABEL_9:
    swift_unknownObjectRelease();
  }
  v36 = *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_displayModeTransitionCoordinator];
  if (v36)
  {
    v37 = *(_BYTE *)(v36 + 16);
    *(_BYTE *)(v36 + 16) = 1;
    swift_retain(v36);
    sub_1003EA1D4((v37 & 1) == 0);
    swift_release();
  }

}

void sub_10043665C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate))
    {
      sub_10032D870();

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_1004366D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  char v37;
  _OWORD v38[2];
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];

  v3 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v3);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_10081C870);
  __chkstk_darwin(v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0, v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v38 - v18;
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v21 = (char *)Strong;
  v22 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate);
  if (v22)
  {
    v23 = v22;
    v24 = v22 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageViewController_backButtonActionMetrics;
    swift_beginAccess(v22 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageViewController_backButtonActionMetrics, v41, 0, 0);
    sub_100018ADC(v24, (uint64_t)v11, &qword_10081C870);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
    {
      v25 = &qword_10081C870;
      v26 = (uint64_t)v11;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v11, v13);
      v27 = *(_QWORD *)(v23 + OBJC_IVAR____TtC20ProductPageExtension36AppPromotionDetailPageViewController_objectGraph)
          + qword_10086B3B0;
      swift_beginAccess(v27, v40, 0, 0);
      sub_100018ADC(v27, (uint64_t)v8, (uint64_t *)&unk_100809290);
      v28 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) != 1)
      {
        v39 = 0;
        memset(v38, 0, sizeof(v38));
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
        v30 = type metadata accessor for ImpressionMetrics(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
        v31 = type metadata accessor for BlankAction(0);
        swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
        v32 = BlankAction.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(v38, 0, 0, 0, 0, v16, v5);
        v33 = sub_10032CBA4();
        sub_10032D820(v32, v33, (uint64_t)v8);
        swift_release();
        v34 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v19, v13, v34);
        v35 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v8, v28, v35);
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v25 = (uint64_t *)&unk_100809290;
      v26 = (uint64_t)v8;
    }
    sub_100010F2C(v26, v25);
LABEL_9:
    swift_unknownObjectRelease();
  }
  v36 = *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_displayModeTransitionCoordinator];
  if (v36)
  {
    v37 = *(_BYTE *)(v36 + 16);
    *(_BYTE *)(v36 + 16) = 0;
    swift_retain(v36);
    sub_1003EA1D4(v37);
    swift_release();
  }

}

void sub_100436A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    sub_1003ED8E0();
    if (swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate]))
    {
      sub_10032DB0C();

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_100436B28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  char *v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  void (*v30)(uint64_t, char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char v40;
  __n128 v41;
  uint64_t v42;
  double v43;
  char v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t, __n128);
  char *v57;
  char *v58;
  void **aBlock;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  void (*v63)();
  uint64_t v64;
  void **v65;
  uint64_t v66;
  char v67[24];

  v2 = v1;
  v4 = type metadata accessor for MediaOverlayStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v57 = (char *)&v54 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v54 - v13;
  v15 = v2 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaOverlayStyle;
  v16 = swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaOverlayStyle, v67, 0, 0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v17(v14, v15, v4, v16);
  v18 = sub_10000E720((unint64_t *)&unk_100819C10, (uint64_t (*)(uint64_t))&type metadata accessor for MediaOverlayStyle, (uint64_t)&protocol conformance descriptor for MediaOverlayStyle);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v14, a1, v4, v18);
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v14, v4);
  if ((a1 & 1) == 0)
  {
    v20 = *(char **)(v2 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView);
    ((void (*)(char *, uint64_t, uint64_t))v17)(v14, v15, v4);
    v21 = &v20[OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_mediaOverlayStyle];
    v22 = swift_beginAccess(&v20[OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_mediaOverlayStyle], &aBlock, 33, 0);
    v55 = v2;
    v56 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 24);
    v56(v21, v14, v4, v22);
    v23 = swift_endAccess(&aBlock);
    v24 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v17)(v11, v21, v4, v23);
    v25 = MediaOverlayStyle.userInterfaceStyle.getter(v24);
    v19(v11, v4);
    objc_msgSend(v20, "setOverrideUserInterfaceStyle:", v25);
    v19(v14, v4);
    v26 = v55;
    v27 = *(_QWORD *)(v55 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView);
    ((void (*)(char *, uint64_t, uint64_t))v17)(v14, v15, v4);
    v28 = (char *)(v27 + OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_mediaOverlayStyle);
    v29 = swift_beginAccess(v27 + OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_mediaOverlayStyle, &aBlock, 33, 0);
    v30 = (void (*)(uint64_t, char *, uint64_t, __n128))v56;
    v56(v28, v14, v4, v29);
    swift_endAccess(&aBlock);
    sub_1005AC1DC();
    v19(v14, v4);
    v31 = *(_QWORD *)(v26 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView);
    ((void (*)(char *, uint64_t, uint64_t))v17)(v14, v15, v4);
    v32 = v31 + OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_mediaOverlayStyle;
    v33 = swift_beginAccess(v31 + OBJC_IVAR____TtC20ProductPageExtension25AppPromotionLearnMoreView_mediaOverlayStyle, &aBlock, 33, 0);
    v30(v32, v14, v4, v33);
    swift_endAccess(&aBlock);
    sub_10052F4C4();
    v19(v14, v4);
    v34 = v57;
    ((void (*)(char *, uint64_t, uint64_t))v17)(v57, v15, v4);
    v35 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v58, enum case for MediaOverlayStyle.light(_:), v4);
    v36 = sub_10000E720((unint64_t *)&qword_100823210, (uint64_t (*)(uint64_t))&type metadata accessor for MediaOverlayStyle, (uint64_t)&protocol conformance descriptor for MediaOverlayStyle);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v4, v36);
    dispatch thunk of RawRepresentable.rawValue.getter(&v65, v4, v36);
    v37 = v60;
    v38 = v66;
    if (aBlock == v65 && v60 == v66)
    {
      v39 = swift_bridgeObjectRelease_n(v60, 2);
      ((void (*)(char *, uint64_t, __n128))v19)(v35, v4, v39);
      v19(v34, v4);
    }
    else
    {
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v60, v65, v66, 0);
      swift_bridgeObjectRelease(v37);
      v41 = swift_bridgeObjectRelease(v38);
      ((void (*)(char *, uint64_t, __n128))v19)(v35, v4, v41);
      v19(v34, v4);
      if ((v40 & 1) == 0)
      {
        v49 = *(_QWORD *)(v26
                        + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator);
        if (!v49)
          goto LABEL_13;
        *(_BYTE *)(v49 + 25) = 1;
        if (*(_BYTE *)(v49 + 24) != 1)
          goto LABEL_13;
        swift_retain(v49);
        v43 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, 0.0);
        v50 = *(_BYTE *)(v49 + 25);
        v45 = *(void **)(v49 + 16);
        v46 = (void *)objc_opt_self(UIView);
        v51 = swift_allocObject(&unk_1007540C8, 25, 7);
        *(_QWORD *)(v51 + 16) = v45;
        *(_BYTE *)(v51 + 24) = v50;
        v63 = sub_10009F76C;
        v64 = v51;
        aBlock = _NSConcreteStackBlock;
        v60 = 1107296256;
        v48 = &unk_1007540E0;
        goto LABEL_12;
      }
    }
    v42 = *(_QWORD *)(v26
                    + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator);
    if (!v42)
      goto LABEL_13;
    *(_BYTE *)(v42 + 25) = 2;
    if (*(_BYTE *)(v42 + 24) != 1)
      goto LABEL_13;
    swift_retain(v42);
    v43 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, 0.0);
    v44 = *(_BYTE *)(v42 + 25);
    v45 = *(void **)(v42 + 16);
    v46 = (void *)objc_opt_self(UIView);
    v47 = swift_allocObject(&unk_100754118, 25, 7);
    *(_QWORD *)(v47 + 16) = v45;
    *(_BYTE *)(v47 + 24) = v44;
    v63 = (void (*)())sub_1002C21DC;
    v64 = v47;
    aBlock = _NSConcreteStackBlock;
    v60 = 1107296256;
    v48 = &unk_100754130;
LABEL_12:
    v61 = sub_1000924A0;
    v62 = v48;
    v52 = _Block_copy(&aBlock);
    v53 = v45;
    swift_release();
    objc_msgSend(v46, "animateWithDuration:delay:options:animations:completion:", 4, v52, 0, v43, 0.0);
    _Block_release(v52);
    swift_release();
LABEL_13:
    sub_1004391A0();
    sub_100438F44(0);
  }
}

void (*sub_1004370E4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView);
  a1[1] = v1;
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_videoView);
  return sub_100437134;
}

void sub_100437134(uint64_t a1, char a2)
{
  void *v4;
  id v5;
  char v6;
  id v7;
  char v8;
  id v9;

  v9 = *(id *)a1;
  sub_10053C708();
  v4 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v5 = objc_msgSend(v4, "traitCollection");
    v6 = UITraitCollection.isSizeClassRegular.getter(v5);

    if ((v6 & 1) != 0)
      sub_100438678();
    objc_msgSend(v4, "setNeedsLayout");

  }
  else
  {

    v7 = objc_msgSend(v4, "traitCollection");
    v8 = UITraitCollection.isSizeClassRegular.getter(v7);

    if ((v8 & 1) != 0)
      sub_100438678();
    objc_msgSend(v4, "setNeedsLayout");
  }

}

uint64_t sub_100437224(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

uint64_t sub_1004372C0()
{
  char *v0;
  char *v1;
  uint64_t result;
  id v3;
  char v4;
  void *v5;
  double v6;
  double v7;
  CGFloat v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t Strong;
  char *v13;
  id v14;
  char v15;
  double v16;
  double v17;
  double v18;
  double *v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  double v23;
  objc_super v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v1 = v0;
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for AppPromotionDetailPageView(0);
  objc_msgSendSuper2(&v24, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  result = CGRectIsEmpty(v25);
  if ((result & 1) == 0)
  {
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = UITraitCollection.isSizeClassRegular.getter(v3);

    if ((v4 & 1) != 0)
      sub_1004377D0();
    else
      sub_1004375A0();
    v5 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView];
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView], "bounds");
    objc_msgSend(v5, "setContentSize:", v6, v7);
    objc_msgSend(v1, "bounds");
    objc_msgSend(v5, "setBounds:", 0.0, 0.0);
    objc_msgSend(v1, "bounds");
    v8 = CGRectGetWidth(v26) * 0.5;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v5, "setCenter:", v8, CGRectGetHeight(v27) * 0.5);
    v9 = objc_msgSend(v1, "traitCollection");
    v10 = UITraitCollection.isSizeClassRegular.getter(v9);

    if ((v10 & 1) != 0)
      sub_1004385BC();
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator];
    if (v11)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView], "bounds", swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator]).n128_f64[0]);
      *(CGFloat *)(v11 + 40) = CGRectGetHeight(v28);
      swift_release();
    }
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView]+ OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_videoView);
    if (Strong)
    {
      v13 = (char *)Strong;
      v14 = objc_msgSend(v1, "traitCollection");
      v15 = UITraitCollection.isSizeClassCompact.getter(v14);

      if ((v15 & 1) != 0)
      {
        objc_msgSend(v13, "frame");
        v23 = v16 + -53.0;
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton], "frame");
        v18 = v17 + 25.0;
        v19 = (double *)&v13[qword_10086A9F8];
        v20 = *(float64x2_t *)&v13[qword_10086A9F8];
        v21 = *(float64x2_t *)&v13[qword_10086A9F8 + 16];
        *(_OWORD *)v19 = xmmword_100656060;
        v22.f64[0] = v23;
        v19[2] = v23;
        v19[3] = v18;
        v22.f64[1] = v18;
        if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)xmmword_100656060, v20), (int32x4_t)vceqq_f64(v22, v21))), 0xFuLL))) & 1) == 0)sub_1004EC1AC();
      }

    }
    sub_100437B1C();
    return sub_1004380C0();
  }
  return result;
}

id sub_1004375A0()
{
  char *v0;
  char *v1;
  double Height;
  uint64_t v3;
  double Width;
  double v5;
  double v6;
  double v7;
  void *v8;
  objc_class *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  objc_super v23;
  objc_super v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v1 = v0;
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v25);
  if (qword_100805C70 != -1)
    swift_once(&qword_100805C70, sub_100435458);
  v3 = type metadata accessor for AspectRatio(0);
  sub_10000EFC4(v3, (uint64_t)qword_100868990);
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v26);
  v5 = AspectRatio.height(fromWidth:)(Width);
  if (v5 >= Height)
    v5 = Height;
  v6 = ceil(v5);
  objc_msgSend(v0, "bounds");
  v7 = CGRectGetWidth(v27);
  v8 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView];
  v9 = (objc_class *)type metadata accessor for AppPromotionMediaContainerView(0);
  v24.receiver = v8;
  v24.super_class = v9;
  objc_msgSendSuper2(&v24, "frame");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v23.receiver = v8;
  v23.super_class = v9;
  objc_msgSendSuper2(&v23, "setFrame:", 0.0, 0.0, v7, v6);
  sub_10053AFA4(v11, v13, v15, v17);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView], "setFrame:", 0.0, 0.0, v7, v6);
  v18 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView];
  v19 = sub_1005AB0C0(v7, v6);
  v21 = v20;
  objc_msgSend(v18, "setFrame:", 0.0, 0.0, v19, v20);
  objc_msgSend(v18, "setNeedsLayout");
  objc_msgSend(v18, "layoutIfNeeded");
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_shadowView], "setFrame:", 0.0, 0.0, v19, v21);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView], "setFrame:", 0.0, 0.0, v19, v21);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView], "setFrame:", 0.0, 0.0, v19, v21);
}

id sub_1004377D0()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  double Height;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  objc_class *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  id result;
  CGFloat v38;
  CGFloat v39;
  objc_super v40;
  objc_super v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v1 = v0;
  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_shadowView], "setFrame:", 0.0, 0.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView], "setFrame:", 0.0, 0.0, v3, v5);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView], "setFrame:", 0.0, 0.0, v3, v5);
  if (qword_100805C70 != -1)
    swift_once(&qword_100805C70, sub_100435458);
  v6 = type metadata accessor for AspectRatio(0);
  sub_10000EFC4(v6, (uint64_t)qword_100868990);
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v42);
  v38 = ceil(AspectRatio.width(fromHeight:)(Height));
  objc_msgSend(v0, "bounds");
  v39 = CGRectGetHeight(v43);
  v8 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView];
  v9 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v1, "bounds");
  v11 = CGRect.withLayoutDirection(using:relativeTo:)(v9, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = (objc_class *)type metadata accessor for AppPromotionMediaContainerView(0);
  v41.receiver = v8;
  v41.super_class = v18;
  objc_msgSendSuper2(&v41, "frame");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v40.receiver = v8;
  v40.super_class = v18;
  objc_msgSendSuper2(&v40, "setFrame:", v11, v13, v15, v17);
  sub_10053AFA4(v20, v22, v24, v26);
  v44.origin.x = 0.0;
  v44.origin.y = 0.0;
  v44.size.width = v38;
  v44.size.height = v39;
  CGRectGetMaxX(v44);
  objc_msgSend(v1, "bounds");
  CGRectGetWidth(v45);
  v46.origin.x = 0.0;
  v46.origin.y = 0.0;
  v46.size.width = v38;
  v46.size.height = v39;
  CGRectGetWidth(v46);
  objc_msgSend(v1, "bounds");
  CGRectGetHeight(v47);
  v27 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v1, "bounds");
  v29 = CGRect.withLayoutDirection(using:relativeTo:)(v27, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v36 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView];
  objc_msgSend(v36, "setFrame:", v29, v31, v33, v35);
  objc_msgSend(v36, "setNeedsLayout");
  objc_msgSend(v36, "layoutIfNeeded");
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView], "setFrame:", v29, v31, v33, v35);
  result = *(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView];
  if (result)
    return objc_msgSend(result, "setFrame:", v29, v31, v33, v35);
  return result;
}

uint64_t sub_100437B1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  char *v25;
  uint64_t v26;
  objc_class *v27;
  id v28;
  double v29;
  double v30;
  double v31;
  uint64_t (*v32)(_QWORD, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  __n128 v36;
  double v37;
  id v38;
  double v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  id v45;
  char v46;
  double v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double MinX;
  double v52;
  char *v53;
  objc_class *v54;
  void *v55;
  void *v56;
  void (*v58)(char *, uint64_t, uint64_t);
  double v59;
  CGFloat v60;
  CGFloat v61;
  uint64_t (*v62)(_QWORD, uint64_t);
  char *v63;
  objc_class *v64;
  double v65;
  objc_super v66;
  objc_super v67;
  objc_super v68;
  char v69[24];
  objc_super v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v1 = v0;
  v2 = type metadata accessor for Separator(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  *(_QWORD *)&v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v58 - v11;
  v13 = objc_msgSend(v0, "traitCollection", v10);
  v14 = UITraitCollection.isSizeClassCompact.getter(v13);

  if ((v14 & 1) != 0)
    v15 = 16.0;
  else
    v15 = 20.0;
  v63 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView];
  objc_msgSend(v63, "frame");
  v61 = CGRect.subtracting(insets:)(v15, v15, v15, v15, v16, v17, v18, v19);
  v60 = v20;
  v22 = v21;
  v24 = v23;
  v25 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView];
  if (qword_100804FF8 != -1)
    swift_once(&qword_100804FF8, sub_10023F390);
  v26 = sub_10000EFC4(v6, (uint64_t)qword_1008663A8);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v58(v12, v26, v6);
  v27 = (objc_class *)type metadata accessor for SubscriptionLockupView();
  v70.receiver = v25;
  v70.super_class = v27;
  v64 = v27;
  objc_msgSendSuper2(&v70, "layoutMargins");
  v28 = objc_msgSend(v25, "traitCollection");
  v29 = v22;
  v59 = sub_10020FBC4((uint64_t)v12, (uint64_t)v28, v22, v24);
  v31 = v30;

  v32 = *(uint64_t (**)(_QWORD, uint64_t))(v7 + 8);
  v33 = v6;
  v62 = v32;
  v32(v12, v6);
  v34 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_separatorView];
  v35 = &v34[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
  v36 = swift_beginAccess(&v34[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v69, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v5, v35, v2, v36);
  v37 = Separator.height(in:)(v34);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v38 = objc_msgSend(v1, "traitCollection");
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v38) & 1) != 0)
  {
    v39 = v65;
    if (qword_100805C88 != -1)
      swift_once(&qword_100805C88, sub_100435568);
    v40 = qword_100823110;
  }
  else
  {
    v39 = v65;
    if (qword_100805C80 != -1)
      swift_once(&qword_100805C80, sub_1004354C4);
    v40 = qword_1008230F8;
  }
  v41 = sub_10000EFC4(v6, (uint64_t)v40);
  v58(*(char **)&v39, v41, v6);

  SmallLockupLayout.Metrics.artworkSize.getter(v42);
  v44 = (v31 - v43) * 0.5;
  v45 = objc_msgSend(v1, "traitCollection");
  v46 = UITraitCollection.prefersAccessibilityLayouts.getter(v45);

  if ((v46 & 1) != 0)
    v47 = 18.0;
  else
    v47 = 18.0 - v44;
  v48 = v24 + v44;
  v65 = v31;
  v49 = v61;
  v71.origin.x = v61;
  v50 = v60;
  v71.origin.y = v60;
  v71.size.width = v29;
  v71.size.height = v48;
  MinX = CGRectGetMinX(v71);
  v72.origin.x = v49;
  v72.origin.y = v50;
  v72.size.width = v29;
  v72.size.height = v48;
  objc_msgSend(v34, "setFrame:", MinX, CGRectGetMaxY(v72) - (v37 + v31 + v47), v29, v37);
  v73.origin.x = v49;
  v73.origin.y = v50;
  v73.size.width = v29;
  v73.size.height = v48;
  v52 = CGRectGetMinX(v73);
  objc_msgSend(v34, "frame");
  objc_msgSend(v25, "setFrame:", v52, v47 + CGRectGetMaxY(v74), v59, v65);
  v53 = v63;
  objc_msgSend(v34, "setHidden:", objc_msgSend(*(id *)&v63[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_separatorView], "isHidden") ^ 1);
  objc_msgSend(v25, "setHidden:", objc_msgSend(*(id *)&v53[OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_lockupView], "isHidden") ^ 1);
  if (qword_100805C78 != -1)
    swift_once(&qword_100805C78, sub_1004354A8);
  v54 = v64;
  v68.receiver = v25;
  v68.super_class = v64;
  objc_msgSendSuper2(&v68, "setLayoutMargins:", xmmword_1008689B0, *(double *)&qword_1008689C0, unk_1008689C8);
  v55 = *(void **)&v25[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView];
  v67.receiver = v25;
  v67.super_class = v54;
  objc_msgSendSuper2(&v67, "layoutMargins");
  objc_msgSend(v55, "setLayoutMargins:");
  v56 = *(void **)&v25[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
  v66.receiver = v25;
  v66.super_class = v54;
  objc_msgSendSuper2(&v66, "layoutMargins");
  objc_msgSend(v56, "setLayoutMargins:");
  return v62(*(_QWORD *)&v39, v33);
}

uint64_t sub_1004380C0()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  id v6;
  char v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGRect v19;
  CGRect v20;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton];
  v3 = type metadata accessor for AppPromotionDetailPageView(0);
  LayoutMarginsAware<>.layoutFrame.getter(v3);
  objc_msgSend(v2, "sizeThatFits:", v4, v5);
  v6 = objc_msgSend(v0, "traitCollection");
  v7 = UITraitCollection.isSizeClassCompact.getter(v6);

  if ((v7 & 1) != 0)
    v8 = 16.0;
  else
    v8 = 20.0;
  objc_msgSend(v1, "bounds");
  CGRectGetMaxX(v19);
  objc_msgSend(v1, "bounds");
  CGRectGetMinY(v20);
  v9 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v1, "bounds");
  v11 = CGRect.withLayoutDirection(using:relativeTo:)(v9, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;

  objc_msgSend(v2, "setFrame:", v11, v13, v15, v17);
  return dispatch thunk of Button.touchOutsideMargin.setter(v8, v8, v8, v8);
}

id sub_10043822C()
{
  char *v0;
  char *v1;
  id v2;
  char v3;
  void *v4;
  double v5;
  double v6;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.isSizeClassRegular.getter(v2);

  if ((v3 & 1) != 0)
    sub_1004377D0();
  else
    sub_1004375A0();
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView], "layoutIfNeeded");
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView], "bounds");
  return objc_msgSend(v4, "setContentSize:", v5, v6);
}

double sub_100438360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  double result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003ED8E0();
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate);
  if (Strong)
  {
    v7 = (void *)Strong;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for StoreViewControllerLifecycleEvent.didDisappear(_:), v1);
    v8 = type metadata accessor for AppPromotionDetailPagePresenter(0);
    v9 = sub_10000E720(&qword_10081C878, (uint64_t (*)(uint64_t))&type metadata accessor for AppPromotionDetailPagePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
    MetricsPagePresenter.observe(lifecycleEvent:)(v4, v8, v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);
    *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_1004384C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  double v4;
  double v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  CGRect v10;
  CGRect v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView);
  v2 = OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_haveFlashedScrollIndicators;
  if ((*(_BYTE *)(v1
                 + OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_haveFlashedScrollIndicators) & 1) == 0)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_primaryContent);
    objc_msgSend(v3, "contentSize");
    v5 = v4;
    objc_msgSend(v3, "bounds");
    if (CGRectGetHeight(v10) < v5)
    {
      objc_msgSend(v3, "flashScrollIndicators");
      *(_BYTE *)(v1 + v2) = 1;
    }
  }
  v6 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_haveFlashedScrollIndicators;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_haveFlashedScrollIndicators) & 1) == 0)
  {
    v7 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView);
    objc_msgSend(v7, "contentSize");
    v9 = v8;
    objc_msgSend(v7, "bounds");
    if (CGRectGetHeight(v11) < v9)
    {
      objc_msgSend(v7, "flashScrollIndicators");
      *(_BYTE *)(v0 + v6) = 1;
    }
  }
}

id sub_1004385BC()
{
  char *v0;
  char *v1;
  id v2;
  char v3;
  _BOOL8 v4;
  void *v5;
  double v6;
  double v7;
  CGRect v9;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.isSizeClassCompact.getter(v2);

  if ((v3 & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    v5 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView]
                  + OBJC_IVAR____TtC20ProductPageExtension33AppPromotionDetailPageContentView_primaryContent);
    objc_msgSend(v5, "contentSize");
    v7 = v6;
    objc_msgSend(v5, "bounds");
    v4 = CGRectGetHeight(v9) >= v7;
  }
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView], "setAlwaysBounceVertical:", v4);
}

id sub_100438678()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  id v17;
  char *v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  char *v26;
  void *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView];
  v3 = v2 + OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_videoView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_videoView);

  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_artworkView);
  v6 = objc_msgSend(v5, "isHidden");
  v7 = v6;
  v8 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView;
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView];
  if (!Strong && (v6 & 1) != 0)
  {
    if (v9)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView], "removeFromSuperview");
      v10 = *(void **)&v1[v8];
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)&v1[v8] = 0;

    v19 = *(_QWORD *)&v1[v8];
    if (v19)
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView], "insertSubview:atIndex:", v19, 0);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  if (v9)
  {
    v11 = type metadata accessor for VideoMirrorView();
    if (swift_dynamicCastClass(v9, v11))
    {
      if ((v7 & 1) != 0)
        goto LABEL_25;
      goto LABEL_18;
    }
  }
  if (Strong)
  {
    v12 = (char *)swift_unknownObjectWeakLoadStrong(v3);
    v13 = *(_OWORD *)&CATransform3DIdentity.m33;
    v37 = *(_OWORD *)&CATransform3DIdentity.m31;
    v38 = v13;
    v14 = *(_OWORD *)&CATransform3DIdentity.m43;
    v39 = *(_OWORD *)&CATransform3DIdentity.m41;
    v40 = v14;
    v15 = *(_OWORD *)&CATransform3DIdentity.m13;
    v33 = *(_OWORD *)&CATransform3DIdentity.m11;
    v34 = v15;
    v16 = *(_OWORD *)&CATransform3DIdentity.m23;
    v35 = *(_OWORD *)&CATransform3DIdentity.m21;
    v36 = v16;
    v17 = objc_allocWithZone((Class)type metadata accessor for VideoMirrorView());
    v18 = sub_10022A8FC(v12, (uint64_t *)&v33, 1.0, 0.0);
LABEL_19:
    v26 = v18;
    v27 = *(void **)&v1[v8];
    if (v27)
    {
      objc_msgSend(v27, "removeFromSuperview", v33, v34, v35, v36, v37, v38, v39, v40);
      v28 = *(void **)&v1[v8];
    }
    else
    {
      v28 = 0;
    }
    *(_QWORD *)&v1[v8] = v26;
    v29 = v26;

    v30 = *(_QWORD *)&v1[v8];
    if (v30)
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView], "insertSubview:atIndex:", v30, 0);
    objc_msgSend(v1, "setNeedsLayout", v33, v34, v35, v36, v37, v38, v39, v40);

    goto LABEL_25;
  }
  if (v9)
    v20 = 1;
  else
    v20 = v7;
  if ((v20 & 1) == 0)
  {
LABEL_18:
    v21 = *(_OWORD *)&CATransform3DIdentity.m33;
    v37 = *(_OWORD *)&CATransform3DIdentity.m31;
    v38 = v21;
    v22 = *(_OWORD *)&CATransform3DIdentity.m43;
    v39 = *(_OWORD *)&CATransform3DIdentity.m41;
    v40 = v22;
    v23 = *(_OWORD *)&CATransform3DIdentity.m13;
    v33 = *(_OWORD *)&CATransform3DIdentity.m11;
    v34 = v23;
    v24 = *(_OWORD *)&CATransform3DIdentity.m23;
    v35 = *(_OWORD *)&CATransform3DIdentity.m21;
    v36 = v24;
    objc_allocWithZone((Class)type metadata accessor for MirrorView());
    v25 = v5;
    v18 = sub_1000D1780(v5, (uint64_t *)&v33, 1.0, 0.0);
    goto LABEL_19;
  }
LABEL_25:
  v31 = *(void **)&v1[v8];
  if (v31)
    objc_msgSend(v31, "setHidden:", 0);
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_1004388DC(char a1, char a2)
{
  void *v2;
  id v5;
  char v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t Strong;
  char *v14;
  void *v15;
  _QWORD v16[6];

  v5 = objc_msgSend(v2, "traitCollection");
  v6 = UITraitCollection.isSizeClassRegular.getter(v5);

  if ((v6 & 1) == 0)
  {
    if ((a1 & 1) != 0)
      v7 = 1.0;
    else
      v7 = 0.0;
    v8 = swift_allocObject(&unk_1007540A0, 24, 7);
    v9 = v8 + 16;
    swift_unknownObjectWeakInit(v8 + 16);
    v10 = swift_allocObject(&unk_1007541B8, 32, 7);
    *(_QWORD *)(v10 + 16) = v8;
    *(double *)(v10 + 24) = v7;
    if ((a2 & 1) != 0)
    {
      v11 = (void *)objc_opt_self(UIView);
      v16[4] = sub_10043A118;
      v16[5] = v10;
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 1107296256;
      v16[2] = sub_1000924A0;
      v16[3] = &unk_1007541D0;
      v12 = _Block_copy(v16);
      swift_retain(v10);
      swift_release();
      objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 4, v12, 0, 0.3, 0.0);
      swift_release();
      _Block_release(v12);
    }
    else
    {
      swift_beginAccess(v9, v16, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v9);
      if (Strong)
      {
        v14 = (char *)Strong;
        v15 = *(void **)(Strong + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView);
        swift_retain(v8);
        objc_msgSend(v15, "setAlpha:", v7);
        objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton], "setAlpha:", v7);
        swift_release();
        swift_release();

      }
      else
      {
        swift_release();
      }
    }
  }
}

void sub_100438AD4(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView), "setAlpha:", a2);
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton], "setAlpha:", a2);

  }
}

id sub_100438B60(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  char v5;
  double v6;
  double v7;
  uint64_t v8;
  void *Strong;
  double v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  int v16;

  v2 = v1;
  sub_100438CE0(a1);
  sub_100438F44(a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v5 & 1) != 0)
    v6 = -*(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_defaultPageMargin];
  else
    v6 = 0.0;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView], "setScrollIndicatorInsets:", 0.0, v6);
  sub_100439520();
  sub_1004391A0();
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_displayModeTransitionCoordinator];
  if (v8)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v8 + 24);
    *(_QWORD *)&v10 = swift_retain(v8).n128_u64[0];
    if (Strong)
    {
      v11 = objc_msgSend(Strong, "traitCollection", v10);

      if (v11)
      {
        v12 = v11;
        v13 = UITraitCollection.isSizeClassCompact.getter(v12);
        if ((v13 & 1) != 0)
          LODWORD(v11) = UITraitCollection.prefersAccessibilityLayouts.getter(v13);
        else
          LODWORD(v11) = 0;

        if (!a1)
        {
LABEL_18:
          if ((v11 & 1) == 0)
          {
LABEL_20:
            *(_QWORD *)&v7 = swift_release().n128_u64[0];
            return objc_msgSend(v2, "setNeedsLayout", v7);
          }
LABEL_19:
          sub_1003EA1D4(0);
          goto LABEL_20;
        }
LABEL_11:
        v14 = a1;
        v15 = UITraitCollection.isSizeClassCompact.getter(v14);
        if ((v15 & 1) != 0)
        {
          v16 = UITraitCollection.prefersAccessibilityLayouts.getter(v15);

          if (((v11 ^ v16) & 1) == 0)
            goto LABEL_20;
        }
        else
        {

          if ((v11 & 1) == 0)
            goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
    else
    {
      LODWORD(v11) = 0;
    }
    if (!a1)
      goto LABEL_18;
    goto LABEL_11;
  }
  return objc_msgSend(v2, "setNeedsLayout", v7);
}

void sub_100438CE0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  double v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  void *Strong;
  id v19;
  char v20;
  void *v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    v9 = objc_msgSend(a1, "horizontalSizeClass", v6);
  else
    v9 = 0;
  v10 = objc_msgSend(v2, "traitCollection");
  v11 = objc_msgSend(v10, "horizontalSizeClass");

  if (!a1 || v9 != v11)
  {
    sub_1004385BC();
    v12 = objc_msgSend(v2, "traitCollection");
    v13 = UITraitCollection.isSizeClassRegular.getter(v12);

    if ((v13 & 1) != 0)
      v14 = 12.0;
    else
      v14 = 8.0;
    v15 = enum case for CornerStyle.continuous(_:);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    v16(v8, enum case for CornerStyle.continuous(_:), v4);
    dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v8, v14);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v16(v8, v15, v4);
    dispatch thunk of ShadowView.setCorner(radius:style:)(v8, v14);
    v17(v8, v4);
    v16(v8, v15, v4);
    dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v8, v14);
    v17(v8, v4);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView]+ OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_videoView);
    objc_msgSend(Strong, "_setCornerRadius:", v14);

    v19 = objc_msgSend(v2, "traitCollection");
    v20 = UITraitCollection.isSizeClassRegular.getter(v19);

    if ((v20 & 1) != 0)
    {
      sub_100438678();
    }
    else
    {
      v21 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView];
      if (v21)
        objc_msgSend(v21, "setHidden:", 1);
    }
    objc_msgSend(v2, "setNeedsLayout");
  }
}

void sub_100438F44(id a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  _BOOL8 v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  char v13;
  double v14;
  char v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v21[6];

  if (a1)
    v3 = objc_msgSend(a1, "userInterfaceStyle");
  else
    v3 = 0;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");

  if (!a1 || v3 != v5)
  {
    if (v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_includeBorderInDarkMode] == 1)
    {
      v6 = objc_msgSend(v1, "traitCollection");
      v7 = objc_msgSend(v6, "userInterfaceStyle");

      v8 = v7 != (id)2;
    }
    else
    {
      v8 = 1;
    }
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView], "setHidden:", v8);
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator];
    if (v9)
    {
      v10 = objc_msgSend(v1, "traitCollection", swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator]).n128_f64[0]);
      v11 = objc_msgSend(v10, "userInterfaceStyle");

      v12 = *(id *)(v9 + 32);
      *(_QWORD *)(v9 + 32) = v11;
      if (v11 == v12)
      {
        swift_release();
      }
      else
      {
        v13 = *(_BYTE *)(v9 + 24);
        v14 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, 0.0);
        if ((v13 & 1) != 0)
          v15 = *(_BYTE *)(v9 + 25);
        else
          v15 = 0;
        v16 = *(void **)(v9 + 16);
        v17 = (void *)objc_opt_self(UIView);
        v18 = swift_allocObject(&unk_100754168, 25, 7);
        *(_QWORD *)(v18 + 16) = v16;
        *(_BYTE *)(v18 + 24) = v15;
        v21[4] = sub_1002C21DC;
        v21[5] = v18;
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 1107296256;
        v21[2] = sub_1000924A0;
        v21[3] = &unk_100754180;
        v19 = _Block_copy(v21);
        v20 = v16;
        swift_release();
        objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 4, v19, 0, v14, 0.0);
        _Block_release(v19);
        swift_release();
      }
    }
  }
}

void sub_1004391A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  char *v26;
  id v27;
  char *v28;
  id v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  id v39;
  _QWORD v40[4];
  _BYTE v41[24];

  v1 = v0;
  v2 = type metadata accessor for MediaOverlayStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - v7;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_separatorView);
  v10 = v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaOverlayStyle;
  v11 = swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaOverlayStyle, v41, 0, 0);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13 = v12(v8, v10, v2, v11);
  v14 = MediaOverlayStyle.userInterfaceStyle.getter(v13);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v8, v2);
  objc_msgSend(v9, "setOverrideUserInterfaceStyle:", v14);
  v16 = *(char **)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView);
  v17 = ((uint64_t (*)(char *, uint64_t, uint64_t))v12)(v8, v10, v2);
  v18 = MediaOverlayStyle.userInterfaceStyle.getter(v17);
  v15(v8, v2);
  objc_msgSend(v16, "setOverrideUserInterfaceStyle:", v18);
  v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v12)(v5, v10, v2);
  v20 = MediaOverlayStyle.userInterfaceStyle.getter(v19);
  v38 = v15;
  v15(v5, v2);
  v21 = &kCAFilterPlusD;
  if (v20 != 1)
    v21 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v21);
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v40[3] = sub_100018B6C(0, (unint64_t *)&unk_10080CDE8, NSString_ptr);
  v40[0] = v24;
  v39 = v24;
  sub_1005185C0((uint64_t)v40);
  v25 = OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView;
  v26 = *(char **)&v16[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView];
  if (objc_msgSend(v26, "isHidden"))
    v26 = *(char **)&v16[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
  v27 = objc_msgSend(*(id *)&v26[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel], "layer");
  objc_msgSend(v27, "setCompositingFilter:", v39);

  v28 = *(char **)&v16[v25];
  if (objc_msgSend(v28, "isHidden"))
    v28 = *(char **)&v16[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
  v29 = objc_msgSend(*(id *)(*(_QWORD *)&v28[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton]+ OBJC_IVAR____TtC20ProductPageExtension11OfferButton_subtitleLabel), "layer");
  objc_msgSend(v29, "setCompositingFilter:", v39);

  v30 = *(char **)&v16[v25];
  if (objc_msgSend(v30, "isHidden"))
    v30 = *(char **)&v16[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_appLockupView];
  v31 = *(void **)&v30[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
  ((void (*)(char *, uint64_t, uint64_t))v12)(v8, v10, v2);
  v32 = v31;
  v33 = MediaOverlayStyle.userInterfaceStyle.getter(v32);
  v38(v8, v2);
  if (v33 == 1)
  {
    v34 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v35 = (id)static UIColor.appTint.getter(v34);
  }
  else
  {
    v35 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  }
  v36 = v35;
  objc_msgSend(v32, "setTintColor:", v35);

}

uint64_t sub_100439520()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  char *v14;
  char *v15;
  __n128 v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v20[24];

  v1 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v20[-v7 - 8];
  v9 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView];
  v10 = objc_msgSend(v0, "traitCollection", v6);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v10) & 1) != 0)
  {
    if (qword_100805C88 != -1)
      swift_once(&qword_100805C88, sub_100435568);
    v11 = qword_100823110;
  }
  else
  {
    if (qword_100805C80 != -1)
      swift_once(&qword_100805C80, sub_1004354C4);
    v11 = qword_1008230F8;
  }
  v12 = sub_10000EFC4(v1, (uint64_t)v11);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16);
  v13(v8, v12, v1);

  v14 = *(char **)&v9[OBJC_IVAR____TtC20ProductPageExtension22SubscriptionLockupView_iapLockupView];
  v13(v4, (uint64_t)v8, v1);
  v15 = &v14[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
  v16 = swift_beginAccess(&v14[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v20, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v2 + 24))(v15, v4, v1, v16);
  swift_endAccess(v20);
  objc_msgSend(v14, "setNeedsLayout");
  v17 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v17(v4, v1);
  objc_msgSend(v9, "setNeedsLayout");
  return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v8, v1);
}

uint64_t sub_100439730(uint64_t a1, id a2)
{
  char *v2;
  char *v3;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  char *v10;
  id v11;
  char v12;
  uint64_t Strong;
  CGPoint v15;
  CGRect v16;

  v3 = v2;
  objc_msgSend(a2, "locationInView:", v3);
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v3, "hitTest:withEvent:", 0);
  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_dismissTapGestureRecognizer]) & 1) == 0)
  {

    return 1;
  }
  objc_msgSend(v3, "bounds");
  v15.x = v6;
  v15.y = v8;
  if (CGRectContainsPoint(v16, v15))
  {
    if (v9)
    {
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v10 = v3;
      v11 = v9;
      v12 = static NSObject.== infix(_:_:)(v11, v10);

      if ((v12 & 1) != 0)
      {
        Strong = swift_unknownObjectWeakLoadStrong(&v10[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate]);

        if (Strong)
        {
          swift_unknownObjectRelease();
          return 1;
        }
      }
      else
      {

      }
    }
  }
  else
  {

  }
  return 0;
}

id sub_100439A7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppPromotionDetailPageView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100439BF0()
{
  return type metadata accessor for AppPromotionDetailPageView(0);
}

uint64_t type metadata accessor for AppPromotionDetailPageView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008231E0;
  if (!qword_1008231E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionDetailPageView);
  return result;
}

uint64_t sub_100439C34(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[21];

  v4[0] = &unk_100661FC0;
  v4[1] = &unk_100661FD8;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = &unk_100661FD8;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = &unk_100661FD8;
  v4[15] = &unk_100661FF0;
  v4[16] = &unk_100661FF0;
  result = type metadata accessor for MediaOverlayStyle(319);
  if (v3 <= 0x3F)
  {
    v4[17] = *(_QWORD *)(result - 8) + 64;
    v4[18] = &unk_100661FF0;
    v4[19] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[20] = &unk_100661FD8;
    return swift_updateClassMetadata2(a1, 256, 21, v4, a1 + 80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppPromotionDetailPageView.DisplayMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100439D48 + 4 * byte_100661F75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100439D7C + 4 * asc_100661F70[v4]))();
}

uint64_t sub_100439D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100439D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100439D8CLL);
  return result;
}

uint64_t sub_100439D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100439DA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100439DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100439DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppPromotionDetailPageView.DisplayMode()
{
  return &type metadata for AppPromotionDetailPageView.DisplayMode;
}

unint64_t sub_100439DCC()
{
  unint64_t result;

  result = qword_1008231F0;
  if (!qword_1008231F0)
  {
    result = swift_getWitnessTable(&unk_100662014, &type metadata for AppPromotionDetailPageView.DisplayMode);
    atomic_store(result, (unint64_t *)&qword_1008231F0);
  }
  return result;
}

uint64_t sub_100439E10()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView)+ OBJC_IVAR____TtC20ProductPageExtension30AppPromotionMediaContainerView_videoView);
}

void sub_100439E30(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  char v4;

  v2 = v1;
  sub_10053C708();
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = UITraitCollection.isSizeClassRegular.getter(v3);

  if ((v4 & 1) != 0)
    sub_100438678();
  objc_msgSend(v2, "setNeedsLayout");

}

uint64_t (*sub_100439EB8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1004370E4(v2);
  return sub_10001C148;
}

id sub_100439EFC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView);
}

uint64_t sub_100439F10(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10066210C, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_100439F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10066210C, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_100439F90(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_10066210C, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

uint64_t sub_100439FF8()
{
  return sub_10000E720(&qword_10081C8A0, type metadata accessor for AppPromotionDetailPageView, (uint64_t)&unk_10066207C);
}

uint64_t sub_10043A024()
{
  return sub_10000E720((unint64_t *)&unk_100823200, type metadata accessor for AppPromotionDetailPageView, (uint64_t)&unk_1006620AC);
}

uint64_t sub_10043A050()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10043A074(uint64_t a1)
{
  uint64_t v1;

  sub_1004362BC(a1, v1);
}

void sub_10043A07C()
{
  uint64_t v0;

  sub_10043665C(v0);
}

id sub_10043A084(uint64_t a1, void *a2)
{
  return sub_100438B60(a2);
}

void sub_10043A0A8(uint64_t a1)
{
  uint64_t v1;

  sub_1004366D4(a1, v1);
}

void sub_10043A0B0(uint64_t a1)
{
  uint64_t v1;

  sub_100436A70(a1, v1);
}

uint64_t sub_10043A0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10043A0C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10043A0D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10043A0F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10043A118()
{
  uint64_t v0;

  sub_100438AD4(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_10043A124()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *ObjCClassFromMetadata;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_displayModeTransitionCoordinator] = 0;
  v3 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageScrollView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v4 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_shadowView;
  v5 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
  v6 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_pageContainerView;
  v7 = type metadata accessor for RoundedCornerView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v7);
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v9 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaContainerView;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppPromotionMediaContainerView(0)), "init");
  v10 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_contentView;
  v11 = objc_allocWithZone((Class)type metadata accessor for AppPromotionDetailPageContentView(0));
  *(_QWORD *)&v1[v10] = sub_1005ABA34(0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_closeButton;
  v13 = objc_allocWithZone((Class)type metadata accessor for CardHeaderButton(0));
  *(_QWORD *)&v1[v12] = sub_1000C6894(0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_learnMoreView;
  v15 = objc_allocWithZone((Class)type metadata accessor for AppPromotionLearnMoreView(0));
  *(_QWORD *)&v1[v14] = sub_10052EEB8(0);
  v16 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_separatorView;
  v17 = type metadata accessor for SeparatorView(0);
  *(_QWORD *)&v1[v16] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");
  v18 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_lockupView;
  v19 = type metadata accessor for SubscriptionLockupView();
  *(_QWORD *)&v1[v18] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  v20 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_borderView;
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaReplicationView] = 0;
  v21 = OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_dismissTapGestureRecognizer;
  *(_QWORD *)&v1[v21] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_videoBackgroundColor] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_haveFlashedScrollIndicators] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_isCollapsing] = 0;
  v22 = &v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_mediaOverlayStyle];
  v23 = enum case for MediaOverlayStyle.matchSystem(_:);
  v24 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_includeBorderInDarkMode] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_defaultPageMargin] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppPromotionDetailPageView_appPromotionCloseButtonAppearanceCoordinator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/AppPromotionDetailPageView.swift", 53, 2, 215, 0);
  __break(1u);
}

uint64_t sub_10043A3E0()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD *v19;
  void (*v20)(_QWORD *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  _QWORD v44[5];
  _QWORD v45[3];
  void *v46;
  void *v47;
  _QWORD v48[6];

  v40 = type metadata accessor for PlatformSelectorViewLayout.Metrics.AccessoryAlignment(0);
  v39 = *(_QWORD *)(v40 - 8);
  v0 = __chkstk_darwin(v40);
  v41 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for FontSource(0, v0);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticDimension(0);
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v43 = (char *)&v36 - v9;
  v11 = __chkstk_darwin(v10);
  v42 = (char *)&v36 - v12;
  v13 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v11);
  sub_100011980(v13, qword_100823218);
  v38 = sub_10000EFC4(v13, (uint64_t)qword_100823218);
  v48[3] = &type metadata for Double;
  v48[4] = &protocol witness table for Double;
  v48[0] = 0x4024000000000000;
  if (qword_100806170 != -1)
    swift_once(&qword_100806170, sub_1004C6DB4);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_100869528);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16(v5, v15, v14);
  v17 = enum case for FontSource.useCase(_:);
  v18 = (void (*)(char *, uint64_t, uint64_t))v3[13];
  v18(v5, enum case for FontSource.useCase(_:), v2);
  v46 = (void *)v2;
  v47 = &protocol witness table for FontSource;
  v19 = sub_1000119C0(v45);
  v20 = (void (*)(_QWORD *, char *, uint64_t))v3[2];
  v20(v19, v5, v2);
  StaticDimension.init(_:scaledLike:)(v45, 20.0);
  v21 = (void (*)(char *, uint64_t))v3[1];
  v21(v5, v2);
  v16(v5, v15, v14);
  v18(v5, v17, v2);
  v46 = (void *)v2;
  v47 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(v45);
  v20(v22, v5, v2);
  StaticDimension.init(_:scaledLike:)(v45, 22.0);
  v21(v5, v2);
  v16(v5, v15, v14);
  v18(v5, v17, v2);
  v46 = (void *)v2;
  v47 = &protocol witness table for FontSource;
  v23 = sub_1000119C0(v45);
  v20(v23, v5, v2);
  v24 = v37;
  StaticDimension.init(_:scaledLike:)(v45, 10.0);
  v21(v5, v2);
  v47 = &protocol witness table for Double;
  v46 = &type metadata for Double;
  v45[0] = 0x4024000000000000;
  v25 = v24;
  if (qword_100805C98 != -1)
    swift_once(&qword_100805C98, sub_10043A7CC);
  objc_msgSend((id)qword_100823230, "contentInsets");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, enum case for PlatformSelectorViewLayout.Metrics.AccessoryAlignment.inline(_:), v40);
  v44[3] = &type metadata for Double;
  v44[4] = &protocol witness table for Double;
  v44[0] = 0x402C000000000000;
  return PlatformSelectorViewLayout.Metrics.init(badgeHorizontalPadding:textSpaceWhenInline:textSpaceWhenExclusiveLine:badgeSpaceExclusiveLine:accessoryHorizontalPadding:accessoryContentInsets:accessoryAlignment:bottomSpacer:)(v48, v42, v43, v25, v45, v34, v44, v27, v29, v31, v33);
}

uint64_t sub_10043A7CC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.chevronDown(_:), v0, v2);
  v5 = static SystemImage.load(_:with:)(v4, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_100823230 = v5;
  return result;
}

uint64_t sub_10043A86C()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  result = static UIColor.secondaryText.getter(v0);
  qword_1008689E8 = result;
  return result;
}

char *sub_10043A8AC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  char *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  char *v59;
  uint64_t *v60;
  id v61;
  id v62;
  _BYTE v63[12];
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t, uint64_t);
  char *v68;
  objc_class *ObjectType;
  uint64_t v70;
  char v71[56];
  objc_super v72;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_numberOfBadges] = 0;
  v16 = &v4[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_didSelectHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = qword_100806170;
  v68 = v4;
  if (v17 != -1)
    swift_once(&qword_100806170, sub_1004C6DB4);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_10000EFC4(v18, (uint64_t)qword_100869528);
  v20 = *(_QWORD *)(v18 - 8);
  v67 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
  v65 = v19;
  v67(v15, v19, v18);
  v21 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v21(v15, 0, 1, v18);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 104);
  v64 = enum case for DirectionalTextAlignment.none(_:);
  v66 = v9;
  v23(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  v26 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v27 = v68;
  *(_QWORD *)&v68[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel] = v26;
  v28 = v19;
  v29 = v67;
  v67(v15, v28, v18);
  v21(v15, 0, 1, v18);
  v30 = v22;
  v31 = v66;
  v23(v12, v30, v66);
  v32 = objc_allocWithZone(v24);
  *(_QWORD *)&v27[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v29(v15, v65, v18);
  v21(v15, 0, 1, v18);
  v23(v12, v64, v31);
  v33 = objc_allocWithZone(v24);
  *(_QWORD *)&v27[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v34 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v27[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_accessoryImageView] = v34;

  v72.receiver = v27;
  v72.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v72, "initWithFrame:", a1, a2, a3, a4);
  v36 = sub_10000DAF8((uint64_t *)&unk_100808840);
  inited = swift_initStackObject(v36, v71);
  *(_OWORD *)(inited + 16) = xmmword_1006415A0;
  v38 = *(uint64_t **)&v35[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel];
  *(_QWORD *)(inited + 32) = v38;
  v39 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel];
  *(_QWORD *)(inited + 40) = v39;
  v40 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel];
  *(_QWORD *)(inited + 48) = v40;
  v70 = inited;
  specialized Array._endMutation()(inited);
  v41 = v70;
  v42 = v70 & 0xC000000000000001;
  if ((v70 & 0xC000000000000001) != 0)
  {
    v59 = v35;
    v60 = v38;
    v61 = v39;
    v62 = v40;
    v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
LABEL_6:
    v38 = &qword_100805000;
    if (qword_100805CA0 == -1)
      goto LABEL_7;
    goto LABEL_20;
  }
  if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v27 = (char *)*(id *)(v70 + 32);
    v43 = v35;
    v44 = v38;
    v45 = v39;
    v46 = v40;
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  swift_once(&qword_100805CA0, sub_10043A86C);
LABEL_7:
  objc_msgSend(v27, "setTextColor:", qword_1008689E8);
  objc_msgSend(v35, "addSubview:", v27);

  if (v42)
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v41);
  else
    v47 = *(id *)(v41 + 40);
  v48 = v47;
  if (v38[404] != -1)
    swift_once(&qword_100805CA0, sub_10043A86C);
  objc_msgSend(v48, "setTextColor:", qword_1008689E8);
  objc_msgSend(v35, "addSubview:", v48);

  if (v42)
    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v41);
  else
    v49 = *(id *)(v41 + 48);
  v50 = v49;
  if (v38[404] != -1)
    swift_once(&qword_100805CA0, sub_10043A86C);
  objc_msgSend(v50, "setTextColor:", qword_1008689E8);
  objc_msgSend(v35, "addSubview:", v50);
  swift_bridgeObjectRelease(v41);

  v51 = *(void **)&v35[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_accessoryImageView];
  objc_msgSend(v51, "setTintColor:", qword_1008689E8);
  objc_msgSend(v35, "addSubview:", v51);
  v52 = v35;
  objc_msgSend(v52, "layoutMargins");
  v54 = v53;
  objc_msgSend(v52, "layoutMargins");
  v56 = v55;
  objc_msgSend(v52, "layoutMargins");
  objc_msgSend(v52, "setLayoutMargins:", v54, 0.0, v56);

  v57 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v52, "didTapSelectorView");
  objc_msgSend(v52, "addGestureRecognizer:", v57);

  return v52;
}

uint64_t sub_10043AFA8()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  __n128 v25;
  double v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  _QWORD v36[5];
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  v3 = __chkstk_darwin(v2);
  v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlatformSelectorViewLayout(0);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BadgeDisplayStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v29 - v18;
  v37.receiver = v0;
  v37.super_class = ObjectType;
  v31 = ObjectType;
  objc_msgSendSuper2(&v37, "layoutSubviews", v17);
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_numberOfBadges], v0, 0, 1);
  v20 = sub_10043B25C((uint64_t)v19);
  sub_10043B388((uint64_t)v20);
  if (qword_100805C90 != -1)
    swift_once(&qword_100805C90, sub_10043A3E0);
  v21 = sub_10000EFC4(v5, (uint64_t)qword_100823218);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v19, v12);
  v36[3] = type metadata accessor for DynamicTypeLabel(0);
  v36[4] = &protocol witness table for UILabel;
  v36[0] = v20;
  v22 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_accessoryImageView];
  v35[3] = sub_100018B6C(0, (unint64_t *)&qword_10080F950, UIImageView_ptr);
  v35[4] = &protocol witness table for UIView;
  v35[0] = v22;
  v23 = v20;
  v24 = v22;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v8, v15, v36, v35, v25);
  v26 = LayoutMarginsAware<>.layoutFrame.getter(v31);
  v27 = v32;
  PlatformSelectorViewLayout.placeChildren(relativeTo:in:)(v0, v26);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v34);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
}

id sub_10043B25C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  void (*v11)(char *, uint64_t);
  id v12;
  uint64_t v13;

  v3 = type metadata accessor for BadgeDisplayStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for BadgeDisplayStyle.left(_:))
  {
    v9 = OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel;
    return *(id *)(v1 + v9);
  }
  if (v8 == enum case for BadgeDisplayStyle.above(_:))
  {
    v9 = OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
    return *(id *)(v1 + v9);
  }
  if (v8 == enum case for BadgeDisplayStyle.inline(_:))
  {
    v9 = OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel;
    return *(id *)(v1 + v9);
  }
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel));
  v11(v7, v3);
  return v12;
}

id sub_10043B388(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  char v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel);
  type metadata accessor for DynamicTypeLabel(0);
  v4 = v3;
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  objc_msgSend(v4, "setHidden:", (v5 & 1) == 0);
  v6 = objc_retain(*(id *)(v1
                         + OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel));
  v7 = static NSObject.== infix(_:_:)(a1, v6);

  objc_msgSend(v6, "setHidden:", (v7 & 1) == 0);
  v8 = objc_retain(*(id *)(v1
                         + OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel));
  LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v8);

  return objc_msgSend(v8, "setHidden:", (a1 & 1) == 0);
}

uint64_t sub_10043B4AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = type metadata accessor for AppPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MediaPlatform.appPlatform.getter(v4);
  v8 = AppPlatform.rawValue.getter(v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v8;
  a1[1] = v10;
  return result;
}

uint64_t type metadata accessor for PlatformSelectorView()
{
  return objc_opt_self(_TtC20ProductPageExtension20PlatformSelectorView);
}

uint64_t sub_10043B690(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  NSString *v22;
  id v23;
  NSString *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[112];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_100806170 != -1)
    swift_once(&qword_100806170, sub_1004C6DB4);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_10000EFC4(v9, (uint64_t)qword_100869528);
  v11 = objc_msgSend(a2, "traitCollection");
  v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v10, v11);

  v30 = sub_100018B6C(0, (unint64_t *)&unk_100821BC0, NSAttributedString_ptr);
  v31 = a1;
  v13 = objc_msgSend(a2, "traitCollection", swift_bridgeObjectRetain(a1).n128_f64[0]);
  if (qword_100805C90 != -1)
    swift_once(&qword_100805C90, sub_10043A3E0);
  v15 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v14);
  sub_10000EFC4(v15, (uint64_t)qword_100823218);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v33);
  v16 = v34;
  v17 = v35;
  sub_100010F08(v33, v34);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  v18 = AnyDimension.value(in:rounded:)(a2, v7, v16, v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19 = sub_10000DAF8(&qword_100815380);
  inited = swift_initStackObject(v19, v32);
  *(_OWORD *)(inited + 16) = xmmword_100640600;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v21 = qword_100805CA0;
  v22 = NSFontAttributeName;
  v23 = v12;
  v24 = NSForegroundColorAttributeName;
  if (v21 != -1)
    swift_once(&qword_100805CA0, sub_10043A86C);
  v25 = (void *)qword_1008689E8;
  *(_QWORD *)(inited + 104) = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v25;
  v26 = v25;
  v27 = sub_100509728(inited);
  v28 = NSAttributedString.init(images:for:adjustsImageSizeForAccessibilityContentSizeCategory:interItemSpacing:defaultAttributes:imagesShouldRenderAsTemplates:)(v31, v13, 1, v27, 0, v18);

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v33);
  return v28;
}

double sub_10043B974(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, char a7, void *a8, __n128 a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  __n128 v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  objc_class *v56;
  id v57;
  void *v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  id v68;
  __n128 v69;
  char *v70;
  id v71;
  id v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  unint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  double v88;
  double v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  id v109;
  _QWORD v110[5];
  _QWORD v111[3];
  objc_class *v112;
  void *v113;

  v109 = a8;
  v95 = a4;
  v94 = a3;
  v14 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, a9);
  v101 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v102 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PlatformSelectorViewLayout(0);
  v106 = *(_QWORD *)(v16 - 8);
  v107 = v16;
  __chkstk_darwin(v16);
  v105 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for DirectionalTextAlignment(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v99 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v19);
  v96 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for BadgeDisplayStyle(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v100 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v108 = (char *)&v93 - v23;
  v93 = type metadata accessor for FloatingPointRoundingRule(0);
  v24 = *(_QWORD *)(v93 - 8);
  v25 = __chkstk_darwin(v93);
  v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) != 0)
  {
    if (qword_100805C98 != -1)
      swift_once(&qword_100805C98, sub_10043A7CC);
    objc_msgSend((id)qword_100823230, "size");
    v28 = v25.n128_f64[0];
  }
  else
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v92 = a2;
      else
        v92 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v29 = _CocoaArrayWrapper.endIndex.getter(v92);
      v25 = swift_bridgeObjectRelease(a2);
    }
    else
    {
      v29 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v28 = 0.0;
    if (v29 > 1)
    {
      type metadata accessor for MediaPlatform(0, v25);
      v30 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v31 = swift_allocObject(v30, 40, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100640AE0;
      *(_QWORD *)(v31 + 32) = a1;
      v111[0] = v31;
      specialized Array._endMutation()(v31);
      v32 = v111[0];
      v33 = swift_retain(a1);
      v34 = static MediaPlatform.systemImages(platforms:)(v32, v33);
      swift_bridgeObjectRelease(v32);
      goto LABEL_10;
    }
  }
  v94 = a5;
  v95 = a6;
  type metadata accessor for MediaPlatform(0, v25);
  v34 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if (qword_100805C90 != -1)
    swift_once(&qword_100805C90, sub_10043A3E0);
  v36 = v14;
  v37 = sub_10000EFC4(v14, (uint64_t)qword_100823218);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v111);
  v38 = (uint64_t)v112;
  v39 = v113;
  sub_100010F08(v111, (uint64_t)v112);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v38);
  v40 = AnyDimension.value(in:rounded:)(v109, v27, v38, v39);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v93);
  sub_10043C9CC(v34, v40);
  v42 = v41;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v111);
  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v91 = v34;
    else
      v91 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v43 = _CocoaArrayWrapper.endIndex.getter(v91);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v43 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v45 = v108;
  v44 = v109;
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(v43, v109, v42, 0);
  v46 = (void *)sub_10043B690(v34, v44);
  v47 = swift_bridgeObjectRelease(v34);
  v48 = v95;
  v95 = v46;
  v49 = (char *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v94, v48, v46, v37, v45, v44, v47);
  v50 = v36;
  if (qword_100806170 != -1)
    swift_once(&qword_100806170, sub_1004C6DB4);
  v51 = type metadata accessor for FontUseCase(0);
  v52 = sub_10000EFC4(v51, (uint64_t)qword_100869528);
  v53 = *(_QWORD *)(v51 - 8);
  v54 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v96, v52, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v51);
  v55 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v99, enum case for DirectionalTextAlignment.none(_:), v98);
  v56 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v57 = objc_allocWithZone(v56);
  v58 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v54, 0, 4, 0, 0, v55, 0, 0);
  objc_msgSend(v58, "setAttributedText:", v49);
  v99 = v49;
  if (qword_100805C98 != -1)
    swift_once(&qword_100805C98, sub_10043A7CC);
  objc_msgSend((id)qword_100823230, "size");
  v60 = v59;
  v61 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  v62 = LayoutViewPlaceholder.init(representing:)(v28, v60);
  v63 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v102, v37, v50);
  v64 = v103;
  v65 = v100;
  v66 = v108;
  v67 = v104;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v108, v104);
  v112 = v56;
  v113 = &protocol witness table for UILabel;
  v111[0] = v58;
  v110[3] = v61;
  v110[4] = &protocol witness table for LayoutViewPlaceholder;
  v110[0] = v62;
  v68 = v58;
  v69 = swift_retain(v62);
  v70 = v105;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v63, v65, v111, v110, v69);
  v71 = v109;
  v72 = objc_msgSend(v109, "pageMarginInsets");
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v81 = CGSize.subtracting(insets:)(v72);
  v83 = v82;
  v84 = sub_10043CB74();
  v85 = v107;
  v86 = dispatch thunk of Measurable.measurements(fitting:in:)(v71, v107, v84, v81, v83);
  v89 = CGSize.adding(outsets:)(v87, v74, v76, v78, v80, v86, v88);

  swift_release();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v70, v85);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v67);
  return v89;
}

uint64_t sub_10043C114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, id a8, unsigned __int8 a9, char *a10)
{
  uint64_t v10;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(void);
  uint64_t v63;
  int v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  __n128 v71;
  void *v72;
  char *v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id ObjectType;
  id v105;
  char *v106;
  char *v107;
  uint64_t v108;
  _OWORD v109[2];
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  v103 = a5;
  v106 = a10;
  ObjectType = (id)swift_getObjectType();
  v96 = type metadata accessor for AutomationSemantics(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v92 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v95 = (char *)&v89 - v20;
  v21 = type metadata accessor for BadgeDisplayStyle(0);
  v108 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v107 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v89 - v24;
  v26 = type metadata accessor for FloatingPointRoundingRule(0);
  v100 = *(_QWORD *)(v26 - 8);
  v101 = v26;
  v27 = __chkstk_darwin(v26);
  v99 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v102) = a7;
  if ((a7 & 1) == 0)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v33 = a2;
      else
        v33 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      v27 = swift_bridgeObjectRelease(a2);
      if (v34 > 1)
        goto LABEL_4;
    }
    else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
    {
LABEL_4:
      type metadata accessor for MediaPlatform(0, v27);
      v29 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100640AE0;
      *(_QWORD *)(v30 + 32) = a1;
      *(_QWORD *)&v110 = v30;
      specialized Array._endMutation()(v30);
      v10 = v110;
      v31 = swift_retain(a1);
      v32 = static MediaPlatform.systemImages(platforms:)(v10, v31);
      swift_bridgeObjectRelease(v10);
      v103 = a3;
      a6 = a4;
      goto LABEL_10;
    }
  }
  type metadata accessor for MediaPlatform(0, v27);
  v32 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0)
      v87 = v32;
    else
      v87 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v36 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v36 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v93 = a2;
  v105 = a8;
  if (v36)
  {
    *(_QWORD *)&v110 = _swiftEmptyArrayStorage;
    v37 = &v110;
    specialized ContiguousArray.reserveCapacity(_:)(v36);
    if (v36 < 0)
    {
      __break(1u);
LABEL_52:
      swift_once(&qword_100805C98, sub_10043A7CC);
      goto LABEL_23;
    }
    v38 = 0;
    do
    {
      if ((v32 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v32);
      else
        v39 = *(id *)(v32 + 8 * v38 + 32);
      v40 = v39;
      ++v38;
      v41 = objc_msgSend(v39, "imageWithRenderingMode:", 2);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v43 = *(_QWORD *)(v110 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
      specialized ContiguousArray._endMutation()(v44);
    }
    while (v36 != v38);
    v10 = v110;
    swift_bridgeObjectRelease(v32);
    a8 = v105;
  }
  else
  {
    swift_bridgeObjectRelease(v32);
    v10 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v37 = *(__int128 **)&v106[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_accessoryImageView];
  if ((v102 & 1) == 0)
  {
    v45 = 0;
    goto LABEL_25;
  }
  if (qword_100805C98 != -1)
    goto LABEL_52;
LABEL_23:
  v45 = (id)qword_100823230;
LABEL_25:
  objc_msgSend(v37, "setImage:", v45);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v88 = v10;
    else
      v88 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v46 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v46 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v106[OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_numberOfBadges] = v46;
  ObjectType = (id)sub_10043B690(v10, a8);
  if (qword_100805C90 != -1)
    swift_once(&qword_100805C90, sub_10043A3E0);
  v91 = a9;
  v48 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v47);
  v102 = sub_10000EFC4(v48, (uint64_t)qword_100823218);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(&v110);
  v49 = *((_QWORD *)&v111 + 1);
  v50 = v112;
  sub_100010F08(&v110, *((uint64_t *)&v111 + 1));
  v51 = v99;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49);
  v52 = AnyDimension.value(in:rounded:)(a8, v51, v49, v50);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v51, v101);
  sub_10043C9CC(v10, v52);
  v54 = v53;
  swift_bridgeObjectRelease(v10);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v110);
  v55 = sub_10000DAF8(&qword_100823290);
  v56 = v108;
  v57 = *(_QWORD *)(v108 + 72);
  v58 = *(unsigned __int8 *)(v108 + 80);
  v59 = (v58 + 32) & ~v58;
  v60 = swift_allocObject(v55, v59 + 3 * v57, v58 | 7);
  *(_OWORD *)(v60 + 16) = xmmword_1006405F0;
  v90 = v60;
  v61 = v60 + v59;
  v62 = *(void (**)(void))(v56 + 104);
  LODWORD(v101) = enum case for BadgeDisplayStyle.above(_:);
  ((void (*)(uint64_t))v62)(v61);
  v98 = enum case for BadgeDisplayStyle.inline(_:);
  ((void (*)(uint64_t))v62)(v61 + v57);
  v63 = v61 + 2 * v57;
  *(_QWORD *)v63 = v54;
  *(_BYTE *)(v63 + 8) = 0;
  v64 = enum case for BadgeDisplayStyle.left(_:);
  v62();
  v65 = v56;
  v99 = (char *)OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
  v100 = OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithTwoColumnsLabel;
  v97 = OBJC_IVAR____TtC20ProductPageExtension20PlatformSelectorView_descriptionWithBadgesInlineLabel;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v67 = 3;
  v89 = v61;
  v66(v25, v61, v21);
  while (1)
  {
    v73 = v107;
    v66(v107, (uint64_t)v25, v21);
    v74 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v73, v21);
    if (v74 == v64)
    {
      v68 = v106;
      v69 = v100;
LABEL_31:
      v70 = *(id *)&v68[v69];
      goto LABEL_32;
    }
    if (v74 == (_DWORD)v101)
    {
      v68 = v106;
      v69 = (uint64_t)v99;
      goto LABEL_31;
    }
    if (v74 == v98)
    {
      v68 = v106;
      v69 = v97;
      goto LABEL_31;
    }
    v70 = *(id *)&v99[(_QWORD)v106];
    (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v21);
LABEL_32:
    v71 = swift_bridgeObjectRetain(a6);
    v72 = (void *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v103, a6, ObjectType, v102, v25, v105, v71);
    objc_msgSend(v70, "setAttributedText:", v72, swift_bridgeObjectRelease(a6).n128_f64[0]);

    v65 = v108;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v25, v21);
    v61 += v57;
    if (!--v67)
      break;
    v66(v25, v61, v21);
  }
  v75 = v90;
  swift_setDeallocating(v90);
  swift_arrayDestroy(v89, *(_QWORD *)(v75 + 16), v21);
  swift_deallocClassInstance(v75, 32, 7);
  if ((v91 & 1) != 0)
  {
    objc_msgSend(v105, "pageMarginInsets");
    objc_msgSend(v106, "setLayoutMargins:");
  }
  objc_msgSend(v106, "setNeedsLayout", v89);
  v110 = 0u;
  v111 = 0u;
  memset(v109, 0, sizeof(v109));
  v76 = v92;
  static AutomationSemantics.productPage(elementName:id:parentId:)(0xD000000000000010, 0x80000001006A45C0, &v110, v109);
  sub_10001282C((uint64_t)v109);
  sub_10001282C((uint64_t)&v110);
  v77 = v93;
  *(_QWORD *)&v110 = v93;
  *((_QWORD *)&v110 + 1) = sub_10043B4AC;
  *(_QWORD *)&v111 = 0;
  swift_bridgeObjectRetain(v93);
  v78 = sub_10000DAF8(&qword_100823298);
  v79 = sub_10043CAC4();
  v80 = BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v78, v79);
  v82 = v81;
  swift_bridgeObjectRelease(v77);
  *((_QWORD *)&v111 + 1) = &type metadata for String;
  *(_QWORD *)&v110 = v80;
  *((_QWORD *)&v110 + 1) = v82;
  v83 = v95;
  AutomationSemantics.attribute(key:value:)(0x6D726F6674616C70, 0xE900000000000073, &v110);
  v84 = *(void (**)(char *, uint64_t))(v94 + 8);
  v85 = v96;
  v84(v76, v96);
  sub_10001282C((uint64_t)&v110);
  UIView.setAutomationSemantics(_:)(v83);

  return ((uint64_t (*)(char *, uint64_t))v84)(v83, v85);
}

uint64_t sub_10043C9CC(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      objc_msgSend(v8, "size");
      v11 = v10;

      v7 = v7 + v11 + a2;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

unint64_t sub_10043CAC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008232A0;
  if (!qword_1008232A0)
  {
    v1 = sub_100010DE0(&qword_100823298);
    sub_10043CB28();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> LazyMapSequence<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008232A0);
  }
  return result;
}

unint64_t sub_10043CB28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008232A8;
  if (!qword_1008232A8)
  {
    v1 = sub_100010DE0(&qword_1008232B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1008232A8);
  }
  return result;
}

unint64_t sub_10043CB74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008232B8;
  if (!qword_1008232B8)
  {
    v1 = type metadata accessor for PlatformSelectorViewLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PlatformSelectorViewLayout, v1);
    atomic_store(result, (unint64_t *)&qword_1008232B8);
  }
  return result;
}

double sub_10043CBBC()
{
  return 8.0;
}

id sub_10043CBD0(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t type metadata accessor for ContextTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1008232E8;
  if (!qword_1008232E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContextTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_10043CC78(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 896);
}

uint64_t sub_10043CCAC()
{
  return type metadata accessor for ContextTodayCardCollectionViewCell(0);
}

uint64_t sub_10043CCB4()
{
  uint64_t result;
  double v1;

  result = JUScreenClassHasRoundedCorners();
  v1 = 8.0;
  if ((_DWORD)result)
    v1 = 27.0;
  qword_1008236A8 = *(_QWORD *)&v1;
  return result;
}

BOOL sub_10043CCE0()
{
  uint64_t v0;
  void *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double Height;
  double v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  id v43;
  void *v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "frame");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(v1, "superview");
  if (v10)
  {
    v11 = v10;
    v64 = v9;
    v65 = v7;
    v67 = v5;
    v69 = v3;
    objc_msgSend(v10, "bounds");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    objc_msgSend(v1, "frame");
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v71.origin.x = v13;
    v71.origin.y = v15;
    v71.size.width = v17;
    v71.size.height = v19;
    Height = CGRectGetHeight(v71);
    v72.origin.x = v21;
    v72.origin.y = v23;
    v72.size.width = v25;
    v72.size.height = v27;
    v29 = Height - CGRectGetHeight(v72);
    if (qword_100805CA8 != -1)
      swift_once(&qword_100805CA8, sub_10043CCB4);
    v30 = v29 - *(double *)&qword_1008236A8;
    v5 = v67;
    v3 = v69;
    v9 = v64;
    v7 = v65;
  }
  else
  {
    v21 = 0.0;
    v30 = 0.0;
    v25 = 0.0;
    v27 = 0.0;
  }
  v73.origin.x = v3;
  v73.origin.y = v5;
  v73.size.width = v7;
  v73.size.height = v9;
  v31 = v21;
  v32 = v25;
  v33 = v27;
  if (CGRectEqualToRect(v73, *(CGRect *)(&v30 - 1)))
    return 0;
  objc_msgSend(v1, "frame");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = objc_msgSend(v1, "superview");
  if (v43)
  {
    v44 = v43;
    v66 = v40;
    v68 = v38;
    v70 = v36;
    objc_msgSend(v43, "bounds");
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v52 = v51;

    objc_msgSend(v1, "frame");
    v54 = v53;
    v56 = v55;
    v58 = v57;
    v74.origin.x = v46;
    v74.origin.y = v48;
    v74.size.width = v50;
    v74.size.height = v52;
    v59 = CGRectGetHeight(v74);
    if (qword_100805CA8 != -1)
      swift_once(&qword_100805CA8, sub_10043CCB4);
    v60 = v59 + *(double *)&qword_1008236A8;
    v38 = v68;
    v36 = v70;
    v40 = v66;
  }
  else
  {
    v54 = 0;
    v60 = 0.0;
    v56 = 0;
    v58 = 0;
  }
  v75.origin.x = v36;
  v75.origin.y = v38;
  v75.size.width = v40;
  v75.size.height = v42;
  v61 = v54;
  v62 = v56;
  v63 = v58;
  return !CGRectEqualToRect(v75, *(CGRect *)(&v60 - 1));
}

void sub_10043CF60(char a1, char a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double Height;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  void *v40;
  double v41;
  double v42;
  void *v43;
  uint64_t v44;
  void (*v45)(uint64_t, __n128);
  uint64_t v46;
  __n128 v47;
  _QWORD v48[6];
  CGRect v49;
  CGRect v50;
  CGRect v51;

  if (*(_BYTE *)(v2 + 72) == (a1 & 1) && !sub_10043CCE0())
    return;
  v5 = *(void **)(v2 + 16);
  v6 = objc_msgSend(v5, "superview");
  v7 = v6;
  if ((a1 & 1) != 0)
  {
    if (v6)
    {
      objc_msgSend(v6, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      objc_msgSend(v5, "frame");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v49.origin.x = v9;
      v49.origin.y = v11;
      v49.size.width = v13;
      v49.size.height = v15;
      Height = CGRectGetHeight(v49);
      v50.origin.x = v17;
      v50.origin.y = v19;
      v50.size.width = v21;
      v50.size.height = v23;
      v25 = Height - CGRectGetHeight(v50);
      if (qword_100805CA8 != -1)
        swift_once(&qword_100805CA8, sub_10043CCB4);
      v26 = v25 - *(double *)&qword_1008236A8;
      goto LABEL_13;
    }
  }
  else if (v6)
  {
    objc_msgSend(v6, "bounds");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;

    objc_msgSend(v5, "frame");
    v17 = v35;
    v21 = v36;
    v23 = v37;
    v51.origin.x = v28;
    v51.origin.y = v30;
    v51.size.width = v32;
    v51.size.height = v34;
    v38 = CGRectGetHeight(v51);
    if (qword_100805CA8 != -1)
      swift_once(&qword_100805CA8, sub_10043CCB4);
    v26 = v38 + *(double *)&qword_1008236A8;
    goto LABEL_13;
  }
  v17 = 0.0;
  v26 = 0.0;
  v21 = 0.0;
  v23 = 0.0;
LABEL_13:
  v39 = swift_allocObject(&unk_1007542D8, 56, 7);
  *(_QWORD *)(v39 + 16) = v2;
  *(double *)(v39 + 24) = v17;
  *(double *)(v39 + 32) = v26;
  *(double *)(v39 + 40) = v21;
  *(double *)(v39 + 48) = v23;
  if ((a2 & 1) != 0)
  {
    v40 = (void *)objc_opt_self(UIView);
    v41 = *(double *)(v2 + 56);
    v42 = *(double *)(v2 + 64);
    v48[4] = sub_10043D3F0;
    v48[5] = v39;
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 1107296256;
    v48[2] = sub_1000924A0;
    v48[3] = &unk_1007542F0;
    v43 = _Block_copy(v48);
    swift_retain(v2);
    swift_retain(v39);
    swift_release();
    objc_msgSend(v40, "_animateUsingSpringWithTension:friction:interactive:animations:completion:", 1, v43, 0, v41, v42);
    _Block_release(v43);
  }
  else
  {
    swift_retain(v2);
    objc_msgSend(v5, "setFrame:", v17, v26, v21, v23);
  }
  v44 = a1 & 1;
  *(_BYTE *)(v2 + 72) = a1 & 1;
  v45 = *(void (**)(uint64_t, __n128))(v2 + 32);
  if (v45)
  {
    v46 = *(_QWORD *)(v2 + 40);
    v47 = swift_retain(v46);
    v45(v44, v47);
    swift_release();
    sub_100018908((uint64_t)v45, v46);
  }
  else
  {
    swift_release();
  }
}

void sub_10043D284(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  char v6;
  char v7;
  double v8;
  double v9;
  BOOL v10;
  double v11;
  double v12;
  CGRect v13;

  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(v3, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5);
  if ((v4 & 1) != 0)
  {
    v6 = 0;
    v7 = 0;
  }
  else
  {
    objc_msgSend(v3, "contentOffset");
    v9 = v8;
    v10 = v8 > 0.0;
    objc_msgSend(v3, "contentSize");
    v12 = v11;
    objc_msgSend(v3, "bounds");
    v6 = v12 - CGRectGetHeight(v13) - *(double *)(v1 + 48) > v9 && v10;
    v7 = a1 & 1;
  }
  sub_10043CF60(v6, v7);
}

uint64_t sub_10043D370()
{
  uint64_t v0;

  sub_100018908(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 73, 7);
}

uint64_t type metadata accessor for ArticleFooterViewScrollObserver()
{
  return objc_opt_self(_TtC20ProductPageExtension31ArticleFooterViewScrollObserver);
}

void sub_10043D3C4()
{
  sub_10043D284(1);
}

uint64_t sub_10043D3CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

id sub_10043D3F0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_10043D40C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10043D41C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10043D424(void *a1, void *a2, char a3)
{
  uint64_t v3;
  id v5;
  id v6;

  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_OWORD *)(v3 + 48) = xmmword_1006621F0;
  *(_QWORD *)(v3 + 64) = 0x4028000000000000;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 72) = a3;
  v5 = a1;
  v6 = a2;
  sub_10043D284(0);
  return v3;
}

uint64_t type metadata accessor for DynamicTypeLinkedLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_100823818;
  if (!qword_100823818)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicTypeLinkedLabel);
  return result;
}

uint64_t sub_10043D4B0(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + qword_1008689F0);
}

id sub_10043D514(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  return objc_msgSendSuper2(&v2, "textColor");
}

void sub_10043D55C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v6 = a3;
  v5 = a1;
  sub_10043EC10((uint64_t)a3);

}

id sub_10043D5A4(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  return objc_msgSendSuper2(&v2, "textAlignment");
}

void sub_10043D5E4(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v5;
  id v6;
  id v7;
  objc_super v8;
  objc_super v9;

  v5 = (objc_class *)type metadata accessor for DynamicTypeLinkedLabel(0);
  v9.receiver = a1;
  v9.super_class = v5;
  v6 = a1;
  v7 = objc_msgSendSuper2(&v9, "textAlignment");
  v8.receiver = v6;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "setTextAlignment:", a3);
  if (objc_msgSend(v6, "textAlignment") != v7)
    sub_10043DDD8();

}

id sub_10043D680(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double left;
  double bottom;
  double right;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v26 = a3;
  v6 = a4 & 1;
  v7 = type metadata accessor for DirectionalTextAlignment(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[qword_1008237F8] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[qword_100823800] = 0;
  *(_QWORD *)&v4[qword_100823808] = 0;
  v14 = qword_100823810;
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v15 = v4;
  *(_QWORD *)&v4[v14] = static UIColor.primaryText.getter();

  v16 = type metadata accessor for FontUseCase(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DirectionalTextAlignment.none(_:), v7);
  v18 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v13, v25, v26, v6, 0, v10, 0, 0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v22 = v18;
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v22, "setUserInteractionEnabled:", 1);
  v23 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v22, "labelTapped:");
  objc_msgSend(v22, "addGestureRecognizer:", v23);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v22;
}

void sub_10043D8D8(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "tintColorDidChange");
  sub_10043DDD8();

}

uint64_t sub_10043D930(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)dispatch thunk of DynamicTypeLabel.traitCollectionForFontUseCases.getter(v3);
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  dispatch thunk of DynamicTypeLabel.fontUseCaseContentSizeCategory.setter(v7);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, a1, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v5);
  return sub_10043DDD8();
}

void sub_10043DA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v8;
  uint64_t v9;
  double v10;
  UIAccessibilityTraits *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  UIAccessibilityTraits v34;
  UIAccessibilityTraits v35;
  UIAccessibilityTraits v36;
  id v37;
  __int128 v38;
  _BYTE v39[24];
  char v40[24];

  v4 = v3;
  v8 = &v4[qword_1008237F8];
  swift_beginAccess(&v4[qword_1008237F8], v40, 1, 0);
  v9 = *(_QWORD *)v8;
  *(_QWORD *)v8 = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v9).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
    v11 = &UIAccessibilityTraitLink;
  else
    v11 = &UIAccessibilityTraitStaticText;
  objc_msgSend(v4, "setAccessibilityTraits:", *v11, v10);
  v12 = *(_QWORD *)&v4[qword_100823800];
  *(_QWORD *)&v4[qword_100823800] = a1;
  swift_retain(a1);
  swift_release(v12);
  v13 = *(_QWORD *)&v4[qword_100823808];
  *(_QWORD *)&v4[qword_100823808] = a2;
  swift_retain(a2);
  v14 = swift_release(v13);
  dispatch thunk of StyledText.plainText.getter(v14);
  v16 = v15;
  v17 = objc_allocWithZone((Class)NSString);
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "initWithString:", v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain(a3);
    v35 = UIAccessibilityTraitStaticText;
    v36 = UIAccessibilityTraitLink;
    v21 = v20 - 1;
    v22 = (_OWORD *)(a3 + 48);
    v37 = v19;
    while (1)
    {
      v23 = *((_QWORD *)v22 - 1);
      v38 = *v22;
      swift_bridgeObjectRetain(v23);
      swift_retain(v38);
      swift_retain(*((_QWORD *)&v38 + 1));
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v19, "rangeOfString:options:", v24, 4, swift_bridgeObjectRelease(v23).n128_f64[0]);
      v27 = v26;

      if (v25 == (id)NSNotFound.getter())
      {
        swift_release(*((_QWORD *)&v38 + 1));
        swift_release(v38);
        if (!v21)
          goto LABEL_17;
      }
      else
      {
        swift_beginAccess(v8, v39, 33, 0);
        v28 = *(_QWORD **)v8;
        swift_retain(v38);
        swift_retain(*((_QWORD *)&v38 + 1));
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
        *(_QWORD *)v8 = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v28 = sub_1003DA428(0, v28[2] + 1, 1, v28);
          *(_QWORD *)v8 = v28;
        }
        v31 = v28[2];
        v30 = v28[3];
        if (v31 >= v30 >> 1)
        {
          v28 = sub_1003DA428((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
          *(_QWORD *)v8 = v28;
        }
        v28[2] = v31 + 1;
        v32 = &v28[4 * v31];
        v32[4] = v25;
        v32[5] = v27;
        *((_OWORD *)v32 + 3) = v38;
        v33 = *(_QWORD *)v8;
        swift_endAccess(v39);
        if (*(_QWORD *)(v33 + 16))
          v34 = v36;
        else
          v34 = v35;
        objc_msgSend(v4, "setAccessibilityTraits:", v34);
        swift_release(*((_QWORD *)&v38 + 1));
        swift_release(v38);
        v19 = v37;
        if (!v21)
        {
LABEL_17:
          swift_bridgeObjectRelease(a3);
          break;
        }
      }
      --v21;
      v22 += 2;
    }
  }
  sub_10043DDD8();

}

id sub_10043DD28()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  UIAccessibilityTraits *v4;
  char v6[24];

  objc_msgSend(v0, "setAttributedText:", 0);
  v1 = *(_QWORD *)&v0[qword_100823800];
  *(_QWORD *)&v0[qword_100823800] = 0;
  swift_release(v1);
  v2 = &v0[qword_1008237F8];
  swift_beginAccess(&v0[qword_1008237F8], v6, 1, 0);
  v3 = *(_QWORD *)v2;
  *(_QWORD *)v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    v4 = &UIAccessibilityTraitLink;
  else
    v4 = &UIAccessibilityTraitStaticText;
  return objc_msgSend(v0, "setAccessibilityTraits:", *v4);
}

uint64_t sub_10043DDD8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char v23[24];

  v1 = v0;
  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  dispatch thunk of DynamicTypeLabel.fontUseCase.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_100010F2C((uint64_t)v4, (uint64_t *)&unk_100808F50);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  v11 = (void *)dispatch thunk of DynamicTypeLabel.traitCollectionForFontUseCases.getter();
  v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v9, v11);

  v13 = *(_QWORD *)&v0[qword_100823800];
  v14 = *(void **)&v1[qword_100823810];
  swift_retain(*(_QWORD *)&v1[qword_100823800]);
  v15 = v14;
  v22 = objc_msgSend(v1, "textAlignment");
  v16 = objc_msgSend(v1, "lineBreakMode");
  v17 = (uint64_t *)&v1[qword_1008237F8];
  swift_beginAccess(&v1[qword_1008237F8], v23, 0, 0);
  v18 = *v17;
  v19 = objc_msgSend(v1, "tintColor", swift_bridgeObjectRetain(v18).n128_f64[0]);
  v20 = sub_10043E9C8(v13, (uint64_t)v12, (uint64_t)v15, (uint64_t)v22, (uint64_t)v16, v18, v19);
  swift_release(v13);

  swift_bridgeObjectRelease(v18);
  v21 = sub_10043E030(v20, v12);
  objc_msgSend(v1, "setAttributedText:", v21);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_10043E030(void *a1, void *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  id v23;

  v3 = a1;
  if (!a1)
    goto LABEL_6;
  v4 = *(_QWORD *)(v2 + qword_100823808);
  if (!v4)
    goto LABEL_6;
  v6 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v7 = v3;
  swift_retain(v4);
  v8 = objc_msgSend(v6, "configurationWithFont:", a2);
  v9 = (void *)static SystemImage.load(artwork:with:includePrivateImages:)(v4, v8, 1);

  if (!v9)
  {
    swift_release(v4);

LABEL_6:
    v23 = v3;
    return v3;
  }
  objc_msgSend(v9, "size");
  v11 = v10;
  v13 = v12;
  objc_msgSend(a2, "capHeight");
  v15 = floor((v14 - v13) * 0.5);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v17 = objc_msgSend(v9, "imageWithTintColor:", v16);

  v18 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v17);
  objc_msgSend(v18, "setBounds:", 2.0, v15, v11, v13);
  v3 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v7);

  v19 = objc_allocWithZone((Class)NSAttributedString);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "initWithString:", v20);

  objc_msgSend(v3, "appendAttributedString:", v21);
  v22 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v18);
  objc_msgSend(v3, "appendAttributedString:", v22);

  swift_release(v4);
  return v3;
}

void sub_10043E298(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  char v32[24];

  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)sub_10043E508(a1);
  if ((v8 & 1) == 0)
  {
    v9 = v7;
    v10 = &v1[qword_1008237F8];
    swift_beginAccess(&v1[qword_1008237F8], v32, 0, 0);
    v11 = *(_QWORD **)v10;
    v12 = *(_QWORD *)(*(_QWORD *)v10 + 16);
    if (v12)
    {
      v28 = v6;
      v29 = v4;
      v30 = v3;
      v13 = v11[4];
      v14 = (char *)v11[5];
      v15 = v11[6];
      v16 = v11[7];
      swift_bridgeObjectRetain(v11);
      swift_retain(v15);
      swift_retain(v16);
      if ((unint64_t)v9 < v13 || &v9[-v13] >= v14)
      {
        swift_release();
        swift_release();
        if (v12 == 1)
        {
LABEL_17:
          swift_bridgeObjectRelease(v11);
        }
        else
        {
          v18 = v11 + 11;
          v19 = 1;
          while (v19 < v11[2])
          {
            v15 = *(v18 - 1);
            v16 = *v18;
            v20 = *(v18 - 3);
            v21 = (char *)*(v18 - 2);
            swift_retain(v15);
            swift_retain(v16);
            if ((unint64_t)v9 >= v20 && &v9[-v20] < v21)
              goto LABEL_18;
            swift_release();
            swift_release();
            ++v19;
            v18 += 4;
            if (v12 == v19)
              goto LABEL_17;
          }
          __break(1u);
        }
      }
      else
      {
LABEL_18:
        swift_bridgeObjectRelease(v11);
        if (UIResponder.nearestActionRunner.getter())
        {
          v31[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
          v31[0] = v1;
          v24 = v28;
          v23 = v29;
          v25 = v30;
          (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v28, enum case for ActionRunner.Origin.userInitiated(_:), v30);
          v26 = v1;
          dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v15, v31, v24, v16);
          swift_release();
          swift_release();
          v27 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v24, v25, v27);
          sub_100010F2C((uint64_t)v31, &qword_100808F20);
        }
        else
        {
          swift_release();
          swift_release();
        }
      }
    }
  }
}

void sub_10043E4B4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10043E298(v4);

}

id sub_10043E508(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;

  v2 = v1;
  v4 = objc_msgSend(v1, "attributedText");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(a1, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "bounds");
    v9 = v8;
    v11 = v10;
    v12 = objc_msgSend(objc_allocWithZone((Class)NSTextStorage), "initWithAttributedString:", v5);
    v13 = objc_msgSend(objc_allocWithZone((Class)NSTextContainer), "initWithSize:", v9, 1.79769313e308);
    v14 = objc_msgSend(objc_allocWithZone((Class)NSLayoutManager), "init");
    objc_msgSend(v14, "addTextContainer:", v13);
    objc_msgSend(v12, "addLayoutManager:", v14);
    objc_msgSend(v13, "setLineFragmentPadding:", 0.0);
    objc_msgSend(v13, "setLineBreakMode:", objc_msgSend(v2, "lineBreakMode"));
    objc_msgSend(v13, "setMaximumNumberOfLines:", objc_msgSend(v2, "numberOfLines"));
    objc_msgSend(a1, "locationInView:", v7);
    v16 = v15;
    v18 = v17;
    objc_msgSend(v14, "usedRectForTextContainer:", v13);
    v23 = objc_msgSend(v14, "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:", v13, 0, v16 - ((v9 - v19) * 0.5 - v20), v18 - ((v11 - v21) * 0.5 - v22));

    v5 = v14;
  }
  else
  {
    v23 = 0;
  }

  return v23;
}

BOOL sub_10043E734()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  _QWORD v14[4];
  char v15[24];

  v1 = type metadata accessor for ActionRunner.Origin(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[qword_1008237F8];
  swift_beginAccess(&v0[qword_1008237F8], v15, 0, 0);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 48);
    v9 = *(_QWORD *)(v6 + 56);
    swift_retain(v8);
    swift_retain(v9);
    if (UIResponder.nearestActionRunner.getter())
    {
      v14[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
      v14[0] = v0;
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ActionRunner.Origin.userInitiated(_:), v1);
      v10 = v0;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v8, v14, v4, v9);
      swift_release();
      swift_release();
      v11 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v11);
      sub_100010F2C((uint64_t)v14, &qword_100808F20);
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  return v7 != 0;
}

BOOL sub_10043E88C(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_10043E734();

  return v2;
}

void sub_10043E8BC()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.DynamicTypeLinkedLabel", 43, "init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)", 119, 0);
  __break(1u);
}

void sub_10043E8E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1008237F8));
  swift_release(*(_QWORD *)(v0 + qword_100823800));
  swift_release(*(_QWORD *)(v0 + qword_100823808));

}

id sub_10043E934()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10043E968(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1008237F8));
  swift_release(*(_QWORD *)(a1 + qword_100823800));
  swift_release(*(_QWORD *)(a1 + qword_100823808));

}

uint64_t sub_10043E9C0()
{
  return type metadata accessor for DynamicTypeLinkedLabel(0);
}

id sub_10043E9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  if (!a1)
    return 0;
  v12 = a1;
  swift_retain(a1);
  v13 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(a2);
  v14 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v13);
  v15 = objc_msgSend(v14, "length");
  objc_msgSend(v14, "addAttribute:value:range:");
  v16 = *(_QWORD *)(a6 + 16);
  if (v16)
  {
    v29 = v15;
    v30 = a5;
    v31 = v13;
    v32 = v12;
    swift_bridgeObjectRetain(a6);
    v28 = a6;
    v17 = (uint64_t *)(a6 + 56);
    do
    {
      v22 = *(v17 - 3);
      v21 = *(v17 - 2);
      v24 = *(v17 - 1);
      v23 = *v17;
      if (a7)
      {
        swift_retain(*(v17 - 1));
        swift_retain(v23);
        v19 = a7;
      }
      else
      {
        v18 = (void *)objc_opt_self(UIColor);
        swift_retain(v24);
        swift_retain(v23);
        v19 = objc_msgSend(v18, "systemBlueColor");
      }
      v20 = a7;
      objc_msgSend(v14, "addAttribute:value:range:", NSForegroundColorAttributeName, v19, v22, v21);
      swift_release(v23);
      swift_release(v24);

      v17 += 4;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease(v28);
    v13 = v31;
    v12 = v32;
    a5 = v30;
    v15 = v29;
  }
  v25 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v25, "setAlignment:", a4);
  objc_msgSend(v25, "setLineBreakMode:", a5);
  v26 = v25;
  objc_msgSend(v14, "addAttribute:value:range:", NSParagraphStyleAttributeName, v26, 0, v15);
  swift_release(v12);

  return v14;
}

void sub_10043EC10(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  objc_msgSendSuper2(&v8, "setTextColor:", a1);
  v4 = objc_msgSend(v2, "textColor");
  if (v4)
  {
    v5 = v4;
    v6 = *(void **)&v2[qword_100823810];
    *(_QWORD *)&v2[qword_100823810] = v4;
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v6);

    if ((v5 & 1) == 0)
      sub_10043DDD8();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10043ECEC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0, v2);
  sub_100011980(v5, qword_100823868);
  sub_10000EFC4(v5, (uint64_t)qword_100823868);
  if (qword_100806950 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v6 = sub_10000EFC4(v0, (uint64_t)qword_10086AAF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0xD000000000000017, 0x8000000100662350);
}

id sub_10043EDEC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)ADTrackingTransparency), "init");
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

BOOL sub_10043EE54()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((ASKBagContract.enablePersonalizedAdsPrivacyNotice.getter(v2) & 1) == 0
    || (ASKBagContract.enablePersonalizedAdsPrivacyNoticeHighlightedOption.getter() & 1) == 0)
  {
    return 0;
  }
  v5 = (_QWORD *)ASKBagContract.personalizedAdsPrivacyNoticeEnabledRegions.getter();
  v6 = static Locale.current.getter();
  v7 = Locale.regionCode.getter(v6);
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  if (!v9)
    goto LABEL_8;
  v11 = sub_100167D40(v7, v9, v5);
  swift_bridgeObjectRelease(v5);
  v12 = swift_bridgeObjectRelease(v9);
  if ((v11 & 1) == 0)
    return 0;
  v5 = (_QWORD *)ASKBagContract.personalizedAdsPrivacyNoticeHighlightedOptionEnabledRegions.getter(v12);
  v13 = static Locale.current.getter();
  v14 = Locale.regionCode.getter(v13);
  v16 = v15;
  v10(v4, v0);
  if (!v16)
  {
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v17 = sub_100167D40(v14, v16, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v16);
  return (v17 & 1) != 0;
}

uint64_t sub_10043EFAC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  unsigned int v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unsigned __int8 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  void *v36;

  v2 = type metadata accessor for OSLogger(0, a1);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Locale(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((static ResilientDeepLinkController.hasResilientDeepLinks(bag:)(*(_QWORD *)(v1 + 16), v8) & 1) == 0)
  {
    v16 = sub_10043EDEC();
    v17 = objc_msgSend(v16, "shouldPresentPersonalizedAdsOnboarding");

    if (!v17)
    {
      if (qword_100805CB0 != -1)
        swift_once(&qword_100805CB0, sub_10043ECEC);
      v26 = sub_10000EFC4(v2, (uint64_t)qword_100823868);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v26, v2);
      v27 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v28 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ 2 * *(_QWORD *)(v28 + 72), *(unsigned __int8 *)(v28 + 80) | 7);
      *(_OWORD *)(v29 + 16) = xmmword_100640600;
      LogMessage.init(stringLiteral:)(0xD00000000000003ALL, 0x80000001006A4860);
      v30 = sub_10043EDEC();
      v31 = objc_msgSend(v30, "shouldPresentPersonalizedAdsOnboarding");

      v36 = &type metadata for Bool;
      v35[0] = v31;
      static LogMessage.safe(_:)(v35);
      sub_10001282C((uint64_t)v35);
      Logger.info(_:)(v29, v2, &protocol witness table for OSLogger);
      v32 = swift_bridgeObjectRelease(v29);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v5, v2, v32);
      return 0;
    }
    v18 = ASKBagContract.enablePersonalizedAdsPrivacyNotice.getter();
    v19 = (_QWORD *)ASKBagContract.personalizedAdsPrivacyNoticeEnabledRegions.getter();
    v20 = static Locale.current.getter();
    v21 = Locale.regionCode.getter(v20);
    v23 = v22;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    if (v23)
    {
      v24 = sub_100167D40(v21, v23, v19);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v23);
      if (((v18 | v24) & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease(v19);
      if ((v18 & 1) != 0)
        return 1;
    }
    if (qword_100805CB0 != -1)
      swift_once(&qword_100805CB0, sub_10043ECEC);
    sub_10000EFC4(v2, (uint64_t)qword_100823868);
    v33 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v34 = type metadata accessor for LogMessage(0);
    v13 = swift_allocObject(v33, ((*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v34 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100640720;
    v15 = 0xD000000000000038;
    v14 = 0x80000001006A48A0;
    goto LABEL_16;
  }
  if (qword_100805CB0 != -1)
    swift_once(&qword_100805CB0, sub_10043ECEC);
  sub_10000EFC4(v2, (uint64_t)qword_100823868);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v12 = type metadata accessor for LogMessage(0);
  v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100640720;
  v14 = 0x8000000100694100;
  v15 = 0xD000000000000027;
LABEL_16:
  LogMessage.init(stringLiteral:)(v15, v14);
  Logger.info(_:)(v13, v2, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v13);
  return 0;
}

uint64_t sub_10043F3B8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  __n128 v14;
  _QWORD v16[4];

  v1 = type metadata accessor for OSLogger(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10043EDEC();
  v6 = objc_msgSend(v5, "latestVersionForPersonalizedAdsConsent");

  v7 = sub_10043EDEC();
  objc_msgSend(v7, "setAcknowledgedVersionForPersonalizedAds:", v6);

  if (qword_100805CB0 != -1)
    swift_once(&qword_100805CB0, sub_10043ECEC);
  v8 = sub_10000EFC4(v1, (uint64_t)qword_100823868);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  v9 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v10 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 2 * *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100693F70);
  v12 = sub_10043EDEC();
  v13 = objc_msgSend(v12, "acknowledgedVersionForPersonalizedAds");

  v16[3] = &type metadata for Int;
  v16[0] = v13;
  static LogMessage.safe(_:)(v16);
  sub_10001282C((uint64_t)v16);
  Logger.info(_:)(v11, v1, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v11);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v14);
}

uint64_t sub_10043F590()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for AdPrivacyOnboardingStep()
{
  return objc_opt_self(_TtC20ProductPageExtension23AdPrivacyOnboardingStep);
}

uint64_t storeEnumTagSinglePayload for AdPrivacyOnboardingStep.ButtonsStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10043F628 + 4 * byte_100662335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10043F65C + 4 * byte_100662330[v4]))();
}

uint64_t sub_10043F65C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043F664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10043F66CLL);
  return result;
}

uint64_t sub_10043F678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10043F680);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10043F684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043F68C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdPrivacyOnboardingStep.ButtonsStyle()
{
  return &type metadata for AdPrivacyOnboardingStep.ButtonsStyle;
}

unint64_t sub_10043F6AC()
{
  unint64_t result;

  result = qword_100823928;
  if (!qword_100823928)
  {
    result = swift_getWitnessTable(&unk_1006623D8, &type metadata for AdPrivacyOnboardingStep.ButtonsStyle);
    atomic_store(result, (unint64_t *)&qword_100823928);
  }
  return result;
}

uint64_t sub_10043F6F0(__n128 a1)
{
  return sub_10043EFAC(a1) & 1;
}

void sub_10043F714()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  double v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  char v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;

  sub_1004404EC();
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundBlurView];
  v2 = OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style;
  objc_msgSend(v1, "setHidden:", v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style] != 0);
  v3 = objc_msgSend(v1, "layer");
  v4 = v3;
  if (v0[v2])
    v5 = 4.0;
  else
    v5 = 17.0;
  objc_msgSend(v3, "setCornerRadius:", v5);

  v6 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundTintView];
  v7 = objc_msgSend(v6, "layer");
  v8 = v7;
  if (v0[v2])
    v9 = 4.0;
  else
    v9 = 17.0;
  objc_msgSend(v7, "setCornerRadius:", v9);

  v10 = v0[v2];
  v11 = objc_msgSend(v0, "traitCollection");
  v12 = sub_10043F8CC(v11, v10);

  objc_msgSend(v6, "setBackgroundColor:", v12);
  v13 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel];
  LOBYTE(v12) = v0[v2];
  v14 = objc_msgSend(v0, "traitCollection");
  v15 = sub_10043F9DC(v14, (char)v12);

  objc_msgSend(v13, "setTextColor:", v15);
  LOBYTE(v13) = v0[v2];
  v16 = objc_msgSend(v0, "traitCollection");
  v17 = sub_10043F9DC(v16, (char)v13);

  sub_10044081C(v17);
}

id sub_10043F8CC(void *a1, char a2)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  if (!a2)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v2 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v3 = (id)static UIColor.primaryText.getter(v2);
LABEL_5:
    v4 = v3;
    v5 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.4);
    goto LABEL_9;
  }
  v6 = objc_msgSend(a1, "userInterfaceStyle");
  v7 = (void *)objc_opt_self(UIColor);
  if (v6 == (id)2)
  {
    v4 = objc_msgSend(v7, "whiteColor");
    v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.13);
  }
  else
  {
    v4 = objc_msgSend(v7, "systemBlueColor");
    v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.1);
  }
LABEL_9:
  v8 = v5;

  return v8;
}

id sub_10043F9DC(void *a1, char a2)
{
  void *v2;
  char **v3;
  id v4;

  if (a2)
  {
    if (a2 == 1)
    {
      v2 = (void *)objc_opt_self(UIColor);
      v3 = &selRef_whiteColor;
      return objc_msgSend(v2, *v3);
    }
    v4 = objc_msgSend(a1, "userInterfaceStyle");
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_systemBlueColor;
  }
  else
  {
    v4 = objc_msgSend(a1, "userInterfaceStyle");
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_blackColor;
  }
  if (v4 == (id)2)
    v3 = &selRef_whiteColor;
  return objc_msgSend(v2, *v3);
}

uint64_t sub_10043FA84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000C625C(*a1, *a2);
}

Swift::Int sub_10043FA90()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xEC000000656C7469;
  v3 = 0x54646E416E6F6369;
  if (v1 != 1)
  {
    v3 = 0xD000000000000011;
    v2 = 0x80000001006851C0;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x796C6E4F6E6F6369;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10043FB3C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xEC000000656C7469;
  v3 = 0x54646E416E6F6369;
  if (*v1 != 1)
  {
    v3 = 0xD000000000000011;
    v2 = 0x80000001006851C0;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x796C6E4F6E6F6369;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10043FBC4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xEC000000656C7469;
  v4 = 0x54646E416E6F6369;
  if (v2 != 1)
  {
    v4 = 0xD000000000000011;
    v3 = 0x80000001006851C0;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x796C6E4F6E6F6369;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_10043FC6C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100441618(*a1);
  *a2 = result;
  return result;
}

void sub_10043FC98(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xEC000000656C7469;
  v5 = 0x54646E416E6F6369;
  if (v2 != 1)
  {
    v5 = 0xD000000000000011;
    v4 = 0x80000001006851C0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x796C6E4F6E6F6369;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10043FD04(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_10043FF14(a2, a1, qword_100823930);
}

id sub_10043FD14()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 30.0);
  qword_100823948 = (uint64_t)result;
  return result;
}

uint64_t sub_10043FD50(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 16.0;
  return sub_10043FD80(a2, a1, &qword_100823968, &qword_100823970, qword_100823950);
}

uint64_t sub_10043FD68(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 8.0;
  return sub_10043FD80(a2, a1, &qword_100823990, &qword_100823998, qword_100823978);
}

uint64_t sub_10043FD80(__n128 a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  double v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v18[5];

  v5 = a1.n128_f64[0];
  v9 = type metadata accessor for FontSource(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1008066D8 != -1)
    swift_once(&qword_1008066D8, sub_1004C9BD4);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_10000EFC4(v13, (uint64_t)qword_10086A560);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v14, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  *a3 = type metadata accessor for StaticDimension(0);
  *a4 = &protocol witness table for StaticDimension;
  sub_1000119C0(a5);
  v18[3] = v9;
  v18[4] = &protocol witness table for FontSource;
  v15 = sub_1000119C0(v18);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  StaticDimension.init(_:scaledLike:)(v18, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10043FEE4(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 4.0;
  return sub_10043FF14(a2, a1, qword_1008239A0);
}

uint64_t sub_10043FEF4(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 10.0;
  return sub_10043FF14(a2, a1, qword_1008239B8);
}

uint64_t sub_10043FF04(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 1.0;
  return sub_10043FF14(a2, a1, qword_1008239D0);
}

uint64_t sub_10043FF14(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100011980(v9, a3);
  sub_10000EFC4(v9, (uint64_t)a3);
  if (qword_1008065B0 != -1)
    swift_once(&qword_1008065B0, sub_1004C9698);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10000EFC4(v10, (uint64_t)qword_10086A1E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_1000119C0(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

char *sub_100440068()
{
  _BYTE *v0;
  _BYTE *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  double left;
  double bottom;
  double right;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  double v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  double v37;
  void *v38;
  void *v39;
  objc_super v41;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for DirectionalTextAlignment(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_isActive] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellMicaPlayer] = 0;
  v10 = qword_100805CC0;
  v11 = v1;
  if (v10 != -1)
    swift_once(&qword_100805CC0, sub_10043FD14);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", qword_100823948);
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundBlurView] = v12;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundTintView] = v13;
  if (qword_1008066D8 != -1)
    swift_once(&qword_1008066D8, sub_1004C9BD4);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_10086A560);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v15, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DirectionalTextAlignment.leading(_:), v3);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v9, 0, 0, 1, 0, v6, 0, 0);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellView] = v18;

  v41.receiver = v11;
  v41.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v41, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v23 = (char *)v19;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v24 = OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundBlurView;
  v25 = *(void **)&v23[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundBlurView];
  objc_msgSend(v25, "setClipsToBounds:", 1);
  v26 = objc_msgSend(v25, "layer");
  v27 = v26;
  v28 = OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style;
  if (v23[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style])
    v29 = 4.0;
  else
    v29 = 17.0;
  objc_msgSend(v26, "setCornerRadius:", v29);

  v30 = *(void **)&v23[v24];
  objc_msgSend(v30, "setUserInteractionEnabled:", 0);
  objc_msgSend(v23, "addSubview:", v30);
  v31 = OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundTintView;
  LOBYTE(v30) = v23[v28];
  v32 = *(id *)&v23[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundTintView];
  v33 = objc_msgSend(v23, "traitCollection");
  v34 = sub_10043F8CC(v33, (char)v30);

  objc_msgSend(v32, "setBackgroundColor:", v34);
  v35 = objc_msgSend(*(id *)&v23[v31], "layer");
  v36 = v35;
  if (v23[v28])
    v37 = 4.0;
  else
    v37 = 17.0;
  objc_msgSend(v35, "setCornerRadius:", v37);

  v38 = *(void **)&v23[v31];
  objc_msgSend(v38, "setUserInteractionEnabled:", 0);
  objc_msgSend(v23, "addSubview:", v38);
  sub_1004404EC();
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel]);
  sub_1004405E4(0);
  v39 = *(void **)&v23[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellView];
  objc_msgSend(v39, "setUserInteractionEnabled:", 0);
  objc_msgSend(v23, "addSubview:", v39);
  sub_10043F714();

  return v23;
}

void sub_1004404EC()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  void *object;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style))
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel), "setHidden:", 0);
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_isActive) == 1)
    {
      v2 = 0xD000000000000021;
      v3 = 0x80000001006A49A0;
    }
    else
    {
      v3 = 0x80000001006A4980;
      v2 = 0xD00000000000001BLL;
    }
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(*(Swift::String *)&v2, v4)._object;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v1, "setText:", v6);

  }
  else
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel), "setHidden:", 1);
  }
}

void sub_1004405E4(char a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  NSString v4;
  unint64_t v5;
  id v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;

  if ((a1 & 1) != 0 && !UIAccessibilityIsReduceMotionEnabled())
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_isActive))
      v5 = 0x80000001006A49D0;
    else
      v5 = 0x80000001006A49F0;
    v6 = objc_allocWithZone((Class)AppStoreMicaPlayer);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    v8 = objc_msgSend(v6, "initWithFileName:retinaScale:", v7, 1.0);

    sub_1004414E0(v8);
    v9 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellMicaPlayer);
    if (v9)
      objc_msgSend(v9, "play");
  }
  else
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_isActive))
      v2 = 0x80000001006A49F0;
    else
      v2 = 0x80000001006A49D0;
    v3 = objc_allocWithZone((Class)AppStoreMicaPlayer);
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v10 = objc_msgSend(v3, "initWithFileName:retinaScale:", v4, 1.0);

    sub_1004414E0(v10);
  }
}

void sub_10044081C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  _OWORD v19[2];
  __int128 v20;
  uint64_t v21;

  v3 = type metadata accessor for NSFastEnumerationIterator(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellMicaPlayer);
  if (v8)
  {
    v9 = objc_msgSend(v8, "rootLayer", v5);
    if (v9)
    {
      v10 = v9;
      v11 = sub_100018B6C(0, &qword_100823A50, CAShapeLayer_ptr);
      v12 = objc_msgSend(v10, "mp_allLayersWithKindOfClass:", swift_getObjCClassFromMetadata(v11));

      if (v12)
      {
        v17 = v3;
        v13 = NSArray.makeIterator()();
        NSFastEnumerationIterator.next()(&v20, v13);
        while (v21)
        {
          sub_10004EA50(&v20, v19);
          v14 = swift_dynamicCast(&v18, v19, (char *)&type metadata for Any + 8, v11, 6);
          if ((_DWORD)v14)
          {
            v15 = v18;
            v16 = objc_msgSend(a1, "CGColor");
            objc_msgSend(v15, "setFillColor:", v16);

          }
          NSFastEnumerationIterator.next()(&v20, v14);
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v17);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1004409D4()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  CGFloat Height;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  objc_super v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43.receiver = v0;
  v43.super_class = ObjectType;
  objc_msgSendSuper2(&v43, "layoutSubviews", v5);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundBlurView], "setFrame:", LayoutMarginsAware<>.layoutFrame.getter(ObjectType));
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_backgroundTintView], "setFrame:", LayoutMarginsAware<>.layoutFrame.getter(ObjectType));
  if (v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style])
  {
    if (qword_100805CE8 != -1)
      swift_once(&qword_100805CE8, sub_10043FF04);
    v8 = type metadata accessor for StaticDimension(0);
    v9 = sub_10000EFC4(v8, (uint64_t)qword_1008239D0);
    static Dimensions.defaultRoundingRule.getter(v9);
    AnyDimension.value(in:rounded:)(v0, v7, v8, &protocol witness table for StaticDimension);
    v10 = *(void (**)(char *, uint64_t))(v4 + 8);
    v10(v7, v3);
    if (qword_100805CD8 != -1)
      swift_once(&qword_100805CD8, sub_10043FEE4);
    v11 = sub_10000EFC4(v8, (uint64_t)qword_1008239A0);
    static Dimensions.defaultRoundingRule.getter(v11);
    v12 = AnyDimension.value(in:rounded:)(v0, v7, v8, &protocol witness table for StaticDimension);
    v10(v7, v3);
    if (qword_100805CE0 != -1)
      swift_once(&qword_100805CE0, sub_10043FEF4);
    v13 = sub_10000EFC4(v8, (uint64_t)qword_1008239B8);
    static Dimensions.defaultRoundingRule.getter(v13);
    v14 = AnyDimension.value(in:rounded:)(v0, v7, v8, &protocol witness table for StaticDimension);
    v10(v7, v3);
    if (qword_100805CB8 != -1)
      swift_once(&qword_100805CB8, sub_10043FD04);
    v15 = sub_10000EFC4(v8, (uint64_t)qword_100823930);
    static Dimensions.defaultRoundingRule.getter(v15);
    v16 = AnyDimension.value(in:rounded:)(v0, v7, v8, &protocol witness table for StaticDimension);
    v10(v7, v3);
    v44.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    v17 = CGRectGetWidth(v44) - v12 - v14 - v16;
    v45.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    Height = CGRectGetHeight(v45);
    v19 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel];
    objc_msgSend(v19, "measurementsWithFitting:in:", v0, v17, Height);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    if (qword_100805CC8 != -1)
      swift_once(&qword_100805CC8, sub_10043FD50);
    v28 = qword_100823968;
    v29 = qword_100823970;
    sub_100010F08(qword_100823950, qword_100823968);
    AnyDimension.topMargin(from:in:)(v1, v28, v29, v21, v23, v25, v27);
    v46.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    CGRectGetMinX(v46);
    v47.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    CGRectGetMinY(v47);
    v30 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    objc_msgSend(v19, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v30));
    v48.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    CGRectGetMinX(v48);
    v49.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    CGRectGetMidY(v49);
    v31 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellView];
    v32 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    v36 = CGRect.withLayoutDirection(in:relativeTo:)(v1, v32);
  }
  else
  {
    v50.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    v36 = CGRectGetMidX(v50) + -17.0;
    v51.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    v33 = CGRectGetMidY(v51) + -17.0;
    v31 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellView];
    v34 = 34.0;
    v35 = 34.0;
  }
  objc_msgSend(v31, "setFrame:", v36, v33, v34, v35);
  v37 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellMicaPlayer];
  if (v37)
  {
    v38 = v37;
    v39 = objc_msgSend(v31, "layer");
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAGravityResizeAspect);
    v41 = v40;
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "moveAndResizeWithinParentLayer:usingGravity:animate:", v39, v42, 0, swift_bridgeObjectRelease(v41).n128_f64[0]);

  }
}

void sub_100440F18(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CGRect v30;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style))
  {
    if (qword_100805CD8 != -1)
      swift_once(&qword_100805CD8, sub_10043FEE4);
    v9 = type metadata accessor for StaticDimension(0);
    v10 = sub_10000EFC4(v9, (uint64_t)qword_1008239A0);
    static Dimensions.defaultRoundingRule.getter(v10);
    v11 = AnyDimension.value(in:rounded:)(v1, v8, v9, &protocol witness table for StaticDimension);
    v12 = *(void (**)(char *, uint64_t))(v6 + 8);
    v12(v8, v5);
    if (qword_100805CE0 != -1)
      swift_once(&qword_100805CE0, sub_10043FEF4);
    v13 = sub_10000EFC4(v9, (uint64_t)qword_1008239B8);
    static Dimensions.defaultRoundingRule.getter(v13);
    v14 = AnyDimension.value(in:rounded:)(v1, v8, v9, &protocol witness table for StaticDimension);
    v12(v8, v5);
    if (qword_100805CB8 != -1)
      swift_once(&qword_100805CB8, sub_10043FD04);
    v15 = sub_10000EFC4(v9, (uint64_t)qword_100823930);
    static Dimensions.defaultRoundingRule.getter(v15);
    v16 = AnyDimension.value(in:rounded:)(v1, v8, v9, &protocol witness table for StaticDimension);
    v12(v8, v5);
    v30.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_titleLabel), "measurementsWithFitting:in:", v1, a1 - v11 - v14 - v16, CGRectGetHeight(v30));
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;
    if (qword_100805CC8 != -1)
      swift_once(&qword_100805CC8, sub_10043FD50);
    v25 = qword_100823968;
    v26 = qword_100823970;
    sub_100010F08(qword_100823950, qword_100823968);
    AnyDimension.topMargin(from:in:)(v2, v25, v26, v18, v20, v22, v24);
    if (qword_100805CD0 != -1)
      swift_once(&qword_100805CD0, sub_10043FD68);
    v27 = qword_100823990;
    v28 = qword_100823998;
    sub_100010F08(qword_100823978, qword_100823990);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v27);
    AnyDimension.value(in:rounded:)(v2, v8, v27, v28);
    v12(v8, v5);
  }
}

uint64_t type metadata accessor for NotifyMeButton()
{
  return objc_opt_self(_TtC20ProductPageExtension14NotifyMeButton);
}

uint64_t storeEnumTagSinglePayload for NotifyMeButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100441418 + 4 * byte_100662415[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10044144C + 4 * byte_100662410[v4]))();
}

uint64_t sub_10044144C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100441454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10044145CLL);
  return result;
}

uint64_t sub_100441468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100441470);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100441474(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044147C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotifyMeButton.Style()
{
  return &type metadata for NotifyMeButton.Style;
}

unint64_t sub_10044149C()
{
  unint64_t result;

  result = qword_100823A48;
  if (!qword_100823A48)
  {
    result = swift_getWitnessTable(&unk_1006624C4, &type metadata for NotifyMeButton.Style);
    atomic_store(result, (unint64_t *)&qword_100823A48);
  }
  return result;
}

void sub_1004414E0(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v3 = OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellMicaPlayer;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellMicaPlayer];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperlayer");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_style];
    v9 = v7;
    v10 = objc_msgSend(v1, "traitCollection");
    v11 = sub_10043F9DC(v10, v8);

    sub_10044081C(v11);
    v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension14NotifyMeButton_bellView], "layer");
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAGravityResizeAspect);
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "addToLayer:onTop:gravity:", v12, 1, v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
}

unint64_t sub_100441618(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007358A8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

double *sub_100441798()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  objc_super v15;
  double *v16;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SearchBar();
  v1 = objc_msgSendSuper2(&v15, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100018B6C(0, (unint64_t *)&qword_100808190, UIKeyCommand_ptr);
    v4 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v16 = v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:discoverabilityTitle:", v7, 0, "handleCancelKeyCommand", v8);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
  specialized Array._endMutation()(v13);
  return v16;
}

void sub_1004419D8()
{
  void *v0;
  id v1;
  id v2;
  __int128 *v3;
  NSString v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  id v8;
  unint64_t v9;
  Class isa;
  double v11;
  double v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  uint64_t v31;
  NSString v32;
  _BYTE v33[72];
  CGRect v34;

  v1 = objc_msgSend(v0, "searchTextField");
  v2 = objc_msgSend(v1, "font");

  if (v2)
  {
    if (qword_100805CF0 != -1)
      swift_once(&qword_100805CF0, sub_100441C78);
    v3 = &xmmword_100823A58;
    v4 = String._bridgeToObjectiveC()();
    v5 = sub_10000DAF8(&qword_100815380);
    inited = swift_initStackObject(v5, v33);
    *(_OWORD *)(inited + 16) = xmmword_100640720;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 64) = sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v2;
    v7 = NSFontAttributeName;
    v8 = v2;
    v9 = sub_100509728(inited);
    type metadata accessor for Key(0);
    sub_1001A1594();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);
    v12 = v11;

    v13 = objc_msgSend(v0, "searchTextField");
    v14 = objc_msgSend(v0, "searchTextField");
    objc_msgSend(v14, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    objc_msgSend(v13, "textRectForBounds:", v16, v18, v20, v22);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v30 = v29;

    v34.origin.x = v24;
    v34.origin.y = v26;
    v34.size.width = v28;
    v34.size.height = v30;
    if (ceil(v12) > CGRectGetWidth(v34))
    {
      if (qword_100805CF8 != -1)
        swift_once(&qword_100805CF8, sub_100441CB8);
      v3 = &xmmword_100823A68;
    }
    v31 = *((_QWORD *)v3 + 1);
    swift_bridgeObjectRetain(v31);
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v0, "setPlaceholder:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  }
}

uint64_t sub_100441C78()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;

  v0._object = (void *)0x80000001006A4AC0;
  v0._countAndFlagsBits = 0xD000000000000012;
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  v3 = localizedString(_:comment:)(v0, v1);
  result = v3._countAndFlagsBits;
  xmmword_100823A58 = (__int128)v3;
  return result;
}

uint64_t sub_100441CB8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;

  v0._object = (void *)0x80000001006A4AA0;
  v0._countAndFlagsBits = 0xD00000000000001ALL;
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  v3 = localizedString(_:comment:)(v0, v1);
  result = v3._countAndFlagsBits;
  xmmword_100823A68 = (__int128)v3;
  return result;
}

id sub_100441CF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchBar()
{
  return objc_opt_self(_TtC20ProductPageExtension9SearchBar);
}

uint64_t sub_100441D4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[15];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v11[0] = *(_QWORD *)(v2 - 8) + 64;
    v11[1] = &unk_100662578;
    v11[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v11[3] = &unk_100662590;
    v11[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v11[5] = &unk_100662578;
    v11[6] = &unk_1006625A8;
    v11[7] = &unk_100662590;
    v11[8] = &unk_100662590;
    v11[9] = &unk_1006625C0;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 88));
    v6 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
    v8 = type metadata accessor for ReusePool(319, v6, WitnessTable);
    v3 = v8;
    if (v9 <= 0x3F)
    {
      v11[10] = *(_QWORD *)(v8 - 8) + 64;
      v11[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v11[12] = &unk_1006625D8;
      v11[13] = &unk_1006625D8;
      v11[14] = &unk_1006625A8;
      return swift_initClassMetadata2(a1, 0, 15, v11, a1 + 96);
    }
  }
  return v3;
}

uint64_t sub_100441E94(uint64_t a1, CGFloat a2, CGFloat a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  double v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[10];
  _QWORD v29[10];
  _QWORD v30[10];
  _QWORD v31[10];
  _QWORD v32[9];
  uint64_t v33;
  CGPoint v34;
  CGRect v35;

  v6 = swift_isaMask & *v3;
  v7 = *(_QWORD *)(v6 + 0x50);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v28[-1] - v9;
  sub_100442D9C(v11);
  v12 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v13(v10, v12, v7);
  v14 = *(_QWORD *)(v6 + 88);
  v15 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 24);
  v15(v28, v7, v14);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v17 = *(double *)v28;
  v18 = *(double *)&v28[1];
  objc_msgSend(v3, "contentSize");
  v35.size.width = v19;
  v35.size.height = v20;
  v35.origin.x = v18;
  v35.origin.y = v17;
  v34.x = a2;
  v34.y = a3;
  if (!CGRectContainsPoint(v35, v34))
    return 0;
  v13(v10, v12, v7);
  v15(v29, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v22 = floor((a2 - v18) / (*(double *)&v29[4] + *(double *)&v29[6]));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((uint64_t)v22 < 0)
    return 0;
  v27 = (uint64_t)v22;
  v23 = sub_100442C48(result);
  if (v23 <= v27)
    return 0;
  v13(v10, v12, v7);
  v15(v30, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v24 = floor((a3 - v17) / (*(double *)&v30[5] + *(double *)&v30[7]));
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
    goto LABEL_19;
  if (v24 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = (uint64_t)v24;
  if ((uint64_t)v24 < 0)
    return 0;
  v13(v10, v12, v7);
  v15(v31, v7, v14);
  v16(v10, v7);
  if (v31[9] <= v25)
    return 0;
  v13(v10, v12, v7);
  v15(v32, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v26 = v27 * v33;
  if ((unsigned __int128)(v27 * (__int128)v33) >> 64 != (v27 * v33) >> 63)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  result = v26 + v25;
  if (__OFADD__(v26, v25))
LABEL_23:
    __break(1u);
  return result;
}

id sub_10044219C(char a1)
{
  _QWORD *v1;

  objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = a1;
  objc_msgSend(v1, "invalidateIntrinsicContentSize");
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_100442208(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1004453E0();
}

id sub_10044222C(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  return ArcadeSubscribeViewController.__deallocating_deinit((uint64_t)v1, v2);
}

void sub_100442250(char *a1)
{
  _QWORD *v2;
  uint64_t *v3;
  char *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;

  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)a1);
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v2[10] - 8) + 8))(&a1[v2[12]], v2[10]);
  v3 = (uint64_t *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x68)];
  sub_100018908(*v3, v3[1]);

  swift_unknownObjectRelease();
  swift_release();
  v4 = &a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xB0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2[11]);
  v6 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
  v8 = type metadata accessor for ReusePool(0, v6, WitnessTable);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  swift_bridgeObjectRelease(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xB8)]);

}

uint64_t sub_1004423B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t WitnessTable;
  _BYTE v7[24];

  v1 = *v0;
  v2 = swift_isaMask;
  result = (uint64_t)objc_msgSend(v0, "isTracking");
  if ((result & 1) == 0)
  {
    result = (uint64_t)objc_msgSend(v0, "isDragging");
    if ((result & 1) == 0)
    {
      swift_beginAccess((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xB0), v7, 33, 0);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)((v2 & v1) + 0x58));
      v5 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v5);
      type metadata accessor for ReusePool(0, v5, WitnessTable);
      ReusePool.drain()();
      return swift_endAccess(v7);
    }
  }
  return result;
}

uint64_t sub_100442498(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = a1;
  sub_1004423B4();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_100442534(void *a1)
{
  _QWORD *v1;
  id v3;
  id v4;
  id result;
  _BOOL8 v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    v6 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") == (id)1;
    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setFlipsHorizontalAxis:", v6);

    objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 1;
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

void sub_100442670(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_100442534(a3);

}

id sub_1004426C8(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = sub_1004426F8();

  return v2;
}

id sub_1004426F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

void sub_10044272C(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a1;
  sub_10044276C(a3);

}

id sub_10044276C(id a1)
{
  _QWORD *v1;
  objc_class *ObjectType;
  id v4;
  id result;
  _BOOL8 v6;
  id v7;
  objc_super v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v9, "semanticContentAttribute");
  v8.receiver = v1;
  v8.super_class = ObjectType;
  result = objc_msgSendSuper2(&v8, "setSemanticContentAttribute:", a1);
  if (v4 != a1)
  {
    v6 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") == (id)1;
    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setFlipsHorizontalAxis:", v6);

    objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 1;
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_10044287C()
{
  return 0;
}

double sub_100442884(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  double result;

  v2 = sub_10000DAF8(&qword_1008091A0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100640720;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 32) = 0xD000000000000040;
  *(_QWORD *)(v3 + 40) = 0x80000001006A4CE0;
  v4 = a1;
  debugPrint(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

double sub_100442918(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = sub_100442958((uint64_t)v1);

  return v2;
}

CGFloat sub_100442958(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)v1);
  v3 = v2[10];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)v9 - v6;
  (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))((char *)v9 - v6, &v1[v2[12]], v3, v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v2[11] + 24))(v9, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return UIViewNoIntrinsicMetric;
}

CGFloat sub_100442A5C(uint64_t a1, CGFloat Width)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  _QWORD v20[2];
  CGRect v21;

  v4 = swift_isaMask & *(_QWORD *)v2;
  v5 = *(_QWORD *)(v4 + 0x50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)v20 - v7;
  v9 = v4;
  if (Width < COERCE_DOUBLE(1))
  {
    v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v10, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v21.origin.x = v12;
    v21.origin.y = v14;
    v21.size.width = v16;
    v21.size.height = v18;
    Width = CGRectGetWidth(v21);
    v9 = swift_isaMask & *(_QWORD *)v2;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(_QWORD *)(v9 + 96)], v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v4 + 88) + 24))(v20, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return Width;
}

double sub_100442BF8(void *a1, CGFloat a2)
{
  id v3;
  double v4;

  v3 = a1;
  v4 = sub_100442A5C((uint64_t)v3, a2);

  return v4;
}

uint64_t sub_100442C48(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  void (*v9)(char *, char *, uint64_t, __n128);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t result;
  double v14;
  _QWORD v15[10];

  v2 = (_QWORD *)(swift_isaMask & *v1);
  v3 = v2[10];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)v15 - v6;
  v8 = (char *)v1 + v2[12];
  v9 = *(void (**)(char *, char *, uint64_t, __n128))(v4 + 16);
  v9((char *)v15 - v6, v8, v3, v5);
  v10 = v2[11];
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v3, v10);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  ((void (*)(char *, char *, uint64_t))v9)(v7, v8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 24))(v15, v3, v10);
  result = ((uint64_t (*)(char *, uint64_t))v12)(v7, v3);
  v14 = ceil((double)v11 / (double)v15[9]);
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v14 < 9.22337204e18)
    return (uint64_t)v14;
LABEL_7:
  __break(1u);
  return result;
}

void sub_100442D9C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(double *__return_ptr, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  __n128 v31;
  _QWORD v33[10];
  _QWORD v34[10];
  _QWORD v35[10];
  _QWORD v36[10];
  _QWORD v37[10];
  double v38[10];
  _QWORD v39[10];
  _QWORD v40[10];
  _QWORD v41[11];

  v2 = v1;
  v3 = swift_isaMask & *v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(a1).n128_u64[0];
  v8 = (char *)&v33[-1] - v7;
  v9 = objc_msgSend(v1, "contentSize", v6);
  if (v11 == 0.0 && v10 == 0.0)
  {
    v12 = (double)sub_100442C48((uint64_t)v9);
    v13 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v8, v13, v4);
    v15 = *(_QWORD *)(v3 + 88);
    v16 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v15 + 24);
    v16((double *)v33, v4, v15);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v18 = (double)v33[9];
    v14(v8, v13, v4);
    v16((double *)v34, v4, v15);
    v17(v8, v4);
    v19 = *(double *)&v34[1];
    v14(v8, v13, v4);
    v16((double *)v35, v4, v15);
    v17(v8, v4);
    v20 = v19 + *(double *)&v35[3] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v36, v4, v15);
    v17(v8, v4);
    v21 = v20 + *(double *)&v36[4] * v12;
    v14(v8, v13, v4);
    v16((double *)v37, v4, v15);
    v17(v8, v4);
    v22 = v21 + (v12 + -1.0) * *(double *)&v37[6];
    v14(v8, v13, v4);
    v16(v38, v4, v15);
    v17(v8, v4);
    v23 = v38[0];
    v14(v8, v13, v4);
    v16((double *)v39, v4, v15);
    v17(v8, v4);
    v24 = v23 + *(double *)&v39[2] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v40, v4, v15);
    v17(v8, v4);
    v25 = v24 + *(double *)&v40[5] * v18;
    v14(v8, v13, v4);
    v16((double *)v41, v4, v15);
    v17(v8, v4);
    sub_100443130((uint64_t)objc_msgSend(v1, "setContentSize:", v22, v25 + (v18 + -1.0) * *(double *)&v41[7]));
    v26 = (double *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA8));
    if (((_BYTE)v26[2] & 1) == 0)
    {
      objc_msgSend(v2, "setContentOffset:", *v26, v26[1]);
      *v26 = 0.0;
      v26[1] = 0.0;
      *((_BYTE *)v26 + 16) = 1;
      v27 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x88));
      v28 = *v27;
      if (*v27)
      {
        v29 = v27[1];
        ObjectType = swift_getObjectType();
        v31 = swift_unknownObjectRetain(v28);
        dispatch thunk of ScrollObserver.didScroll(in:)(v2, ObjectType, v29, v31);
        swift_unknownObjectRelease();
      }
    }
  }
}

id sub_100443130(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  void (*v10)(_BYTE *, char *, uint64_t, __n128);
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void (*v13)(_BYTE *, uint64_t);
  double v14;
  double Width;
  id result;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  _BYTE v33[24];
  _QWORD v34[10];
  _QWORD v35[9];
  uint64_t v36;
  CGRect v37;

  v2 = v1;
  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = &v33[-v7];
  v9 = (char *)v2 + v3[12];
  v10 = *(void (**)(_BYTE *, char *, uint64_t, __n128))(v5 + 16);
  v10(&v33[-v7], v9, v4, v6);
  v11 = v3[11];
  v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 24);
  v12(v34, v4, v11);
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v14 = *(double *)&v34[4] + *(double *)&v34[6];
  objc_msgSend(v2, "frame");
  Width = CGRectGetWidth(v37);
  result = objc_msgSend(v2, "contentInset");
  v18 = ceil((Width - v17) / v14);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19 = (uint64_t)v18;
  v20 = *(uint64_t *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x70));
  if (*((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78)) == 1)
  {
    v21 = __OFADD__(v19, v20);
    v22 = v19 + v20;
    if (!v21)
    {
      if (v22 + 0x4000000000000000 >= 0)
      {
        v23 = 2 * v22;
        ((void (*)(_BYTE *, char *, uint64_t))v10)(v8, v9, v4);
        v12(v35, v4, v11);
        result = (id)((uint64_t (*)(_BYTE *, uint64_t))v13)(v8, v4);
        v24 = v23 * v36;
        if ((unsigned __int128)(v23 * (__int128)v36) >> 64 == (v23 * v36) >> 63)
        {
          v25 = *v2;
          v26 = swift_isaMask;
LABEL_13:
          swift_beginAccess((char *)v2 + *(_QWORD *)((v26 & v25) + 0xB0), v33, 33, 0);
          AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v11);
          v30 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
          WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v30);
          v32 = type metadata accessor for ReusePool(0, v30, WitnessTable);
          ReusePool.limit.setter(v24, v32);
          return (id)swift_endAccess(v33);
        }
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v20 + 0x4000000000000000 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v27 = 2 * v20;
  ((void (*)(_BYTE *, char *, uint64_t))v10)(v8, v9, v4);
  v12(v35, v4, v11);
  result = (id)((uint64_t (*)(_BYTE *, uint64_t))v13)(v8, v4);
  v28 = v27 * v36;
  if ((unsigned __int128)(v27 * (__int128)v36) >> 64 != (v27 * v36) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v24 = v19 + v28;
  if (!__OFADD__(v19, v28))
  {
    v25 = *v2;
    v26 = swift_isaMask;
    goto LABEL_13;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_100443410(uint64_t a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(double *__return_ptr, uint64_t, uint64_t);
  double v29;
  double v30;
  double v31;
  double v32;
  double Width;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  double v45[10];
  _QWORD v46[10];
  _QWORD v47[10];
  CGRect v48;
  CGRect v49;

  v3 = v2;
  v44 = a1;
  v5 = swift_isaMask & *v2;
  v6 = *(_QWORD *)(v5 + 0x50);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v42 - v12;
  objc_msgSend(v3, "frame", v11);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v23(v13, v22, v6);
  v24 = *(_QWORD *)(v5 + 88);
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 32);
  v26 = v25(v6, v24);
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v13, v6);
  if (v26 >= 1)
  {
    v48.origin.x = v15;
    v48.origin.y = v17;
    v48.size.width = v19;
    v48.size.height = v21;
    if (!CGRectIsEmpty(v48))
    {
      v23(v13, v22, v6);
      v28 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v24 + 24);
      v28(v45, v6, v24);
      v27(v13, v6);
      v29 = v45[4] + v45[6];
      v23(v13, v22, v6);
      v28((double *)v46, v6, v24);
      v27(v13, v6);
      v43 = v46[9];
      v23(v13, v22, v6);
      v28((double *)v47, v6, v24);
      v27(v13, v6);
      v30 = *(double *)&v47[3];
      v31 = 0.0;
      if (a2 >= 0.0)
        v31 = a2;
      v32 = v31 + *(double *)&v47[1];
      v49.origin.x = v15;
      v49.origin.y = v17;
      v49.size.width = v19;
      v49.size.height = v21;
      Width = CGRectGetWidth(v49);
      v34 = floor(v32 / v29);
      if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
      {
        if (v34 > -9.22337204e18)
        {
          if (v34 < 9.22337204e18)
          {
            v35 = floor((v32 + Width - v30) / v29);
            if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) != 0)
            {
              if (v35 > -9.22337204e18)
              {
                if (v35 < 9.22337204e18)
                {
                  v36 = (uint64_t)v34;
                  v37 = (uint64_t)v35;
                  if ((v44 & 1) != 0)
                  {
                    v38 = *(_QWORD *)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x70));
                    v39 = __OFSUB__(v36, v38);
                    v36 -= v38;
                    if (v39)
                    {
LABEL_26:
                      __break(1u);
                      goto LABEL_27;
                    }
                    v39 = __OFADD__(v37, v38);
                    v37 += v38;
                    if (v39)
                    {
LABEL_27:
                      __break(1u);
                      return;
                    }
                  }
                  if ((unsigned __int128)(v36 * (__int128)v43) >> 64 == (v36 * v43) >> 63)
                  {
                    v40 = v22;
                    v41 = v43;
                    v23(v9, v40, v6);
                    v25(v6, v24);
                    v27(v9, v6);
                    if ((unsigned __int128)(v37 * (__int128)v41) >> 64 == (v37 * v41) >> 63)
                      return;
                    goto LABEL_25;
                  }
LABEL_24:
                  __break(1u);
LABEL_25:
                  __break(1u);
                  goto LABEL_26;
                }
LABEL_23:
                __break(1u);
                goto LABEL_24;
              }
LABEL_22:
              __break(1u);
              goto LABEL_23;
            }
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_20;
    }
  }
}

void sub_1004437A8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  void (*v15)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[10];
  _QWORD v21[10];
  _QWORD v22[9];
  uint64_t v23;
  _QWORD v24[9];
  uint64_t v25;
  _QWORD v26[10];
  _QWORD v27[10];
  _QWORD v28[8];
  char v29;
  _QWORD v30[9];
  uint64_t v31;
  _QWORD v32[7];

  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v17 - v7;
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v10 = (char *)v1 + v3[12];
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
  v11(v8, v10, v4, v6);
  v12 = v3[11];
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v4, v12);
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  if (v13 <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v19 = a1;
  ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
  v15 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 24);
  v15(v20, v4, v12);
  v14(v8, v4);
  ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
  v15(v21, v4, v12);
  v14(v8, v4);
  ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
  v15(v22, v4, v12);
  v14(v8, v4);
  v16 = v23;
  if (!v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
  v15(v24, v4, v12);
  v14(v8, v4);
  if (!v25)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v17 = v19 / v16;
  v18 = v19 % v25;
  if (v19 / v16 >= 1)
  {
    ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
    v15(v26, v4, v12);
    v14(v8, v4);
  }
  if (v18)
  {
    ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
    v15(v27, v4, v12);
    v14(v8, v4);
  }
  ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
  v15(v28, v4, v12);
  v14(v8, v4);
  if ((v29 & 1) != 0)
  {
    ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
    v15(v30, v4, v12);
    v14(v8, v4);
    if (v31)
    {
      if ((v19 + 1) % v31)
      {
        ((void (*)(char *, char *, uint64_t))v11)(v8, v10, v4);
        v15(v32, v4, v12);
        v14(v8, v4);
      }
      return;
    }
LABEL_18:
    __break(1u);
  }
}

void sub_100443B08()
{
  _QWORD *v0;
  _QWORD *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t, id, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t AssociatedTypeWitness;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  _BYTE v69[24];
  char v70[24];
  objc_super v71;
  _QWORD v72[6];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x50);
  v57 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(ObjectType);
  v63 = (char *)&v53 - v4;
  v6 = *(_QWORD *)(v5 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v55 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(AssociatedTypeWitness).n128_u64[0];
  v65 = (char *)&v53 - v8;
  v71.receiver = v1;
  v71.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v71, "layoutSubviews", v7);
  sub_100442D9C((uint64_t)v9);
  objc_msgSend(v1, "contentOffset");
  sub_100443410(1, v10);
  v12 = v11;
  v14 = v13;
  v15 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
  swift_beginAccess(v15, v70, 0, 0);
  v16 = *v15;
  v62 = v6;
  v64 = v3;
  v17 = swift_getAssociatedTypeWitness(0, v6);
  v18 = swift_bridgeObjectRetain(v16);
  v59 = v17;
  _NativeDictionary.makeIterator()(v72, v18);
  v19 = v72[0];
  v20 = v72[1];
  v21 = v72[3];
  v22 = v72[4];
  v66 = *(_QWORD *)((swift_isaMask & *v1) + 0xA0);
  v23 = (unint64_t)(v72[2] + 64) >> 6;
  while (1)
  {
    if (v22)
    {
      v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_20;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v26 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v26);
    v28 = v21 + 1;
    if (v27)
      goto LABEL_19;
    v28 = v21 + 2;
    if (v21 + 2 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 3;
    if (v21 + 3 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 4;
    if (v21 + 4 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 5;
    if (v21 + 5 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (!v27)
    {
      v29 = v21 + 6;
      do
      {
        if (v23 == v29)
          goto LABEL_28;
        v27 = *(_QWORD *)(v20 + 8 * v29++);
      }
      while (!v27);
      v28 = v29 - 1;
    }
LABEL_19:
    v22 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v28 << 6);
    v21 = v28;
LABEL_20:
    v30 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v25);
    if (*((_BYTE *)v1 + v66) == 1 || v30 < v12 || v30 >= v14)
      sub_100444064(v30);
  }
LABEL_28:
  swift_release();
  v33 = v59;
  if (v12 == v14)
  {
LABEL_29:
    *((_BYTE *)v1 + v66) = 0;
    return;
  }
  if (v14 < v12)
    goto LABEL_45;
  if (v12 < v14)
  {
    v34 = (_QWORD *)(swift_isaMask & *v1);
    v60 = (char *)v1 + v34[12];
    v36 = v34[24];
    v35 = v34[25];
    v61 = (char *)v1 + v36;
    v58 = (char *)v1 + v35;
    v54 = v15;
    v53 = v14;
    while (2)
    {
      swift_beginAccess(v15, v69, 32, 0);
      v38 = *v15;
      v67 = v12;
      Dictionary.subscript.getter(&v68, &v67, v38, &type metadata for Int, v33, &protocol witness table for Int);
      v39 = v68;
      swift_endAccess(v69);

      if (v39)
        goto LABEL_35;
      v40 = sub_1004443B4(v12);
      v41 = v57;
      v42 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      v43 = v63;
      v44 = v64;
      v45 = v60;
      v42(v63, v60, v64);
      v46 = v62;
      v47 = v65;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 40))(v12, v44, v62);
      v48 = *(void (**)(char *, uint64_t))(v41 + 8);
      v48(v43, v44);
      v42(v43, v45, v44);
      (*(void (**)(char *, uint64_t, id, uint64_t, uint64_t))(v46 + 56))(v47, v12, v40, v44, v46);
      v48(v43, v44);
      if ((v61[8] & 1) == 0 && v12 == *(_QWORD *)v61)
      {
        v49 = v63;
        v50 = v64;
        v42(v63, v60, v64);
        v51 = *(void (**)(uint64_t, id, char *, uint64_t))(v62 + 72);
        v52 = 1;
        goto LABEL_43;
      }
      if ((v58[8] & 1) != 0 || v12 != *(_QWORD *)v58)
      {

        v37 = v65;
      }
      else
      {
        v49 = v63;
        v50 = v64;
        v42(v63, v60, v64);
        v51 = *(void (**)(uint64_t, id, char *, uint64_t))(v62 + 72);
        v52 = 2;
LABEL_43:
        v37 = v65;
        v51(v52, v40, v65, v50);

        v48(v49, v50);
      }
      v15 = v54;
      v14 = v53;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v37, AssociatedTypeWitness);
      v33 = v59;
LABEL_35:
      if (v14 == ++v12)
        goto LABEL_29;
      continue;
    }
  }
LABEL_46:
  __break(1u);
}

void sub_100444064(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t WitnessTable;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  void *v41;

  v2 = v1;
  v4 = (_QWORD *)(swift_isaMask & *v1);
  v5 = v4[10];
  v6 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v35 = AssociatedTypeWitness;
  v36 = v8;
  __chkstk_darwin(AssociatedTypeWitness);
  v10 = (char *)&v34 - v9;
  v37 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v38 = a1;
  v40 = a1;
  swift_beginAccess((char *)v1 + v4[23], v39, 33, 0);
  v17 = swift_getAssociatedTypeWitness(255, v6);
  v18 = type metadata accessor for Dictionary(0, &type metadata for Int, v17, &protocol witness table for Int);
  Dictionary.removeValue(forKey:)(&v41, &v40, v18);
  swift_endAccess(v39);
  v19 = v41;
  if (v41)
  {
    v20 = swift_isaMask & *v1;
    v21 = (char *)v1 + *(_QWORD *)(v20 + 0xC0);
    if ((v21[8] & 1) == 0 && *(_QWORD *)v21 == v38
      || (v22 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC8), (v22[8] & 1) == 0) && *(_QWORD *)v22 == v38)
    {
      v23 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60);
      v34 = v17;
      v24 = v16;
      v25 = v37;
      v26 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v26(v24, v23, v5);
      v26(v13, v23, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v38, v5, v6);
      v27 = *(void (**)(char *, uint64_t))(v25 + 8);
      v16 = v24;
      v17 = v34;
      v27(v13, v5);
      (*(void (**)(_QWORD, void *, char *, uint64_t, uint64_t))(v6 + 72))(0, v19, v10, v5, v6);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v35);
      v27(v16, v5);
      v20 = swift_isaMask & *v2;
    }
    v41 = v19;
    swift_beginAccess((char *)v2 + *(_QWORD *)(v20 + 176), v39, 33, 0);
    v28 = type metadata accessor for ViewRecycler(255, v17);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v28);
    v30 = type metadata accessor for ReusePool(0, v28, WitnessTable);
    v31 = ReusePool.recycle(_:)(&v41, v30);
    swift_endAccess(v39);
    if ((v31 & 1) != 0)
    {
      v32 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x60);
      v33 = v37;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v16, v32, v5);
      (*(void (**)(void *, uint64_t, uint64_t))(v6 + 64))(v19, v5, v6);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v5);
    }
    else
    {

    }
  }
}

id sub_1004443B4(uint64_t a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  __n128 v14;
  void *v15;
  id v16;
  id v17;
  objc_class *ObjectType;
  id v19;
  _BOOL8 v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;
  id v28;

  v2 = v1;
  v4 = (_QWORD *)(swift_isaMask & *(_QWORD *)v1);
  v5 = v4[10];
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v25 - v7;
  swift_beginAccess(&v1[v4[22]], &v27, 33, 0);
  v9 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9);
  v11 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v11);
  v13 = type metadata accessor for ReusePool(0, v11, WitnessTable);
  ReusePool.dequeue()(&v28, v13);
  v14 = swift_endAccess(&v27);
  v15 = v28;
  if (!v28)
  {
    (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v8, &v2[*(_QWORD *)((swift_isaMask & *(_QWORD *)v2) + 0x60)], v5, v14);
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v5, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(v2, "addSubview:", v15);
  }
  v16 = v15;
  sub_1004437A8(a1);
  objc_msgSend(v16, "setFrame:");

  objc_msgSend(v16, "setAutoresizingMask:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v17 = v16;
  ObjectType = (objc_class *)swift_getObjectType();
  v27.receiver = v2;
  v27.super_class = ObjectType;
  objc_msgSend(v17, "setSemanticContentAttribute:", objc_msgSendSuper2(&v27, "semanticContentAttribute"));

  v19 = v17;
  v20 = objc_msgSend(v19, "effectiveUserInterfaceLayoutDirection") == (id)1;
  v21 = objc_msgSend(v19, "layer");
  objc_msgSend(v21, "setFlipsHorizontalAxis:", v20);

  v28 = v19;
  v26 = a1;
  swift_beginAccess(&v2[*(_QWORD *)((swift_isaMask & *(_QWORD *)v2) + 0xB8)], &v27, 33, 0);
  v22 = type metadata accessor for Dictionary(0, &type metadata for Int, AssociatedTypeWitness, &protocol witness table for Int);
  v23 = v19;
  Dictionary.subscript.setter(&v28, &v26, v22);
  swift_endAccess(&v27);
  return v23;
}

void sub_10044467C(void *a1)
{
  id v1;

  v1 = a1;
  sub_100443B08();

}

int64_t *sub_1004446B0()
{
  void *v0;
  double v1;
  int64_t *v2;
  int64_t v3;

  objc_msgSend(v0, "contentOffset");
  sub_100443410(0, v1);
  return sub_1003F984C(v2, v3);
}

void sub_1004446D8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _BYTE v33[24];

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = v2[10];
  v4 = v2[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v28 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v12);
  v17 = (char *)&v28 - v14;
  v18 = (char *)v1 + v2[24];
  if ((v18[8] & 1) == 0)
  {
    v19 = *(_QWORD *)v18;
    if ((*(_QWORD *)v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v29 = v15;
      v30 = v13;
      v20 = (char *)v1 + v2[12];
      v28 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
      v28((char *)&v28 - v14, v20, v3, v16);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      v22 = *(void (**)(char *, uint64_t))(v8 + 8);
      v22(v17, v3);
      if (v19 < v21)
      {
        v23 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
        swift_beginAccess(v23, v33, 32, 0);
        v24 = *v23;
        v31 = v19;
        v25 = swift_getAssociatedTypeWitness(0, v4);
        Dictionary.subscript.getter(&v32, &v31, v24, &type metadata for Int, v25, &protocol witness table for Int);
        v26 = v32;
        if (v32)
        {
          swift_endAccess(v33);
          v27 = (void (*)(char *, char *, uint64_t))v28;
          ((void (*)(char *, char *, uint64_t))v28)(v17, v20, v3);
          v27(v11, v20, v3);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v19, v3, v4);
          v22(v11, v3);
          (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v4 + 72))(1, v26, v7, v3, v4);

          (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
          v22(v17, v3);
        }
        else
        {
          swift_endAccess(v33);
        }
        return;
      }
    }
    __break(1u);
  }
}

void sub_10044495C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _BYTE v33[24];

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = v2[10];
  v4 = v2[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v28 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v12);
  v17 = (char *)&v28 - v14;
  v18 = (char *)v1 + v2[25];
  if ((v18[8] & 1) == 0)
  {
    v19 = *(_QWORD *)v18;
    if ((*(_QWORD *)v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v29 = v15;
      v30 = v13;
      v20 = (char *)v1 + v2[12];
      v28 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
      v28((char *)&v28 - v14, v20, v3, v16);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      v22 = *(void (**)(char *, uint64_t))(v8 + 8);
      v22(v17, v3);
      if (v19 < v21)
      {
        v23 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
        swift_beginAccess(v23, v33, 32, 0);
        v24 = *v23;
        v31 = v19;
        v25 = swift_getAssociatedTypeWitness(0, v4);
        Dictionary.subscript.getter(&v32, &v31, v24, &type metadata for Int, v25, &protocol witness table for Int);
        v26 = v32;
        if (v32)
        {
          swift_endAccess(v33);
          v27 = (void (*)(char *, char *, uint64_t))v28;
          ((void (*)(char *, char *, uint64_t))v28)(v17, v20, v3);
          v27(v11, v20, v3);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v19, v3, v4);
          v22(v11, v3);
          (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v4 + 72))(2, v26, v7, v3, v4);

          (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
          v22(v17, v3);
        }
        else
        {
          swift_endAccess(v33);
        }
        return;
      }
    }
    __break(1u);
  }
}

void sub_100444BE0(uint64_t a1, char a2)
{
  _QWORD *v2;
  char *v5;

  sub_1004458BC();
  v5 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC8);
  *(_QWORD *)v5 = a1;
  v5[8] = a2 & 1;
  sub_10044495C();
}

void sub_100444C34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  _QWORD *v18;
  id v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char *v25;
  void *v26;

  v3 = v2;
  v6 = (uint64_t *)(swift_isaMask & *v2);
  v7 = v6[26];
  v8 = *(void **)((char *)v2 + v7);
  if (!v8
    || objc_msgSend(v8, "phase") == (id)3
    || (v9 = *(void **)((char *)v2 + v7)) != 0 && objc_msgSend(v9, "phase") == (id)4)
  {
    swift_bridgeObjectRetain(a1);
    v11 = (void *)sub_1004EA504(v10);
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(a1).n128_u64[0];
    if (v11)
    {
      objc_msgSend(v11, "locationInView:", v2, v12);
      v14 = v13;
      v16 = v15;
      v17 = objc_msgSend(v2, "hitTest:withEvent:", a2);
      if (v17
        && (sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr),
            v18 = v2,
            v19 = v17,
            v20 = static NSObject.== infix(_:_:)(v19, v18),
            v19,
            v18,
            (v20 & 1) != 0)
        || (v21 = sub_100445B90(v17, v6[10], v6[11]), (v21 & 1) == 0))
      {
        v22 = 0;
        v24 = 1;
      }
      else
      {
        v22 = sub_100441E94(v21, v14, v16);
        v24 = v23 & 1;
      }
      sub_100445680();
      v25 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0xC0);
      *(_QWORD *)v25 = v22;
      v25[8] = v24;
      sub_1004446D8();

      v26 = *(void **)((char *)v3 + v7);
      *(_QWORD *)((char *)v3 + v7) = v11;

    }
  }
  sub_1004450F4(v3, a1, a2, (SEL *)&selRef_touchesBegan_withEvent_);
}

double sub_100444DF8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100223F40(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_100444C34);
}

void sub_100444E04(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v37 = a2;
  v4 = a1;
  v5 = (_QWORD *)(swift_isaMask & *(_QWORD *)v2);
  v6 = v5[10];
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v32 - v8;
  v10 = v5[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v10);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v14 = (char *)&v32 - v13;
  v15 = v5[26];
  v16 = *(void **)&v3[v15];
  if (v16)
  {
    v17 = v16;
    v18 = v4;
    v19 = v17;
    v36 = v18;
    if ((sub_10057625C(v17, v18) & 1) != 0)
    {
      v20 = *(void **)&v3[v15];
      *(_QWORD *)&v3[v15] = 0;

      v21 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
      if ((v21[8] & 1) != 0 || (v35 = *(_QWORD *)v21, (objc_msgSend(v3, "isDragging") & 1) != 0))
      {
        sub_100445680();
        v22 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
        *(_QWORD *)v22 = 0;
        v22[8] = 1;
        sub_1004446D8();
        sub_1004458BC();
        v23 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC8)];
        *(_QWORD *)v23 = 0;
        v23[8] = 1;
        sub_10044495C();
      }
      else
      {
        sub_100445680();
        v24 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
        *(_QWORD *)v24 = 0;
        v24[8] = 1;
        sub_1004446D8();
        sub_1004458BC();
        v25 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC8)];
        *(_QWORD *)v25 = v35;
        v25[8] = 0;
        sub_10044495C();
        v26 = swift_isaMask & *(_QWORD *)v3;
        v27 = (uint64_t *)&v3[*(_QWORD *)(v26 + 0x68)];
        v34 = (uint64_t (*)(char *, uint64_t))*v27;
        if (v34)
        {
          v33 = v27[1];
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v3[*(_QWORD *)(v26 + 96)], v6);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v35, v6, v10);
          v28 = v33;
          v29 = v34;
          sub_100018918((uint64_t)v34, v33);
          v30 = *(void (**)(char *, uint64_t))(v7 + 8);
          v31 = v28;
          v30(v9, v6);
          LOBYTE(v28) = v29(v14, v35);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
          if ((v28 & 1) != 0)
            sub_100445B20();

          sub_100018908((uint64_t)v29, v31);
          goto LABEL_7;
        }
      }
    }

LABEL_7:
    v4 = v36;
  }
  sub_1004450F4(v3, v4, v37, (SEL *)&selRef_touchesEnded_withEvent_);
}

void sub_1004450F4(_QWORD *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  Class isa;
  uint64_t v9;
  objc_class *v10;
  objc_super v11;

  v7 = swift_isaMask & *a1;
  sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
  sub_100225F48();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v10 = (objc_class *)type metadata accessor for HorizontalShelfView(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v9);
  v11.receiver = a1;
  v11.super_class = v10;
  objc_msgSendSuper2(&v11, *a4, isa, a3);

}

double sub_1004451A4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100223F40(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_100444E04);
}

void sub_1004451B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  char *v7;
  char *v8;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + 0xD0);
  v6 = *(void **)((char *)v2 + v5);
  *(_QWORD *)((char *)v2 + v5) = 0;

  sub_100445680();
  v7 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC0);
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  sub_1004446D8();
  sub_1004458BC();
  v8 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC8);
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  sub_10044495C();
  sub_1004450F4(v2, a1, a2, (SEL *)&selRef_touchesCancelled_withEvent_);
}

double sub_100445268(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100223F40(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_1004451B0);
}

void sub_100445274()
{
  sub_100445C98();
}

uint64_t type metadata accessor for HorizontalShelfView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003C2F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalShelfView);
}

uint64_t sub_10044529C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = &unk_100662668;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_1004452E4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SnapToColumnScrollObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003C2F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapToColumnScrollObserver);
}

uint64_t getEnumTagSinglePayload for HorizontalShelfLayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 64);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalShelfLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalShelfLayout()
{
  return &type metadata for HorizontalShelfLayout;
}

void sub_1004453D0(UIScrollView in)
{
  ScrollObserver.didScroll(in:)(in);
}

void sub_1004453D8(double a1, double a2, uint64_t a3, double *a4)
{
  sub_100445CC4(a4, a1, a2);
}

void sub_1004453E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  char *v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v2 + 88));
  v4 = type metadata accessor for ViewRecycler(0, AssociatedTypeWitness);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - v5;
  v7 = (_QWORD *)((char *)v1 + *(_QWORD *)(v2 + 104));
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x70)) = 1;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78)) = 0;
  v8 = *(_QWORD *)((swift_isaMask & *v1) + 0x80);
  v9 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)((char *)v1 + v8) = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  v10 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x88));
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90)) = 0;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x98)) = 0;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 0;
  v11 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA8);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  ViewRecycler.init()(AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v4);
  ReusePool.init(recycler:limit:)(v6, 5, v4, WitnessTable);
  v13 = *(_QWORD *)((swift_isaMask & *v1) + 0xB8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, AssociatedTypeWitness, 0, 0);
  v15 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  *(_QWORD *)((char *)v1 + v13) = Dictionary.init(dictionaryLiteral:)(v15, &type metadata for Int, AssociatedTypeWitness, &protocol witness table for Int);
  v16 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC0);
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC8);
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xD0)) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/HorizontalShelfView.swift", 46, 2, 250, 0);
  __break(1u);
}

void sub_100445680()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _BYTE v30[24];

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = v1[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3);
  __chkstk_darwin(AssociatedTypeWitness);
  v6 = (char *)&v25 - v5;
  v7 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  v15 = (char *)v0 + v1[24];
  if ((v15[8] & 1) == 0)
  {
    v26 = v12;
    v16 = *(_QWORD *)v15;
    v17 = (_QWORD *)((char *)v0 + v1[23]);
    swift_beginAccess(v17, v30, 32, 0);
    v18 = *v17;
    v27 = v16;
    v28 = v16;
    v19 = swift_getAssociatedTypeWitness(0, v3);
    Dictionary.subscript.getter(&v29, &v28, v18, &type metadata for Int, v19, &protocol witness table for Int);
    v20 = v29;
    if (v29)
    {
      swift_endAccess(v30);
      v21 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60);
      v22 = AssociatedTypeWitness;
      v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v23(v14, v21, v2);
      v23(v10, v21, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v27, v2, v3);
      v24 = *(void (**)(char *, uint64_t))(v7 + 8);
      v24(v10, v2);
      (*(void (**)(_QWORD, void *, char *, uint64_t, uint64_t))(v3 + 72))(0, v20, v6, v2, v3);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v22);
      v24(v14, v2);
    }
    else
    {
      swift_endAccess(v30);
    }
  }
}

void sub_1004458BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char v23;
  _BOOL8 v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _BYTE v33[24];

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = v1[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3);
  __chkstk_darwin(AssociatedTypeWitness);
  v6 = (char *)&v28 - v5;
  v7 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - v13;
  v15 = (char *)v0 + v1[25];
  if ((v15[8] & 1) == 0)
  {
    v29 = v12;
    v16 = *(_QWORD *)v15;
    v17 = (_QWORD *)((char *)v0 + v1[23]);
    swift_beginAccess(v17, v33, 32, 0);
    v18 = *v17;
    v30 = v16;
    v31 = v16;
    v19 = swift_getAssociatedTypeWitness(0, v3);
    Dictionary.subscript.getter(&v32, &v31, v18, &type metadata for Int, v19, &protocol witness table for Int);
    v20 = v32;
    if (v32)
    {
      swift_endAccess(v33);
      v21 = swift_isaMask & *v0;
      v22 = (char *)v0 + *(_QWORD *)(v21 + 0xC0);
      v23 = v22[8];
      v28 = AssociatedTypeWitness;
      v24 = (v23 & 1) == 0 && v30 == *(_QWORD *)v22;
      v25 = (char *)v0 + *(_QWORD *)(v21 + 96);
      v26 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v26(v14, v25, v2);
      v26(v10, v25, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v30, v2, v3);
      v27 = *(void (**)(char *, uint64_t))(v7 + 8);
      v27(v10, v2);
      (*(void (**)(_BOOL8, void *, char *, uint64_t, uint64_t))(v3 + 72))(v24, v20, v6, v2, v3);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v28);
      v27(v14, v2);
    }
    else
    {
      swift_endAccess(v33);
    }
  }
}

void sub_100445B20()
{
  _QWORD *v0;
  char *v1;
  char *v2;

  sub_100445680();
  v1 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xC0);
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  sub_1004446D8();
  sub_1004458BC();
  v2 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xC8);
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  sub_10044495C();
}

unint64_t sub_100445B90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (!a1)
    return 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  v7 = a1;
  while (1)
  {
    v9 = swift_dynamicCastUnknownClass(v7, AssociatedTypeWitness);
    v8 = v9 != 0;
    if (v9)
      break;
    v11 = type metadata accessor for HorizontalShelfView(0, a2, a3, v10);
    if (swift_dynamicCastClass(v7, v11))
      break;
    v12 = objc_opt_self(UIControl);
    v13 = (void *)swift_dynamicCastObjCClass(v7, v12);
    if (v13)
    {
      if ((objc_msgSend(v13, "isTracking") & 1) != 0)
        break;
    }
    v8 = (unint64_t)objc_msgSend(v7, "superview");

    v7 = (id)v8;
    if (!v8)
      return v8;
  }

  return v8;
}

void sub_100445C98()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.HorizontalShelfView", 40, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_100445CC4(double *a1, double a2, double a3)
{
  uint64_t *v3;
  double *v4;
  uint64_t *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *Strong;
  int64_t *v15;
  int64_t v16;
  long double v17;
  void *v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double Width;
  double v28;
  void *v29;
  double v30;
  double v31;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  _QWORD v37[4];
  double v38;
  double v39;
  CGRect v40;

  v4 = (double *)v3;
  v8 = v3 + 2;
  v9 = *(double *)v3;
  v10 = *(_QWORD *)(*v3 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(a1);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + 2);
  v15 = sub_1004446B0();

  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    v17 = *a1;
    v18 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
    objc_msgSend(v18, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v40.origin.x = v20;
    v40.origin.y = v22;
    v40.size.width = v24;
    v40.size.height = v26;
    Width = CGRectGetWidth(v40);
    if (v17 > 0.0)
    {
      v28 = Width;
      v29 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
      objc_msgSend(v29, "contentSize");
      v31 = v30;

      if (v17 < v31 - v28)
      {
        v32 = (char *)swift_unknownObjectUnownedLoadStrong(v8);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &v32[*(_QWORD *)((swift_isaMask & *(_QWORD *)v32) + 0x60)], v10);
        (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)&v9 + 88) + 24))(v37, v10);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        v33 = v38 + v39;
        v34 = a2;
        if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
          v34 = v4[3];
        v35 = fmod(v17, v38 + v39);
        if (v34 >= 0.0)
          v36 = v33 - v35 + *a1;
        else
          v36 = *a1 - v35;
        *a1 = v36;
        v4[3] = a2;
        v4[4] = a3;
      }
    }
  }
}

uint64_t sub_100445EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a2);
  swift_retain(a3);
  swift_retain(a4);
  return a1;
}

void sub_100445F20(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t *v10;
  uint64_t v11;
  _BYTE v12[24];

  *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_primaryIcon) = a1;
  swift_retain(a1);
  swift_release();
  v10 = (uint64_t *)(v5 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons);
  swift_beginAccess(v5 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons, v12, 1, 0);
  v11 = *v10;
  *v10 = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_artworkLoader) = a3;
  swift_release();
  swift_retain(a3);
  sub_1004464E0(a4, a5);
}

id sub_100445FE4(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  id v4;
  double left;
  double bottom;
  double right;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_primaryIcon] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_artworkLoader] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_impressionsCalculator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_amsImpressionItems] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_isCompactSheet] = a1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v8 = v4;
  objc_msgSend(v8, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v8, "setClipsToBounds:", 1);

  return v8;
}

void sub_100446118()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  double x;
  double y;
  double width;
  double height;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  id v27;
  void *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[4];
  unsigned int v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  char v51[24];
  objc_super v52;
  CGRect v53;
  CGRect v54;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v50 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v49 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UpsellGridLayout(0, v4);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for UpsellGridLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = &v43[-v16];
  v52.receiver = v1;
  v52.super_class = ObjectType;
  objc_msgSendSuper2(&v52, "layoutSubviews", v15);
  objc_msgSend(v1, "bounds");
  x = v53.origin.x;
  y = v53.origin.y;
  width = v53.size.width;
  height = v53.size.height;
  if (CGRectIsEmpty(v53))
    return;
  v22 = (uint64_t *)&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews], v51, 0, 0);
  v23 = *v22;
  if ((unint64_t)*v22 >> 62)
  {
    if (v23 < 0)
      v40 = *v22;
    else
      v40 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v22);
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v23);
    if (!v41)
      return;
  }
  else if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  v24 = (void *)objc_opt_self(UIView);
  v44 = objc_msgSend(v24, "areAnimationsEnabled");
  v45 = v24;
  objc_msgSend(v24, "setAnimationsEnabled:", 0);
  v25 = objc_msgSend(v1, "traitCollection");
  v26 = UITraitCollection.isSizeClassCompact.getter(v25);

  v46 = v3;
  if ((v26 & 1) != 0
    && ((v27 = objc_msgSend(v1, "window")) == 0
     || (v28 = v27, objc_msgSend(v27, "frame"), v29 = CGRectGetWidth(v54), v28, width >= v29))
    || v1[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_isCompactSheet] == 1)
  {
    v30 = 4;
  }
  else
  {
    v30 = 5;
  }
  UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v30);
  v31 = static UpsellGridLayout.iconCount(fitting:using:in:)(v17, v1, width, height);
  v32 = *v22;
  if ((unint64_t)*v22 >> 62)
  {
    if (v32 < 0)
      v42 = *v22;
    else
      v42 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v22);
    v33 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = v46;
  if (v33 != v31)
    sub_1004464E0(width, height);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v13, v17, v10);
  v35 = *v22;
  swift_bridgeObjectRetain(*v22);
  v37 = sub_1003AF7E0(v36);
  v38 = swift_bridgeObjectRelease(v35);
  UpsellGridLayout.init(metrics:icons:)(v13, v37, v38);
  v39 = v49;
  UpsellGridLayout.placeChildren(relativeTo:in:)(v1, x, y, width, height);
  (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v39, v34);
  (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v9, v48);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v17, v10);
  objc_msgSend(v45, "setAnimationsEnabled:", v44);
}

void sub_1004464E0(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char **v16;
  id v17;
  char v18;
  uint64_t p_superclass;
  SEL *v20;
  id v21;
  void *v22;
  double Width;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  double v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  __n128 v75;
  id v76;
  uint64_t v77;
  id v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t i;
  id v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  _QWORD *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  id v106;
  char *v107;
  unint64_t v108;
  SEL *v109;
  unint64_t v110;
  _BYTE v111[24];
  _BYTE v112[24];
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  CGRect v116;
  CGRect v117;

  v3 = v2;
  v6 = sub_10000DAF8(&qword_1008131E0);
  v7 = __chkstk_darwin(v6);
  v109 = (SEL *)((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for UpsellGridLayout.Metrics(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v107 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v101 - v13;
  v15 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_artworkLoader);
  if (!v15)
    return;
  v16 = &selRef_fileURLWithPath_;
  v17 = objc_msgSend(v2, "traitCollection", swift_retain(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_artworkLoader)).n128_f64[0]);
  v18 = UITraitCollection.isSizeClassCompact.getter(v17);

  p_superclass = (uint64_t)_TtC20ProductPageExtension27ArticleHeaderScrollObserver.superclass;
  v20 = (SEL *)&selRef_startInteractiveTransition_;
  if ((v18 & 1) != 0
    && ((v21 = objc_msgSend(v3, "window")) == 0
     || (v22 = v21, objc_msgSend(v21, "frame"), Width = CGRectGetWidth(v116), v22, Width <= a1))
    || *((_BYTE *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_isCompactSheet) == 1)
  {
    v24 = 4;
  }
  else
  {
    v24 = 5;
  }
  UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v24);
  v25 = static UpsellGridLayout.largeIconSize(fitting:using:in:)(v14, v3, a1, a2);
  v27 = v26;
  v103 = *(void (**)(char *, uint64_t))(v10 + 8);
  v104 = v9;
  v103(v14, v9);
  v114 = (unint64_t)_swiftEmptyArrayStorage;
  v115 = (uint64_t)_swiftEmptyArrayStorage;
  v113 = (uint64_t)_swiftEmptyArrayStorage;
  v28 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews, v112, 33, 0);
  sub_100447300(v28);
  v30 = v29;
  swift_endAccess(v112);
  v31 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    goto LABEL_109;
LABEL_9:
  v106 = (id)v31;
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  v36 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_primaryIcon);
  v108 = v15;
  if (!v36)
    goto LABEL_16;
  v37 = swift_retain_n(v36, 2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
  v39 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v38 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v39 >= v38 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v36);
  specialized Array._endMutation()(v40);
  v31 = (uint64_t)v109;
  ImpressionableArtwork.impressionMetrics.getter(v41);
  v33 = (uint64_t)sub_100447AF4(v31);
  v42 = sub_1004105BC(v31);
  if (!v33)
    goto LABEL_15;
  v31 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)AMSUIDynamicImpressionItem), "initWithFrame:impressionMetrics:", v33, 0.0, 0.0, a1, a2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v15 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v43 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v43 >> 1)
    goto LABEL_131;
  while (1)
  {
    v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v31);
    specialized Array._endMutation()(v44);

    v15 = v108;
LABEL_15:
    ImpressionableArtwork.art.getter(v42);
    v45 = Artwork.config(using:)(v25, v27);
    swift_release();
    v46 = type metadata accessor for ArtworkView(0);
    v47 = sub_1000116A4();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v45, 2, 1, v106, v46, v47);
    swift_release();
    *(_QWORD *)&v35 = swift_release().n128_u64[0];
LABEL_16:
    objc_msgSend(v3, "bounds", v35);
    v25 = v48;
    v49 = objc_msgSend(v3, v16[214]);
    v33 = UITraitCollection.isSizeClassCompact.getter(v49);

    if ((v33 & 1) != 0
      && ((v50 = objc_msgSend(v3, v20[91])) == 0
       || (v51 = v50, objc_msgSend(v50, "frame"), v27 = CGRectGetWidth(v117), v51, v25 >= v27))
      || *((_BYTE *)v3 + *(_QWORD *)(p_superclass + 3016)) == 1)
    {
      v52 = 4;
    }
    else
    {
      v52 = 5;
    }
    p_superclass = (uint64_t)v107;
    UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v52);
    v53 = static UpsellGridLayout.iconSizes(fitting:using:in:)(p_superclass, v3, a1, a2);
    v54 = *(_QWORD *)(v53 + 16);
    v55 = v54 != 0;
    v105 = v53;
    if (v54 != v55)
    {
      v56 = v54 > v55;
      v43 = v54 - v55;
      v110 = v43;
      if (!v56)
        goto LABEL_130;
      v31 = v53;
      v102 = v3;
      v3 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons);
      swift_bridgeObjectRetain(v53);
      swift_beginAccess(v3, v112, 0, 0);
      p_superclass = 0;
      v32 = v31 + 16 * v55;
      v16 = (char **)(v32 + 40);
      while (1)
      {
        if (__OFADD__(p_superclass, 1))
        {
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
          goto LABEL_9;
        }
        v25 = *((double *)v16 - 1);
        v27 = *(double *)v16;
        swift_beginAccess(v28, v111, 33, 0);
        v57 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v57 < 0)
            v62 = *v28;
          else
            v62 = v57 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v63 = _CocoaArrayWrapper.endIndex.getter(v62);
          swift_bridgeObjectRelease(v57);
          if (!v63)
          {
LABEL_45:
            type metadata accessor for ArtworkView(0);
            v33 = static ArtworkView.iconArtworkView.getter();
            goto LABEL_46;
          }
        }
        else if (!*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_45;
        }
        v58 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v58 < 0)
            v84 = *v28;
          else
            v84 = v58 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v33 = _CocoaArrayWrapper.endIndex.getter(v84);
          swift_bridgeObjectRelease(v58);
          if (!v33)
            goto LABEL_105;
        }
        else
        {
          v32 = v58 & 0xFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_105;
        }
        v59 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v59 < 0)
            v85 = *v28;
          else
            v85 = v59 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v33 = _CocoaArrayWrapper.endIndex.getter(v85);
          swift_bridgeObjectRelease(v59);
          if (!v33)
            goto LABEL_106;
        }
        else
        {
          v32 = v59 & 0xFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_106;
        }
        if ((v59 & 0xC000000000000001) != 0)
        {
          v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v59);
        }
        else
        {
          v32 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v32)
            goto LABEL_102;
          v60 = *(id *)(v59 + 32);
        }
        v33 = (uint64_t)v60;
        v61 = *v28;
        if ((unint64_t)*v28 >> 62)
        {
          if (v61 < 0)
            v86 = *v28;
          else
            v86 = v61 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v28);
          v31 = _CocoaArrayWrapper.endIndex.getter(v86);
          swift_bridgeObjectRelease(v61);
          if (!v31)
            goto LABEL_108;
        }
        else
        {
          v32 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v32)
            goto LABEL_108;
        }
        sub_1005E5B90(0, 1);
LABEL_46:
        swift_endAccess(v111);
        v64 = (id)v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
        v33 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v65 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v33 >= v65 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v33 + 1, 1);
        v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v64);
        specialized Array._endMutation()(v66);
        v67 = *v3;
        if (*v3 >> 62)
        {
          if (v67 < 0)
            v83 = *v3;
          else
            v83 = v67 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v3);
          v33 = _CocoaArrayWrapper.endIndex.getter(v83);
          swift_bridgeObjectRelease(v67);
          if (!v33)
          {
LABEL_26:

            goto LABEL_27;
          }
        }
        else if (!*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_26;
        }
        v68 = *v3;
        if (*v3 >> 62)
        {
          if (v68 < 0)
            v87 = *v3;
          else
            v87 = v68 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v3);
          v33 = _CocoaArrayWrapper.endIndex.getter(v87);
          swift_bridgeObjectRelease(v68);
          if (!v33)
            goto LABEL_107;
        }
        else
        {
          v32 = v68 & 0xFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_107;
        }
        v69 = p_superclass % v33;
        swift_beginAccess(v3, v111, 32, 0);
        v70 = *v3;
        if ((*v3 & 0xC000000000000001) != 0)
        {
          v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(p_superclass % v33, v70);
        }
        else
        {
          if ((v69 & 0x8000000000000000) != 0)
            goto LABEL_103;
          v32 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v69 >= v32)
            goto LABEL_104;
          v33 = *(_QWORD *)(v70 + 8 * v69 + 32);
          swift_retain(v33);
        }
        swift_endAccess(v111);
        swift_retain(v33);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
        v73 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v72 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v73 >= v72 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
        v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v33);
        specialized Array._endMutation()(v74);
        v20 = v109;
        ImpressionableArtwork.impressionMetrics.getter(v75);
        v76 = sub_100447AF4((uint64_t)v20);
        v77 = sub_1004105BC((uint64_t)v20);
        if (v76)
        {
          v78 = objc_msgSend(objc_allocWithZone((Class)AMSUIDynamicImpressionItem), "initWithFrame:impressionMetrics:", v76, 0.0, 0.0, v25, v27);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
          v20 = *(SEL **)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v79 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v20 >= v79 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, (char *)v20 + 1, 1);
          v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v78);
          specialized Array._endMutation()(v80);

          v15 = v108;
        }
        ImpressionableArtwork.art.getter(v77);
        v31 = Artwork.config(using:)(v25, v27);
        swift_release();
        v81 = type metadata accessor for ArtworkView(0);
        v82 = sub_1000116A4();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v64, v81, v82);

        swift_release();
        swift_release();
LABEL_27:
        ++p_superclass;
        v16 += 2;
        v32 = v110;
        if (v110 == p_superclass)
        {
          swift_bridgeObjectRelease(v105);
          v3 = v102;
          break;
        }
      }
    }
    v88 = v115;
    sub_100447454(v115, a1, a2);
    swift_bridgeObjectRelease(v88);
    v89 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_amsImpressionItems);
    *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_amsImpressionItems) = v114;
    swift_bridgeObjectRelease(v89);
    v90 = v113;
    if ((unint64_t)v113 >> 62)
    {
      if (v113 < 0)
        v94 = v113;
      else
        v94 = v113 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v113);
      v33 = _CocoaArrayWrapper.endIndex.getter(v94);
      if (!v33)
        goto LABEL_114;
    }
    else
    {
      v33 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v113);
      if (!v33)
        goto LABEL_114;
    }
    if (v33 >= 1)
      break;
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v15 + 1, 1);
  }
  v91 = 0;
  p_superclass = v90 & 0xC000000000000001;
  v16 = &selRef_fileURLWithPath_;
  do
  {
    if (p_superclass)
      v92 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v91, v90);
    else
      v92 = *(id *)(v90 + 8 * v91 + 32);
    v93 = v92;
    v20 = (SEL *)objc_msgSend(v92, "superview");

    if (!v20)
      objc_msgSend(v3, "addSubview:", v93);
    ++v91;

  }
  while (v33 != v91);
LABEL_114:
  swift_bridgeObjectRelease(v90);
  v33 = *v28;
  if ((unint64_t)*v28 >> 62)
  {
    if (v33 < 0)
      v98 = *v28;
    else
      v98 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v28);
    v31 = _CocoaArrayWrapper.endIndex.getter(v98);
    v15 = v108;
    if (!v31)
      goto LABEL_126;
  }
  else
  {
    v31 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v28);
    v15 = v108;
    if (!v31)
      goto LABEL_126;
  }
  if (v31 < 1)
    goto LABEL_129;
  for (i = 0; i != v31; ++i)
  {
    if ((v33 & 0xC000000000000001) != 0)
      v96 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
    else
      v96 = *(id *)(v33 + 8 * i + 32);
    v97 = v96;
    objc_msgSend(v96, "removeFromSuperview");

  }
LABEL_126:
  swift_bridgeObjectRelease(v33);
  v99 = *v28;
  *v28 = v90;
  objc_msgSend(v3, "setNeedsLayout", swift_bridgeObjectRelease(v99).n128_f64[0]);

  swift_release();
  v100 = swift_bridgeObjectRelease(v105);
  ((void (*)(char *, uint64_t, __n128))v103)(v107, v104, v100);
}

double sub_100447080(uint64_t a1, __n128 a2, double a3)
{
  char *v3;
  char *v4;
  double v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  id v19;
  char v20;
  id v21;
  void *v22;
  double Width;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  double v30;
  char v33[24];
  CGRect v34;

  v4 = v3;
  v7 = a2.n128_f64[0];
  v8 = type metadata accessor for UpsellGridLayout.Metrics(0, a2);
  v9 = __chkstk_darwin(v8);
  v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for UpsellGridLayout(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_msgSend(v3, "bounds", v14);
  v18 = v17;
  v19 = objc_msgSend(v3, "traitCollection");
  v20 = UITraitCollection.isSizeClassCompact.getter(v19);

  if ((v20 & 1) != 0
    && ((v21 = objc_msgSend(v4, "window")) == 0
     || (v22 = v21, objc_msgSend(v21, "frame"), Width = CGRectGetWidth(v34), v22, v18 >= Width))
    || v4[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_isCompactSheet] == 1)
  {
    v24 = 4;
  }
  else
  {
    v24 = 5;
  }
  UpsellGridLayout.Metrics.init(dimensionSmallIconCount:)(v24);
  v25 = &v4[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews], v33, 0, 0);
  v26 = *(_QWORD *)v25;
  swift_bridgeObjectRetain(v26);
  v28 = sub_1003AF7E0(v27);
  v29 = swift_bridgeObjectRelease(v26);
  UpsellGridLayout.init(metrics:icons:)(v11, v28, v29);
  v30 = UpsellGridLayout.measurements(fitting:in:)(a1, v7, a3);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v30;
}

void sub_100447300(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  v2 = (unint64_t)*a1 >> 62;
  if (!v2)
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
    goto LABEL_14;
  }
  if (v1 < 0)
    v4 = *a1;
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_14;
  swift_bridgeObjectRetain(v1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (v6)
  {
    swift_bridgeObjectRetain(v1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v1);
    if (v7)
    {
LABEL_3:
      if ((v1 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
        if (!v2)
        {
LABEL_6:
          v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_20;
        }
      }
      else
      {
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        *(id *)(v1 + 32);
        if (!v2)
          goto LABEL_6;
      }
      if (v1 < 0)
        v8 = v1;
      else
        v8 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v3 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(v1);
LABEL_20:
      if (v3)
      {
        sub_1005E5B90(0, 1);
        return;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_14:
    type metadata accessor for ArtworkView(0);
    static ArtworkView.iconArtworkView.getter();
    return;
  }
LABEL_24:
  __break(1u);
}

void sub_100447454(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t i;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_impressionsCalculator);
  if (!v20)
    return;
  if (!((unint64_t)a1 >> 62))
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v20);
    swift_bridgeObjectRetain(a1);
    if (v14)
      goto LABEL_4;
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v18 = a1;
  else
    v18 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_retain(v20);
  swift_bridgeObjectRetain(a1);
  v14 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v14)
    goto LABEL_19;
LABEL_4:
  if (v14 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v14; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v17 = swift_retain(*(_QWORD *)(a1 + 8 * i + 32));
      ImpressionableArtwork.impressionMetrics.getter(v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        swift_release();
        sub_1004105BC((uint64_t)v9);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
        ImpressionsCalculator.addElement(_:at:)(v13, 0.0, 0.0, a2, a3);
        v16 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v16);
      }
    }
    swift_release();
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t type metadata accessor for UpsellGridView()
{
  return objc_opt_self(_TtC20ProductPageExtension14UpsellGridView);
}

void sub_1004477A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  _OWORD v41[2];
  __int128 v42;
  _OWORD v43[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000DAF8(&qword_100823C08);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v35 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v4) >> 6;
  v7 = v43;
  v8 = v41;
  swift_bridgeObjectRetain(v1);
  v36 = 0;
  v9 = &qword_10080AC70;
  v10 = (char *)&type metadata for Any + 8;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v18 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v18 >= v34)
    goto LABEL_32;
  v19 = *(_QWORD *)(v35 + 8 * v18);
  v20 = v36 + 1;
  if (!v19)
  {
    v20 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v19 = *(_QWORD *)(v35 + 8 * v20);
    if (!v19)
    {
      v20 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v19 = *(_QWORD *)(v35 + 8 * v20);
      if (!v19)
      {
        v20 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v19 = *(_QWORD *)(v35 + 8 * v20);
        if (!v19)
        {
          v21 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v19 = *(_QWORD *)(v35 + 8 * v21);
            if (v19)
            {
              v20 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v20 = v21 + 1;
              if (__OFADD__(v21, 1))
                goto LABEL_36;
              if (v20 >= v34)
                break;
              v19 = *(_QWORD *)(v35 + 8 * v20);
              ++v21;
              if (v19)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10004E834(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v36 = v20;
  v37 = (v19 - 1) & v19;
  for (i = __clz(__rbit64(v19)) + (v20 << 6); ; i = __clz(__rbit64(v6)) | (v36 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v23 = *v22;
    v24 = v22[1];
    sub_100010D84(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v7);
    *(_QWORD *)&v42 = v23;
    *((_QWORD *)&v42 + 1) = v24;
    v40 = v42;
    v41[0] = v43[0];
    v41[1] = v43[1];
    v25 = v42;
    sub_10004EA50(v8, v38);
    swift_bridgeObjectRetain(v24);
    v26 = sub_10000DAF8(v9);
    swift_dynamicCast(&v39, v38, v10, v26, 7);
    v27 = v39;
    v28 = sub_10057E9FC(v25, *((uint64_t *)&v25 + 1));
    v29 = v28;
    if ((v30 & 1) != 0)
    {
      v11 = v1;
      v12 = v9;
      v13 = v8;
      v14 = v7;
      v15 = v3[6] + 16 * v28;
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
      *(_OWORD *)v15 = v25;
      v16 = v3[7];
      swift_unknownObjectRelease();
      *(_QWORD *)(v16 + 8 * v29) = v27;
      v7 = v14;
      v8 = v13;
      v9 = v12;
      v1 = v11;
      v10 = (char *)&type metadata for Any + 8;
      v6 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v28;
    *(_OWORD *)(v3[6] + 16 * v28) = v25;
    *(_QWORD *)(v3[7] + 8 * v28) = v27;
    v31 = v3[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v3[2] = v33;
    v6 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

id sub_100447AF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  double (*v20)(char *, char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t);
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  Class isa;
  Class v44;
  uint64_t v46;
  uint64_t v47;

  v2 = type metadata accessor for ImpressionMetrics.ID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  v12 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E82D4(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1004105BC((uint64_t)v14);
    return 0;
  }
  else
  {
    v20 = *(double (**)(char *, char *, uint64_t))(v16 + 32);
    v47 = v15;
    v21.n128_f64[0] = v20(v18, v14, v15);
    v22 = ImpressionMetrics.id.getter(v21);
    v46 = ImpressionMetrics.ID.parent.getter(v22);
    v24 = v23;
    v25 = *(double (**)(char *, uint64_t))(v3 + 8);
    v26.n128_f64[0] = v25(v11, v2);
    ImpressionMetrics.id.getter(v26);
    ImpressionMetrics.ID.element.getter(v27);
    v29 = v28;
    v30.n128_f64[0] = v25(v8, v2);
    v31 = ImpressionMetrics.id.getter(v30);
    v32 = ImpressionMetrics.ID.index.getter(v31);
    v25(v5, v2);
    if (v24)
    {
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v33 = 0;
    }
    v34 = objc_allocWithZone((Class)AMSUIDynamicImpressionMetricsIdentifier);
    v35 = String._bridgeToObjectiveC()();
    v36 = objc_msgSend(v34, "initWithParent:element:index:", v33, v35, v32, swift_bridgeObjectRelease(v29).n128_f64[0]);

    v37 = v36;
    v38 = ImpressionMetrics.fields.getter();
    sub_1004477A4(v38);
    v40 = v39;
    swift_bridgeObjectRelease(v38);
    v41 = sub_10050AB74((uint64_t)_swiftEmptyArrayStorage);
    v42 = objc_allocWithZone((Class)AMSUIDynamicImpressionMetrics);
    sub_10000DAF8(&qword_10080AC70);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v40);
    v44 = Dictionary._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(v42, "initWithIdentifier:fields:custom:", v37, isa, v44, swift_bridgeObjectRelease(v41).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
  }
  return v19;
}

unint64_t sub_100447E3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100823C10;
  if (!qword_100823C10)
  {
    v1 = objc_opt_self(AMSUIDynamicImpressionItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100823C10);
  }
  return result;
}

void sub_100447E78()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_primaryIcon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_remainingIcons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_artworkLoader] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_impressionsCalculator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_iconViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension14UpsellGridView_amsImpressionItems] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/UpsellGridView.swift", 41, 2, 34, 0);
  __break(1u);
}

char *sub_100447F24(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView;
  v13 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView();
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
  v15 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v14, "init");
  v15[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_isAnimationEnabled] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator] = 0;
  v16 = &v15[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v18 = objc_msgSend(v17, "contentView");
  objc_msgSend(v18, "setClipsToBounds:", 1);

  v19 = *(void **)&v17[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView];
  objc_msgSend(v19, "setClipsToBounds:", 1);
  v20 = objc_msgSend(v17, "contentView");
  v21 = v19;
  objc_msgSend(v20, "addSubview:", v21);

  return v17;
}

void sub_100448214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  __n128 v25;
  uint64_t v26;
  _BYTE v27[40];
  _BYTE v28[24];
  _BYTE v29[24];

  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v28, 0, 0);
    if (swift_weakLoadStrong(v15))
    {
      sub_10000EF80(a3, (uint64_t)v27);
      v16 = sub_10000DAF8(&qword_10080E910);
      v18 = type metadata accessor for MediumAdLockupWithScreenshotsBackground(0, v17);
      if ((swift_dynamicCast(&v26, v27, v16, v18, 6) & 1) != 0)
      {
        MediumAdLockupWithScreenshotsBackground.lockup.getter(v19);
        swift_release();
        Lockup.impressionMetrics.getter(v20);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          swift_release();
          swift_release();

          sub_100010F2C((uint64_t)v8, &qword_1008131E0);
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
          objc_msgSend(v14, "bounds");
          ImpressionsCalculator.addElement(_:at:)(v12, v21, v22, v23, v24);

          swift_release();
          v25 = swift_release();
          (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
        }
      }
      else
      {

        swift_release();
      }
    }
    else
    {

    }
  }
}

uint64_t sub_10044848C()
{
  return type metadata accessor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell(0);
}

uint64_t type metadata accessor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100823C50;
  if (!qword_100823C50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell);
  return result;
}

void sub_1004484D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_1006627D0;
    v4[3] = &unk_1006627E8;
    v4[4] = &unk_100662800;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_100448568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E720(&qword_100817A48, type metadata accessor for MediumAdLockupWithScreenshotsBackgroundCollectionViewCell, (uint64_t)&unk_1006628B0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1004485D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

double sub_100448624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10044867C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1004486C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char v4[24];
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator], v4, 1, 0);
  v2 = *(_QWORD *)v1;
  *(_QWORD *)v1 = 0;
  return swift_release(v2);
}

double sub_100448728(__n128 a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for MediumAdLockupWithScreenshotsBackground(0, a1);
  v6 = sub_10000E720(&qword_10081B118, (uint64_t (*)(uint64_t))&type metadata accessor for MediumAdLockupWithScreenshotsBackground, (uint64_t)&protocol conformance descriptor for MediumAdLockupWithScreenshotsBackground);
  ItemLayoutContext.typedModel<A>(as:)(&v11, v5, v5, v6);
  v8 = v11;
  if (v11)
  {
    v9 = type metadata accessor for ObjectGraph(0);
    v10 = swift_dynamicCastClassUnconditional(a3, v9, 0, 0, 0);
    sub_1002E7250(v8, v10);
    objc_msgSend(v3, "setNeedsLayout");
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1004487F0()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0
                + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator);
  swift_beginAccess(v0+ OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_100448838(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_100448888(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1004488CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v0+ OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_100448924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_100448980(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

void (*sub_1004489C4(uint64_t a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  __int128 v7[2];

  v2 = swift_allocObject(&unk_100754798, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  sub_10000EF80(a1, (uint64_t)v7);
  v3 = swift_allocObject(&unk_1007547C0, 24, 7);
  swift_weakInit(v3 + 16);
  sub_100010E24(v7, (uint64_t)v6);
  v4 = swift_allocObject(&unk_1007547E8, 72, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_100010E24(v6, v4 + 32);
  return sub_100448B6C;
}

double sub_100448A88(uint64_t a1, uint64_t a2)
{
  return sub_100545384(a1, a2);
}

uint64_t sub_100448AC0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0
                                                    + OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView)
                                        + OBJC_IVAR____TtC20ProductPageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView)
                            + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

uint64_t sub_100448AF0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100448B14()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100448B38()
{
  uint64_t v0;

  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100448B6C()
{
  uint64_t v0;

  sub_100448214(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void sub_100448B78()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_itemLayoutContext];
  v2 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_mediumAdLockupWithScreenshotsBackgroundView;
  v4 = type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  v0[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_isAnimationEnabled] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsCalculator] = 0;
  v5 = &v0[OBJC_IVAR____TtC20ProductPageExtension57MediumAdLockupWithScreenshotsBackgroundCollectionViewCell_impressionsUpdateBlock];
  *v5 = 0;
  v5[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/MediumAdLockupWithScreenshotsBackgroundCollectionViewCell.swift", 84, 2, 33, 0);
  __break(1u);
}

NSString sub_100448C60()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static UIActivityType.gift = (uint64_t)result;
  return result;
}

uint64_t *UIActivityType.gift.unsafeMutableAddressor()
{
  if (qword_100805D00 != -1)
    swift_once(&qword_100805D00, sub_100448C60);
  return &static UIActivityType.gift;
}

id static UIActivityType.gift.getter()
{
  if (qword_100805D00 != -1)
    swift_once(&qword_100805D00, sub_100448C60);
  return (id)static UIActivityType.gift;
}

double sub_100448D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD v15[5];

  v4 = v3;
  sub_10000EF80(a1, (uint64_t)v15);
  v7 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v8 = type metadata accessor for TodayCard(0);
  v9 = swift_dynamicCast(v14, v15, v7, v8, 6);
  if ((_DWORD)v9)
  {
    v11 = TodayCard.overlay.getter(v9);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v4 + qword_100864938);
      if (v13)
      {
        v15[3] = type metadata accessor for TodayCardOverlay(0);
        v15[4] = sub_10000E720((unint64_t *)&qword_100809190, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardOverlay, (uint64_t)&protocol conformance descriptor for TodayCardOverlay);
        v15[0] = v12;
        v14[3] = swift_getObjectType();
        v14[0] = v13;
        swift_unknownObjectRetain_n(v13, 2);
        swift_retain(v12);
        tryToFetch(artworkFor:into:on:asPartOf:)(v15, v14, a2, a3);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
        sub_100010F2C((uint64_t)v15, &qword_100819230);
        return result;
      }
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_100448E68(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  char *v22;
  _OWORD v24[2];
  objc_super v25[2];
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = qword_100823C60;
  v15 = type metadata accessor for CondensedAdLockupWithIconBackgroundView();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15));
  v17 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v16, "init");

  v26.receiver = v17;
  v26.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "setClipsToBounds:", 1);

  v20 = *(void **)&v18[qword_100823C60];
  objc_msgSend(v20, "setClipsToBounds:", 1);
  v21 = objc_msgSend(v18, "contentView");
  objc_msgSend(v21, "addSubview:", v20);

  memset(v25, 0, sizeof(v25));
  memset(v24, 0, sizeof(v24));
  v22 = v18;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD000000000000011, 0x80000001006A4FC0, v25, v24);
  sub_100010F2C((uint64_t)v24, &qword_100808F20);
  sub_100010F2C((uint64_t)v25, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v22;
}

char *sub_100449064(double a1, double a2, double a3, double a4)
{
  return sub_100448E68(a1, a2, a3, a4);
}

id sub_100449084()
{
  char *v0;
  void *v1;

  v1 = *(void **)&v0[qword_100823C60];
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v1, "setFrame:");
}

void sub_1004490C4(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "prepareForReuse");
  ArtworkView.image.setter(0);

}

double sub_100449134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  double v6;
  double v7;
  double v8;
  _QWORD v10[43];

  v6 = PageGrid.columnWidth.getter(a1);
  if (qword_100806AD8 != -1)
    swift_once(&qword_100806AD8, sub_100545BDC);
  sub_100225678((uint64_t)&xmmword_10086AF70, (uint64_t)v10);
  if (qword_100806AE0 != -1)
    swift_once(&qword_100806AE0, sub_1005460A4);
  sub_100547CBC((uint64_t)v10, (uint64_t)&xmmword_10086B0D0, a5, v6);
  v8 = v7;
  sub_1002256B4(v10);
  return v8;
}

double sub_100449204(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  double result;
  uint64_t v5;

  v1 = type metadata accessor for CondensedAdLockupWithIconBackground(0, a1);
  v2 = sub_10000E720(&qword_100811220, (uint64_t (*)(uint64_t))&type metadata accessor for CondensedAdLockupWithIconBackground, (uint64_t)&protocol conformance descriptor for CondensedAdLockupWithIconBackground);
  v3 = ItemLayoutContext.typedModel<A>(as:)(&v5, v1, v1, v2);
  if (v5)
  {
    CondensedAdLockupWithIconBackground.lockup.getter(v3);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100449284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  double result;

  v10 = sub_100581F54(a1, a2, a3, a4, a5);
  v11 = TodayCard.media.getter(v10);
  v12 = type metadata accessor for TodayCardMediaSingleLockup(0);
  if (swift_dynamicCastClass(v11, v12))
  {
    v13 = TodayCardMediaSingleLockup.condensedAdLockupWithIconBackground.getter();
    sub_1004CEE70(v13, a3, a4, v14);
    v15 = swift_release();
    sub_100581F54(a1, a2, a3, a4, v15);
    objc_msgSend(v5, "setNeedsLayout");
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100449354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE v17[24];

  v7 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for PageGrid(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100448D18(a1, a2, a3);
  v14 = v3 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid, v17, 0, 0);
  sub_10003C2B0(v14, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_100010F2C((uint64_t)v9, &qword_10082AF10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  sub_1004D0040(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1004494B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v4 = v3;
  v7 = v3 + qword_100864938;
  v8 = *(_QWORD *)(v3 + qword_100864938);
  if (v8)
  {
    v9 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 128);
    v12 = swift_unknownObjectRetain(v8);
    v11(a1, ObjectType, v9, v12);
    swift_unknownObjectRelease();
  }
  v13 = *(_QWORD *)(v4 + qword_100823C60);
  v14 = *(_QWORD *)(v13
                  + OBJC_IVAR____TtC20ProductPageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView);
  ArtworkView.image.setter(0);
  v15 = type metadata accessor for ArtworkView(0);
  v16 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v17 = a3 & 1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v14, v17, v15, v16);
  v18 = *(_QWORD *)(v13 + OBJC_IVAR____TtC20ProductPageExtension39CondensedAdLockupWithIconBackgroundView_lockupView);
  v19 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v20 = *(id *)(v18 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  ArtworkView.image.setter(0);

  v21 = *(id *)(v18 + v19);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v21, v17, v15, v16);

}

void (*sub_10044960C(uint64_t a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  __int128 v7[2];

  v2 = swift_allocObject(&unk_1007548C8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  sub_10000EF80(a1, (uint64_t)v7);
  v3 = swift_allocObject(&unk_1007548F0, 24, 7);
  swift_weakInit(v3 + 16);
  sub_100010E24(v7, (uint64_t)v6);
  v4 = swift_allocObject(&unk_100754918, 72, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_100010E24(v6, v4 + 32);
  return sub_100449B68;
}

void sub_1004496D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  double v20;
  double v21;
  double v22;
  double v23;
  __n128 v24;
  uint64_t v25;
  _BYTE v26[40];
  _BYTE v27[24];
  _BYTE v28[24];

  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v27, 0, 0);
    if (swift_weakLoadStrong(v15))
    {
      sub_10000EF80(a3, (uint64_t)v26);
      v16 = sub_10000DAF8(&qword_10080E910);
      v17 = type metadata accessor for TodayCard(0);
      v18 = swift_dynamicCast(&v25, v26, v16, v17, 6);
      if ((v18 & 1) != 0)
      {
        TodayCard.media.getter(v18);
        v19 = swift_release();
        TodayCardMedia.impressionMetrics.getter(v19);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          swift_release();
          swift_release();

          sub_100010F2C((uint64_t)v8, &qword_1008131E0);
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
          objc_msgSend(v14, "bounds");
          ImpressionsCalculator.addElement(_:at:)(v12, v20, v21, v22, v23);

          swift_release();
          v24 = swift_release();
          (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v24);
        }
      }
      else
      {

        swift_release();
      }
    }
    else
    {

    }
  }
}

Class sub_1004498E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  Class isa;

  v2 = sub_10000DAF8(&qword_1008091A0);
  v3 = swift_allocObject(v2, 64, 7);
  v4 = *(_QWORD *)(a1 + qword_100823C60);
  *(_OWORD *)(v3 + 16) = xmmword_100640720;
  v5 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension39CondensedAdLockupWithIconBackgroundView_lockupView);
  *(_QWORD *)(v3 + 56) = type metadata accessor for TodayCardLockupView();
  *(_QWORD *)(v3 + 32) = v5;
  v6 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  return isa;
}

void sub_10044997C(void *a1, uint64_t a2, Class isa)
{
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  id v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  if (isa)
  {
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(isa, (char *)&type metadata for Any + 8);
    v7 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v8 = a1;
  }
  v9.receiver = a1;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, "setAccessibilityElements:", isa);

}

void sub_100449A20()
{
  uint64_t v0;

}

void sub_100449A30(uint64_t a1)
{

}

uint64_t type metadata accessor for CondensedAdLockupWithIconBackgroundViewTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100823C90;
  if (!qword_100823C90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CondensedAdLockupWithIconBackgroundViewTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_100449A7C()
{
  return type metadata accessor for CondensedAdLockupWithIconBackgroundViewTodayCardCollectionViewCell(0);
}

double sub_100449A84(uint64_t a1, uint64_t a2)
{
  return sub_100545384(a1, a2);
}

uint64_t sub_100449ABC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + qword_100823C60)
                                        + OBJC_IVAR____TtC20ProductPageExtension39CondensedAdLockupWithIconBackgroundView_lockupView)
                            + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

uint64_t sub_100449AEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100449B10()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100449B34()
{
  uint64_t v0;

  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100449B68()
{
  uint64_t v0;

  sub_1004496D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void sub_100449B74(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  double v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  char *v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;
  id v81;
  void *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  NSString v86;
  void *v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  NSString v91;
  void *v92;
  Swift::String v93;
  Swift::String v94;
  void *object;
  NSString v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;

  v3 = v2;
  v6 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v6);
  v102 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v14);
  v16 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v17);
  v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Artwork.Style(0, v20);
  __chkstk_darwin(v21);
  v103 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = InAppPurchaseInstallPage.lockup.getter(v23);
  v25 = InAppPurchaseInstallPage.parentLockup.getter(v24);
  v27 = v25;
  if (v25)
  {
    v99 = v24;
    v100 = v10;
    v28 = swift_retain(v25);
    if (Lockup.icon.getter(v28))
    {
      v104 = a2;
      v101 = v27;
      v97 = a1;
      if (qword_100804E70 != -1)
        swift_once(&qword_100804E70, sub_10020D688);
      v29 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v30 = sub_10000EFC4(v29, (uint64_t)qword_100865F50);
      v31 = SmallLockupLayout.Metrics.artworkSize.getter(v30);
      v98 = v2;
      v32 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
      v33 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView];
      v34 = *(void **)(v33 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      v36 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v34, "contentMode"), 0, v31, v35);
      v37 = v34;
      v38 = v103;
      Artwork.style.getter(v37);
      v39 = ArtworkView.style.setter(v38);
      *(_QWORD *)&v40 = Artwork.contentMode.getter(v39).n128_u64[0];
      v42 = ArtworkLoaderConfig.size.getter(objc_msgSend(v37, "setContentMode:", v41, v40));
      v44 = ArtworkView.imageSize.setter(v42, v43);
      v45 = Artwork.backgroundColor.getter(v44);
      if (!v45)
      {
        v46 = sub_100035178();
        v45 = static UIColor.placeholderBackground.getter(v46);
      }
      ArtworkView.backgroundColor.setter(v45);

      v47 = type metadata accessor for ArtworkLoader(0);
      v48 = *(_QWORD *)(v104 + qword_10086B3B8);
      if (!v48)
      {
        v76 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v47, v47);
        __break(1u);
        goto LABEL_27;
      }
      v49 = *(void **)(v33 + v32);
      v50 = type metadata accessor for ArtworkView(0);
      v51 = sub_1000116A4();
      swift_retain(v48);
      v52 = v49;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v36, 2, 1, v52, v50, v51);
      swift_release();
      swift_release();
      swift_release();

      v3 = v98;
      v27 = v101;
      a2 = v104;
    }
    v53 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_lockupView];
    v54 = sub_10000DAF8(&qword_10080B190);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v19, 1, 1, v54);
    v55 = type metadata accessor for OfferStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v16, 1, 1, v55);
    v56 = type metadata accessor for OfferEnvironment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v13, 1, 1, v56);
    v57 = sub_10000DAF8((uint64_t *)&unk_10080A100);
    v58 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v100, 1, 1, v57);
    v59 = type metadata accessor for OfferTint(0);
    v60 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v102, 1, 1, v59);
    sub_10040A58C(v27, v53, (uint64_t)v19, a2, 0, 0, (uint64_t)v16, (uint64_t)v13, v60, v58);
    sub_100010F2C(v60, (uint64_t *)&unk_100815D70);
    v53[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
    sub_10020F298();
    objc_msgSend(v53, "setNeedsLayout");
    swift_release();
    sub_100010F2C(v58, (uint64_t *)&unk_10080A0D0);
    sub_100010F2C((uint64_t)v13, (uint64_t *)&unk_10080A0E0);
    sub_100010F2C((uint64_t)v16, &qword_100815D80);
    sub_100010F2C((uint64_t)v19, (uint64_t *)&unk_10080A0F0);
    v24 = v99;
  }
  if (!v24)
  {
    v86 = 0;
    v82 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel];
    goto LABEL_22;
  }
  v61 = swift_retain(v24);
  if (Lockup.icon.getter(v61))
  {
    v104 = a2;
    v101 = v27;
    if (qword_100805368 != -1)
      swift_once(&qword_100805368, sub_1002EA62C);
    v62 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_inAppPurchaseView];
    v63 = OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView;
    v64 = *(void **)(v62 + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
    v65 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v64, "contentMode", v97), 0, *(double *)&qword_100866C38, *(double *)&qword_100866C38);
    v66 = v64;
    v67 = v103;
    Artwork.style.getter(v66);
    v68 = ArtworkView.style.setter(v67);
    *(_QWORD *)&v69 = Artwork.contentMode.getter(v68).n128_u64[0];
    v71 = ArtworkLoaderConfig.size.getter(objc_msgSend(v66, "setContentMode:", v70, v69));
    v73 = ArtworkView.imageSize.setter(v71, v72);
    v74 = Artwork.backgroundColor.getter(v73);
    if (!v74)
    {
      v75 = sub_100035178();
      v74 = static UIColor.placeholderBackground.getter(v75);
    }
    ArtworkView.backgroundColor.setter(v74);

    v76 = type metadata accessor for ArtworkLoader(0);
    v77 = *(_QWORD *)(v104 + qword_10086B3B8);
    if (v77)
    {
      v78 = *(void **)(v62 + v63);
      v79 = type metadata accessor for ArtworkView(0);
      v80 = sub_1000116A4();
      swift_retain(v77);
      v81 = v78;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2, 1, v81, v79, v80);
      swift_release();
      swift_release();
      swift_release();

      goto LABEL_18;
    }
LABEL_27:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v76, v76);
    __break(1u);
    return;
  }
LABEL_18:
  swift_release();
  v82 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_titleLabel];
  v83 = swift_retain(v24);
  Lockup.title.getter(v83);
  v85 = v84;
  v26 = swift_release().n128_u64[0];
  if (v85)
  {
    v86 = String._bridgeToObjectiveC()();
    v26 = swift_bridgeObjectRelease(v85).n128_u64[0];
  }
  else
  {
    v86 = 0;
  }
LABEL_22:
  objc_msgSend(v82, "setText:", v86, *(double *)&v26, v97);

  v87 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_descriptionLabel];
  InAppPurchaseInstallPage.preInstallOfferDescription.getter();
  if (v88)
  {
    v90 = v88;
    v91 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v89 = swift_bridgeObjectRelease(v90).n128_u64[0];
  }
  else
  {
    v91 = 0;
  }
  objc_msgSend(v87, "setText:", v91, v89);

  v92 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallPaidOfferView_messageLabel];
  v93._object = (void *)0x80000001006A4FE0;
  v93._countAndFlagsBits = 0xD000000000000030;
  v94._countAndFlagsBits = 0;
  v94._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v93, v94)._object;
  v96 = String._bridgeToObjectiveC()();
  objc_msgSend(v92, "setText:", v96, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v3, "setNeedsLayout");
  swift_release();
  swift_release();
}

uint64_t sub_10044A388()
{
  return sub_10000E720((unint64_t *)&unk_100824000, type metadata accessor for FramedArtworkCollectionViewCell, (uint64_t)&unk_1006629F8);
}

double sub_10044A3B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  void (*v33)(_QWORD *, uint64_t);
  double v34;
  double v35;
  __n128 v36;
  double v37;
  uint64_t v38;
  __n128 v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  __n128 v47;
  void *v48;
  char *v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  double v59;
  __n128 v60;
  char v61;
  double v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _UNKNOWN **v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  double v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  __n128 v92;
  void (*v93)(char *, uint64_t, __n128);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  __n128 v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  __n128 v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint64_t);
  double v138;
  __n128 v139;
  void (*v140)(char *, uint64_t, __n128);
  double v141;
  uint64_t v142;
  double v143;
  __n128 v144;
  double v145;
  int v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD aBlock[3];
  void *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD v170[2];

  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v2);
  v4 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for FloatingPointRoundingRule(0);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v159 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for StaticDimension(0);
  v6 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v162 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v160 = *(_QWORD *)(v8 - 8);
  v161 = v8;
  __chkstk_darwin(v8);
  v150 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for AspectRatio(0);
  v157 = *(_QWORD *)(v158 - 8);
  v10 = __chkstk_darwin(v158);
  v156 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for PageGrid.Direction(0, v10);
  v12 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v154 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v148 - v15;
  v17 = type metadata accessor for PageGrid(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v148 - v22);
  v24 = type metadata accessor for FramedArtwork(0);
  v25 = sub_10000E720((unint64_t *)&qword_100824010, (uint64_t (*)(uint64_t))&type metadata accessor for FramedArtwork, (uint64_t)&protocol conformance descriptor for FramedMedia);
  ItemLayoutContext.typedModel<A>(as:)(aBlock, v24, v24, v25);
  v26 = aBlock[0];
  if (!aBlock[0])
    return 0.0;
  v149 = v4;
  v153 = v6;
  v27 = swift_retain(aBlock[0]);
  v28 = FramedMedia.isFullWidth.getter(v27);
  v164 = v26;
  swift_release();
  swift_getKeyPath(&unk_100662A48);
  ItemLayoutContext.subscript.getter(v23);
  swift_release();
  v163 = a1;
  if ((v28 & 1) != 0)
  {
    v30 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v32 = v31;
    v33 = *(void (**)(_QWORD *, uint64_t))(v18 + 8);
  }
  else
  {
    v35 = PageGrid.containerWidth.getter(v29);
    v33 = *(void (**)(_QWORD *, uint64_t))(v18 + 8);
    v33(v23, v17);
    swift_getKeyPath(&unk_100662A48);
    ItemLayoutContext.subscript.getter(v20);
    v36 = swift_release();
    v37 = PageGrid.containerHeight.getter(v36);
    v33(v20, v17);
    v38 = v155;
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v16, enum case for PageGrid.Direction.vertical(_:), v155);
    swift_getKeyPath(&unk_100662A48);
    ItemLayoutContext.subscript.getter(v20);
    v39 = swift_release();
    v40 = PageGrid.safeAreaInsets.getter(v39);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v33(v20, v17);
    swift_getKeyPath(&unk_100662A78);
    ItemLayoutContext.subscript.getter(aBlock);
    v47 = swift_release();
    v48 = (void *)aBlock[0];
    v49 = v154;
    (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v154, v16, v38, v47);
    v50 = sub_1004B5390(0.0);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v49, 0, v50, v35, v37, v40, v42, v44, v46);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v38);
    v30 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v32 = v51;
  }
  v52 = v165;
  v53 = v159;
  v54 = ((uint64_t (*)(_QWORD *, uint64_t))v33)(v23, v17);
  v55 = v164;
  v56 = FramedArtwork.artwork.getter(v54);
  if (v56)
  {
    Artwork.size.getter(v56);
    v57 = v156;
    AspectRatio.init(_:_:)(v58);
    v59 = AspectRatio.height(fromWidth:)(v30);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v57, v158);
    v60 = swift_retain(v55);
    v61 = FramedMedia.isFullWidth.getter(v60);
    swift_release();
    swift_release();
    if (v32 >= v59)
      v62 = v59;
    else
      v62 = v32;
    if ((v61 & 1) != 0)
      v62 = v59;
    v34 = v62 + 0.0;
  }
  else
  {
    v34 = 0.0;
  }
  swift_retain(v55);
  v64 = (void *)FramedMedia.caption.getter(v63);
  v65 = (uint64_t)objc_msgSend(v64, "length", swift_release().n128_f64[0]);

  if (v65 < 1)
  {
    swift_release();
    return v34;
  }
  v67 = 0.0;
  v68 = CGSize.subtracting(insets:)(v66);
  v70 = v69;
  swift_retain(v55);
  v72 = FramedMedia.ordinal.getter(v71);
  v74 = v73;
  swift_release();
  v75 = &off_100804000;
  if (v74)
  {
    if (qword_100806540 != -1)
      swift_once(&qword_100806540, sub_1004C943C);
    v76 = v161;
    v77 = sub_10000EFC4(v161, (uint64_t)qword_10086A098);
    v78 = v160;
    v79 = v150;
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v150, v77, v76);
    swift_getKeyPath(&unk_100662AA8);
    ItemLayoutContext.subscript.getter(v170);
    swift_release();
    v80 = v170[0];
    v81 = type metadata accessor for Feature(0);
    v167 = (void *)v81;
    v168 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v82 = sub_1000119C0(aBlock);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v82, enum case for Feature.measurement_with_labelplaceholder(_:), v81);
    LOBYTE(v81) = isFeatureEnabled(_:)(aBlock);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(aBlock);
    v83 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v72, v74, v79, 4, 4, 0, 0, 0, v68, v70, v80, v81 & 1);
    swift_unknownObjectRelease();
    v84 = swift_bridgeObjectRelease(v74);
    (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v79, v76, v84);
    if (qword_100804BC0 != -1)
      swift_once(&qword_100804BC0, sub_10017BDCC);
    v85 = sub_10000EFC4(v52, (uint64_t)qword_100865760);
    v86 = v153;
    v87 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
    v88 = v162;
    v87(v162, v85, v52);
    swift_getKeyPath(&unk_100662AA8);
    ItemLayoutContext.subscript.getter(aBlock);
    swift_release();
    v89 = aBlock[0];
    static Dimensions.defaultRoundingRule.getter(v90);
    v91 = AnyDimension.value(in:rounded:)(v89, v53, v52, &protocol witness table for StaticDimension);
    v92 = swift_unknownObjectRelease();
    v93 = *(void (**)(char *, uint64_t, __n128))(v151 + 8);
    v94 = v152;
    v93(v53, v152, v92);
    v95 = *(void (**)(char *, uint64_t))(v86 + 8);
    v95(v88, v52);
    if (qword_100804BD0 != -1)
      swift_once(&qword_100804BD0, sub_10017BDEC);
    v96 = v68 - v83;
    v97 = sub_10000EFC4(v52, (uint64_t)qword_100865790);
    v87(v88, v97, v52);
    swift_getKeyPath(&unk_100662AA8);
    ItemLayoutContext.subscript.getter(aBlock);
    swift_release();
    v98 = aBlock[0];
    static Dimensions.defaultRoundingRule.getter(v99);
    v100 = AnyDimension.value(in:rounded:)(v98, v53, v52, &protocol witness table for StaticDimension);
    v101 = swift_unknownObjectRelease();
    v93(v53, v94, v101);
    v95(v88, v52);
    v102 = v91 + v100;
    if (qword_100804BC8 != -1)
      swift_once(&qword_100804BC8, sub_10017BDDC);
    v68 = v96 + -30.0;
    v103 = sub_10000EFC4(v52, (uint64_t)qword_100865778);
    v87(v88, v103, v52);
    swift_getKeyPath(&unk_100662AA8);
    ItemLayoutContext.subscript.getter(aBlock);
    swift_release();
    v104 = aBlock[0];
    static Dimensions.defaultRoundingRule.getter(v105);
    v106 = AnyDimension.value(in:rounded:)(v104, v53, v52, &protocol witness table for StaticDimension);
    v107 = swift_unknownObjectRelease();
    v93(v53, v94, v107);
    v95(v88, v52);
    v67 = v102 + v106;
    v55 = v164;
    v75 = &off_100804000;
  }
  swift_retain(v55);
  v109 = (void *)FramedMedia.caption.getter(v108);
  swift_release();
  swift_getKeyPath(&unk_100662A78);
  ItemLayoutContext.subscript.getter(v170);
  swift_release();
  v110 = (void *)v170[0];
  v111 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v109);
  v112 = objc_msgSend(v109, "length");
  v113 = swift_allocObject(&unk_1007549B8, 41, 7);
  *(_QWORD *)(v113 + 16) = 0;
  *(_QWORD *)(v113 + 24) = v110;
  *(_QWORD *)(v113 + 32) = v111;
  *(_BYTE *)(v113 + 40) = 1;
  v114 = swift_allocObject(&unk_1007549E0, 32, 7);
  *(_QWORD *)(v114 + 16) = sub_100028028;
  *(_QWORD *)(v114 + 24) = v113;
  v168 = (uint64_t)sub_10000F020;
  v169 = v114;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027208;
  v167 = &unk_1007549F8;
  v115 = _Block_copy(aBlock);
  v116 = v110;
  v117 = v111;
  swift_retain(v114);
  objc_msgSend(v109, "enumerateAttributesInRange:options:usingBlock:", 0, v112, 0x100000, v115, swift_release().n128_f64[0]);
  _Block_release(v115);
  LOBYTE(v115) = swift_isEscapingClosureAtFileLocation(v114, "", 113, 30, 92, 1);

  swift_release();
  swift_release();
  if ((v115 & 1) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v118 = qword_100806538;
  v112 = v117;
  if (v118 != -1)
LABEL_37:
    swift_once(&qword_100806538, sub_1004C9424);
  v119 = v161;
  v120 = sub_10000EFC4(v161, (uint64_t)qword_10086A080);
  v121 = v160;
  v122 = (uint64_t)v149;
  (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v149, v120, v119);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v122, 0, 1, v119);
  swift_getKeyPath(&unk_100662AA8);
  ItemLayoutContext.subscript.getter(v170);
  swift_release();
  v123 = v170[0];
  v124 = type metadata accessor for Feature(0);
  v167 = (void *)v124;
  v168 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v125 = sub_1000119C0(aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v124 - 8) + 104))(v125, enum case for Feature.measurement_with_labelplaceholder(_:), v124);
  LOBYTE(v124) = isFeatureEnabled(_:)(aBlock);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(aBlock);
  LOBYTE(v147) = v124 & 1;
  v126 = static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v117, v122, 4, 0, 0, 0, 0, v123, v68, v70, v147);
  v128 = v127;
  v130 = v129;
  v132 = v131;

  swift_unknownObjectRelease();
  sub_100041630(v122);
  v133 = v165;
  v134 = v162;
  if (qword_100804BC0 != -1)
    swift_once(&qword_100804BC0, sub_10017BDCC);
  v135 = sub_10000EFC4(v133, (uint64_t)qword_100865760);
  v136 = v153;
  v137 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
  v137(v134, v135, v133);
  swift_getKeyPath(&unk_100662AA8);
  ItemLayoutContext.subscript.getter(aBlock);
  swift_release();
  v138 = AnyDimension.topMargin(from:in:)(aBlock[0], v133, &protocol witness table for StaticDimension, v126, v128, v130, v132);
  v139 = swift_unknownObjectRelease();
  v140 = *(void (**)(char *, uint64_t, __n128))(v136 + 8);
  v140(v134, v133, v139);
  v141 = v128 + v138;
  if (v75[377] != (_UNKNOWN *)-1)
    swift_once(&qword_100804BC8, sub_10017BDDC);
  v142 = sub_10000EFC4(v133, (uint64_t)qword_100865778);
  v137(v134, v142, v133);
  swift_getKeyPath(&unk_100662AA8);
  ItemLayoutContext.subscript.getter(aBlock);
  swift_release();
  v143 = AnyDimension.bottomMargin(from:in:)(aBlock[0], v133, &protocol witness table for StaticDimension, v126, v128, v130, v132);
  swift_unknownObjectRelease();

  v144 = swift_release();
  v140(v134, v133, v144);
  v145 = v141 + v143;
  if (v67 > v141 + v143)
    v145 = v67;
  return v34 + v145;
}

uint64_t sub_10044B20C()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10044B240()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044B250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10044B260(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10044B26C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 26.0;
  return sub_10044B28C(a2, a1, qword_100824020);
}

uint64_t sub_10044B27C(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 17.0;
  return sub_10044B28C(a2, a1, qword_100824038);
}

uint64_t sub_10044B28C(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100011980(v9, a3);
  sub_10000EFC4(v9, (uint64_t)a3);
  if (qword_1008064F8 != -1)
    swift_once(&qword_1008064F8, sub_1004C9364);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10000EFC4(v10, (uint64_t)qword_100869FC0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_1000119C0(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10044B3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_100011980(v0, qword_100824050);
  sub_10000EFC4(v0, (uint64_t)qword_100824050);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

char *sub_10044B468(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  objc_class *ObjectType;
  objc_super v38;
  _OWORD v39[2];
  _OWORD v40[2];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DirectionalTextAlignment(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView] = 0;
  v5[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_isExpanded] = 0;
  v5[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_sizeCategory] = 7;
  v21 = qword_1008064F8;
  v22 = v5;
  if (v21 != -1)
    swift_once(&qword_1008064F8, sub_1004C9364);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_100869FC0);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v20, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DirectionalTextAlignment.none(_:), v14);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v27 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v20, 1, 0, 1, 0, v17, 0, 0);
  v28 = OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_label;
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_label] = v27;
  memset(v40, 0, sizeof(v40));
  memset(v39, 0, sizeof(v39));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6C6562616CLL, 0xE500000000000000, v40, v39);
  sub_10001282C((uint64_t)v39);
  sub_10001282C((uint64_t)v40);
  UIView.setAutomationSemantics(_:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = *(void **)&v22[v28];
  sub_100035178();
  v30 = v29;
  v31 = (void *)static UIColor.secondaryText.getter(v30);
  objc_msgSend(v30, "setTextColor:", v31);

  v32 = &v22[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessory];
  v33 = type metadata accessor for Accessory(0);
  swift_storeEnumTagMultiPayload(v32, v33, 10);

  v38.receiver = v22;
  v38.super_class = ObjectType;
  v34 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_label]);
  return v34;
}

double sub_10044B830(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  void *v16;
  double v17;
  double v18;
  CGFloat Width;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  CGRect v27;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v13 = v12;
  v14 = v9;
  v15 = v10;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView);
  if (v16)
  {
    objc_msgSend(v16, "sizeThatFits:", v9, v10);
    v18 = v17;
  }
  else
  {
    v18 = 0.0;
  }
  v27.origin.x = v11;
  v27.origin.y = v13;
  v27.size.width = v14;
  v27.size.height = v15;
  Width = CGRectGetWidth(v27);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_label);
  objc_msgSend(v20, "sizeThatFits:", Width + -16.0 - v18, 1.79769313e308);
  if (qword_100805D08 != -1)
    swift_once(&qword_100805D08, sub_10044B26C);
  v21 = type metadata accessor for StaticDimension(0);
  v22 = sub_10000EFC4(v21, (uint64_t)qword_100824020);
  static Dimensions.defaultRoundingRule.getter(v22);
  AnyDimension.value(in:rounded:)(v2, v8, v21, &protocol witness table for StaticDimension);
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v8, v5);
  objc_msgSend(v20, "firstBaselineFromTop");
  if (qword_100805D10 != -1)
    swift_once(&qword_100805D10, sub_10044B27C);
  v24 = sub_10000EFC4(v21, (uint64_t)qword_100824038);
  static Dimensions.defaultRoundingRule.getter(v24);
  AnyDimension.value(in:rounded:)(v2, v8, v21, &protocol witness table for StaticDimension);
  v23(v8, v5);
  objc_msgSend(v20, "lastBaselineFromBottom");
  return a1;
}

id sub_10044BABC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  uint64_t v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  void *v22;
  id v23;
  CGFloat v24;
  CGFloat Height;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  double v31;
  objc_super v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v1;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, "layoutSubviews", v5);
  v10 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v12 = v11;
  v13 = v8;
  v14 = v9;
  v15 = OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView;
  v16 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView];
  if (v16)
  {
    objc_msgSend(v16, "sizeThatFits:", v8, v9);
    v18 = v17;
    v20 = v19;
  }
  else
  {
    v20 = 0.0;
    v18 = 0.0;
  }
  v33.origin.x = v10;
  v33.origin.y = v12;
  v33.size.width = v13;
  v33.size.height = v14;
  v21 = CGRectGetMaxX(v33) - v18;
  v34.origin.x = v10;
  v34.origin.y = v12;
  v34.size.width = v13;
  v34.size.height = v14;
  v35.origin.y = CGRectGetMidY(v34) + v20 * -0.5;
  v35.origin.x = v21;
  v31 = v18;
  v35.size.width = v18;
  v35.size.height = v20;
  CGRectIntegral(v35);
  v22 = *(void **)&v1[v15];
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v23, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v10));

  }
  v36.origin.x = v10;
  v36.origin.y = v12;
  v36.size.width = v13;
  v36.size.height = v14;
  v24 = CGRectGetWidth(v36) + -16.0 - v31;
  v37.origin.x = v10;
  v37.origin.y = v12;
  v37.size.width = v13;
  v37.size.height = v14;
  Height = CGRectGetHeight(v37);
  v26 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_label];
  objc_msgSend(v26, "sizeThatFits:", v24, Height);
  if (qword_100805D08 != -1)
    swift_once(&qword_100805D08, sub_10044B26C);
  v27 = type metadata accessor for StaticDimension(0);
  v28 = sub_10000EFC4(v27, (uint64_t)qword_100824020);
  static Dimensions.defaultRoundingRule.getter(v28);
  AnyDimension.value(in:rounded:)(v1, v7, v27, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  objc_msgSend(v26, "firstBaselineFromTop");
  v38.origin.x = v10;
  v38.origin.y = v12;
  v38.size.width = v13;
  v38.size.height = v14;
  CGRectGetMinX(v38);
  v39.origin.x = v10;
  v39.origin.y = v12;
  v39.size.width = v13;
  v39.size.height = v14;
  CGRectGetMinY(v39);
  return objc_msgSend(v26, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v10));
}

id sub_10044BDF0(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    if (qword_100805D18 != -1)
      swift_once(&qword_100805D18, sub_10044B3E0);
    v6 = sub_10000DAF8((uint64_t *)&unk_100808820);
    sub_10000EFC4(v6, (uint64_t)qword_100824050);
    v7 = v1;
    Conditional.evaluate(with:)(&v8, &v7, v6);
    return (id)UILabel.alignment.setter(v8);
  }
  return result;
}

uint64_t sub_10044BFA4()
{
  return type metadata accessor for TodayCardActionOverlayView(0);
}

uint64_t type metadata accessor for TodayCardActionOverlayView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008240A8;
  if (!qword_1008240A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayCardActionOverlayView);
  return result;
}

uint64_t sub_10044BFE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Accessory(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = &unk_100662B38;
    v4[4] = &unk_100662B50;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10044C080(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_10044C0F0(*a1, a2, a3, a4, a5);
}

id sub_10044C088(char a1)
{
  _BYTE *v1;

  v1[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_isExpanded] = a1;
  return objc_msgSend(v1, "setNeedsLayout");
}

unint64_t sub_10044C0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008240B8;
  if (!qword_1008240B8)
  {
    v1 = type metadata accessor for TodayCardActionOverlay(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCardOverlay, v1);
    atomic_store(result, (unint64_t *)&qword_1008240B8);
  }
  return result;
}

void sub_10044C0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char *v5;
  char *v6;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;

  v6 = v5;
  v5[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_sizeCategory] = a5;
  objc_msgSend(v5, "setNeedsLayout");
  sub_100454784(a2);
  v9 = OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView;
  v10 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView];
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_accessoryView] = v11;
  v12 = v11;
  objc_msgSend(v10, "removeFromSuperview");
  v13 = *(void **)&v6[v9];
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v6, "addSubview:", v14);
    objc_msgSend(v6, "setNeedsLayout");

    v10 = v12;
    v12 = v14;
  }

  v17 = (void *)TodayCard.Style.overlayBackgroundColor.getter(v15, v16);
  objc_msgSend(v6, "setBackgroundColor:", v17);

  v18 = objc_msgSend(v6, "traitCollection");
  v19 = v18;
  v20 = 12.0;
  v21 = 12.0;
  if (a5 != 4)
  {
    v22 = PageGrid.horizontalDirectionalMargins.getter(v18);
    v21 = 20.0;
    v20 = v23 <= 20.0 ? v23 : 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v22);
    if (v24 <= 20.0)
      v21 = v24;
  }
  v25 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v19, "layoutDirection"), 0.0, v20, 0.0, v21);
  v27 = v26;
  v29 = v28;

  v30 = objc_msgSend(v6, "setLayoutMargins:", v25, v27, v29, 15.0);
  v31 = *(void **)&v6[OBJC_IVAR____TtC20ProductPageExtension26TodayCardActionOverlayView_label];
  TodayCardActionOverlay.action.getter(v30);
  Action.title.getter(v32);
  v34 = v33;
  v35 = swift_release().n128_u64[0];
  if (v34)
  {
    v36 = String._bridgeToObjectiveC()();
    v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  else
  {
    v36 = 0;
  }
  objc_msgSend(v31, "setText:", v36, *(double *)&v35);

}

uint64_t sub_10044C32C()
{
  uint64_t v0;

  v0 = type metadata accessor for Bag.Profile(0);
  sub_100011980(v0, qword_100868A30);
  sub_10000EFC4(v0, (uint64_t)qword_100868A30);
  return Bag.Profile.init(name:version:)(0x65726F7453707041, 0xE800000000000000, 49, 0xE100000000000000);
}

uint64_t sub_10044C390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DAF8(&qword_10081E518);
  v4 = Promise.__allocating_init()(v3);
  v5 = (char *)objc_msgSend((id)objc_opt_self(EKEventStore), "authorizationStatusForEntityType:", 0);
  if ((unint64_t)(v5 - 1) < 2)
    goto LABEL_6;
  if ((unint64_t)(v5 - 3) < 2)
  {
    LOBYTE(v10[0]) = 1;
LABEL_7:
    Promise.resolve(_:)(v10);
    return v4;
  }
  if (v5)
  {
LABEL_6:
    LOBYTE(v10[0]) = 0;
    goto LABEL_7;
  }
  v6 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension17EventStoreManager_eventStore);
  v7 = swift_allocObject(&unk_100754B10, 32, 7);
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = ObjectType;
  v10[4] = sub_10044C844;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1004EA610;
  v10[3] = &unk_100754B28;
  v8 = _Block_copy(v10);
  swift_retain(v4);
  objc_msgSend(v6, "requestWriteOnlyAccessToEventsWithCompletion:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);
  return v4;
}

uint64_t sub_10044C4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v7;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806950 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v4 = sub_10000EFC4(v0, (uint64_t)qword_10086AAF0);
  v5.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  qword_100824180 = type metadata accessor for OSLogger(0, v5);
  unk_100824188 = &protocol witness table for OSLogger;
  sub_1000119C0(qword_100824168);
  return OSLogger.init(subsystem:category:)(v3, 0xD000000000000011, 0x8000000100662BA0);
}

uint64_t sub_10044C5C0(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[8];
  _QWORD v15[4];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_100805D28 != -1)
      swift_once(&qword_100805D28, sub_10044C4D0);
    sub_10000EF80((uint64_t)qword_100824168, (uint64_t)v16);
    v3 = v17;
    v4 = v18;
    sub_100010F08(v16, v17);
    v5 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v6 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v7 = swift_allocObject(v5, ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 2 * *(_QWORD *)(v6 + 72), *(unsigned __int8 *)(v6 + 80) | 7);
    *(_OWORD *)(v7 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD00000000000003ALL, 0x80000001006878B0);
    swift_getErrorValue(a2, v14, &v12);
    v8 = v12;
    v9 = v13;
    v15[3] = v13;
    v10 = sub_1000119C0(v15);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v10, v8, v9);
    static LogMessage.sensitive(_:)(v15);
    sub_10001282C((uint64_t)v15);
    Logger.info(_:)(v7, v3, v4);
    swift_bridgeObjectRelease(v7);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
    Promise.reject(_:)(a2);
    return swift_errorRelease(a2);
  }
  else
  {
    LOBYTE(v16[0]) = a1 & 1;
    return Promise.resolve(_:)(v16);
  }
}

uint64_t type metadata accessor for EventStoreManager()
{
  return objc_opt_self(_TtC20ProductPageExtension17EventStoreManager);
}

uint64_t sub_10044C820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044C844(char a1, uint64_t a2)
{
  return sub_10044C5C0(a1, a2);
}

uint64_t sub_10044C84C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10044C85C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10044C864(char a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  double v33;
  unint64_t v34;
  __n128 v35;
  void (*v41)(_QWORD);
  double left;
  double bottom;
  double right;
  uint64_t v45;
  __int8 *v46;
  __int8 *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  __int8 *v52;
  uint64_t v54;
  __int8 *v55;
  __int8 *v56;
  __int128 v57;
  __int8 *v58;
  __int8 *v59;
  __int8 *v60;
  __int8 *v61;
  __int128 v62;
  __int8 *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  __int128 v71;
  double v72;
  double v73;
  __int128 v74;
  int64x2_t v76;
  double v77;
  double top;
  int64x2_t v79;
  uint64_t v80;
  __int8 *v81;
  __int8 *v82;
  __int8 *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(int64x2_t *, _QWORD, uint64_t);
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];

  v2 = sub_10000DAF8(&qword_100808208);
  v3 = __chkstk_darwin(v2);
  v5 = &v76.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for PageGrid.HorizontalMargins(0, v3);
  v87 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (int64x2_t *)((char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v9);
  v81 = &v76.i8[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v79.i64[0] = (uint64_t)v76.i64 - v12;
  __chkstk_darwin(v13);
  v15 = &v76.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v76.i8[-v17];
  __chkstk_darwin(v19);
  v21 = &v76.i8[-v20];
  __chkstk_darwin(v22);
  v24 = &v76.i8[-v23];
  v25 = sub_10000DAF8(&qword_100808218);
  v26 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 32) & ~v28;
  v85 = v27;
  v30 = swift_allocObject(v25, v29 + 6 * v27, v28 | 7);
  *(_OWORD *)(v30 + 16) = xmmword_100640730;
  v80 = v30;
  v31 = v30 + v29;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v32 = xmmword_100868E30;
  if ((a1 & 1) != 0)
    v33 = 1.5;
  else
    v33 = 2.0;
  *(double *)v89 = v33;
  v34 = sub_10002128C();
  v35 = PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v88 = 0x4030000000000000;
  v89[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v89, &v88, &type metadata for CGFloat, v34, v35);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  __asm { FMOV            V0.2D, #16.0 }
  *v8 = _Q0;
  v41 = *(void (**)(_QWORD))(v87 + 104);
  LODWORD(v87) = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v86 = (void (*)(int64x2_t *, _QWORD, uint64_t))v41;
  v41(v8);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v89[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for Bool, &protocol witness table for Bool);
  v89[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v24, v5, v15, v21, v18, v8, *(double *)&v32, *((double *)&v32 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v83 = v21;
  v84 = v6;
  v45 = v31;
  v46 = v15;
  v82 = v5;
  v47 = v18;
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v48 = xmmword_100868E40;
  v49 = v85;
  *(_QWORD *)&top = v31 + v85;
  *(double *)v89 = v33;
  v50 = v79.i64[0];
  v51 = PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v88 = 0x4034000000000000;
  v89[0] = 0x4024000000000000;
  v52 = v83;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v89, &v88, &type metadata for CGFloat, v34, v51);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  __asm { FMOV            V0.2D, #20.0 }
  *v8 = _Q0;
  v54 = v84;
  v86(v8, v87, v84);
  LOBYTE(v89[0]) = 0;
  v55 = v82;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for Bool, &protocol witness table for Bool);
  v89[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v50, v55, v46, v52, v47, v8, *(double *)&v48, *((double *)&v48 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  *(_QWORD *)&top = v45 + 2 * v49;
  v56 = v47;
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v57 = xmmword_100868E50;
  v89[0] = 0x4008000000000000;
  v58 = v83;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v79 = vdupq_n_s64(0x4041000000000000uLL);
  *v8 = v79;
  v86(v8, v87, v54);
  LOBYTE(v89[0]) = 0;
  v59 = v82;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for Bool, &protocol witness table for Bool);
  v89[0] = 0;
  v60 = v81;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  top = UIEdgeInsetsZero.top;
  v77 = left;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v58, v59, v60, v56, v46, v8, *(double *)&v57, *((double *)&v57 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v76.i64[0] = v45 + 3 * v85;
  v61 = v59;
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v62 = xmmword_100868E90;
  v89[0] = 0x4010000000000000;
  v63 = v83;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  *v8 = v79;
  v86(v8, v87, v84);
  v64 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v66 = v65;
  v68 = v67;
  v70 = v69;
  LOBYTE(v89[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for Bool, &protocol witness table for Bool);
  v89[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v63, v61, v60, v56, v46, v8, *(double *)&v62, *((double *)&v62 + 1), v64, v66, v68, v70);
  v79.i64[0] = v45;
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v71 = xmmword_100868EA0;
  v89[0] = 0x4014000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4038000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v76 = vdupq_n_s64(0x404A000000000000uLL);
  *v8 = v76;
  v86(v8, v87, v84);
  LOBYTE(v89[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for Bool, &protocol witness table for Bool);
  v89[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v72 = top;
  v73 = v77;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v63, v61, v60, v56, v46, v8, *(double *)&v71, *((double *)&v71 + 1), top, v77, bottom, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v74 = xmmword_100868EB0;
  v89[0] = 0x4018000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4038000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  v89[0] = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  *v8 = v76;
  v86(v8, v87, v84);
  LOBYTE(v89[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for Bool, &protocol witness table for Bool);
  v89[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v89, &type metadata for CGFloat, v34);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v63, v61, v60, v56, v46, v8, *(double *)&v74, *((double *)&v74 + 1), v72, v73, bottom, right);
  return v80;
}

uint64_t sub_10044D21C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + qword_1008241C0);
  v4 = type metadata accessor for TopChartsSegmentPageGridProvider();
  v5 = swift_allocObject(v4, 32, 7);
  v6 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *(_QWORD *)(v5 + 24) = PageGridCache.init()(v7);
  *(_BYTE *)(v5 + 16) = v3;
  a1[3] = v4;
  result = sub_10000E720(&qword_100824740, (uint64_t (*)(uint64_t))type metadata accessor for TopChartsSegmentPageGridProvider, (uint64_t)&unk_100665964);
  a1[4] = result;
  *a1 = v5;
  return result;
}

unint64_t sub_10044D2C0@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = swift_allocObject(&unk_100754B60, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  a1[3] = (uint64_t (*)())&type metadata for TopChartSegmentPageShelfLayoutSpacingProvider;
  result = sub_10044D4FC();
  a1[4] = (uint64_t (*)())result;
  *a1 = sub_10044D4E0;
  a1[1] = (uint64_t (*)())v2;
  return result;
}

_QWORD *sub_10044D328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
  v2 = swift_allocObject(&unk_100754B60, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = type metadata accessor for TopChartSegmentShelfSupplementaryProvider();
  v4 = (_QWORD *)swift_allocObject(v3, 40, 7);
  v4[2] = v1;
  v4[3] = sub_10044D4E0;
  v4[4] = v2;
  sub_10000E720(&qword_100824730, (uint64_t (*)(uint64_t))type metadata accessor for TopChartSegmentShelfSupplementaryProvider, (uint64_t)&unk_10064816C);
  swift_retain(v1);
  return v4;
}

uint64_t sub_10044D3D8(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *Strong;
  uint64_t v3;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = Strong[qword_1008241C0];

  return v3;
}

uint64_t type metadata accessor for TopChartDiffableSegmentViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008241F0;
  if (!qword_1008241F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TopChartDiffableSegmentViewController);
  return result;
}

uint64_t sub_10044D474(uint64_t a1)
{
  void *v2;

  v2 = &unk_100662C28;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 1264);
}

uint64_t sub_10044D4B4()
{
  return type metadata accessor for TopChartDiffableSegmentViewController(0);
}

uint64_t sub_10044D4BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044D4E0()
{
  uint64_t v0;

  return sub_10044D3D8(v0) & 1;
}

unint64_t sub_10044D4FC()
{
  unint64_t result;

  result = qword_100824738;
  if (!qword_100824738)
  {
    result = swift_getWitnessTable(&unk_10065D850, &type metadata for TopChartSegmentPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_100824738);
  }
  return result;
}

double *sub_10044D540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  double *v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int16 v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v13 = v2;
  v3 = (uint64_t *)(v2 + 40);
  v4 = _swiftEmptyArrayStorage;
  do
  {
    v5 = (void *)*(v3 - 1);
    v6 = *v3;
    ObjectType = swift_getObjectType();
    v8 = v5;
    dispatch thunk of MetadataRibbonItemView.layoutContext.getter(&v20, ObjectType, v6);

    if (*((_QWORD *)&v21 + 1))
    {
      v16 = v22;
      v17 = v23;
      v18 = v24;
      v19 = v25;
      v14 = v20;
      v15 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = (double *)sub_1003D99F8(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
      v10 = *((_QWORD *)v4 + 2);
      v9 = *((_QWORD *)v4 + 3);
      if (v10 >= v9 >> 1)
        v4 = (double *)sub_1003D99F8((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
      *((_QWORD *)v4 + 2) = v10 + 1;
      v11 = &v4[11 * v10];
      *((_OWORD *)v11 + 2) = v14;
      *((_OWORD *)v11 + 3) = v15;
      *((_WORD *)v11 + 56) = v19;
      *((_OWORD *)v11 + 5) = v17;
      *((_OWORD *)v11 + 6) = v18;
      *((_OWORD *)v11 + 4) = v16;
    }
    else
    {
      sub_100010F2C((uint64_t)&v20, &qword_100824790);
    }
    v3 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(v13);
  return v4;
}

id sub_10044D6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unint64_t v57;
  _BYTE v58[32];
  _QWORD *v59;

  v48 = a2;
  v6 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetadataRibbonItemViewType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v33 = a1;
    else
      v33 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v33);
    v13 = (uint64_t)result;
    v50 = v7;
    if (result)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease(a1);
    v32 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain(a1);
  v50 = v7;
  if (!v13)
    goto LABEL_35;
LABEL_3:
  v51 = v13;
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  v45 = a3;
  v46 = v6;
  v47 = v3;
  v15 = 0;
  v57 = a1 & 0xC000000000000001;
  v56 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
  v55 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
  v54 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
  v53 = enum case for MetadataRibbonItemViewType.starRating(_:);
  v52 = enum case for MetadataRibbonItemViewType.textLabel(_:);
  v16 = enum case for MetadataRibbonItemViewType.divider(_:);
  v17 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
  v18 = v51;
  do
  {
    if (v57)
    {
      v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
    }
    else
    {
      v19 = *(_QWORD *)(a1 + 8 * v15 + 32);
      v20 = swift_retain(v19);
    }
    MetadataRibbonItem.viewContainerType.getter(v20);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
    if ((_DWORD)v21 == v56
      || (_DWORD)v21 == v55
      || (_DWORD)v21 == v54
      || (_DWORD)v21 == v53
      || (_DWORD)v21 == v52
      || (_DWORD)v21 == v16
      || (_DWORD)v21 == v17)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v28 = a1;
      v29 = v59[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
      v30 = v29;
      a1 = v28;
      v18 = v51;
      v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v19);
      specialized ContiguousArray._endMutation()(v31);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_release(v19);
    }
    ++v15;
  }
  while (v18 != v15);
  swift_bridgeObjectRelease(a1);
  v32 = v59;
  v6 = v46;
  v3 = v47;
  a3 = v45;
LABEL_36:
  v34 = &v3[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels], &v59, 1, 0);
  v35 = *(_QWORD *)v34;
  *(_QWORD *)v34 = v32;
  swift_bridgeObjectRelease(v35);
  swift_retain(a3);
  v36 = sub_10044EACC(a1, a3);
  swift_release(a3);
  v37 = OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews;
  v38 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews]);
    v40 = 32;
    do
    {
      objc_msgSend(*(id *)(v38 + v40), "removeFromSuperview", v45, v46, v47);
      v40 += 16;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease(v38);
    v38 = *(_QWORD *)&v3[v37];
  }
  *(_QWORD *)&v3[v37] = v36;
  swift_bridgeObjectRelease(v38);
  sub_10044DC28();
  v42 = v49;
  v41 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v48, v6);
  v43 = &v3[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
  v44 = swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v58, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v41 + 24))(v43, v42, v6, v44);
  swift_endAccess(v58);
  objc_msgSend(v3, "setNeedsLayout");
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v6);
  return objc_msgSend(v3, "setNeedsLayout");
}

id sub_10044DC28()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v19[24];

  v1 = v0;
  v2 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v7 = &v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v19, 0, 0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = swift_bridgeObjectRetain(v6);
  v9 = MetadataRibbonViewLayout.Metrics.maximumNumberOfItems.getter(v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = (id)sub_100423D84(v9, v6);
  v14 = result;
  v15 = (v13 >> 1) - v12;
  if (v13 >> 1 == v12)
    return objc_msgSend(v1, "setNeedsLayout", swift_unknownObjectRelease(v14).n128_f64[0]);
  if ((uint64_t)(v13 >> 1) > v12)
  {
    v16 = (uint64_t *)(v11 + 16 * v12);
    do
    {
      v17 = *v16;
      v16 += 2;
      objc_msgSend(v1, "addSubview:", v17);
      --v15;
    }
    while (v15);
    return objc_msgSend(v1, "setNeedsLayout", swift_unknownObjectRelease(v14).n128_f64[0]);
  }
  __break(1u);
  return result;
}

uint64_t MetadataRibbonView.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10044DDB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_10044DE1C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  _BYTE v13[24];

  v4 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (char *)*a2;
  v10 = &v9[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
  swift_beginAccess(&v9[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v13, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 24))(v10, v8, v4);
  swift_endAccess(v13);
  objc_msgSend(v9, "setNeedsLayout");
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t MetadataRibbonView.metadataRibbonItemModels.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

Swift::Void __swiftcall MetadataRibbonView.layoutSubviews()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  char *v17;
  __n128 v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24[32];
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MetadataRibbonViewLayout(0, v7);
  v10 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v21).n128_u64[0];
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25.receiver = v0;
  v25.super_class = ObjectType;
  objc_msgSendSuper2(&v25, "layoutSubviews", v11);
  v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  swift_bridgeObjectRetain(v14);
  v16 = sub_10044D540(v15);
  swift_bridgeObjectRelease(v14);
  v17 = &v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
  v18 = swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v24, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v9, v17, v5, v18);
  MetadataRibbonViewLayout.init(metadataRibbonItemLayoutContexts:metrics:)(v16, v9);
  v19 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  MetadataRibbonViewLayout.placeChildren(relativeTo:in:)(v0, v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v21);
}

double MetadataRibbonView.measurements(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  _BYTE v23[32];

  v7 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for MetadataRibbonViewLayout(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews);
  swift_bridgeObjectRetain(v16);
  v18 = sub_10044D540(v17);
  swift_bridgeObjectRelease(v16);
  v19 = v3 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics;
  v20 = swift_beginAccess(v19, v23, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v19, v7, v20);
  MetadataRibbonViewLayout.init(metadataRibbonItemLayoutContexts:metrics:)(v18, v11);
  v21 = MetadataRibbonViewLayout.measurements(fitting:in:)(a1, a2, a3);
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  return v21;
}

uint64_t sub_10044E440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return dispatch thunk of static MetadataRibbonItemView.measurements(for:fitting:in:)(a4, a1);
}

uint64_t MetadataRibbonView.hasContent.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  _BYTE v5[24];

  swift_getObjectType();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(*v1);
  v3 = sub_1000C50E8(0, v2);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_10044E594()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  _BYTE v14[24];
  char v15[24];

  v1 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = &v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels], v15, 1, 0);
  v6 = *(_QWORD *)v5;
  *(_QWORD *)v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v6);
  v7 = OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews]);
    v10 = 32;
    do
    {
      objc_msgSend(*(id *)(v8 + v10), "removeFromSuperview");
      v10 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v8);
    v8 = *(_QWORD *)&v0[v7];
  }
  *(_QWORD *)&v0[v7] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v8);
  sub_10044DC28();
  _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
  v11 = &v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
  v12 = swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v14, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v2 + 24))(v11, v4, v1, v12);
  swift_endAccess(v14);
  objc_msgSend(v0, "setNeedsLayout");
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t MetadataRibbonView.isInsideSearchAd.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd, v3, 0, 0);
  return *v1;
}

void MetadataRibbonView.isInsideSearchAd.setter(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  __n128 v9;
  _BYTE v10[24];
  char v11[24];

  v3 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = &v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd], v11, 1, 0);
  *v7 = a1;
  if ((a1 & 1) != 0)
  {
    _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
    v8 = &v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
    v9 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v10, 33, 0);
    (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v4 + 24))(v8, v6, v3, v9);
    objc_msgSend(v1, "setNeedsLayout", swift_endAccess(v10).n128_f64[0]);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void (*MetadataRibbonView.isInsideSearchAd.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd;
  v3[9] = v6;
  v3[10] = v7;
  swift_beginAccess(v1 + v7, v3, 33, 0);
  return sub_10044E8BC;
}

void sub_10044E8BC(_QWORD *a1, char a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;

  v3 = *a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = *(char **)(v3 + 48);
    if (v4[*(_QWORD *)(v3 + 80)] == 1)
    {
      v6 = *(_QWORD *)(v3 + 64);
      v5 = *(_QWORD *)(v3 + 72);
      v7 = *(_QWORD *)(v3 + 56);
      _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
      v8 = &v4[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
      v9 = swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v3 + 24, 33, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 24))(v8, v5, v7, v9);
      objc_msgSend(v4, "setNeedsLayout", swift_endAccess(v3 + 24).n128_f64[0]);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    }
  }
  free(*(void **)(v3 + 72));
  free((void *)v3);
}

uint64_t sub_10044E9F8()
{
  return type metadata accessor for MetadataRibbonView(0);
}

uint64_t type metadata accessor for MetadataRibbonView(uint64_t a1)
{
  uint64_t result;

  result = qword_100824778;
  if (!qword_100824778)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetadataRibbonView);
  return result;
}

uint64_t sub_10044EA3C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for MetadataRibbonViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = &unk_100662CB0;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_10044EACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  uint64_t v41;

  v3 = v2;
  v38 = a2;
  v41 = type metadata accessor for MetadataRibbonItemViewType(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_32;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v7)
  {
    v29 = v3;
    v37 = a1 & 0xC000000000000001;
    v36 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v32 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v33 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v30 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v31 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v28 = enum case for MetadataRibbonItemViewType.divider(_:);
    v8 = _swiftEmptyArrayStorage;
    v9 = 4;
    v27 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v34 = v7;
    v35 = a1;
    while (1)
    {
      v10 = v9 - 4;
      if (!v37)
        break;
      v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
      v12 = v9 - 3;
      if (__OFADD__(v10, 1))
        goto LABEL_31;
LABEL_9:
      MetadataRibbonItem.viewContainerType.getter(v11);
      v13 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v6, v41);
      if (v13 == v36)
      {
        v14 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
        v15 = (unint64_t *)&unk_100822B08;
        v16 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
        v17 = &unk_10065C9D0;
LABEL_23:
        v18 = sub_10000E720(v15, v16, (uint64_t)v17);
        v19 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v20 = dispatch thunk of MetadataRibbonItemView.apply(_:asPartOf:)(v3, v38, v14, v18);
        MetadataRibbonItem.id.getter(v40, v20);
        dispatch thunk of MetadataRibbonItemView.id.setter(v40, v14, v18);
        swift_release(v3);
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_1003DA0D0(0, v8[2] + 1, 1, v8);
        a1 = v35;
        v22 = v8[2];
        v21 = v8[3];
        if (v22 >= v21 >> 1)
          v8 = sub_1003DA0D0((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
        v8[2] = v22 + 1;
        v23 = &v8[2 * v22];
        v23[4] = v19;
        v23[5] = v18;
        v7 = v34;
        goto LABEL_28;
      }
      if (v13 == v33)
      {
        v14 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v15 = (unint64_t *)&unk_100824880;
        v16 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v17 = &unk_10066B8A0;
        goto LABEL_23;
      }
      if (v13 == v32)
      {
        v14 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v15 = (unint64_t *)&unk_100822B00;
        v16 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v17 = &unk_1006540A0;
        goto LABEL_23;
      }
      if (v13 == v31)
      {
        v14 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v15 = (unint64_t *)&unk_100824890;
        v16 = type metadata accessor for MetadataRibbonStarRatingView;
        v17 = &unk_100669C90;
        goto LABEL_23;
      }
      if (v13 == v30)
      {
        v14 = type metadata accessor for MetadataRibbonTagView(0);
        v15 = (unint64_t *)&unk_100822AF8;
        v16 = type metadata accessor for MetadataRibbonTagView;
        v17 = &unk_100650268;
        goto LABEL_23;
      }
      if (v13 == v28)
      {
        v14 = type metadata accessor for MetadataRibbonBarView(0);
        v15 = (unint64_t *)&unk_100824870;
        v16 = type metadata accessor for MetadataRibbonBarView;
        v17 = &unk_10064CBC8;
        goto LABEL_23;
      }
      if (v13 == v27)
      {
        v14 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v15 = (unint64_t *)&unk_100822AF0;
        v16 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v17 = &unk_1006419B8;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v41);
      swift_release(v3);
LABEL_28:
      ++v9;
      if (v12 == v7)
      {
        swift_bridgeObjectRelease(a1);
        return v8;
      }
    }
    v3 = *(_QWORD *)(a1 + 8 * v9);
    v11 = swift_retain(v3);
    v12 = v9 - 3;
    if (!__OFADD__(v10, 1))
      goto LABEL_9;
LABEL_31:
    __break(1u);
LABEL_32:
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v24);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

void sub_10044EF1C(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[5];
  char v46[32];

  v41 = a3;
  v4 = type metadata accessor for Artwork.Crop(0, a1);
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  __chkstk_darwin(v4);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels, v46, 0, 0);
  v7 = *v6;
  if (*v6)
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews);
    v9 = v7 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v7 >> 62)
      goto LABEL_25;
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v6);
    swift_bridgeObjectRetain(v8);
    while (v10)
    {
      v44 = v7 & 0xC000000000000001;
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
      }
      else
      {
        if (!*(_QWORD *)(v9 + 16))
        {
          __break(1u);
          return;
        }
        v11 = *(_QWORD *)(v7 + 32);
        swift_retain(v11);
      }
      v43 = *(_QWORD *)(v8 + 16);
      if (!v43)
      {
LABEL_22:
        swift_bridgeObjectRelease(v8);
        swift_bridgeObjectRelease(v7);
        swift_release(v11);
        return;
      }
      v12 = 0;
      v42 = v10 - 1;
      v13 = 32;
      v36 = v9;
      v37 = v8;
      while (v12 < *(_QWORD *)(v8 + 16))
      {
        v14 = *(void **)(v8 + v13);
        v15 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v16 = swift_dynamicCastClass(v14, v15);
        if (!v16)
        {
          v33 = v11;
          goto LABEL_16;
        }
        v17 = v16;
        v18 = v14;
        v19 = MetadataRibbonItem.artwork.getter();
        if (v19)
        {
          v21 = v19;
          v22 = *(double *)(v17 + OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkSize);
          v23 = *(double *)(v17 + OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkSize + 8);
          v24 = v38;
          v25 = Artwork.crop.getter(v20);
          v26 = Artwork.Crop.preferredContentMode.getter(v25);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
          v27 = v7;
          v28 = Artwork.config(_:mode:prefersLayeredImage:)(v26, 0, v22, v23);
          type metadata accessor for ArtworkLoader(0);
          v29 = *(_QWORD *)(v17 + OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView);
          v30 = type metadata accessor for ArtworkView(0);
          static ArtworkLoader.handlerKey<A>(for:)(v45, v29, v30);
          v31 = swift_allocObject(&unk_100754BC8, 24, 7);
          swift_unknownObjectWeakInit(v31 + 16, v17);
          swift_retain(v31);
          ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v28, 2, 1, v45, sub_10044F2BC, v31);
          v32 = v28;
          v7 = v27;
          v9 = v36;
          swift_release(v32);
          swift_release(v31);
          sub_100010F2C((uint64_t)v45, &qword_100809010);
          swift_release(v11);

          swift_release(v21);
          v33 = v31;
          v8 = v37;
LABEL_16:
          swift_release(v33);
          goto LABEL_18;
        }
        swift_release(v11);

LABEL_18:
        if (v42 == v12)
          goto LABEL_29;
        v34 = v12 + 1;
        if (v44)
        {
          v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v7);
        }
        else
        {
          if (v34 >= *(_QWORD *)(v9 + 16))
            goto LABEL_24;
          v11 = *(_QWORD *)(v7 + 8 * v12 + 40);
          swift_retain(v11);
        }
        ++v12;
        v13 += 16;
        if (v43 == v12)
          goto LABEL_22;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      if (v7 >= 0)
        v35 = v9;
      else
        v35 = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      v10 = _CocoaArrayWrapper.endIndex.getter(v35);
    }
LABEL_29:
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
  }
}

uint64_t sub_10044F298()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044F2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10024A7C0(a1, a2, a3, a4, v4);
}

_QWORD *sub_10044F2C4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  char v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  double v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v63 = a2;
  v4 = type metadata accessor for Artwork.Crop(0, a3);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AspectRatio(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for MetadataRibbonIconWithLabelViewLayout.Metrics(0);
  v55 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v54 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetadataRibbonItemViewType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - v14;
  result = _swiftEmptyArrayStorage;
  if (!a1)
    return result;
  v73 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v51 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v51 = a1;
    swift_bridgeObjectRetain(a1);
    result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v51);
    v17 = (uint64_t)result;
    if (result)
      goto LABEL_4;
LABEL_23:
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = (_QWORD *)swift_bridgeObjectRetain(a1);
  if (!v17)
    goto LABEL_23;
LABEL_4:
  if (v17 >= 1)
  {
    v18 = 0;
    v65 = a1 & 0xC000000000000001;
    v64 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v66 = v17;
    v53 = v10;
    while (1)
    {
      if (v65)
      {
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a1);
      }
      else
      {
        v20 = *(_QWORD *)(a1 + 8 * v18 + 32);
        v21 = swift_retain(v20);
      }
      MetadataRibbonItem.viewContainerType.getter(v21);
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, v64, v9);
      v22 = sub_10000E720(&qword_100824788, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonItemViewType, (uint64_t)&protocol conformance descriptor for MetadataRibbonItemViewType);
      dispatch thunk of RawRepresentable.rawValue.getter(&v67, v9, v22);
      dispatch thunk of RawRepresentable.rawValue.getter(&v71, v9, v22);
      v23 = v68;
      v24 = v72;
      if (v67 == v71 && v68 == v72)
        break;
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, v71, v72, 0);
      swift_bridgeObjectRelease(v23);
      v29 = swift_bridgeObjectRelease(v24);
      v30 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
      v30(v12, v9, v29);
      v27 = ((uint64_t (*)(char *, uint64_t))v30)(v15, v9);
      if ((v28 & 1) != 0)
        goto LABEL_15;
LABEL_7:
      ++v18;
      swift_release(v20);
      if (v66 == v18)
      {
        swift_bridgeObjectRelease(a1);
        return (_QWORD *)v73;
      }
    }
    v25 = swift_bridgeObjectRelease_n(v68, 2);
    v26 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v26(v12, v9, v25);
    v27 = ((uint64_t (*)(char *, uint64_t))v26)(v15, v9);
LABEL_15:
    v31 = MetadataRibbonItem.artwork.getter(v27);
    if (v31)
    {
      v32 = v31;
      v33 = a1;
      v34 = v54;
      v35 = static MetadataRibbonIconWithLabelViewLayout.Metrics.standard.getter();
      MetadataRibbonIconWithLabelViewLayout.Metrics.defaultArtworkHeight.getter(&v67, v35);
      v36 = v69;
      v37 = v70;
      sub_100010F08(&v67, v69);
      v39 = AnyDimension.value(with:)(v63, v36, v37, v38);
      v40 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v67);
      Artwork.size.getter(v40);
      v41 = v57;
      AspectRatio.init(_:_:)(v42);
      v43 = AspectRatio.width(fromHeight:)(v39);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v59);
      v44.n128_f64[0] = (*(double (**)(char *, uint64_t))(v55 + 8))(v34, v56);
      v45 = v60;
      v46 = Artwork.crop.getter(v44);
      v47 = Artwork.Crop.preferredContentMode.getter(v46);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v62);
      v48 = Artwork.config(_:mode:prefersLayeredImage:)(v47, 0, v43, v39);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
      v50 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v49 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v50 >= v49 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
      specialized Array._endMutation()(v19);
      swift_release(v32);
      a1 = v33;
      v10 = v53;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

double sub_10044F74C(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13;
  __n128 v14;

  v13 = *a1;
  swift_getObjectType();
  v14.n128_f64[0] = a2;
  return sub_100196208(v14, a3, v13, a5, a7, a8);
}

id sub_10044F7B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10044F7E4(*a1, a2, a3);
}

uint64_t sub_10044F7B8()
{
  return sub_10000E720(&qword_100812DD8, (uint64_t (*)(uint64_t))&type metadata accessor for TapToRate, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
}

id sub_10044F7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  char v11;
  id v12;
  char v13;
  char v14;
  _QWORD v16[5];

  v4 = v3;
  v7 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34ProductTapToRateCollectionViewCell_separatorView];
  v8 = type metadata accessor for Feature.iOS(0);
  v16[3] = v8;
  v16[4] = sub_10000E720((unint64_t *)&qword_10080CC50, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v9 = sub_1000119C0(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.iOS.review_summarization(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
  if ((v8 & 1) != 0
    && (v10 = objc_msgSend(v4, "traitCollection"),
        v11 = UITraitCollection.isSizeClassRegular.getter(v10),
        v10,
        (v11 & 1) != 0))
  {
    v12 = objc_msgSend(v4, "traitCollection");
    v13 = UITraitCollection.prefersAccessibilityLayouts.getter(v12);

    v14 = v13 ^ 1;
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v7, "setHidden:", v14 & 1);
  sub_1000A51C8(a1, 0, a3);
  return objc_msgSend(v4, "setNeedsLayout");
}

double sub_10044F944(__n128 a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  int v60;
  _BYTE v61[12];
  int v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[5];
  _QWORD v75[5];
  _QWORD v76[5];
  __int128 v77;
  __int128 v78;
  void *v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  _QWORD v83[5];
  _QWORD v84[5];
  _QWORD v85[5];
  _QWORD v86[5];
  __int128 v87;
  __int128 v88;
  void *v89;
  _QWORD v90[5];
  _QWORD v91[5];
  __int128 v92;
  __int128 v93;
  void *v94;
  char v95[24];
  _QWORD v96[3];
  uint64_t v97;
  void *v98;

  v3 = v2;
  v5 = a1.n128_f64[0];
  v6 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, a1);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for SmallSearchLockupLayout(0, v8);
  v72 = *(_QWORD *)(v11 - 8);
  v73 = v11;
  __chkstk_darwin(v11);
  v71 = &v61[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100805D30 != -1)
    swift_once(&qword_100805D30, sub_1004500FC);
  v13 = sub_10000EFC4(v6, (uint64_t)qword_100868A60);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
  v14 = *(_BYTE **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton);
  v15 = type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter(v15);
  v17 = (double *)&v14[OBJC_IVAR____TtC20ProductPageExtension11OfferButton_cachedIntrinsicContentSize];
  if ((v14[OBJC_IVAR____TtC20ProductPageExtension11OfferButton_cachedIntrinsicContentSize + 16] & 1) != 0)
  {
    v18 = (uint64_t)&v14[OBJC_IVAR____TtC20ProductPageExtension11OfferButton__configuration];
    swift_beginAccess(&v14[OBJC_IVAR____TtC20ProductPageExtension11OfferButton__configuration], v95, 0, 0);
    sub_10000EF80(v18, (uint64_t)v96);
    v19 = v97;
    v20 = v98;
    sub_100010F08(v96, v97);
    v21 = dispatch thunk of OfferButtonConfiguration.size(in:)(v14, v19, v20);
    v23 = v22;
    v16 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v96);
    *v17 = v21;
    v17[1] = v23;
    *((_BYTE *)v17 + 16) = 0;
  }
  else
  {
    v21 = *v17;
    v23 = v17[1];
  }
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter(v16, v21, v23);
  v24 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v25 = type metadata accessor for ArtworkView(0);
  v98 = &protocol witness table for UIView;
  v97 = v25;
  v68 = v24;
  v96[0] = v24;
  v26 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel);
  v67 = v26;
  if (v26)
  {
    *((_QWORD *)&v93 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v94 = &protocol witness table for UILabel;
    *(_QWORD *)&v92 = v26;
  }
  else
  {
    v94 = 0;
    v92 = 0u;
    v93 = 0u;
  }
  v27 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel);
  v28 = type metadata accessor for DynamicTypeLabel(0);
  v29 = v28;
  v91[4] = &protocol witness table for UILabel;
  v91[3] = v28;
  v91[0] = v27;
  v30 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
  v90[4] = &protocol witness table for UILabel;
  v90[3] = v28;
  v65 = v30;
  v66 = v27;
  v90[0] = v30;
  v31 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
  v70 = v10;
  if (v31)
  {
    *((_QWORD *)&v88 + 1) = v28;
    v89 = &protocol witness table for UILabel;
    *(_QWORD *)&v87 = v31;
  }
  else
  {
    v89 = 0;
    v87 = 0u;
    v88 = 0u;
  }
  v32 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel);
  v86[3] = v28;
  v86[4] = &protocol witness table for UILabel;
  v64 = v32;
  v86[0] = v32;
  v85[3] = type metadata accessor for OfferButton();
  v85[4] = &protocol witness table for UIView;
  v69 = v14;
  v85[0] = v14;
  v33 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_userRatingView);
  v84[3] = type metadata accessor for RatingView();
  v84[4] = &protocol witness table for UIView;
  v63 = v33;
  v83[4] = &protocol witness table for UILabel;
  v84[0] = v33;
  v34 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel);
  v83[3] = v29;
  v83[0] = v34;
  v35 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView);
  if (v35)
  {
    *((_QWORD *)&v81 + 1) = type metadata accessor for EditorsChoiceView();
    v82 = &protocol witness table for UIView;
    *(_QWORD *)&v80 = v35;
  }
  else
  {
    v82 = 0;
    v80 = 0u;
    v81 = 0u;
  }
  v36 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton);
  if (v36)
  {
    *((_QWORD *)&v78 + 1) = type metadata accessor for SearchAdTransparencyButton(0);
    v79 = &protocol witness table for UIView;
    *(_QWORD *)&v77 = v36;
  }
  else
  {
    v79 = 0;
    v78 = 0u;
    v77 = 0u;
  }
  v37 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel);
  v76[3] = v29;
  v76[4] = &protocol witness table for UILabel;
  v76[0] = v37;
  v62 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includeRatings);
  v38 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView);
  v75[3] = type metadata accessor for MetadataRibbonView(0);
  v75[4] = &protocol witness table for UIView;
  v75[0] = v38;
  v39 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView);
  v74[3] = type metadata accessor for SearchTagsRibbonView(0);
  v74[4] = &protocol witness table for UIView;
  v74[0] = v39;
  v40 = v35;
  v41 = v36;
  v42 = v37;
  v43 = v38;
  v39;
  v44 = v68;
  v45 = v67;
  v46 = v66;
  v47 = v65;
  v48 = v31;
  v49 = v64;
  v50 = v69;
  v51 = v63;
  v52 = v34;
  LOBYTE(v39) = MetadataRibbonView.hasContent.getter();
  v53 = sub_10042489C();
  BYTE2(v60) = *(_BYTE *)(v3
                        + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includesMetadataInformationInLockup);
  BYTE1(v60) = v53 & 1;
  LOBYTE(v60) = v39 & 1;
  v54 = v71;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)(v70, v96, &v92, v91, v90, &v87, v86, v85, v84, v83, &v80, &v77, v76, (_BYTE)v62, v75, v74, v60);
  v55 = sub_10000E720((unint64_t *)&unk_100824850, (uint64_t (*)(uint64_t))&type metadata accessor for SmallSearchLockupLayout, (uint64_t)&protocol conformance descriptor for SmallSearchLockupLayout);
  v56 = v3;
  v57 = v73;
  v58 = dispatch thunk of Measurable.measurements(fitting:in:)(v56, v73, v55, v5, a2);
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v54, v57);
  return v58;
}

id sub_10044FE7C(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  char *v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  UIImage_optional v14;

  v4 = v3;
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, a3);
  v5 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel];
  v6 = objc_msgSend(v5, "superview");
  if (!v6)
    goto LABEL_3;
  v7 = v6;
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v8 = v4;
  v9 = v7;
  LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

  if ((v7 & 1) == 0)
LABEL_3:
    objc_msgSend(v4, "addSubview:", v5);
  objc_msgSend(v5, "setHidden:", 1);
  objc_msgSend(v5, "setText:", 0);
  objc_msgSend(v4, "setNeedsLayout");
  v10 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton;
  v11 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton];
  if (v11)
  {
    objc_msgSend(v11, "removeFromSuperview");
    v12 = *(void **)&v4[v10];
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)&v4[v10] = 0;

  if (*(_QWORD *)&v4[v10])
    objc_msgSend(v4, "addSubview:");
  v4[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includesMetadataInformationInLockup] = 0;
  sub_10044E594();
  return sub_100424904();
}

double sub_100450000(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, double a10, uint64_t a11, void *a12)
{
  return sub_100452B44(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_10045000C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator, v12, 1, 0);
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  *v4 = 0;
  swift_release();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock, &v11, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = 0;
  v5[1] = 0;
  sub_100018908(v6, v7);
  v8 = type metadata accessor for SearchTagsRibbonView(0);
  v9 = sub_10000E720(&qword_1008248A0, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v8, v9);
}

uint64_t sub_1004500FC(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  NSString *v15;
  void (*v16)(_QWORD *, uint64_t);
  _QWORD *v17;
  void (*v18)(_QWORD *, _QWORD *, uint64_t);
  NSString *v19;
  void (*v20)(_QWORD *, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  NSString *v23;
  _QWORD *v24;
  NSString *v25;
  _QWORD *v26;
  void (*v27)(_QWORD *, _QWORD *, uint64_t);
  NSString *v28;
  _QWORD *v29;
  NSString *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v34;
  NSString *v35;
  _QWORD *v36;
  NSString *v37;
  _QWORD *v38;
  NSString *v39;
  _QWORD *v40;
  NSString *v41;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD *, uint64_t);
  unsigned int v46;
  uint64_t v47;
  void (*v48)(_QWORD *, uint64_t, uint64_t);
  void (*v49)(_QWORD *, _QWORD *, uint64_t);
  _QWORD v50[5];
  _QWORD v51[3];
  void *v52;
  void *v53;
  _QWORD v54[5];
  _QWORD v55[5];
  _QWORD v56[5];
  _QWORD v57[5];
  _QWORD v58[3];
  void *v59;
  void *v60;
  _QWORD v61[3];
  uint64_t v62;
  void *v63;
  _QWORD v64[3];
  uint64_t v65;
  void *v66;
  _QWORD v67[3];
  uint64_t v68;
  void *v69;
  _QWORD v70[3];
  uint64_t v71;
  void *v72;
  _QWORD v73[3];
  uint64_t v74;
  void *v75;
  _QWORD v76[3];
  uint64_t v77;
  void *v78;
  _QWORD v79[3];
  uint64_t v80;
  void *v81;
  _QWORD v82[3];
  uint64_t v83;
  void *v84;
  _QWORD v85[3];
  uint64_t v86;
  void *v87;
  _QWORD v88[5];
  _QWORD v89[6];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, v3);
  sub_100011980(v6, qword_100868A60);
  v47 = sub_10000EFC4(v6, (uint64_t)qword_100868A60);
  v89[3] = &type metadata for Double;
  v89[4] = &protocol witness table for Double;
  v89[0] = 0x4024000000000000;
  if (qword_100806020 != -1)
    swift_once(&qword_100806020, sub_1004C5E70);
  v7 = type metadata accessor for FontUseCase(0);
  v8 = sub_10000EFC4(v7, (uint64_t)qword_100869150);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v8, v7);
  v9 = (void (*)(_QWORD *, _QWORD, uint64_t))v2[13];
  v9(v5, enum case for FontSource.useCase(_:), v1);
  v10 = type metadata accessor for StaticDimension(0);
  v88[3] = v10;
  v88[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v88);
  v86 = v1;
  v87 = &protocol witness table for FontSource;
  v11 = sub_1000119C0(v85);
  v12 = (void (*)(_QWORD *, _QWORD *, uint64_t))v2[2];
  v12(v11, v5, v1);
  StaticDimension.init(_:scaledLike:)(v85, 14.0);
  v45 = (void (*)(_QWORD *, uint64_t))v2[1];
  v45(v5, v1);
  *v5 = UIFontTextStyleBody;
  v13 = enum case for FontSource.textStyle(_:);
  v9(v5, enum case for FontSource.textStyle(_:), v1);
  v48 = v9;
  v86 = v10;
  v44 = v10;
  v87 = &protocol witness table for StaticDimension;
  sub_1000119C0(v85);
  v83 = v1;
  v84 = &protocol witness table for FontSource;
  v14 = sub_1000119C0(v82);
  v12(v14, v5, v1);
  v15 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v82, 26.0);
  v16 = v45;
  v45(v5, v1);
  *v5 = v15;
  v9(v5, v13, v1);
  v83 = v10;
  v84 = &protocol witness table for StaticDimension;
  sub_1000119C0(v82);
  v80 = v1;
  v81 = &protocol witness table for FontSource;
  v17 = sub_1000119C0(v79);
  v12(v17, v5, v1);
  v18 = v12;
  v19 = v15;
  StaticDimension.init(_:scaledLike:)(v79, 18.0);
  v16(v5, v1);
  *v5 = v19;
  v20 = v48;
  v48(v5, v13, v1);
  v21 = v44;
  v80 = v44;
  v81 = &protocol witness table for StaticDimension;
  sub_1000119C0(v79);
  v77 = v1;
  v78 = &protocol witness table for FontSource;
  v22 = sub_1000119C0(v76);
  v18(v22, v5, v1);
  v49 = v18;
  v23 = v19;
  StaticDimension.init(_:scaledLike:)(v76, 16.0);
  v16(v5, v1);
  *v5 = v23;
  v20(v5, v13, v1);
  v77 = v21;
  v78 = &protocol witness table for StaticDimension;
  sub_1000119C0(v76);
  v74 = v1;
  v75 = &protocol witness table for FontSource;
  v24 = sub_1000119C0(v73);
  v18(v24, v5, v1);
  v25 = v23;
  StaticDimension.init(_:scaledLike:)(v73, 22.0);
  v16(v5, v1);
  *v5 = UIFontTextStyleFootnote;
  v20(v5, v13, v1);
  v74 = v21;
  v75 = &protocol witness table for StaticDimension;
  sub_1000119C0(v73);
  v71 = v1;
  v72 = &protocol witness table for FontSource;
  v26 = sub_1000119C0(v70);
  v27 = v49;
  v49(v26, v5, v1);
  v28 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)(v70, 21.0);
  v16(v5, v1);
  *v5 = v28;
  v20(v5, v13, v1);
  v71 = v21;
  v72 = &protocol witness table for StaticDimension;
  sub_1000119C0(v70);
  v68 = v1;
  v69 = &protocol witness table for FontSource;
  v29 = sub_1000119C0(v67);
  v27(v29, v5, v1);
  v30 = v28;
  StaticDimension.init(_:scaledLike:)(v67, 20.0);
  v16(v5, v1);
  *v5 = v30;
  v31 = v13;
  v32 = v13;
  v33 = v48;
  v48(v5, v31, v1);
  v68 = v21;
  v69 = &protocol witness table for StaticDimension;
  sub_1000119C0(v67);
  v65 = v1;
  v66 = &protocol witness table for FontSource;
  v34 = sub_1000119C0(v64);
  v27(v34, v5, v1);
  v35 = v30;
  StaticDimension.init(_:scaledLike:)(v64, 20.0);
  v16(v5, v1);
  *v5 = v35;
  v46 = v32;
  v33(v5, v32, v1);
  v65 = v21;
  v66 = &protocol witness table for StaticDimension;
  sub_1000119C0(v64);
  v62 = v1;
  v63 = &protocol witness table for FontSource;
  v36 = sub_1000119C0(v61);
  v27(v36, v5, v1);
  v37 = v35;
  StaticDimension.init(_:scaledLike:)(v61, 21.0);
  v16(v5, v1);
  *v5 = v37;
  v33(v5, v32, v1);
  v62 = v21;
  v63 = &protocol witness table for StaticDimension;
  sub_1000119C0(v61);
  v59 = (void *)v1;
  v60 = &protocol witness table for FontSource;
  v38 = sub_1000119C0(v58);
  v27(v38, v5, v1);
  v39 = v37;
  StaticDimension.init(_:scaledLike:)(v58, 16.0);
  v16(v5, v1);
  v60 = &protocol witness table for Double;
  v59 = &type metadata for Double;
  v57[4] = &protocol witness table for Double;
  v58[0] = 0x4024000000000000;
  v57[3] = &type metadata for Double;
  v56[4] = &protocol witness table for Double;
  v57[0] = 0x4010000000000000;
  v56[3] = &type metadata for Double;
  v55[4] = &protocol witness table for Double;
  v56[0] = 0x4020000000000000;
  v55[3] = &type metadata for Double;
  v55[0] = 0x401C000000000000;
  *v5 = v39;
  v33(v5, v46, v1);
  v54[3] = v21;
  v54[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v54);
  v52 = (void *)v1;
  v53 = &protocol witness table for FontSource;
  v40 = sub_1000119C0(v51);
  v49(v40, v5, v1);
  v41 = v39;
  StaticDimension.init(_:scaledLike:)(v51, 20.0);
  v16(v5, v1);
  v52 = &type metadata for Double;
  v53 = &protocol witness table for Double;
  v50[4] = &protocol witness table for Double;
  v51[0] = 0x4040000000000000;
  v50[3] = &type metadata for Double;
  v50[0] = 0x4024000000000000;
  return SmallSearchLockupLayout.Metrics.init(artworkSize:artworkMargin:headingSpace:titleRegularSpace:titleMediumSpace:titleShortSpace:titleWithHeadingSpace:subtitleSpace:tertiaryTitleSpace:offerTextSpace:metadataTextSpace:bottomSpace:offerButtonSize:offerButtonMargin:userRatingRightMargin:editorsChoiceMargin:adButtonRightMargin:descriptionSpace:regularWidthColumnSpacing:descriptionTopMargin:)(v89, v88, v85, v82, v79, v76, v73, v70, 60.0, 60.0, 0.0, 0.0, v67, v64, v61, v58, v57, v56, v55,
           v54,
           v51,
           v50);
}

uint64_t sub_10045087C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_100011980(v0, qword_1008247E0);
  sub_10000EFC4(v0, (uint64_t)qword_1008247E0);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

void sub_100450904(char a1)
{
  char *v1;
  char *v2;
  int v3;
  id v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;

  if (v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includeEditorsChoice] != (a1 & 1))
  {
    v2 = v1;
    if (!v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includeEditorsChoice])
    {
      v11 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView;
      v12 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView];
      if (v12)
      {
        objc_msgSend(v12, "removeFromSuperview");
        v13 = *(void **)&v2[v11];
      }
      else
      {
        v13 = 0;
      }
      *(_QWORD *)&v2[v11] = 0;

      goto LABEL_11;
    }
    v3 = v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_useAdsLocale];
    v4 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
    v5 = sub_10003F690(2, 0, 0, v3, 0);
    v6 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView;
    v7 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView] = v5;

    v8 = *(void **)&v2[v6];
    if (v8)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v9 = v8;
      v10 = (void *)static UIColor.secondaryText.getter();
      objc_msgSend(v9, "setTintColor:", v10);

      if (*(_QWORD *)&v2[v6])
      {
        objc_msgSend(v2, "addSubview:");
LABEL_11:
        objc_msgSend(v2, "setNeedsLayout");
        return;
      }
    }
    __break(1u);
  }
}

void sub_100450A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  char *v5;
  uint64_t v6;
  int v7;
  char *v8;
  char *v9;
  __n128 v10;
  _BYTE v11[24];
  char v12[24];

  v1 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(char **)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView);
  v6 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_isDisplayingSearchAd;
  v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_isDisplayingSearchAd);
  v8 = &v5[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd];
  swift_beginAccess(&v5[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_isInsideSearchAd], v12, 1, 0);
  *v8 = v7;
  if (v7 == 1)
  {
    _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
    v9 = &v5[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics];
    v10 = swift_beginAccess(&v5[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics], v11, 33, 0);
    (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v2 + 24))(v9, v4, v1, v10);
    objc_msgSend(v5, "setNeedsLayout", swift_endAccess(v11).n128_f64[0]);
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  }
  *(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView)
           + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_isInsideSearchAd) = *(_BYTE *)(v0 + v6);
}

char *sub_100450B8C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  void (*v32)(_QWORD);
  uint64_t v33;
  char *v34;
  objc_class *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  void *v70;
  id v71;
  void *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  char v78;
  uint64_t *v79;
  void (*v81)(char *, _QWORD, uint64_t, uint64_t);
  void (*v82)(char *, uint64_t, uint64_t);
  void (*v83)(char *, _QWORD, uint64_t);
  unsigned int v84;
  uint64_t v85;
  char *v86;
  objc_class *ObjectType;
  char *v88;
  objc_super v89;
  _QWORD v90[3];
  uint64_t v91;
  void *v92;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v85 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v86 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FontSource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRegularMargin] = 0x4024000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataSmallMargin] = 0x401C000000000000;
  v20 = qword_1008065B0;
  v21 = v5;
  if (v20 != -1)
    swift_once(&qword_1008065B0, sub_1004C9698);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_10000EFC4(v22, (uint64_t)qword_10086A1E8);
  v24 = *(_QWORD *)(v22 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v25(v19, v23, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for FontSource.useCase(_:), v16);
  v91 = v16;
  v92 = &protocol witness table for FontSource;
  v26 = sub_1000119C0(v90);
  (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v26, v19, v16);
  StaticDimension.init(_:scaledLike:)(v90, 22.0);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = 0x4040000000000000;
  v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includeRatings] = 0;
  v27 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_userRatingView;
  v28 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  *(_QWORD *)&v21[v27] = sub_100067A50(5, 3, 0, 1, 0, 0, 0);
  v29 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel;
  if (qword_100806450 != -1)
    swift_once(&qword_100806450, sub_1004C8878);
  v30 = sub_10000EFC4(v22, (uint64_t)qword_100869DC8);
  v25(v15, v30, v22);
  v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v31(v15, 0, 1, v22);
  v32 = *(void (**)(_QWORD))(v10 + 104);
  v33 = v85;
  v34 = v86;
  v84 = enum case for DirectionalTextAlignment.none(_:);
  v83 = (void (*)(char *, _QWORD, uint64_t))v32;
  v32(v86);
  v35 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v36 = objc_allocWithZone(v35);
  *(_QWORD *)&v21[v29] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v34, 0, 0);
  v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_useAdsLocale] = 0;
  v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView] = 0;
  v37 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView;
  *(_QWORD *)&v21[v37] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MetadataRibbonView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v38 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView;
  *(_QWORD *)&v21[v38] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchTagsRibbonView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton] = 0;
  v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_isDisplayingSearchAd] = 0;
  v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includesMetadataInformationInLockup] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator] = 0;
  v39 = &v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  if (qword_100806448 != -1)
    swift_once(&qword_100806448, sub_1004C8860);
  v40 = sub_10000EFC4(v22, (uint64_t)qword_100869DB0);
  v82 = v25;
  v25(v15, v40, v22);
  v81 = v31;
  v31(v15, 0, 1, v22);
  v83(v34, v84, v33);
  v41 = objc_allocWithZone(v35);
  v42 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 0, 0, v34, 0, 0);
  v43 = &OBJC_IVAR____TtC20ProductPageExtension30PosterLockupCollectionViewCell_epicHeadingArtwork;
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel] = v42;

  v89.receiver = v21;
  v89.super_class = ObjectType;
  v44 = objc_msgSendSuper2(&v89, "initWithFrame:", a1, a2, a3, a4);
  v45 = type metadata accessor for Feature(0);
  v91 = v45;
  v46 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v92 = (void *)v46;
  v47 = sub_1000119C0(v90);
  v48 = *(char **)(*(_QWORD *)(v45 - 8) + 104);
  LODWORD(ObjectType) = enum case for Feature.search_tags(_:);
  ((void (*)(_QWORD *))v48)(v47);
  v49 = (char *)v44;
  LOBYTE(v44) = isFeatureEnabled(_:)(v90);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
  if ((v44 & 1) != 0)
  {
    v86 = v48;
    v50 = qword_100806040;
    v51 = *(id *)&v49[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel];
    if (v50 != -1)
      swift_once(&qword_100806040, sub_1004C5EDC);
    v52 = sub_10000EFC4(v22, (uint64_t)qword_1008691B0);
    v53 = v82;
    v82(v15, v52, v22);
    v54 = v81;
    v81(v15, 0, 1, v22);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v15);

    v55 = qword_100806050;
    v56 = *(id *)&v49[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
    if (v55 != -1)
      swift_once(&qword_100806050, sub_1004C5F0C);
    v57 = sub_10000EFC4(v22, (uint64_t)qword_1008691E0);
    v53(v15, v57, v22);
    v54(v15, 0, 1, v22);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v15);

    v58 = OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel;
    v59 = *(id *)&v49[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel];
    static CustomTextStyle<>.metadataRibbon.getter(v59);
    if (qword_100804818 != -1)
      swift_once(&qword_100804818, sub_1000BFD4C);
    v60 = type metadata accessor for MetadataRibbonTextStyle(0);
    v61 = sub_10000EFC4(v60, (uint64_t)qword_100864DD8);
    v91 = v60;
    v92 = (void *)sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
    v62 = sub_1000119C0(v90);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v62, v61, v60);
    dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v90);

    v63 = *(void **)&v49[v58];
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v64 = v63;
    v65 = (void *)static UIColor.secondaryText.getter(v64);
    objc_msgSend(v64, "setTextColor:", v65);

    objc_msgSend(*(id *)&v49[v58], "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);
    v48 = v86;
    v43 = &OBJC_IVAR____TtC20ProductPageExtension30PosterLockupCollectionViewCell_epicHeadingArtwork;
  }
  else
  {
    v66 = *(void **)&v49[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel];
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v67 = v66;
    v68 = (void *)static UIColor.tertiaryText.getter(v67);
    objc_msgSend(v67, "setTextColor:", v68);

  }
  v69 = v43[342];
  v70 = *(void **)&v49[v69];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v71 = v70;
  v72 = (void *)static UIColor.secondaryText.getter(v71);
  objc_msgSend(v71, "setTextColor:", v72);

  objc_msgSend(*(id *)&v49[v69], "setUserInteractionEnabled:", 0);
  if (qword_100805D38 != -1)
    swift_once(&qword_100805D38, sub_10045087C);
  v73 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_10000EFC4(v73, (uint64_t)qword_1008247E0);
  v88 = v49;
  Conditional.evaluate(with:)(v90, &v88, v73);
  UILabel.alignment.setter(v90[0]);
  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_userRatingView]);
  v91 = v45;
  v92 = (void *)v46;
  v74 = sub_1000119C0(v90);
  v75 = ObjectType;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v48)(v74, ObjectType, v45);
  v76 = isFeatureEnabled(_:)(v90);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
  if ((v76 & 1) != 0)
    objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel]);
  v91 = v45;
  v92 = (void *)v46;
  v77 = sub_1000119C0(v90);
  ((void (*)(_QWORD *, uint64_t, uint64_t))v48)(v77, v75, v45);
  v78 = isFeatureEnabled(_:)(v90);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
  v79 = &OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView;
  if ((v78 & 1) == 0)
    v79 = &OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView;
  objc_msgSend(v49, "addSubview:", *(_QWORD *)&v49[*v79]);

  return v49;
}

double sub_100451558(void *a1, double a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  double v19;
  _BYTE v21[24];
  char v22[24];

  v4 = v3;
  v8 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView];
  v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v11 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels, v22, 0, 0);
  v13 = *v12;
  v14 = v11 + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metrics;
  swift_beginAccess(v14, v21, 0, 0);
  v15 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v10, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
  v17 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView]
                  + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  swift_bridgeObjectRetain(v17);
  objc_msgSend(v4, "layoutMargins", swift_bridgeObjectRetain(v13).n128_f64[0]);
  v18.n128_f64[0] = a2;
  v19 = sub_100452B44(0, 0, 0, 0, 0, 0, v13, (uint64_t)v10, v18, a3, v17, a1);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100825010);
  return v19;
}

uint64_t sub_100451720()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  char v55;
  char v56;
  _BYTE *v57;
  double v58;
  _BYTE *v59;
  int v61;
  _BYTE v62[12];
  int v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  objc_class *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[5];
  _QWORD v80[5];
  _QWORD v81[5];
  __int128 v82;
  __int128 v83;
  void *v84;
  __int128 v85;
  __int128 v86;
  void *v87;
  _QWORD v88[5];
  _QWORD v89[5];
  _QWORD v90[5];
  _QWORD v91[5];
  __int128 v92;
  __int128 v93;
  void *v94;
  _QWORD v95[5];
  _QWORD v96[5];
  __int128 v97;
  __int128 v98;
  void *v99;
  char v100[24];
  _QWORD v101[3];
  uint64_t v102;
  void *v103;
  objc_super v104;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  v4 = __chkstk_darwin(v3);
  v76 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for SmallSearchLockupLayout(0, v8);
  v73 = *(_QWORD *)(v11 - 8);
  v74 = v11;
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v72 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104.receiver = v1;
  v104.super_class = ObjectType;
  v75 = ObjectType;
  objc_msgSendSuper2(&v104, "layoutSubviews", v12);
  if (qword_100805D30 != -1)
    swift_once(&qword_100805D30, sub_1004500FC);
  v14 = sub_10000EFC4(v6, (uint64_t)qword_100868A60);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v14, v6);
  v15 = *(_BYTE **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
  v16 = type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter(v16);
  v18 = (double *)&v15[OBJC_IVAR____TtC20ProductPageExtension11OfferButton_cachedIntrinsicContentSize];
  if ((v15[OBJC_IVAR____TtC20ProductPageExtension11OfferButton_cachedIntrinsicContentSize + 16] & 1) != 0)
  {
    v19 = (uint64_t)&v15[OBJC_IVAR____TtC20ProductPageExtension11OfferButton__configuration];
    swift_beginAccess(&v15[OBJC_IVAR____TtC20ProductPageExtension11OfferButton__configuration], v100, 0, 0);
    sub_10000EF80(v19, (uint64_t)v101);
    v20 = v102;
    v21 = v103;
    sub_100010F08(v101, v102);
    v22 = dispatch thunk of OfferButtonConfiguration.size(in:)(v15, v20, v21);
    v24 = v23;
    v17 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v101);
    *v18 = v22;
    v18[1] = v24;
    *((_BYTE *)v18 + 16) = 0;
  }
  else
  {
    v22 = *v18;
    v24 = v18[1];
  }
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter(v17, v22, v24);
  v25 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
  v26 = type metadata accessor for ArtworkView(0);
  v103 = &protocol witness table for UIView;
  v102 = v26;
  v69 = v25;
  v101[0] = v25;
  v27 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel];
  v68 = v27;
  if (v27)
  {
    *((_QWORD *)&v98 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v99 = &protocol witness table for UILabel;
    *(_QWORD *)&v97 = v27;
  }
  else
  {
    v99 = 0;
    v97 = 0u;
    v98 = 0u;
  }
  v28 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel];
  v29 = type metadata accessor for DynamicTypeLabel(0);
  v30 = v29;
  v96[4] = &protocol witness table for UILabel;
  v96[3] = v29;
  v96[0] = v28;
  v31 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel];
  v95[4] = &protocol witness table for UILabel;
  v95[3] = v29;
  v66 = v31;
  v67 = v28;
  v95[0] = v31;
  v32 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel];
  v71 = v10;
  if (v32)
  {
    v94 = &protocol witness table for UILabel;
    *((_QWORD *)&v93 + 1) = v29;
    *(_QWORD *)&v92 = v32;
  }
  else
  {
    v94 = 0;
    v92 = 0u;
    v93 = 0u;
  }
  v33 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel];
  v91[3] = v29;
  v91[4] = &protocol witness table for UILabel;
  v65 = v33;
  v91[0] = v33;
  v90[3] = type metadata accessor for OfferButton();
  v90[4] = &protocol witness table for UIView;
  v70 = v15;
  v90[0] = v15;
  v34 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_userRatingView];
  v89[3] = type metadata accessor for RatingView();
  v89[4] = &protocol witness table for UIView;
  v64 = v34;
  v88[4] = &protocol witness table for UILabel;
  v89[0] = v34;
  v35 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_ratingCountLabel];
  v88[3] = v30;
  v88[0] = v35;
  v36 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_editorsChoiceView];
  if (v36)
  {
    *((_QWORD *)&v86 + 1) = type metadata accessor for EditorsChoiceView();
    v87 = &protocol witness table for UIView;
    *(_QWORD *)&v85 = v36;
  }
  else
  {
    v87 = 0;
    v85 = 0u;
    v86 = 0u;
  }
  v37 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton];
  if (v37)
  {
    *((_QWORD *)&v83 + 1) = type metadata accessor for SearchAdTransparencyButton(0);
    v84 = &protocol witness table for UIView;
    *(_QWORD *)&v82 = v37;
  }
  else
  {
    v84 = 0;
    v83 = 0u;
    v82 = 0u;
  }
  v38 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel];
  v81[3] = v30;
  v81[4] = &protocol witness table for UILabel;
  v81[0] = v38;
  v63 = v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includeRatings];
  v39 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView];
  v80[3] = type metadata accessor for MetadataRibbonView(0);
  v80[4] = &protocol witness table for UIView;
  v80[0] = v39;
  v40 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView];
  v79[3] = type metadata accessor for SearchTagsRibbonView(0);
  v79[4] = &protocol witness table for UIView;
  v79[0] = v40;
  v41 = v36;
  v42 = v37;
  v43 = v38;
  v44 = v39;
  v45 = v40;
  v46 = v69;
  v47 = v68;
  v48 = v67;
  v49 = v66;
  v50 = v32;
  v51 = v65;
  v52 = v70;
  v53 = v64;
  v54 = v35;
  v55 = MetadataRibbonView.hasContent.getter();
  v56 = sub_10042489C();
  BYTE2(v61) = v1[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_includesMetadataInformationInLockup];
  BYTE1(v61) = v56 & 1;
  LOBYTE(v61) = v55 & 1;
  v57 = v72;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)(v71, v101, &v97, v96, v95, &v92, v91, v90, v89, v88, &v85, &v82, v81, (_BYTE)v63, v80, v79, v61);
  v58 = LayoutMarginsAware<>.layoutFrame.getter(v75);
  v59 = v76;
  SmallSearchLockupLayout.placeChildren(relativeTo:in:)(v1, v58);
  (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v59, v78);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v57, v74);
}

id sub_100451CC4(uint64_t a1, double a2, double a3)
{
  char *v3;
  objc_class *ObjectType;
  void *v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton];
  if (!v8)
    goto LABEL_4;
  v9 = v8;
  objc_msgSend(v3, "convertPoint:toCoordinateSpace:", v9, a2, a3);
  if ((objc_msgSend(v9, "pointInside:withEvent:", a1) & 1) == 0)
  {

LABEL_4:
    v11.receiver = v3;
    v11.super_class = ObjectType;
    return objc_msgSendSuper2(&v11, "hitTest:withEvent:", a1, a2, a3);
  }
  return v8;
}

id sub_100451E00(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    if (qword_100805D38 != -1)
      swift_once(&qword_100805D38, sub_10045087C);
    v6 = sub_10000DAF8((uint64_t *)&unk_100808820);
    sub_10000EFC4(v6, (uint64_t)qword_1008247E0);
    v7 = v1;
    Conditional.evaluate(with:)(&v8, &v7, v6);
    return (id)UILabel.alignment.setter(v8);
  }
  return result;
}

uint64_t sub_100451FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataTextSpace;
  v2 = type metadata accessor for StaticDimension(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  return sub_100018908(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock + 8));
}

uint64_t sub_100452180()
{
  return type metadata accessor for SmallSearchLockupView(0);
}

uint64_t type metadata accessor for SmallSearchLockupView(uint64_t a1)
{
  uint64_t result;

  result = qword_100824838;
  if (!qword_100824838)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallSearchLockupView);
  return result;
}

uint64_t sub_1004521C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[18];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100662D38;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = &unk_100662D38;
    v4[8] = &unk_100662D38;
    v4[9] = &unk_100662D50;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = &unk_100662D50;
    v4[14] = &unk_100662D38;
    v4[15] = &unk_100662D38;
    v4[16] = &unk_100662D50;
    v4[17] = &unk_100662D68;
    return swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 384);
  }
  return result;
}

double sub_10045227C(void *a1, double a2, double a3)
{
  return sub_100451558(a1, a2, a3);
}

uint64_t sub_1004522A0()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1004522E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_100452338(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10045237C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_1004523D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_100452430(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100452474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_10000E720(&qword_1008248A0, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

uint64_t sub_1004524E8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  int v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  _OWORD v74[3];
  __int16 v75;
  _OWORD v76[2];
  uint64_t v77;
  __int128 v78[3];
  _QWORD v79[5];
  _QWORD v80[5];
  char v81;
  char v82;

  v10 = type metadata accessor for MetadataRibbonItemViewType(0);
  v70 = *(_QWORD *)(v10 - 8);
  v71 = v10;
  __chkstk_darwin(v10);
  v69 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v57 = *(_QWORD *)(v59 - 8);
  v12 = __chkstk_darwin(v59);
  v58 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MetadataRibbonViewLayout(0, v12);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetadataRibbonItem(0);
  result = Array.isNotEmpty.getter(a1, v18);
  if ((result & 1) == 0)
    return result;
  v56 = v17;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v45 = a1;
    else
      v45 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v45);
    v20 = result;
    if (result)
      goto LABEL_4;
LABEL_36:
    v44 = swift_bridgeObjectRelease(a1);
    v22 = _swiftEmptyArrayStorage;
LABEL_37:
    v46 = v58;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v57 + 16))(v58, a2, v59, v44);
    v47 = v56;
    MetadataRibbonViewLayout.init(metadataRibbonItemLayoutContexts:metrics:)(v22, v46);
    MetadataRibbonViewLayout.measurements(fitting:in:)(a3, a4, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v47, v14);
  }
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a1);
  if (!v20)
    goto LABEL_36;
LABEL_4:
  if (v20 >= 1)
  {
    v51 = v15;
    v52 = v14;
    v53 = a2;
    v54 = a3;
    v21 = 0;
    v68 = a1 & 0xC000000000000001;
    v67 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v62 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v61 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v60 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v55 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v50 = enum case for MetadataRibbonItemViewType.divider(_:);
    v65 = (uint64_t)v74 + 8;
    v66 = v80;
    v22 = _swiftEmptyArrayStorage;
    v49 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v63 = v20;
    v64 = a1;
    while (1)
    {
      if (v68)
      {
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, a1);
      }
      else
      {
        v23 = *(_QWORD *)(a1 + 8 * v21 + 32);
        v24 = swift_retain(v23);
      }
      v25 = v69;
      MetadataRibbonItem.viewContainerType.getter(v24);
      v26 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v25, v71);
      if (v26 == v67)
        break;
      if (v26 == v62)
      {
        v27 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v28 = (unint64_t *)&unk_100824880;
        v29 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v30 = &unk_10066B8A0;
        goto LABEL_23;
      }
      if (v26 == v61)
      {
        v27 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v28 = (unint64_t *)&unk_100822B00;
        v29 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v30 = &unk_1006540A0;
        goto LABEL_23;
      }
      if (v26 == v60)
      {
        v27 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v28 = (unint64_t *)&unk_100824890;
        v29 = type metadata accessor for MetadataRibbonStarRatingView;
        v30 = &unk_100669C90;
        goto LABEL_23;
      }
      if (v26 == v55)
      {
        v27 = type metadata accessor for MetadataRibbonTagView(0);
        v28 = (unint64_t *)&unk_100822AF8;
        v29 = type metadata accessor for MetadataRibbonTagView;
        v30 = &unk_100650268;
        goto LABEL_23;
      }
      if (v26 == v50)
      {
        v27 = type metadata accessor for MetadataRibbonBarView(0);
        v28 = (unint64_t *)&unk_100824870;
        v29 = type metadata accessor for MetadataRibbonBarView;
        v30 = &unk_10064CBC8;
        goto LABEL_23;
      }
      if (v26 == v49)
      {
        v27 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v28 = (unint64_t *)&unk_100822AF0;
        v29 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v30 = &unk_1006419B8;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
      swift_release(v23);
LABEL_28:
      if (v20 == ++v21)
      {
        v44 = swift_bridgeObjectRelease(a1);
        a2 = v53;
        a3 = v54;
        v15 = v51;
        v14 = v52;
        goto LABEL_37;
      }
    }
    v27 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
    v28 = (unint64_t *)&unk_100822B08;
    v29 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    v30 = &unk_10065C9D0;
LABEL_23:
    v31 = sub_10000E720(v28, v29, (uint64_t)v30);
    v32 = (_QWORD *)swift_allocObject(&unk_100754C78, 40, 7);
    v32[2] = v27;
    v32[3] = v31;
    v32[4] = v23;
    v33 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    v34 = swift_retain(v23);
    v35 = LayoutViewPlaceholder.init(measureWith:)(sub_100453624, v32, v34);
    MetadataRibbonItem.id.getter(v79, v35);
    v80[3] = v33;
    v80[4] = &protocol witness table for LayoutViewPlaceholder;
    v80[0] = v35;
    v36 = swift_retain(v35);
    LOBYTE(v33) = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter(v27, v31, v36) & 1;
    v81 = v33;
    LOBYTE(v32) = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v27, v31) & 1;
    v82 = (char)v32;
    sub_10007EF1C((uint64_t)v79, (uint64_t)v76);
    sub_10000EF80((uint64_t)v66, (uint64_t)v78);
    v72 = v76[0];
    v73 = v76[1];
    *(_QWORD *)&v74[0] = v77;
    sub_100010E24(v78, v65);
    LOBYTE(v75) = v33;
    HIBYTE(v75) = (_BYTE)v32;
    if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      v22 = sub_1003D99F8(0, v22[2] + 1, 1, v22);
    v20 = v63;
    a1 = v64;
    v38 = v22[2];
    v37 = v22[3];
    if (v38 >= v37 >> 1)
      v22 = sub_1003D99F8((_QWORD *)(v37 > 1), v38 + 1, 1, v22);
    v22[2] = v38 + 1;
    v39 = &v22[11 * v38];
    v40 = v73;
    *((_OWORD *)v39 + 2) = v72;
    *((_OWORD *)v39 + 3) = v40;
    v41 = v74[0];
    v42 = v74[1];
    v43 = v74[2];
    *((_WORD *)v39 + 56) = v75;
    *((_OWORD *)v39 + 5) = v42;
    *((_OWORD *)v39 + 6) = v43;
    *((_OWORD *)v39 + 4) = v41;
    swift_release(v35);
    swift_release(v23);
    sub_100010F2C((uint64_t)v79, (uint64_t *)&unk_100824860);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

double sub_100452B44(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, double a10, uint64_t a11, void *a12)
{
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD, _QWORD);
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t);
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  id v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  uint64_t v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  int v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  id v130;
  void (*v131)(_QWORD *, _QWORD, uint64_t);
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  void (*v136)(_QWORD, _QWORD);
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  _QWORD v157[5];
  _QWORD v158[5];
  _BYTE v159[40];
  _BYTE v160[32];
  uint64_t v161;
  _BYTE v162[32];
  uint64_t v163;
  _BYTE v164[32];
  uint64_t v165;
  _BYTE v166[32];
  uint64_t v167;
  _QWORD v168[5];
  _BYTE v169[32];
  uint64_t v170;
  _BYTE v171[32];
  uint64_t v172;
  _BYTE v173[40];
  _BYTE v174[40];
  _BYTE v175[32];
  uint64_t v176;
  _QWORD v177[5];
  _QWORD v178[5];
  _QWORD v179[5];
  _QWORD v180[4];
  uint64_t v181;

  v13 = a9.n128_f64[0];
  v125 = a8;
  v144 = a7;
  v141 = a5;
  v142 = a6;
  v137 = a3;
  v138 = a4;
  v135 = a1;
  v136 = a2;
  v14 = type metadata accessor for SmallSearchLockupLayout(0, a9);
  v153 = *(_QWORD *)(v14 - 8);
  v154 = v14;
  __chkstk_darwin(v14);
  v152 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v16);
  v124 = (uint64_t)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v127 = *(_QWORD *)(v18 - 8);
  v128 = v18;
  v19 = __chkstk_darwin(v18);
  v126 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for LabelPlaceholderCompatibility(0, v19);
  v133 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v139 = (char *)&v124 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for OfferButtonMetrics(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v124 - v28;
  v30 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, v27);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v147 = (char *)&v124 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v124 - v34;
  if (qword_100805D30 != -1)
    swift_once(&qword_100805D30, sub_1004500FC);
  v143 = a11;
  v36 = sub_10000EFC4(v30, (uint64_t)qword_100868A60);
  v148 = v31;
  v145 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v37 = v145(v35, v36, v30);
  v38 = UITraitCollection.prefersAccessibilityLayouts.getter(v37);
  v156 = v30;
  if ((v38 & 1) != 0)
  {
    if (qword_100804668 != -1)
      swift_once(&qword_100804668, sub_1000654B0);
    v39 = qword_10080AA60;
  }
  else
  {
    if (qword_100804670 != -1)
      swift_once(&qword_100804670, sub_10006595C);
    v39 = qword_10080AA78;
  }
  v40 = sub_10000EFC4(v22, (uint64_t)v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v40, v22);
  v150 = v23;
  v151 = v22;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v25, v22);
  v41 = objc_msgSend(a12, "preferredContentSizeCategory");
  v42 = UIContentSizeCategory.isAccessibilityCategory.getter(v41);

  v44 = OfferButtonMetrics.minimumSize.getter(v43);
  v149 = v29;
  v46 = OfferButtonMetrics.estimatedHeight.getter();
  v47 = v46 + v46;
  if ((v42 & 1) == 0)
    v47 = v46;
  v48 = SmallSearchLockupLayout.Metrics.offerButtonSize.setter(v45, v44, v47);
  v155 = v35;
  v49 = SmallSearchLockupLayout.Metrics.artworkSize.getter(v48);
  v51 = v50;
  v52 = type metadata accessor for LayoutViewPlaceholder(0);
  v53 = *(unsigned int *)(v52 + 48);
  v54 = *(unsigned __int16 *)(v52 + 52);
  v132 = v52;
  swift_allocObject(v52, v53, v54);
  v146 = LayoutViewPlaceholder.init(representing:)(v49, v51);
  v55 = objc_opt_self(UIFont);
  v56 = v136;
  swift_bridgeObjectRetain(v136);
  v130 = (id)v55;
  v57 = objc_msgSend((id)v55, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v58 = type metadata accessor for Feature(0);
  v180[3] = v58;
  v181 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v59 = v181;
  v60 = sub_1000119C0(v180);
  v61 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v131 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104);
  v129 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v131(v60, enum case for Feature.measurement_with_labelplaceholder(_:), v58);
  v62 = isFeatureEnabled(_:)(v180);
  v134 = a12;
  v63 = v62;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v180);
  v64 = v139;
  v65 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v135, v56, v57, 4, 0, 0, 0, 0, v63 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v180, v65);
  v136 = *(void (**)(_QWORD, _QWORD))(v133 + 8);
  v66 = v140;
  v136(v64, v140);
  v67 = v138;
  swift_bridgeObjectRetain(v138);
  v68 = objc_msgSend((id)v55, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v179[3] = v58;
  v179[4] = v59;
  v69 = sub_1000119C0(v179);
  v70 = v61;
  v71 = v131;
  v131(v69, v70, v58);
  LOBYTE(v55) = isFeatureEnabled(_:)(v179);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v179);
  LOBYTE(v121) = v55 & 1;
  v72 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v137, v67, v68, 4, 0, 0, 0, 0, v121);
  LabelPlaceholderCompatibility.layoutTextView.getter(v179, v72);
  v73 = (void (*)(char *, uint64_t))v136;
  v136(v64, v66);
  v74 = v142;
  swift_bridgeObjectRetain(v142);
  v75 = objc_msgSend(v130, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v178[3] = v58;
  v178[4] = v59;
  v76 = sub_1000119C0(v178);
  v71(v76, v129, v58);
  LOBYTE(v55) = isFeatureEnabled(_:)(v178);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v178);
  LOBYTE(v122) = v55 & 1;
  v77 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v141, v74, v75, 4, 0, 0, 2, 0, v122);
  LabelPlaceholderCompatibility.layoutTextView.getter(v178, v77);
  v73(v64, v66);
  v78 = v144;
  LODWORD(v142) = sub_10001C708(0, v144) & (v78 != 0);
  if ((_DWORD)v142 == 1)
  {
    v79 = v132;
    v80 = objc_allocWithZone((Class)type metadata accessor for TraitEnvironmentPlaceholder(0));
    v81 = v134;
    v82 = (void *)TraitEnvironmentPlaceholder.init(traitCollection:)(v134);
    v83 = v124;
    sub_1004535B8(v125, v124);
    v85 = v127;
    v84 = v128;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v83, 1, v128) == 1)
    {
      v86 = (uint64_t)v126;
      _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
      sub_100010F2C(v83, (uint64_t *)&unk_100825010);
    }
    else
    {
      v86 = (uint64_t)v126;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v126, v83, v84);
    }
    v87 = v82;
    sub_1004524E8(v78, v86, (uint64_t)v87, v13, a10);
    v89 = v88;
    v91 = v90;
    v93 = v92;
    v95 = v94;

    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v84);
    swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
    v144 = LayoutViewPlaceholder.init(measurements:)(v89, v91, v93, v95);
  }
  else
  {
    v79 = v132;
    swift_allocObject(v132, *(unsigned int *)(v132 + 48), *(unsigned __int16 *)(v132 + 52));
    v144 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    v81 = v134;
  }
  v96 = v143;
  LODWORD(v141) = sub_10001C708(v143, 0) & (v96 != 0);
  if ((_DWORD)v141 == 1)
  {
    sub_100425AA8(v96, v13, a10);
    v98 = v97;
    v100 = v99;
    v102 = v101;
    v104 = v103;
    swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
    v105 = LayoutViewPlaceholder.init(measurements:)(v98, v100, v102, v104);
  }
  else
  {
    swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
    v105 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  }
  v106 = v105;
  v107 = v147;
  v145(v147, (uint64_t)v155, v156);
  v177[4] = &protocol witness table for LayoutViewPlaceholder;
  v177[3] = v79;
  v108 = v146;
  v177[0] = v146;
  v176 = 0;
  memset(v175, 0, sizeof(v175));
  sub_10000EF80((uint64_t)v180, (uint64_t)v174);
  sub_10000EF80((uint64_t)v179, (uint64_t)v173);
  v172 = 0;
  memset(v171, 0, sizeof(v171));
  v170 = 0;
  memset(v169, 0, sizeof(v169));
  v109 = swift_retain(v108);
  v110 = static LayoutViewPlaceholder.withIdentityMeasurement.getter(v109);
  v168[4] = &protocol witness table for LayoutViewPlaceholder;
  v168[3] = v79;
  v168[0] = v110;
  v167 = 0;
  memset(v166, 0, sizeof(v166));
  v165 = 0;
  memset(v164, 0, sizeof(v164));
  v163 = 0;
  memset(v162, 0, sizeof(v162));
  v161 = 0;
  memset(v160, 0, sizeof(v160));
  sub_10000EF80((uint64_t)v178, (uint64_t)v159);
  v158[3] = v79;
  v158[4] = &protocol witness table for LayoutViewPlaceholder;
  v111 = v144;
  v157[4] = &protocol witness table for LayoutViewPlaceholder;
  v158[0] = v144;
  v157[3] = v79;
  v157[0] = v106;
  swift_retain(v144);
  swift_retain(v106);
  *(_WORD *)((char *)&v123 + 1) = v141;
  LOBYTE(v123) = v142;
  v112 = v152;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)(v107, v177, v175, v174, v173, v171, v169, v168, v166, v164, v162, v160, v159, 0, v158, v157, v123);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v113 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v114 = swift_allocObject(v113, 40, 7);
  *(_OWORD *)(v114 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v114 + 32) = v81;
  v115 = v81;
  v116 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v114);
  v117 = sub_10000E720((unint64_t *)&unk_100824850, (uint64_t (*)(uint64_t))&type metadata accessor for SmallSearchLockupLayout, (uint64_t)&protocol conformance descriptor for SmallSearchLockupLayout);
  v118 = v154;
  v119 = dispatch thunk of Measurable.measurements(fitting:in:)(v116, v154, v117, v13, a10);
  swift_release(v106);
  swift_release(v111);
  swift_release(v108);

  (*(void (**)(char *, uint64_t))(v153 + 8))(v112, v118);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v178);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v179);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v180);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v149, v151);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v155, v156);
  return v119;
}

uint64_t sub_1004535B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100825010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100453600()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100453624(uint64_t a1)
{
  uint64_t *v1;

  return sub_10044E440(a1, v1[2], v1[3], v1[4]);
}

uint64_t type metadata accessor for RoundedTitledButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1008248B0;
  if (!qword_1008248B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RoundedTitledButton);
  return result;
}

uint64_t sub_10045366C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[2];

  v2 = qword_100868B28;
  result = type metadata accessor for StaticDimension(319);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100662E68;
    result = swift_initClassMetadata2(a1, 0, 2, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

char *sub_1004536E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  _BYTE v24[24];

  v3 = v2;
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "buttonWithType:", 1);
  v10 = &v9[qword_1008248A8];
  swift_beginAccess(&v9[qword_1008248A8], v24, 33, 0);
  v11 = type metadata accessor for StaticDimension(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 24);
  v14 = v9;
  v13(v10, a2, v11);
  swift_endAccess(v24);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v8, a1, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  v17 = v14;
  dispatch thunk of DynamicTypeButton.fontUseCase.setter(v8);

  objc_msgSend(v17, "_setCornerRadius:", 10.0);
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  sub_100035178();
  v18 = v17;
  v19 = (void *)static UIColor.defaultButtonBackgroundColor.getter();
  objc_msgSend(v18, "_setBackgroundColor:", v19);

  objc_msgSend(v18, "_setCornerRadius:", 10.0);
  objc_msgSend(v18, "addTarget:action:forControlEvents:", v18, "didTapButton:", 64);
  v20 = v18;
  v21 = (void *)static UIColor.defaultButtonTitleColor.getter();
  objc_msgSend(v20, "setTintColor:", v21);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v20;
}

UIFontTextStyle sub_100453928()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100011980(v0, qword_100868AF0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100868AF0);
  *(_QWORD *)v1 = UIFontTextStyleSubheadline;
  *(_DWORD *)(v1 + 8) = 0;
  (*(void (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
  return UIFontTextStyleSubheadline;
}

uint64_t sub_1004539A8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100868B08);
  sub_10000EFC4(v5, (uint64_t)qword_100868B08);
  if (qword_100805D40 != -1)
    swift_once(&qword_100805D40, sub_100453928);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100868AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 43.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_100453AFC(void *a1, double a2, double a3)
{
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  double v16;
  double v17;
  char *v18;
  uint64_t v19;
  char v22[24];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for StaticDimension(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23.receiver = a1;
  v23.super_class = ObjectType;
  v15 = a1;
  objc_msgSendSuper2(&v23, "sizeThatFits:", a2, a3);
  v17 = v16;
  v18 = &v15[qword_1008248A8];
  swift_beginAccess(&v15[qword_1008248A8], v22, 0, 0);
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 16))(v14, v18, v11);
  static Dimensions.defaultRoundingRule.getter(v19);
  AnyDimension.value(in:rounded:)(v15, v10, v11, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

  return v17;
}

void sub_100453C70(char *a1, uint64_t a2, void *a3)
{
  void (*v3)(uint64_t);
  uint64_t v5;
  id v6;
  uint64_t v7;
  char *v8;

  v3 = *(void (**)(uint64_t))&a1[qword_100868B20];
  if (v3)
  {
    v5 = *(_QWORD *)&a1[qword_100868B20 + 8];
    v6 = a3;
    v8 = a1;
    v7 = sub_100018918((uint64_t)v3, v5);
    v3(v7);
    sub_100018908((uint64_t)v3, v5);

  }
}

id sub_100453D00(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v9, "measurementsWithFitting:in:", a5, a2, a3);
}

id sub_100453D64(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = qword_1008248A8;
  v12 = qword_100805D48;
  v13 = a1;
  if (v12 != -1)
    swift_once(&qword_100805D48, sub_1004539A8);
  v14 = type metadata accessor for StaticDimension(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_100868B08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(&v13[v11], v15, v14);
  v16 = &v13[qword_100868B20];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;

  v18.receiver = v13;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t sub_100453E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1008248A8;
  v2 = type metadata accessor for StaticDimension(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return sub_100018908(*(_QWORD *)(v0 + qword_100868B20), *(_QWORD *)(v0 + qword_100868B20 + 8));
}

uint64_t sub_100453EAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_1008248A8;
  v3 = type metadata accessor for StaticDimension(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return sub_100018908(*(_QWORD *)(a1 + qword_100868B20), *(_QWORD *)(a1 + qword_100868B20 + 8));
}

uint64_t sub_100453F00()
{
  return type metadata accessor for RoundedTitledButton(0);
}

void destroy for SearchLinkLayout(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 40));

}

uint64_t initializeWithCopy for SearchLinkLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  id v10;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(void **)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  v10 = v8;
  return a1;
}

uint64_t assignWithCopy for SearchLinkLayout(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_10002D2D4((_QWORD *)a1, a2);
LABEL_8:
  sub_10002D2D4((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
  v7 = (void *)*((_QWORD *)a2 + 10);
  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  return a1;
}

uint64_t assignWithTake for SearchLinkLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  if (*(_QWORD *)(a1 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  v6 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchLinkLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchLinkLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLinkLayout()
{
  return &type metadata for SearchLinkLayout;
}

BOOL sub_10045419C(uint64_t a1, uint64_t a2)
{
  return sub_1004546D8(*(_QWORD *)a1, *(_QWORD *)a2, *(double *)(a1 + 8), *(double *)(a2 + 8));
}

uint64_t sub_1004541B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD v22[5];

  v2 = v1;
  v4 = type metadata accessor for HorizontalStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalStack.init(with:)(sub_10005421C, 0, v6);
  sub_100140F50(v2, (uint64_t)&v16);
  if (*((_QWORD *)&v17 + 1))
  {
    sub_100010E24(&v16, (uint64_t)v22);
    sub_100454514(v2, (uint64_t)&v16);
    v9 = (_OWORD *)swift_allocObject(&unk_100754D98, 112, 7);
    v10 = v19;
    v9[3] = v18;
    v9[4] = v10;
    v11 = v21;
    v9[5] = v20;
    v9[6] = v11;
    v12 = v17;
    v9[1] = v16;
    v9[2] = v12;
    HorizontalStack.add(_:with:)(v22, sub_100454584, v9);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v22);
  }
  else
  {
    sub_100141080((uint64_t)&v16);
  }
  HorizontalStack.add(_:with:)(v2 + 40, 0, 0);
  a1[3] = v4;
  a1[4] = &protocol witness table for HorizontalStack;
  v13 = sub_1000119C0(a1);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v5 + 32))(v13, v8, v4);
}

double sub_10045430C(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1004541B8(v10);
  v6 = v11;
  v7 = v12;
  sub_100010F08(v10, v11);
  v8 = ceil(dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3));
  sub_1004544E0(v10);
  return v8;
}

_QWORD *sub_1004543AC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  sub_1004541B8(v13);
  v10 = v14;
  v11 = v15;
  sub_100010F08(v13, v14);
  dispatch thunk of Placeable.place(at:with:)(a1, v10, v11, floor(a2), floor(a3), a4, a5);
  return sub_1004544E0(v13);
}

uint64_t sub_100454444(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004545D0();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_10045448C()
{
  unint64_t result;

  result = qword_100824900;
  if (!qword_100824900)
  {
    result = swift_getWitnessTable(&unk_100662EB4, &type metadata for SearchLinkLayout);
    atomic_store(result, (unint64_t *)&qword_100824900);
  }
  return result;
}

uint64_t sub_1004544D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006D24C8, 1);
}

_QWORD *sub_1004544E0(_QWORD *a1)
{
  destroy for AutoAdjustingPlaceable(a1);
  return a1;
}

uint64_t sub_100454514(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchLinkLayout(a2, a1);
  return a2;
}

uint64_t sub_100454548()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 16));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100454584()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];

  v1 = *(_QWORD *)(v0 + 104);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return HorizontalStack.Properties.trailingSpacing.setter(v3);
}

unint64_t sub_1004545D0()
{
  unint64_t result;

  result = qword_100824908;
  if (!qword_100824908)
  {
    result = swift_getWitnessTable(&unk_100662EDC, &type metadata for SearchLinkLayout);
    atomic_store(result, (unint64_t *)&qword_100824908);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchLinkLayout.Metrics(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SearchLinkLayout.Metrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SearchLinkLayout.Metrics(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for SearchLinkLayout.Metrics()
{
  return &type metadata for SearchLinkLayout.Metrics;
}

BOOL sub_1004546D8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BOOL8 result;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v9 = v8;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
  return a3 == a4;
}

void sub_100454784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD v22[3];
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v1 = type metadata accessor for AutomationSemantics(0);
  v28 = *(_QWORD *)(v1 - 8);
  v29 = v1;
  __chkstk_darwin(v1);
  v27 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Artwork.Style(0, v3);
  __chkstk_darwin(v4);
  v26 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DirectionalTextAlignment(0);
  v22[2] = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SystemImage(0);
  __chkstk_darwin(v7);
  v8 = sub_10000DAF8(&qword_10080AE38);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  v31 = v11;
  __chkstk_darwin(v10);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v24 = (char *)v22 - v14;
  __chkstk_darwin(v15);
  v22[1] = (char *)v22 - v16;
  __chkstk_darwin(v17);
  v18 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v18);
  v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FE108(v33, (uint64_t)v20);
  v21 = (char *)&loc_100454A24 + *((int *)qword_100455500 + swift_getEnumCaseMultiPayload(v20, v18));
  __asm { BR              X10 }
}

id sub_100454A34()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  NSString v5;
  void *v6;

  v1 = v0[1];
  v2 = (void *)v0[2];
  swift_bridgeObjectRelease(v0[4]);
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeaderButton(0)), "init");
  dispatch thunk of Button.touchOutsideMargin.setter(10.0, 10.0, 10.0, 10.0);

  if (v1)
  {
    v5 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v1).n128_u64[0];
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, "setTitle:forState:", v5, 0, v4);

  if (v2)
  {
    objc_msgSend(v3, "setTintColor:", v2);

  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v3 = v3;
    v6 = (void *)static UIColor.appTint.getter(v3);
    objc_msgSend(v3, "setTintColor:", v6);

  }
  return v3;
}

void sub_10045552C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _QWORD v13[6];

  v13[4] = a1;
  v2 = type metadata accessor for StoreTab(0);
  v13[2] = *(_QWORD *)(v2 - 8);
  v13[3] = v2;
  __chkstk_darwin(v2);
  v13[1] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_10080AE38);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for FontUseCase(0);
  __chkstk_darwin(v6);
  v7 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FE108(v1, (uint64_t)v11);
  v12 = (char *)sub_1004556D8 + 4 * byte_100662F90[swift_getEnumCaseMultiPayload(v11, v9)];
  __asm { BR              X10 }
}

void sub_1004556D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *v0;
  v2 = v0[1];
  v5 = (void *)v0[2];
  v4 = v0[3];
  v6 = v0[4];
  v7 = *(_QWORD *)(v1 - 96);
  Hasher._combine(_:)(0);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v2);
    String.hash(into:)(v7, v3, v2);
    swift_bridgeObjectRelease_n(v2, 2);
    if (v5)
      goto LABEL_3;
LABEL_6:
    Hasher._combine(_:)(0);
    if (v6)
      goto LABEL_4;
    goto LABEL_7;
  }
  Hasher._combine(_:)(0);
  if (!v5)
    goto LABEL_6;
LABEL_3:
  Hasher._combine(_:)(1u);
  v8 = v5;
  NSObject.hash(into:)(v7);

  if (v6)
  {
LABEL_4:
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(v7, v4, v6);
    swift_bridgeObjectRelease_n(v6, 2);

    return;
  }
LABEL_7:
  Hasher._combine(_:)(0);

}

Swift::Int sub_100455C1C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10045552C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100455C5C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10045552C((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100455C94()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for NavigationAccessory()
{
  return objc_opt_self(_TtC20ProductPageExtension19NavigationAccessory);
}

uint64_t storeEnumTagSinglePayload for NavigationAccessory.Location(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100455D34 + 4 * byte_100662FA0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100455D68 + 4 * byte_100662F9B[v4]))();
}

uint64_t sub_100455D68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100455D70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100455D78);
  return result;
}

uint64_t sub_100455D84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100455D8CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100455D90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100455D98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NavigationAccessory.Location()
{
  return &type metadata for NavigationAccessory.Location;
}

_QWORD *sub_100455DB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v13);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        v10 = (void *)a2[2];
        v9 = a2[3];
        a1[2] = v10;
        a1[3] = v9;
        v11 = a2[4];
        a1[4] = v11;
        swift_bridgeObjectRetain(v8);
        v12 = v10;
        swift_bridgeObjectRetain(v11);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain(v15);
        v16 = *(int *)(sub_10000DAF8(&qword_1008249C8) + 48);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = type metadata accessor for FontUseCase(0);
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = sub_10000DAF8((uint64_t *)&unk_100808F50);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v24 = (void *)a2[2];
        v23 = a2[3];
        a1[2] = v24;
        a1[3] = v23;
        swift_bridgeObjectRetain(v22);
        v25 = v24;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v26 = *(int *)(sub_10000DAF8((uint64_t *)&unk_100812FE0) + 48);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = type metadata accessor for StoreTab(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_10000DAF8(&qword_10080AE38);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        swift_bridgeObjectRetain(v32);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        swift_bridgeObjectRetain(v33);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v34 = *a2;
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        swift_retain(v34);
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      case 7u:
        v35 = a2[1];
        *a1 = *a2;
        a1[1] = v35;
        v37 = (void *)a2[2];
        v36 = a2[3];
        a1[2] = v37;
        a1[3] = v36;
        v39 = (void *)a2[4];
        v38 = a2[5];
        a1[4] = v39;
        a1[5] = v38;
        v40 = a2[6];
        a1[6] = v40;
        swift_bridgeObjectRetain(v35);
        v41 = v37;
        v42 = v39;
        swift_bridgeObjectRetain(v40);
        swift_storeEnumTagMultiPayload(a1, a3, 7);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1004560CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

      v3 = *(_QWORD *)(a1 + 32);
      goto LABEL_11;
    case 1u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      v4 = a1 + *(int *)(sub_10000DAF8(&qword_1008249C8) + 48);
      v5 = type metadata accessor for FontUseCase(0);
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

      return;
    case 3u:
      v4 = a1 + *(int *)(sub_10000DAF8((uint64_t *)&unk_100812FE0) + 48);
      v5 = type metadata accessor for StoreTab(0);
LABEL_7:
      v6 = v5;
      v7 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
      return;
    case 4u:
    case 5u:
      v3 = *(_QWORD *)(a1 + 8);
      goto LABEL_11;
    case 6u:
      swift_release();
      return;
    case 7u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

      v3 = *(_QWORD *)(a1 + 48);
LABEL_11:
      swift_bridgeObjectRelease(v3);
      break;
    default:
      return;
  }
}

_QWORD *sub_100456214(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v8 = (void *)a2[2];
      v7 = a2[3];
      a1[2] = v8;
      a1[3] = v7;
      v9 = a2[4];
      a1[4] = v9;
      swift_bridgeObjectRetain(v6);
      v10 = v8;
      swift_bridgeObjectRetain(v9);
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_17;
    case 1u:
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      swift_bridgeObjectRetain(v14);
      v15 = *(int *)(sub_10000DAF8(&qword_1008249C8) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for FontUseCase(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_10000DAF8((uint64_t *)&unk_100808F50);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v11 = a1;
      v12 = a3;
      v13 = 1;
      goto LABEL_17;
    case 2u:
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      v23 = (void *)a2[2];
      v22 = a2[3];
      a1[2] = v23;
      a1[3] = v22;
      swift_bridgeObjectRetain(v21);
      v24 = v23;
      v11 = a1;
      v12 = a3;
      v13 = 2;
      goto LABEL_17;
    case 3u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v25 = *(int *)(sub_10000DAF8((uint64_t *)&unk_100812FE0) + 48);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for StoreTab(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_10000DAF8(&qword_10080AE38);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v11 = a1;
      v12 = a3;
      v13 = 3;
      goto LABEL_17;
    case 4u:
      v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      swift_bridgeObjectRetain(v31);
      v11 = a1;
      v12 = a3;
      v13 = 4;
      goto LABEL_17;
    case 5u:
      v32 = a2[1];
      *a1 = *a2;
      a1[1] = v32;
      swift_bridgeObjectRetain(v32);
      v11 = a1;
      v12 = a3;
      v13 = 5;
      goto LABEL_17;
    case 6u:
      v33 = *a2;
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      swift_retain(v33);
      v11 = a1;
      v12 = a3;
      v13 = 6;
      goto LABEL_17;
    case 7u:
      v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      v36 = (void *)a2[2];
      v35 = a2[3];
      a1[2] = v36;
      a1[3] = v35;
      v38 = (void *)a2[4];
      v37 = a2[5];
      a1[4] = v38;
      a1[5] = v37;
      v39 = a2[6];
      a1[6] = v39;
      swift_bridgeObjectRetain(v34);
      v40 = v36;
      v41 = v38;
      swift_bridgeObjectRetain(v39);
      v11 = a1;
      v12 = a3;
      v13 = 7;
LABEL_17:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1004564E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;

  if (a1 != a2)
  {
    sub_10019ADA8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        *a1 = *a2;
        v6 = a2[1];
        a1[1] = v6;
        v7 = (void *)a2[2];
        a1[2] = v7;
        a1[3] = a2[3];
        v8 = a2[4];
        a1[4] = v8;
        swift_bridgeObjectRetain(v6);
        v9 = v7;
        swift_bridgeObjectRetain(v8);
        v10 = a1;
        v11 = a3;
        v12 = 0;
        goto LABEL_18;
      case 1u:
        *a1 = *a2;
        v13 = a2[1];
        a1[1] = v13;
        swift_bridgeObjectRetain(v13);
        v14 = *(int *)(sub_10000DAF8(&qword_1008249C8) + 48);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = type metadata accessor for FontUseCase(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = sub_10000DAF8((uint64_t *)&unk_100808F50);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        v10 = a1;
        v11 = a3;
        v12 = 1;
        goto LABEL_18;
      case 2u:
        *a1 = *a2;
        v20 = a2[1];
        a1[1] = v20;
        v21 = (void *)a2[2];
        a1[2] = v21;
        a1[3] = a2[3];
        swift_bridgeObjectRetain(v20);
        v22 = v21;
        v10 = a1;
        v11 = a3;
        v12 = 2;
        goto LABEL_18;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v23 = *(int *)(sub_10000DAF8((uint64_t *)&unk_100812FE0) + 48);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for StoreTab(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10000DAF8(&qword_10080AE38);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v10 = a1;
        v11 = a3;
        v12 = 3;
        goto LABEL_18;
      case 4u:
        *a1 = *a2;
        v29 = a2[1];
        a1[1] = v29;
        swift_bridgeObjectRetain(v29);
        v10 = a1;
        v11 = a3;
        v12 = 4;
        goto LABEL_18;
      case 5u:
        *a1 = *a2;
        v30 = a2[1];
        a1[1] = v30;
        swift_bridgeObjectRetain(v30);
        v10 = a1;
        v11 = a3;
        v12 = 5;
        goto LABEL_18;
      case 6u:
        v31 = *a2;
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        swift_retain(v31);
        v10 = a1;
        v11 = a3;
        v12 = 6;
        goto LABEL_18;
      case 7u:
        *a1 = *a2;
        v32 = a2[1];
        a1[1] = v32;
        v33 = (void *)a2[2];
        a1[2] = v33;
        a1[3] = a2[3];
        v34 = (void *)a2[4];
        a1[4] = v34;
        a1[5] = a2[5];
        v35 = a2[6];
        a1[6] = v35;
        swift_bridgeObjectRetain(v32);
        v36 = v33;
        v37 = v34;
        swift_bridgeObjectRetain(v35);
        v10 = a1;
        v11 = a3;
        v12 = 7;
LABEL_18:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for Accessory(uint64_t a1)
{
  uint64_t result;

  result = qword_100824A40;
  if (!qword_100824A40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Accessory);
  return result;
}

_BYTE *sub_100456858(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    *a1 = *a2;
    v13 = *(int *)(sub_10000DAF8((uint64_t *)&unk_100812FE0) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for StoreTab(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10000DAF8(&qword_10080AE38);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = a1;
    v20 = a3;
    v21 = 3;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(sub_10000DAF8(&qword_1008249C8) + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for FontUseCase(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_10000DAF8((uint64_t *)&unk_100808F50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = a1;
    v20 = a3;
    v21 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_100456A14(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_10019ADA8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      v13 = *(int *)(sub_10000DAF8((uint64_t *)&unk_100812FE0) + 48);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for StoreTab(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10000DAF8(&qword_10080AE38);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v19 = a1;
      v20 = a3;
      v21 = 3;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(int *)(sub_10000DAF8(&qword_1008249C8) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for FontUseCase(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_10000DAF8((uint64_t *)&unk_100808F50);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v19 = a1;
      v20 = a3;
      v21 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v19, v20, v21);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_100456BE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _BYTE v7[32];
  _QWORD v8[8];

  v8[0] = "(";
  sub_1000780CC(319, (unint64_t *)&unk_100824A50, (uint64_t (*)(uint64_t))&type metadata accessor for FontUseCase);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v7, &unk_100663050, *(_QWORD *)(v2 - 8) + 64);
    v8[1] = v7;
    v8[2] = &unk_100663068;
    sub_1000780CC(319, (unint64_t *)&qword_10080AE10, (uint64_t (*)(uint64_t))&type metadata accessor for StoreTab);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, &unk_100663080, *(_QWORD *)(v4 - 8) + 64);
      v8[3] = v6;
      v8[4] = &unk_100663050;
      v8[5] = &unk_100663050;
      v8[6] = &unk_100663098;
      v8[7] = &unk_1006630B0;
      swift_initEnumMetadataMultiPayload(a1, 256, 8, v8);
    }
  }
}

uint64_t sub_100456CE4()
{
  return sub_10000E720(&qword_100824A80, type metadata accessor for Accessory, (uint64_t)&unk_100663108);
}

unint64_t sub_100456D14()
{
  unint64_t result;

  result = qword_100824A88;
  if (!qword_100824A88)
  {
    result = swift_getWitnessTable(&unk_100663170, &type metadata for NavigationAccessory.Location);
    atomic_store(result, (unint64_t *)&qword_100824A88);
  }
  return result;
}

void sub_100456D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;

  v49 = a1;
  v50 = (char *)a2;
  v41 = type metadata accessor for StoreTab(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v34[1] = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10000DAF8(&qword_100824A90);
  __chkstk_darwin(v38);
  v40 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_10080AE38);
  __chkstk_darwin(v4);
  v34[2] = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v47 = (char *)v34 - v7;
  __chkstk_darwin(v8);
  v46 = (char *)v34 - v9;
  v10 = type metadata accessor for FontUseCase(0);
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  __chkstk_darwin(v10);
  v34[0] = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000DAF8(&qword_100824A98);
  __chkstk_darwin(v35);
  v43 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v42 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v44 = (char *)v34 - v16;
  __chkstk_darwin(v17);
  v45 = (char *)v34 - v18;
  v19 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v48 = (char *)v34 - v21;
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  v28 = sub_10000DAF8(&qword_100824AA0);
  __chkstk_darwin(v28);
  v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (uint64_t)&v30[*(int *)(v31 + 48)];
  sub_1001FE108(v49, (uint64_t)v30);
  v49 = v32;
  sub_1001FE108((uint64_t)v50, v32);
  v50 = v30;
  v33 = (char *)sub_10045710C + 4 * byte_100662FC5[swift_getEnumCaseMultiPayload(v30, v19)];
  __asm { BR              X10 }
}

uint64_t sub_10045710C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  sub_1001FE108(*(_QWORD *)(v2 - 128), (uint64_t)v1);
  v4 = *v1;
  v3 = v1[1];
  v6 = (void *)v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v8 = *(_QWORD **)(v2 - 136);
  if (swift_getEnumCaseMultiPayload(v8, v0))
  {
    swift_bridgeObjectRelease(v7);

    swift_bridgeObjectRelease(v3);
    sub_100010F2C(*(_QWORD *)(v2 - 128), &qword_100824AA0);
    return 0;
  }
  v9 = v8[1];
  v10 = (void *)v8[2];
  v12 = v8[3];
  v11 = v8[4];
  if (!v3)
  {
    if (!v9)
      goto LABEL_14;
    v3 = v8[1];
    goto LABEL_10;
  }
  if (!v9)
  {
LABEL_10:
    swift_bridgeObjectRelease(v3);
    goto LABEL_11;
  }
  if (v4 == *v8 && v3 == v9)
  {
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v9);
    goto LABEL_14;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v3, *v8, v8[1], 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v9);
  if ((v13 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v11);

    goto LABEL_12;
  }
LABEL_14:
  if (v6)
  {
    if (v10)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v14 = v10;
      v15 = v6;
      v16 = static NSObject.== infix(_:_:)(v15, v14);

      if ((v16 & 1) == 0)
      {

        swift_bridgeObjectRelease(v11);
LABEL_20:
        swift_bridgeObjectRelease(v7);
        goto LABEL_21;
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRelease(v11);
LABEL_12:
    swift_bridgeObjectRelease(v7);

LABEL_21:
    v17 = *(_QWORD *)(v2 - 128);
LABEL_34:
    sub_10019ADA8(v17);
    return 0;
  }
  if (v10)
  {
    swift_bridgeObjectRelease(v11);

    goto LABEL_20;
  }
LABEL_22:
  if (!v7)
  {

    v18 = *(_QWORD *)(v2 - 128);
    if (!v11)
      goto LABEL_32;
    swift_bridgeObjectRelease(v11);
LABEL_33:
    v17 = v18;
    goto LABEL_34;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease(v7);

    v18 = *(_QWORD *)(v2 - 128);
    goto LABEL_33;
  }
  if (v5 != v12 || v7 != v11)
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v12, v11, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);

    v18 = *(_QWORD *)(v2 - 128);
    if ((v20 & 1) != 0)
      goto LABEL_32;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);

  v18 = *(_QWORD *)(v2 - 128);
LABEL_32:
  sub_10019ADA8(v18);
  return 1;
}

double sub_100457E08(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int EnumCaseMultiPayload;
  void *v15;
  NSString v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  _QWORD v27[4];

  v2 = v1;
  v3 = type metadata accessor for OSLogger(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SystemImage(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FE108(v2, (uint64_t)v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if (EnumCaseMultiPayload == 10)
    goto LABEL_5;
  if (EnumCaseMultiPayload == 9)
  {
    v15 = (void *)objc_opt_self(UIImage);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "kitImageNamed:", v16);

    if (v17)
    {
LABEL_6:
      objc_msgSend(v17, "size");
      v19 = v18;

      return v19;
    }
    __break(1u);
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for SystemImage.chevronForward(_:), v7);
    v17 = (id)static SystemImage.load(_:with:)(v10, 0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_6;
  }
  if (qword_100806958 != -1)
    swift_once(&qword_100806958, sub_1005032EC);
  v20 = sub_10000EFC4(v3, (uint64_t)qword_10086AB08);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v3);
  v21 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v22 = type metadata accessor for LogMessage(0);
  v23 = swift_allocObject(v21, ((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) | 7);
  *(_OWORD *)(v23 + 16) = xmmword_1006405F0;
  LogMessage.init(stringLiteral:)(0x726F737365636341, 0xE900000000000079);
  v27[3] = v11;
  v24 = sub_1000119C0(v27);
  sub_1001FE108(v2, (uint64_t)v24);
  static LogMessage.safe(_:)(v27);
  sub_100010F2C((uint64_t)v27, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0xD000000000000020, 0x80000001006A5510);
  Logger.debug(_:)(v23, v3, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v23);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v25);
  sub_10019ADA8((uint64_t)v13);
  return 0.0;
}

uint64_t sub_100458144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = type metadata accessor for LegacyAppState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AdamId(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((AppEvent.hideLockupWhenNotInstalled.getter(v8) & 1) == 0)
  {
    v24 = 1;
    return v24 & 1;
  }
  v29 = v2;
  v11 = *(_QWORD *)(a1 + qword_10086B3C8);
  if (v11)
  {
    v12 = *(_QWORD *)(a1 + qword_10086B3C8 + 8);
    ObjectType = swift_getObjectType();
    v14 = swift_unknownObjectRetain(v11);
    v15 = AppEvent.lockup.getter(v14);
    Lockup.adamId.getter();
    swift_release(v15);
    v16 = dispatch thunk of AppStateController.stateMachine(forApp:)(v10, ObjectType, v12);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v19 = swift_getObjectType();
    v20 = AppEvent.lockup.getter(v19);
    v21 = Lockup.includeBetaApps.getter(v20);
    v22 = swift_release(v20);
    v23 = dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)(v21 & 1, v19, v18, v22);
    v24 = LegacyAppState.isLocalApplication.getter(v23);
    swift_unknownObjectRelease(v11);
    v25 = swift_unknownObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v29, v25);
    return v24 & 1;
  }
  v27 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v27, v27);
  __break(1u);
  return result;
}

id sub_100458314(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t *v9;
  __n128 v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  v9 = (uint64_t *)&v4[qword_100824AC8];
  *v9 = a3;
  v9[1] = a4;
  v10 = swift_unknownObjectWeakInit(&v4[qword_100810130], 0);
  *(_QWORD *)&v4[qword_100810140] = 0;
  *(_QWORD *)&v4[qword_100810148] = 0;
  swift_unknownObjectWeakAssign(v10);
  *(_QWORD *)&v4[qword_100810138] = a2;
  sub_100018918(a3, a4);
  swift_retain(a2);
  v18.receiver = v4;
  v18.super_class = (Class)sub_10000DAF8(&qword_100811558);
  v11 = objc_msgSendSuper2(&v18, "init");
  objc_msgSend(a1, "setDefinesPresentationContext:", 1);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v13 = type metadata accessor for OSLogger(0, v12);
  sub_10000EFC4(v13, (uint64_t)qword_10086AB38);
  v14 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v15 = type metadata accessor for LogMessage(0);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100640720;
  LogMessage.init(stringLiteral:)(0xD000000000000035, 0x80000001006A55A0);
  Logger.error(_:)(v16, v13, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v16);
  sub_100018908(a3, a4);

  swift_release();
  return v11;
}

void *sub_1004584FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  void *result;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t);
  int v24;
  uint64_t (*v28)(uint64_t, __n128);
  uint64_t v29;
  __n128 v30;
  char v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v43 = a4;
  v44 = a5;
  v42 = a3;
  v8 = type metadata accessor for FlowPresentationContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v40 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v40 = a2;
  v19(v14, a2, v8, v16);
  v41 = v5;
  v45 = v5 + qword_100810130;
  result = (void *)swift_unknownObjectWeakLoadStrong(v5 + qword_100810130);
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  v21 = result;
  v22 = objc_msgSend(result, "traitCollection");

  sub_10010F7D4((uint64_t)v18);
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v14, v8);
  ((void (*)(char *, char *, uint64_t))v19)(v11, v18, v8);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v24 == enum case for FlowPresentationContext.presentModal(_:)
    || v24 == enum case for FlowPresentationContext.presentModalFormSheet(_:)
    || v24 == enum case for FlowPresentationContext.presentModalPageSheet(_:)
    || v24 == enum case for FlowPresentationContext.presentModalFullScreen(_:))
  {
    v28 = *(uint64_t (**)(uint64_t, __n128))(v41 + qword_100824AC8);
    v35 = a1;
    if (!v28
      || (v29 = *(_QWORD *)(v41 + qword_100824AC8 + 8),
          v30 = swift_retain(v29),
          v31 = v28(a1, v30),
          sub_100018908((uint64_t)v28, v29),
          (v31 & 1) != 0))
    {
      sub_1002552BC(a1, v42, v43, v44);
      v33 = v32;
      result = (void *)swift_unknownObjectWeakLoadStrong(v45);
      if (result)
      {
        v34 = result;
        objc_msgSend(result, "presentViewController:animated:completion:", v33, 1, 0);

        return (void *)((uint64_t (*)(char *, uint64_t))v23)(v18, v8);
      }
      goto LABEL_26;
    }
  }
  else
  {
    v23(v11, v8);
    v35 = a1;
  }
  result = (void *)swift_unknownObjectWeakLoadStrong(v45);
  if (!result)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  v36 = result;
  v37 = objc_msgSend(result, "nextResponder");

  if (v37)
  {
    sub_1000E1E3C((uint64_t)&v46);

    v38 = *((_QWORD *)&v47 + 1);
    if (*((_QWORD *)&v47 + 1))
    {
      v39 = v48;
      sub_100010F08(&v46, *((uint64_t *)&v47 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v40, v42, v43, v44, v38, v39);
      v23(v18, v8);
      return (void *)_s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v46);
    }
  }
  else
  {
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
  }
  v23(v18, v8);
  return (void *)sub_1000A06B8((uint64_t)&v46);
}

uint64_t sub_100458810()
{
  uint64_t v0;

  return sub_100018908(*(_QWORD *)(v0 + qword_100824AC8), *(_QWORD *)(v0 + qword_100824AC8 + 8));
}

uint64_t sub_100458824(uint64_t a1)
{
  return sub_100018908(*(_QWORD *)(a1 + qword_100824AC8), *(_QWORD *)(a1 + qword_100824AC8 + 8));
}

uint64_t type metadata accessor for PresentingFlowController(uint64_t a1)
{
  uint64_t result;

  result = qword_100824AF8;
  if (!qword_100824AF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PresentingFlowController);
  return result;
}

uint64_t sub_100458874(uint64_t a1)
{
  void *v2;

  v2 = &unk_1006631E0;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 280);
}

uint64_t sub_1004588B4()
{
  return type metadata accessor for PresentingFlowController(0);
}

id sub_1004588BC(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  void *v9;
  id v10;

  v5 = v4;
  if ((a2 & 1) != 0)
  {
    sub_10031BF28(*(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingImageView], a2 & 1, a3, a4);
  }
  else
  {
    objc_msgSend(a1, "frame");
    objc_msgSend(v4, "setFrame:");
    sub_10031BF28(*(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingImageView], 0, a3, a4);
    v9 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingVideoView];
    v10 = *(id *)&a1[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingVideoView];
    objc_msgSend(v10, "frame");
    objc_msgSend(v9, "setFrame:");
    objc_msgSend(v9, "setHidden:", objc_msgSend(v10, "isHidden"));

  }
  return objc_msgSend(v5, "setHidden:", objc_msgSend(a1, "isHidden"));
}

char *sub_1004589D8(char *a1)
{
  char *v1;
  objc_class *ObjectType;
  void *v4;
  objc_class *v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  objc_super v18;
  _OWORD v19[8];
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_sourceView] = a1;
  v4 = *(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView];
  v5 = (objc_class *)type metadata accessor for RevealingImageMirrorView(0);
  v20.receiver = objc_allocWithZone(v5);
  v20.super_class = v5;
  v6 = v1;
  v7 = a1;
  v8 = v4;
  v9 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  if (qword_100804588 != -1)
    swift_once(&qword_100804588, sub_10002AE28);
  v19[0] = *(_OWORD *)byte_100864870;
  v19[1] = *(_OWORD *)&byte_100864870[16];
  v19[2] = *(_OWORD *)&byte_100864870[32];
  v19[3] = *(_OWORD *)&byte_100864870[48];
  v19[4] = *(_OWORD *)&byte_100864870[64];
  v19[5] = *(_OWORD *)&byte_100864870[80];
  v19[6] = *(_OWORD *)&byte_100864870[96];
  v19[7] = *(_OWORD *)&byte_100864870[112];
  objc_msgSend(v10, "setTransform:", v19);

  sub_10031B14C(v9, (uint64_t)&off_1007372A0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingImageView] = v9;
  v11 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView];
  v12 = objc_allocWithZone((Class)type metadata accessor for RevealingVideoMirrorView(0));
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingVideoView] = sub_1005A0FCC((char *)v11);

  v18.receiver = v6;
  v18.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingImageView];
  v15 = v13;
  objc_msgSend(v15, "addSubview:", v14);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingVideoView]);
  v16 = v15;
  objc_msgSend(v16, "setClipsToBounds:", 1);

  return v16;
}

id sub_100458C40()
{
  char *v0;
  void *v1;
  double MidX;
  uint64_t v3;
  double v4;
  double MinX;
  double Width;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingImageView];
  objc_msgSend(v0, "bounds");
  MidX = CGRectGetMidX(v14);
  v3 = OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_sourceView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_sourceView], "frame");
  v4 = MidX - CGRectGetWidth(v15) * 0.5;
  objc_msgSend(v0, "bounds");
  MinX = CGRectGetMinX(v16);
  objc_msgSend(*(id *)&v0[v3], "frame");
  Width = CGRectGetWidth(v17);
  objc_msgSend(*(id *)&v0[v3], "frame");
  objc_msgSend(v1, "setFrame:", v4, MinX, Width, CGRectGetHeight(v18));
  v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension24StoryCardMediaMirrorView_revealingVideoView];
  objc_msgSend(v0, "bounds");
  v8 = CGRectGetMidX(v19);
  objc_msgSend(*(id *)&v0[v3], "frame");
  v9 = v8 - CGRectGetWidth(v20) * 0.5;
  objc_msgSend(v0, "bounds");
  v10 = CGRectGetMinX(v21);
  objc_msgSend(*(id *)&v0[v3], "frame");
  v11 = CGRectGetWidth(v22);
  objc_msgSend(*(id *)&v0[v3], "frame");
  return objc_msgSend(v7, "setFrame:", v9, v10, v11, CGRectGetHeight(v23));
}

uint64_t type metadata accessor for StoryCardMediaMirrorView()
{
  return objc_opt_self(_TtC20ProductPageExtension24StoryCardMediaMirrorView);
}

uint64_t sub_100458E94(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64x2_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v38;
  double left;
  double right;
  double bottom;
  char *v42;
  uint64_t v43;
  __int128 v44;
  __n128 v45;
  __n128 v46;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  __n128 v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  double v76;
  double v77;
  double v78;
  __int128 v79;
  __n128 v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  int64x2_t v85;
  char *v86;
  double v87;
  double v88;
  double top;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(int64x2_t *, uint64_t, uint64_t);
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  _QWORD v107[2];

  v97 = a1;
  v95 = sub_10000DAF8(&qword_100824CA0);
  v92 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v91 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_100808208);
  v5 = __chkstk_darwin(v4);
  v102 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for PageGrid.HorizontalMargins(0, v5);
  v7 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v9 = (int64x2_t *)((char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v10);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v83 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v83 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v83 - v20;
  if ((a2 & 1) != 0)
    v22 = 1.1;
  else
    v22 = 1.0;
  v23 = sub_10000DAF8(&qword_100808218);
  v24 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 32) & ~v26;
  v101 = v25;
  v28 = swift_allocObject(v23, v27 + 6 * v25, v26 | 7);
  *(_OWORD *)(v28 + 16) = xmmword_100640730;
  v90 = v28;
  v99 = v28 + v27;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v29 = xmmword_100868E30;
  v105 = *(_QWORD *)&v22;
  v30 = sub_10002128C();
  v31 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4020000000000000;
  v103 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v31);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v32);
  __asm { FMOV            V0.2D, #16.0 }
  *v9 = _Q0;
  v38 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v100 = *(void (**)(int64x2_t *, uint64_t, uint64_t))(v7 + 104);
  v100(v9, enum case for PageGrid.HorizontalMargins.absolute(_:), v98);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v105) = 0;
  v42 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v43 = v99;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v21, v42, v12, v18, v15, v9, *(double *)&v29, *((double *)&v29 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v96 = v43 + v101;
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v44 = xmmword_100868E40;
  v105 = *(_QWORD *)&v22;
  v45 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4024000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v45);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v46);
  __asm { FMOV            V0.2D, #20.0 }
  *v9 = _Q0;
  v48 = v18;
  v49 = v98;
  v100(v9, v38, v98);
  LOBYTE(v105) = 0;
  v50 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v94 = v21;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v21, v50, v12, v48, v15, v9, *(double *)&v44, *((double *)&v44 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v93 = v99 + 2 * v101;
  v51 = v49;
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v52 = xmmword_100868E50;
  v105 = *(_QWORD *)&v22;
  v53 = v94;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4034000000000000;
  v54 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v54);
  v85 = vdupq_n_s64(0x4041000000000000uLL);
  *v9 = v85;
  v100(v9, v38, v51);
  LOBYTE(v105) = 0;
  LODWORD(v96) = v38;
  v55 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  top = UIEdgeInsetsZero.top;
  v88 = left;
  v87 = bottom;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v53, v55, v12, v48, v15, v9, *(double *)&v52, *((double *)&v52 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v84 = v99 + 3 * v101;
  v56 = v51;
  v86 = v12;
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v57 = xmmword_100868E90;
  v107[0] = 0x4000000000000000;
  v105 = 0x3FF8000000000000;
  v106 = 0;
  v103 = *(_QWORD *)&v22;
  v104 = 0;
  v58 = sub_100459A40();
  v59 = v91;
  v93 = v58;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v107, &v105, &v103, &type metadata for CGFloat);
  v60 = v95;
  AccessibilityConditional.value(with:)(&v105, v97, v95);
  v92 = *(_QWORD *)(v92 + 8);
  ((void (*)(char *, uint64_t))v92)(v59, v60);
  v103 = v105;
  v61 = v94;
  PageGrid.DirectionalValue.init(_:)(&v103, &type metadata for CGFloat, v30);
  v105 = 0x4034000000000000;
  v62 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v62);
  *v9 = v85;
  v100(v9, v96, v56);
  v63 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  LOBYTE(v105) = 0;
  v70 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  v71 = v86;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v61, v70, v71, v48, v15, v9, *(double *)&v57, *((double *)&v57 + 1), v63, v65, v67, v69);
  v84 = v99 + 4 * v101;
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v72 = xmmword_100868EA0;
  v107[0] = 0x4000000000000000;
  v105 = 0x3FF8000000000000;
  v106 = 0;
  v103 = *(_QWORD *)&v22;
  v104 = 0;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v107, &v105, &v103, &type metadata for CGFloat);
  AccessibilityConditional.value(with:)(&v105, v97, v60);
  v73 = v95;
  ((void (*)(char *, uint64_t))v92)(v59, v95);
  v103 = v105;
  PageGrid.DirectionalValue.init(_:)(&v103, &type metadata for CGFloat, v30);
  v105 = 0x4038000000000000;
  v74 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v74);
  v85 = vdupq_n_s64(0x404A000000000000uLL);
  *v9 = v85;
  v100(v9, v96, v98);
  LOBYTE(v105) = 0;
  v75 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v76 = top;
  v77 = v88;
  v78 = v87;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v61, v75, v71, v48, v15, v9, *(double *)&v72, *((double *)&v72 + 1), top, v88, v87, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v79 = xmmword_100868EB0;
  v107[0] = 0x4004000000000000;
  v101 = v99 + 5 * v101;
  v105 = 0x4000000000000000;
  v106 = 0;
  v103 = 0x3FF8000000000000;
  v104 = 0;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v107, &v105, &v103, &type metadata for CGFloat);
  AccessibilityConditional.value(with:)(&v105, v97, v73);
  ((void (*)(char *, uint64_t))v92)(v59, v73);
  v103 = v105;
  PageGrid.DirectionalValue.init(_:)(&v103, &type metadata for CGFloat, v30);
  v105 = 0x4038000000000000;
  v80 = PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  v105 = 0x4030000000000000;
  v103 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v105, &v103, &type metadata for CGFloat, v30, v80);
  *v9 = v85;
  v100(v9, v96, v98);
  LOBYTE(v105) = 0;
  v81 = v102;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for Bool, &protocol witness table for Bool);
  v105 = 0;
  PageGrid.DirectionalValue.init(_:)(&v105, &type metadata for CGFloat, v30);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v61, v81, v71, v48, v15, v9, *(double *)&v79, *((double *)&v79 + 1), v76, v77, v78, right);
  return v90;
}

unint64_t sub_100459A40()
{
  unint64_t result;

  result = qword_100824CA8[0];
  if (!qword_100824CA8[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, qword_100824CA8);
  }
  return result;
}

uint64_t sub_100459A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v35;
  double left;
  double bottom;
  double right;
  char *v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  char *v44;
  __int128 v45;
  __n128 v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  __n128 v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  char *v60;
  __int128 v61;
  __n128 v62;
  char *v63;
  double v64;
  double v65;
  __int128 v66;
  __n128 v67;
  _QWORD v69[2];
  int64x2_t v70;
  unint64_t v71;
  uint64_t v72;
  double v73;
  double top;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int64x2_t v78;
  unsigned int v79;
  void (*v80)(int64x2_t *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  _QWORD v89[2];

  v78.i64[0] = a1;
  v76 = sub_10000DAF8(&qword_100824CA0);
  v72 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = (char *)v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DAF8(&qword_100808208);
  v3 = __chkstk_darwin(v2);
  v83 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for PageGrid.HorizontalMargins(0, v3);
  v5 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v7 = (int64x2_t *)((char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v8);
  v10 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v69 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v69 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v69 - v18;
  v20 = sub_10000DAF8(&qword_100808218);
  v21 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v82 = v22;
  v25 = swift_allocObject(v20, v24 + 6 * v22, v23 | 7);
  *(_OWORD *)(v25 + 16) = xmmword_100640730;
  v77 = v25;
  v81 = v25 + v24;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v26 = xmmword_100868E30;
  v87 = 0x3FF0000000000000;
  v27 = sub_10002128C();
  v28 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4020000000000000;
  v85 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v28);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v35 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v80 = *(void (**)(int64x2_t *, uint64_t, uint64_t))(v5 + 104);
  v80(v7, enum case for PageGrid.HorizontalMargins.absolute(_:), v84);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v87) = 0;
  v39 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v39, v10, v16, v13, v7, *(double *)&v26, *((double *)&v26 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v40 = xmmword_100868E40;
  v87 = 0x3FF0000000000000;
  v41 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4024000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v41);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v7 = _Q0;
  v80(v7, v35, v84);
  LOBYTE(v87) = 0;
  v44 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v44, v10, v16, v13, v7, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v45 = xmmword_100868E50;
  v87 = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v46);
  v70 = vdupq_n_s64(0x4041000000000000uLL);
  *v7 = v70;
  v80(v7, v35, v84);
  LOBYTE(v87) = 0;
  v79 = v35;
  v47 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  top = UIEdgeInsetsZero.top;
  v73 = left;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v47, v10, v16, v13, v7, *(double *)&v45, *((double *)&v45 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v69[1] = v81 + 3 * v82;
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v48 = xmmword_100868E90;
  v89[0] = 0x4000000000000000;
  v87 = 0;
  v88 = 1;
  v85 = 0x3FF0000000000000;
  v86 = 0;
  v49 = sub_100459A40();
  v50 = v75;
  v71 = v49;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v89, &v87, &v85, &type metadata for CGFloat);
  v51 = v76;
  AccessibilityConditional.value(with:)(&v87, v78.i64[0], v76);
  v72 = *(_QWORD *)(v72 + 8);
  ((void (*)(char *, uint64_t))v72)(v50, v51);
  v85 = v87;
  PageGrid.DirectionalValue.init(_:)(&v85, &type metadata for CGFloat, v27);
  v87 = 0x4034000000000000;
  v52 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v52);
  *v7 = v70;
  v80(v7, v79, v84);
  v53 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  LOBYTE(v87) = 0;
  v60 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v60, v10, v16, v13, v7, *(double *)&v48, *((double *)&v48 + 1), v53, v55, v57, v59);
  v70.i64[0] = v81 + 4 * v82;
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v61 = xmmword_100868EA0;
  v89[0] = 0x4000000000000000;
  v87 = 0;
  v88 = 1;
  v85 = 0x3FF0000000000000;
  v86 = 0;
  AccessibilityConditional.init(value:ax1To3Value:ax4To5Value:)(v89, &v87, &v85, &type metadata for CGFloat);
  AccessibilityConditional.value(with:)(&v87, v78.i64[0], v51);
  ((void (*)(char *, uint64_t))v72)(v50, v51);
  v85 = v87;
  PageGrid.DirectionalValue.init(_:)(&v85, &type metadata for CGFloat, v27);
  v87 = 0x4038000000000000;
  v62 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v62);
  v78 = vdupq_n_s64(0x404A000000000000uLL);
  *v7 = v78;
  v80(v7, v79, v84);
  LOBYTE(v87) = 0;
  v63 = v83;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v64 = top;
  v65 = v73;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v63, v10, v16, v13, v7, *(double *)&v61, *((double *)&v61 + 1), top, v73, bottom, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v66 = xmmword_100868EB0;
  v87 = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4038000000000000;
  v67 = PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  v87 = 0x4030000000000000;
  v85 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(&v87, &v85, &type metadata for CGFloat, v27, v67);
  *v7 = v78;
  v80(v7, v79, v84);
  LOBYTE(v87) = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  PageGrid.DirectionalValue.init(_:)(&v87, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v63, v10, v16, v13, v7, *(double *)&v66, *((double *)&v66 + 1), v64, v65, bottom, right);
  return v77;
}

uint64_t sub_10045A544()
{
  return sub_10000E720(&qword_100817EF0, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_10066D39C);
}

double sub_10045A574(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for AppEvent(0, v5);
  v9 = sub_10000E720(&qword_10080DC98, (uint64_t (*)(uint64_t))&type metadata accessor for AppEvent, (uint64_t)&protocol conformance descriptor for AppPromotion);
  ItemLayoutContext.typedModel<A>(as:)(&v25, v8, v8, v9);
  v10 = v25;
  if (!v25)
    return 0.0;
  swift_getKeyPath(&unk_1006632E8);
  ItemLayoutContext.subscript.getter(v7);
  swift_release();
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v13 = v12;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  v14 = sub_10052A948();
  v15 = type metadata accessor for AppEventView(0);
  ObjectType = swift_getObjectType();
  v17 = type metadata accessor for ObjectGraph(0);
  v18 = swift_dynamicCastClassUnconditional(a2, v17, 0, 0, 0);
  v19 = swift_unknownObjectRetain(v14);
  v19.n128_f64[0] = v11;
  v20.n128_f64[0] = sub_10057D510(v10, v14, v18, v19, v13, v15, ObjectType);
  v22 = v21;
  swift_unknownObjectRelease_n(v14, 2, v20);
  swift_release();
  return v22;
}

double sub_10045A718(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  double v7;
  double v8;
  double v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  double v22;
  double v23;
  __n128 v24;
  uint64_t v26;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_1006632E8);
  ItemLayoutContext.subscript.getter(v6);
  swift_release();
  v7 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v9 = v8;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v10 = sub_10052A948();
  v11 = type metadata accessor for AppEventView(0);
  type metadata accessor for Placeholder(0);
  v12 = static Placeholder.appEventTitleText.getter();
  v14 = v13;
  v15 = static Placeholder.appEventKindText.getter();
  v17 = v16;
  v18 = static Placeholder.appEventSubtitleText.getter();
  v20 = v19;
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v10);
  sub_10057D6E8(v12, v14, v15, v17, v18, v20, a2, v10, v7, v9, v11, ObjectType);
  v23 = v22;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v17);
  v24 = swift_bridgeObjectRelease(v20);
  swift_unknownObjectRelease_n(v10, 2, v24);
  return v23;
}

unint64_t sub_10045A8A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100817A60;
  if (!qword_100817A60)
  {
    v1 = type metadata accessor for VideoCardCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_100663314, v1);
    atomic_store(result, (unint64_t *)&qword_100817A60);
  }
  return result;
}

double sub_10045A8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  double v12;
  double v13;
  _QWORD v16[5];

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v4);
  v5 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1008047B8 != -1)
    swift_once(&qword_1008047B8, sub_1000A74E0);
  v8 = sub_1000A7CF4((uint64_t)&qword_100864C88, (uint64_t)v16);
  v9 = ShelfLayoutContext.traitEnvironment.getter(v8);
  v10 = type metadata accessor for VideoCardView(0);
  ObjectType = swift_getObjectType();
  sub_1000A7880(v5, v7, (uint64_t)v16, v9, v10, ObjectType);
  v13 = v12;
  swift_unknownObjectRelease();
  sub_1000A8060(v16);
  return v13;
}

double sub_10045AA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  double v17;
  double v18;
  _QWORD v21[5];

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfLayoutContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ItemLayoutContext.parentShelfLayoutContext.getter(v6);
  ShelfLayoutContext.contentPageGrid.getter(v9);
  v10 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1008047B8 != -1)
    swift_once(&qword_1008047B8, sub_1000A74E0);
  v13 = sub_1000A7CF4((uint64_t)&qword_100864C88, (uint64_t)v21);
  v14 = ShelfLayoutContext.traitEnvironment.getter(v13);
  v15 = type metadata accessor for VideoCardView(0);
  ObjectType = swift_getObjectType();
  sub_1000A7880(v10, v12, (uint64_t)v21, v14, v15, ObjectType);
  v18 = v17;
  swift_unknownObjectRelease();
  sub_1000A8060(v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v18;
}

uint64_t sub_10045ABAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10045AC28()
{
  sub_10045B124();
}

uint64_t sub_10045AC54(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

id sub_10045AC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v6;
  void *v7;
  id result;
  void *v9;
  void *v10;
  void *v11;
  Class v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  objc_super v32;

  v5 = v4;
  v6 = (objc_class *)type metadata accessor for MetricsViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v32.receiver = v4;
  v32.super_class = v6;
  objc_msgSendSuper2(&v32, "viewDidLoad");
  v7 = *(void **)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x68));
  objc_msgSend(v4, "addChildViewController:", v7);
  result = objc_msgSend(v7, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = objc_msgSend(v5, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = result;
  result = objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = result;
  objc_msgSend(v10, "addSubview:", result);

  result = objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v12 = (Class)result;
  v13 = objc_msgSend(result, "superview");
  if (v13)
  {
    v14 = v13;
    -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v17 = swift_allocObject(v16, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100644360;
    v18 = -[objc_class leftAnchor](v12, "leftAnchor");
    v19 = objc_msgSend(v14, "leftAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v17 + 32) = v20;
    v21 = -[objc_class rightAnchor](v12, "rightAnchor");
    v22 = objc_msgSend(v14, "rightAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v17 + 40) = v23;
    v24 = -[objc_class topAnchor](v12, "topAnchor");
    v25 = objc_msgSend(v14, "topAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v17 + 48) = v26;
    v27 = -[objc_class bottomAnchor](v12, "bottomAnchor");
    v28 = objc_msgSend(v14, "bottomAnchor");
    v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

    *(_QWORD *)(v17 + 56) = v29;
    specialized Array._endMutation()(v30);
    sub_10045B1A8();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "activateConstraints:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

    v12 = isa;
  }

  return objc_msgSend(v7, "didMoveToParentViewController:", v5);
}

void sub_10045B000(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_10045AC6C((uint64_t)v4, v1, v2, v3);

}

void sub_10045B034(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_10045B17C();
}

id sub_10045B070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for MetricsViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_10045B0BC(char *a1)
{
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x50) - 8) + 8))(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x60)]);

}

uint64_t type metadata accessor for MetricsViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003C2F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsViewController);
}

void sub_10045B124()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/MetricsViewController.swift", 48, 2, 30, 0);
  __break(1u);
}

void sub_10045B17C()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.MetricsViewController", 42, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

unint64_t sub_10045B1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B980;
  if (!qword_10080B980)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080B980);
  }
  return result;
}

uint64_t sub_10045B1E4(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _BYTE v14[24];

  if (*(_BYTE *)(result + 16) == 1)
  {
    v6 = result;
    v7 = swift_allocObject(&unk_100755158, 32, 7);
    *(_QWORD *)(v7 + 16) = a2;
    *(_QWORD *)(v7 + 24) = a3;
    v8 = (_QWORD *)(v6 + 24);
    swift_beginAccess(v6 + 24, v14, 33, 0);
    v9 = *(_QWORD **)(v6 + 24);
    swift_retain(a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *(_QWORD *)(v6 + 24) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1003DB5A8(0, v9[2] + 1, 1, v9);
      *v8 = v9;
    }
    v12 = v9[2];
    v11 = v9[3];
    if (v12 >= v11 >> 1)
    {
      v9 = sub_1003DB5A8((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      *v8 = v9;
    }
    v9[2] = v12 + 1;
    v13 = &v9[2 * v12];
    v13[4] = sub_100036D9C;
    v13[5] = v7;
    return swift_endAccess(v14);
  }
  else
  {
    *a4 = 0;
  }
  return result;
}

double sub_10045B2F8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _QWORD v16[2];
  uint64_t v17;
  double *v18;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v17 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(_QWORD *)(v0 + 32);
  v9 = swift_allocObject(&unk_100755108, 24, 7);
  swift_weakInit(v9 + 16);
  aBlock[4] = sub_10045B97C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100755120;
  v10 = _Block_copy(aBlock);
  v11 = swift_retain(v9);
  static DispatchQoS.unspecified.getter(v11);
  v18 = _swiftEmptyArrayStorage;
  v12 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v14 = sub_1001B1B90((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10045B4FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    if (*(_BYTE *)(result + 16) == 1)
    {
      *(_BYTE *)(result + 16) = 0;
      swift_beginAccess(result + 24, &v10, 1, 0);
      v4 = *(_QWORD *)(v3 + 24);
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v3 + 24));
        v6 = (_QWORD *)(v4 + 40);
        do
        {
          v8 = (void (*)(uint64_t))*(v6 - 1);
          v7 = *v6;
          v9 = swift_retain(*v6);
          v8(v9);
          swift_release(v7);
          v6 += 2;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease(v4);
        v4 = *(_QWORD *)(v3 + 24);
      }
      *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
      swift_release(v3);
      return swift_bridgeObjectRelease(v4);
    }
    else
    {
      return swift_release(result);
    }
  }
  return result;
}

uint64_t sub_10045B5F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ArticleLinkLoaderScrollObserver()
{
  return objc_opt_self(_TtC20ProductPageExtension31ArticleLinkLoaderScrollObserver);
}

uint64_t sub_10045B640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  _QWORD *v20;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0, v4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0, v8);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = _swiftEmptyArrayStorage;
  v19 = sub_10006E46C();
  static DispatchQoS.unspecified.getter(v14);
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_10000E720(&qword_1008141B8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_10000DAF8(&qword_1008141C0);
  v17 = sub_1001B1B90(&qword_1008141C8, &qword_1008141C0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v7, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)(v1 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x80000001006A57D0, v13, v10, v6, 0);
  return v1;
}

double sub_10045B80C(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) == 0)
    return sub_10045B2F8();
  return result;
}

void sub_10045B81C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(NSObject **)(v0 + 32);
  v2 = swift_allocObject(&unk_1007550B8, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10045B924;
  *(_QWORD *)(v2 + 24) = v0;
  v4[4] = sub_100036D9C;
  v4[5] = v2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100184A1C;
  v4[3] = &unk_1007550D0;
  v3 = _Block_copy(v4);
  swift_retain(v0);
  swift_retain(v2);
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v2, "", 117, 43, 37, 1);
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_10045B924()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 1;
}

uint64_t sub_10045B930()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10045B940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10045B950(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10045B958()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10045B97C()
{
  uint64_t v0;

  return sub_10045B4FC(v0);
}

uint64_t sub_10045B984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10045B9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *Strong;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v19[4];
  _BYTE v20[24];

  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = Strong;
    v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      v15 = AppEvent.lockup.getter(v14);
      dispatch thunk of Lockup.clickSender.getter(v19);
      v16 = swift_release(v15);
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, enum case for ActionRunner.Origin.userInitiated(_:), v7, v16);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, v19, v10, a4);

      v17 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v17);
      sub_100010F2C((uint64_t)v19, &qword_100808F20);
    }
    else
    {

    }
  }
}

void sub_10045BAFC(uint64_t a1, char a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  Swift::Bool v20;
  id v21;
  UIImage_optional v22;
  UIImage_optional v23;

  v4 = v3;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_artworkView);
  v22.value.super.isa = 0;
  v22.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v22, a3);
  v7 = type metadata accessor for ArtworkView(0);
  v8 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, 1, v7, v8);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(void **)(Strong + qword_100828468);
    v12 = objc_msgSend(v11, "layer");
    objc_msgSend(v12, "removeAllAnimations");

    objc_msgSend(v11, "setImage:", 0);
    v13 = type metadata accessor for VideoView(0);
    v14 = sub_10000E720((unint64_t *)&unk_100807FB0, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1, v13, v14);

  }
  v15 = *(char **)(v4 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView);
  if (v15)
  {
    v16 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
    v17 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
    v18 = v15;
    v19 = v17;
    v23.value.super.isa = 0;
    v23.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v23, v20);

    v21 = *(id *)&v15[v16];
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v21, a2 & 1, v7, v8);

  }
}

double sub_10045BCD8(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t ObjectType;
  __n128 v15;

  v13 = *a1;
  ObjectType = swift_getObjectType();
  v15.n128_f64[0] = a2;
  return sub_10045C830(v13, a8, a6, v8, ObjectType, v15, a3);
}

void sub_10045BD38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10045C918(*a1, a3);
}

uint64_t sub_10045BD44()
{
  return sub_10000E720(&qword_10080DC98, (uint64_t (*)(uint64_t))&type metadata accessor for AppEvent, (uint64_t)&protocol conformance descriptor for AppPromotion);
}

double sub_10045BD70(uint64_t a1, void *a2, _BOOL8 a3, void *a4, uint64_t a5, uint64_t a6, char a7, void *a8, double a9, double a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  int *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  uint64_t v30;
  id v31;
  id v32;
  int v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(_QWORD);
  char v42;
  id v43;
  id v44;
  char *v45;
  _BOOL8 v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  _QWORD *v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  char v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v84;
  int v85;
  uint64_t v86;
  _QWORD *v87;
  int v88;
  char *v89;
  uint64_t v90;
  _BOOL8 v91;
  char *v92;
  id v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  void (*v105)(_QWORD *, _QWORD, uint64_t);
  id v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  void *v120;
  __int128 v121;
  __int128 v122;
  void *v123;
  _QWORD v124[5];
  _BYTE v125[40];
  __int128 v126[2];
  __int128 v127[2];
  _QWORD v128[5];
  _QWORD v129[5];
  _QWORD v130[5];
  __int128 v131;
  uint64_t v132;
  void *v133;
  __int128 v134;
  uint64_t v135;
  void *v136;
  __int128 v137;
  uint64_t v138;
  void *v139;
  __int128 v140;
  uint64_t v141;
  void *v142;
  __int128 v143;
  uint64_t v144;
  void *v145;
  _QWORD v146[5];
  _QWORD v147[5];
  _QWORD v148[6];

  v98 = a5;
  v99 = a6;
  v93 = a4;
  v94 = a1;
  v91 = a3;
  v95 = a2;
  v100 = type metadata accessor for AppEventCardLayout.Metrics(0);
  __chkstk_darwin(v100);
  v101 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for AppEventCardLayout(0);
  v18 = __chkstk_darwin(v17);
  v87 = (uint64_t *)((char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = type metadata accessor for LabelPlaceholderCompatibility(0, v18);
  v90 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v96 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v92 = (char *)&v86 - v22;
  __chkstk_darwin(v23);
  v89 = (char *)&v86 - v24;
  v25 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v103 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v27 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v115 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v114 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v113 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v112 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v111 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v28 = objc_msgSend(a8, "traitCollection");
  v29 = static Separator.thickness(compatibleWith:)();

  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v110 = LayoutViewPlaceholder.init(representing:)(a9, v29);
  v117 = 0;
  v30 = 0;
  if ((a7 & 1) != 0)
  {
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v30 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v117 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  }
  v109 = v30;
  v116 = v27;
  v102 = v26;
  v31 = objc_msgSend(a8, "traitCollection");
  v32 = objc_msgSend(v31, "preferredContentSizeCategory");
  v33 = static UIContentSizeCategory.>= infix(_:_:)(v32, UIContentSizeCategoryExtraExtraExtraLarge);

  v34 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_1008066B8 != -1)
    swift_once(&qword_1008066B8, sub_1004C9B6C);
  v108 = (void *)type metadata accessor for FontUseCase(0);
  v35 = sub_10000EFC4((uint64_t)v108, (uint64_t)qword_10086A500);
  v36 = objc_msgSend(a8, "traitCollection");
  v37 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v35, v36);

  v88 = v33;
  v38 = type metadata accessor for Feature(0);
  v106 = v34;
  v39 = v38;
  v148[3] = v38;
  v107 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v148[4] = v107;
  v40 = sub_1000119C0(v148);
  v41 = *(void (**)(_QWORD))(*(_QWORD *)(v39 - 8) + 104);
  v104 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v105 = (void (*)(_QWORD *, _QWORD, uint64_t))v41;
  v41(v40);
  v42 = isFeatureEnabled(_:)(v148);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v148);
  v43 = v93;
  swift_bridgeObjectRetain(v93);
  v44 = v37;
  v45 = v89;
  v46 = v91;
  v93 = v44;
  v91 = (v33 & 1) == 0;
  v47 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v46, v43, v44, 4, 0, 0, v91, 0, v42 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v148, v47);
  v48 = *(void (**)(char *, uint64_t))(v90 + 8);
  v49 = v97;
  v48(v45, v97);
  if (qword_1008066C0 != -1)
    swift_once(&qword_1008066C0, sub_1004C9B88);
  v50 = sub_10000EFC4((uint64_t)v108, (uint64_t)qword_10086A518);
  v51 = objc_msgSend(a8, "traitCollection");
  v52 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v50, v51);

  v147[3] = v39;
  v147[4] = v107;
  v53 = sub_1000119C0(v147);
  v105(v53, v104, v39);
  LOBYTE(v51) = isFeatureEnabled(_:)(v147);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v147);
  v54 = v95;
  swift_bridgeObjectRetain(v95);
  v55 = v52;
  LOBYTE(v84) = v51 & 1;
  v56 = v92;
  v95 = v55;
  v57 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v94, v54, v55, 4, 0, 0, v91, 0, v84);
  LabelPlaceholderCompatibility.layoutTextView.getter(v147, v57);
  v48(v56, v49);
  if (qword_1008066C8 != -1)
    swift_once(&qword_1008066C8, sub_1004C9BA0);
  v58 = sub_10000EFC4((uint64_t)v108, (uint64_t)qword_10086A530);
  v108 = a8;
  v59 = objc_msgSend(a8, "traitCollection");
  v60 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v58, v59);

  if ((v88 & 1) != 0)
    v61 = 0;
  else
    v61 = 2;
  v146[3] = v39;
  v146[4] = v107;
  v62 = sub_1000119C0(v146);
  v105(v62, v104, v39);
  v63 = isFeatureEnabled(_:)(v146);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v146);
  v64 = v99;
  swift_bridgeObjectRetain(v99);
  v65 = v60;
  LOBYTE(v85) = v63 & 1;
  v66 = v96;
  v106 = v65;
  v67 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v98, v64, v65, 4, 0, 0, v61, 0, v85);
  LabelPlaceholderCompatibility.layoutTextView.getter(v146, v67);
  v48(v66, v49);
  if (qword_100804A48 != -1)
    swift_once(&qword_100804A48, sub_100118934);
  v107 = a12;
  v68 = sub_10000EFC4(v100, (uint64_t)qword_1008652C8);
  v69 = v101;
  sub_10011BFD0(v68, v101);
  v145 = &protocol witness table for LayoutViewPlaceholder;
  v144 = v25;
  v70 = v103;
  *(_QWORD *)&v143 = v103;
  v142 = &protocol witness table for LayoutViewPlaceholder;
  v141 = v25;
  v71 = v102;
  *(_QWORD *)&v140 = v102;
  v139 = &protocol witness table for LayoutViewPlaceholder;
  v138 = v25;
  v72 = v116;
  *(_QWORD *)&v137 = v116;
  v136 = &protocol witness table for LayoutViewPlaceholder;
  v135 = v25;
  *(_QWORD *)&v134 = v115;
  v133 = &protocol witness table for LayoutViewPlaceholder;
  v132 = v25;
  *(_QWORD *)&v131 = v114;
  v130[4] = &protocol witness table for LayoutViewPlaceholder;
  v130[3] = v25;
  v130[0] = v113;
  v129[4] = &protocol witness table for LayoutViewPlaceholder;
  v129[3] = v25;
  v129[0] = v112;
  v128[4] = &protocol witness table for LayoutViewPlaceholder;
  v128[3] = v25;
  v128[0] = v111;
  sub_10000EF80((uint64_t)v148, (uint64_t)v127);
  sub_10000EF80((uint64_t)v147, (uint64_t)v126);
  sub_10000EF80((uint64_t)v146, (uint64_t)v125);
  v124[3] = v25;
  v124[4] = &protocol witness table for LayoutViewPlaceholder;
  v73 = v109;
  v124[0] = v110;
  if (!v109)
  {
    v123 = 0;
    v121 = 0u;
    v122 = 0u;
    if (v117)
      goto LABEL_16;
LABEL_18:
    v74 = 0;
    v120 = 0;
    v118 = 0u;
    v119 = 0u;
    goto LABEL_19;
  }
  *((_QWORD *)&v122 + 1) = v25;
  v123 = &protocol witness table for LayoutViewPlaceholder;
  *(_QWORD *)&v121 = v109;
  if (!v117)
    goto LABEL_18;
LABEL_16:
  *((_QWORD *)&v119 + 1) = v25;
  v120 = &protocol witness table for LayoutViewPlaceholder;
  *(_QWORD *)&v118 = v117;
  v74 = v117;
LABEL_19:
  v117 = v74;
  v75 = v87;
  sub_10011C014(v69, (uint64_t)v87);
  sub_100010E24(&v143, (uint64_t)v75 + v17[5]);
  sub_100010E24(&v140, (uint64_t)v75 + v17[6]);
  sub_100010E24(&v137, (uint64_t)v75 + v17[7]);
  sub_100010E24(&v134, (uint64_t)v75 + v17[8]);
  sub_100010E24(&v131, (uint64_t)v75 + v17[9]);
  sub_10002548C((uint64_t)v130, (uint64_t)v75 + v17[10], (uint64_t *)&unk_10080CE00);
  sub_10002548C((uint64_t)v129, (uint64_t)v75 + v17[11], (uint64_t *)&unk_10080CE00);
  sub_10002548C((uint64_t)v128, (uint64_t)v75 + v17[12], (uint64_t *)&unk_10080CE00);
  sub_100010E24(v127, (uint64_t)v75 + v17[13]);
  sub_100010E24(v126, (uint64_t)v75 + v17[14]);
  sub_10002548C((uint64_t)v125, (uint64_t)v75 + v17[15], (uint64_t *)&unk_100810120);
  sub_10002548C((uint64_t)v124, (uint64_t)v75 + v17[16], (uint64_t *)&unk_10080CE00);
  sub_10002548C((uint64_t)&v121, (uint64_t)v75 + v17[17], (uint64_t *)&unk_10080CE00);
  sub_10002548C((uint64_t)&v118, (uint64_t)v75 + v17[18], (uint64_t *)&unk_10080CE00);
  swift_retain(v73);
  swift_retain(v74);
  swift_retain(v70);
  v76 = v71;
  swift_retain(v71);
  swift_retain(v72);
  v77 = v115;
  swift_retain(v115);
  v78 = v114;
  swift_retain(v114);
  v79 = v113;
  swift_retain(v113);
  v80 = v112;
  swift_retain(v112);
  v81 = v111;
  swift_retain(v111);
  v82 = v110;
  swift_retain(v110);
  sub_100500584(v108, v75, a9, a10);

  swift_release(v70);
  swift_release(v76);
  swift_release(v116);
  swift_release(v77);
  swift_release(v78);
  swift_release(v79);
  swift_release(v80);
  swift_release(v81);
  swift_release(v82);
  swift_release(v109);
  swift_release(v117);
  sub_100020684((uint64_t)v75);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v146);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v147);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v148);
  return a9;
}

double sub_10045C830(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6, double a7)
{
  double v11;
  uint64_t v12;
  void *v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  void *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;

  v11 = a6.n128_f64[0];
  v12 = AppEvent.title.getter(a1, a6);
  v14 = v13;
  v16 = AppEvent.kind.getter(v15);
  v18 = v17;
  v20 = AppEvent.subtitle.getter(v16, v19);
  v22 = v21;
  v23 = sub_100458144(a3);
  v24 = sub_10045BD70(v12, v14, v16, v18, v20, v22, v23 & 1, a2, v11, a7, a4, a5);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v22);
  return v24;
}

void sub_10045C918(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  char v53;
  char *v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  __n128 v67;
  char v68;
  char *v69;
  NSString v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v83;
  void *v84;
  uint64_t v85;
  void *v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, _QWORD, uint64_t);
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void *v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t (*v130)();
  uint64_t (**v131)();
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char v146;
  char v147;
  char v148;
  char *v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  _QWORD *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  _QWORD *v194;
  char *v195;
  uint64_t v196;
  _QWORD v197[6];

  v3 = v2;
  v196 = a2;
  v5 = sub_10000DAF8((uint64_t *)&unk_100811F10);
  __chkstk_darwin(v5);
  v193 = (char *)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v192 = (char *)&v173 - v8;
  v9 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v10 = __chkstk_darwin(v9);
  v191 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VideoControls(0, v10);
  __chkstk_darwin(v12);
  v187 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v186 = (char *)&v173 - v15;
  v16 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  v17 = __chkstk_darwin(v16);
  v185 = (char *)&v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VideoFillMode(0, v17);
  v183 = *(_QWORD *)(v19 - 8);
  v184 = v19;
  __chkstk_darwin(v19);
  v182 = (char *)&v173 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VideoConfiguration(0);
  v189 = *(_QWORD *)(v21 - 8);
  v190 = v21;
  __chkstk_darwin(v21);
  v188 = (char *)&v173 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v23);
  v173 = (char *)&v173 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v25);
  v181 = (char *)&v173 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v27);
  v180 = (char *)&v173 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v29);
  v179 = (char *)&v173 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10000DAF8(&qword_100821E80);
  v32 = __chkstk_darwin(v31);
  v178 = (char *)&v173 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v32);
  v175 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v174 = (char *)&v173 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v35);
  v177 = (char *)&v173 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = (_QWORD *)type metadata accessor for MediaOverlayStyle(0);
  v37 = *(v194 - 1);
  v38 = __chkstk_darwin(v194);
  v40 = (char *)&v173 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = AppEvent.kind.getter(v38);
  v43 = v42;
  v195 = v3;
  v44 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_kindLabel];
  v45 = objc_msgSend(v44, "text");
  if (v45)
  {
    v46 = v45;
    v47 = a1;
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v50 = v49;

    if (v48 == v41 && v50 == v43)
    {
      v52 = swift_bridgeObjectRelease_n(v43, 2);
      a1 = v47;
LABEL_7:
      v54 = v195;
      goto LABEL_9;
    }
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50, v41, v43, 0);
    swift_bridgeObjectRelease(v50);
    a1 = v47;
    if ((v53 & 1) != 0)
    {
      v52 = swift_bridgeObjectRelease(v43);
      goto LABEL_7;
    }
  }
  v55 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setText:", v55, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v54 = v195;
  v51 = objc_msgSend(v195, "setNeedsLayout");
LABEL_9:
  v56 = AppEvent.title.getter(v51, v52);
  v58 = v57;
  v59 = *(void **)&v54[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_titleLabel];
  v60 = objc_msgSend(v59, "text");
  if (v60)
  {
    v61 = v60;
    v62 = a1;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v65 = v64;

    if (v63 == v56 && v65 == v58)
    {
      v67 = swift_bridgeObjectRelease_n(v58, 2);
      a1 = v62;
LABEL_15:
      v69 = v195;
      goto LABEL_17;
    }
    v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v65, v56, v58, 0);
    swift_bridgeObjectRelease(v65);
    a1 = v62;
    if ((v68 & 1) != 0)
    {
      v67 = swift_bridgeObjectRelease(v58);
      goto LABEL_15;
    }
  }
  v70 = String._bridgeToObjectiveC()();
  objc_msgSend(v59, "setText:", v70, swift_bridgeObjectRelease(v58).n128_f64[0]);

  v69 = v195;
  v66 = objc_msgSend(v195, "setNeedsLayout");
LABEL_17:
  v71 = AppEvent.subtitle.getter(v66, v67);
  sub_100119AEC(v71, v72);
  v73 = *(void **)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_mediaContentView];
  v74 = AppEvent.mediaOverlayStyle.getter();
  v75 = MediaOverlayStyle.userInterfaceStyle.getter(v74);
  (*(void (**)(char *, _QWORD *))(v37 + 8))(v40, v194);
  objc_msgSend(v73, "setOverrideUserInterfaceStyle:", v75);
  sub_100119514();
  v76 = v196;
  if ((sub_100458144(v196) & 1) != 0)
  {
    v77 = OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupContainerView;
    if (!*(_QWORD *)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupContainerView])
    {
      v78 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_10011BE7C();
      v79 = *(void **)&v69[v77];
      *(_QWORD *)&v69[v77] = v78;
      v80 = v78;

      sub_100119FA0();
    }
    v81 = OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView;
    if (!*(_QWORD *)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView])
    {
      v82 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v83 = *(void **)&v69[v81];
      if (v83)
      {
        objc_msgSend(v83, "removeFromSuperview");
        v84 = *(void **)&v69[v81];
      }
      else
      {
        v84 = 0;
      }
      *(_QWORD *)&v69[v81] = v82;
      v91 = v82;

      sub_10011A14C();
    }
    v92 = *(void **)&v69[v77];
    if (v92)
      objc_msgSend(v92, "setHidden:", 0);
    v93 = *(id *)&v69[v81];
    if (v93)
    {
      v93 = objc_msgSend(v93, "setHidden:", 0);
      v94 = *(void **)&v69[v81];
      if (v94)
      {
        v194 = v94;
        v95 = AppEvent.lockup.getter(v194);
        v96 = v175;
        v97 = *(void (**)(char *, _QWORD, uint64_t))(v175 + 104);
        v98 = v174;
        v99 = v176;
        v97(v174, enum case for OfferButtonPresenterViewAlignment.right(_:), v176);
        v100 = v178;
        v97(v178, enum case for OfferButtonPresenterViewAlignment.left(_:), v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v100, 0, 1, v99);
        v101 = sub_10000E720((unint64_t *)&unk_100811F30, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
        v102 = (uint64_t)v177;
        AccessibilityConditional.init(value:axValue:)(v98, v100, v99, v101);
        v103 = sub_10000DAF8(&qword_10080B190);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 0, 1, v103);
        v104 = type metadata accessor for OfferStyle(0);
        v105 = (uint64_t)v179;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v179, 1, 1, v104);
        v106 = type metadata accessor for OfferEnvironment(0);
        v107 = (uint64_t)v180;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v180, 1, 1, v106);
        v108 = sub_10000DAF8((uint64_t *)&unk_10080A100);
        v109 = (uint64_t)v181;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v181, 1, 1, v108);
        v110 = v194;
        sub_100210C9C(v95, v102, v76, 0, v105, v107, v109, 1);

        swift_release(v95);
        sub_100010F2C(v109, (uint64_t *)&unk_10080A0D0);
        sub_100010F2C(v107, (uint64_t *)&unk_10080A0E0);
        sub_100010F2C(v105, &qword_100815D80);
        v93 = (id)sub_100010F2C(v102, (uint64_t *)&unk_10080A0F0);
        v111 = *(_QWORD *)&v69[v81];
        if (v111)
        {
          v112 = *(void **)(v111 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel);
          if (!v112)
            goto LABEL_38;
          v113 = qword_1008060B8;
          v114 = v112;
          if (v113 != -1)
            swift_once(&qword_1008060B8, sub_1004C604C);
          v115 = type metadata accessor for FontUseCase(0);
          v116 = sub_10000EFC4(v115, (uint64_t)qword_100869318);
          v117 = *(_QWORD *)(v115 - 8);
          v118 = v173;
          (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v173, v116, v115);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v118, 0, 1, v115);
          dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v118);

          v111 = *(_QWORD *)&v69[v81];
          if (v111)
          {
LABEL_38:
            v119 = *(void **)(v111 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
            if (v119)
            {
              v120 = qword_1008060D0;
              v121 = v119;
              if (v120 != -1)
                swift_once(&qword_1008060D0, sub_1004C6094);
              v122 = type metadata accessor for FontUseCase(0);
              v123 = sub_10000EFC4(v122, (uint64_t)qword_100869360);
              v124 = *(_QWORD *)(v122 - 8);
              v125 = v173;
              (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v173, v123, v122);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v125, 0, 1, v122);
              dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v125);

            }
          }
        }
      }
    }
    v126 = AppEvent.lockup.getter(v93);
    v127 = Lockup.clickAction.getter();
    swift_release(v126);
    if (v127)
    {
      v128 = swift_allocObject(&unk_100755228, 24, 7);
      swift_unknownObjectWeakInit(v128 + 16, v69);
      v129 = (_QWORD *)swift_allocObject(&unk_100755250, 48, 7);
      v129[2] = v128;
      v129[3] = v127;
      v129[4] = a1;
      v129[5] = v76;
      v127 = swift_allocObject(&unk_100755278, 32, 7);
      *(_QWORD *)(v127 + 16) = sub_10045DB64;
      *(_QWORD *)(v127 + 24) = v129;
      swift_retain(a1);
      swift_retain(v76);
      v130 = sub_100036D9C;
    }
    else
    {
      v130 = 0;
    }
    v131 = (uint64_t (**)())&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupViewTappedAction];
    v89 = *(_QWORD *)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupViewTappedAction];
    v90 = *(_QWORD *)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupViewTappedAction + 8];
    *v131 = v130;
    v131[1] = (uint64_t (*)())v127;
  }
  else
  {
    v85 = OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView;
    v86 = *(void **)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView];
    if (v86)
    {
      objc_msgSend(v86, "removeFromSuperview");
      v87 = *(void **)&v69[v85];
    }
    else
    {
      v87 = 0;
    }
    *(_QWORD *)&v69[v85] = 0;

    sub_10011A14C();
    v88 = &v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupViewTappedAction];
    v89 = *(_QWORD *)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupViewTappedAction];
    v90 = *(_QWORD *)&v69[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupViewTappedAction + 8];
    *(_QWORD *)v88 = 0;
    *((_QWORD *)v88 + 1) = 0;
  }
  v132 = sub_100018908(v89, v90);
  v133 = AppEvent.moduleVideo.getter(v132);
  if (v133)
  {
    v134 = v133;
    v135 = v182;
    v136 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v183 + 104))(v182, enum case for VideoFillMode.scaleAspectFill(_:), v184);
    v137 = Video.preview.getter(v136);
    Artwork.size.getter(v137);
    v138 = v185;
    AspectRatio.init(_:_:)(v139);
    swift_release(v137);
    v140 = type metadata accessor for AspectRatio(0);
    v141 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 56))(v138, 0, 1, v140);
    v142 = v186;
    v143 = Video.playbackControls.getter(v141);
    v144 = v187;
    v145 = Video.autoPlayPlaybackControls.getter(v143);
    v146 = Video.canPlayFullScreen.getter(v145);
    v147 = Video.allowsAutoPlay.getter();
    v148 = Video.looping.getter();
    v149 = v188;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v135, v138, v142, v144, v146 & 1, v147 & 1, v148 & 1, 0, 0, 1);
    v150 = type metadata accessor for VideoViewManager(0);
    v151 = BaseObjectGraph.inject<A>(_:)(v197, v150, v150);
    v152 = v197[0];
    v153 = Video.playbackId.getter(v197, v151);
    v154 = v191;
    Video.videoUrl.getter(v153);
    v156 = type metadata accessor for URL(0, v155);
    v157 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v154, 0, 1, v156);
    v158 = (uint64_t)v192;
    v159 = Video.templateMediaEvent.getter(v157);
    v160 = (uint64_t)v193;
    Video.templateClickEvent.getter(v159);
    v161 = type metadata accessor for VideoView(0);
    v162 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
    v163 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v197, v154, v149, v158, v160, v196, v161, v162);
    sub_100010F2C(v160, (uint64_t *)&unk_100811F10);
    sub_100010F2C(v158, (uint64_t *)&unk_100811F10);
    v164 = (uint64_t)v154;
    v69 = v195;
    sub_100010F2C(v164, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v197, &qword_100809010);
    sub_10011BCEC();
    swift_release(v134);
    swift_release(v152);

    v165 = v149;
    v76 = v196;
    (*(void (**)(char *, uint64_t))(v189 + 8))(v165, v190);
  }
  else
  {
    sub_10011BCEC();
  }
  v166 = type metadata accessor for UserNotificationsManager(0);
  v167 = *(_QWORD *)(v76 + qword_10086B410);
  if (v167)
  {
    v168 = swift_retain_n(*(_QWORD *)(v76 + qword_10086B410), 2);
    v169 = AppEvent.notificationConfig.getter(v168);
    v170 = type metadata accessor for NotifyMeButtonPresenter(0);
    swift_allocObject(v170, *(unsigned int *)(v170 + 48), *(unsigned __int16 *)(v170 + 52));
    swift_retain(v76);
    v171 = v69;
    v172 = NotifyMeButtonPresenter.init(userNotificationsManager:notificationConfig:view:asPartOf:)(v167, v169, (uint64_t)v69, (uint64_t)&off_10073EBA0, v76);
    sub_10011B248(v172);
    v171[OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_includeBorderInDarkMode] = AppEvent.includeBorderInDarkMode.getter() & 1;
    sub_100119514();
    swift_release(v167);
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v166, v166);
    __break(1u);
  }
}

unint64_t sub_10045D7C8(__n128 a1, uint64_t a2, void *a3)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  id v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t v45;

  v4 = a1.n128_f64[0];
  v5 = type metadata accessor for Artwork.Crop(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  if (qword_100804A48 != -1)
    swift_once(&qword_100804A48, sub_100118934);
  v9 = type metadata accessor for AppEventCardLayout.Metrics(0);
  sub_10000EFC4(v9, (uint64_t)qword_1008652C8);
  v10 = AspectRatio.height(fromWidth:)(v4);
  v12 = AppEvent.moduleVideo.getter(v11);
  if (v12)
  {
    v13 = v12;
    v14 = Video.preview.getter(v12);
    swift_release(v13);
  }
  else
  {
    v15 = AppEvent.moduleArtwork.getter();
    v14 = v15;
    if (!v15)
      goto LABEL_9;
  }
  v16 = swift_retain(v14);
  v17 = Artwork.crop.getter(v16);
  v18 = Artwork.Crop.preferredContentMode.getter(v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = Artwork.config(_:mode:prefersLayeredImage:)(v18, 0, v4, v10);
  swift_retain(v19);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
  specialized Array._endMutation()(v23);
  swift_release(v14);
  swift_release(v19);
LABEL_9:
  v24 = AppEvent.lockup.getter(v15);
  v25 = dispatch thunk of Lockup.artwork.getter(v24);
  *(_QWORD *)&v26 = swift_release(v24).n128_u64[0];
  if (v25)
  {
    v27 = objc_msgSend(a3, "traitCollection", v26);
    v28 = UITraitCollection.prefersAccessibilityLayouts.getter(v27);

    if ((v28 & 1) != 0)
    {
      if (qword_100804A40 != -1)
        swift_once(&qword_100804A40, sub_100118890);
      v29 = qword_1008652B0;
    }
    else
    {
      if (qword_100804A38 != -1)
        swift_once(&qword_100804A38, sub_1001187EC);
      v29 = qword_100865298;
    }
    v30 = type metadata accessor for SmallLockupLayout.Metrics(0);
    v31 = sub_10000EFC4(v30, (uint64_t)v29);
    v32.n128_f64[0] = SmallLockupLayout.Metrics.artworkSize.getter(v31);
    v33 = v32.n128_f64[0];
    v35 = v34;
    v36 = Artwork.crop.getter(v32);
    v37 = Artwork.Crop.preferredContentMode.getter(v36);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v38 = Artwork.config(_:mode:prefersLayeredImage:)(v37, 0, v33, v35);
    swift_retain(v38);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
    v41 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v40 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v41 >= v40 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
    specialized Array._endMutation()(v42);
    swift_release(v38);
    swift_release(v25);
  }
  swift_release(v14);
  return v45;
}

uint64_t sub_10045DB04()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10045DB28()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10045DB64()
{
  uint64_t *v0;

  sub_10045B9B0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10045DB70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10045DB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  void (*v57)(_QWORD, _QWORD);
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  double v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  id v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  _QWORD v85[3];
  uint64_t v86;
  void (*v87)(_QWORD, _QWORD);
  uint64_t v88;
  _BYTE v89[40];
  _QWORD v90[5];

  v12 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v86 = *(_QWORD *)(v12 - 8);
  v87 = (void (*)(_QWORD, _QWORD))v12;
  __chkstk_darwin(v12);
  v14 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork.Style(0, v15);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artwork.Crop(0, v17);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90[3] = a4;
  v90[4] = a5;
  v24 = sub_1000119C0(v90);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v24, a1, a4);
  sub_10000EF80((uint64_t)v90, (uint64_t)v89);
  v25 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v27 = type metadata accessor for AppEvent(0, v26);
  if (!swift_dynamicCast(&v88, v89, v25, v27, 6))
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
  v28 = v88;
  if (qword_100804A48 != -1)
    swift_once(&qword_100804A48, sub_100118934);
  v85[0] = v20;
  v85[2] = a2;
  v29 = type metadata accessor for AppEventCardLayout.Metrics(0);
  sub_10000EFC4(v29, (uint64_t)qword_1008652C8);
  v30 = AspectRatio.height(fromWidth:)(a6);
  v32 = AppEvent.moduleVideo.getter(v31);
  v85[1] = v28;
  if (v32)
  {
    v33 = Video.preview.getter(v32);
    swift_release();
LABEL_7:
    v34 = swift_retain(v33);
    v35 = Artwork.crop.getter(v34);
    v36 = Artwork.Crop.preferredContentMode.getter(v35);
    (*(void (**)(char *, _QWORD))(v21 + 8))(v23, v85[0]);
    v37 = Artwork.config(_:mode:prefersLayeredImage:)(v36, 0, a6, v30);
    v38 = *(void **)(a3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_artworkView);
    Artwork.style.getter(v37);
    v39 = ArtworkView.style.setter(v19);
    v40 = objc_msgSend(v38, "setContentMode:", Artwork.contentMode.getter(v39));
    v41 = ArtworkLoaderConfig.size.getter(v40);
    v43 = ArtworkView.imageSize.setter(v41, v42);
    v44 = Artwork.backgroundColor.getter(v43);
    if (!v44)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v44 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v44);
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
    if (Strong)
    {
      v46 = (void *)Strong;
      v47 = type metadata accessor for VideoView(0);
      v48 = sub_10000E720((unint64_t *)&unk_100807FB0, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v37, 2, 1, v46, v47, v48);

    }
    else
    {
      v49 = type metadata accessor for ArtworkView(0);
      v50 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v37, 2, 1, v38, v49, v50);
    }
    swift_release();
    swift_release();
    goto LABEL_13;
  }
  v33 = AppEvent.moduleArtwork.getter();
  if (v33)
    goto LABEL_7;
LABEL_13:
  v51 = *(void **)(a3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView);
  if (v51)
  {
    v52 = v51;
    v53 = AppEvent.lockup.getter(v52);
    v54 = dispatch thunk of Lockup.artwork.getter(v53);
    swift_release();
    if (v54)
    {
      v55 = &v52[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
      v56 = swift_beginAccess(&v52[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v89, 0, 0);
      v58 = v86;
      v57 = v87;
      v59 = (*(uint64_t (**)(char *, char *, void (*)(_QWORD, _QWORD), __n128))(v86 + 16))(v14, v55, v87, v56);
      v60 = SmallLockupLayout.Metrics.artworkSize.getter(v59);
      v62 = v61;
      v63.n128_f64[0] = (*(double (**)(char *, _QWORD))(v58 + 8))(v14, v57);
      v64 = Artwork.crop.getter(v63);
      v65 = Artwork.Crop.preferredContentMode.getter(v64);
      v66 = v85[0];
      v87 = *(void (**)(_QWORD, _QWORD))(v21 + 8);
      v87(v23, v85[0]);
      v67 = Artwork.config(_:mode:prefersLayeredImage:)(v65, 0, v60, v62);
      v68 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
      v69 = *(id *)&v52[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
      Artwork.style.getter(v69);
      v70 = ArtworkView.style.setter(v19);
      v71 = objc_msgSend(v69, "setContentMode:", Artwork.contentMode.getter(v70));
      v72 = ArtworkLoaderConfig.size.getter(v71);
      v74 = ArtworkView.imageSize.setter(v72, v73);
      v75 = Artwork.backgroundColor.getter(v74);
      if (!v75)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v75 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v75);

      v76 = *(id *)&v52[v68];
      v78 = Artwork.crop.getter(v77);
      v79 = Artwork.Crop.preferredContentMode.getter(v78);
      v87(v23, v66);
      objc_msgSend(v76, "setContentMode:", v79);

      v80 = *(void **)&v52[v68];
      v81 = type metadata accessor for ArtworkView(0);
      v82 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v83 = v80;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v67, 2, 1, v83, v81, v82);

      swift_release();
      swift_release();

    }
    else
    {

    }
  }
  swift_release();
  swift_release();
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
}

id sub_10045E170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  __n128 v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v31[5];

  v25 = a2;
  v30 = type metadata accessor for Shelf.PresentationHints(0);
  v28 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v3 = (uint64_t *)((char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100816170);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v13);
  ReadOnlyLens.value.getter(v31, v11);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  ItemLayoutContext.mutableState.getter(v16);
  v17 = type metadata accessor for ObjectGraph(0);
  v18 = swift_dynamicCastClassUnconditional(v25, v17, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v18);
  swift_getKeyPath(&unk_100663568);
  ItemLayoutContext.subscript.getter(v3);
  swift_release();
  v19 = sub_10052A948();
  v20 = v29;
  sub_100364AFC((uint64_t)v31, (uint64_t)v10, v18, (uint64_t)v6, (uint64_t)v3, (uint64_t)v19);
  v21 = swift_unknownObjectRelease();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v3, v30, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v31);
  v22 = objc_msgSend(v20, "contentView");
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  return objc_msgSend(v20, "setNeedsLayout");
}

uint64_t sub_10045E3E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension30MediumLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

double sub_10045E43C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension30MediumLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10045E498(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30MediumLockupCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10045E4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t KeyPath;
  __n128 v9;
  int v10;
  uint64_t *v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v16;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_1006635F0);
  ItemLayoutContext.subscript.getter(v7);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100663620);
  ReadOnlyLens.subscript.getter(v3, KeyPath, v4);
  v9 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v5 + 8))(v7, v4, v9);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 88))(v3, v0);
  if (v10 == enum case for Shelf.ContentType.singleColumnList(_:)
    || v10 == enum case for Shelf.ContentType.twoColumnList(_:))
  {
    v12 = &qword_100824F58;
    v13 = sub_10000DAF8(&qword_100824F58);
    sub_100010E80(&qword_100824F60, &qword_100824F58, (uint64_t)&unk_1006494B8);
    sub_100010E80(&qword_100824F68, &qword_100824F58, (uint64_t)&unk_10066C9D0);
    v14 = (unint64_t *)&unk_100824F70;
  }
  else
  {
    if (v10 != enum case for Shelf.ContentType.scrollablePill(_:))
    {
      v13 = sub_10056F4CC();
      (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
      return v13;
    }
    v12 = &qword_100824F38;
    v13 = sub_10000DAF8(&qword_100824F38);
    sub_100010E80(&qword_100824F40, &qword_100824F38, (uint64_t)&unk_1006494B8);
    sub_100010E80(&qword_100824F48, &qword_100824F38, (uint64_t)&unk_10066C9D0);
    v14 = (unint64_t *)&unk_100824F50;
  }
  sub_100010E80(v14, v12, (uint64_t)&unk_1006494E8);
  return v13;
}

uint64_t type metadata accessor for SearchFocusShelfComponentTypeMappingProvider()
{
  return objc_opt_self(_TtC20ProductPageExtension44SearchFocusShelfComponentTypeMappingProvider);
}

uint64_t sub_10045E764(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

id (*sub_10045E800(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_disableAdvertRotation, a1, 33, 0);
  return sub_10045E848;
}

id sub_10045E848(uint64_t a1, char a2)
{
  id result;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView);
    v7 = *(void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton);
    if (v7)
    {
      objc_msgSend(v7, "addTarget:action:forControlEvents:");
      v5 = *(_QWORD *)(a1 + 24);
    }
    return objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton), "addTarget:action:forControlEvents:", v5, "disableAdvertRotationTap", 64);
  }
  return result;
}

char *sub_10045E8E4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  double left;
  double bottom;
  double right;
  char *v19;
  objc_super v21;

  v9 = OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_preferredImageSizes] = _swiftEmptyDictionarySingleton;
  v13 = &v11[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_disableAdvertRotation];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator] = 0;
  v14 = &v11[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for AdvertsSearchResultContentView();
  v15 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v19 = (char *)v15;
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView]);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots]);

  return v19;
}

id sub_10045EB38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  double v7;
  double v8;
  CGFloat v9;
  unint64_t v10;
  double v11;
  double v12;
  double v13;
  char *v14;
  __n128 v15;
  __n128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v42[24];
  objc_super v43;
  CGRect v44;
  CGRect v45;

  v1 = v0;
  v2 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (objc_class *)type metadata accessor for AdvertsSearchResultContentView();
  v43.receiver = v1;
  v43.super_class = v6;
  objc_msgSendSuper2(&v43, "layoutSubviews");
  v7 = LayoutMarginsAware<>.layoutFrame.getter(v6);
  v9 = v8;
  v11 = *(double *)&v10;
  v13 = v12;
  v14 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView];
  v15.n128_u64[0] = v10;
  sub_10044F944(v15, v12);
  objc_msgSend(v14, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v7));
  static StandardSearchResultContentViewMetrics.bottomMargin.getter(v16);
  v17 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v18 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v19 + 32) = v17;
  v20 = v17;
  v21 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v19);
  v22 = sub_100354980();
  dispatch thunk of AnyDimension.rawValue(in:)(v21, v2, v22);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v44.origin.x = v7;
  v44.origin.y = v9;
  v44.size.width = v11;
  v44.size.height = v13;
  CGRectGetMinX(v44);
  objc_msgSend(v14, "frame");
  CGRectGetMaxY(v45);
  v24 = *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_title];
  v23 = *(void (**)(_QWORD, _QWORD))&v14[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_title + 8];
  v25 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel], "text", swift_bridgeObjectRetain(v23).n128_f64[0]);
  if (v25)
  {
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0;
  }
  v30 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel], "text");
  if (v30)
  {
    v31 = v30;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = (uint64_t *)(*(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView]
                  + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v35, v42, 0, 0);
  v36 = *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView];
  v37 = *v35;
  v38 = *(_QWORD *)(v36 + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  swift_bridgeObjectRetain(v38);
  v39 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRetain(v37).n128_f64[0]);
  sub_100461314(v24, v23, v27, v29, v32, v34, v37, v38, v11, v13, v39);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v38);

  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v29);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots], "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v7));
}

void sub_10045EF60(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  double (*v59)(char *, uint64_t, __n128);
  __n128 v60;
  __n128 v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  id v69;
  __n128 v70;
  _QWORD v71[2];
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t ObjectType;
  uint64_t v88;
  _QWORD v89[7];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v81 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LockupMediaLayout.DisplayType(0, v7);
  v83 = *(_QWORD *)(v10 - 8);
  v84 = v10;
  __chkstk_darwin(v10);
  v82 = (uint64_t)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v12);
  v14 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8(&qword_1008081F0);
  __chkstk_darwin(v15);
  v17 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PageGrid(0);
  v85 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v86 = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AdvertRotationControllerProvider(0);
  BaseObjectGraph.optional<A>(_:)(v89, v20, v20);
  if (!v89[0])
    return;
  v79 = type metadata accessor for ObjectGraph(0);
  v21 = swift_dynamicCastClassUnconditional(a2, v79, 0, 0, 0);
  v22 = AdvertRotationControllerProvider.advertController(for:asPartOf:)(a1, v21);
  if (!v22)
  {
LABEL_11:
    swift_release();
    return;
  }
  v78 = v14;
  v24 = v22;
  dispatch thunk of AdvertRotationController.currentAdvert.getter(v89, v23);
  v25 = sub_10000DAF8((uint64_t *)&unk_100825030);
  v26 = type metadata accessor for MixedMediaLockup(0);
  if ((swift_dynamicCast(&v88, v89, v25, v26, 6) & 1) == 0)
  {
    swift_release();
    goto LABEL_11;
  }
  v75 = v24;
  v76 = v6;
  v27 = v88;
  v28 = static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
  v29 = PageGrid.columnWidth.getter(v28);
  v30 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView];
  *(double *)&v30[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = v29;
  objc_msgSend(v30, "setNeedsLayout");
  v31 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
  v32 = swift_dynamicCastClassUnconditional(a2, v79, 0, 0, 0);
  sub_10030F2E4(v27, (uint64_t)v17, v32);
  sub_100010F2C((uint64_t)v17, &qword_1008081F0);
  v33 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v35 = (void *)static UIColor.defaultBackground.getter(v33, v34);
  objc_msgSend(v3, "setBackgroundColor:", v35);

  v80 = v27;
  v37 = MixedMediaLockup.screenshots.getter(v36);
  v38 = v37;
  if ((unint64_t)v37 >> 62)
  {
    if (v37 >= 0)
      v37 &= 0xFFFFFFFFFFFFFF8uLL;
    v41 = _CocoaArrayWrapper.endIndex.getter(v37);
    v39 = v76;
    if (v41)
      goto LABEL_6;
LABEL_15:
    swift_bridgeObjectRelease(v38);
    v77 = 0;
    goto LABEL_16;
  }
  v39 = v76;
  if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_6:
  if ((v38 & 0xC000000000000001) != 0)
  {
    v77 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
  }
  else
  {
    if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    v77 = *(_QWORD *)(v38 + 32);
    swift_retain(v77);
  }
  swift_bridgeObjectRelease(v38);
LABEL_16:
  v42 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots];
  v43 = MixedMediaLockup.trailers.getter(v40);
  v38 = v43;
  if ((unint64_t)v43 >> 62)
  {
    if (v43 >= 0)
      v43 &= 0xFFFFFFFFFFFFFF8uLL;
    v44 = _CocoaArrayWrapper.endIndex.getter(v43);
  }
  else
  {
    v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v74 = v18;
  v73 = v42;
  if (v44)
  {
    if ((v38 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_56;
      }
      v72 = *(void **)(v38 + 32);
      swift_retain(v72);
      goto LABEL_22;
    }
LABEL_54:
    v72 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
LABEL_22:
    v45 = swift_bridgeObjectRelease(v38);
    goto LABEL_24;
  }
  v45 = swift_bridgeObjectRelease(v38);
  v72 = 0;
LABEL_24:
  v46 = (id)ASKDeviceTypeGetCurrent(v45);
  swift_getKeyPath(&unk_1006638B0);
  ItemLayoutContext.subscript.getter(v89);
  swift_release();
  v47 = (void *)v89[0];
  sub_1003ABC70((uint64_t)v46, (uint64_t)v78);

  v49 = MixedMediaLockup.screenshots.getter(v48);
  v38 = v49;
  if ((unint64_t)v49 >> 62)
  {
    if (v49 >= 0)
      v49 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v49))
    {
LABEL_26:
      if ((v38 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_58;
        }
        v46 = *(id *)(v38 + 32);
        swift_retain(v46);
        goto LABEL_29;
      }
LABEL_56:
      v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
LABEL_29:
      swift_bridgeObjectRelease(v38);
      goto LABEL_37;
    }
  }
  else if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_26;
  }
  swift_bridgeObjectRelease(v38);
  v46 = 0;
LABEL_37:
  v51 = MixedMediaLockup.trailers.getter(v50);
  v38 = v51;
  if ((unint64_t)v51 >> 62)
  {
    if (v51 >= 0)
      v51 &= 0xFFFFFFFFFFFFFF8uLL;
    v52 = _CocoaArrayWrapper.endIndex.getter(v51);
  }
  else
  {
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v71[1] = v30;
  v71[0] = v3;
  if (!v52)
  {
    v54 = swift_bridgeObjectRelease(v38);
    v53 = 0;
    goto LABEL_45;
  }
  if ((v38 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v53 = *(_QWORD *)(v38 + 32);
    swift_retain(v53);
    goto LABEL_43;
  }
LABEL_58:
  v53 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
LABEL_43:
  v54 = swift_bridgeObjectRelease(v38);
LABEL_45:
  v55 = v80;
  v56.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v54);
  v57 = v82;
  sub_10048D0D4((uint64_t)v46, v53, (uint64_t)v9, v82, v56);
  swift_release();
  v58 = swift_release();
  v59 = *(double (**)(char *, uint64_t, __n128))(v81 + 8);
  v60.n128_f64[0] = v59(v9, v39, v58);
  v61.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v60);
  v62 = (id)ASKDeviceTypeGetCurrent(v61);
  ObjectType = a2;
  v63 = swift_dynamicCastClassUnconditional(a2, v79, 0, 0, 0);
  v64 = (uint64_t)v78;
  sub_10010BD8C(v77, v72, (uint64_t)v78, v57, (uint64_t)v9, v63);

  v65 = swift_release();
  v59(v9, v39, v65);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v57, v84);
  sub_100010F2C(v64, (uint64_t *)&unk_100811F20);
  v66 = swift_retain(v55);
  v67 = Lockup.searchAd.getter(v66);
  swift_release();
  v68 = (void *)v71[0];
  if (v67)
  {
    v69 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v68, "setBackgroundColor:", v69);

  }
  objc_msgSend(v68, "setNeedsLayout", sub_10031041C(v67, ObjectType));
  objc_msgSend(v68, "setNeedsLayout", swift_release().n128_f64[0]);
  swift_release();
  swift_release();
  swift_release();
  v70 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v86, v74, v70);
}

void sub_10045F6DC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  char *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  Swift::Bool v46;
  uint64_t v47;
  uint64_t Strong;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  Swift::Bool v54;
  void *v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  __n128 v77;
  char *v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  uint64_t v82;
  void (*v83)(_QWORD, _QWORD);
  void (*v84)(_QWORD, _QWORD);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  double v99;
  double v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  id v112;
  uint64_t v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  void (*v117)(uint64_t, uint64_t, __n128);
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  id v132;
  _QWORD v133[3];
  _QWORD v134[7];
  UIImage_optional v135;
  UIImage_optional v136;

  v8 = v7;
  v14 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v119 - v19;
  v22 = type metadata accessor for Artwork.Style(0, v21);
  __chkstk_darwin(v22);
  v24 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for AdvertRotationControllerProvider(0);
  BaseObjectGraph.optional<A>(_:)(v134, v25, v25);
  v26 = v134[0];
  if (!v134[0])
    return;
  v130 = v24;
  v131 = a1;
  sub_10000EF80(a1, (uint64_t)v134);
  v27 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v28 = type metadata accessor for AdvertsSearchResult(0);
  if ((swift_dynamicCast(v133, v134, v27, v28, 6) & 1) == 0)
  {
LABEL_31:
    swift_release();
    return;
  }
  v29 = v133[0];
  v134[3] = v28;
  v134[4] = sub_100020248((unint64_t *)&unk_100825020, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v134[0] = v29;
  v30 = swift_retain(v29);
  v31 = AdvertRotationControllerProvider.advertController(for:asPartOf:createIfRequired:)(v134, a3, 0, v30);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v134);
  if (!v31)
  {
    swift_release();
    goto LABEL_31;
  }
  dispatch thunk of AdvertRotationController.currentAdvert.getter(v134, v32);
  v33 = sub_10000DAF8((uint64_t *)&unk_100825030);
  v34 = type metadata accessor for MixedMediaLockup(0);
  if ((swift_dynamicCast(v133, v134, v33, v34, 6) & 1) == 0)
  {
    swift_release();
    swift_release();
    goto LABEL_31;
  }
  v121 = v31;
  v125 = v26;
  v120 = v17;
  v127 = v20;
  v123 = v15;
  v124 = v14;
  v128 = (char *)v133[0];
  v129 = v8;
  v126 = *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots];
  v35 = (uint64_t *)(v126 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v126 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v133, 0, 0);
  v36 = *v35;
  v37 = (unint64_t)*v35 >> 62;
  v122 = v29;
  if (v37)
  {
    if (v36 < 0)
      v47 = v36;
    else
      v47 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v38 = _CocoaArrayWrapper.endIndex.getter(v47);
    if (!v38)
      goto LABEL_20;
  }
  else
  {
    v38 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v36);
    if (!v38)
      goto LABEL_20;
  }
  if (v38 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  v39 = 0;
  do
  {
    if ((v36 & 0xC000000000000001) != 0)
      v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v36);
    else
      v40 = *(id *)(v36 + 8 * v39 + 32);
    v41 = v40;
    ++v39;
    v132 = v40;
    v42 = type metadata accessor for BorderedScreenshotView();
    v43 = sub_100020248(&qword_10080FAD8, 255, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v44 = v41;
    AnyHashable.init<A>(_:)(&v132, v42, v43);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v134, 1);
    sub_100018968((uint64_t)v134);
    v45 = *(id *)&v44[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
    v135.value.super.isa = 0;
    v135.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v135, v46);

  }
  while (v38 != v39);
LABEL_20:
  swift_bridgeObjectRelease(v36);
  Strong = swift_unknownObjectWeakLoadStrong(v126 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  v15 = a2;
  if (Strong)
  {
    v49 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_100828468), "setImage:", 0);
    v132 = v49;
    v50 = type metadata accessor for VideoView(0);
    v51 = sub_100020248((unint64_t *)&qword_10080FAE8, 255, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v52 = v49;
    AnyHashable.init<A>(_:)(&v132, v50, v51);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v134, 1);

    sub_100018968((uint64_t)v134);
  }
  v14 = *(_QWORD *)&v129[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView];
  v29 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v53 = *(id *)(v14 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v136.value.super.isa = 0;
  v136.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v136, v54);

  v55 = *(void **)(v14 + v29);
  a2 = type metadata accessor for ArtworkView(0);
  v56 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v57 = v55;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v57, 1, a2, v56);

  v20 = v128;
  v58 = swift_retain(v128);
  v59 = Lockup.icon.getter(v58);
  swift_release();
  if (v59)
  {
    v119 = v56;
    v60 = qword_100804E70;
    v38 = (uint64_t)*(id *)(v14 + v29);
    if (v60 == -1)
    {
LABEL_24:
      v61 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v62 = sub_10000EFC4(v61, (uint64_t)qword_100865F50);
      v63 = SmallLockupLayout.Metrics.artworkSize.getter(v62);
      v65 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend((id)v38, "contentMode"), 0, v63, v64);
      v66 = v130;
      Artwork.style.getter(v65);
      v67 = ArtworkView.style.setter(v66);
      *(_QWORD *)&v68 = Artwork.contentMode.getter(v67).n128_u64[0];
      v70 = ArtworkLoaderConfig.size.getter(objc_msgSend((id)v38, "setContentMode:", v69, v68));
      v72 = ArtworkView.imageSize.setter(v70, v71);
      v73 = Artwork.backgroundColor.getter(v72);
      if (!v73)
      {
        v74 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v73 = static UIColor.placeholderBackground.getter(v74);
      }
      ArtworkView.backgroundColor.setter(v73);
      v75 = *(id *)(v14 + v29);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v65, 2, 1, v75, a2, v119);
      swift_release();

      swift_release();
      goto LABEL_27;
    }
LABEL_49:
    swift_once(&qword_100804E70, sub_10020D688);
    goto LABEL_24;
  }
LABEL_27:
  v76 = *(id *)(v14 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView);
  sub_10044EF1C(v77, v131, v15);

  v78 = v127;
  v80.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v79);
  if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v80) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v123 + 8))(v78, v124);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_31;
  }
  v131 = v15;
  v81 = swift_retain(v20);
  v82 = Lockup.title.getter(v81);
  v84 = v83;
  swift_release();
  v85 = swift_retain(v20);
  v86 = Lockup.subtitle.getter(v85);
  v88 = v87;
  swift_release();
  v89 = swift_retain(v20);
  v90 = Lockup.searchAd.getter(v89);
  v91 = swift_release();
  if (v90)
  {
    v92 = SearchAd.advertisingText.getter(v91);
    v94 = v93;
    v91 = swift_release();
  }
  else
  {
    v92 = 0;
    v94 = 0;
  }
  v95 = (uint64_t)v128;
  v96 = MixedMediaLockup.metadataRibbonItems.getter(v91);
  v97 = MixedMediaLockup.searchTagRibbonItems.getter(v96);
  v98 = objc_msgSend(v129, "traitCollection");
  v99 = sub_100461314(v82, v84, v86, v88, v92, v94, v96, v97, a6, a7, v98);
  v101 = v100;

  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v96);
  swift_bridgeObjectRelease(v94);
  swift_bridgeObjectRelease(v88);
  swift_bridgeObjectRelease(v84);
  v103 = MixedMediaLockup.screenshots.getter(v102);
  v104 = v103;
  if ((unint64_t)v103 >> 62)
  {
    if (v103 >= 0)
      v103 &= 0xFFFFFFFFFFFFFF8uLL;
    v105 = _CocoaArrayWrapper.endIndex.getter(v103);
  }
  else
  {
    v105 = *(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v106 = v131;
  v107 = v129;
  if (v105)
  {
    if ((v104 & 0xC000000000000001) != 0)
    {
      v84 = (void (*)(_QWORD, _QWORD))specialized _ArrayBuffer._getElementSlowPath(_:)(0, v104);
    }
    else
    {
      if (!*(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_60;
      }
      v84 = *(void (**)(_QWORD, _QWORD))(v104 + 32);
      swift_retain(v84);
    }
    swift_bridgeObjectRelease(v104);
  }
  else
  {
    swift_bridgeObjectRelease(v104);
    v84 = 0;
  }
  v109 = MixedMediaLockup.trailers.getter(v108);
  v95 = v109;
  if (!((unint64_t)v109 >> 62))
  {
    if (*(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_44;
LABEL_56:
    *(_QWORD *)&v111 = swift_bridgeObjectRelease(v95).n128_u64[0];
    v110 = 0;
    goto LABEL_57;
  }
  if (v109 >= 0)
    v109 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v109))
    goto LABEL_56;
LABEL_44:
  if ((v95 & 0xC000000000000001) != 0)
  {
LABEL_60:
    v110 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v95);
    goto LABEL_47;
  }
  if (*(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v110 = *(_QWORD *)(v95 + 32);
    swift_retain(v110);
LABEL_47:
    *(_QWORD *)&v111 = swift_bridgeObjectRelease(v95).n128_u64[0];
LABEL_57:
    v112 = objc_msgSend(v107, "traitCollection", v111);
    v113 = (uint64_t)v120;
    MixedMediaLockup.screenshotsDisplayStyle.getter(v114);
    v115.n128_f64[0] = v99;
    sub_10010B258((uint64_t)v84, v110, (uint64_t)v112, v106, v113, v115, v101);
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    v116 = swift_release();
    v117 = *(void (**)(uint64_t, uint64_t, __n128))(v123 + 8);
    v118 = v124;
    v117(v113, v124, v116);
    ((void (*)(char *, uint64_t))v117)(v127, v118);
    return;
  }
  __break(1u);
}

uint64_t sub_1004600A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator, v19, 1, 0);
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  *v4 = 0;
  swift_release();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock, v18, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = 0;
  v5[1] = 0;
  sub_100018908(v6, v7);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView);
  v9 = (_QWORD *)(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator, v17, 1, 0);
  if (*v9)
  {
    swift_retain(*v9);
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  *v9 = 0;
  swift_release();
  v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock, &v16, 1, 0);
  v11 = *v10;
  v12 = v10[1];
  *v10 = 0;
  v10[1] = 0;
  sub_100018908(v11, v12);
  v13 = type metadata accessor for SearchTagsRibbonView(0);
  v14 = sub_100020248(&qword_1008248A0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v13, v14);
}

id sub_10046022C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdvertsSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AdvertsSearchResultContentView()
{
  return objc_opt_self(_TtC20ProductPageExtension30AdvertsSearchResultContentView);
}

void sub_1004602FC(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  sub_10044FE7C(a1, a2, a3);
  sub_10048E89C();
}

uint64_t sub_100460344()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots)+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
}

void sub_100460364(void *a1)
{
  sub_10048FC80();

}

void (*sub_10046039C(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots);
  a1[1] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  return sub_10023D054;
}

uint64_t sub_1004603F0(uint64_t a1, uint64_t a2)
{
  return sub_10046055C(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_disableAdvertRotation);
}

uint64_t sub_1004603FC(uint64_t a1, uint64_t a2)
{
  sub_100461D7C(a1, a2);
  return sub_100018908(a1, a2);
}

uint64_t (*sub_100460430(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10045E800((uint64_t)v2);
  return sub_10001C148;
}

uint64_t sub_100460474()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1004604BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_10046050C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100460550(uint64_t a1, uint64_t a2)
{
  return sub_10046055C(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock);
}

uint64_t sub_10046055C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v3 + *a3);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  sub_100018918(*v4, v4[1]);
  return v5;
}

uint64_t sub_1004605B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_10046060C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100460650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_100020248(&qword_1008248A0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

uint64_t sub_1004606DC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10066383C, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_100460710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10066383C, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_10046075C(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_10066383C, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

uint64_t sub_1004607C4(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100816F30, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_100663690);
}

uint64_t sub_1004607F0(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100824FE0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_1006636C0);
}

uint64_t sub_10046081C(uint64_t a1, uint64_t a2)
{
  return sub_100020248((unint64_t *)&unk_100824FE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_1006636DC);
}

uint64_t sub_100460848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100020248(&qword_100824FF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_10066380C);
  result = sub_100020248((unint64_t *)&unk_100825000, v3, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_10066373C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1004608A4(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  double v33;
  double v34;
  __n128 v35;
  void (*v36)(_QWORD, _QWORD);
  void (*v37)(_QWORD, _QWORD);
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  __n128 v61;
  __n128 v62;
  char *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  id v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  __n128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void *v118[2];

  v3 = v2;
  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, a2);
  v109 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v8);
  v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v111 = *(_QWORD *)(v11 - 8);
  v112 = v11;
  __chkstk_darwin(v11);
  v110 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v13);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PageGrid(0);
  v113 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v115 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v114 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v116 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AdvertsSearchResult(0);
  v24 = sub_100020248((unint64_t *)&unk_100825020, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v117 = a1;
  v25 = ItemLayoutContext.typedModel<A>(as:)(v118, v23, v23, v24);
  v26 = v118[0];
  if (!v118[0])
    return;
  v102 = v3;
  v27 = AdvertsSearchResult.lockups.getter(v25);
  v28 = v27;
  if (!((unint64_t)v27 >> 62))
  {
    if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_35:
    swift_release();
    swift_bridgeObjectRelease(v28);
    return;
  }
  if (v27 >= 0)
    v27 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v27))
    goto LABEL_35;
LABEL_4:
  v104 = v26;
  if ((v28 & 0xC000000000000001) != 0)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
LABEL_7:
    v103 = v21;
    v107 = v10;
    v29 = swift_bridgeObjectRelease(v28);
    v30.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v29);
    ItemLayoutContext.parentShelfLayoutContext.getter(v30);
    if (qword_1008059F8 == -1)
      goto LABEL_8;
    goto LABEL_38;
  }
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(_QWORD *)(v28 + 32);
    swift_retain(v23);
    goto LABEL_7;
  }
  __break(1u);
LABEL_38:
  swift_once(&qword_1008059F8, sub_1003A0ECC);
LABEL_8:
  v108 = v19;
  v101 = v5;
  v31 = qword_100867D20;
  swift_bridgeObjectRetain(qword_100867D20);
  PageGrid.init(from:breakpointOverrides:)(v18, v31);
  v32 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v34 = v33;
  v35 = swift_retain(v23);
  v106 = Lockup.title.getter(v35);
  v37 = v36;
  swift_release();
  v38 = swift_retain(v23);
  v105 = Lockup.subtitle.getter(v38);
  v40 = v39;
  swift_release();
  v41 = swift_retain(v23);
  v42 = Lockup.searchAd.getter(v41);
  v43 = swift_release();
  v100 = v7;
  if (v42)
  {
    v44 = SearchAd.advertisingText.getter(v43);
    v46 = v45;
    v43 = swift_release();
  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v47 = MixedMediaLockup.metadataRibbonItems.getter(v43);
  v48 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v15, 1, 1, v48);
  v50 = MixedMediaLockup.searchTagRibbonItems.getter(v49);
  swift_getKeyPath(&unk_1006638B0);
  ItemLayoutContext.subscript.getter(v118);
  v51 = swift_release();
  v52 = v118[0];
  v51.n128_u64[0] = v32;
  sub_100452B44(v106, v37, v105, v40, v44, v46, v47, (uint64_t)v15, v51, v34, v50, v118[0]);

  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v37);
  v53 = sub_100010F2C((uint64_t)v15, (uint64_t *)&unk_100825010);
  v54 = MixedMediaLockup.screenshots.getter(v53);
  v55 = v54;
  if ((unint64_t)v54 >> 62)
  {
    if (v54 >= 0)
      v54 &= 0xFFFFFFFFFFFFFF8uLL;
    v56 = _CocoaArrayWrapper.endIndex.getter(v54);
  }
  else
  {
    v56 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v58 = (uint64_t)v107;
  v57 = v108;
  v59 = v116;
  v61 = swift_bridgeObjectRelease(v55);
  if (!v56)
  {
    v75 = MixedMediaLockup.trailers.getter(v60);
    v72 = v75;
    if ((unint64_t)v75 >> 62)
    {
      if (v75 >= 0)
        v75 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v75))
      {
LABEL_24:
        if ((v72 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_86;
          }
          swift_retain(*(_QWORD *)(v72 + 32));
          goto LABEL_27;
        }
        goto LABEL_84;
      }
    }
    else if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
    v97 = swift_bridgeObjectRelease(v72);
    ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v97);
    goto LABEL_81;
  }
  if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v61) & 1) == 0)
  {
LABEL_81:
    swift_release();
    v98 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v113 + 8))(v115, v57, v98);
    (*(void (**)(id, uint64_t))(v114 + 8))(v59, v103);
    return;
  }
  while (1)
  {
    v63 = v110;
    static StandardSearchResultContentViewMetrics.bottomMargin.getter(v62);
    swift_getKeyPath(&unk_1006638B0);
    ItemLayoutContext.subscript.getter(v118);
    swift_release();
    v64 = v118[0];
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v65 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v66 = swift_allocObject(v65, 40, 7);
    *(_OWORD *)(v66 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v66 + 32) = v64;
    v59 = v64;
    v67 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v66);
    v68 = sub_100354980();
    v69 = v112;
    dispatch thunk of AnyDimension.rawValue(in:)(v67, v112, v68);

    v70 = (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v63, v69);
    v71 = MixedMediaLockup.screenshots.getter(v70);
    v72 = v71;
    if ((unint64_t)v71 >> 62)
      break;
    if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_45;
LABEL_18:
    if ((v72 & 0xC000000000000001) != 0)
    {
      v73 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v72);
      goto LABEL_21;
    }
    if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v73 = *(_QWORD *)(v72 + 32);
      swift_retain(v73);
LABEL_21:
      swift_bridgeObjectRelease(v72);
      goto LABEL_46;
    }
    __break(1u);
LABEL_84:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v72);
LABEL_27:
    swift_bridgeObjectRelease(v72);
    v72 = Trailers.videos.getter(v76);
    swift_release();
    if ((unint64_t)v72 >> 62)
    {
LABEL_86:
      if (v72 < 0)
        v99 = v72;
      else
        v99 = v72 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v72);
      v77 = _CocoaArrayWrapper.endIndex.getter(v99);
      swift_bridgeObjectRelease(v72);
    }
    else
    {
      v77 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v78 = swift_bridgeObjectRelease(v72);
    if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v78) & 1) == 0 || !v77)
      goto LABEL_81;
  }
  if (v71 >= 0)
    v71 &= 0xFFFFFFFFFFFFFF8uLL;
  if (_CocoaArrayWrapper.endIndex.getter(v71))
    goto LABEL_18;
LABEL_45:
  swift_bridgeObjectRelease(v72);
  v73 = 0;
LABEL_46:
  v79 = MixedMediaLockup.trailers.getter(v74);
  v80 = v79;
  if ((unint64_t)v79 >> 62)
  {
    if (v79 >= 0)
      v79 &= 0xFFFFFFFFFFFFFF8uLL;
    if (!_CocoaArrayWrapper.endIndex.getter(v79))
      goto LABEL_55;
LABEL_48:
    if ((v80 & 0xC000000000000001) != 0)
    {
      v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v80);
    }
    else
    {
      if (!*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_92;
      }
      v40 = *(_QWORD *)(v80 + 32);
      swift_retain(v40);
    }
    v81 = swift_bridgeObjectRelease(v80);
    goto LABEL_56;
  }
  if (*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_55:
  v81 = swift_bridgeObjectRelease(v80);
  v40 = 0;
LABEL_56:
  v82 = (id)ASKDeviceTypeGetCurrent(v81);
  swift_getKeyPath(&unk_1006638B0);
  ItemLayoutContext.subscript.getter(v118);
  swift_release();
  v83 = v118[0];
  sub_1003ABC70((uint64_t)v82, v58);

  v85 = MixedMediaLockup.screenshots.getter(v84);
  v80 = v85;
  if ((unint64_t)v85 >> 62)
  {
    if (v85 >= 0)
      v85 &= 0xFFFFFFFFFFFFFF8uLL;
    if (!_CocoaArrayWrapper.endIndex.getter(v85))
      goto LABEL_65;
LABEL_58:
    if ((v80 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_94;
      }
      v82 = *(id *)(v80 + 32);
      swift_retain(v82);
LABEL_61:
      swift_bridgeObjectRelease(v80);
      goto LABEL_66;
    }
LABEL_92:
    v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v80);
    goto LABEL_61;
  }
  if (*(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_58;
LABEL_65:
  swift_bridgeObjectRelease(v80);
  v82 = 0;
LABEL_66:
  v87 = MixedMediaLockup.trailers.getter(v86);
  v80 = v87;
  if ((unint64_t)v87 >> 62)
  {
    if (v87 >= 0)
      v87 &= 0xFFFFFFFFFFFFFF8uLL;
    if (!_CocoaArrayWrapper.endIndex.getter(v87))
      goto LABEL_75;
LABEL_68:
    if ((v80 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v88 = v73;
      v89 = *(_QWORD *)(v80 + 32);
      swift_retain(v89);
LABEL_71:
      v90 = v58;
      swift_bridgeObjectRelease(v80);
      goto LABEL_76;
    }
LABEL_94:
    v88 = v73;
    v89 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v80);
    goto LABEL_71;
  }
  if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_68;
LABEL_75:
  v88 = v73;
  v90 = v58;
  swift_bridgeObjectRelease(v80);
  v89 = 0;
LABEL_76:
  type metadata accessor for LockupMediaView(0);
  v91 = (uint64_t)v100;
  v92 = (uint64_t)v116;
  sub_10048D0D4((uint64_t)v82, v89, (uint64_t)v116, (uint64_t)v100, v93);
  swift_release();
  swift_release();
  v94 = sub_10052A948();
  swift_getObjectType();
  v95.n128_u64[0] = v32;
  sub_10010BBCC(v88, v40, v90, v95, v34, v91, (uint64_t)v94, v92);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v96 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v109 + 8))(v91, v101, v96);
  sub_100010F2C(v90, (uint64_t *)&unk_100811F20);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v108);
  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v92, v103);
}

double sub_100461314(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, void *a11)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a6;
  v36 = a7;
  v19 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v37 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v22);
  v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v26 = ((__n128 (*)(char *, uint64_t, uint64_t, uint64_t))*(_QWORD *)(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26.n128_f64[0] = a9;
  sub_100452B44(a1, a2, a3, a4, a5, v35, v36, (uint64_t)v24, v26, a10, a8, a11);
  sub_100010F2C((uint64_t)v24, (uint64_t *)&unk_100825010);
  static StandardSearchResultContentViewMetrics.bottomMargin.getter(v27);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v28 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v29 = swift_allocObject(v28, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v29 + 32) = a11;
  v30 = a11;
  v31 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v29);
  v32 = sub_100354980();
  dispatch thunk of AnyDimension.rawValue(in:)(v31, v19, v32);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v19);
  return a9;
}

uint64_t sub_1004614FC(uint64_t KeyPath, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  _QWORD *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  _QWORD *v53;
  __n128 v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  double *v82;
  __n128 v83;
  __n128 v84;
  double *v85;
  __n128 v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  double *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  void *v104;
  double *v105;

  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, a3);
  v95 = *(_QWORD *)(v5 - 8);
  v96 = v5;
  __chkstk_darwin(v5);
  v94 = (uint64_t)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v97 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)type metadata accessor for PageGrid(0);
  v14 = *(v13 - 1);
  __chkstk_darwin(v13);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AdvertsSearchResult(0);
  v18 = sub_100020248((unint64_t *)&unk_100825020, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AdvertsSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = (uint64_t)ItemLayoutContext.typedModel<A>(as:)(&v105, v17, v17, v18);
  v91 = v105;
  if (!v105)
    return result;
  v105 = _swiftEmptyArrayStorage;
  ItemLayoutContext.parentShelfLayoutContext.getter(v20);
  if (qword_1008059F8 != -1)
    goto LABEL_78;
  while (2)
  {
    v21 = qword_100867D20;
    swift_bridgeObjectRetain(qword_100867D20);
    v22 = PageGrid.init(from:breakpointOverrides:)(v12, v21);
    v23.n128_f64[0] = PageGrid.columnWidth.getter(v22);
    v24 = v23.n128_f64[0];
    sub_1004608A4(KeyPath, v23);
    v26 = v25;
    v28 = AdvertsSearchResult.lockups.getter(v27);
    v29 = v28;
    if (!((unint64_t)v28 >> 62))
    {
      result = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!result)
        break;
      goto LABEL_5;
    }
    if (v28 >= 0)
      v28 &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(v28);
    if (result)
    {
LABEL_5:
      if (result < 1)
      {
        __break(1u);
        return result;
      }
      v87 = v16;
      v88 = v14;
      v89 = v13;
      v90 = a2;
      v16 = 0;
      v102 = v29;
      v103 = v29 & 0xC000000000000001;
      v92 = v8;
      v93 = v7;
      v30 = v97;
      v100 = KeyPath;
      v101 = (char *)result;
      while (1)
      {
        if (v103)
        {
          v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v29);
        }
        else
        {
          v12 = *(char **)(v29 + 8 * (_QWORD)v16 + 32);
          swift_retain(v12);
        }
        v31 = swift_retain(v12);
        v32 = Lockup.icon.getter(v31);
        v33 = swift_release();
        if (v32)
        {
          if (qword_100804E70 != -1)
            swift_once(&qword_100804E70, sub_10020D688);
          v34 = type metadata accessor for SmallLockupLayout.Metrics(0);
          v35 = sub_10000EFC4(v34, (uint64_t)qword_100865F50);
          v36 = SmallLockupLayout.Metrics.artworkSize.getter(v35);
          v38 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v36, v37);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
          v40 = *(_QWORD *)(((unint64_t)v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v39 = *(_QWORD *)(((unint64_t)v105 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v40 >= v39 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
          v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
          specialized Array._endMutation()(v41);
          v33 = swift_release();
        }
        v42 = MixedMediaLockup.metadataRibbonItems.getter(v33);
        swift_getKeyPath(&unk_1006638B0);
        ItemLayoutContext.subscript.getter(&v104);
        v43 = swift_release();
        v44 = v104;
        v45 = sub_10044F2C4(v42, (uint64_t)v104, v43);

        swift_bridgeObjectRelease(v42);
        sub_10001A478((uint64_t)v45);
        MixedMediaLockup.screenshotsDisplayStyle.getter(v46);
        v48 = MixedMediaLockup.screenshots.getter(v47);
        v49 = v48;
        if ((unint64_t)v48 >> 62)
        {
          if (v48 >= 0)
            v48 &= 0xFFFFFFFFFFFFFF8uLL;
          v50 = _CocoaArrayWrapper.endIndex.getter(v48);
        }
        else
        {
          v50 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v51 = swift_bridgeObjectRelease(v49);
        if (v50)
        {
          if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v51) & 1) != 0)
            break;
        }
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v30, v7);
        swift_release();
LABEL_8:
        ++v16;
        v29 = v102;
        if (v101 == v16)
        {
          swift_bridgeObjectRelease(v102);
          v85 = v105;
          v13 = v89;
          v14 = v88;
          v16 = v87;
          goto LABEL_83;
        }
      }
      v52 = swift_retain(v12);
      v99 = Lockup.title.getter(v52);
      v13 = v53;
      swift_release();
      v54 = swift_retain(v12);
      v98 = Lockup.subtitle.getter(v54);
      v14 = v55;
      swift_release();
      v56 = swift_retain(v12);
      v57 = Lockup.searchAd.getter(v56);
      v58 = swift_release();
      if (v57)
      {
        a2 = SearchAd.advertisingText.getter(v58);
        v60 = v59;
        v58 = swift_release();
      }
      else
      {
        a2 = 0;
        v60 = 0;
      }
      v8 = MixedMediaLockup.metadataRibbonItems.getter(v58);
      v7 = MixedMediaLockup.searchTagRibbonItems.getter(v8);
      KeyPath = swift_getKeyPath(&unk_1006638B0);
      ItemLayoutContext.subscript.getter(&v104);
      swift_release();
      v61 = v104;
      v62 = sub_100461314(v99, (void (*)(_QWORD, _QWORD))v13, v98, v14, a2, v60, v8, v7, v24, v26, v104);
      v64 = v63;

      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v13);
      v66 = MixedMediaLockup.screenshots.getter(v65);
      v67 = v66;
      if ((unint64_t)v66 >> 62)
      {
        if (v66 >= 0)
          v66 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v66))
          goto LABEL_27;
      }
      else if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_27:
        if ((v67 & 0xC000000000000001) != 0)
        {
          v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v67);
        }
        else
        {
          if (!*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            swift_once(&qword_1008059F8, sub_1003A0ECC);
            continue;
          }
          v7 = *(_QWORD *)(v67 + 32);
          swift_retain(v7);
        }
        swift_bridgeObjectRelease(v67);
LABEL_38:
        v69 = MixedMediaLockup.trailers.getter(v68);
        v70 = v69;
        if ((unint64_t)v69 >> 62)
        {
          if (v69 >= 0)
            v69 &= 0xFFFFFFFFFFFFFF8uLL;
          if (_CocoaArrayWrapper.endIndex.getter(v69))
            goto LABEL_40;
        }
        else if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_40:
          if ((v70 & 0xC000000000000001) != 0)
          {
            v13 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v70);
          }
          else
          {
            if (!*(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_75;
            v13 = *(_QWORD **)(v70 + 32);
            swift_retain(v13);
          }
          swift_bridgeObjectRelease(v70);
LABEL_48:
          v72 = MixedMediaLockup.screenshots.getter(v71);
          v73 = v72;
          if ((unint64_t)v72 >> 62)
          {
            if (v72 >= 0)
              v72 &= 0xFFFFFFFFFFFFFF8uLL;
            if (_CocoaArrayWrapper.endIndex.getter(v72))
              goto LABEL_50;
          }
          else if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_50:
            if ((v73 & 0xC000000000000001) != 0)
            {
              v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v73);
            }
            else
            {
              if (!*(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_76;
              v14 = *(_QWORD *)(v73 + 32);
              swift_retain(v14);
            }
            swift_bridgeObjectRelease(v73);
LABEL_58:
            v75 = MixedMediaLockup.trailers.getter(v74);
            v76 = v75;
            if ((unint64_t)v75 >> 62)
            {
              if (v75 >= 0)
                v75 &= 0xFFFFFFFFFFFFFF8uLL;
              if (_CocoaArrayWrapper.endIndex.getter(v75))
                goto LABEL_60;
            }
            else if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_60:
              if ((v76 & 0xC000000000000001) != 0)
              {
                v77 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v76);
              }
              else
              {
                if (!*(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_77;
                v77 = *(_QWORD *)(v76 + 32);
                swift_retain(v77);
              }
              v78 = swift_bridgeObjectRelease(v76);
              goto LABEL_68;
            }
            v78 = swift_bridgeObjectRelease(v76);
            v77 = 0;
LABEL_68:
            v79 = v94;
            v80 = v97;
            sub_10048D0D4(v14, v77, v97, v94, v78);
            v30 = v80;
            swift_release();
            swift_release();
            v81 = sub_10052A948();
            v82 = sub_10010CB74(v7, (uint64_t)v13, v79, v81, v62, v64);
            swift_unknownObjectRelease();
            swift_release();
            v83 = swift_release();
            (*(void (**)(uint64_t, uint64_t, __n128))(v95 + 8))(v79, v96, v83);
            sub_10001A478((uint64_t)v82);
            v84 = swift_release();
            v8 = v92;
            v7 = v93;
            (*(void (**)(uint64_t, uint64_t, __n128))(v92 + 8))(v80, v93, v84);
            goto LABEL_8;
          }
          swift_bridgeObjectRelease(v73);
          v14 = 0;
          goto LABEL_58;
        }
        swift_bridgeObjectRelease(v70);
        v13 = 0;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease(v67);
      v7 = 0;
      goto LABEL_38;
    }
    break;
  }
  swift_bridgeObjectRelease(v29);
  v85 = _swiftEmptyArrayStorage;
LABEL_83:
  ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v85);
  swift_release();
  v86 = swift_bridgeObjectRelease(v85);
  return (*(uint64_t (**)(char *, _QWORD *, __n128))(v14 + 8))(v16, v13, v86);
}

id sub_100461D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE v11[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_disableAdvertRotation);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_disableAdvertRotation, v11, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  sub_100018918(a1, a2);
  sub_100018908(v6, v7);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView);
  v9 = *(void **)(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchAdTransparencyButton);
  if (v9)
    objc_msgSend(v9, "addTarget:action:forControlEvents:", v2, "disableAdvertRotationTap", 64);
  return objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton), "addTarget:action:forControlEvents:", v2, "disableAdvertRotationTap", 64);
}

void sub_100461E54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::Bool v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  Swift::Bool v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE v43[40];
  char v44[24];
  UIImage_optional v45;
  UIImage_optional v46;
  UIImage_optional v47;

  v38 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots);
  v1 = (uint64_t *)(v38 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v38 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v44, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v12 = *v1;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v3)
      goto LABEL_13;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (!v3)
      goto LABEL_13;
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    ++v4;
    v42 = v5;
    v7 = type metadata accessor for BorderedScreenshotView();
    v8 = sub_100020248(&qword_10080FAD8, 255, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v9 = v6;
    AnyHashable.init<A>(_:)(&v42, v7, v8);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v43, 1);
    sub_100018968((uint64_t)v43);
    v10 = *(id *)&v9[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
    v45.value.super.isa = 0;
    v45.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v45, v11);

  }
  while (v3 != v4);
LABEL_13:
  swift_bridgeObjectRelease(v2);
  Strong = swift_unknownObjectWeakLoadStrong(v38 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v14 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_100828468), "setImage:", 0);
    v42 = v14;
    v15 = type metadata accessor for VideoView(0);
    v16 = sub_100020248((unint64_t *)&qword_10080FAE8, 255, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v17 = v14;
    AnyHashable.init<A>(_:)(&v42, v15, v16);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v43, 1);

    sub_100018968((uint64_t)v43);
  }
  v18 = *(_QWORD *)(v40 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView);
  v19 = *(char **)(v18 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView);
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v41 = *(_QWORD *)(v40 + OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView);
    v22 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
    v39 = v19;
    swift_bridgeObjectRetain(v20);
    v23 = 32;
    do
    {
      v24 = *(void **)(v20 + v23);
      v25 = swift_dynamicCastClass(v24, v22);
      if (v25)
      {
        v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView);
        v27 = v24;
        v46.value.super.isa = 0;
        v46.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v46, v28);
        v29 = type metadata accessor for ArtworkView(0);
        v30 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v26, 1, v29, v30);

      }
      v23 += 16;
      --v21;
    }
    while (v21);

    swift_bridgeObjectRelease(v20);
    v18 = v41;
  }
  v31 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v32 = *(id *)(v18 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v47.value.super.isa = 0;
  v47.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v47, v33);

  v34 = *(void **)(v18 + v31);
  v35 = type metadata accessor for ArtworkView(0);
  v36 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v37 = v34;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v37, 1, v35, v36);

}

void sub_100462230()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;

  v1 = OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_screenshots;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_preferredImageSizes] = _swiftEmptyDictionarySingleton;
  v3 = &v0[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_disableAdvertRotation];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsCalculator] = 0;
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension30AdvertsSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/AdvertsSearchResultContentView.swift", 57, 2, 81, 0);
  __break(1u);
}

uint64_t sub_100462328()
{
  return sub_10000E720(&qword_100825040, type metadata accessor for SmallGameCenterPlayerCollectionViewCell, (uint64_t)&unk_1006638E0);
}

double sub_100462358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  double v48;
  double v49;
  int v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[5];
  _QWORD v76[5];
  _OWORD v77[11];

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v64 = (_QWORD *)((char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LabelPlaceholderCompatibility(0, v5);
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SmallGameCenterPlayer(0, v9);
  v13 = sub_10000E720(&qword_100822BE8, (uint64_t (*)(uint64_t))&type metadata accessor for SmallGameCenterPlayer, (uint64_t)&protocol conformance descriptor for GameCenterPlayer);
  ItemLayoutContext.typedModel<A>(as:)(&v67, v12, v12, v13);
  v14 = v67;
  if (!(_QWORD)v67)
    return 0.0;
  if (qword_100804A68 != -1)
    swift_once(&qword_100804A68, sub_10012E504);
  v60 = v1;
  v61 = v0;
  sub_10012F57C(&xmmword_1008652F0, v77);
  v15 = v77[0];
  v16 = type metadata accessor for LayoutViewPlaceholder(0);
  v17 = *(unsigned int *)(v16 + 48);
  v18 = *(unsigned __int16 *)(v16 + 52);
  v58 = v16;
  swift_allocObject(v16, v17, v18);
  v59 = LayoutViewPlaceholder.init(representing:)(*(double *)&v15, *((double *)&v15 + 1));
  v19 = swift_retain(v14);
  v20 = GameCenterPlayer.alias.getter(v19);
  v54 = v21;
  v55 = v20;
  swift_release();
  v22 = sub_10005BD18();
  v65 = v14;
  if (qword_100806378 != -1)
    swift_once(&qword_100806378, sub_1004C7E40);
  v23 = sub_10000EFC4(v3, (uint64_t)qword_100869B40);
  v57 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v57(v7, v23, v3);
  swift_getKeyPath(&unk_100663930);
  ItemLayoutContext.subscript.getter(&v67);
  swift_release();
  v24 = (void *)v67;
  v25 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v7, v67);

  v56 = *(void (**)(char *, uint64_t))(v4 + 8);
  v56(v7, v3);
  v26 = type metadata accessor for Feature(0);
  v52[1] = v22;
  v27 = v26;
  v68 = v26;
  v53 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v69 = v53;
  v28 = sub_1000119C0(&v67);
  v29 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v52[0] = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v52[0])(v28, enum case for Feature.measurement_with_labelplaceholder(_:), v27);
  v30 = isFeatureEnabled(_:)(&v67);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v67);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v55, v54, v25, 4, 0, 0, 1, 0, v30 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v76, v31);
  v32 = v63;
  v62 = *(_QWORD *)(v62 + 8);
  ((void (*)(char *, uint64_t))v62)(v11, v63);
  swift_retain(v65);
  v34 = GameCenterPlayer.displayName.getter(v33);
  v54 = v35;
  v55 = v34;
  swift_release();
  if (qword_100806380 != -1)
    swift_once(&qword_100806380, sub_1004C7E58);
  v36 = sub_10000EFC4(v3, (uint64_t)qword_100869B58);
  v57(v7, v36, v3);
  swift_getKeyPath(&unk_100663930);
  ItemLayoutContext.subscript.getter(&v67);
  swift_release();
  v37 = (void *)v67;
  v38 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v7, v67);

  v56(v7, v3);
  v68 = v27;
  v69 = v53;
  v39 = sub_1000119C0(&v67);
  ((void (*)(_QWORD *, uint64_t, uint64_t))v52[0])(v39, v29, v27);
  v40 = isFeatureEnabled(_:)(&v67);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v67);
  LOBYTE(v51) = v40 & 1;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v55, v54, v38, 4, 0, 0, 1, 0, v51);
  LabelPlaceholderCompatibility.layoutTextView.getter(v75, v41);
  ((void (*)(char *, uint64_t))v62)(v11, v32);
  sub_10012F57C(v77, &v67);
  v42 = v59;
  v71 = v58;
  v72 = &protocol witness table for LayoutViewPlaceholder;
  v70 = v59;
  sub_10000EF80((uint64_t)v76, (uint64_t)&v74);
  sub_10000EF80((uint64_t)v75, (uint64_t)&v73);
  swift_getKeyPath(&unk_100663960);
  swift_retain(v42);
  v43 = v64;
  ItemLayoutContext.subscript.getter(v64);
  swift_release();
  v44 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v46 = v45;
  (*(void (**)(_QWORD *, uint64_t))(v60 + 8))(v43, v61);
  swift_getKeyPath(&unk_100663990);
  ItemLayoutContext.subscript.getter(&v66);
  swift_release();
  v47 = v66;
  swift_getObjectType();
  sub_1004D44B0(v47, (uint64_t)&v67, v44, v46);
  v49 = v48;
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_10012F5B8(&v67);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v75);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
  sub_100428D04(v77);
  return v49;
}

unint64_t sub_100462914()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100817D10;
  if (!qword_100817D10)
  {
    v1 = type metadata accessor for PosterLockupCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_1006639BC, v1);
    atomic_store(result, (unint64_t *)&qword_100817D10);
  }
  return result;
}

double sub_10046295C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v19;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AspectRatio(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfLayoutContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = ItemLayoutContext.parentShelfLayoutContext.getter(v10);
  v14 = static PosterLockupLayout.aspectRatio.getter(v13);
  v15 = ShelfLayoutContext.contentPageGrid.getter(v14);
  v16 = PageGrid.smallestPossibleColumnWidth.getter(v15);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v17 = AspectRatio.height(fromWidth:)(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v17;
}

double sub_100462AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v14;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AspectRatio(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static PosterLockupLayout.aspectRatio.getter(v8);
  v10 = ShelfLayoutContext.contentPageGrid.getter(v9);
  v11 = PageGrid.smallestPossibleColumnWidth.getter(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v12 = AspectRatio.height(fromWidth:)(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

void sub_100462BB8()
{
  qword_100825048 = 0x4020000000000000;
}

void sub_100462BC8()
{
  qword_100825050 = 0x4028000000000000;
}

uint64_t sub_100462BD8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100825058);
  sub_10000EFC4(v5, (uint64_t)qword_100825058);
  if (qword_100806598 != -1)
    swift_once(&qword_100806598, sub_1004C95D0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_10086A1A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 18.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100462D24(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  NSString *v9;
  _QWORD v12[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100825070);
  sub_10000EFC4(v5, (uint64_t)qword_100825070);
  *(_QWORD *)v4 = UIFontTextStyleCaption2;
  *((_DWORD *)v4 + 2) = 0;
  v6 = enum case for FontUseCase.preferredFont(_:);
  v7 = type metadata accessor for FontUseCase(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v4, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v12[3] = v1;
  v12[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v12);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  v9 = UIFontTextStyleCaption2;
  StaticDimension.init(_:scaledLike:)(v12, 38.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100462E60()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;

  v0._object = (void *)0x80000001006A5950;
  v0._countAndFlagsBits = 0xD000000000000014;
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  v3 = localizedString(_:comment:)(v0, v1);
  result = v3._countAndFlagsBits;
  xmmword_100825088 = (__int128)v3;
  return result;
}

void sub_100462EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t, __n128);
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;

  v65 = a2;
  v69 = type metadata accessor for Artwork.Style(0, a2);
  v64 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v63 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (unint64_t)&v54 - v6;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v54 - v10;
  v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack), "subviews", v9));
  v13 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)a1 >> 62)
    goto LABEL_35;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v15)
  {
LABEL_39:
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(a1);
    return;
  }
LABEL_3:
  v72 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    if (!((unint64_t)v14 >> 62))
    {
LABEL_6:
      v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v17)
        goto LABEL_45;
LABEL_7:
      v61 = v7;
      v7 = 0;
      v71 = v14 & 0xC000000000000001;
      v56 = v14 + 32;
      v57 = v14 & 0xFFFFFFFFFFFFFF8;
      v58 = enum case for Artwork.Style.roundedRect(_:);
      v54 = a1 + 40;
      v55 = a1 & 0xFFFFFFFFFFFFFF8;
      v70 = (char *)(v15 - 1);
      v62 = a1;
      v59 = v14;
      v60 = v11;
      v66 = v17;
      while (1)
      {
        if (v71)
        {
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v14);
        }
        else
        {
          if (v7 >= *(_QWORD *)(v57 + 16))
            goto LABEL_33;
          v18 = *(id *)(v56 + 8 * v7);
        }
        v19 = v18;
        v20 = type metadata accessor for BundleChildView();
        v21 = swift_dynamicCastClass(v19, v20);
        if (v21)
        {
          v22 = v21;
          v23 = v19;
          v25 = Lockup.icon.getter(v24);
          if (v25)
          {
            v67 = v23;
            v68 = v16;
            v26 = v61;
            Artwork.style.getter(v25);
            v28 = v63;
            v27 = v64;
            v29 = v69;
            (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, v58, v69);
            Artwork.Style.orIfUnspecified(_:)(v28);
            v30 = *(void (**)(char *, uint64_t))(v27 + 8);
            v30(v28, v29);
            v31 = v29;
            v32 = (void (*)(char *, uint64_t, __n128))v30;
            v30((char *)v26, v31);
            if (qword_100804658 != -1)
              swift_once(&qword_100804658, sub_10005514C);
            v33 = *(double *)&qword_100864998;
            v34 = Artwork.Style.iconHeight(fromWidth:)(*(double *)&qword_100864998);
            v35 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon;
            v36 = *(void **)(v22 + OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon);
            v37 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v36, "contentMode"), 0, v33, v34);
            v38 = v36;
            Artwork.style.getter(v38);
            v39 = ArtworkView.style.setter(v26);
            *(_QWORD *)&v40 = Artwork.contentMode.getter(v39).n128_u64[0];
            v42 = ArtworkLoaderConfig.size.getter(objc_msgSend(v38, "setContentMode:", v41, v40));
            v44 = ArtworkView.imageSize.setter(v42, v43);
            v45 = Artwork.backgroundColor.getter(v44);
            if (!v45)
            {
              v46 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
              v45 = static UIColor.placeholderBackground.getter(v46);
            }
            ArtworkView.backgroundColor.setter(v45);

            v47 = *(_QWORD *)(v22 + v35);
            v48 = type metadata accessor for ArtworkView(0);
            v49 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
            ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v37, 2, 1, v47, v48, v49);

            swift_release();
            swift_release();
            v50 = swift_release();
            v11 = v60;
            v32(v60, v69, v50);
            a1 = v62;
            v14 = v59;
          }
          else
          {
            swift_release();

          }
          v17 = v66;
        }
        else
        {
          swift_release();
        }

        if (v70 == (char *)v7)
          goto LABEL_39;
        v51 = (char *)(v7 + 1);
        if (v72)
        {
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 + 1, a1);
          if (__OFADD__(v51, 1))
            goto LABEL_32;
        }
        else
        {
          if ((unint64_t)v51 >= *(_QWORD *)(v55 + 16))
            goto LABEL_34;
          v16 = *(_QWORD *)(v54 + 8 * v7);
          swift_retain(v16);
          if (__OFADD__(v51, 1))
          {
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            if (a1 < 0)
              v52 = a1;
            else
              v52 = a1 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(a1);
            v15 = _CocoaArrayWrapper.endIndex.getter(v52);
            if (!v15)
              goto LABEL_39;
            goto LABEL_3;
          }
        }
        if (v17 == ++v7)
          goto LABEL_45;
      }
    }
LABEL_41:
    if (v14 < 0)
      v53 = v14;
    else
      v53 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v17 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v14);
    if (!v17)
    {
LABEL_45:
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(a1);
      swift_release();
      return;
    }
    goto LABEL_7;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(_QWORD *)(a1 + 32);
    swift_retain(v16);
    if (!((unint64_t)v14 >> 62))
      goto LABEL_6;
    goto LABEL_41;
  }
  __break(1u);
}

void sub_100463440()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Bool v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  UIImage_optional v19;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack), "subviews"));
  v2 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v18 = v3;
  else
    v18 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_15;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      v8 = type metadata accessor for BundleChildView();
      v9 = swift_dynamicCastClass(v7, v8);
      if (v9)
      {
        v10 = v9;
        v11 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon;
        v12 = *(id *)(v9 + OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon);
        v19.value.super.isa = 0;
        v19.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v19, v13);

        v14 = *(void **)(v10 + v11);
        v15 = type metadata accessor for ArtworkView(0);
        v16 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        v17 = v14;
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v17, 1, v15, v16);

        v7 = v17;
      }

    }
    goto LABEL_15;
  }
  __break(1u);
}

void sub_1004635FC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::Bool v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];
  uint64_t v20;
  UIImage_optional v21;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack), "subviews"));
  v2 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v18 = v3;
  else
    v18 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_18;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = 0;
    v6 = v0 + OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemReusePool;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v11 = *(id *)(v3 + 8 * v5 + 32);
      v12 = v11;
      v13 = type metadata accessor for BundleChildView();
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v7 = v14;
        v8 = *(id *)(v14 + OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon);
        v21.value.super.isa = 0;
        v21.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v21, v9);

        v20 = v7;
        swift_beginAccess(v6, v19, 33, 0);
        v10 = sub_10000DAF8(&qword_1008250F0);
        ReusePool.recycle(_:)(&v20, v10);
        swift_endAccess(v19);
      }
      else
      {
        v15 = type metadata accessor for IconSilhouetteView(0);
        v16 = swift_dynamicCastClass(v12, v15);
        if (v16)
        {
          v17 = (void *)v16;
          objc_msgSend(*(id *)(v16 + OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel), "setText:", 0);
          objc_msgSend(v17, "removeFromSuperview");
        }
      }

      ++v5;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease(v3);
  }
}

id sub_100463820(uint64_t a1)
{
  char *v1;
  char *v2;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  double v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  NSString v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  _BYTE v27[24];
  char *v28;

  sub_1004635FC();
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 <= 4)
    v5 = v4;
  else
    v5 = 3;
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v24 = v4;
  v25 = v1;
  if (!v5)
    goto LABEL_18;
  v2 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack];
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0 && (unint64_t)(v5 - 1) >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v6 = 0;
  v7 = &v1[OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemReusePool];
  v8 = a1;
  do
  {
    if (v26)
      specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
    else
      swift_retain(*(_QWORD *)(a1 + 8 * v6 + 32));
    swift_beginAccess(v7, v27, 33, 0);
    v12 = sub_10000DAF8(&qword_1008250F0);
    ReusePool.dequeue(or:)(&v28, sub_100463B28, 0, v12);
    swift_endAccess(v27);
    v13 = v28;
    v14 = *(id *)&v28[OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_titleLabel];
    Lockup.title.getter(v15);
    if (v16)
    {
      v9 = v16;
      v10 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v9).n128_u64[0];
    }
    else
    {
      v10 = 0;
    }
    ++v6;
    objc_msgSend(v14, "setText:", v10, v11);

    objc_msgSend(v2, "addSubview:", v13);
    swift_release();

    a1 = v8;
  }
  while (v5 != v6);
LABEL_18:
  v2 = v25;
  if (v24 >= 5)
  {
    v4 = v24 - 3;
    v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IconSilhouetteView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    if (qword_100804658 == -1)
    {
LABEL_20:
      *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_preferredIconWidth] = qword_100864998;
      v17 = *(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension18IconSilhouetteView_titleLabel];
      v18._object = (void *)0x80000001006A5970;
      v18._countAndFlagsBits = 0xD000000000000027;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      object = localizedStringWithCount(_:count:comment:)(v18, v4, v19)._object;
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "setText:", v21, swift_bridgeObjectRelease(object).n128_f64[0]);

      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack], "addSubview:", v1);
      return objc_msgSend(v2, "setNeedsLayout");
    }
LABEL_28:
    swift_once(&qword_100804658, sub_10005514C);
    goto LABEL_20;
  }
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_100463B28@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BundleChildView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *a1 = result;
  return result;
}

char *sub_100463B70(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  objc_class *v35;
  id v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSString v42;
  void *v43;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;

  v5 = v4;
  v46 = sub_10000DAF8(&qword_1008250E0);
  __chkstk_darwin(v46);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DirectionalTextAlignment(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension10BundleView_cornerRadius] = 0x4010000000000000;
  v19 = &v5[OBJC_IVAR____TtC20ProductPageExtension10BundleView_iconStyle];
  v20 = enum case for Artwork.Style.roundedRect(_:);
  v22 = type metadata accessor for Artwork.Style(0, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v19, v20, v22);
  v23 = OBJC_IVAR____TtC20ProductPageExtension10BundleView_titleLabel;
  v24 = qword_100806598;
  v25 = v5;
  if (v24 != -1)
    swift_once(&qword_100806598, sub_1004C95D0);
  v26 = type metadata accessor for FontUseCase(0);
  v27 = sub_10000EFC4(v26, (uint64_t)qword_10086A1A0);
  v28 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v18, v27, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DirectionalTextAlignment.none(_:), v12);
  v29 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v5[v23] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v18, 1, 0, 1, 0, v15, 0, 0);
  v30 = OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack;
  if (qword_100805D58 != -1)
    swift_once(&qword_100805D58, sub_100462BC8);
  v31 = qword_100825050;
  v32 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StackView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v32[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC20ProductPageExtension9StackView_alignment] = 1;
  *(_QWORD *)&v32[OBJC_IVAR____TtC20ProductPageExtension9StackView_spacing] = v31;
  *(_QWORD *)&v25[v30] = v32;
  v33 = type metadata accessor for BundleChildView();
  ViewRecycler.init()(v33);
  v34 = sub_1004646E8();
  ReusePool.init(recycler:limit:)(v11, 3, v46, v34);

  v35 = (objc_class *)type metadata accessor for BundleView(0);
  v47.receiver = v25;
  v47.super_class = v35;
  v36 = objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v37 = (char *)v36;
  v38 = (void *)static UIColor.componentBackgroundStandout.getter();
  objc_msgSend(v37, "setBackgroundColor:", v38);

  objc_msgSend(v37, "_setCornerRadius:", *(double *)&v37[OBJC_IVAR____TtC20ProductPageExtension10BundleView_cornerRadius]);
  objc_msgSend(v37, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v39 = OBJC_IVAR____TtC20ProductPageExtension10BundleView_titleLabel;
  v40 = qword_100805D70;
  v41 = *(id *)&v37[OBJC_IVAR____TtC20ProductPageExtension10BundleView_titleLabel];
  if (v40 != -1)
    swift_once(&qword_100805D70, sub_100462E60);
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setText:", v42);

  v43 = *(void **)&v37[v39];
  objc_msgSend(v43, "setTextAlignment:", 1);
  objc_msgSend(v37, "addSubview:", v43);
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack]);

  return v37;
}

id sub_100464028()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  double Width;
  double v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  id v19;
  double v20;
  void (*v21)(char *, uint64_t);
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  double v27;
  id v28;
  double v29;
  objc_super v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for BundleView(0);
  v31.receiver = v0;
  v31.super_class = v5;
  objc_msgSendSuper2(&v31, "layoutSubviews");
  v32.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
  Width = CGRectGetWidth(v32);
  if (qword_100805D50 != -1)
    swift_once(&qword_100805D50, sub_100462BB8);
  v7 = Width - (*(double *)&qword_100825048 + *(double *)&qword_100825048);
  v8 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension10BundleView_titleLabel];
  v33.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
  objc_msgSend(v8, "sizeThatFits:", v7, CGRectGetHeight(v33));
  v10 = v9;
  v11 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack];
  LayoutMarginsAware<>.layoutFrame.getter(v5);
  objc_msgSend(v11, "sizeThatFits:", v12, v13);
  v15 = v14;
  v17 = v16;
  if (qword_100805D60 != -1)
    swift_once(&qword_100805D60, sub_100462BD8);
  v18 = type metadata accessor for StaticDimension(0);
  sub_10000EFC4(v18, (uint64_t)qword_100825058);
  v19 = objc_msgSend(v0, "traitCollection");
  static Dimensions.defaultRoundingRule.getter(v19);
  v20 = StaticDimension.value(compatibleWith:rounded:)(v19, v4);

  v21 = *(void (**)(char *, uint64_t))(v2 + 8);
  v21(v4, v1);
  objc_msgSend(v8, "lastBaselineFromBottom");
  v23 = v10 + v17 + v20 - v22;
  v34.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
  v24 = CGRectGetMidX(v34) - v7 * 0.5;
  v35.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
  objc_msgSend(v8, "setFrame:", v24, CGRectGetMidY(v35) - v23 * 0.5, v7, v10);
  v36.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
  v25 = CGRectGetMidX(v36) - v15 * 0.5;
  objc_msgSend(v8, "lastBaselineMaxY");
  v27 = v26;
  v28 = objc_msgSend(v0, "traitCollection");
  static Dimensions.defaultRoundingRule.getter(v28);
  v29 = StaticDimension.value(compatibleWith:rounded:)(v28, v4);

  v21(v4, v1);
  return objc_msgSend(v11, "setFrame:", v25, v27 + v29, v15, v17);
}

id sub_1004644D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BundleView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100464598()
{
  return type metadata accessor for BundleView(0);
}

uint64_t type metadata accessor for BundleView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008250C8;
  if (!qword_1008250C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BundleView);
  return result;
}

void sub_1004645DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[5];

  v7[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v3 = type metadata accessor for Artwork.Style(319, a2);
  if (v4 <= 0x3F)
  {
    v7[1] = *(_QWORD *)(v3 - 8) + 64;
    v7[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_100464684(319);
    if (v6 <= 0x3F)
    {
      v7[4] = *(_QWORD *)(v5 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 5, v7, a1 + 80);
    }
  }
}

void sub_100464684(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1008250D8)
  {
    v2 = sub_100010DE0(&qword_1008250E0);
    v3 = sub_1004646E8();
    v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1008250D8);
  }
}

unint64_t sub_1004646E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008250E8;
  if (!qword_1008250E8)
  {
    v1 = sub_100010DE0(&qword_1008250E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008250E8);
  }
  return result;
}

double sub_100464734(uint64_t a1, void *a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  __int128 v14;
  uint64_t v15;
  id v16;
  char v17;
  _BOOL8 v18;
  uint64_t v19;
  _QWORD *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  double v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  uint64_t v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  id v39;
  double v40;
  double v41;
  id v42;
  void *v43;
  double v44;
  double v45;
  _QWORD v47[2];
  uint64_t v48;
  _QWORD v49[5];

  v47[1] = a1;
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v47[0] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100805D50 != -1)
    swift_once(&qword_100805D50, sub_100462BB8);
  v12 = *(double *)&qword_100825048 + *(double *)&qword_100825048;
  if (qword_100805D70 != -1)
    swift_once(&qword_100805D70, sub_100462E60);
  v48 = v5;
  v13 = a3 - v12;
  v14 = xmmword_100825088;
  if (qword_100806598 != -1)
    swift_once(&qword_100806598, sub_1004C95D0);
  v15 = sub_10000EFC4(v8, (uint64_t)qword_10086A1A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  v16 = objc_msgSend(a2, "traitCollection");
  v17 = UITraitCollection.prefersAccessibilityLayouts.getter(v16);

  v18 = (v17 & 1) == 0;
  v19 = type metadata accessor for Feature(0);
  v49[3] = v19;
  v49[4] = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v20 = sub_1000119C0(v49);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, enum case for Feature.measurement_with_labelplaceholder(_:), v19);
  LOBYTE(v19) = isFeatureEnabled(_:)(v49);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  v21 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v14, *((_QWORD *)&v14 + 1), v11, 4, 0, 0, v18, 0, v13, a3, a2, v19 & 1);
  v23 = v22;
  v25 = v24;
  (*(void (**)(char *, uint64_t, double))(v9 + 8))(v11, v8, v21);
  if (qword_100805D60 != -1)
    swift_once(&qword_100805D60, sub_100462BD8);
  v26 = type metadata accessor for StaticDimension(0);
  sub_10000EFC4(v26, (uint64_t)qword_100825058);
  v27 = objc_msgSend(a2, "traitCollection");
  static Dimensions.defaultRoundingRule.getter(v27);
  v28 = StaticDimension.value(compatibleWith:rounded:)(v27, v7);

  v29 = *(void (**)(char *, uint64_t))(v47[0] + 8);
  v30 = v48;
  v29(v7, v48);
  v31 = objc_msgSend(a2, "traitCollection");
  if (qword_100804658 != -1)
    swift_once(&qword_100804658, sub_10005514C);
  v32 = Artwork.Style.iconHeight(fromWidth:)(*(double *)&qword_100864998);
  if (qword_100804650 != -1)
    swift_once(&qword_100804650, sub_10005513C);
  v33 = *(double *)&qword_10080A038;
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_1008065A0 != -1)
    swift_once(&qword_1008065A0, sub_1004C95E8);
  v34 = sub_10000EFC4(v8, (uint64_t)qword_10086A1B8);
  v35 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v34, v31);
  objc_msgSend(v35, "descender");
  v37 = v36;

  if (qword_100805D68 != -1)
    swift_once(&qword_100805D68, sub_100462D24);
  v38 = v23 - v25 + v28 + v32 + v33 - v37;
  sub_10000EFC4(v26, (uint64_t)qword_100825070);
  v39 = objc_msgSend(a2, "traitCollection");
  static Dimensions.defaultRoundingRule.getter(v39);
  v40 = StaticDimension.value(compatibleWith:rounded:)(v39, v7);

  v29(v7, v30);
  v41 = v38 + v40;
  v42 = objc_msgSend(a2, "traitCollection");
  v43 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v34, v42);

  objc_msgSend(v43, "descender");
  v45 = v44;

  return v41 + v45;
}

void sub_100464C2C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_10000DAF8(&qword_1008250E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DirectionalTextAlignment(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension10BundleView_cornerRadius] = 0x4010000000000000;
  v12 = &v1[OBJC_IVAR____TtC20ProductPageExtension10BundleView_iconStyle];
  v13 = enum case for Artwork.Style.roundedRect(_:);
  v15 = type metadata accessor for Artwork.Style(0, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v12, v13, v15);
  v16 = OBJC_IVAR____TtC20ProductPageExtension10BundleView_titleLabel;
  if (qword_100806598 != -1)
    swift_once(&qword_100806598, sub_1004C95D0);
  v17 = type metadata accessor for FontUseCase(0);
  v18 = sub_10000EFC4(v17, (uint64_t)qword_10086A1A0);
  v19 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v11, v18, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DirectionalTextAlignment.none(_:), v5);
  v20 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v16] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v11, 1, 0, 1, 0, v8, 0, 0);
  v21 = OBJC_IVAR____TtC20ProductPageExtension10BundleView_itemStack;
  if (qword_100805D58 != -1)
    swift_once(&qword_100805D58, sub_100462BC8);
  v22 = qword_100825050;
  v23 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StackView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis] = 0;
  *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension9StackView_alignment] = 1;
  *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension9StackView_spacing] = v22;
  *(_QWORD *)&v1[v21] = v23;
  v24 = type metadata accessor for BundleChildView();
  ViewRecycler.init()(v24);
  v25 = sub_1004646E8();
  ReusePool.init(recycler:limit:)(v4, 3, v2, v25);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/BundleView.swift", 37, 2, 189, 0);
  __break(1u);
}

void sub_100464F34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  __int128 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  char *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  __n128 v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[32];
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD v136[6];

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowPreviewDestination.ContentType(0);
  __chkstk_darwin(v9);
  v120 = (uint64_t)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for FlowPage(0);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_1008175C8);
  __chkstk_darwin(v12);
  v127 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v118 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v118 - v18;
  v20 = v2 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v22 = (void *)Strong;
    v126 = a2;
    v23 = v20;
    dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

    v24 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24) == 1)
    {
      sub_100010F2C((uint64_t)v19, &qword_1008175C8);
    }
    else
    {
      ReadOnlyLens.value.getter(&v133, v24);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v24);
      sub_100010E24(&v133, (uint64_t)v136);
      sub_10000EF80((uint64_t)v136, (uint64_t)&v131);
      v26 = sub_10000DAF8(&qword_10080E910);
      v27 = sub_10000DAF8(&qword_100825230);
      if ((swift_dynamicCast(&v128, &v131, v26, v27, 6) & 1) != 0)
      {
        sub_100010E24(&v128, (uint64_t)&v133);
        v28 = v134;
        v29 = v135;
        sub_100010F08(&v133, v134);
        v30 = dispatch thunk of ClickableModel.clickAction.getter(v28, v29);
        if (v30)
        {
          v31 = v30;
          v32 = type metadata accessor for FlowAction(0);
          v33 = swift_dynamicCastClass(v31, v32);
          if (v33)
          {
            v35 = v33;
            v125 = a1;
            v36 = v121;
            v37 = FlowAction.page.getter(v34);
            v38 = FlowPage.isPreviewingSupported.getter(v37);
            (*(void (**)(char *, uint64_t))(v122 + 8))(v36, v123);
            if ((v38 & 1) == 0)
            {
              _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
              swift_release();
              _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v133);
              a1 = v125;
              goto LABEL_14;
            }
            sub_10000EF80((uint64_t)v136, (uint64_t)&v131);
            v39 = type metadata accessor for TodayCard(0);
            v40 = swift_dynamicCast(&v128, &v131, v26, v39, 6);
            a1 = v125;
            if ((v40 & 1) == 0)
            {
              v73 = v134;
              v74 = v135;
              sub_100010F08(&v133, v134);
              v75 = swift_retain(v31);
              dispatch thunk of ClickableModel.clickSender.getter(&v131, v73, v74, v75);
              v76 = v120;
              sub_100465B88((uint64_t)v136, v120);
              v77 = v126;
              FlowPreviewDestination.init(flowAction:sender:contentType:)(v35, &v131, v76);
              swift_release();
              _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
              v79 = type metadata accessor for FlowPreviewDestination(0, v78);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v77, 0, 1, v79);
LABEL_72:
              _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v133);
              return;
            }
            swift_release();
          }
          swift_release();
        }
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v133);
      }
      else
      {
        v130 = 0;
        v128 = 0u;
        v129 = 0u;
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
        sub_100010F2C((uint64_t)&v128, &qword_100825238);
      }
    }
LABEL_14:
    v20 = v23;
    a2 = v126;
  }
  v41 = swift_unknownObjectWeakLoadStrong(v20);
  if (!v41)
    goto LABEL_63;
  v42 = (void *)v41;
  v125 = v20;
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

  v43 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v16, 1, v43) == 1)
  {
    v45 = &qword_1008175C8;
    v46 = (__int128 *)v16;
LABEL_35:
    sub_100010F2C((uint64_t)v46, v45);
    v20 = v125;
    goto LABEL_63;
  }
  ReadOnlyLens.value.getter(&v133, v43);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v43);
  sub_100010E24(&v133, (uint64_t)v136);
  sub_10000EF80((uint64_t)v136, (uint64_t)&v131);
  v47 = sub_10000DAF8(&qword_10080E910);
  v48 = sub_10000DAF8(&qword_100825230);
  if ((swift_dynamicCast(&v128, &v131, v47, v48, 6) & 1) == 0)
  {
    v130 = 0;
    v128 = 0u;
    v129 = 0u;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
    v45 = &qword_100825238;
    v46 = &v128;
    goto LABEL_35;
  }
  v119 = v47;
  sub_100010E24(&v128, (uint64_t)&v133);
  v49 = v134;
  v50 = v135;
  sub_100010F08(&v133, v134);
  v51 = dispatch thunk of ClickableModel.clickAction.getter(v49, v50);
  v20 = v125;
  if (!v51)
    goto LABEL_53;
  v52 = v51;
  v53 = type metadata accessor for CompoundAction(0);
  v54 = swift_dynamicCastClass(v52, v53);
  if (!v54)
  {
LABEL_52:
    swift_release();
LABEL_53:
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
LABEL_62:
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v133);
LABEL_63:
    v92 = swift_unknownObjectWeakLoadStrong(v20);
    if (!v92)
    {
LABEL_78:
      v117 = type metadata accessor for FlowPreviewDestination(0, v93);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(a2, 1, 1, v117);
      return;
    }
    v94 = (void *)v92;
    v95 = IndexPath.section.getter(v92);
    IndexPath.init(item:section:)(0, v95);
    v96 = v127;
    dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(v8);

    v97 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v98 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98) == 1)
    {
      sub_100010F2C(v97, &qword_1008175C8);
      goto LABEL_78;
    }
    ReadOnlyLens.value.getter(&v133, v98);
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v98);
    sub_100010E24(&v133, (uint64_t)v136);
    sub_10000EF80((uint64_t)v136, (uint64_t)&v131);
    v100 = sub_10000DAF8(&qword_10080E910);
    v101 = sub_10000DAF8(&qword_100825218);
    if ((swift_dynamicCast(&v128, &v131, v100, v101, 6) & 1) == 0)
    {
      v130 = 0;
      v128 = 0u;
      v129 = 0u;
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
      sub_100010F2C((uint64_t)&v128, &qword_100825220);
      goto LABEL_78;
    }
    sub_100010E24(&v128, (uint64_t)&v133);
    v102 = v134;
    v103 = v135;
    v104 = sub_100010F08(&v133, v134);
    v105 = IndexPath.item.getter(v104);
    dispatch thunk of NestedShelfClickableModel.click(for:)(&v128, v105, v102, v103);
    v106 = v128;
    if ((_QWORD)v128)
    {
      v131 = v128;
      sub_1000AD50C((uint64_t)&v128 + 8, (uint64_t)v132);
      *(_QWORD *)&v128 = v106;
      sub_100018ADC((uint64_t)v132, (uint64_t)&v128 + 8, &qword_100808F20);
      v107 = type metadata accessor for FlowAction(0);
      v108 = swift_dynamicCastClass(v106, v107);
      if (v108)
      {
        v109 = v108;
        swift_retain_n(v106, 2);
        sub_100010F2C((uint64_t)&v128 + 8, &qword_100808F20);
        v110 = v121;
        v112 = FlowAction.page.getter(v111);
        v113 = FlowPage.isPreviewingSupported.getter(v112);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v110, v123);
        if ((v113 & 1) != 0)
        {
          *(_QWORD *)&v128 = v106;
          sub_100018ADC((uint64_t)v132, (uint64_t)&v128 + 8, &qword_100808F20);
          v114 = v120;
          sub_100465B88((uint64_t)v136, v120);
          FlowPreviewDestination.init(flowAction:sender:contentType:)(v109, (char *)&v128 + 8, v114);
          swift_release();
          sub_100010F2C((uint64_t)&v131, (uint64_t *)&unk_100817620);
          goto LABEL_71;
        }
        swift_release_n(v106, 2);
        sub_100010F2C((uint64_t)&v131, (uint64_t *)&unk_100817620);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
      }
      else
      {
        sub_100010F2C((uint64_t)&v131, (uint64_t *)&unk_100817620);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
        sub_100010F2C((uint64_t)&v128 + 8, &qword_100808F20);
      }
    }
    else
    {
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
      sub_100010F2C((uint64_t)&v128, &qword_100825228);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v133);
    goto LABEL_78;
  }
  v118 = v52;
  v55 = v54;
  v56 = CompoundAction.actions.getter(v54);
  v57 = v56;
  v131 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v56 >> 62)
  {
    if (v56 < 0)
      v55 = v56;
    else
      v55 = v56 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v56);
    v58 = _CocoaArrayWrapper.endIndex.getter(v55);
    if (v58)
      goto LABEL_23;
LABEL_43:
    swift_bridgeObjectRelease(v57);
    v55 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_44;
  }
  v58 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v56);
  if (!v58)
    goto LABEL_43;
LABEL_23:
  v126 = a2;
  if (v58 < 1)
  {
    __break(1u);
    goto LABEL_80;
  }
  v59 = 0;
  v124 = v57 & 0xC000000000000001;
  do
  {
    if (v124)
    {
      v60 = specialized _ArrayBuffer._getElementSlowPath(_:)(v59, v57);
    }
    else
    {
      v60 = *(_QWORD *)(v57 + 8 * v59 + 32);
      swift_retain(v60);
    }
    v61 = type metadata accessor for FlowAction(0);
    v62 = swift_dynamicCastClass(v60, v61);
    if (v62)
    {
      v63 = v62;
      v64 = v58;
      v65 = v57;
      v66 = v8;
      v67 = v6;
      v68 = v5;
      v69 = a1;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
      v71 = *(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v70 = *(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v71 >= v70 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
      v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v63);
      specialized Array._endMutation()(v72);
      a1 = v69;
      v5 = v68;
      v6 = v67;
      v8 = v66;
      v57 = v65;
      v58 = v64;
    }
    else
    {
      swift_release();
    }
    ++v59;
  }
  while (v58 != v59);
  swift_bridgeObjectRelease(v57);
  v55 = v131;
  a2 = v126;
  v20 = v125;
LABEL_44:
  swift_bridgeObjectRelease(v57);
  if (!((unint64_t)v55 >> 62))
  {
    if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_46;
LABEL_60:
    swift_bridgeObjectRelease(v55);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
    goto LABEL_61;
  }
  if (v55 < 0)
    v90 = v55;
  else
    v90 = v55 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v55);
  v91 = _CocoaArrayWrapper.endIndex.getter(v90);
  swift_bridgeObjectRelease(v55);
  if (!v91)
    goto LABEL_60;
LABEL_46:
  if ((v55 & 0xC000000000000001) != 0)
  {
LABEL_80:
    v80 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v55);
    goto LABEL_49;
  }
  if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v80 = *(_QWORD *)(v55 + 32);
    swift_retain(v80);
LABEL_49:
    v81 = swift_bridgeObjectRelease(v55);
    v82 = v121;
    v83 = FlowAction.page.getter(v81);
    v84 = FlowPage.isPreviewingSupported.getter(v83);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v82, v123);
    if ((v84 & 1) != 0)
    {
      sub_10000EF80((uint64_t)v136, (uint64_t)&v131);
      v85 = type metadata accessor for TodayCard(0);
      if ((swift_dynamicCast(&v128, &v131, v119, v85, 6) & 1) == 0)
      {
        v86 = v134;
        v87 = v135;
        sub_100010F08(&v133, v134);
        v88 = swift_retain(v80);
        dispatch thunk of ClickableModel.clickSender.getter(&v131, v86, v87, v88);
        v89 = v120;
        sub_100465B88((uint64_t)v136, v120);
        FlowPreviewDestination.init(flowAction:sender:contentType:)(v80, &v131, v89);
        swift_release();
        swift_release();
LABEL_71:
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
        v116 = type metadata accessor for FlowPreviewDestination(0, v115);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(a2, 0, 1, v116);
        goto LABEL_72;
      }
      swift_release();
      swift_release();
      goto LABEL_52;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v136);
    swift_release();
LABEL_61:
    swift_release();
    goto LABEL_62;
  }
  __break(1u);
}

uint64_t sub_100465B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];

  sub_10000EF80(a1, (uint64_t)v12);
  v3 = sub_10000DAF8(&qword_10080E910);
  v4 = type metadata accessor for Review(0);
  if (swift_dynamicCast(&v11, v12, v3, v4, 0)
    || (v5 = type metadata accessor for ReviewsContainer(0), swift_dynamicCast(&v11, v12, v3, v5, 0)))
  {
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);
    v6 = enum case for FlowPreviewDestination.ContentType.source(_:);
    v7 = type metadata accessor for FlowPreviewDestination.ContentType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a2, v6, v7);
  }
  else
  {
    v9 = enum case for FlowPreviewDestination.ContentType.flowDestination(_:);
    v10 = type metadata accessor for FlowPreviewDestination.ContentType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a2, v9, v10);
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);
  }
}

uint64_t sub_100465C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t *v22;
  __int128 *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  __int128 v44[2];
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;

  v41 = type metadata accessor for IndexPath(0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_1008175C8);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  v11 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_7;
  }
  v17 = (void *)Strong;
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_7:
    v22 = &qword_1008175C8;
    v23 = (__int128 *)v10;
LABEL_8:
    sub_100010F2C((uint64_t)v23, v22);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  ReadOnlyLens.value.getter(&v46, v11);
  v18 = sub_10000DAF8(&qword_10080E910);
  v19 = sub_10000DAF8(&qword_100825208);
  if ((swift_dynamicCast(v44, &v46, v18, v19, 6) & 1) == 0)
  {
    v45 = 0;
    memset(v44, 0, sizeof(v44));
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v22 = &qword_100825210;
    v23 = v44;
    goto LABEL_8;
  }
  sub_100010E24(v44, (uint64_t)v49);
  ReadOnlyLens.value.getter(&v46, v11);
  v20 = type metadata accessor for TodayCard(0);
  if ((swift_dynamicCast(v44, &v46, v18, v20, 6) & 1) == 0)
  {
    v38 = v50;
    v39 = v51;
    sub_100010F08(v49, v50);
    v36 = dispatch thunk of FlowPreviewActionable.flowPreviewActionsConfiguration.getter(v38, v39);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_23;
  }
  v21 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
LABEL_9:
  v24 = swift_unknownObjectWeakLoadStrong(v15);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 1, v11);
    goto LABEL_16;
  }
  v25 = (void *)v24;
  v26 = IndexPath.section.getter(v24);
  IndexPath.init(item:section:)(0, v26);
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(v4);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
LABEL_16:
    sub_100010F2C((uint64_t)v7, &qword_1008175C8);
    goto LABEL_17;
  }
  v27 = sub_10000DAF8((uint64_t *)&unk_100810AA0);
  if (!swift_dynamicCast(&v46, v7, v11, v27, 6))
  {
LABEL_17:
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    goto LABEL_18;
  }
  if (!*((_QWORD *)&v47 + 1))
  {
LABEL_18:
    sub_100010F2C((uint64_t)&v46, &qword_100810A98);
    return 0;
  }
  sub_100010E24(&v46, (uint64_t)v49);
  v28 = v50;
  v29 = v51;
  v30 = sub_100010F08(v49, v50);
  v31 = IndexPath.item.getter(v30);
  dispatch thunk of ComponentModelContainment.model(at:)(v31, v28, v29);
  v32 = sub_10000DAF8(&qword_10080E910);
  v33 = sub_10000DAF8(&qword_100825208);
  if ((swift_dynamicCast(v42, v44, v32, v33, 6) & 1) != 0)
  {
    sub_100010E24(v42, (uint64_t)&v46);
    v34 = *((_QWORD *)&v47 + 1);
    v35 = v48;
    sub_100010F08(&v46, *((uint64_t *)&v47 + 1));
    v36 = dispatch thunk of FlowPreviewActionable.flowPreviewActionsConfiguration.getter(v34, v35);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v46);
LABEL_23:
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
    return v36;
  }
  v43 = 0;
  memset(v42, 0, sizeof(v42));
  sub_100010F2C((uint64_t)v42, &qword_100825210);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  return 0;
}

id sub_100466104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  id *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t KeyPath;
  __n128 v46;
  uint64_t v47;
  id v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[5];
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;

  v3 = sub_10000DAF8(&qword_100808548);
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ShelfBackground(0);
  v67 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = type metadata accessor for ItemBackground(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v61 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_1008251F8);
  __chkstk_darwin(v10);
  v64 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008191F0);
  __chkstk_darwin(v12);
  v62 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - v18;
  v20 = sub_10000DAF8(&qword_1008175C8);
  __chkstk_darwin(v20);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v1 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
    goto LABEL_4;
  v25 = (void *)Strong;
  v66 = v6;
  v26 = v8;
  v68 = a1;
  dispatch thunk of ModelMappedDiffableDataSource.itemModel(for:)(a1);

  v27 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27) == 1)
  {
    sub_100010F2C((uint64_t)v22, &qword_1008175C8);
    v8 = v26;
    v6 = v66;
LABEL_4:
    v70 = 0u;
    v71 = 0u;
    v72 = 0;
    goto LABEL_5;
  }
  ReadOnlyLens.value.getter(v69, v27);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  v34 = sub_10000DAF8(&qword_10080E910);
  v35 = sub_10000DAF8(&qword_100815E88);
  if ((swift_dynamicCast(&v70, v69, v34, v35, 6) & 1) == 0)
  {
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    v8 = v26;
    v6 = v66;
    goto LABEL_5;
  }
  v8 = v26;
  v6 = v66;
  if (*((_QWORD *)&v71 + 1))
  {
    sub_100010E24(&v70, (uint64_t)v73);
    v36 = v74;
    v37 = v75;
    sub_100010F08(v73, v74);
    dispatch thunk of ItemBackgroundProviding.itemBackground.getter(v36, v37);
    v38 = v63;
    v39 = v65;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v16, enum case for ItemBackground.ad(_:), v65);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v16, 0, 1, v39);
    v40 = v64;
    v41 = v64 + *(int *)(v10 + 48);
    sub_100018ADC((uint64_t)v19, v64, (uint64_t *)&unk_1008191F0);
    v60 = v41;
    v42 = v41;
    v43 = v40;
    sub_100018ADC((uint64_t)v16, v42, (uint64_t *)&unk_1008191F0);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v44(v43, 1, v39) == 1)
    {
      sub_100010F2C((uint64_t)v16, (uint64_t *)&unk_1008191F0);
      v43 = v64;
      sub_100010F2C((uint64_t)v19, (uint64_t *)&unk_1008191F0);
      if (v44(v60, 1, v65) == 1)
      {
        sub_100010F2C(v43, (uint64_t *)&unk_1008191F0);
LABEL_24:
        if (qword_1008055F0 != -1)
          swift_once(&qword_1008055F0, sub_100301B18);
        v48 = (id)qword_1008672E8;
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
        return v48;
      }
    }
    else
    {
      v53 = v62;
      sub_100018ADC(v43, v62, (uint64_t *)&unk_1008191F0);
      if (v44(v60, 1, v65) != 1)
      {
        v54 = v63;
        v55 = v53;
        v56 = v61;
        v57 = v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v61, v60, v65);
        v58 = sub_100020248(&qword_100825200, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ItemBackground, (uint64_t)&protocol conformance descriptor for ItemBackground);
        LODWORD(v60) = dispatch thunk of static Equatable.== infix(_:_:)(v55, v56, v57, v58);
        v59 = *(void (**)(char *, uint64_t))(v54 + 8);
        v59(v56, v57);
        sub_100010F2C((uint64_t)v16, (uint64_t *)&unk_1008191F0);
        sub_100010F2C((uint64_t)v19, (uint64_t *)&unk_1008191F0);
        v59((char *)v55, v57);
        v6 = v66;
        sub_100010F2C(v64, (uint64_t *)&unk_1008191F0);
        if ((v60 & 1) != 0)
          goto LABEL_24;
LABEL_27:
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
        goto LABEL_6;
      }
      sub_100010F2C((uint64_t)v16, (uint64_t *)&unk_1008191F0);
      sub_100010F2C((uint64_t)v19, (uint64_t *)&unk_1008191F0);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v53, v65);
    }
    sub_100010F2C(v43, &qword_1008251F8);
    goto LABEL_27;
  }
LABEL_5:
  sub_100010F2C((uint64_t)&v70, (uint64_t *)&unk_100815E90);
LABEL_6:
  v29 = swift_unknownObjectWeakLoadStrong(v23);
  if (!v29)
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v30 = (void *)v29;
  v31 = IndexPath.section.getter(v29);
  dispatch thunk of ModelMappedDiffableDataSource.sectionModel(at:)(v31);

  v32 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v5, 1, v32) == 1)
  {
    sub_100010F2C((uint64_t)v5, &qword_100808548);
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  KeyPath = swift_getKeyPath(&unk_100663B40);
  ReadOnlyLens.subscript.getter(v8, KeyPath, v32);
  v46 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v5, v32, v46);
  v47 = v67;
  if ((*(unsigned int (**)(id *, uint64_t))(v67 + 88))(v8, v6) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v47 + 8))(v8, v6);
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  (*(void (**)(id *, uint64_t))(v47 + 96))(v8, v6);
  v48 = *v8;
  v49 = (char *)v8 + *(int *)(sub_10000DAF8(&qword_100808E30) + 48);
  v51 = type metadata accessor for ShelfBackgroundStyle(0, v50);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v49, v51);
  return v48;
}

uint64_t sub_10046682C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for DiffableFlowPreviewPresenter()
{
  return objc_opt_self(_TtC20ProductPageExtension28DiffableFlowPreviewPresenter);
}

double sub_10046687C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  sub_100020248(&qword_1008251F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DiffableFlowPreviewPresenter, (uint64_t)&unk_100663ACC);
  *(_QWORD *)&result = swift_unknownObjectRetain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1004668C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1;
  sub_100018ADC(a2, (uint64_t)&v5, &qword_100808F20);
  swift_retain(a1);
  SyncEvent.post(_:)(&v4);
  return sub_100010F2C((uint64_t)&v4, (uint64_t *)&unk_100817620);
}

uint64_t sub_100466930(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_1008251E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for DiffableFlowPreviewPresenter, (uint64_t)&unk_100663AB0);
}

id sub_100466960(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  void *v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  NSString v63;
  double v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void *v69;
  NSString v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String *v79;
  uint64_t v80;
  uint64_t v81;
  Swift::String v82;
  Swift::String v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t, uint64_t);
  char *v113;
  unint64_t v114;
  uint64_t v115;
  __n128 v116;
  id result;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unsigned int v124;
  id v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  _OWORD v136[3];

  v3 = v2;
  v5 = sub_10000DAF8(&qword_100818E60);
  __chkstk_darwin(v5);
  v7 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v126 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v128 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  v131 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v13);
  v127 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_10082A890);
  __chkstk_darwin(v15);
  v122 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v17);
  v121 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v19);
  v120 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v21);
  v119 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (void *)objc_opt_self(UIView);
  v124 = objc_msgSend(v23, "areAnimationsEnabled");
  v125 = v23;
  v24 = InAppPurchaseInstallPage.lockup.getter(objc_msgSend(v23, "setAnimationsEnabled:", 0));
  v25 = InAppPurchaseInstallPage.parentLockup.getter(v24);
  v133 = v10;
  v134 = a2;
  v132 = v7;
  v129 = v12;
  v130 = v8;
  if (v24)
  {
    v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_inAppPurchaseView];
    v28 = qword_100805368;
    swift_retain(v24);
    if (v28 != -1)
      swift_once(&qword_100805368, sub_1002EA62C);
    v29 = type metadata accessor for ArtworkLoader(0);
    v30 = *(_QWORD *)(a2 + qword_10086B3B8);
    if (!v30)
    {
      result = (id)dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v29, v29);
      __break(1u);
      return result;
    }
    v31 = *(double *)&qword_100866C38;
    swift_retain(v30);
    sub_1005C0404(v31, v31, v24, v27, v30, 2);
    swift_release();
    swift_release();
    v32 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_titleLabel];
    v33 = swift_retain(v24);
    Lockup.title.getter(v33);
    v35 = v34;
    v26 = swift_release().n128_u64[0];
    if (v35)
    {
      v36 = String._bridgeToObjectiveC()();
      v26 = swift_bridgeObjectRelease(v35).n128_u64[0];
    }
    else
    {
      v36 = 0;
    }
  }
  else
  {
    v36 = 0;
    v32 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_titleLabel];
  }
  objc_msgSend(v32, "setText:", v36, *(double *)&v26);

  v123 = v24;
  if (v25 && (v37 = swift_retain(v25), v38 = Lockup.title.getter(v37), v40 = v39, swift_release(), v40))
  {
    v41 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel];
    v42._object = (void *)0x80000001006A5A60;
    v42._countAndFlagsBits = 0xD00000000000001FLL;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v44 = localizedString(_:comment:)(v42, v43);
    v45 = sub_10000DAF8(&qword_100810E60);
    v46 = v3;
    v47 = swift_allocObject(v45, 72, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100640720;
    *(_QWORD *)(v47 + 56) = &type metadata for String;
    *(_QWORD *)(v47 + 64) = sub_10013F398();
    *(_QWORD *)(v47 + 32) = v38;
    *(_QWORD *)(v47 + 40) = v40;
    v48 = v47;
    v3 = v46;
    String.init(format:_:)(v44._countAndFlagsBits, v44._object, v48, v49);
    v51 = v50;
    swift_bridgeObjectRelease(v44._object);
    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "setText:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

    v53 = *(void **)&v46[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel];
  }
  else
  {
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_parentTitleLabel], "setText:", 0);
    v53 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_subtitleLabel];
    if (!v25)
    {
LABEL_15:
      v58 = 0;
      goto LABEL_16;
    }
  }
  swift_retain(v25);
  Lockup.developerTagline.getter(v55);
  v57 = v56;
  v54 = swift_release().n128_u64[0];
  if (!v57)
    goto LABEL_15;
  v58 = String._bridgeToObjectiveC()();
  v54 = swift_bridgeObjectRelease(v57).n128_u64[0];
LABEL_16:
  objc_msgSend(v53, "setText:", v58, *(double *)&v54);

  v59 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_descriptionLabel];
  InAppPurchaseInstallPage.preInstallOfferDescription.getter();
  if (v60)
  {
    v62 = v60;
    v63 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v61 = swift_bridgeObjectRelease(v62).n128_u64[0];
  }
  else
  {
    v63 = 0;
  }
  objc_msgSend(v59, "setText:", v63, v61);

  if (v25
    && (v65 = swift_retain(v25),
        Lockup.ageRating.getter(v65),
        v67 = v66,
        *(_QWORD *)&v64 = swift_release().n128_u64[0],
        v67))
  {
    v68 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge];
    v69 = *(void **)&v68[OBJC_IVAR____TtC20ProductPageExtension18AgeRatingBadgeView_ageLabel];
    v70 = String._bridgeToObjectiveC()();
    objc_msgSend(v69, "setText:", v70);

    objc_msgSend(v68, "setNeedsLayout");
    objc_msgSend(v68, "setNeedsDisplay");
    objc_msgSend(v68, "setHidden:", 0, swift_bridgeObjectRelease(v67).n128_f64[0]);
  }
  else
  {
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_ageRatingBadge], "setHidden:", 1, v64);
  }
  v71 = sub_10000DAF8(&qword_100825240);
  v72 = sub_10000DAF8(&qword_100825248);
  v73 = *(_QWORD *)(v72 - 8);
  v74 = *(_QWORD *)(v73 + 72);
  v75 = *(unsigned __int8 *)(v73 + 80);
  v76 = (v75 + 32) & ~v75;
  v77 = swift_allocObject(v71, v76 + v74, v75 | 7);
  *(_OWORD *)(v77 + 16) = xmmword_100640720;
  v78 = v77 + v76;
  v79 = (Swift::String *)(v77 + v76 + *(int *)(v72 + 48));
  v80 = enum case for OfferTitleType.standard(_:);
  v81 = type metadata accessor for OfferTitleType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v78, v80, v81);
  v82._countAndFlagsBits = 0xD000000000000020;
  v82._object = (void *)0x80000001006A5A30;
  v83._countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  *v79 = localizedString(_:comment:)(v82, v83);
  v84 = sub_10050A798(v77);
  v85 = v84;
  v135 = v3;
  if (v25)
  {
    swift_retain(v25);
    v87 = Lockup.offerDisplayProperties.getter(v86);
    v118 = v25;
    swift_release();
    if (v87)
    {
      v88 = enum case for OfferStyle.colored(_:);
      v89 = type metadata accessor for OfferStyle(0);
      v90 = *(_QWORD *)(v89 - 8);
      v91 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 104))(v119, v88, v89);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v91, 0, 1, v89);
      v92 = type metadata accessor for OfferEnvironment(0);
      v93 = (uint64_t)v120;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v120, 1, 1, v92);
      v94 = enum case for OfferTint.blue(_:);
      v95 = type metadata accessor for OfferTint(0);
      v96 = *(_QWORD *)(v95 - 8);
      v97 = (uint64_t)v121;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 104))(v121, v94, v95);
      v98.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56))(v97, 0, 1, v95);
      v99 = type metadata accessor for OfferLabelStyle(0, v98);
      v100 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v122, 1, 1, v99);
      memset(v136, 0, 32);
      v101 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)(v85, 0, 0, v91, v93, v97, 2, 2, 2, v100, 0, 0, 1, v136, 0, 0, 0, 0, 0,
               0,
               0,
               2,
               0);
      swift_release();
      swift_bridgeObjectRelease(v85);
      sub_100010F2C((uint64_t)v136, &qword_100808F20);
      sub_100010F2C(v100, (uint64_t *)&unk_10082A890);
      sub_100010F2C(v97, (uint64_t *)&unk_100815D70);
      sub_100010F2C(v93, (uint64_t *)&unk_10080A0E0);
      v102 = (uint64_t)v91;
      v3 = v135;
      sub_100010F2C(v102, &qword_100815D80);
    }
    else
    {
      swift_bridgeObjectRelease(v85);
      v101 = 0;
    }
    v104 = v133;
    v105 = v131;
    v122 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_offerButton];
    v106 = swift_retain(v118);
    v103 = Lockup.buttonAction.getter(v106);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease(v84);
    v103 = 0;
    v101 = 0;
    v122 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension34InstallPagePreInstallFreeOfferView_offerButton];
    v104 = v133;
    v105 = v131;
  }
  v107 = sub_10000DAF8(&qword_10080B190);
  v108 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v127, 1, 1, v107);
  v109 = v126;
  v110 = v128;
  v111 = v130;
  (*(void (**)(char *, _QWORD, uint64_t))(v126 + 104))(v128, enum case for OfferButtonSubtitlePosition.below(_:), v130);
  v112 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56);
  v113 = v132;
  v112(v132, 1, 1, v111);
  v114 = sub_1002C64B4();
  v115 = (uint64_t)v129;
  AccessibilityConditional.init(value:axValue:)(v110, v113, v111, v114);
  sub_1001B1C4C(v101, v103, 0, v108, v115, v134, 0, 0);
  v116 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v105 + 8))(v115, v104, v116);
  sub_100010F2C(v108, (uint64_t *)&unk_10080A0F0);
  objc_msgSend(v135, "setNeedsLayout");
  swift_release();
  swift_release();
  return objc_msgSend(v125, "setAnimationsEnabled:", v124, swift_release().n128_f64[0]);
}

uint64_t type metadata accessor for ArcadeDownloadPackGamesCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100825338;
  if (!qword_100825338)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeDownloadPackGamesCardView);
  return result;
}

uint64_t sub_100467470(uint64_t a1)
{
  _QWORD v2[12];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for () + 64;
  v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[6] = "\b";
  v2[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[8] = &unk_100663C18;
  v2[9] = &unk_100663C30;
  v2[10] = &unk_100663C18;
  v2[11] = &unk_100663C48;
  return swift_initClassMetadata2(a1, 0, 12, v2, a1 + qword_100868B58);
}

uint64_t sub_100467508(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = v1;
  v17 = type metadata accessor for AdamId(0);
  v4 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = _swiftEmptyArrayStorage;
    if (!v7)
      return (uint64_t)v8;
    v18 = _swiftEmptyArrayStorage;
    result = sub_1001F1470(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v10 = 0;
    v8 = v18;
    v15[1] = v2;
    v16 = a1 & 0xC000000000000001;
    v11 = a1;
    while (v7 != v10)
    {
      if (v16)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
      else
        v12 = swift_retain(*(_QWORD *)(a1 + 8 * v10 + 32));
      Lockup.adamId.getter(v12);
      swift_release();
      v18 = v8;
      v2 = v8[2];
      v13 = v8[3];
      if (v2 >= v13 >> 1)
      {
        sub_1001F1470(v13 > 1, v2 + 1, 1);
        v8 = v18;
      }
      ++v10;
      v8[2] = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v2, v6, v17);
      a1 = v11;
      if (v7 == v10)
        return (uint64_t)v8;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_1004676CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a2;
  v38 = sub_10000DAF8(&qword_100825398);
  v31 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v36 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - v5;
  __chkstk_darwin(v7);
  v35 = (char *)&v31 - v8;
  v9 = *(_QWORD *)(a1 + 64);
  v33 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v37 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = v37;
    v20 = *(_QWORD *)(v37 + 48);
    v21 = type metadata accessor for AdamId(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = v20 + *(_QWORD *)(v22 + 72) * i;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v25 = (uint64_t)v35;
    v24(v35, v23, v21);
    v26 = *(_BYTE *)(*(_QWORD *)(v19 + 56) + i);
    v27 = v38;
    *(_BYTE *)(v25 + *(int *)(v38 + 48)) = v26;
    sub_10002548C(v25, (uint64_t)v6, &qword_100825398);
    v28 = *(int *)(v27 + 48);
    v29 = v36;
    v24(v36, (uint64_t)v6, v21);
    LODWORD(v24) = v6[v28];
    v29[v28] = (char)v24;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v29, v21);
    if ((_DWORD)v24 == 1)
    {
      swift_release();
      v30 = v32;
      sub_10002548C((uint64_t)v6, v32, &qword_100825398);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v38);
      return;
    }
    sub_100010F2C((uint64_t)v6, &qword_100825398);
    if (v12)
      goto LABEL_4;
LABEL_5:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v34)
      goto LABEL_25;
    v17 = *(_QWORD *)(v33 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v34)
        goto LABEL_25;
      v17 = *(_QWORD *)(v33 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v34)
          goto LABEL_25;
        v17 = *(_QWORD *)(v33 + 8 * v13);
        if (!v17)
        {
          v13 = v16 + 3;
          if (v16 + 3 >= v34)
            goto LABEL_25;
          v17 = *(_QWORD *)(v33 + 8 * v13);
          if (!v17)
            break;
        }
      }
    }
LABEL_20:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v34)
  {
LABEL_25:
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, 1, 1, v38);
    return;
  }
  v17 = *(_QWORD *)(v33 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v34)
      goto LABEL_25;
    v17 = *(_QWORD *)(v33 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void sub_1004679D8(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  char *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  char *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _BYTE v24[24];
  char v25[24];
  char v26[24];

  v2 = v1;
  v4 = &v1[qword_1008252E8];
  swift_beginAccess(&v1[qword_1008252E8], v26, 1, 0);
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v6)
  {
    *(_QWORD *)&v7 = swift_bridgeObjectRetain(*(_QWORD *)v4).n128_u64[0];
    v8 = 32;
    do
    {
      objc_msgSend(*(id *)(v5 + v8), "removeFromSuperview", v7);
      v8 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
    v5 = *(_QWORD *)v4;
  }
  *(_QWORD *)v4 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v5);
  v9 = &v2[qword_100825300];
  swift_beginAccess(&v2[qword_100825300], v25, 1, 0);
  v10 = *(_QWORD *)v9;
  *(_QWORD *)v9 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
  v11 = sub_1004699C4((uint64_t)_swiftEmptyArrayStorage);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v12 = type metadata accessor for ArcadeDownloadPackGameLockupPlaceholder();
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
      do
      {
        v14 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
        if (qword_100805DB0 != -1)
          swift_once(&qword_100805DB0, sub_1004685AC);
        v15 = qword_1008252B8;
        v16 = (id)qword_1008252B8;
        ArtworkView.backgroundColor.setter(v15);
        objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension39ArcadeDownloadPackGameLockupPlaceholder_headingPlaceholder], "setTextColor:", v16);
        objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension39ArcadeDownloadPackGameLockupPlaceholder_titlePlaceholder], "setTextColor:", v16);
        objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension39ArcadeDownloadPackGameLockupPlaceholder_offerButtonPlaceholder], "setBackgroundColor:", v16);
        objc_msgSend(v2, "addSubview:", v14);
        swift_beginAccess(v4, v24, 33, 0);
        v17 = *(_QWORD **)v4;
        v18 = v14;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
        *(_QWORD *)v4 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v17 = sub_1003DA680(0, v17[2] + 1, 1, v17);
          *(_QWORD *)v4 = v17;
        }
        v21 = v17[2];
        v20 = v17[3];
        if (v21 >= v20 >> 1)
        {
          v17 = sub_1003DA680((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
          *(_QWORD *)v4 = v17;
        }
        v22 = sub_10000E720(&qword_100825388, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeDownloadPackGameLockupPlaceholder, (uint64_t)&unk_100656358);
        v17[2] = v21 + 1;
        v23 = &v17[2 * v21];
        v23[4] = v18;
        v23[5] = v22;
        swift_endAccess(v24);

        --a1;
      }
      while (a1);
    }
    objc_msgSend(*(id *)&v2[qword_1008252F0], "setHidden:", 1, v11);
    objc_msgSend(v2, "setNeedsLayout");
  }
}

void sub_100467CA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  objc_class *ObjCClassFromMetadata;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)();
  uint64_t v48;
  void (**v49)();
  char *v50;
  uint64_t v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  id v71;
  Class v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[2];
  _QWORD v81[4];
  char v82[24];
  char v83[24];

  v68 = a2;
  v8 = sub_10000DAF8(&qword_100826A80);
  __chkstk_darwin(v8);
  v66 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v67 = (char *)&v65 - v11;
  v76 = type metadata accessor for AdamId(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for AutomationSemantics(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[qword_1008252E8];
  swift_beginAccess(&v4[qword_1008252E8], v83, 1, 0);
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(*(_QWORD *)v16 + 16);
  v77 = a1;
  if (v18)
  {
    *(_QWORD *)&v19 = swift_bridgeObjectRetain(v17).n128_u64[0];
    v20 = 32;
    do
    {
      objc_msgSend(*(id *)(v17 + v20), "removeFromSuperview", v19);
      v20 += 16;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease(v17);
    v17 = *(_QWORD *)v16;
    a1 = v77;
  }
  *(_QWORD *)v16 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v17);
  v21 = (uint64_t *)&v4[qword_100825300];
  swift_beginAccess(&v4[qword_100825300], v82, 1, 0);
  v22 = *v21;
  *v21 = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v22);
  swift_weakAssign(&v4[qword_100825308], a4);
  v4[qword_100825318] = a3 & 1;
  ObjCClassFromMetadata = (objc_class *)type metadata accessor for ArtworkLoader(0);
  v79 = *(_QWORD *)(a4 + qword_10086B3B8);
  if (!v79)
    goto LABEL_37;
  v69 = v4;
  v78 = a4;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v43 = a1;
    else
      v43 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    swift_retain(v79);
    v24 = _CocoaArrayWrapper.endIndex.getter(v43);
    if (!v24)
      goto LABEL_25;
  }
  else
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    swift_retain(v79);
    if (!v24)
      goto LABEL_25;
  }
  v25 = type metadata accessor for TodayCardLockupView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v25);
  v72 = ObjCClassFromMetadata;
  if (v24 < 1)
  {
    __break(1u);
LABEL_37:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(ObjCClassFromMetadata, ObjCClassFromMetadata);
    __break(1u);
    goto LABEL_38;
  }
  v26 = 0;
  v71 = *(id *)&v69[qword_1008252E0];
  v70 = a1 & 0xC000000000000001;
  do
  {
    if (v70)
    {
      v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, a1);
    }
    else
    {
      v27 = *(_QWORD *)(a1 + 8 * v26 + 32);
      swift_retain(v27);
    }
    v28 = (char *)objc_msgSend(objc_allocWithZone(v72), "init");
    objc_msgSend(v71, "addSubview:", v28);
    v30 = Lockup.adamId.getter(v29);
    v31 = AdamId.stringValue.getter(v30);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v76);
    v81[3] = &type metadata for String;
    v81[0] = v31;
    v81[1] = v33;
    memset(v80, 0, sizeof(v80));
    static AutomationSemantics.shelfItem(itemKind:id:parentId:)(0x7261437961646F74, 0xE900000000000064, v81, v80);
    sub_100010F2C((uint64_t)v80, &qword_100808F20);
    sub_100010F2C((uint64_t)v81, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v15);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v74);
    sub_10046A524(v27, v79, v78);
    v34 = qword_100805DB0;
    v35 = *(id *)&v28[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
    if (v34 != -1)
      swift_once(&qword_100805DB0, sub_1004685AC);
    ArtworkView.placeholderColor.setter((id)qword_1008252B8);

    swift_beginAccess(v16, v81, 33, 0);
    v36 = *(_QWORD **)v16;
    v37 = v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
    *(_QWORD *)v16 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v36 = sub_1003DA680(0, v36[2] + 1, 1, v36);
      *(_QWORD *)v16 = v36;
    }
    v40 = v36[2];
    v39 = v36[3];
    if (v40 >= v39 >> 1)
    {
      v36 = sub_1003DA680((_QWORD *)(v39 > 1), v40 + 1, 1, v36);
      *(_QWORD *)v16 = v36;
    }
    ++v26;
    v41 = sub_10000E720(&qword_1008253A8, (uint64_t (*)(uint64_t))type metadata accessor for TodayCardLockupView, (uint64_t)&unk_10066A0C4);
    v36[2] = v40 + 1;
    v42 = &v36[2 * v40];
    v42[4] = v37;
    v42[5] = v41;
    swift_endAccess(v81);

    swift_release();
    a1 = v77;
  }
  while (v24 != v26);
LABEL_25:
  swift_bridgeObjectRelease(a1);
  v44 = v68;
  if (v68)
  {
    v45 = swift_allocObject(&unk_1007555B0, 24, 7);
    v46 = v69;
    swift_unknownObjectWeakInit(v45 + 16, v69);
    v47 = (void (*)())swift_allocObject(&unk_100755628, 40, 7);
    *((_QWORD *)v47 + 2) = v45;
    *((_QWORD *)v47 + 3) = v44;
    v48 = v78;
    *((_QWORD *)v47 + 4) = v78;
    v49 = (void (**)())&v46[qword_1008252F8];
    *v49 = sub_10046C7DC;
    v49[1] = v47;
    swift_retain(v44);
    swift_retain(v48);
  }
  else
  {
    v46 = v69;
    v50 = &v69[qword_1008252F8];
    *(_QWORD *)v50 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
    *((_QWORD *)v50 + 1) = 0;
    v48 = v78;
  }
  v51 = (uint64_t)v67;
  v52 = swift_release();
  v53 = *(void **)&v46[qword_1008252F0];
  UIButton.configuration.getter(v52);
  v54 = type metadata accessor for UIButton.Configuration(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v51, 1, v54))
  {
    v56 = v66;
    sub_100018ADC(v51, v66, &qword_100826A80);
    UIButton.configuration.setter(v56);
    sub_100010F2C(v51, &qword_100826A80);
  }
  else
  {
    if (v44)
    {
      v57 = Action.title.getter(v55);
    }
    else
    {
      v57 = 0;
      v58 = 0;
    }
    UIButton.Configuration.title.setter(v57, v58);
    UIButton.configuration.setter(v51);
  }
  v59 = String._bridgeToObjectiveC()();
  objc_msgSend(v53, "setAccessibilityIdentifier:", v59);

  objc_msgSend(v53, "setHidden:", v44 == 0);
  v60 = *(_QWORD *)(v48 + qword_10086B3C8);
  if (v60)
  {
    v61 = *(_QWORD *)(v48 + qword_10086B3C8 + 8);
    swift_unknownObjectRetain(*(_QWORD *)(v48 + qword_10086B3C8));
    v62 = sub_100467508(a1);
    swift_unknownObjectRetain(v60);
    v63 = sub_10046C688(v62, v60, v61);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease(v62);
    objc_msgSend(v46, "setNeedsLayout", sub_1004699C4((uint64_t)v63));
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_38:
  v64 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v64, v64);
  __break(1u);
}

id sub_100468468()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 150.0, 25.0, 0.0, 0.0);
  qword_100825250 = (uint64_t)result;
  return result;
}

double sub_1004684B4()
{
  double result;

  result = 8.0;
  xmmword_100825258 = xmmword_100663B80;
  *(_OWORD *)&qword_100825268 = xmmword_100663B80;
  return result;
}

void sub_1004684CC()
{
  qword_100825278 = 0x4028000000000000;
}

double sub_1004684DC()
{
  double result;

  result = 21.0;
  xmmword_100825280 = xmmword_100663B90;
  *(_OWORD *)&qword_100825290 = xmmword_100663BA0;
  return result;
}

id sub_1004684FC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 0.450980392, 0.333333333, 1.0);
  qword_1008252A0 = (uint64_t)result;
  return result;
}

id sub_100468548()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.764705882, 0.133333333, 0.180392157, 1.0);
  qword_1008252A8 = (uint64_t)result;
  return result;
}

void sub_10046859C()
{
  qword_1008252B0 = 0x402C000000000000;
}

void sub_1004685AC(uint64_t a1)
{
  sub_10046863C(0.35, a1, (SEL *)&selRef_systemGray5Color, &qword_1008252B8);
}

id sub_1004685CC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  qword_1008252C0 = (uint64_t)result;
  return result;
}

void sub_100468604(uint64_t a1)
{
  sub_10046863C(0.4, a1, (SEL *)&selRef_whiteColor, &qword_1008252C8);
}

void sub_100468620(uint64_t a1)
{
  sub_10046863C(0.08, a1, (SEL *)&selRef_whiteColor, &qword_1008252D0);
}

void sub_10046863C(double a1, uint64_t a2, SEL *a3, _QWORD *a4)
{
  id v6;
  id v7;

  v6 = objc_msgSend((id)objc_opt_self(UIColor), *a3);
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", a1);

  *a4 = v7;
}

char *sub_1004686B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD aBlock[6];
  objc_super v45;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DAF8(&qword_100826A80);
  __chkstk_darwin(v11);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = qword_1008252D8;
  v15 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  v16 = v5;
  *(_QWORD *)&v5[v14] = objc_msgSend(v15, "init");
  v17 = qword_1008252E0;
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v16[qword_1008252E8] = _swiftEmptyArrayStorage;
  v18 = qword_1008252F0;
  *(_QWORD *)&v16[v18] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v19 = &v16[qword_1008252F8];
  *(_QWORD *)v19 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  *((_QWORD *)v19 + 1) = 0;
  *(_QWORD *)&v16[qword_100825300] = _swiftEmptyArrayStorage;
  swift_weakInit(&v16[qword_100825308]);
  *(_QWORD *)&v16[qword_100825310] = _swiftEmptyArrayStorage;
  v16[qword_100825318] = 0;
  *(_QWORD *)&v16[qword_100825320] = 0;
  v16[qword_100825328] = 0;
  v20 = &v16[qword_100825330];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;

  v45.receiver = v16;
  v45.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v45, "initWithFrame:", a1, a2, a3, a4);
  v22 = qword_100805DA8;
  v23 = (char *)v21;
  if (v22 != -1)
    swift_once(&qword_100805DA8, sub_10046859C);
  objc_msgSend(v23, "_setCornerRadius:", *(double *)&qword_1008252B0);
  objc_msgSend(v23, "setClipsToBounds:", 1);
  v24 = *(void **)&v23[qword_1008252D8];
  objc_msgSend(v23, "addSubview:", v24);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[qword_1008252E0]);
  v25 = qword_1008252F0;
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[qword_1008252F0]);
  v26 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v27 = swift_allocObject(v26, 48, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1006423E0;
  v28 = qword_100805D98;
  v29 = v24;
  if (v28 != -1)
    swift_once(&qword_100805D98, sub_1004684FC);
  v30 = (void *)qword_1008252A0;
  *(_QWORD *)(v27 + 32) = qword_1008252A0;
  v31 = qword_100805DA0;
  v32 = v30;
  if (v31 != -1)
    v32 = (id)swift_once(&qword_100805DA0, sub_100468548);
  v33 = (void *)qword_1008252A8;
  *(_QWORD *)(v27 + 40) = qword_1008252A8;
  aBlock[0] = v27;
  specialized Array._endMutation()(v32);
  v34 = *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors];
  *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors] = aBlock[0];
  v35 = v33;
  swift_bridgeObjectRelease(v34);
  sub_10017F014();

  v36 = *(void **)&v23[v25];
  static UIButton.Configuration.filled()(objc_msgSend(v36, "addTarget:action:forControlEvents:", v23, "didTapDownloadAllButton", 64));
  v37 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v13, 0, 1, v37);
  UIButton.configuration.setter(v13);
  aBlock[4] = sub_10046C1A8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004AFAC;
  aBlock[3] = &unk_100755690;
  v38 = _Block_copy(aBlock);
  v39 = v36;
  objc_msgSend(v39, "setConfigurationUpdateHandler:", v38, swift_release().n128_f64[0]);
  _Block_release(v38);

  v40 = objc_msgSend(*(id *)&v23[v25], "layer");
  objc_msgSend(v40, "setCompositingFilter:", kCAFilterPlusL);

  objc_msgSend(*(id *)&v23[v25], "setOverrideUserInterfaceStyle:", 2);
  v41 = objc_msgSend(v23, "layer");
  objc_msgSend(v41, "setAllowsGroupBlending:", 0);

  v42 = *(id *)&v23[v25];
  objc_msgSend(v42, "setHidden:", 1);

  return v23;
}

char *sub_100468B7C(double a1, double a2, double a3, double a4)
{
  return sub_1004686B4(a1, a2, a3, a4);
}

void sub_100468B9C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_10046C984();
}

void sub_100468BC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1008252E8));
  swift_release(*(_QWORD *)(v0 + qword_1008252F8 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100825300));
  swift_weakDestroy(v0 + qword_100825308);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100825310));

}

id sub_100468C60()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(_QWORD *)&v0[qword_100825310];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v0[qword_100825310]);
    v5 = (uint64_t *)(v3 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      v8 = swift_getObjectType();
      swift_unknownObjectRetain(v6);
      dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v1, v8, v7);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
  }
  v10.receiver = v1;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "dealloc");
}

id sub_100468D20(void *a1)
{
  id v1;

  v1 = a1;
  return sub_100468C60();
}

void sub_100468D44(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1008252E8));
  swift_release(*(_QWORD *)(a1 + qword_1008252F8 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100825300));
  swift_weakDestroy(a1 + qword_100825308);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100825310));

}

double sub_100468DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  char *v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __n128 v42;
  double result;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;

  v1 = v0;
  v2 = type metadata accessor for LegacyAppState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (char *)&v44 - v7;
  v8 = sub_10000DAF8(&qword_100815420);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = qword_100825310;
  v11 = *(_QWORD *)(v0 + qword_100825310);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
    goto LABEL_31;
  v52 = v0;
  v63 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v11);
  sub_1001F1428(0, v12, 0);
  v59 = enum case for LegacyAppState.waiting(_:);
  v58 = enum case for LegacyAppState.purchased(_:);
  v57 = enum case for LegacyAppState.updatable(_:);
  v55 = enum case for LegacyAppState.downloadable(_:);
  v53 = enum case for LegacyAppState.paused(_:);
  v50 = enum case for LegacyAppState.downloading(_:);
  v49 = enum case for LegacyAppState.installing(_:);
  v48 = enum case for LegacyAppState.openable(_:);
  v47 = enum case for LegacyAppState.buyable(_:);
  v46 = enum case for LegacyAppState.installed(_:);
  v51 = v11;
  v14 = (uint64_t *)(v11 + 40);
  v45 = enum case for LegacyAppState.unknown(_:);
  v56 = enum case for PurchaseType.preorder(_:);
  do
  {
    v15 = *(v14 - 1);
    v16 = *v14;
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v15);
    dispatch thunk of AppStateMachine.adamId.getter(ObjectType, v16);
    v18 = v62;
    dispatch thunk of AppStateMachine.currentState.getter(ObjectType, v16);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v18, v2);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v19 == v59)
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      v20 = type metadata accessor for InstallationType(0);
LABEL_5:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v5, v20);
LABEL_6:
      v21 = 0;
      goto LABEL_14;
    }
    if (v19 == v58)
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      v22 = type metadata accessor for PurchaseType(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v5, v22);
      if (v24 != v56)
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
        goto LABEL_6;
      }
    }
    else if (v19 == v57 || v19 == v55)
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      swift_bridgeObjectRelease(*((_QWORD *)v5 + 1));
    }
    else if (v19 == v53)
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      v28 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v5, v28);
    }
    else
    {
      if (v19 == v50 || v19 == v49)
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
        v20 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
        goto LABEL_5;
      }
      if (v19 == v48)
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);

        v20 = type metadata accessor for OpenableDestination(0);
        goto LABEL_5;
      }
      if (v19 != v47)
      {
        if (v19 == v46)
          goto LABEL_6;
        if (v19 != v45)
        {
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          goto LABEL_6;
        }
      }
    }
    v21 = 1;
LABEL_14:
    v25 = *(int *)(v61 + 48);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v62, v2);
    swift_unknownObjectRelease();
    v10[v25] = v21;
    v13 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
    {
      sub_1001F1428(0, v13[2] + 1, 1);
      v13 = v63;
    }
    v27 = v13[2];
    v26 = v13[3];
    if (v27 >= v26 >> 1)
    {
      sub_1001F1428(v26 > 1, v27 + 1, 1);
      v13 = v63;
    }
    v13[2] = v27 + 1;
    sub_10002548C((uint64_t)v10, (uint64_t)v13+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v27, &qword_100815420);
    v14 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease(v51);
  v1 = v52;
LABEL_31:
  v29 = v13[2];
  if (v29)
  {
    sub_10000DAF8(&qword_100815408);
    v30 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v29);
  }
  else
  {
    v30 = &_swiftEmptyDictionarySingleton;
  }
  v63 = v30;
  swift_bridgeObjectRetain(v13);
  sub_10046BC64(v31, 1, &v63);
  v32 = swift_allocObject(&unk_100755588, 24, 7);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(v32 + 16) = v63;
  v33 = swift_allocObject(&unk_1007555B0, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, v1);
  v34 = swift_allocObject(&unk_1007555D8, 32, 7);
  *(_QWORD *)(v34 + 16) = v33;
  *(_QWORD *)(v34 + 24) = v32;
  swift_retain(v33);
  swift_retain(v32);
  sub_100469708(v33, v32);
  swift_release();
  v35 = *(char **)(v1 + v54);
  v36 = *((_QWORD *)v35 + 2);
  if (v36)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + v54), 2);
    v62 = v35;
    v37 = (uint64_t *)(v35 + 40);
    do
    {
      v38 = *(v37 - 1);
      v39 = *v37;
      v40 = swift_getObjectType();
      v41 = (_QWORD *)swift_allocObject(&unk_100755600, 40, 7);
      v41[2] = v32;
      v41[3] = sub_10046C168;
      v41[4] = v34;
      swift_retain(v32);
      swift_unknownObjectRetain(v38);
      v42 = swift_retain(v34);
      dispatch thunk of AppStateMachine.addStateTransitionObserver(_:action:)(v1, sub_10046C19C, v41, v40, v39, v42);
      swift_unknownObjectRelease();
      swift_release();
      v37 += 2;
      --v36;
    }
    while (v36);
    swift_release();
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v62, 2).n128_u64[0];
  }
  else
  {
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100469488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for LegacyAppState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for LegacyAppState.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v8 = type metadata accessor for InstallationType(0);
LABEL_3:
    v9 = v8;
    v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v11 = v6;
LABEL_4:
    v10(v11, v9);
    return 0;
  }
  if (v7 == enum case for LegacyAppState.purchased(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v2 = type metadata accessor for PurchaseType(0);
    v13 = *(_QWORD *)(v2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v6, v2) != enum case for PurchaseType.preorder(_:))
    {
      v10 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_9:
      v11 = v6;
      v9 = v2;
      goto LABEL_4;
    }
  }
  else if (v7 == enum case for LegacyAppState.updatable(_:) || v7 == enum case for LegacyAppState.downloadable(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else if (v7 == enum case for LegacyAppState.paused(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v14 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
  }
  else
  {
    if (v7 == enum case for LegacyAppState.downloading(_:) || v7 == enum case for LegacyAppState.installing(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
      v8 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
      goto LABEL_3;
    }
    if (v7 == enum case for LegacyAppState.openable(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);

      v8 = type metadata accessor for OpenableDestination(0);
      goto LABEL_3;
    }
    if (v7 != enum case for LegacyAppState.buyable(_:))
    {
      if (v7 == enum case for LegacyAppState.installed(_:))
        return 0;
      if (v7 != enum case for LegacyAppState.unknown(_:))
      {
        v10 = *(void (**)(char *, uint64_t))(v3 + 8);
        goto LABEL_9;
      }
    }
  }
  return 1;
}

BOOL sub_100469708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  _BYTE v16[24];
  _BYTE v17[24];

  v4 = sub_10000DAF8(&qword_100825390);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  v8 = (void *)Strong;
  if (Strong)
  {
    v9 = *(id *)(Strong + qword_1008252F0);

    swift_beginAccess(a2 + 16, v16, 0, 0);
    v10 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain(v10);
    sub_1004676CC(v11, (uint64_t)v6);
    swift_bridgeObjectRelease(v10);
    v12 = sub_10000DAF8(&qword_100825398);
    v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12) != 1;
    sub_100010F2C((uint64_t)v6, &qword_100825390);
    objc_msgSend(v9, "setEnabled:", v13);

  }
  return v8 == 0;
}

uint64_t sub_10046984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t ObjectType;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  _BYTE v25[24];

  v22 = a5;
  v23 = a4;
  v7 = type metadata accessor for LegacyAppState(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AdamId(0);
  v11 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  dispatch thunk of AppStateMachine.adamId.getter(ObjectType, a2);
  dispatch thunk of AppStateMachine.currentState.getter(ObjectType, a2);
  LOBYTE(ObjectType) = sub_100469488();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess(a3 + 16, v25, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a3 + 16));
  v24 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a3 + 16) = 0x8000000000000000;
  sub_1001FA208(ObjectType & 1, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  v16 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a3 + 16) = v24;
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v21, v17);
  v18 = swift_endAccess(v25);
  return v23(v18);
}

double sub_1004699C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v2 = v1;
  v4 = qword_100825310;
  v5 = *(_QWORD *)(v1 + qword_100825310);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + qword_100825310));
    v7 = (uint64_t *)(v5 + 40);
    do
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v8);
      dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v2, ObjectType, v9);
      swift_unknownObjectRelease();
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
    v5 = *(_QWORD *)(v2 + v4);
  }
  *(_QWORD *)(v2 + v4) = a1;
  swift_bridgeObjectRelease(v5);
  return sub_100468DF0();
}

uint64_t sub_100469A78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v9 = type metadata accessor for AttributeContainer(0, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a4, a1, v9);
  swift_getKeyPath(&unk_100663C60);
  KeyPath = swift_getKeyPath(&unk_100663C90);
  v21 = (uint64_t)a2;
  v11 = sub_100307AF0();
  v12 = a2;
  AttributeContainer.subscript.setter(&v21, KeyPath, v11);
  v20 = swift_getKeyPath(&unk_100663CD0);
  v13 = swift_getKeyPath(&unk_100663D00);
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_100806660 != -1)
    swift_once(&qword_100806660, sub_1004C9958);
  v14 = type metadata accessor for FontUseCase(0);
  v15 = sub_10000EFC4(v14, (uint64_t)qword_10086A3F8);
  v16 = objc_msgSend(a3, "traitCollection", v20);
  v17 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v15, v16);

  v21 = v17;
  v18 = sub_10001888C();
  return AttributeContainer.subscript.setter(&v21, v13, v18);
}

uint64_t sub_100469BEC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  _BYTE v36[24];

  ObjectType = swift_getObjectType();
  v4 = type metadata accessor for DisjointStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v32 = (char *)&v27 - v9;
  v33 = type metadata accessor for VerticalStack(0);
  v31 = *(_QWORD *)(v33 - 8);
  v10 = __chkstk_darwin(v33);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  VerticalStack.init(with:)(sub_10046CE64, 0, v10);
  v13 = (uint64_t *)(v1 + qword_1008252E8);
  swift_beginAccess(v1 + qword_1008252E8, v36, 0, 0);
  v14 = *v13;
  v15 = *(_QWORD *)(*v13 + 16);
  if (v15)
  {
    v27 = v1;
    v28 = v5;
    v29 = a1;
    v30 = v4;
    swift_bridgeObjectRetain(v14);
    v16 = 0;
    v17 = (uint64_t *)(v14 + 40);
    do
    {
      v18 = *v17;
      v19 = (id)*(v17 - 1);
      sub_100469E8C(v16, v19, v18, (uint64_t)v12, v15, ObjectType);

      v17 += 2;
      ++v16;
    }
    while (v15 != v16);
    swift_bridgeObjectRelease(v14);
    a1 = v29;
    v4 = v30;
    v1 = v27;
    v5 = v28;
  }
  DisjointStack.init(with:)(0, 0);
  v34 = *(_QWORD *)(v1 + qword_1008252E0);
  v20 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  Measurable.placeable.getter(v35, v20, &protocol witness table for UIView);
  v21 = v32;
  DisjointStack.inserting(_:at:with:)(v35, 0, 1, sub_10046A09C, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v35);
  v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v7, v4);
  v23 = v33;
  v35[3] = v33;
  v35[4] = &protocol witness table for VerticalStack;
  v24 = sub_1000119C0(v35);
  v25 = v31;
  (*(void (**)(_QWORD *, char *, uint64_t))(v31 + 16))(v24, v12, v23);
  a1[3] = v4;
  a1[4] = &protocol witness table for DisjointStack;
  sub_1000119C0(a1);
  DisjointStack.inserting(_:at:with:)(v35, 0, 1, sub_10046A1E8, 0);
  v22(v21, v4);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v35);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v23);
}

uint64_t sub_100469E8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int128 v11;
  double v12;
  double v13;
  id v14;
  _QWORD *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  if (qword_100805D80 != -1)
    swift_once(&qword_100805D80, sub_1004684B4);
  v11 = xmmword_100825258;
  v12 = *(double *)&qword_100825268;
  v13 = unk_100825270;
  v17[3] = swift_getObjectType();
  v17[4] = a3;
  v17[0] = a2;
  v18[3] = type metadata accessor for Margins(0);
  v18[4] = &protocol witness table for Margins;
  sub_1000119C0(v18);
  v14 = a2;
  Margins.init(insets:child:)(v17, *(double *)&v11, *((double *)&v11 + 1), v12, v13);
  v15 = (_QWORD *)swift_allocObject(&unk_100755758, 40, 7);
  v15[2] = a1;
  v15[3] = a5;
  v15[4] = a6;
  VerticalStack.add(_:with:)(v18, sub_10046CE40, v15);
  swift_release();
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

uint64_t sub_100469FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  void *v9;
  void *v10;

  v5 = 0;
  if (!a2)
  {
    if (qword_100805D88 != -1)
      swift_once(&qword_100805D88, sub_1004684CC);
    v5 = qword_100825278;
  }
  v9 = &type metadata for CGFloat;
  v10 = &protocol witness table for CGFloat;
  v8[0] = v5;
  VerticalStack.Properties.topSpacing.setter(v8);
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  v6 = 0;
  if (a3 - 1 == a2)
  {
    if (qword_100805D88 == -1)
    {
LABEL_8:
      v6 = qword_100825278;
      goto LABEL_9;
    }
LABEL_11:
    swift_once(&qword_100805D88, sub_1004684CC);
    goto LABEL_8;
  }
LABEL_9:
  v9 = &type metadata for CGFloat;
  v10 = &protocol witness table for CGFloat;
  v8[0] = v6;
  return VerticalStack.Properties.bottomSpacing.setter(v8);
}

uint64_t sub_10046A09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t, __n128);
  _QWORD *v9;
  __n128 v10;
  _QWORD *v11;
  __n128 v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v16;

  v0 = type metadata accessor for DisjointStack.EdgePosition(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ZeroDimension(0);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  v5 = sub_1000119C0(v3);
  v6 = static ZeroDimension.zero.getter(v5);
  v7 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v8 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v1 + 104);
  v8(v3, enum case for DisjointStack.EdgePosition.anchored(_:), v0, v6);
  DisjointStack.Properties.topEdge.setter(v3);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  v9 = sub_1000119C0(v3);
  v10 = static ZeroDimension.zero.getter(v9);
  v8(v3, v7, v0, v10);
  DisjointStack.Properties.leadingEdge.setter(v3);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  v11 = sub_1000119C0(v3);
  v12 = static ZeroDimension.zero.getter(v11);
  v8(v3, v7, v0, v12);
  DisjointStack.Properties.bottomEdge.setter(v3);
  v3[3] = v4;
  v3[4] = &protocol witness table for ZeroDimension;
  v13 = sub_1000119C0(v3);
  v14 = static ZeroDimension.zero.getter(v13);
  v8(v3, v7, v0, v14);
  DisjointStack.Properties.trailingEdge.setter(v3);
  return DisjointStack.Properties.anchorsHugContent.setter(1);
}

uint64_t sub_10046A1E8()
{
  return DisjointStack.Properties.anchorsHugContent.setter(1);
}

uint64_t sub_10046A20C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (**v9)(double, double);
  uint64_t v10;
  uint64_t v11;
  double (**v12)(double, double);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void (*v22)(double (**)(double, double), uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  id v26;
  _QWORD *v27;
  _QWORD *v28;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD v34[5];
  _QWORD v35[5];

  v33 = a1;
  v2 = type metadata accessor for Resize.Rule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v30 = (char *)&v30 - v6;
  __chkstk_darwin(v7);
  v9 = (double (**)(double, double))((char *)&v30 - v8);
  __chkstk_darwin(v10);
  v12 = (double (**)(double, double))((char *)&v30 - v11);
  v13 = type metadata accessor for VerticalStack(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v30 - v19;
  VerticalStack.init(with:)(sub_10008AE6C, 0, v18);
  sub_100469BEC(v35);
  VerticalStack.adding(_:with:)(v35, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v35);
  v32 = v14;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v21 = *(void **)(v1 + qword_1008252F0);
  if ((objc_msgSend(v21, "isHidden") & 1) == 0)
  {
    v34[3] = sub_100018B6C(0, (unint64_t *)&qword_100819C20, UIButton_ptr);
    v34[4] = &protocol witness table for UIButton;
    v34[0] = v21;
    *v12 = sub_100079E4C;
    v12[1] = 0;
    v22 = *(void (**)(double (**)(double, double), uint64_t, uint64_t))(v3 + 104);
    v22(v12, enum case for Resize.Rule.recalculated(_:), v2);
    v23 = enum case for Resize.Rule.unchanged(_:);
    v22(v9, enum case for Resize.Rule.unchanged(_:), v2);
    v24 = v30;
    v22((double (**)(double, double))v30, v23, v2);
    v25 = v31;
    v22((double (**)(double, double))v31, v23, v2);
    v35[3] = type metadata accessor for Resize(0);
    v35[4] = &protocol witness table for Resize;
    sub_1000119C0(v35);
    v26 = v21;
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v34, v12, v9, v24, v25);
    VerticalStack.add(_:with:)(v35, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v35);
  }
  v27 = v33;
  v33[3] = v13;
  v27[4] = &protocol witness table for VerticalStack;
  v28 = sub_1000119C0(v27);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v32 + 32))(v28, v20, v13);
}

id sub_10046A4CC()
{
  char *v0;
  uint64_t v1;
  void (*v2)(void);
  void *v3;

  v1 = type metadata accessor for CustomLayoutView(0);
  v2 = (void (*)(void))method lookup function for CustomLayoutView(v1, &method descriptor for CustomLayoutView.didLayout());
  v2();
  v3 = *(void **)&v0[qword_1008252D8];
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v3, "setFrame:");
}

void sub_10046A524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  double v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v4 = v3;
  v50 = a2;
  v51 = a3;
  v52 = a1;
  v5 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DAF8(&qword_10080B190);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = type metadata accessor for OfferStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 1, 1, v21);
  v22 = type metadata accessor for OfferEnvironment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v13, 1, 1, v22);
  if (qword_100805DC8 != -1)
    swift_once(&qword_100805DC8, sub_100468620);
  v23 = qword_100805DB8;
  v24 = (id)qword_1008252D0;
  if (v23 != -1)
    swift_once(&qword_100805DB8, sub_1004685CC);
  v25 = (void *)qword_1008252C0;
  *v10 = v24;
  v10[1] = v25;
  v26 = enum case for OfferTint.custom(_:);
  v27 = type metadata accessor for OfferTint(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v28 + 104))(v10, v26, v27);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v27);
  v29 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  v30 = v25;
  sub_10040A58C(v52, v4, (uint64_t)v19, v51, 0, 0, (uint64_t)v16, (uint64_t)v13, (uint64_t)v10, (uint64_t)v7);
  v4[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  sub_1005475A0();
  objc_msgSend(v4, "setNeedsLayout", v50);
  sub_1005475A0();
  sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_10080A0D0);
  sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_100815D70);
  sub_100010F2C((uint64_t)v13, (uint64_t *)&unk_10080A0E0);
  sub_100010F2C((uint64_t)v16, &qword_100815D80);
  sub_100010F2C((uint64_t)v19, (uint64_t *)&unk_10080A0F0);
  if (Lockup.icon.getter(v31))
  {
    v33 = (double *)&v4[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics];
    swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics], v53, 0, 0);
    v34 = Artwork.config(using:)(*v33, v33[1]);
    v35 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
    v36 = type metadata accessor for ArtworkView(0);
    v37 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2, 1, v35, v36, v37);
    swift_release();
    *(_QWORD *)&v32 = swift_release().n128_u64[0];
  }
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel], "setOverrideUserInterfaceStyle:", 2, v32);
  v38 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel;
  v39 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel];
  if (v39)
  {
    objc_msgSend(v39, "setOverrideUserInterfaceStyle:", 2);
    v40 = *(void **)&v4[v38];
    if (v40)
    {
      v41 = objc_msgSend(v40, "layer");
      objc_msgSend(v41, "setCompositingFilter:", kCAFilterPlusL);

      v42 = *(void **)&v4[v38];
      if (v42)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v43 = v42;
        v44 = (void *)static UIColor.secondaryText.getter(v43);
        objc_msgSend(v43, "setTextColor:", v44);

      }
    }
  }
  v45 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerButton];
  v46 = objc_msgSend(v45, "layer");
  objc_msgSend(v46, "setCompositingFilter:", kCAFilterPlusL);

  v47 = OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_allowsGroupBlending;
  v4[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_allowsGroupBlending] = 0;
  v48 = objc_msgSend(v4, "layer");
  objc_msgSend(v48, "setAllowsGroupBlending:", v4[v47]);

  v49 = objc_msgSend(v45, "layer");
  objc_msgSend(v49, "setAllowsGroupBlending:", v4[v47]);

}

void sub_10046AA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v18[24];
  __int128 v19;
  __int128 v20;
  _BYTE v21[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = UIResponder.nearestActionRunner.getter();

    if (v13)
    {
      swift_beginAccess(v10, v18, 0, 0);
      v14 = swift_unknownObjectWeakLoadStrong(v10);
      if (v14)
      {
        v15 = v14;
        *((_QWORD *)&v20 + 1) = type metadata accessor for ArcadeDownloadPackGamesCardView(0);
        *(_QWORD *)&v19 = v15;
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a2, &v19, v9, a3);
      v16 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
      sub_100010F2C((uint64_t)&v19, &qword_100808F20);
    }
  }
}

void sub_10046ABE4()
{
  id *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  CGFloat v16;
  void *v17;
  id *v18;
  uint64_t v19;
  id *v20;
  char v21[24];
  CGAffineTransform aBlock;

  v1 = *(id *)((char *)v0 + qword_1008252E0);
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  objc_msgSend(v1, "setTransform:", &aBlock);
  v2 = (char *)v0 + qword_1008252E8;
  swift_beginAccess((char *)v0 + qword_1008252E8, v21, 0, 0);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (!v4)
  {
LABEL_18:
    objc_msgSend(*(id *)((char *)v0 + qword_1008252F0), "setAlpha:", 0.0);
    if (qword_100805D78 != -1)
      goto LABEL_21;
    goto LABEL_19;
  }
  v19 = v3;
  v20 = v0;
  v0 = (id *)(v3 + 32);
  swift_bridgeObjectRetain_n(v3, 2);
  v5 = 0;
  while (1)
  {
    v6 = v0[2 * v5];
    v7 = objc_msgSend(v6, "subviews");
    v8 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    if ((unint64_t)v9 >> 62)
      break;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (v10)
      goto LABEL_6;
LABEL_3:
    ++v5;
    swift_bridgeObjectRelease_n(v9, 2);

    if (v5 == v4)
    {
      swift_bridgeObjectRelease_n(v19, 2);
      v0 = v20;
      goto LABEL_18;
    }
  }
  if (v9 < 0)
    v14 = v9;
  else
    v14 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v10)
    goto LABEL_3;
LABEL_6:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      else
        v12 = *(id *)(v9 + 8 * i + 32);
      v13 = v12;
      objc_msgSend(v12, "setAlpha:", 0.0);

    }
    goto LABEL_3;
  }
  __break(1u);
LABEL_21:
  swift_once(&qword_100805D78, sub_100468468);
LABEL_19:
  v15 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_100825250, 0.0);
  v16 = COERCE_DOUBLE(swift_allocObject(&unk_100755650, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v16 + 16) = v0;
  *(_QWORD *)&aBlock.tx = sub_10046C964;
  aBlock.ty = v16;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000924A0;
  *(_QWORD *)&aBlock.d = &unk_100755668;
  v17 = _Block_copy(&aBlock);
  v18 = v0;
  objc_msgSend(v15, "addAnimations:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  objc_msgSend(v15, "startAnimationAfterDelay:", 0.16);

}

void sub_10046AEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];
  _BYTE v20[24];

  v1 = a1;
  v2 = (uint64_t *)(a1 + qword_1008252E8);
  swift_beginAccess(a1 + qword_1008252E8, v20, 0, 0);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  if (!v4)
  {
LABEL_18:
    objc_msgSend(*(id *)(v1 + qword_1008252F0), "setAlpha:", 1.0);
    v16 = *(void **)(v1 + qword_1008252E0);
    v19[0] = 0x3FF0000000000000;
    v19[1] = 0;
    v19[2] = 0;
    v19[3] = 0x3FF0000000000000;
    v19[4] = 0;
    v19[5] = 0;
    objc_msgSend(v16, "setTransform:", v19);
    return;
  }
  v17 = *v2;
  v18 = v1;
  v5 = v3 + 32;
  swift_bridgeObjectRetain_n(v3, 2);
  v6 = 0;
  while (1)
  {
    v7 = *(id *)(v5 + 16 * v6);
    v8 = objc_msgSend(v7, "subviews");
    v9 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if ((unint64_t)v10 >> 62)
      break;
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (v11)
      goto LABEL_6;
LABEL_3:
    ++v6;
    swift_bridgeObjectRelease_n(v10, 2);

    if (v6 == v4)
    {
      swift_bridgeObjectRelease_n(v17, 2);
      v1 = v18;
      goto LABEL_18;
    }
  }
  if (v10 < 0)
    v15 = v10;
  else
    v15 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v11 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v11)
    goto LABEL_3;
LABEL_6:
  if (v11 >= 1)
  {
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
      else
        v13 = *(id *)(v10 + 8 * i + 32);
      v14 = v13;
      objc_msgSend(v13, "setAlpha:", 1.0);

    }
    goto LABEL_3;
  }
  __break(1u);
}

uint64_t sub_10046B0C8(char *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  char *v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t))&a1[qword_1008252F8];
  v1 = *(_QWORD *)&a1[qword_1008252F8 + 8];
  v3 = a1;
  v4 = swift_retain(v1);
  v2(v4);

  return swift_release(v1);
}

void sub_10046B114()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  char *v38;
  char v39[24];
  char v40[24];

  v1 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v1);
  v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - v4;
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)&v0[qword_100825300];
  swift_beginAccess(&v0[qword_100825300], v40, 0, 0);
  v10 = *v9;
  if ((unint64_t)*v9 >> 62)
    goto LABEL_14;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*v9, 2);
  if (v11)
  {
    while (v11 >= 1)
    {
      v37 = v10 & 0xC000000000000001;
      v38 = &v0[qword_1008252E8];
      swift_beginAccess(&v0[qword_1008252E8], v39, 0, 0);
      v12 = 0;
      v13 = 32;
      v33 = v5;
      v34 = v10;
      while (1)
      {
        if (v37)
        {
          v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
        }
        else
        {
          v14 = *(_QWORD *)(v10 + 8 * v12 + 32);
          swift_retain(v14);
        }
        if (v12 >= *(_QWORD *)(*(_QWORD *)v38 + 16))
          break;
        v15 = *(id *)(*(_QWORD *)v38 + v13);
        v0 = (char *)v14;
        Lockup.impressionMetrics.getter(v15);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {

          sub_100010F2C((uint64_t)v5, &qword_1008131E0);
        }
        else
        {
          v16 = v36;
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v36, v5, v6);
          v17 = v15;
          objc_msgSend(v17, "bounds");
          v19 = v18;
          v21 = v20;
          v23 = v22;
          v25 = v24;
          v26 = objc_msgSend((id)objc_opt_self(UIColor), "blueColor");
          v27 = objc_allocWithZone((Class)type metadata accessor for ImpressionMetricsDebugOverlay());
          v0 = sub_1000E7B58(v26, (uint64_t)v27, v19, v21, v23, v25);
          v28 = v11;
          v29 = (uint64_t)v35;
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v16, v6);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
          sub_1000E7E98(v29);
          sub_100010F2C(v29, &qword_1008131E0);
          v30 = objc_msgSend(v17, "viewWithTag:", 58236912);
          objc_msgSend(v30, "removeFromSuperview");

          v11 = v28;
          v5 = v33;
          objc_msgSend(v17, "addSubview:", v0);

          v31 = v16;
          v10 = v34;
          (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
        }
        swift_release();
        ++v12;
        v13 += 16;
        if (v11 == v12)
          goto LABEL_18;
      }
      __break(1u);
LABEL_14:
      if (v10 < 0)
        v32 = v10;
      else
        v32 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v10, 2);
      v11 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (!v11)
        goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease_n(v10, 2);
  }
}

void sub_10046B4A4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  __n128 v15;
  _QWORD v16[4];

  v2 = v1;
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v2 + qword_100825300);
  swift_beginAccess(v2 + qword_100825300, v16, 32, 0);
  v9 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v9);
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_15:
    __break(1u);
    return;
  }
  swift_retain(*(_QWORD *)(v9 + 8 * a1 + 32));
LABEL_5:
  swift_endAccess(v16);
  v11 = Lockup.clickAction.getter(v10);
  if (v11)
  {
    v12 = v11;
    Strong = swift_weakLoadStrong(v2 + qword_100825308);
    if (Strong)
    {
      v14 = Strong;
      if (UIResponder.nearestActionRunner.getter())
      {
        dispatch thunk of Lockup.clickSender.getter(v16);
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v4);
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v12, v16, v7, v14);
        swift_release();
        swift_release();
        swift_release();
        v15 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
        sub_100010F2C((uint64_t)v16, &qword_100808F20);
        return;
      }
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  swift_release();
}

void sub_10046B670(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unsigned int v22;
  char v23;
  NSSet v24;
  char *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  objc_class *v29;
  objc_super v30;
  char v31[24];
  objc_super v32;
  objc_super v33;
  objc_super v34;

  ObjectType = (objc_class *)swift_getObjectType();
  if (v2[qword_100825318] == 1)
  {
    v6 = qword_100825320;
    v7 = *(void **)&v2[qword_100825320];
    if (!v7
      || objc_msgSend(v7, "phase") == (id)3
      || (v8 = *(void **)&v2[v6]) != 0 && objc_msgSend(v8, "phase") == (id)4)
    {
      swift_bridgeObjectRetain(a1);
      v10 = (void *)sub_1004EA504(v9);
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(a1).n128_u64[0];
      if (v10)
      {
        objc_msgSend(v10, "locationInView:", v2, v11);
        v13 = v12;
        v15 = v14;
        v16 = &v2[qword_1008252E8];
        swift_beginAccess(&v2[qword_1008252E8], v31, 0, 0);
        v17 = *(_QWORD *)v16;
        v18 = *(_QWORD *)(v17 + 16);
        if (v18)
        {
          v27 = v10;
          v28 = v6;
          v29 = ObjectType;
          swift_bridgeObjectRetain(v17);
          v19 = 0;
          v20 = 32;
          while (1)
          {
            v21 = *(id *)(v17 + v20);
            objc_msgSend(v21, "convertPoint:fromCoordinateSpace:", v2, v13, v15);
            v22 = objc_msgSend(v21, "pointInside:withEvent:", a2);

            if (v22)
              break;
            ++v19;
            v20 += 16;
            if (v18 == v19)
            {
              swift_bridgeObjectRelease(v17);
              v19 = 0;
              v23 = 1;
              goto LABEL_17;
            }
          }
          swift_bridgeObjectRelease(v17);
          v23 = 0;
LABEL_17:
          ObjectType = v29;
          v10 = v27;
          v6 = v28;
        }
        else
        {
          v19 = 0;
          v23 = 1;
        }
        v25 = &v2[qword_100825330];
        *(_QWORD *)v25 = v19;
        v25[8] = v23;
        v26 = *(void **)&v2[v6];
        *(_QWORD *)&v2[v6] = v10;

        sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
        sub_100225F48();
        v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
        v30.receiver = v2;
        v30.super_class = ObjectType;
        objc_msgSendSuper2(&v30, "touchesBegan:withEvent:", v24.super.isa, a2);
      }
      else
      {
        sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
        sub_100225F48();
        v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
        v32.receiver = v2;
        v32.super_class = ObjectType;
        objc_msgSendSuper2(&v32, "touchesBegan:withEvent:", v24.super.isa, a2);
      }
    }
    else
    {
      sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
      sub_100225F48();
      v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
      v33.receiver = v2;
      v33.super_class = ObjectType;
      objc_msgSendSuper2(&v33, "touchesBegan:withEvent:", v24.super.isa, a2);
    }
  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v34.receiver = v2;
    v34.super_class = ObjectType;
    objc_msgSendSuper2(&v34, "touchesBegan:withEvent:", v24.super.isa, a2);
  }

}

double sub_10046B96C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100223F40(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10046B670);
}

void sub_10046B978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  NSSet v11;
  objc_super v12;
  objc_super v13;
  objc_super v14;

  ObjectType = swift_getObjectType();
  if (*(_BYTE *)(v2 + qword_100825318) != 1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v11.super.isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSendSuper2(&v14, "touchesEnded:withEvent:", v11.super.isa, a2, v12.receiver, v12.super_class, v13.receiver, v13.super_class, v2, ObjectType);
    goto LABEL_11;
  }
  v6 = qword_100825320;
  v7 = *(void **)(v2 + qword_100825320);
  if (!v7)
  {
LABEL_10:
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v11.super.isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSendSuper2(&v13, "touchesEnded:withEvent:", v11.super.isa, a2, v12.receiver, v12.super_class, v2, ObjectType, v14.receiver, v14.super_class);
    goto LABEL_11;
  }
  v8 = v7;
  if ((sub_10057625C(v8, a1) & 1) == 0)
  {

    goto LABEL_10;
  }
  v9 = *(void **)(v2 + v6);
  *(_QWORD *)(v2 + v6) = 0;

  v10 = v2 + qword_100825330;
  if ((*(_BYTE *)(v2 + qword_100825330 + 8) & 1) == 0 && (*(_BYTE *)(v2 + qword_100825328) & 1) == 0)
    sub_10046B4A4(*(_QWORD *)v10);

  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
  sub_100225F48();
  v11.super.isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSendSuper2(&v12, "touchesEnded:withEvent:", v11.super.isa, a2, v2, ObjectType, v13.receiver, v13.super_class, v14.receiver, v14.super_class);
LABEL_11:

}

double sub_10046BB24(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100223F40(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10046B978);
}

void sub_10046BB30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  void *v5;
  uint64_t v6;
  NSSet v7;
  objc_super v8;
  objc_super v9;

  ObjectType = swift_getObjectType();
  if (*(_BYTE *)(v2 + qword_100825318) == 1)
  {
    v5 = *(void **)(v2 + qword_100825320);
    *(_QWORD *)(v2 + qword_100825320) = 0;

    v6 = v2 + qword_100825330;
    *(_QWORD *)v6 = 0;
    *(_BYTE *)(v6 + 8) = 1;
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v7.super.isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSendSuper2(&v8, "touchesCancelled:withEvent:", v7.super.isa, a2, v2, ObjectType, v9.receiver, v9.super_class);
  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008285A0, UITouch_ptr);
    sub_100225F48();
    v7.super.isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSendSuper2(&v9, "touchesCancelled:withEvent:", v7.super.isa, a2, v8.receiver, v8.super_class, v2, ObjectType);
  }

}

double sub_10046BC50(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100223F40(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_10046BB30);
}

uint64_t sub_10046BC5C()
{
  return type metadata accessor for ArcadeDownloadPackGamesCardView(0);
}

void sub_10046BC64(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  char v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  Swift::String v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(unint64_t, char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v7 = type metadata accessor for AdamId(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_100815420);
  __chkstk_darwin(v11);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  LODWORD(v62) = a2;
  v59 = v3;
  v17 = *(int *)(v12 + 48);
  v58 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v58;
  v64 = *(_QWORD *)(v13 + 72);
  v61 = a1;
  swift_bridgeObjectRetain(a1);
  sub_100018ADC(v18, (uint64_t)v15, &qword_100815420);
  v60 = v8;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v65 = v7;
  v66 = v19;
  v19((unint64_t)v10, v15, v7);
  v63 = v17;
  v20 = v15[v17];
  v21 = (_QWORD *)*a3;
  v23 = sub_10057EA60((uint64_t)v10);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
    goto LABEL_24;
  v27 = v22;
  if (v21[3] >= v26)
  {
    if ((v62 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1001FB144();
      if ((v27 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v34 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v35 = v34[6];
    v62 = *(_QWORD *)(v60 + 72);
    v36 = v65;
    v66(v35 + v62 * v23, v10, v65);
    *(_BYTE *)(v34[7] + v23) = v20;
    v37 = v34[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v34[2] = v39;
    v40 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n(v61, 2);
      return;
    }
    v41 = v61 + v64 + v58;
    while (1)
    {
      sub_100018ADC(v41, (uint64_t)v15, &qword_100815420);
      v66((unint64_t)v10, v15, v36);
      v42 = v15[v63];
      v43 = (_QWORD *)*a3;
      v45 = sub_10057EA60((uint64_t)v10);
      v46 = v43[2];
      v47 = (v44 & 1) == 0;
      v48 = v46 + v47;
      if (__OFADD__(v46, v47))
        break;
      v49 = v44;
      if (v43[3] < v48)
      {
        sub_1001F443C(v48, 1);
        v50 = sub_10057EA60((uint64_t)v10);
        if ((v49 & 1) != (v51 & 1))
          goto LABEL_26;
        v45 = v50;
      }
      if ((v49 & 1) != 0)
        goto LABEL_10;
      v52 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      v36 = v65;
      v66(v52[6] + v62 * v45, v10, v65);
      *(_BYTE *)(v52[7] + v45) = v42;
      v53 = v52[2];
      v38 = __OFADD__(v53, 1);
      v54 = v53 + 1;
      if (v38)
        goto LABEL_25;
      v52[2] = v54;
      v41 += v64;
      if (!--v40)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1001F443C(v26, v62 & 1);
  v28 = sub_10057EA60((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    if ((v27 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v30 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v30);
    v69 = v30;
    swift_errorRetain(v30);
    v31 = sub_10000DAF8(&qword_1008253A0);
    if ((swift_dynamicCast(v31, &v69, v31, &type metadata for _MergeError, 0) & 1) == 0)
    {
      v32 = v61;
      v33 = swift_bridgeObjectRelease(v61);
      (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v10, v65, v33);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(v69);
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v65);
  __break(1u);
LABEL_27:
  v67 = 0;
  v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v55._object = (void *)0x80000001006A5BB0;
  v55._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v55);
  _print_unlocked<A, B>(_:_:)(v10, &v67, v65, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v56._countAndFlagsBits = 39;
  v56._object = (void *)0xE100000000000000;
  String.append(_:)(v56);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v67, v68, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

uint64_t sub_10046C0F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046C118()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046C13C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_10046C168()
{
  uint64_t v0;

  return sub_100469708(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10046C170()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10046C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10046984C(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10046C1A8(void *a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  id v26;
  id v27;
  BOOL v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v2 = sub_10000DAF8((uint64_t *)&unk_100826A90);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIBackgroundConfiguration(0, v3);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  __chkstk_darwin(v6);
  v46 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v11 = sub_10000DAF8(&qword_10080E380);
  __chkstk_darwin(v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8(&qword_100826A80);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - v18;
  v20 = type metadata accessor for UIButton.Configuration(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIButton.configuration.getter(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    return sub_100010F2C((uint64_t)v19, &qword_100826A80);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v19, v20);
  v26 = objc_msgSend(a1, "state");
  if (v26 == (id)2)
  {
    if (qword_100805DC8 != -1)
      swift_once(&qword_100805DC8, sub_100468620);
    v45 = UIColor.highlighted.getter();
    if (qword_100805DC0 != -1)
      swift_once(&qword_100805DC0, sub_100468604);
    v29 = &qword_1008252C8;
  }
  else
  {
    if (v26 == (id)1)
    {
      if (qword_100805DC8 != -1)
        swift_once(&qword_100805DC8, sub_100468620);
      v27 = (id)UIColor.highlighted.getter();
      v28 = qword_100805DB8 == -1;
    }
    else
    {
      if (qword_100805DC8 != -1)
        swift_once(&qword_100805DC8, sub_100468620);
      v30 = qword_100805DB8;
      v27 = (id)qword_1008252D0;
      v28 = v30 == -1;
    }
    v45 = (uint64_t)v27;
    if (!v28)
      swift_once(&qword_100805DB8, sub_1004685CC);
    v29 = &qword_1008252C0;
  }
  v31 = qword_100805D90;
  v32 = (id)*v29;
  if (v31 != -1)
    swift_once(&qword_100805D90, sub_1004684DC);
  UIButton.Configuration.contentInsets.setter(*(double *)&xmmword_100825280, *((double *)&xmmword_100825280 + 1), *(double *)&qword_100825290, unk_100825298);
  v33 = swift_allocObject(&unk_1007556C8, 32, 7);
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v33 + 24) = a1;
  v44 = v32;
  a1;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10046CDC0, v33);
  v34 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v13, 0, 1, v34);
  v35 = UIButton.Configuration.titleTextAttributesTransformer.setter(v13);
  UIButton.Configuration.background.getter(v35);
  UIBackgroundConfiguration.cornerRadius.setter(0.0);
  v36 = swift_allocObject(&unk_1007556F0, 24, 7);
  v37 = (void *)v45;
  *(_QWORD *)(v36 + 16) = v45;
  v38 = v37;
  UIConfigurationColorTransformer.init(_:)(sub_10046CDC8, v36);
  v39 = type metadata accessor for UIConfigurationColorTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v5, 0, 1, v39);
  UIBackgroundConfiguration.backgroundColorTransformer.setter(v5);
  v40 = v46;
  v41 = v47;
  v42 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v10, v48);
  UIButton.Configuration.background.setter(v40);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v24, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
  UIButton.configuration.setter(v16);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
}

_QWORD *sub_10046C688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1001F1454(0, v3, 0);
    v5 = *(_QWORD *)(type metadata accessor for AdamId(0) - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    ObjectType = swift_getObjectType();
    v15 = *(_QWORD *)(v5 + 72);
    v16 = ObjectType;
    do
    {
      v8 = dispatch thunk of AppStateController.stateMachine(forApp:)(v6, v16, a3);
      v10 = v9;
      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_1001F1454(v11 > 1, v12 + 1, 1);
      _swiftEmptyArrayStorage[2] = v12 + 1;
      v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      v6 += v15;
      --v3;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10046C7A8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10046C7DC()
{
  uint64_t *v0;

  sub_10046AA94(v0[2], v0[3], v0[4]);
}

double sub_10046C7E8(uint64_t a1, void *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  _QWORD v9[43];

  if (qword_100806AD8 != -1)
    swift_once(&qword_100806AD8, sub_100545BDC);
  sub_100225678((uint64_t)&xmmword_10086AF70, (uint64_t)v9);
  if (qword_100806AE0 != -1)
    swift_once(&qword_100806AE0, sub_1005460A4);
  sub_100547CBC((uint64_t)v9, (uint64_t)&xmmword_10086B0D0, a2, 0.0);
  v5 = v4;
  sub_1002256B4(v9);
  if (qword_100805D88 != -1)
    swift_once(&qword_100805D88, sub_1004684CC);
  v6 = *(double *)&qword_100825278;
  v7 = *(double *)&qword_100825278;
  if (qword_100805D80 != -1)
  {
    swift_once(&qword_100805D80, sub_1004684B4);
    v7 = *(double *)&qword_100825278;
  }
  return v7 + v6 + (ceil(v5) + *(double *)&xmmword_100825258 + *(double *)&qword_100825268) * (double)a1;
}

uint64_t sub_10046C940()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10046C964()
{
  uint64_t v0;

  sub_10046AEDC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10046C96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10046C97C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10046C984()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;

  v1 = qword_1008252D8;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v2 = qword_1008252E0;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[qword_1008252E8] = _swiftEmptyArrayStorage;
  v3 = qword_1008252F0;
  *(_QWORD *)&v0[v3] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v4 = &v0[qword_1008252F8];
  *v4 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  v4[1] = 0;
  *(_QWORD *)&v0[qword_100825300] = _swiftEmptyArrayStorage;
  swift_weakInit(&v0[qword_100825308]);
  *(_QWORD *)&v0[qword_100825310] = _swiftEmptyArrayStorage;
  v0[qword_100825318] = 0;
  *(_QWORD *)&v0[qword_100825320] = 0;
  v0[qword_100825328] = 0;
  v5 = &v0[qword_100825330];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/ArcadeDownloadPackGamesCardView.swift", 58, 2, 83, 0);
  __break(1u);
}

void sub_10046CAF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  char v36[24];
  char v37[24];

  v32 = a2;
  v33 = a3;
  v4 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a1 + qword_100825300);
  swift_beginAccess(a1 + qword_100825300, v37, 0, 0);
  v11 = *v10;
  if ((unint64_t)*v10 >> 62)
    goto LABEL_14;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*v10, 2);
  if (v12)
  {
    while (v12 >= 1)
    {
      v13 = a1 + qword_1008252E8;
      v35 = v11 & 0xC000000000000001;
      swift_beginAccess(a1 + qword_1008252E8, v36, 0, 0);
      v14 = 0;
      v15 = 32;
      v34 = v11;
      v30 = v13;
      while (1)
      {
        if (v35)
        {
          a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v11);
        }
        else
        {
          a1 = *(_QWORD *)(v11 + 8 * v14 + 32);
          swift_retain(a1);
        }
        if (v14 >= *(_QWORD *)(*(_QWORD *)v13 + 16))
          break;
        v16 = *(id *)(*(_QWORD *)v13 + v15);
        Lockup.impressionMetrics.getter(v16);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        {

          sub_100010F2C((uint64_t)v6, &qword_1008131E0);
        }
        else
        {
          v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
          v18 = v6;
          v19 = v7;
          v20 = v8;
          v21 = v31;
          v17(v31, v18, v19);
          v22 = v16;
          objc_msgSend(v22, "bounds");
          objc_msgSend(v33, "convertRect:fromCoordinateSpace:", v22);
          ImpressionsCalculator.addElement(_:at:)(v21, v23, v24, v25, v26);

          v27 = *(void (**)(char *, uint64_t))(v20 + 8);
          v28 = v21;
          v8 = v20;
          v7 = v19;
          v6 = v18;
          v13 = v30;
          v27(v28, v7);
        }
        swift_release();
        ++v14;
        v15 += 16;
        v11 = v34;
        if (v12 == v14)
          goto LABEL_18;
      }
      __break(1u);
LABEL_14:
      if (v11 < 0)
        v29 = v11;
      else
        v29 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v11, 2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v29);
      if (!v12)
        goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease_n(v11, 2);
  }
}

uint64_t sub_10046CD94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10046CDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;

  return sub_100469A78(a1, *(void **)(v3 + 16), *(void **)(v3 + 24), a2, a3);
}

id sub_10046CDC8()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_10046CDDC()
{
  return 8;
}

uint64_t sub_10046CDE8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10046CDF0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10046CE04(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10046CE1C()
{
  return 8;
}

uint64_t sub_10046CE30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10046CE40(uint64_t a1)
{
  uint64_t v1;

  return sub_100469FB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_10046CE68()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  __n128 v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  v0[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_shouldAnimate] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_isAnimating] = 0;
  v1 = OBJC_IVAR____TtC20ProductPageExtension11ChevronView_chevronImageView;
  v2 = v0;
  v4 = sub_1004AF394(0xD000000000000013, 0x80000001006902B0, 0, v3);
  v5 = objc_msgSend(v4, "imageWithRenderingMode:", 2);

  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v5);
  *(_QWORD *)&v0[v1] = v6;

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for ChevronView();
  v7 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10046D1FC();

  return v7;
}

id sub_10046CF8C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  _BYTE *v10;
  __n128 v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  v4[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_shouldAnimate] = 0;
  v4[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_isAnimating] = 0;
  v9 = OBJC_IVAR____TtC20ProductPageExtension11ChevronView_chevronImageView;
  v10 = v4;
  v12 = sub_1004AF394(0xD000000000000013, 0x80000001006902B0, 0, v11);
  v13 = objc_msgSend(v12, "imageWithRenderingMode:", 2);

  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v13);
  *(_QWORD *)&v4[v9] = v14;

  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for ChevronView();
  v15 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  sub_10046D1FC();

  return v15;
}

id sub_10046D0D0(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  _BYTE *v4;
  __n128 v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v1[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_shouldAnimate] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_isAnimating] = 0;
  v3 = OBJC_IVAR____TtC20ProductPageExtension11ChevronView_chevronImageView;
  v4 = v1;
  v6 = sub_1004AF394(0xD000000000000013, 0x80000001006902B0, 0, v5);
  v7 = objc_msgSend(v6, "imageWithRenderingMode:", 2);

  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7);
  *(_QWORD *)&v1[v3] = v8;

  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for ChevronView();
  v9 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    sub_10046D1FC();

  }
  return v10;
}

id sub_10046D1FC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_chevronImageView];
  if (qword_1008053D0 != -1)
    swift_once(&qword_1008053D0, sub_1002F53A0);
  objc_msgSend(v1, "setTintColor:", qword_100866D08);
  v2 = objc_msgSend(v1, "layer");
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = objc_msgSend(v3, "userInterfaceStyle");

  v5 = &kCAFilterPlusD;
  if (v4 != (id)1)
    v5 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCompositingFilter:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  objc_msgSend(v1, "setContentMode:", 1);
  objc_msgSend(v1, "setAlpha:", 0.0);
  objc_msgSend(v0, "addSubview:", v1);
  objc_msgSend(v1, "frame");
  return objc_msgSend(v0, "setFrame:", 0.0, 0.0);
}

void sub_10046D3C0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double (*v17)(char *, uint64_t);
  __n128 v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  void *v25;
  _BYTE *v26;
  id v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  id v38;
  void *v39;
  _BYTE *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  void **aBlock;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for TimingCurve(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&aBlock - v8;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_shouldAnimate] == 1)
  {
    v10 = OBJC_IVAR____TtC20ProductPageExtension11ChevronView_isAnimating;
    if ((v0[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_isAnimating] & 1) == 0)
    {
      v11 = objc_msgSend(v0, "window", v7);

      if (v11)
      {
        v1[v10] = 1;
        v13 = static TimingCurve.easingCurve1.getter(v12);
        v14 = TimingCurve.controlPoint1.getter(v13);
        v16 = v15;
        v17 = *(double (**)(char *, uint64_t))(v3 + 8);
        v18.n128_f64[0] = v17(v9, v2);
        v19 = static TimingCurve.easingCurve1.getter(v18);
        v20 = TimingCurve.controlPoint2.getter(v19);
        v22 = v21;
        v17(v5, v2);
        v23 = swift_allocObject(&unk_1007557B0, 24, 7);
        *(_QWORD *)(v23 + 16) = v1;
        v24 = objc_allocWithZone((Class)UIViewPropertyAnimator);
        v51 = sub_10046DBEC;
        v52 = v23;
        aBlock = _NSConcreteStackBlock;
        v48 = 1107296256;
        v49 = sub_1000924A0;
        v50 = &unk_1007557C8;
        v25 = _Block_copy(&aBlock);
        v26 = v1;
        swift_release();
        v27 = objc_msgSend(v24, "initWithDuration:controlPoint1:controlPoint2:animations:", v25, 1.06, v14, v16, v20, v22);
        _Block_release(v25);
        v28 = ((uint64_t (*)(void))static TimingCurve.easingCurve2.getter)();
        v29 = TimingCurve.controlPoint1.getter(v28);
        v31 = v30;
        v32 = ((uint64_t (*)(char *, uint64_t))v17)(v9, v2);
        v33 = static TimingCurve.easingCurve2.getter(v32);
        v34 = TimingCurve.controlPoint2.getter(v33);
        v36 = v35;
        v17(v5, v2);
        v37 = swift_allocObject(&unk_100755800, 24, 7);
        *(_QWORD *)(v37 + 16) = v26;
        v38 = objc_allocWithZone((Class)UIViewPropertyAnimator);
        v51 = sub_10046DC24;
        v52 = v37;
        aBlock = _NSConcreteStackBlock;
        v48 = 1107296256;
        v49 = sub_1000924A0;
        v50 = &unk_100755818;
        v39 = _Block_copy(&aBlock);
        v40 = v26;
        swift_release();
        v41 = objc_msgSend(v38, "initWithDuration:controlPoint1:controlPoint2:animations:", v39, 0.66, v29, v31, v34, v36);
        _Block_release(v39);
        v42 = swift_allocObject(&unk_100755850, 24, 7);
        *(_QWORD *)(v42 + 16) = v41;
        v51 = sub_10046DC44;
        v52 = v42;
        aBlock = _NSConcreteStackBlock;
        v48 = 1107296256;
        v49 = sub_10004A774;
        v50 = &unk_100755868;
        v43 = _Block_copy(&aBlock);
        v44 = v41;
        objc_msgSend(v27, "addCompletion:", v43, swift_release().n128_f64[0]);
        _Block_release(v43);
        v45 = swift_allocObject(&unk_1007558A0, 24, 7);
        swift_unknownObjectWeakInit(v45 + 16);
        v51 = sub_10046DC78;
        v52 = v45;
        aBlock = _NSConcreteStackBlock;
        v48 = 1107296256;
        v49 = sub_10004A774;
        v50 = &unk_1007558B8;
        v46 = _Block_copy(&aBlock);
        objc_msgSend(v44, "addCompletion:", v46, swift_release().n128_f64[0]);
        _Block_release(v46);
        objc_msgSend(v27, "startAnimation");

      }
    }
  }
}

id sub_10046D7BC(uint64_t a1, CGFloat a2, double a3)
{
  void *v4;
  CGAffineTransform v6;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC20ProductPageExtension11ChevronView_chevronImageView);
  CGAffineTransformMakeTranslation(&v6, 0.0, a2);
  objc_msgSend(v4, "setTransform:", &v6);
  return objc_msgSend(v4, "setAlpha:", a3);
}

uint64_t sub_10046D83C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  id v20;
  __n128 v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  void (*v37)();
  uint64_t v38;
  _BYTE v39[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0, v4);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  swift_beginAccess(a2 + 16, v39, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v19 = (void *)Strong;
    v20 = *(id *)(Strong + OBJC_IVAR____TtC20ProductPageExtension11ChevronView_chevronImageView);

    aBlock = 0x3FF0000000000000;
    v34 = 0;
    v35 = 0;
    v36 = 0x3FF0000000000000;
    v37 = 0;
    v38 = 0;
    objc_msgSend(v20, "setTransform:", &aBlock);

  }
  sub_10006E46C();
  v22 = (void *)static OS_dispatch_queue.main.getter(v21);
  static DispatchTime.now()();
  + infix(_:_:)(v14, 1.0);
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v14, v11);
  v37 = sub_10046DC80;
  v38 = a2;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_1000924A0;
  v36 = (uint64_t)&unk_1007558E0;
  v24 = _Block_copy(&aBlock);
  swift_retain(a2);
  v25 = swift_release();
  static DispatchQoS.unspecified.getter(v25);
  aBlock = (uint64_t)_swiftEmptyArrayStorage;
  v26 = sub_100071858();
  v27 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v28 = sub_10004EA04();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v3, v26);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v6, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v23)(v17, v11);
}

void sub_10046DAE8(uint64_t a1)
{
  uint64_t v1;
  _BYTE *Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC20ProductPageExtension11ChevronView_isAnimating] = 0;

  }
  swift_beginAccess(v1, &v5, 0, 0);
  v3 = swift_unknownObjectWeakLoadStrong(v1);
  if (v3)
  {
    v4 = (void *)v3;
    sub_10046D3C0();

  }
}

id sub_10046DB68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChevronView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ChevronView()
{
  return objc_opt_self(_TtC20ProductPageExtension11ChevronView);
}

uint64_t sub_10046DBC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10046DBEC()
{
  uint64_t v0;

  return sub_10046D7BC(*(_QWORD *)(v0 + 16), 8.0, 1.0);
}

uint64_t sub_10046DC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10046DC1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10046DC24()
{
  uint64_t v0;

  return sub_10046D7BC(*(_QWORD *)(v0 + 16), 6.0, 0.0);
}

id sub_10046DC44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "startAnimation");
}

uint64_t sub_10046DC54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046DC78(uint64_t a1)
{
  uint64_t v1;

  return sub_10046D83C(a1, v1);
}

void sub_10046DC80()
{
  uint64_t v0;

  sub_10046DAE8(v0);
}

void *sub_10046DCB0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension31EditorialCardCollectionViewCell_avatarShowcase);
  v2 = v1;
  return v1;
}

void (*sub_10046DCE4(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension31EditorialCardCollectionViewCell_avatarShowcase);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_10046DD28;
}

void sub_10046DD28(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_100345698(v2);

  }
  else
  {
    sub_100345698(*a1);
  }
}

uint64_t sub_10046DD7C()
{
  return ArtworkView.frame.getter();
}

uint64_t sub_10046DDA8(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_10081D4A0, type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_100663DAC);
  return AvatarShowcaseDisplaying.applyAvatars(from:asPartOf:)(a1, a2, ObjectType, v5);
}

uint64_t sub_10046DE08(uint64_t a1, uint64_t a2)
{
  return sub_10046DE20(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.unapply());
}

uint64_t sub_10046DE14(uint64_t a1, uint64_t a2)
{
  return sub_10046DE20(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&AvatarShowcaseDisplaying.placeAvatarShowcase());
}

uint64_t sub_10046DE20(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_10000E720(&qword_10081D4A0, type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_100663DAC);
  return a3(ObjectType, v4);
}

uint64_t sub_10046DE78()
{
  return sub_10000E720(&qword_1008253F0, type metadata accessor for EditorialCardCollectionViewCell, (uint64_t)&unk_100663D74);
}

uint64_t sub_10046DEA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

double sub_10046DEF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10046DF54(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10046DFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E720(&qword_100817D28, type metadata accessor for PlaceholderCollectionViewCell, (uint64_t)&unk_100663E60);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_10046E00C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  int v32;
  char *v33;
  char *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __n128 v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  void *v78;
  char *v79;
  char *v80;
  id v81;
  void *v82;
  char *v83;
  id v84;
  void *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  __n128 v89;
  __n128 v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  _QWORD v114[3];

  v2 = v1;
  v107 = type metadata accessor for Shelf.PresentationHints(0);
  v112 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v111 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v106 = (char *)&v103 - v6;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v108 = *(_QWORD *)(v7 - 8);
  v109 = v7;
  __chkstk_darwin(v7);
  v110 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for Shelf.ContentType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v105 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v103 - v20;
  __chkstk_darwin(v22);
  v113 = (char *)&v103 - v23;
  v24 = type metadata accessor for Placeholder(0);
  v25 = sub_10000E720(&qword_1008253F8, (uint64_t (*)(uint64_t))&type metadata accessor for Placeholder, (uint64_t)&protocol conformance descriptor for Placeholder);
  ItemLayoutContext.typedModel<A>(as:)(v114, v24, v24, v25);
  if (v114[0])
  {
    v104 = v2;
    swift_release();
    swift_getKeyPath(&unk_100663EA8);
    v103 = a1;
    ItemLayoutContext.subscript.getter(v15);
    swift_release();
    KeyPath = swift_getKeyPath(&unk_100663ED8);
    ReadOnlyLens.subscript.getter(v11, KeyPath, v12);
    v27 = swift_release();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    {
      sub_10037BB14((uint64_t)v11);
      return;
    }
    v28 = v16;
    v29 = v113;
    (*(void (**)(char *, _QWORD *, uint64_t))(v17 + 32))(v113, v11, v16);
    v30 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v30(v21, v29, v16);
    v31 = v17;
    v32 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v21, v28);
    if (v32 == enum case for Shelf.ContentType.smallLockup(_:)
      || v32 == enum case for Shelf.ContentType.mediumLockup(_:)
      || v32 == enum case for Shelf.ContentType.largeLockup(_:))
    {
      v33 = v104;
      v39 = *(void **)&v104[OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView];
      v40 = type metadata accessor for LockupPlaceholderView(0);
      v41 = swift_dynamicCastClass(v39, v40);
      if (v41)
      {
        v34 = (char *)v41;
        v42 = v39;
      }
      else
      {
        v34 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v40)), "init");
      }
      v49 = v108;
      v48 = v109;
      v50 = v105;
      v30(v105, v113, v28);
      v51 = &v34[OBJC_IVAR____TtC20ProductPageExtension21LockupPlaceholderView_contentType];
      v52 = swift_beginAccess(&v34[OBJC_IVAR____TtC20ProductPageExtension21LockupPlaceholderView_contentType], v114, 33, 0);
      v38 = v31;
      (*(void (**)(char *, char *, uint64_t, __n128))(v31 + 24))(v51, v50, v28, v52);
      objc_msgSend(v34, "setNeedsLayout", swift_endAccess(v114).n128_f64[0]);
      v53.n128_f64[0] = (*(double (**)(char *, uint64_t))(v31 + 8))(v50, v28);
      v54 = v110;
      v55 = ItemLayoutContext.parentShelfLayoutContext.getter(v53);
      v56 = v106;
      ShelfLayoutContext.shelfPresentationHints.getter(v55);
      v57 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v54, v48);
      v58 = v111;
      static Shelf.PresentationHints.isAppleArcadeContext.getter(v57);
      v59 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
      v60 = v107;
      LOBYTE(v48) = dispatch thunk of SetAlgebra.isSuperset(of:)(v58, v107, v59);
      v61 = *(void (**)(char *, uint64_t))(v112 + 8);
      v61(v58, v60);
      v61(v56, v60);
      v34[OBJC_IVAR____TtC20ProductPageExtension21LockupPlaceholderView_wantsHeadingTextPlaceholder] = v48 & 1;
      objc_msgSend(v34, "setNeedsLayout");
      goto LABEL_28;
    }
    v33 = v104;
    if (v32 == enum case for Shelf.ContentType.videoCard(_:))
    {
      v34 = (char *)objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v35 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
      objc_msgSend(v34, "setBackgroundColor:", v35);

      v36 = objc_msgSend(v34, "layer");
      if (qword_1008047D0 != -1)
        swift_once(&qword_1008047D0, sub_1000A7870);
      objc_msgSend(v36, "setCornerRadius:", *(double *)&qword_100864CB0);

      v37 = objc_msgSend(v34, "layer");
      objc_msgSend(v37, "setCornerCurve:", kCACornerCurveContinuous);

      goto LABEL_11;
    }
    if (v32 == enum case for Shelf.ContentType.brick(_:))
    {
      v43 = *(void **)&v104[OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView];
      v44 = type metadata accessor for BrickPlaceholderView();
      v45 = swift_dynamicCastClass(v43, v44);
      v38 = v17;
      if (v45)
      {
        v34 = (char *)v45;
        v46 = v43;
      }
      else
      {
        v34 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v44)), "init");
      }
      v68 = v106;
      v67 = v107;
      v70 = v108;
      v69 = v109;
      v71 = v110;
      v72 = ItemLayoutContext.parentShelfLayoutContext.getter(v47);
      ShelfLayoutContext.shelfPresentationHints.getter(v72);
      v73 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v71, v69);
      v74 = v111;
      static Shelf.PresentationHints.showSupplementaryText.getter(v73);
      v75 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
      LOBYTE(v69) = dispatch thunk of SetAlgebra.isSuperset(of:)(v74, v67, v75);
      v76 = *(void (**)(char *, uint64_t))(v112 + 8);
      v76(v74, v67);
      v76(v68, v67);
      v34[OBJC_IVAR____TtC20ProductPageExtension20BrickPlaceholderView_wantsSupplementaryTextPlaceholder] = v69 & 1;
      objc_msgSend(v34, "setNeedsLayout");
      goto LABEL_28;
    }
    if (v32 == enum case for Shelf.ContentType.categoryBrick(_:))
    {
      v62 = *(void **)&v104[OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView];
      v63 = type metadata accessor for CategoryBrickPlaceholderView();
      v64 = swift_dynamicCastClass(v62, v63);
      if (v64)
      {
        v34 = (char *)v64;
        v65 = v62;
LABEL_11:
        v38 = v31;
        goto LABEL_28;
      }
      v66 = v63;
    }
    else
    {
      if (v32 == enum case for Shelf.ContentType.appTrailerLockup(_:)
        || v32 == enum case for Shelf.ContentType.screenshotsLockup(_:))
      {
        v86 = type metadata accessor for MixedMediaLockupPlaceholderView(0);
        v34 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v86)), "init");
        v87 = v105;
        v30(v105, v113, v28);
        v88 = &v34[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType];
        v89 = swift_beginAccess(&v34[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType], v114, 33, 0);
        v38 = v31;
        (*(void (**)(char *, char *, uint64_t, __n128))(v31 + 24))(v88, v87, v28, v89);
        objc_msgSend(v34, "setNeedsLayout", swift_endAccess(v114).n128_f64[0]);
        v90.n128_f64[0] = (*(double (**)(char *, uint64_t))(v31 + 8))(v87, v28);
        v91 = v110;
        v92 = ItemLayoutContext.parentShelfLayoutContext.getter(v90);
        v93 = v106;
        ShelfLayoutContext.shelfPresentationHints.getter(v92);
        v94 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v91, v109);
        v95 = v111;
        static Shelf.PresentationHints.showSupplementaryText.getter(v94);
        v96 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
        v97 = v107;
        LOBYTE(v91) = dispatch thunk of SetAlgebra.isSuperset(of:)(v95, v107, v96);
        v98 = *(void (**)(char *, uint64_t))(v112 + 8);
        v98(v95, v97);
        v98(v93, v97);
        v34[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] = v91 & 1;
        objc_msgSend(v34, "setNeedsLayout");
        goto LABEL_28;
      }
      if (v32 != enum case for Shelf.ContentType.smallStoryCard(_:))
      {
        v38 = v17;
        if (v32 == enum case for Shelf.ContentType.posterLockup(_:))
        {
          v34 = (char *)objc_msgSend(objc_allocWithZone((Class)UIView), "init");
          v99 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
          objc_msgSend(v34, "setBackgroundColor:", v99);

          v100 = objc_msgSend(v34, "layer");
          objc_msgSend(v100, "setCornerRadius:", 5.0);

          v101 = objc_msgSend(v34, "layer");
          objc_msgSend(v101, "setCornerCurve:", kCACornerCurveContinuous);

        }
        else
        {
          if (v32 != enum case for Shelf.ContentType.appPromotion(_:))
          {
            (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v28);
            v34 = 0;
LABEL_29:
            v77 = OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView;
            v78 = *(void **)&v33[OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView];
            v79 = v34;
            objc_msgSend(v78, "removeFromSuperview");
            if (v34)
            {
              v80 = v79;
              v81 = objc_msgSend(v33, "contentView");
              objc_msgSend(v81, "addSubview:", v80);

              v82 = *(void **)&v33[v77];
              *(_QWORD *)&v33[v77] = v80;
              v83 = v80;

              objc_msgSend(v33, "setNeedsLayout");
              (*(void (**)(char *, uint64_t))(v38 + 8))(v113, v28);

            }
            else
            {
              v84 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
              v85 = *(void **)&v33[v77];
              *(_QWORD *)&v33[v77] = v84;

              (*(void (**)(char *, uint64_t))(v38 + 8))(v113, v28);
            }
            return;
          }
          v102 = type metadata accessor for AppEventPlaceholderView();
          v34 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v102)), "init");
        }
LABEL_28:
        objc_msgSend(v34, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
        goto LABEL_29;
      }
      v66 = type metadata accessor for TodayBrickPlaceholderView(0);
    }
    v34 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v66)), "init");
    goto LABEL_11;
  }
}

_QWORD *sub_10046EB14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_17;
LABEL_11:
      v7 = swift_retain(v5);
      v8 = dispatch thunk of Lockup.artwork.getter(v7);
      if (v8)
      {
        v9 = v8;
        v10 = Artwork.backgroundColor.getter();
        swift_release_n(v5, 2);
        v11 = swift_release(v9);
        if (v10)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v13 >= v12 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
          v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
          specialized Array._endMutation()(v14);
        }
      }
      else
      {
        swift_release_n(v5, 2);
      }
      ++v3;
      if (v6 == v2)
        goto LABEL_22;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v5);
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10046ECB0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double *v5;
  double *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  double v16;
  double v17;
  double v18;
  __n128 v19;
  _BYTE v21[40];
  _QWORD v22[5];

  v6 = v5;
  v12 = type metadata accessor for DisjointStack(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DisjointStack.init(with:)(0, 0);
  DisjointStack.insert(_:at:with:)(v6 + 6, 0, 1, sub_1003A7B98, 0);
  v16 = v6[2];
  v18 = v6[4];
  v17 = v6[5];
  sub_10000EF80((uint64_t)(v6 + 11), (uint64_t)v21);
  v22[3] = type metadata accessor for Margins(0);
  v22[4] = &protocol witness table for Margins;
  sub_1000119C0(v22);
  Margins.init(top:left:bottom:right:child:)(v21, 0.0, v16, v17, v18);
  DisjointStack.insert(_:at:with:)(v22, 0, 1, sub_1003A7CDC, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v22);
  v19 = dispatch thunk of Placeable.place(at:with:)(a1, v12, &protocol witness table for DisjointStack, a2, a3, a4, a5);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v13 + 8))(v15, v12, v19);
}

char *sub_10046EE20(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  _BOOL8 v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v43[4];
  objc_super v44;
  _QWORD v45[12];
  __int128 v46;
  _OWORD v47[3];

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_todayCard] = 0;
  v10 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView;
  v11 = objc_allocWithZone((Class)_s20ProductPageExtension10HeaderViewCMa_0());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer;
  v14 = type metadata accessor for TodayListCardLockupContainer();
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView] = 0;
  v15 = &v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle];
  v16 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark] = 0;
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_otherCardToExchangeRiverWith]);
  v45[0] = sub_10000D390;
  v45[1] = 0;
  v45[2] = sub_1005FEFD4;
  v45[3] = 0;
  v45[4] = sub_1005FF1AC;
  v45[5] = 0;
  v45[6] = sub_1005FF1D4;
  v45[7] = 0;
  v45[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v45[9] = 0;
  v45[10] = sub_1005FEFFC;
  v45[11] = 0;
  if (qword_100804CB8 != -1)
    swift_once(&qword_100804CB8, sub_1001AC9C8);
  v46 = xmmword_100865A00;
  v47[0] = *(_OWORD *)&qword_100865A10;
  *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)((char *)&qword_100865A18 + 1);
  v17 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView] = sub_1001ACDA0((uint64_t)v45, &v46);

  v44.receiver = v12;
  v44.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "layer");
  objc_msgSend(v19, "setAllowsGroupBlending:", 0);

  v20 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer;
  v21 = *(_BYTE **)&v18[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  v22 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v23 = v18[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v24 = v21[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded];
  v21[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] = v23;
  if (v23 != v24)
    objc_msgSend(v21, "setNeedsLayout");
  v25 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                            + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) == 1)
  {
    if (v18[v22])
      v26 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v26 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v27 = v18[*v26] == 4;
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v21, "setHidden:", v27);
  v28 = objc_msgSend(v21, "layer");
  objc_msgSend(v28, "setZPosition:", 0.0);

  v29 = objc_msgSend(v18, "contentView");
  objc_msgSend(v29, "addSubview:", *(_QWORD *)&v18[v20]);

  v30 = objc_msgSend(v18, "backgroundView");
  if (v30)
  {
    v31 = v30;
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v32 = (void *)static UIColor.todayCardDefaultBackground.getter();
    objc_msgSend(v31, "setBackgroundColor:", v32);

  }
  sub_10046F358();
  v33 = objc_msgSend(v18, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v18[v25]);

  v34 = objc_msgSend(v18, "contentView");
  v35 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView;
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView]);

  v36 = (char *)*(id *)&v18[v35];
  sub_10046F524();
  v37 = &v36[qword_1008140D8];
  *(_QWORD *)v37 = 0x4000000000000000;
  *((_QWORD *)v37 + 1) = 0;
  *((_QWORD *)v37 + 2) = 0;
  *((_QWORD *)v37 + 3) = 0x4018000000000000;
  *((_QWORD *)v37 + 4) = 0;
  v37[40] = 1;
  objc_msgSend(v36, "setNeedsLayout");

  v38 = objc_msgSend(v18, "contentView");
  objc_msgSend(v38, "setClipsToBounds:", 1);

  sub_10046F5E4();
  v39 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v40 = swift_allocObject(v39, 48, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100640720;
  *(_QWORD *)(v40 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v40 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v43[3] = ObjectType;
  v43[0] = v18;
  v41 = v18;
  UIView.registerForTraitChanges(_:target:action:)(v40, v43, "applyContentSizeCategoryUpdates");
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v40);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v43);
  return v41;
}

uint64_t sub_10046F358()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  id v11;
  char v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView;
  if ((v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    v9 = v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                              + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                  + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) == 1
      && v9 == 4)
    {
      v8 = -1;
    }
    else if (v9 == 6)
    {
      v11 = objc_msgSend(v0, "traitCollection", v4.n128_f64[0]);
      v12 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v12 & 1) != 0)
        v8 = 10;
      else
        v8 = 5;
      v7 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView;
    }
    else
    {
      v8 = 3;
    }
  }
  v13 = *(void **)&v1[v7];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for CornerStyle.continuous(_:), v2, v4);
  sub_10021F38C((uint64_t)v6, v8, 14.0);
  v14 = v8 & 0xC;
  if ((v8 & 0xC) != 0)
    objc_msgSend(v13, "_setContinuousCornerRadius:", 14.0);
  else
    v14 = v8 & 3;
  v15 = objc_msgSend(v13, "layer");
  objc_msgSend(v15, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(v14));

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_10046F524()
{
  _BYTE *v0;
  uint64_t *v1;
  char v2;
  id v3;
  char v4;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                            + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) == 1)
  {
    if (v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    if (v0[*v1] == 6)
    {
      v2 = 1;
    }
    else
    {
      v3 = objc_msgSend(v0, "traitCollection");
      v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

      v2 = v4 ^ 1;
    }
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

id sub_10046F5E4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  id *v19;
  __n128 v20;
  id v21;
  char v22;
  uint64_t *v23;
  void (*v24)(_BYTE *, uint64_t, __n128);
  _BYTE v26[24];
  char v27[24];

  v1 = v0;
  v2 = sub_10000DAF8(&qword_10081A3C8);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for TodayCard.Style(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v26[-v10];
  __chkstk_darwin(v12);
  v14 = &v26[-v13];
  v15 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  objc_msgSend(v15, "setHidden:", (sub_10046F524() & 1) == 0);
  v16 = (uint64_t)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle];
  swift_beginAccess(v16, v27, 0, 0);
  sub_100018ADC(v16, (uint64_t)v4, &qword_10081A3C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010F2C((uint64_t)v4, &qword_10081A3C8);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v14, v4, v5);
    if ((sub_10046F524() & 1) != 0
      && v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark] == 1)
    {
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v11, enum case for TodayCard.Style.dark(_:), v5);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v11, v14, v5);
    }
    v17 = sub_10046F524();
    sub_1001AE24C((uint64_t)v11, v17 & 1);
    if ((sub_10046F524() & 1) != 0
      && (v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark] & 1) != 0
      || (*(_BYTE *)(*(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView]
                   + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) & 1) == 0
      && (!v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded]
        ? (v18 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory)
        : (v18 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory),
          v1[*v18] == 6))
    {
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for TodayCard.Style.dark(_:), v5);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v14, v5);
    }
    v19 = (id *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
    v20 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v26, 0, 0);
    if (*v19)
    {
      v21 = *v19;
      if ((sub_10046F524() & 1) != 0)
      {
        v22 = 1;
      }
      else if ((*(_BYTE *)(*(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView]
                          + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) & 1) != 0)
      {
        v22 = 0;
      }
      else
      {
        if (v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
          v23 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
        else
          v23 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
        v22 = v1[*v23] == 6;
      }
      sub_1001AE24C((uint64_t)v8, v22);

    }
    v24 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
    v24(v8, v5, v20);
    ((void (*)(_BYTE *, uint64_t))v24)(v11, v5);
    ((void (*)(_BYTE *, uint64_t))v24)(v14, v5);
  }
  sub_10046F358();
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_10046F9A0()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  uint64_t v4;
  id v5;
  void **v6;
  _BYTE *v7;
  int v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  char v12[24];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView);
  swift_beginAccess(v2, v12, 0, 0);
  v3 = *v2;
  if (*v2)
  {
    v4 = *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled);
    v5 = v3;
    dispatch thunk of RiverView.isAnimating.setter(v4);

  }
  v6 = (void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, &v11, 0, 0);
  v7 = *v6;
  if (*v6)
  {
    v8 = *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled);
    v9 = v7[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_isAnimating];
    v7[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_isAnimating] = v8;
    if (v8 != v9)
    {
      v10 = v7;
      sub_1005EE944();

    }
  }
}

void sub_10046FA78(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled) = a1;
  sub_10046F9A0();
}

uint64_t sub_10046FA8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, &qword_10082AF10);
}

uint64_t sub_10046FAE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _BYTE v12[24];

  v3 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100018ADC(a1, (uint64_t)v5, &qword_10082AF10);
  v6 = v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid, v12, 33, 0);
  sub_1000393D8((uint64_t)v5, v6, &qword_10082AF10);
  swift_endAccess(v12);
  v7 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
  sub_100018ADC(v6, (uint64_t)v5, &qword_10082AF10);
  v8 = (uint64_t)&v7[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_pageGrid];
  swift_beginAccess(&v7[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_pageGrid], v12, 33, 0);
  v9 = v7;
  sub_1000393D8((uint64_t)v5, v8, &qword_10082AF10);
  swift_endAccess(v12);

  return sub_100010F2C(a1, &qword_10082AF10);
}

void sub_10046FC20()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *Strong;
  void *v9;
  void (*v10)(uint64_t);
  _BYTE *v11;
  id v12;
  char v13[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isTransitioning;
  *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView]
           + qword_100814128) = v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isTransitioning];
  sub_1001ADD60();
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v13, 0, 0);
  v4 = *v3;
  if (v4)
  {
    *(_BYTE *)(v4 + qword_100814128) = v1[v2];
    sub_1001ADD60();
  }
  v5 = *(_BYTE **)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                 + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
  v6 = v1[v2];
  v5[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isTransitioning] = v6;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView];
  *(_BYTE *)(v7 + OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_isTransitioning) = v6;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_mirrorDelegate);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void (**)(uint64_t))((swift_isaMask & *Strong) + 0xC8);
    v11 = v5;
    v10(v6);

  }
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "setClipsToBounds:", (v1[v2] & 1) == 0);

}

void sub_10046FD94(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isTransitioning) = a1;
  sub_10046FC20();
}

uint64_t sub_10046FDA8()
{
  _BYTE *v0;
  uint64_t *v1;
  id v3;
  char v4;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                            + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) != 1)
    return 1;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[*v1] == 6)
    return 0;
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

  return v4 & 1;
}

void sub_10046FEE0(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  objc_super v7;
  objc_super v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v9.receiver = v1;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, "setDragging:", a1 & 1);
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  v8.receiver = v1;
  v8.super_class = ObjectType;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isDragging) = objc_msgSendSuper2(&v8, "isDragging");
  v5 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
  if (v5)
  {
    v7.receiver = v1;
    v7.super_class = ObjectType;
    v6 = v5;
    v6[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isDragging] = objc_msgSendSuper2(&v7, "isDragging");

  }
}

uint64_t sub_1004700EC(void *a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  char *v7;
  id v8;

  if (a1)
  {
    v3 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                  + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
    v4 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView];
    v5 = v3;
    v6 = objc_msgSend(a1, "superview");
    if (v6)
    {
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v7 = v4;
      v8 = v6;
      LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

      v5 = v7;
    }

  }
  else
  {
    LOBYTE(v6) = 0;
  }
  return v6 & 1;
}

void (*sub_1004701C8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView);
  v3 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v2 + v3)+ OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  return sub_100470234;
}

void sub_100470234(uint64_t a1, char a2)
{
  void *v3;
  void *Strong;
  id v5;
  char *v6;
  char *v7;
  char *v8;

  v3 = *(void **)a1;
  v8 = *(char **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView]+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    v6 = v8;
    sub_100481308(Strong);

  }
  else
  {
    v7 = v8;
    sub_100481308(Strong);
  }

}

void sub_1004702F0()
{
  uint64_t v0;
  uint64_t isEscapingClosureAtFileLocation;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t *v18;
  int v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  double v30;
  double v31;
  double v32;
  __n128 v33;
  void (*v34)(char *, uint64_t);
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  id v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  id v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  id v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  id v70;
  char *v71;
  __n128 v72;
  uint64_t v73;
  __n128 v74;
  id v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  char *v85;
  __n128 v86;
  uint64_t v87;
  __n128 v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[40];
  _QWORD v101[51];
  _QWORD v102[51];
  char v103[24];
  objc_super v104;

  isEscapingClosureAtFileLocation = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for VerticalStack(0);
  v98 = *(_QWORD *)(v3 - 8);
  v99 = v3;
  __chkstk_darwin(v3);
  v97 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DisjointStack(0);
  v96 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v8);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageGrid(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104.receiver = (id)isEscapingClosureAtFileLocation;
  v104.super_class = ObjectType;
  objc_msgSendSuper2(&v104, "layoutSubviews", v13);
  v16 = isEscapingClosureAtFileLocation
      + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid;
  swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid, v103, 0, 0);
  sub_100018ADC(v16, (uint64_t)v10, &qword_10082AF10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v10, &qword_10082AF10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    if (*(_BYTE *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded))
      v18 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v18 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v19 = *(unsigned __int8 *)(isEscapingClosureAtFileLocation + *v18);
    if (v19 == 7)
    {
      sub_100471198((uint64_t)v15, (uint64_t)v102);
      v35 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
      objc_msgSend(v35, "bounds");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;

      v44 = v11;
      v45 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
      v46 = v97;
      v47.n128_f64[0] = v37;
      sub_10058C060(v45, v47, v39, v41, v43);
      v48 = v99;
      v49 = dispatch thunk of Placeable.place(at:with:)(v45, v99, &protocol witness table for VerticalStack, v37, v39, v41, v43);
      (*(void (**)(char *, uint64_t, __n128))(v98 + 8))(v46, v48, v49);

      sub_1004773B0(v102);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v44);
    }
    else if (v19 == 6)
    {
      v50 = v11;
      sub_100470CE4((uint64_t)v15, (uint64_t)v101);
      if (v101[13])
      {
        memcpy(v102, v101, sizeof(v102));
        v51 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v51, "bounds");
        v53 = v52;
        v55 = v54;
        v57 = v56;
        v59 = v58;

        v60 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        sub_1006048C4(v60, v53, v55, v57, v59);

        sub_1004773E4(v102);
      }
      else
      {
        sub_100010F2C((uint64_t)v101, &qword_1008254F0);
        sub_100471198((uint64_t)v15, (uint64_t)v102);
        v75 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v75, "bounds");
        v77 = v76;
        v79 = v78;
        v81 = v80;
        v83 = v82;

        v84 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        v85 = v97;
        v86.n128_f64[0] = v77;
        sub_10058C060(v84, v86, v79, v81, v83);
        v87 = v99;
        v88 = dispatch thunk of Placeable.place(at:with:)(v84, v99, &protocol witness table for VerticalStack, v77, v79, v81, v83);
        (*(void (**)(char *, uint64_t, __n128))(v98 + 8))(v85, v87, v88);

        sub_1004773B0(v102);
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v50);
    }
    else
    {
      v95 = v11;
      if (v19 == 4)
      {
        v99 = v12;
        sub_100470B78((uint64_t)v15, (uint64_t)v102);
        v20 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v20, "bounds");
        v22 = v21;
        v24 = v23;
        v26 = v25;
        v28 = v27;

        v29 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        DisjointStack.init(with:)(0, 0);
        DisjointStack.insert(_:at:with:)(&v102[6], 0, 1, sub_1003A7B98, 0);
        v30 = *(double *)&v102[5];
        v31 = *(double *)&v102[2];
        v32 = *(double *)&v102[4];
        sub_10000EF80((uint64_t)&v102[11], (uint64_t)v100);
        v101[3] = type metadata accessor for Margins(0);
        v101[4] = &protocol witness table for Margins;
        sub_1000119C0(v101);
        Margins.init(top:left:bottom:right:child:)(v100, 0.0, v31, v30, v32);
        DisjointStack.insert(_:at:with:)(v101, 0, 1, sub_1003A7CDC, 0);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v101);
        v33 = dispatch thunk of Placeable.place(at:with:)(v29, v5, &protocol witness table for DisjointStack, v22, v24, v26, v28);
        (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v7, v5, v33);

        sub_100477418((uint64_t)v102);
        v34 = *(void (**)(char *, uint64_t))(v99 + 8);
      }
      else
      {
        sub_100471198((uint64_t)v15, (uint64_t)v102);
        v61 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
        objc_msgSend(v61, "bounds");
        v63 = v62;
        v65 = v64;
        v67 = v66;
        v69 = v68;

        v70 = objc_msgSend((id)isEscapingClosureAtFileLocation, "traitCollection");
        v71 = v97;
        v72.n128_f64[0] = v63;
        sub_10058C060(v70, v72, v65, v67, v69);
        v73 = v99;
        v74 = dispatch thunk of Placeable.place(at:with:)(v70, v99, &protocol witness table for VerticalStack, v63, v65, v67, v69);
        (*(void (**)(char *, uint64_t, __n128))(v98 + 8))(v71, v73, v74);

        sub_1004773B0(v102);
        v34 = *(void (**)(char *, uint64_t))(v12 + 8);
      }
      v34(v15, v95);
    }
  }
  if (*(_BYTE *)(isEscapingClosureAtFileLocation
                + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory) == 4
    && *(_BYTE *)(isEscapingClosureAtFileLocation
                + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) == 1
    && *(_BYTE *)(isEscapingClosureAtFileLocation
                + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory) == 5)
  {
    v89 = (void *)objc_opt_self(UIView);
    v90 = swift_allocObject(&unk_100755A58, 24, 7);
    *(_QWORD *)(v90 + 16) = isEscapingClosureAtFileLocation;
    v91 = swift_allocObject(&unk_100755A80, 32, 7);
    *(_QWORD *)(v91 + 16) = sub_10047736C;
    *(_QWORD *)(v91 + 24) = v90;
    v102[4] = sub_100036D9C;
    v102[5] = v91;
    v102[0] = _NSConcreteStackBlock;
    v102[1] = 1107296256;
    v102[2] = sub_100184A1C;
    v102[3] = &unk_100755A98;
    v92 = _Block_copy(v102);
    v93 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v91);
    objc_msgSend(v89, "performWithoutAnimation:", v92, swift_release().n128_f64[0]);
    _Block_release(v92);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v91, "", 114, 462, 44, 1);
    swift_release();
    *(_QWORD *)&v17 = swift_release().n128_u64[0];
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  v94 = *(void **)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
  if (v94)
    objc_msgSend(v94, "layoutIfNeeded", v17);
  objc_msgSend(*(id *)(isEscapingClosureAtFileLocation+ OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer), "layoutIfNeeded", v17, v95);
}

id sub_100470B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  char v5;
  uint64_t *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  id v21;

  v5 = v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v6 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v5)
    v6 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v7 = v2[*v6];
  v8 = objc_msgSend(v2, "traitCollection");
  sub_100476064(a1, v7, v5, v8);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = sub_10046F524();
  v18 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  *(_QWORD *)(a2 + 72) = _s20ProductPageExtension10HeaderViewCMa_0();
  *(_QWORD *)(a2 + 80) = sub_10000E720(&qword_1008254F8, (uint64_t (*)(uint64_t))_s20ProductPageExtension10HeaderViewCMa_0, (uint64_t)&unk_100663FE0);
  *(_QWORD *)(a2 + 48) = v18;
  v21 = *(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
  *(_QWORD *)(a2 + 112) = type metadata accessor for TodayCardLabelsView(0);
  *(_QWORD *)(a2 + 120) = &protocol witness table for CustomLayoutView;
  *(_QWORD *)(a2 + 88) = v21;
  *(_BYTE *)a2 = v17 & 1;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = 0x4030000000000000;
  v19 = v18;
  return v21;
}

void sub_100470CE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  void *v5;
  void **v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  char *v37;
  id v38;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void **v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char v48;
  char v49;
  double v50;
  char v51[24];
  _OWORD v52[2];
  uint64_t v53;
  char v54[24];
  _OWORD v55[2];
  uint64_t v56;
  char v57[24];
  _OWORD v58[2];
  uint64_t v59;
  char v60[24];
  __int128 v61;
  uint64_t v62;
  void *v63;
  __int128 v64;
  uint64_t v65;
  void *v66;
  __int128 v67;
  uint64_t v68;
  void *v69;
  __int128 v70[2];
  __int128 v71[2];
  char v72[32];

  v3 = v2;
  v5 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
  if (v5
    && (v7 = (void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView],
        swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v72, 0, 0), (v8 = *v7) != 0)&& *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_todayCard])
  {
    swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_todayCard]);
    v9 = v5;
    v10 = v8;
    v11 = objc_msgSend(v3, "traitCollection");
    v50 = sub_100475EB0(a1, v11);
    v13 = v12;
    v15 = v14;
    v17 = v16;

    v18 = objc_msgSend(v3, "traitCollection");
    v19 = sub_10047707C(a1, v18);
    v21 = v20;
    v23 = v22;
    v25 = v24;

    v49 = sub_10046F524();
    v26 = v3[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
    v48 = v3[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isTransitioning];

    if (v26)
      v27 = 272.0;
    else
      v27 = 177.0;
    *(_QWORD *)&v70[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
    v28 = _s20ProductPageExtension10HeaderViewCMa_0();
    Measurable.placeable.getter(v71, v28, &protocol witness table for UIView);
    *(_QWORD *)&v67 = v10;
    v29 = type metadata accessor for TodayCardLabelsView(0);
    Measurable.placeable.getter(v70, v29, &protocol witness table for UIView);
    v30 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
    v68 = v29;
    v69 = &protocol witness table for CustomLayoutView;
    *(_QWORD *)&v67 = v30;
    v65 = type metadata accessor for TodayListCardLockupContainer();
    v66 = &protocol witness table for UIView;
    v63 = &protocol witness table for UIView;
    *(_QWORD *)&v64 = v9;
    v31 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer];
    v62 = v65;
    *(_QWORD *)&v61 = v31;
    v32 = &v31[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells];
    swift_beginAccess(&v31[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_listCells], v60, 0, 0);
    v47 = *(_QWORD *)(*(_QWORD *)v32 + 16);
    v33 = &v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView], v57, 0, 0);
    if (*(_QWORD *)v33)
    {
      *(_QWORD *)&v55[0] = *(_QWORD *)v33;
      v34 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v35 = v9;
      v36 = v30;
      v37 = v31;
      Measurable.placeable.getter(v58, v34, &protocol witness table for UIView);
    }
    else
    {
      v59 = 0;
      memset(v58, 0, sizeof(v58));
      v38 = v9;
      v39 = v30;
      v40 = v31;
    }
    v41 = &v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView], v54, 0, 0);
    if (*(_QWORD *)v41)
    {
      *(_QWORD *)&v52[0] = *(_QWORD *)v41;
      v42 = sub_10000DAF8(&qword_1008254E8);
      Measurable.placeable.getter(v55, v42, &protocol witness table for UIView);
    }
    else
    {
      v56 = 0;
      memset(v55, 0, sizeof(v55));
    }
    v43 = (void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView], v51, 0, 0);
    v44 = *v43;
    if (v44)
    {
      v45 = type metadata accessor for RiverTodayCardBackgroundView(0);
      v46 = v44;
      Measurable.placeable.getter(v52, v45, &protocol witness table for UIView);

      swift_release();
    }
    else
    {
      swift_release();

      v53 = 0;
      memset(v52, 0, sizeof(v52));
    }
    *(_BYTE *)a2 = v26;
    *(_BYTE *)(a2 + 1) = v48;
    *(_BYTE *)(a2 + 2) = v49 & 1;
    *(double *)(a2 + 8) = v50;
    *(_QWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(double *)(a2 + 40) = v19;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v23;
    *(_QWORD *)(a2 + 64) = v25;
    *(double *)(a2 + 72) = v27;
    sub_100010E24(v71, a2 + 80);
    sub_100010E24(v70, a2 + 120);
    sub_100010E24(&v67, a2 + 160);
    sub_100010E24(&v64, a2 + 200);
    sub_100010E24(&v61, a2 + 240);
    *(_QWORD *)(a2 + 280) = v47;
    sub_1001410C0((uint64_t)v58, a2 + 288);
    sub_1001410C0((uint64_t)v55, a2 + 328);
    sub_1001410C0((uint64_t)v52, a2 + 368);
  }
  else
  {
    *(_QWORD *)(a2 + 400) = 0;
    *(_OWORD *)(a2 + 368) = 0u;
    *(_OWORD *)(a2 + 384) = 0u;
    *(_OWORD *)(a2 + 336) = 0u;
    *(_OWORD *)(a2 + 352) = 0u;
    *(_OWORD *)(a2 + 304) = 0u;
    *(_OWORD *)(a2 + 320) = 0u;
    *(_OWORD *)(a2 + 272) = 0u;
    *(_OWORD *)(a2 + 288) = 0u;
    *(_OWORD *)(a2 + 240) = 0u;
    *(_OWORD *)(a2 + 256) = 0u;
    *(_OWORD *)(a2 + 208) = 0u;
    *(_OWORD *)(a2 + 224) = 0u;
    *(_OWORD *)(a2 + 176) = 0u;
    *(_OWORD *)(a2 + 192) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
}

id sub_100471198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  double v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v26;

  v5 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v6 = v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v7 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v6)
    v7 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v8 = v2[*v7];
  v9 = objc_msgSend(v2, "traitCollection");
  sub_100476064(a1, v8, v6, v9);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = sub_10046F524();
  v19 = v2[v5];

  if (v19)
    v20 = 272.0;
  else
    v20 = 177.0;
  v21 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  *(_QWORD *)(a2 + 88) = _s20ProductPageExtension10HeaderViewCMa_0();
  *(_QWORD *)(a2 + 96) = sub_10000E720(&qword_1008254F8, (uint64_t (*)(uint64_t))_s20ProductPageExtension10HeaderViewCMa_0, (uint64_t)&unk_100663FE0);
  *(_QWORD *)(a2 + 64) = v21;
  v22 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
  *(_QWORD *)(a2 + 128) = type metadata accessor for TodayCardLabelsView(0);
  *(_QWORD *)(a2 + 136) = &protocol witness table for CustomLayoutView;
  *(_QWORD *)(a2 + 104) = v22;
  v26 = *(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  *(_QWORD *)(a2 + 168) = type metadata accessor for TodayListCardLockupContainer();
  *(_QWORD *)(a2 + 176) = &protocol witness table for UIView;
  *(_QWORD *)(a2 + 144) = v26;
  *(_BYTE *)a2 = v19;
  *(_BYTE *)(a2 + 1) = v18 & 1;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = 0x4030000000000000;
  *(double *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = 0x405B800000000000;
  v23 = v21;
  v24 = v22;
  return v26;
}

double sub_10047139C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void **v16;
  double result;
  char *v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  _BYTE v22[24];
  char v23[24];
  char v24[24];
  _BYTE v25[24];
  objc_super v26;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10000DAF8(&qword_10081A3C8);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26.receiver = v1;
  v26.super_class = ObjectType;
  objc_msgSendSuper2(&v26, "prepareForReuse", v4);
  v7 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                         + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView));
  sub_10021F720();

  sub_100222B74();
  v8 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle], v25, 33, 0);
  sub_1000393D8((uint64_t)v6, v9, &qword_10081A3C8);
  swift_endAccess(v25);
  v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark] = 0;
  sub_1004715CC();
  v10 = (id *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView], v25, 0, 0);
  if (*v10)
  {
    v11 = *v10;
    v13 = dispatch thunk of RiverView.dataSource.getter(v12);

    swift_beginAccess(v13 + 32, v24, 1, 0);
    v14 = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v13 + 32) = _swiftEmptyArrayStorage;
    swift_release();
    swift_bridgeObjectRelease(v14);
    if (*v10)
    {
      v15 = *v10;
      dispatch thunk of RiverView.flushRows()();

    }
  }
  v16 = (void **)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView];
  *(_QWORD *)&result = swift_beginAccess(v16, v23, 0, 0).n128_u64[0];
  v18 = (char *)*v16;
  if (*v16)
  {
    v19 = (unint64_t *)&v18[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_colors];
    swift_beginAccess(&v18[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_colors], v22, 1, 0);
    v20 = *v19;
    *v19 = (unint64_t)_swiftEmptyArrayStorage;
    v21 = v18;
    sub_1005EE124(v20);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  return result;
}

void sub_1004715CC()
{
  uint64_t v0;
  uint64_t *v1;
  id *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id *v7;
  id v8;
  id *v9;
  id v10;
  id *v11;
  id v12;
  id *v13;
  uint64_t *v14;
  id *v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded))
    v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (*(_BYTE *)(v0 + *v1) == 6)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                          + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                              + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                  + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) != 1)
      return;
    v2 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView, v20, 1, 0);
    if (*v2)
    {
      objc_msgSend(*v2, "removeFromSuperview");
      v3 = *v2;
    }
    else
    {
      v3 = 0;
    }
    *v2 = 0;

    v15 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView, v19, 1, 0);
    if (*v15)
    {
      objc_msgSend(*v15, "removeFromSuperview");
      v16 = *v15;
    }
    else
    {
      v16 = 0;
    }
    *v15 = 0;

    v13 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    v14 = (uint64_t *)v18;
  }
  else
  {
    v4 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
    if (v5)
    {
      objc_msgSend(v5, "removeFromSuperview");
      v6 = *(void **)(v0 + v4);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v0 + v4) = 0;

    v7 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView, v20, 1, 0);
    if (*v7)
    {
      objc_msgSend(*v7, "removeFromSuperview");
      v8 = *v7;
    }
    else
    {
      v8 = 0;
    }
    *v7 = 0;

    v9 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView, v19, 1, 0);
    if (*v9)
    {
      objc_msgSend(*v9, "removeFromSuperview");
      v10 = *v9;
    }
    else
    {
      v10 = 0;
    }
    *v9 = 0;

    v11 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView, v18, 1, 0);
    if (*v11)
    {
      objc_msgSend(*v11, "removeFromSuperview");
      v12 = *v11;
    }
    else
    {
      v12 = 0;
    }
    *v11 = 0;

    v13 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    v14 = &v17;
  }
  swift_beginAccess(v13, v14, 0, 0);
  if (*v13)
    objc_msgSend(*v13, "setHidden:", 1);
}

id sub_100471868()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  uint64_t (*v11)();
  uint64_t (*v12)();
  uint64_t (*v13)();
  uint64_t (*v14)();
  uint64_t (**v15)();
  char *v16;
  char *v17;
  _BYTE *v18;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  _BYTE *v23;
  int v24;
  int v25;
  double v26;
  objc_class *v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _BYTE *v33;
  int v34;
  int v35;
  id *v36;
  char *v37;
  uint64_t *v38;
  int v39;
  uint64_t (*v40)();
  uint64_t (*v41)();
  uint64_t (*v42)();
  uint64_t (*v43)();
  uint64_t (**v44)();
  char *v45;
  char *v46;
  char *v47;
  objc_class *v49;
  uint64_t v50;
  uint64_t v51;
  char v52[24];
  objc_super v53;
  objc_super v54;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for CornerStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003584B4();
  v7 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
  v8 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v9 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v9 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v10 = v0[*v9];
  v50 = v4;
  v51 = v3;
  v49 = (objc_class *)ObjectType;
  if (v10 == 6)
  {
    v11 = sub_100034018;
    v12 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v13 = (uint64_t (*)())sub_1005FF3C0;
    v14 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else if (v10 == 4)
  {
    v11 = sub_10028C05C;
    v12 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v13 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v14 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else
  {
    v11 = (uint64_t (*)())sub_1005FEFFC;
    v12 = (uint64_t (*)())sub_1005FF1D4;
    v14 = (uint64_t (*)())sub_1005FF1AC;
    v13 = (uint64_t (*)())sub_1005FEFD4;
  }
  v15 = (uint64_t (**)())&v7[qword_100814118];
  *v15 = sub_10000D390;
  v15[1] = 0;
  v15[2] = v13;
  v15[3] = 0;
  v15[4] = v14;
  v15[5] = 0;
  v15[6] = v12;
  v15[7] = 0;
  v15[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v15[9] = 0;
  v15[10] = v11;
  v15[11] = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001AD95C();
  sub_10046F524();
  v16 = &v7[qword_1008140D8];
  *(_QWORD *)v16 = 0x4000000000000000;
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0x4018000000000000;
  *((_QWORD *)v16 + 4) = 0;
  v16[40] = 1;
  objc_msgSend(v7, "setNeedsLayout");
  v17 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  v18 = *(_BYTE **)&v17[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView];
  v19 = v0[v8];
  v20 = OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded;
  v18[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_isExpanded] = v19;
  v21 = *(_BYTE **)&v18[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView];
  v21[OBJC_IVAR____TtC20ProductPageExtension18RevealingImageView_isExpanded] = v19;
  v22 = v18;
  objc_msgSend(v21, "setNeedsLayout");
  *(_BYTE *)(*(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView]
           + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded) = v18[v20];
  sub_100480558();

  v23 = *(_BYTE **)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer];
  v24 = v1[v8];
  v25 = v23[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded];
  v23[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] = v24;
  if (v24 != v25)
    objc_msgSend(v23, "setNeedsLayout");
  v26 = 14.0;
  if (v1[v8])
    v26 = 0.0;
  v27 = v49;
  v54.receiver = v1;
  v54.super_class = v49;
  objc_msgSendSuper2(&v54, "_setContinuousCornerRadius:", v26, v49);
  v53.receiver = v1;
  v53.super_class = v27;
  objc_msgSendSuper2(&v53, "_continuousCornerRadius");
  v29 = v28;
  v31 = v50;
  v30 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v6, enum case for CornerStyle.continuous(_:), v51);
  sub_10021F38C((uint64_t)v6, 3, v29);
  v32 = objc_msgSend(v17, "layer");
  objc_msgSend(v32, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(3));

  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
  v33 = *(_BYTE **)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
  if (v33)
  {
    v34 = v1[v8];
    v35 = v33[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded];
    v33[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] = v34;
    if (v34 != v35)
      objc_msgSend(v33, "setNeedsLayout");
  }
  v36 = (id *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v52, 0, 0);
  v37 = (char *)*v36;
  if (*v36)
  {
    v38 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    if (!v1[v8])
      v38 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v39 = v1[*v38];
    if (v39 == 6)
    {
      v40 = sub_100034018;
      v41 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v42 = (uint64_t (*)())sub_1005FF3C0;
      v43 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    }
    else if (v39 == 4)
    {
      v40 = sub_10028C05C;
      v41 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v42 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v43 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    }
    else
    {
      v40 = (uint64_t (*)())sub_1005FEFFC;
      v41 = (uint64_t (*)())sub_1005FF1D4;
      v43 = (uint64_t (*)())sub_1005FF1AC;
      v42 = (uint64_t (*)())sub_1005FEFD4;
    }
    v44 = (uint64_t (**)())&v37[qword_100814118];
    *v44 = sub_10000D390;
    v44[1] = 0;
    v44[2] = v42;
    v44[3] = 0;
    v44[4] = v43;
    v44[5] = 0;
    v44[6] = v41;
    v44[7] = 0;
    v44[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v44[9] = 0;
    v44[10] = v40;
    v44[11] = 0;
    v45 = v37;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1001AD95C();

    if (*v36)
    {
      v46 = (char *)*v36;
      sub_10046F524();
      v47 = &v46[qword_1008140D8];
      *(_QWORD *)v47 = 0x4000000000000000;
      *((_QWORD *)v47 + 1) = 0;
      *((_QWORD *)v47 + 2) = 0;
      *((_QWORD *)v47 + 3) = 0x4018000000000000;
      *((_QWORD *)v47 + 4) = 0;
      v47[40] = 1;
      objc_msgSend(v46, "setNeedsLayout");

    }
  }
  sub_100471E08();
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_100471E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  id *v5;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  id *v9;
  double v10;
  uint64_t *v11;
  char v12;
  id *v13;
  double v14;
  uint64_t *v15;
  char v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isTransitioning) & 1) == 0)
  {
    v1 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded))
      v2 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v2 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v3 = *(unsigned __int8 *)(v0 + *v2);
    if (v3 == 7)
    {
      v4 = 0;
    }
    else if (v3 == 6)
    {
      v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) ^ 1u;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView), "setHidden:", v4);
    v5 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView);
    *(_QWORD *)&v6 = swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView, v25, 0, 0).n128_u64[0];
    if (*v5)
    {
      if (*(_BYTE *)(v0 + v1))
        v7 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v7 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v7) == 6)
        v8 = *(unsigned __int8 *)(v0 + v1);
      else
        v8 = 1;
      objc_msgSend(*v5, "setHidden:", v8, v6);
    }
    v9 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView);
    *(_QWORD *)&v10 = swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView, v24, 0, 0).n128_u64[0];
    if (*v9)
    {
      if (*(_BYTE *)(v0 + v1))
        v11 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v11 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v11) == 6)
        v12 = *(_BYTE *)(v0 + v1) | *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                                                         + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                                             + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia);
      else
        v12 = 1;
      objc_msgSend(*v9, "setHidden:", v12 & 1, v10);
    }
    v13 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    *(_QWORD *)&v14 = swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, v23, 0, 0).n128_u64[0];
    if (*v13)
    {
      if (*(_BYTE *)(v0 + v1))
        v15 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v15 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v15) == 6)
        v16 = *(_BYTE *)(v0 + v1) | *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                                                         + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                                             + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia);
      else
        v16 = 1;
      objc_msgSend(*v13, "setHidden:", v16 & 1, v14);
    }
    if (*(_BYTE *)(v0 + v1))
      v17 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v17 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v18 = *(unsigned __int8 *)(v0 + *v17);
    if (v18 == 6)
      v19 = *(unsigned __int8 *)(v0 + v1) ^ 1u;
    else
      v19 = (v18 == 4) & *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0
                                                          + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                                              + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                                  + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer), "setHidden:", v19, v14);
    v20 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
    if (v20)
    {
      if (*(_BYTE *)(v0 + v1))
        v21 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v21 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      if (*(_BYTE *)(v0 + *v21) == 6)
        v22 = *(unsigned __int8 *)(v0 + v1);
      else
        v22 = 1;
      objc_msgSend(v20, "setHidden:", v22);
    }
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView), "setHidden:", (sub_10046F524() & 1) == 0);
  }
}

id sub_1004720D0(unsigned __int8 a1)
{
  char *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void **v7;
  _BYTE *v8;
  uint64_t *v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t *v12;
  _BYTE *v13;
  uint64_t *v14;
  char v16[24];

  v2 = v1;
  objc_msgSend(v1, "setNeedsLayout");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
  v5 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v6 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v6 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  *(_BYTE *)(v4 + qword_1008140E0) = v2[*v6];
  sub_1001AD6EC();
  v7 = (void **)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v16, 0, 0);
  v8 = *v7;
  if (*v7)
  {
    if (v2[v5])
      v9 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v9 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v8[qword_1008140E0] = v2[*v9];
    v10 = v8;
    sub_1001AD6EC();

  }
  v11 = *(_BYTE **)(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                  + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
  if (v2[v5])
    v12 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v12 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v11[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_sizeCategory] = v2[*v12];
  v13 = v11;
  sub_10021F0A8();

  if (v2[v5])
    v14 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v14 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  sub_10047223C(v2[*v14], a1);
  return objc_msgSend(v2, "setNeedsLayout");
}

void sub_10047223C(unsigned __int8 a1, unsigned __int8 a2)
{
  char *v2;
  char *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  void **v15;
  __n128 v16;
  void *v17;
  id v18;
  char *v19;
  char *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  void *v25;
  char *v26;
  id v27;
  void **v28;
  void **v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  void *v44;
  int v45;
  int v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void **v51;
  double v52;
  id v53;
  char *v54;
  char *v55;
  void *v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char v61[24];
  char v62[24];
  char v63[24];
  char v64[24];
  _QWORD v65[12];
  __int128 v66;
  _OWORD v67[2];
  CGRect v68;
  CGRect v69;

  v3 = v2;
  v4 = a1;
  v5 = a2;
  v6 = type metadata accessor for RiverViewStyling(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - v11;
  if (v4 == 7)
  {
    if (v5 == 7)
      return;
  }
  else if (v5 != 7)
  {
    switch(v4)
    {
      case 6:
        if (v5 == 6)
          return;
        break;
      case 5:
        if (v5 == 5)
          return;
        break;
      case 4:
        if (v5 == 4)
          return;
        break;
      default:
        if ((v5 - 7) <= 0xFFFFFFFC && v4 == v5)
          return;
        break;
    }
  }
  if (v3[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory] == 6)
  {
    v13 = static RiverViewStyling.defaultSpeed.getter();
    v14 = static RiverViewStyling.defaultRowOffsets.getter();
    RiverViewStyling.init(itemSize:interRowSpacing:interItemSpacing:speed:rowOffsets:reverseAlternatingRows:)(v14, 0, 99.0, 99.0, 16.0, 16.0, v13);
    v15 = (void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView];
    v16 = swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView], v64, 1, 0);
    v17 = *v15;
    v60 = v7;
    if (v17)
    {
      objc_msgSend(v17, "setHidden:", 0, v16.n128_f64[0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v12, v6, v16);
      v18 = objc_allocWithZone((Class)type metadata accessor for RiverTodayCardBackgroundView(0));
      v19 = sub_1005ED9FC((uint64_t)v9);
      objc_msgSend(v19, "setClipsToBounds:", 1);
      v20 = v19;
      objc_msgSend(v3, "bounds");
      CGRectGetWidth(v68);
      objc_msgSend(v3, "bounds");
      CGRectGetHeight(v69);
      objc_msgSend(v20, "bounds");
      objc_msgSend(v20, "setBounds:");

      objc_msgSend(v20, "_setContinuousCornerRadius:", 14.0);
      v21 = objc_msgSend(v20, "layer");
      v22 = objc_msgSend(v3, "traitCollection");
      v23 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v23 & 1) != 0)
        v24 = 10;
      else
        v24 = 5;
      objc_msgSend(v21, "setMaskedCorners:", v24);

      v25 = *v15;
      *v15 = v20;
      v26 = v20;

      v27 = objc_msgSend(v3, "contentView");
      objc_msgSend(v27, "addSubview:", v26);

    }
    v28 = (void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView], v63, 1, 0);
    if (!*v28)
    {
      v29 = (void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView];
      swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView], v61, 1, 0);
      if (!*v29)
      {
        v30 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        objc_msgSend(v30, "setClipsToBounds:", 1);
        v31 = *v28;
        *v28 = v30;
        v32 = v30;

        v33 = objc_msgSend(v3, "contentView");
        objc_msgSend(v33, "addSubview:", v32);

        v34 = type metadata accessor for RiverCardDataSource();
        v35 = swift_allocObject(v34, 56, 7);
        *(_QWORD *)(v35 + 32) = _swiftEmptyArrayStorage;
        *(_OWORD *)(v35 + 16) = xmmword_100663F10;
        *(int64x2_t *)(v35 + 40) = vdupq_n_s64(0x4058C00000000000uLL);
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v9, v12, v6);
        v36 = objc_allocWithZone((Class)sub_10000DAF8(&qword_1008254E8));
        swift_retain(v35);
        v38 = (void *)RiverView.init(dataSource:styling:)(v37, v9);
        objc_msgSend(v38, "setClipsToBounds:", 0);
        v39 = *v29;
        *v29 = v38;
        v40 = v38;

        objc_msgSend(v32, "addSubview:", v40);
        swift_release();

      }
    }
    v41 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer;
    if (!*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer])
    {
      v42 = type metadata accessor for TodayListCardLockupContainer();
      v43 = (unsigned __int8 *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v42)), "init");
      v44 = v43;
      v45 = v3[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
      v46 = v43[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded];
      v43[OBJC_IVAR____TtC20ProductPageExtension28TodayListCardLockupContainer_isExpanded] = v45;
      if (v45 != v46)
        objc_msgSend(v43, "setNeedsLayout");
      v47 = objc_msgSend(v44, "layer");
      objc_msgSend(v47, "setZPosition:", 0.0);

      objc_msgSend(v44, "setClipsToBounds:", 1);
      v48 = *(void **)&v3[v41];
      *(_QWORD *)&v3[v41] = v44;
      v49 = v44;

      v50 = objc_msgSend(v3, "contentView");
      objc_msgSend(v50, "addSubview:", v49);

    }
    v51 = (void **)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
    *(_QWORD *)&v52 = swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v62, 1, 0).n128_u64[0];
    if (!*v51)
    {
      v65[0] = sub_10000D390;
      v65[1] = 0;
      v65[2] = sub_1005FF3C0;
      v65[3] = 0;
      v65[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v65[5] = 0;
      v65[6] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v65[7] = 0;
      v65[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v65[9] = 0;
      v65[10] = sub_100034018;
      v65[11] = 0;
      if (qword_100804CB8 != -1)
        swift_once(&qword_100804CB8, sub_1001AC9C8);
      v66 = xmmword_100865A00;
      v67[0] = *(_OWORD *)&qword_100865A10;
      *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)&qword_100865A18 + 1);
      v53 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
      v54 = sub_1001ACDA0((uint64_t)v65, &v66);
      sub_10046F524();
      v55 = &v54[qword_1008140D8];
      *(_QWORD *)v55 = 0x4000000000000000;
      *((_QWORD *)v55 + 1) = 0;
      *((_QWORD *)v55 + 2) = 0;
      *((_QWORD *)v55 + 3) = 0x4018000000000000;
      *((_QWORD *)v55 + 4) = 0;
      v55[40] = 1;
      objc_msgSend(v54, "setNeedsLayout");
      v54[qword_1008140E0] = v4;
      sub_1001AD6EC();
      v56 = *v51;
      *v51 = v54;
      v57 = v54;

      v58 = objc_msgSend(v3, "contentView");
      objc_msgSend(v58, "addSubview:", v57);

    }
    objc_msgSend(v3, "setNeedsLayout", v52);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v6);
  }
  else
  {
    sub_1004715CC();
  }
}

id sub_100472974()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  int v5;
  char *v6;
  uint64_t v7;
  int v8;
  char v9;
  id v10;
  char v12[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory] == 4)
  {
    v3 = objc_msgSend(v0, "contentView");
    objc_msgSend(v3, "setClipsToBounds:", 1);

  }
  objc_msgSend(v1, "setNeedsLayout");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
  v5 = v1[v2];
  *(_BYTE *)(v4 + qword_1008140E8) = v5;
  if (v5 != 7)
  {
    *(_BYTE *)(*(_QWORD *)(v4 + qword_1008140F0)
             + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
    *(_BYTE *)(*(_QWORD *)(v4 + qword_1008140F8)
             + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100814108)
             + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
  }
  v6 = &v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v12, 0, 0);
  v7 = *(_QWORD *)v6;
  if (*(_QWORD *)v6)
  {
    v8 = v1[v2];
    *(_BYTE *)(v7 + qword_1008140E8) = v8;
    if (v8 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(v7 + qword_1008140F0)
               + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_originalSizeCategory) = v8;
      *(_BYTE *)(*(_QWORD *)(v7 + qword_1008140F8)
               + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_originalSizeCategory) = v8;
      *(_BYTE *)(*(_QWORD *)(v7 + qword_100814108)
               + OBJC_IVAR____TtC20ProductPageExtension27TodayTransitioningLabelView_originalSizeCategory) = v8;
    }
  }
  v9 = v1[v2];
  v10 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                          + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView));
  sub_10021F24C(v9);

  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_100472B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v6, v18, 1, 0);
  swift_weakAssign(v6, a2);
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock, &v17, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100018908(v8, v9);
  v10 = (void (*)(__n128))*v7;
  if (*v7)
  {
    v11 = v7[1];
    v12 = swift_retain(v11);
    v10(v12);
    sub_100018908((uint64_t)v10, v11);
  }
  v13 = type metadata accessor for TodayListCardLockupContainer();
  v14 = sub_10000E720(&qword_1008254E0, (uint64_t (*)(uint64_t))type metadata accessor for TodayListCardLockupContainer, (uint64_t)&unk_1006531B0);
  NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v13, v14);
  v15 = *(void **)(v3 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
  if (v15)
  {
    v16 = v15;
    NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v13, v14);

  }
}

void sub_100472C68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator, v13, 1, 0);
  if (swift_weakLoadStrong(v4))
  {
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  swift_weakAssign(v4, 0);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock, &v12, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = 0;
  v5[1] = 0;
  sub_100018908(v6, v7);
  v8 = type metadata accessor for TodayListCardLockupContainer();
  v9 = sub_10000E720(&qword_1008254E0, (uint64_t (*)(uint64_t))type metadata accessor for TodayListCardLockupContainer, (uint64_t)&unk_1006531B0);
  NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v8, v9);
  v10 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
  if (v10)
  {
    v11 = v10;
    NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v8, v9);

  }
}

void sub_100472D90(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];

  v5 = v4;
  v37 = a4;
  v9 = type metadata accessor for TodayCard.Style(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_10081A3C8);
  __chkstk_darwin(v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003588F8(a1, a2, a3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_todayCard] = a1;
  swift_release();
  swift_retain(a1);
  v17 = TodayCard.media.getter(v16);
  v18 = type metadata accessor for TodayCardMediaList(0);
  v19 = swift_dynamicCastClass(v17, v18);
  if (v19)
  {
    v20 = v19;
    v34[1] = v17;
    TodayCard.style.getter(v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    v21 = (uint64_t)&v5[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle];
    swift_beginAccess(&v5[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle], v38, 33, 0);
    sub_1000393D8((uint64_t)v15, v21, &qword_10081A3C8);
    v22 = swift_endAccess(v38);
    v23 = TodayCardMediaList.isMediaDark.getter(v22);
    v24 = a3;
    v25 = OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark;
    v5[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark] = v23 & 1;
    v34[0] = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v26 = v5[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
    v35 = a2;
    v36 = v24;
    sub_1004730F8(a1, v20, a2, v26, v24, v37);
    v27 = *(char **)&v5[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
    v28 = sub_10046F524();
    if ((v28 & 1) != 0 && v5[v25] == 1)
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for TodayCard.Style.dark(_:), v9);
    else
      TodayCard.style.getter(v28);
    sub_10047699C(v27, a1, v20, (uint64_t)v12, v35);
    v29.n128_f64[0] = (*(double (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v30 = TodayCardMediaList.lockups.getter(v29);
    v31 = type metadata accessor for ArtworkLoader(0);
    v32 = v37;
    v33 = *(_QWORD *)(v37 + qword_10086B3B8);
    if (v33)
    {
      swift_retain(*(_QWORD *)(v37 + qword_10086B3B8));
      sub_100224868(v30, v33, v32);
      swift_bridgeObjectRelease(v30);
      swift_release();
      if (v5[v34[0]] == 6)
        sub_1004735A8(a1, v20, v35, v36, v32);
      sub_10046F358();
      sub_1004715CC();
      sub_100471E08();
      sub_10046F5E4();
      sub_100473CA4();
      objc_msgSend(v5, "setNeedsLayout");
      swift_release();
    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v31, v31);
      __break(1u);
    }
  }
  else
  {
    swift_release();
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                         + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
             + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) = 0;
    sub_100471E08();
  }
}

uint64_t sub_1004730F8(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v7 = v6;
  v57 = a5;
  v58 = a6;
  v55 = a4;
  v56 = a3;
  v59 = a2;
  v8 = type metadata accessor for EditorialDisplayOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - v13;
  v63 = TodayCard.media.getter(v15);
  v16 = type metadata accessor for TodayCardMedia(0);
  v17 = sub_10000DAF8(&qword_1008194C8);
  if ((swift_dynamicCast(&v60, &v63, v16, v17, 6) & 1) != 0)
  {
    v53 = v9;
    v54 = v8;
    sub_100010E24(&v60, (uint64_t)v64);
    v18 = v65;
    v19 = v66;
    sub_100010F08(v64, v65);
    v20 = objc_msgSend(v7, "traitCollection");
    v21 = TodayCardMediaWithArtwork.video(for:)(v20, v18, v19);

    if (v21)
    {
      v22 = v65;
      v23 = v66;
      sub_100010F08(v64, v65);
      v24 = dispatch thunk of TodayCardMediaWithArtwork.artworkLayoutsWithMetrics.getter(v22, v23);
      if (v24)
      {
        v26 = v24;
        sub_1004764AC(v21, v24, v56, v57, v58, v25);
        swift_bridgeObjectRelease(v26);
        v27 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
        if (qword_100804880 != -1)
          swift_once(&qword_100804880, sub_1000C06CC);
        v28 = qword_100864E58;
        v29 = unk_100864E60;
        v30 = TodayCardMediaList.isMediaDark.getter();
        v31 = v30;
        v32 = TodayCard.editorialDisplayOptions.getter(v30);
        v33 = EditorialDisplayOptions.useMaterialBlur.getter(v32);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v54);
        v34 = *(char **)(v27
                       + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView);
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v29);
        sub_1000C145C(v28, v29);
        if ((v31 & 1) != 0)
          v35 = 2;
        else
          v35 = 1;
LABEL_23:
        *(_QWORD *)&v34[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = v35;
        sub_1000C13A0();
        objc_msgSend(v34, "setHidden:", (v33 & 1) == 0);
        swift_release();
        return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
      }
      swift_release();
    }
    v36 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
    v9 = v53;
    v8 = v54;
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    v36 = sub_100010F2C((uint64_t)&v60, (uint64_t *)&unk_1008194D0);
  }
  v63 = TodayCard.media.getter(v36);
  if ((swift_dynamicCast(&v60, &v63, v16, v17, 6) & 1) != 0)
  {
    sub_100010E24(&v60, (uint64_t)v64);
    v37 = v65;
    v38 = v66;
    sub_100010F08(v64, v65);
    v39 = objc_msgSend(v7, "traitCollection");
    v40 = TodayCardMediaWithArtwork.artwork(for:)(v39, v37, v38);

    if (v40)
    {
      v41 = v65;
      v42 = v66;
      sub_100010F08(v64, v65);
      v43 = dispatch thunk of TodayCardMediaWithArtwork.artworkLayoutsWithMetrics.getter(v41, v42);
      if (v43)
      {
        v44 = v43;
        if (v55 == 7)
          v45 = v56;
        else
          v45 = v55;
        sub_1004767BC(v40, v43, v45, v57, v58);
        swift_bridgeObjectRelease(v44);
        v46 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
        if (qword_100804878 != -1)
          swift_once(&qword_100804878, sub_1000C0588);
        v47 = qword_100864E48;
        v48 = unk_100864E50;
        v49 = TodayCardMediaList.isMediaDark.getter();
        v50 = v49;
        v51 = TodayCard.editorialDisplayOptions.getter(v49);
        v33 = EditorialDisplayOptions.useMaterialBlur.getter(v51);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v34 = *(char **)(v46
                       + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView);
        swift_bridgeObjectRetain(v47);
        swift_bridgeObjectRetain(v48);
        sub_1000C145C(v47, v48);
        if ((v50 & 1) != 0)
          v35 = 2;
        else
          v35 = 1;
        goto LABEL_23;
      }
      swift_release();
    }
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v64);
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    result = sub_100010F2C((uint64_t)&v60, (uint64_t *)&unk_1008194D0);
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                       + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
           + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) = 0;
  return result;
}

double sub_1004735A8(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  char *v21;
  unint64_t *v22;
  unint64_t v23;
  char *v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id *v37;
  __n128 v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t *v43;
  void **v44;
  __n128 v45;
  void *v46;
  uint64_t v47;
  uint64_t *v48;
  id v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  Swift::Int v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77[24];
  _BYTE v78[32];
  _BYTE v79[24];
  _BYTE v80[24];
  _BYTE v81[32];

  v6 = v5;
  v75 = a5;
  v10 = type metadata accessor for TodayCard.Style(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v76 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView);
  v73 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  v74 = v13;
  v14 = v5 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView;
  v15 = v5 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView;
  if ((*(_BYTE *)(*(_QWORD *)(v13
                             + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) & 1) != 0)
  {
    swift_beginAccess(v15, v81, 0, 0);
    if (*(_QWORD *)v14)
    {
      v16 = *(id *)v14;
      v18 = dispatch thunk of RiverView.dataSource.getter(v17);

      swift_beginAccess(v18 + 32, v80, 1, 0);
      v19 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v18 + 32) = _swiftEmptyArrayStorage;
      swift_release();
      swift_bridgeObjectRelease(v19);
    }
    v20 = (void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    swift_beginAccess(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, v79, 0, 0);
    v21 = (char *)*v20;
    if (*v20)
    {
      v22 = (unint64_t *)&v21[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_colors];
      swift_beginAccess(&v21[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_colors], v78, 1, 0);
      v23 = *v22;
      *v22 = (unint64_t)_swiftEmptyArrayStorage;
      v24 = v21;
LABEL_12:
      sub_1005EE124(v23);

      swift_bridgeObjectRelease(v23);
    }
  }
  else
  {
    swift_beginAccess(v15, v81, 0, 0);
    if (*(_QWORD *)v14)
    {
      v25 = *(id *)v14;
      v27 = dispatch thunk of RiverView.dataSource.getter(v26);

      v72 = TodayCardMediaList.lockups.getter(v28);
      swift_beginAccess(v27 + 32, v80, 1, 0);
      v29 = a2;
      v30 = *(_QWORD *)(v27 + 32);
      *(_QWORD *)(v27 + 32) = v72;
      swift_release();
      v31 = v30;
      a2 = v29;
      swift_bridgeObjectRelease(v31);
      if (*(_QWORD *)v14)
      {
        v32 = *(id *)v14;
        v34 = dispatch thunk of RiverView.dataSource.getter(v33);

        v35 = type metadata accessor for ArtworkLoader(0);
        v36 = *(_QWORD *)(v75 + qword_10086B3B8);
        if (!v36)
          goto LABEL_59;
        *(_QWORD *)(v34 + 16) = v36;
        swift_retain(v36);
        swift_release();
        swift_release();
      }
    }
    v37 = (id *)(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView);
    swift_beginAccess(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverBackgroundView, v79, 0, 0);
    if (*v37)
    {
      v24 = (char *)*v37;
      v39 = TodayCardMediaList.lockups.getter(v38);
      v40 = sub_10046EB14(v39);
      v72 = v6;
      v41 = a2;
      v42 = v40;
      swift_bridgeObjectRelease(v39);
      v43 = (unint64_t *)&v24[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_colors];
      swift_beginAccess(&v24[OBJC_IVAR____TtC20ProductPageExtension28RiverTodayCardBackgroundView_colors], v78, 1, 0);
      v23 = *v43;
      *v43 = (unint64_t)v42;
      a2 = v41;
      v6 = v72;
      goto LABEL_12;
    }
  }
  v44 = (void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView);
  v45 = swift_beginAccess(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView, v77, 0, 0);
  v46 = *v44;
  if (*v44)
  {
    if (*(_BYTE *)(*(_QWORD *)(v74 + v73) + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) == 1)
    {
      v47 = (uint64_t)v76;
      if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_isMediaDark) & 1) == 0)
      {
LABEL_16:
        TodayCard.style.getter(v46);
        v47 = (uint64_t)v76;
LABEL_22:
        sub_10047699C((char *)v46, a1, a2, v47, a3);

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v47, v10);
        goto LABEL_23;
      }
    }
    else
    {
      if (*(_BYTE *)(v6 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded))
        v48 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v48 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v47 = (uint64_t)v76;
      if (*(_BYTE *)(v6 + *v48) != 6)
        goto LABEL_16;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v11 + 104))(v47, enum case for TodayCard.Style.dark(_:), v10, v45);
    v49 = v46;
    goto LABEL_22;
  }
LABEL_23:
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) & 1) != 0)
    return v45.n128_f64[0];
  v50 = TodayCardMediaList.lockups.getter(v45);
  v14 = v50;
  v10 = (unint64_t)v50 >> 62;
  if ((unint64_t)v50 >> 62)
  {
    if (v50 < 0)
      v34 = v50;
    else
      v34 = v50 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v50);
    v56 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRetain(v14);
    v55 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v14);
    if ((v55 & 0x8000000000000000) == 0)
      goto LABEL_60;
    __break(1u);
    goto LABEL_56;
  }
  if (*(uint64_t *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10) >= 6)
    v52 = 6;
  else
    v52 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((v50 & 0xC000000000000001) != 0)
  {
LABEL_29:
    if (v52)
    {
      type metadata accessor for Lockup(0);
      v53 = 0;
      do
      {
        v54 = v53 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v53);
        v53 = v54;
      }
      while (v52 != v54);
    }
    goto LABEL_32;
  }
  while (1)
  {
LABEL_32:
    if (v10)
    {
      if (v14 < 0)
        v57 = v14;
      else
        v57 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v56 = _CocoaArrayWrapper.subscript.getter(0, v52, v57);
      v10 = v58;
      v55 = v59;
      a2 = v60;
      v51 = swift_bridgeObjectRelease_n(v14, 2);
      if ((a2 & 1) == 0)
        goto LABEL_39;
    }
    else
    {
      v55 = 0;
      v56 = v14 & 0xFFFFFFFFFFFFFF8;
      v10 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
      a2 = (2 * v52) | 1;
      if ((a2 & 1) == 0)
        goto LABEL_39;
    }
    v61 = type metadata accessor for __ContiguousArrayStorageBase(0, v51);
    v62 = swift_unknownObjectRetain_n(v56, 2);
    v63 = (double *)swift_dynamicCastClass(v62, v61);
    if (!v63)
    {
      swift_unknownObjectRelease();
      v63 = _swiftEmptyArrayStorage;
    }
    v64 = *((_QWORD *)v63 + 2);
    swift_release();
    if (__OFSUB__(a2 >> 1, v55))
    {
LABEL_56:
      __break(1u);
LABEL_57:
      swift_unknownObjectRelease();
LABEL_39:
      v14 = (uint64_t)sub_1003F92B0(v56, v10, v55, a2);
      goto LABEL_46;
    }
    if (v64 != (a2 >> 1) - v55)
      goto LABEL_57;
    v14 = swift_dynamicCastClass(v56, v61);
    if (!v14)
    {
      swift_unknownObjectRelease();
      v14 = (uint64_t)_swiftEmptyArrayStorage;
    }
LABEL_46:
    swift_unknownObjectRelease();
    v65 = *(void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer);
    v66 = v75;
    if (!v65)
      goto LABEL_49;
    v6 = type metadata accessor for ArtworkLoader(0);
    v34 = *(_QWORD *)(v66 + qword_10086B3B8);
    v67 = v65;
    if (v34)
      break;
    v35 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v6, v6);
    __break(1u);
LABEL_59:
    v56 = v75;
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v35, v35);
    __break(1u);
LABEL_60:
    if (v56 >= 6)
      v69 = 6;
    else
      v69 = v56;
    if (v56 >= 0)
      v52 = v69;
    else
      v52 = 6;
    swift_bridgeObjectRetain(v14);
    v70 = _CocoaArrayWrapper.endIndex.getter(v34);
    v51 = swift_bridgeObjectRelease(v14);
    if (v70 < v52)
      __break(1u);
    if ((v14 & 0xC000000000000001) != 0)
      goto LABEL_29;
  }
  v68 = v67;
  swift_retain(v34);
  sub_100224868(v14, v34, v66);

  swift_release();
LABEL_49:
  v45.n128_u64[0] = swift_release().n128_u64[0];
  return v45.n128_f64[0];
}

void sub_100473CA4()
{
  _BYTE *v0;
  uint64_t *v1;
  id *v2;
  id v3;
  id v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE v12[24];

  sub_100355368();
  v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v1 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if ((v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) == 0
    && v0[*v1] == 6
    && (v2 = (id *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView],
        swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v12, 0, 0), *v2))
  {
    v3 = *v2;
    v4 = objc_msgSend(v0, "contentView");
    sub_1001AEC24();
    if (v5)
    {
      v7 = v5;
      v8 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v4, "setAccessibilityLabel:", v8, v6);

  }
  else
  {
    v4 = objc_msgSend(v0, "contentView");
    sub_1001AEC24();
    if (v9)
    {
      v11 = v9;
      v8 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v4, "setAccessibilityLabel:", v8, v10);
  }

}

void sub_100473E04(void *a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t ObjectType;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  char *v23;
  id *v24;
  id v25;
  _BYTE *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  void **v36;
  void *v37;
  void **v38;
  void *v39;
  _BYTE *v40;
  id v41;
  void *v42;
  void *v43;
  char *v44;
  id v45;
  char *v46;
  id v47;
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = a3 & 1;
  v10 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003551F8((uint64_t)a1, a2, a3 & 1);
  v13 = swift_dynamicCastClass(a1, ObjectType);
  if (v13)
  {
    v14 = (char *)v13;
    v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_todayCard);
    *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_todayCard] = v15;
    v47 = a1;
    swift_retain(v15);
    swift_release();
    v46 = *(char **)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
    v16 = *(void **)&v46[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView];
    v17 = *(char **)&v14[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
    v18 = *(void **)&v17[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView];
    v19 = (uint64_t)&v4[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid];
    swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid], v51, 0, 0);
    sub_100018ADC(v19, (uint64_t)v12, &qword_10082AF10);
    if (v4[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v20 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v20 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v21 = v4[*v20];
    v22 = v16;
    v23 = v18;
    sub_10021F560(v23, v9, (uint64_t)v12, v21);

    sub_100010F2C((uint64_t)v12, &qword_10082AF10);
    if (v9)
    {
      sub_100474228(v14);
    }
    else
    {
      v24 = (id *)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView];
      swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverView], v50, 0, 0);
      if (*v24)
      {
        v25 = *v24;
        dispatch thunk of RiverView.isAnimating.setter(0);

      }
      swift_unknownObjectWeakAssign();
      v26 = *(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_labelsView];
      sub_1001B076C(v26);

      v27 = (char *)*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer];
      sub_100224904(v27);

      objc_msgSend(v17, "frame");
      v28 = v46;
      objc_msgSend(v46, "setFrame:");
      objc_msgSend(v28, "setHidden:", objc_msgSend(v17, "isHidden"));
      v29 = *(char **)&v17[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView];
      v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_style];
      v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_style + 8];
      v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle];
      swift_bridgeObjectRetain(v30);
      v33 = objc_msgSend(v29, "isHidden", swift_bridgeObjectRetain(v31).n128_f64[0]);
      v34 = *(char **)&v28[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView];
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v31);
      sub_1000C145C(v30, v31);
      v35 = 1;
      if (v32 == 2)
        v35 = 2;
      *(_QWORD *)&v34[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = v35;
      sub_1000C13A0();
      objc_msgSend(v34, "setHidden:", v33);
      swift_bridgeObjectRelease(v31);
      objc_msgSend(v28, "setNeedsLayout", swift_bridgeObjectRelease(v30).n128_f64[0]);
      v36 = (void **)&v14[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
      swift_beginAccess(&v14[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v49, 0, 0);
      v37 = *v36;
      if (*v36)
      {
        v38 = (void **)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView];
        swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView], v48, 0, 0);
        v39 = *v38;
        if (v39)
        {
          v40 = v37;
          v41 = v39;
          sub_1001B076C(v40);

        }
      }
      v42 = *(void **)&v14[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
      if (v42)
      {
        v43 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer];
        if (v43)
        {
          v44 = v42;
          v45 = v43;
          sub_100224904(v44);

        }
      }
      sub_100473CA4();
    }
    objc_msgSend(v4, "setNeedsLayout");

  }
}

char *sub_100474228(char *result)
{
  _BYTE *v1;
  uint64_t *v2;
  char *v3;
  uint64_t KeyPath;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void **v13;
  void *v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26[24];

  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView]
                             + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                 + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia) & 1) == 0)
  {
    if (v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v2 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v2 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    if (v1[*v2] == 6)
    {
      v3 = result;
      KeyPath = swift_getKeyPath(&unk_100664150);
      v5 = objc_msgSend(v1, "contentView");
      v6 = swift_getKeyPath(&unk_100664150);
      v7 = objc_msgSend(v3, "contentView");
      sub_100476ED0(v1, KeyPath, v5, v3, v6, v7);
      swift_release();

      swift_release();
      v8 = swift_getKeyPath(&unk_100664170);
      v9 = objc_msgSend(v1, "contentView");
      v10 = swift_getKeyPath(&unk_100664170);
      v11 = objc_msgSend(v3, "contentView");
      sub_100476D34(v1, v8, v9, v3, v10, v11);
      swift_release();

      swift_release();
      v12 = swift_getKeyPath(&unk_100664190);
      v13 = (void **)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView];
      swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView], v26, 0, 0);
      v14 = *v13;
      v15 = swift_getKeyPath(&unk_100664190);
      v16 = (id *)&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView];
      swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_riverContainerView], &v25, 0, 0);
      v17 = *v16;
      v18 = *v16;
      v19 = v14;
      sub_100476ED0(v1, v12, v14, v3, v15, v17);
      swift_release();

      swift_release();
      v20 = swift_getKeyPath(&unk_1006641B0);
      v21 = objc_msgSend(v1, "contentView");
      v22 = swift_getKeyPath(&unk_1006641B0);
      v23 = *v16;
      v24 = v23;
      sub_100476ED0(v1, v20, v21, v3, v22, v23);
      swift_release();

      swift_release();
      objc_msgSend(v3, "setNeedsLayout");
      return (char *)objc_msgSend(v1, "setNeedsLayout");
    }
  }
  return result;
}

void sub_1004745E4(uint64_t a1, unsigned int a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t (*v17)(void);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  __n128 v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t (*v39)(void);
  uint64_t (*v40)(void);
  uint64_t (*v41)(void);
  uint64_t (*v42)(void);
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  char v56;
  __n128 v57;
  __n128 v58;
  id v59;
  char v60;
  __n128 v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72[12])(void);
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;

  v9 = type metadata accessor for EditorialDisplayOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v71 = a4;
    v14 = TodayCard.media.getter(v11);
    v15 = type metadata accessor for TodayCardMediaList(0);
    v16 = (uint64_t (*)(void))swift_dynamicCastClass(v14, v15);
    if (v16)
    {
      v66 = v9;
      v70 = v14;
      v72[0] = v16;
      v17 = v16;
      v18 = TodayCardMediaWithArtwork.video(for:)(a5, v15, &protocol witness table for TodayCardMediaList);
      v69 = v17;
      v72[0] = v17;
      v68 = TodayCardMediaWithArtwork.artwork(for:)(a5, v15, &protocol witness table for TodayCardMediaList);
      v67 = v18;
      if (__PAIR128__(v68, v18) == 0)
      {
        if (a2 == 6)
          sub_100475EB0(v71, a5);
        else
          sub_100476064(v71, a2, 1, a5);
        v23 = v21;
        v24 = v22;
        v25.n128_f64[0] = PageGrid.columnWidth.getter(v20);
        v26 = v25.n128_f64[0] - v23;
        v65 = (char *)TodayCard.heading.getter(v25);
        v28 = v27;
        v64 = TodayCard.title.getter(v65);
        v30 = v29;
        v31 = TodayCard.media.getter(v64);
        v32 = swift_dynamicCastClass(v31, v15);
        if (v32)
        {
          v33 = TodayCardMediaList.marketingText.getter(v32);
          v35 = v34;
          v36 = v33;
          swift_release();
        }
        else
        {
          swift_release();
          v36 = 0;
          v35 = 0;
        }
        v38 = v26 - v24;
        if (a2 == 6)
        {
          v39 = sub_100034018;
          v40 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
          v41 = (uint64_t (*)(void))sub_1005FF3C0;
          v42 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        }
        else if (a2 == 4)
        {
          v39 = sub_10028C05C;
          v40 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
          v41 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
          v42 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        }
        else
        {
          v39 = (uint64_t (*)(void))sub_1005FEFFC;
          v40 = (uint64_t (*)(void))sub_1005FF1D4;
          v42 = (uint64_t (*)(void))sub_1005FF1AC;
          v41 = (uint64_t (*)(void))sub_1005FEFD4;
        }
        v72[0] = sub_10000D390;
        v72[1] = 0;
        v72[2] = v41;
        v72[3] = 0;
        v72[4] = v42;
        v72[5] = 0;
        v72[6] = v40;
        v72[7] = 0;
        v72[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        v72[9] = 0;
        v72[10] = v39;
        v72[11] = 0;
        v43 = TodayCard.editorialDisplayOptions.getter(v37);
        v73 = 0x4000000000000000uLL;
        v74 = 0;
        v75 = 0x4018000000000000;
        v76 = 0;
        v77 = 1;
        v43.n128_f64[0] = v38;
        sub_1001AF7BC(v65, v28, v64, v30, v36, v35, v72, (uint64_t)v13, v43, 1.79769313e308, &v73, a5);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v30);
        v44 = swift_bridgeObjectRelease(v28);
        v19.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v66, v44);
      }
      v45 = TodayCardMediaList.lockups.getter(v19);
      v46 = v45;
      if ((unint64_t)v45 >> 62)
      {
        if (v45 >= 0)
          v45 &= 0xFFFFFFFFFFFFFF8uLL;
        v47 = _CocoaArrayWrapper.endIndex.getter(v45);
      }
      else
      {
        v47 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v46);
      type metadata accessor for TodayListCardLockupContainer();
      sub_100224160(v47, a5);
      if ((UITraitCollection.isSizeClassRegular.getter(v48) & 1) != 0)
      {
        if (qword_100806818 != -1)
          swift_once(&qword_100806818, sub_1004D5250);
        v50 = type metadata accessor for StaticDimension(0);
        sub_10000EFC4(v50, (uint64_t)qword_10086A878);
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v51 = sub_10000DAF8((uint64_t *)&unk_100808840);
        v52 = swift_allocObject(v51, 40, 7);
        *(_OWORD *)(v52 + 16) = xmmword_100640AE0;
        *(_QWORD *)(v52 + 32) = a5;
        v53 = a5;
        v54 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v52);
        dispatch thunk of AnyDimension.rawValue(in:)(v54, v50, &protocol witness table for StaticDimension);

      }
      else
      {
        PageGrid.safeAreaInsets.getter(v49);
      }
      v55 = objc_msgSend(a5, "preferredContentSizeCategory");
      v56 = static UIContentSizeCategory.> infix(_:_:)(v55, UIContentSizeCategoryExtraLarge);

      if ((v56 & 1) != 0)
      {
        v57.n128_u64[0] = 8.0;
        v58.n128_u64[0] = 8.0;
      }
      else
      {
        v57.n128_u64[0] = 20.0;
        v58.n128_u64[0] = 20.0;
      }
      static UIEdgeInsets.vertical(top:bottom:)(v57, v58);
      v59 = objc_msgSend(a5, "preferredContentSizeCategory");
      v60 = static UIContentSizeCategory.> infix(_:_:)(v59, UIContentSizeCategoryExtraLarge);

      if ((v60 & 1) != 0)
      {
        v61.n128_u64[0] = 8.0;
        v62.n128_u64[0] = 8.0;
      }
      else
      {
        v61.n128_u64[0] = 20.0;
        v62.n128_u64[0] = 20.0;
      }
      static UIEdgeInsets.vertical(top:bottom:)(v61, v62);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_100357CA0(a2, a4, a5);
  }
}

void sub_100474B94()
{
  uint64_t v0;
  id *v1;
  id v2;
  _BYTE v3[24];

  sub_1001AC8EC();
  v1 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_topLabelsView, v3, 0, 0);
  if (*v1)
  {
    v2 = *v1;
    sub_1001AC8EC();

  }
}

double sub_100474C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::OpaquePointer v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;

  v5 = type metadata accessor for PageGrid(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TodayCard(0);
  v10 = sub_10000E720((unint64_t *)&qword_10081F6D0, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v11 = ItemLayoutContext.typedModel<A>(as:)(&v35, v9, v9, v10);
  if (v35)
  {
    v13 = TodayCard.media.getter(v11);
    swift_release();
    v14 = type metadata accessor for TodayCardMediaList(0);
    v15 = swift_dynamicCastClass(v13, v14);
    if (v15)
    {
      v17 = (void *)v15;
      v18 = TodayCardMediaList.lockups.getter(v16);
      v33 = a2;
      sub_1002254A0(v18);
      swift_bridgeObjectRelease(v18);
      v19 = type metadata accessor for TodayPageSectionGridTracker();
      v20 = type metadata accessor for BaseObjectGraph(0);
      inject<A, B>(_:from:)(v19, a3, v19, v20);
      sub_100334294();
      HIDWORD(v32) = v21;
      v35 = v17;
      swift_getKeyPath(&unk_1006640F0);
      ItemLayoutContext.subscript.getter(&v34);
      v22 = swift_release();
      v23 = v34;
      v24 = TodayCardMediaWithArtwork.prefetchableArtwork(for:)(v34, v14, &protocol witness table for TodayCardMediaList, v22);

      if (v24)
      {
        v25 = TodayCardMediaList.artworkLayoutsWithMetrics.getter();
        if (v25)
        {
          v26 = v25;
          swift_getKeyPath(&unk_100664120);
          ItemLayoutContext.subscript.getter(v8);
          swift_release();
          swift_getKeyPath(&unk_1006640F0);
          ItemLayoutContext.subscript.getter(&v35);
          swift_release();
          v27 = v35;
          v28 = sub_10022006C(v24, v26, HIDWORD(v32), 177.0, (uint64_t)v8, v35);
          swift_bridgeObjectRelease(v26);

          (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
          v29 = sub_10000DAF8((uint64_t *)&unk_100808840);
          v30 = swift_allocObject(v29, 40, 7);
          *(_OWORD *)(v30 + 16) = xmmword_100640AE0;
          *(_QWORD *)(v30 + 32) = v28;
          v35 = (void *)v30;
          specialized Array._endMutation()(v30);
          v31._rawValue = v35;
          swift_retain(v28);
          ArtworkLoader.prefetchArtwork(using:)(v31);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          *(_QWORD *)&result = swift_bridgeObjectRelease(v31._rawValue).n128_u64[0];
          return result;
        }
        swift_release();
      }
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100474EE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  id v6;

  v6 = objc_retain(*(id *)(*(_QWORD *)(v3
                                     + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                         + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView));
  sub_10021F978(a1, a3);

}

uint64_t sub_100474FA4()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v21[40];
  uint64_t v22;
  char v23[40];

  v1 = v0;
  v2 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v2 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if ((v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) == 0
    && v0[*v2] == 6
    && (v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer]) != 0)
  {
    v4 = sub_10000DAF8((uint64_t *)&unk_100808840);
    inited = swift_initStackObject(v4, v21);
    *(_OWORD *)(inited + 16) = xmmword_100640AE0;
    v6 = v3;
    v7 = objc_msgSend(v1, "contentView");
    *(_QWORD *)(inited + 32) = v7;
    v22 = inited;
    specialized Array._endMutation()(v7);
    v8 = v22;
    v9 = objc_msgSend(v6, "subviews");
    v10 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    v22 = v8;
    sub_10001A304(v11);
    v12 = v22;
    v13 = sub_1003AFAB8(v22);
    swift_bridgeObjectRelease(v12);

  }
  else
  {
    v14 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v15 = swift_initStackObject(v14, v23);
    *(_OWORD *)(v15 + 16) = xmmword_100640AE0;
    v16 = objc_msgSend(v1, "contentView");
    *(_QWORD *)(v15 + 32) = v16;
    v22 = v15;
    specialized Array._endMutation()(v16);
    v17 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer], "subviews");
    v18 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v22 = v15;
    sub_10001A304(v19);
    v13 = sub_1003AFAB8(v15);
    swift_bridgeObjectRelease(v15);
  }
  return v13;
}

uint64_t sub_10047525C()
{
  uint64_t v0;

  swift_release();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_trailingLockupContainer));

  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_cardStyle, &qword_10081A3C8);
  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_otherCardToExchangeRiverWith);
}

uint64_t sub_1004753F0()
{
  return type metadata accessor for ListTodayCardCollectionViewCell(0);
}

uint64_t type metadata accessor for ListTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100825480;
  if (!qword_100825480)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ListTodayCardCollectionViewCell);
  return result;
}

void sub_100475434(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = "\b";
  v4[7] = "\b";
  v4[8] = "\b";
  sub_1002D0D3C(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    v4[10] = &unk_100663F88;
    v4[11] = &unk_100663FA0;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 608);
  }
}

char *sub_1004754DC(double a1)
{
  uint64_t v1;
  char *result;
  double v3;

  result = *(char **)(*(_QWORD *)(*(_QWORD *)(v1
                                            + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                                + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)
                    + OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView);
  v3 = *(double *)&result[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop];
  *(double *)&result[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop] = a1;
  if (v3 != a1)
    return (char *)objc_msgSend(result, "setNeedsLayout");
  return result;
}

uint64_t sub_100475530()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)+ OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView)+ OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView)+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
}

void sub_10047556C(void *a1)
{
  uint64_t v1;
  char *v2;
  void *Strong;
  char *v4;

  v2 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView]+ OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  swift_unknownObjectWeakAssign();
  v4 = v2;
  sub_100481308(Strong);

}

uint64_t (*sub_100475604(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1004701C8(v2);
  return sub_10001C148;
}

uint64_t sub_100475648()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E720(&qword_1008254D8, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100664080);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100475690(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_1008254D8, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100664080);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_1004756F0(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E720(&qword_1008254D8, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100664080);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001C148;
}

char *sub_10047576C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  v1 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  v2 = type metadata accessor for StoryCardMediaView(0);
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView;
  if (qword_100804888 != -1)
    swift_once(&qword_100804888, sub_1000C082C);
  v6 = off_10080DB20;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v6);
  *(_QWORD *)&v4[v5] = sub_1000C0854(v7);

  v12.receiver = v4;
  v12.super_class = (Class)_s20ProductPageExtension10HeaderViewCMa_0();
  v8 = (char *)objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView];
  v10 = v8;
  objc_msgSend(v10, "addSubview:", v9);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView]);
  objc_msgSend(v10, "setClipsToBounds:", 1);

  return v10;
}

void sub_1004758F8()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  char v4;
  uint64_t v5;
  double v6;
  double v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)_s20ProductPageExtension10HeaderViewCMa_0();
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setFrame:");
  sub_100475BE8();
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = UITraitCollection.prefersRightToLeftLayouts.getter();

  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView];
  v6 = 0.174532925;
  if ((v4 & 1) != 0)
    v6 = -0.174532925;
  v7 = *(double *)(v5 + OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_rotationAngle);
  *(double *)(v5 + OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_rotationAngle) = v6;
  if (v6 != v7)
    sub_1000C1020();
}

void sub_100475A14(uint64_t a1, uint64_t a2, double a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  id v16;
  uint64_t v17;
  id v18;

  v4 = v3;
  v8 = type metadata accessor for CornerStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10021F38C(a1, a2, a3);
  v12 = a2 & 0xC;
  if ((a2 & 0xC) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    if (v13 == enum case for CornerStyle.continuous(_:))
    {
      objc_msgSend(v4, "_setContinuousCornerRadius:", a3);
    }
    else
    {
      v14 = v13;
      v15 = enum case for CornerStyle.arc(_:);
      objc_msgSend(v4, "_setCornerRadius:", a3);
      if (v14 != v15)
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    v16 = objc_msgSend(v4, "layer");
    objc_msgSend(v16, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(v12));

  }
  else
  {
    v18 = objc_msgSend(v4, "layer");
    objc_msgSend(v18, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(a2 & 3));

  }
}

void sub_100475BE8()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  char *v5;
  double MinX;
  double v7;
  double v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView];
  objc_msgSend(v2, "frame");
  v3 = CGRectGetHeight(v9) * 0.5 * 0.176326981;
  objc_msgSend(v2, "frame");
  v4 = ceil(v3 + CGRectGetHeight(v10));
  v5 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView];
  objc_msgSend(v2, "frame");
  MinX = CGRectGetMinX(v11);
  objc_msgSend(v2, "frame");
  v7 = CGRectGetHeight(v12) + -145.0;
  if (v7 < 0.0)
    v8 = 0.0;
  else
    v8 = v7;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v5, "setFrame:", MinX, v8, CGRectGetWidth(v13), v4);
  *(double *)&v5[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_gradientStartY] = v3 / v4;
  sub_1000C1020();
  *(double *)&v5[OBJC_IVAR____TtC20ProductPageExtension28TodayCardProtectionLayerView_gradientEndY] = (v3 + 145.0) / v4;
  sub_1000C1020();
}

id sub_100475D54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s20ProductPageExtension10HeaderViewCMa_0();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s20ProductPageExtension10HeaderViewCMa_0()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView);
}

uint64_t sub_100475DE0(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E720(&qword_10081F298, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_10065B30C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100475E1C()
{
  return sub_10000E720(&qword_1008254C8, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100664010);
}

uint64_t sub_100475E48()
{
  return sub_10000E720(&qword_1008254D0, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100664040);
}

uint64_t sub_100475E74(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E720(&qword_1008254D8, type metadata accessor for ListTodayCardCollectionViewCell, (uint64_t)&unk_100664080);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_100475EB0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  uint64_t v18;

  v4 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_100358170((uint64_t)v6, a2);
  v9 = sub_100010F2C((uint64_t)v6, &qword_10082AF10);
  if ((UITraitCollection.isSizeClassRegular.getter(v9) & 1) != 0)
  {
    if (qword_100806818 != -1)
      swift_once(&qword_100806818, sub_1004D5250);
    v11 = type metadata accessor for StaticDimension(0);
    sub_10000EFC4(v11, (uint64_t)qword_10086A878);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v12 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v13 + 32) = a2;
    v14 = a2;
    v15 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v13);
    v16 = dispatch thunk of AnyDimension.rawValue(in:)(v15, v11, &protocol witness table for StaticDimension);

  }
  else
  {
    v16 = PageGrid.safeAreaInsets.getter(v10);
  }
  return v16 + 20.0;
}

void sub_100476064(uint64_t a1, int a2, char a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  _BYTE *v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t, __n128);
  id v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  _BYTE v49[4];
  int v50;
  id v51;

  v51 = a4;
  v50 = a2;
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v49[-v11];
  v13 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v13);
  v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v49[-v17];
  __chkstk_darwin(v19);
  v21 = &v49[-v20];
  v24 = __chkstk_darwin(v22);
  v25 = &v49[-v23];
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16);
  if ((a3 & 1) != 0)
  {
    v26(&v49[-v23], a1, v6, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    sub_100018ADC((uint64_t)v25, (uint64_t)v21, &qword_10082AF10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v21, 1, v6) == 1)
    {
      sub_100010F2C((uint64_t)v21, &qword_10082AF10);
      v27 = v51;
    }
    else
    {
      v28 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v21, v6);
      v29 = PageGrid.horizontalDirectionalMargins.getter(v28);
      v31 = 34.0;
      if (v30 <= 34.0)
        v32 = v30;
      else
        v32 = 34.0;
      PageGrid.horizontalDirectionalMargins.getter(v29);
      if (v33 <= 34.0)
        v31 = v33;
      v27 = v51;
      v34 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v51, "layoutDirection"), 0.0, v32, 0.0, v31);
      (*(void (**)(_BYTE *, uint64_t, double))(v7 + 8))(v12, v6, v34);
    }
    v35 = sub_100010F2C((uint64_t)v25, &qword_10082AF10);
    if ((UITraitCollection.isSizeClassRegular.getter(v35) & 1) != 0)
    {
      if (qword_100806818 != -1)
        swift_once(&qword_100806818, sub_1004D5250);
      v37 = type metadata accessor for StaticDimension(0);
      sub_10000EFC4(v37, (uint64_t)qword_10086A878);
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v38 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v39 = swift_allocObject(v38, 40, 7);
      *(_OWORD *)(v39 + 16) = xmmword_100640AE0;
      *(_QWORD *)(v39 + 32) = v27;
      v40 = v27;
      v41 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v39);
      dispatch thunk of AnyDimension.rawValue(in:)(v41, v37, &protocol witness table for StaticDimension);

    }
    else
    {
      PageGrid.safeAreaInsets.getter(v36);
    }
  }
  else
  {
    v26(v18, a1, v6, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
    sub_100018ADC((uint64_t)v18, (uint64_t)v15, &qword_10082AF10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    {
      sub_100010F2C((uint64_t)v15, &qword_10082AF10);
    }
    else
    {
      v42 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v15, v6);
      v43 = 12.0;
      v44 = 12.0;
      if (v50 != 4)
      {
        v45 = PageGrid.horizontalDirectionalMargins.getter(v42);
        v44 = 20.0;
        v43 = v46 <= 20.0 ? v46 : 20.0;
        PageGrid.horizontalDirectionalMargins.getter(v45);
        if (v47 <= 20.0)
          v44 = v47;
      }
      v48 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v51, "layoutDirection"), 0.0, v43, 0.0, v44);
      (*(void (**)(_BYTE *, uint64_t, double))(v7 + 8))(v9, v6, v48);
    }
    sub_100010F2C((uint64_t)v18, &qword_10082AF10);
  }
}

uint64_t sub_1004764AC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;

  v7 = v6;
  v54 = a4;
  v55 = a5;
  v53 = a3;
  v52 = a2;
  v9 = type metadata accessor for VideoControls(0, a6);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - v13;
  v15 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VideoFillMode(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for VideoConfiguration(0);
  v50 = *(_QWORD *)(v23 - 8);
  v51 = v23;
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v20 + 104))(v22, enum case for VideoFillMode.scaleAspectFill(_:), v19, v24);
  v28 = Video.preview.getter(v27);
  Artwork.size.getter(v28);
  AspectRatio.init(_:_:)(v29);
  swift_release();
  v30 = type metadata accessor for AspectRatio(0);
  v31 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v18, 0, 1, v30);
  v32 = Video.playbackControls.getter(v31);
  v33 = Video.autoPlayPlaybackControls.getter(v32);
  v34 = 0;
  if ((Video.canPlayFullScreen.getter(v33) & 1) != 0)
    v34 = v7[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v35 = Video.allowsAutoPlay.getter();
  v36 = Video.looping.getter();
  v37 = VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v22, v18, v14, v11, v34, v35 & 1, v36 & 1, 0, 0, 1);
  v38 = Video.preview.getter(v37);
  v39 = objc_msgSend(v7, "traitCollection");
  v40 = v52;
  v41 = v53;
  v42 = v54;
  v43 = sub_10022006C(v38, v52, v53, 177.0, v54, v39);
  swift_release();

  v44 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  v45 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  v46 = objc_retain(*(id *)(v44
                          + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView));
  sub_1002205BC(a1, v40, (uint64_t)v26, v43, v42, v41, v55);

  v47 = v7[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
  v48 = *(id *)(v44 + v45);
  sub_10021F24C(v47);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v26, v51);
}

void sub_1004767BC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  void *Strong;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v25;

  v6 = v5;
  v12 = objc_msgSend(v6, "traitCollection");
  v23 = sub_10022006C(a1, a2, a3, 177.0, a4, v12);

  v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  v14 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  v15 = *(void **)(v13 + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
  v16 = type metadata accessor for ArtworkLoader(0);
  v17 = type metadata accessor for BaseObjectGraph(0);
  v18 = v15;
  inject<A, B>(_:from:)(v16, a5, v16, v17);
  v19 = *(char **)&v18[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingVideoView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v19[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  swift_unknownObjectWeakAssign();
  sub_100481308(Strong);

  v21 = *(void **)&v18[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_revealingImageView];
  sub_10031B6B4(v23, a2, a4, a3, v25);
  objc_msgSend(v21, "setHidden:", 0);
  objc_msgSend(v19, "setHidden:", 1);
  swift_release();
  v18[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia] = 1;

  LOBYTE(v6) = v6[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
  v22 = *(id *)(v13 + v14);
  sub_10021F24C((char)v6);
  swift_release();

}

id sub_10047699C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  char v27;
  char *v28;
  __n128 v29;
  char *v30;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[13];

  v37 = a1;
  v38 = a4;
  v6 = type metadata accessor for EditorialDisplayOptions(0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_10080F590);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = TodayCard.heading.getter(v10);
  v14 = v13;
  v35 = TodayCard.title.getter(v36);
  v16 = v15;
  v34 = TodayCard.shortTitle.getter();
  v18 = v17;
  TodayCard.titleCharacteristics.getter();
  v19 = type metadata accessor for StringCharacteristics(0);
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
  v33 = TodayCardMediaList.marketingText.getter(v20);
  v22 = v21;
  TodayCard.editorialDisplayOptions.getter(v33);
  if (a5 == 6)
  {
    v23 = sub_100034018;
    v24 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v25 = sub_1005FF3C0;
    v26 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else if (a5 == 4)
  {
    v23 = sub_10028C05C;
    v24 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v25 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v26 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  }
  else
  {
    v23 = sub_1005FEFFC;
    v24 = sub_1005FF1D4;
    v26 = sub_1005FF1AC;
    v25 = sub_1005FEFD4;
  }
  v41[0] = sub_10000D390;
  v41[1] = 0;
  v41[2] = v25;
  v41[3] = 0;
  v41[4] = v26;
  v41[5] = 0;
  v41[6] = v24;
  v41[7] = 0;
  v41[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v41[9] = 0;
  v41[10] = v23;
  v41[11] = 0;
  v27 = sub_10046F524();
  v32 = a5;
  v28 = v37;
  sub_1001AC0A0(v36, v14, v35, v16, v34, v18, (uint64_t)v12, v33, v22, v38, v32, (uint64_t)v8, 0, 0, 0, (uint64_t)v41, v27 & 1);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16);
  v29 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v8, v40, v29);
  sub_100010F2C((uint64_t)v12, &qword_10080F590);
  sub_10046F524();
  v30 = &v28[qword_1008140D8];
  *(_QWORD *)v30 = 0x4000000000000000;
  *((_QWORD *)v30 + 1) = 0;
  *((_QWORD *)v30 + 2) = 0;
  *((_QWORD *)v30 + 3) = 0x4018000000000000;
  *((_QWORD *)v30 + 4) = 0;
  v30[40] = 1;
  return objc_msgSend(v28, "setNeedsLayout");
}

_BYTE *sub_100476C64()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *result;
  uint64_t *v5;
  id v6;
  char v7;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_headerView];
  v3 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  result = *(_BYTE **)(v2
                     + OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView);
  if (result[OBJC_IVAR____TtC20ProductPageExtension18StoryCardMediaView_hasMedia] != 1)
    return v0;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v5 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v5 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[*v5] != 6)
  {
    v6 = objc_msgSend(v0, "traitCollection");
    v7 = UITraitCollection.prefersAccessibilityLayouts.getter(v6);

    result = v1;
    if ((v7 & 1) == 0)
      return *(_BYTE **)(v2 + v3);
  }
  return result;
}

void sub_100476D34(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v9;
  void (*v10)(_QWORD *, _QWORD);
  id *v11;
  id v12;
  id v13;
  id v14;
  void (*v15)(_QWORD *, _QWORD);
  id *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD v27[4];
  id v28;

  v28 = a4;
  v9 = a4;
  v10 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a5);
  v12 = *v11;
  v13 = *v11;
  v10(v27, 0);

  objc_msgSend(v13, "removeFromSuperview");
  v28 = a1;
  v14 = a1;
  v15 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a2);
  v17 = *v16;
  v18 = *v16;
  v15(v27, 0);

  objc_msgSend(v18, "removeFromSuperview");
  if (v12)
  {
    v27[0] = v14;
    v28 = v12;
    v19 = v13;
    v20 = v14;
    swift_setAtReferenceWritableKeyPath(v27, a2, &v28);

    objc_msgSend(a3, "addSubview:", v19);
  }
  if (v17)
  {
    v27[0] = v9;
    v28 = v17;
    v21 = v18;
    v22 = v9;
    v23 = v21;
    swift_setAtReferenceWritableKeyPath(v27, a5, &v28);

    if (a6)
    {
      v24 = v23;
      objc_msgSend(a6, "addSubview:", v24);

    }
  }

}

void sub_100476ED0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v9;
  void (*v10)(_QWORD *, _QWORD);
  id *v11;
  id v12;
  id v13;
  id v14;
  void (*v15)(_QWORD *, _QWORD);
  id *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD v27[4];
  id v28;

  v28 = a4;
  v9 = a4;
  v10 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a5);
  v12 = *v11;
  v13 = *v11;
  v10(v27, 0);

  if (v12)
    objc_msgSend(v13, "removeFromSuperview");
  v28 = a1;
  v14 = a1;
  v15 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v27, &v28, a2);
  v17 = *v16;
  v18 = *v16;
  v15(v27, 0);

  if (v17)
    objc_msgSend(v18, "removeFromSuperview");
  if (v12)
  {
    v27[0] = v14;
    v28 = v12;
    v19 = v13;
    v20 = v14;
    swift_setAtReferenceWritableKeyPath(v27, a2, &v28);

    if (a3)
      objc_msgSend(a3, "addSubview:", v19);
  }
  if (v17)
  {
    v27[0] = v9;
    v28 = v17;
    v21 = v18;
    v22 = v9;
    v23 = v21;
    swift_setAtReferenceWritableKeyPath(v27, a5, &v28);

    if (a6)
    {
      v24 = v23;
      objc_msgSend(a6, "addSubview:", v24);

    }
  }

}

double sub_10047707C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;

  v4 = type metadata accessor for PageGrid(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v23 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v23 - v13, a1, v4, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  sub_100018ADC((uint64_t)v14, (uint64_t)v10, &qword_10082AF10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_100010F2C((uint64_t)v10, &qword_10082AF10);
  }
  else
  {
    v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    v16 = PageGrid.horizontalDirectionalMargins.getter(v15);
    v18 = 20.0;
    if (v17 <= 20.0)
      v19 = v17;
    else
      v19 = 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v16);
    if (v20 <= 20.0)
      v18 = v20;
    v21 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(a2, "layoutDirection"), 0.0, v19, 0.0, v18);
    (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v21);
  }
  sub_100010F2C((uint64_t)v14, &qword_10082AF10);
  return 20.0;
}

void sub_100477258()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_mediaView;
  v3 = type metadata accessor for StoryCardMediaView(0);
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v4 = OBJC_IVAR____TtC20ProductPageExtensionP33_3DA3DA2AB58A3471A361CB62A7A7354210HeaderView_gradientBlurView;
  if (qword_100804888 != -1)
    swift_once(&qword_100804888, sub_1000C082C);
  v5 = off_10080DB20;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v5);
  *(_QWORD *)&v1[v4] = sub_1000C0854(v6);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/ListTodayCardCollectionViewCell.swift", 58, 2, 1416, 0);
  __break(1u);
}

uint64_t sub_100477348()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10047736C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC20ProductPageExtension31ListTodayCardCollectionViewCell_lockupContainer), "layoutIfNeeded");
}

uint64_t sub_100477388()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100477398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004773A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_1004773B0(_QWORD *a1)
{
  destroy for ListTodayCardLayout(a1);
  return a1;
}

_QWORD *sub_1004773E4(_QWORD *a1)
{
  destroy for ExtraWideListTodayCardLayout(a1);
  return a1;
}

uint64_t sub_100477418(uint64_t a1)
{
  destroy for MiniListCardLayout(a1);
  return a1;
}

void **sub_10047744C(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for IndexPath(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1004774E0(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void **sub_100477528(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_100477594(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_QWORD *sub_100477604(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_100477660(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004776CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004776D8);
}

uint64_t sub_1004776D8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100477754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100477760);
}

char *sub_100477760(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ComponentOverflowData(uint64_t a1)
{
  uint64_t result;

  result = qword_100825558;
  if (!qword_100825558)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ComponentOverflowData);
  return result;
}

uint64_t sub_100477810(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100477888(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView;
  v13 = objc_allocWithZone((Class)UIView);
  v14 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v13, "init");

  v20.receiver = v14;
  v20.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v16 = objc_msgSend(v15, "contentView");
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v17 = objc_msgSend(v15, "contentView");
  v18 = *(id *)&v15[OBJC_IVAR____TtC20ProductPageExtension29PlaceholderCollectionViewCell_placeholderView];
  objc_msgSend(v17, "addSubview:", v18);

  return v15;
}

uint64_t sub_100477BF8()
{
  return type metadata accessor for PlaceholderCollectionViewCell(0);
}

uint64_t type metadata accessor for PlaceholderCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1008255B8;
  if (!qword_1008255B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaceholderCollectionViewCell);
  return result;
}

unint64_t sub_100477C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100810610;
  if (!qword_100810610)
  {
    v1 = type metadata accessor for TodayBrickShelfCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_100649858, v1);
    atomic_store(result, (unint64_t *)&qword_100810610);
  }
  return result;
}

double sub_100477C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100477C94(a3, a4);
}

double sub_100477C94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double result;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_1006642D8);
  ItemLayoutContext.subscript.getter(v6);
  swift_release();
  ReadOnlyLens.value.getter(&v17, v3);
  v7 = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v8 = v17;
  ItemLayoutContext.sectionIndex.getter(v7);
  v9 = type metadata accessor for ArtworkLoader(0);
  v10 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v9, a2, v9, v10);
  v11 = v16;
  v12 = type metadata accessor for ObjectGraph(0);
  v13 = swift_dynamicCastClassUnconditional(a2, v12, 0, 0, 0);
  v14 = sub_10052A948();
  sub_1000DA8DC(v8, v11, v13, v14);
  swift_release();
  swift_unknownObjectRelease();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100477DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_10004EA50((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_1001F9E08(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v9;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_10001282C(a1);
    sub_1001F393C(a2, a3, v10);
    swift_bridgeObjectRelease(a3);
    sub_10001282C((uint64_t)v10);
  }
}

id sub_100477EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  NSString v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  NSString v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  NSString v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  NSString v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  NSString v36;
  double v37;
  NSString v38;
  Swift::String v39;
  Swift::String v40;
  void *v41;
  NSString v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  NSString v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  NSString v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  void *v55;
  NSString v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  NSString v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void **v80;
  Class isa;
  id v82;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void **aBlock;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, void *, uint64_t, uint64_t);
  void *v95;
  void *v96;
  uint64_t v97;

  v7 = v6;
  v88 = a2;
  v91 = a1;
  v12 = type metadata accessor for ReportConcernReason(0);
  v13 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  v90 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone((Class)ASReportAConcernConfiguration), "init");
  v17._countAndFlagsBits = 0xD000000000000014;
  v17._object = (void *)0x80000001006A5EB0;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v17, v18)._object;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setTitle:", v20, swift_bridgeObjectRelease(object).n128_f64[0]);

  v21._countAndFlagsBits = 0xD000000000000013;
  v21._object = (void *)0x80000001006A5ED0;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = localizedString(_:comment:)(v21, v22)._object;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setBackTitle:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v25._object = (void *)0x80000001006A5EF0;
  v25._countAndFlagsBits = 0xD000000000000015;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = localizedString(_:comment:)(v25, v26)._object;
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setCancelTitle:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v29._object = (void *)0x80000001006A5F10;
  v29._countAndFlagsBits = 0xD000000000000015;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v31 = localizedString(_:comment:)(v29, v30)._object;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setSubmitTitle:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  if ((a5 & 1) != 0)
  {
    v33._countAndFlagsBits = 0xD00000000000002ALL;
    v33._object = (void *)0x80000001006A5FD0;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v35 = localizedString(_:comment:)(v33, v34)._object;
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSelectReasonTitle:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

    if (a3)
    {
      v38 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(a3).n128_u64[0];
    }
    else
    {
      v38 = 0;
    }
    objc_msgSend(v16, "setReportConcernExplanation:", v38, v37);

    v53._countAndFlagsBits = 0xD000000000000025;
    v53._object = (void *)0x80000001006A6000;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v55 = localizedString(_:comment:)(v53, v54)._object;
    v56 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setPrivacyNote:", v56, swift_bridgeObjectRelease(v55).n128_f64[0]);

    v57 = swift_allocObject(&unk_100755CB0, 32, 7);
    *(_QWORD *)(v57 + 16) = a4;
    *(_QWORD *)(v57 + 24) = a6;
    v96 = sub_1004794EC;
    v97 = v57;
    aBlock = _NSConcreteStackBlock;
    v93 = 1107296256;
    v52 = &unk_100755CC8;
  }
  else
  {
    swift_bridgeObjectRelease(a3);
    v39._countAndFlagsBits = 0xD00000000000001BLL;
    v39._object = (void *)0x80000001006A5F30;
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    v41 = localizedString(_:comment:)(v39, v40)._object;
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSelectReasonTitle:", v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

    v43._countAndFlagsBits = 0xD00000000000001ELL;
    v43._object = (void *)0x80000001006A5F50;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v45 = localizedString(_:comment:)(v43, v44)._object;
    v46 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSelectReasonSubtitle:", v46, swift_bridgeObjectRelease(v45).n128_f64[0]);

    v47._countAndFlagsBits = 0xD000000000000016;
    v47._object = (void *)0x80000001006A5F70;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v49 = localizedString(_:comment:)(v47, v48)._object;
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setPrivacyNote:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

    v51 = swift_allocObject(&unk_100755C60, 32, 7);
    *(_QWORD *)(v51 + 16) = a4;
    *(_QWORD *)(v51 + 24) = a6;
    v96 = sub_1004794C8;
    v97 = v51;
    aBlock = _NSConcreteStackBlock;
    v93 = 1107296256;
    v52 = &unk_100755C78;
  }
  v94 = sub_100478E78;
  v95 = v52;
  v58 = _Block_copy(&aBlock);
  swift_retain(a4);
  swift_retain(a6);
  objc_msgSend(v16, "setCompletion:", v58, swift_release().n128_f64[0]);
  _Block_release(v58);
  v60 = v90;
  v59 = v91;
  v61 = *(_QWORD *)(v91 + 16);
  if (v61)
  {
    v85 = v16;
    v86 = v7;
    v87 = a4;
    v88 = a6;
    aBlock = (void **)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v61);
    v62 = v59 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    v63 = *(_QWORD *)(v60 + 72);
    v64 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    v65 = v89;
    v66 = v60;
    do
    {
      v64(v15, v62, v65);
      v67 = objc_msgSend(objc_allocWithZone((Class)ASReportAConcernReason), "init");
      ReportConcernReason.id.getter();
      v69 = v68;
      v70 = String._bridgeToObjectiveC()();
      objc_msgSend(v67, "setReasonID:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

      ReportConcernReason.name.getter();
      v72 = v71;
      v73 = String._bridgeToObjectiveC()();
      objc_msgSend(v67, "setName:", v73, swift_bridgeObjectRelease(v72).n128_f64[0]);

      ReportConcernReason.uppercaseName.getter();
      v75 = v74;
      v76 = String._bridgeToObjectiveC()();
      objc_msgSend(v67, "setUppercaseName:", v76, swift_bridgeObjectRelease(v75).n128_f64[0]);

      v77 = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v15, v65);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v77);
      v78 = aBlock[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v78);
      v79 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v67);
      specialized ContiguousArray._endMutation()(v79);
      v62 += v63;
      --v61;
    }
    while (v61);
    v80 = aBlock;
    swift_bridgeObjectRelease(v91);
    v16 = v85;
    v7 = v86;
  }
  else
  {
    swift_bridgeObjectRelease(v91);
    v80 = (void **)_swiftEmptyArrayStorage;
  }
  sub_100018B6C(0, &qword_1008255C8, off_100733268);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setReasons:", isa, swift_bridgeObjectRelease(v80).n128_f64[0]);

  v82 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "initWithConfiguration:", v16);
  objc_msgSend(v82, "setModalPresentationStyle:", 2);

  swift_release();
  swift_release();
  return v82;
}

double sub_100478560(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __n128 a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  double v29;
  uint64_t v30;
  void (*v31)(_QWORD *);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD *);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  double result;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  __n128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  __int128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93[64];
  _QWORD v94[3];
  uint64_t v95;
  id v96[4];
  void *v97;

  v78 = a7;
  v79 = a1;
  *(_QWORD *)&v80 = a4;
  v83 = a2;
  v84 = a3;
  v89 = type metadata accessor for OSLogger(0, a8);
  v82 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v81 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionRunner.Origin(0);
  v76 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  __chkstk_darwin(v11);
  v75 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  v86 = *(_QWORD *)(v14 - 8);
  v87 = v14;
  v15 = __chkstk_darwin(v14);
  v85 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.Encoding(0, v15);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for HttpTemplateSubstitutions(0, v18);
  v90 = *(_QWORD *)(v21 - 8);
  v91 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v25 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v26 = sub_100479614((uint64_t)_swiftEmptyArrayStorage);
  v27 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v28 = v23;
  v29 = HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v24, v25, v26, v27);
  v88 = a6;
  v30 = HttpTemplateAction.dictionaryBody.getter(v29);
  v97 = (void *)v30;
  if (a5)
  {
    if (v30)
    {
      v31 = sub_100478DD4(v96, 0x74726F706572, 0xE600000000000000);
      if (*v32)
      {
        v33 = sub_10000DAF8(&qword_1008255D0);
        v34 = swift_allocObject(v33, 40, 7);
        *(_OWORD *)(v34 + 16) = xmmword_100640720;
        v35 = sub_10000DAF8(&qword_10081B9F8);
        inited = swift_initStackObject(v35, &v92);
        *(_OWORD *)(inited + 16) = xmmword_100640600;
        *(_QWORD *)(inited + 32) = 1684957547;
        *(_QWORD *)(inited + 40) = 0xE400000000000000;
        *(_QWORD *)(inited + 48) = v83;
        v37 = v84;
        *(_QWORD *)(inited + 56) = v84;
        *(_QWORD *)(inited + 64) = 0x746E656D6D6F63;
        v38 = v80;
        *(_QWORD *)(inited + 72) = 0xE700000000000000;
        *(_QWORD *)(inited + 80) = v38;
        *(_QWORD *)(inited + 88) = a5;
        swift_bridgeObjectRetain(v37);
        swift_bridgeObjectRetain(a5);
        *(_QWORD *)(v34 + 32) = sub_10050A460(inited);
        v95 = sub_10000DAF8(&qword_1008255D8);
        v94[0] = v34;
        sub_100477DF8((uint64_t)v94, 0x736E7265636E6F63, 0xE800000000000000);
      }
      ((void (*)(id *, _QWORD))v31)(v96, 0);
    }
  }
  else if (v30)
  {
    v39 = sub_100478DD4(v96, 0x74726F706572, 0xE600000000000000);
    if (*v40)
    {
      v41 = sub_10000DAF8(&qword_1008255D0);
      v42 = swift_allocObject(v41, 40, 7);
      v80 = xmmword_100640720;
      *(_OWORD *)(v42 + 16) = xmmword_100640720;
      v43 = sub_10000DAF8(&qword_10081B9F8);
      v44 = swift_initStackObject(v43, v93);
      *(_OWORD *)(v44 + 16) = v80;
      *(_QWORD *)(v44 + 32) = 1684957547;
      *(_QWORD *)(v44 + 40) = 0xE400000000000000;
      *(_QWORD *)(v44 + 48) = v83;
      v45 = v84;
      *(_QWORD *)(v44 + 56) = v84;
      swift_bridgeObjectRetain(v45);
      *(_QWORD *)(v42 + 32) = sub_10050A460(v44);
      v95 = sub_10000DAF8(&qword_1008255D8);
      v94[0] = v42;
      sub_100477DF8((uint64_t)v94, 0x736E7265636E6F63, 0xE800000000000000);
    }
    ((void (*)(id *, _QWORD))v39)(v96, 0);
  }
  v46 = (void *)objc_opt_self(NSJSONSerialization);
  v96[0] = v97;
  v47 = sub_10000DAF8(&qword_1008255E0);
  v48 = Optional._bridgeToObjectiveC()(v47);
  v96[0] = 0;
  v49 = objc_msgSend(v46, "dataWithJSONObject:options:error:", v48, 0, v96);
  swift_unknownObjectRelease();
  v50 = v96[0];
  if (v49)
  {
    v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

    static String.Encoding.utf8.getter();
    v54 = String.init(data:encoding:)(v51, v53, v20);
    if (v55)
    {
      v56 = v54;
      v57 = v55;
      v58 = v85;
      static ActionMetrics.notInstrumented.getter(v54);
      v67 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v28, v56, v57, v58);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v87);
      swift_bridgeObjectRelease(v57);
      v68 = v79;
      if (UIResponder.nearestActionRunner.getter())
      {
        v96[3] = (id)sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
        v96[0] = v68;
        v70 = v75;
        v69 = v76;
        v71 = v77;
        (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, enum case for ActionRunner.Origin.action(_:), v77);
        v72 = v68;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v67, v96, v70, v78);
        sub_1002AB8AC(v51, v53);
        swift_release();
        v73 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v70, v71, v73);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v28, v91);
        sub_10001282C((uint64_t)v96);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v90 + 8))(v28, v91);
        sub_1002AB8AC(v51, v53);
        swift_release();
      }
      goto LABEL_18;
    }
    sub_1002AB8AC(v51, v53);
  }
  else
  {
    v59 = v50;
    v60 = _convertNSErrorToError(_:)(v50);

    swift_willThrow();
    swift_errorRelease(v60);
  }
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v61 = v89;
  sub_10000EFC4(v89, (uint64_t)qword_10086AB38);
  v62 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v63 = type metadata accessor for LogMessage(0);
  v64 = swift_allocObject(v62, ((*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) | 7);
  *(_OWORD *)(v64 + 16) = xmmword_100640720;
  LogMessage.init(stringLiteral:)(0xD000000000000023, 0x80000001006A6030);
  Logger.error(_:)(v64, v61, &protocol witness table for OSLogger);
  v65 = swift_bridgeObjectRelease(v64);
  (*(void (**)(char *, uint64_t, __n128))(v90 + 8))(v28, v91, v65);
LABEL_18:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v97).n128_u64[0];
  return result;
}

void (*sub_100478DD4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain(a3);
  v6[5] = sub_1004798E4(v6, a2, a3);
  return sub_100478E40;
}

void sub_100478E40(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

uint64_t sub_100478E78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = *(void (**)(void))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = v8;
  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    a4 = v10;
  }
  swift_retain(v6);
  v11 = a2;
  v7();
  swift_release(v6);
  swift_bridgeObjectRelease(v9);

  return swift_bridgeObjectRelease(a4);
}

uint64_t sub_100478F1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __n128 a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  __n128 v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[6];

  v59 = a7;
  v71 = a4;
  v72 = a5;
  v12 = type metadata accessor for OSLogger(0, a8);
  v64 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v63 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ActionRunner.Origin(0);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v56 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionMetrics(0, v15);
  v69 = *(_QWORD *)(v16 - 8);
  v70 = v16;
  v17 = __chkstk_darwin(v16);
  v65 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for HttpTemplateSubstitutions(0, v17);
  v67 = *(_QWORD *)(v19 - 8);
  v68 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v23 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v24 = sub_100479614((uint64_t)_swiftEmptyArrayStorage);
  v25 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v26.n128_f64[0] = HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v22, v23, v24, v25);
  v66 = a6;
  v27 = HttpTemplateAction.parameters.getter(v26);
  v28 = v27;
  v29 = *(_QWORD *)(v27 + 16);
  if (v29)
  {
    v61 = a1;
    v62 = v12;
    v30 = *(_QWORD *)(type metadata accessor for HttpTemplateParameter(0) - 8);
    v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v60 = v28;
    v32 = v28 + v31;
    v33 = *(_QWORD *)(v30 + 72);
    while (1)
    {
      v37 = ((uint64_t (*)(void))HttpTemplateParameter.key.getter)();
      v39 = v38;
      if (v37 == 0x64657463656C6573 && v38 == 0xEE006E6F73616552)
        break;
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, 0x64657463656C6573, 0xEE006E6F73616552, 0);
      v34 = swift_bridgeObjectRelease(v39);
      if ((v40 & 1) != 0)
        goto LABEL_4;
      if (!v72)
        goto LABEL_6;
      v41 = HttpTemplateParameter.key.getter(v34);
      v43 = v42;
      if (v41 == 0x74616E616C707865 && v42 == 0xEB000000006E6F69)
      {
        v34 = swift_bridgeObjectRelease(0xEB000000006E6F69);
      }
      else
      {
        v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, 0x74616E616C707865, 0xEB000000006E6F69, 0);
        v34 = swift_bridgeObjectRelease(v43);
        if ((v44 & 1) == 0)
          goto LABEL_6;
      }
      v35 = v71;
      v36 = v72;
LABEL_5:
      HttpTemplateSubstitutions.setParameter(value:for:)(v35, v36, v32, v34);
LABEL_6:
      v32 += v33;
      if (!--v29)
      {
        swift_bridgeObjectRelease(v60);
        a1 = v61;
        goto LABEL_18;
      }
    }
    v34 = swift_bridgeObjectRelease(0xEE006E6F73616552);
LABEL_4:
    v35 = a2;
    v36 = a3;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease(v27);
LABEL_18:
  v46 = v65;
  static ActionMetrics.notInstrumented.getter(v45);
  v47 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v21, 0, 0, v46);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v70);
  if (UIResponder.nearestActionRunner.getter())
  {
    v73[3] = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    v73[0] = a1;
    v48 = v57;
    v49 = v56;
    v50 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for ActionRunner.Origin.action(_:), v58);
    v51 = a1;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v47, v73, v49, v59);
    swift_release();
    v52 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v49, v50, v52);
    sub_10001282C((uint64_t)v73);
  }
  else
  {
    v53 = swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v67 + 8))(v21, v68, v53);
}

uint64_t sub_1004794C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  uint64_t v6;

  return sub_100478F1C(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), a6);
}

uint64_t sub_1004794D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004794E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1004794EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  uint64_t v6;

  return sub_100478560(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), a6);
}

unint64_t sub_1004794F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DAF8(&qword_1008154D8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_10047973C(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100479614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000DAF8(&qword_100815498);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100479BF4(v7, (uint64_t)&v16);
    v8 = v16;
    v9 = v17;
    result = sub_10047973C(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10004EA50(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10047973C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1004797A0(a1, a2, v5);
}

unint64_t sub_1004797A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void (*sub_1004798E4(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain(a3);
  v7[9] = sub_100479B2C(v7);
  v7[10] = sub_1004799C4(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100479974;
}

void sub_100479974(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0);
  free(v1);
}

void (*sub_1004799C4(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_10057E9FC(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_100479AF0;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1001FD060();
      goto LABEL_7;
    }
    sub_1001F7164(v16, a4 & 1);
    v20 = sub_10057E9FC(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100479AF0(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_100479B58(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease(*v1);
  free(v1);
}

uint64_t (*sub_100479B2C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_100479B4C;
}

uint64_t sub_100479B4C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

double sub_100479B58(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  double result;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1001FABDC(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain(a6);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
    sub_1001F86E4(a4, *a3);
  }
  *(_QWORD *)&result = swift_bridgeObjectRetain(v8).n128_u64[0];
  return result;
}

uint64_t sub_100479BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_1008255E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100479C44(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *Strong;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t result;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t (*v68)(char *, char *, unint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD, unint64_t);
  char v72;
  void (*v73)(char *, unint64_t);
  char *v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  void *v79;
  id v80;
  char *v81;
  uint64_t v82;
  char *v83;
  void (*v84)(uint64_t, char *, unint64_t);
  char *v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  char v96;
  __n128 v97;
  uint64_t v98;
  int v99;
  int64_t v100;
  __n128 v101;
  __n128 v102;
  void (*v103)(uint64_t, unint64_t, __n128);
  char *v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  int64_t v123;
  __n128 v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  uint64_t v139;
  double v140;
  char *v141;
  uint64_t v142;
  void (*v143)(char *, char *, unint64_t);
  int64_t v144;
  unint64_t v145;
  unint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  void *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  _QWORD aBlock[7];

  v155 = a2;
  v159 = a1;
  v3 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v3);
  v151 = (uint64_t)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_100825650);
  __chkstk_darwin(v5);
  v153 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NavigationTab(0);
  v160 = *(char **)(v7 - 8);
  v8 = *((_QWORD *)v160 + 8);
  __chkstk_darwin(v7);
  v150 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v158 = (char *)&v142 - v10;
  __chkstk_darwin(v11);
  v149 = (char *)&v142 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v142 - v14;
  __chkstk_darwin(v16);
  v156 = (char *)&v142 - v17;
  __chkstk_darwin(v18);
  v154 = (char *)&v142 - v19;
  v20 = sub_10000DAF8((uint64_t *)&unk_100828370);
  __chkstk_darwin(v20);
  v148 = (char *)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v142 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v142 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v142 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v142 - v32;
  v152 = v2;
  v157 = &v2[OBJC_IVAR____TtC20ProductPageExtension29TabChangeActionImplementation_rootTabBarController];
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension29TabChangeActionImplementation_rootTabBarController]);
  v35 = objc_msgSend(Strong, "tabBar");

  v36 = objc_msgSend(v35, "items");
  if (!v36)
    goto LABEL_12;
  v37 = sub_100018B6C(0, &qword_100810E68, UITabBarItem_ptr);
  v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

  if ((Array.isNotEmpty.getter(v38, v37) & 1) == 0)
  {
    swift_bridgeObjectRelease(v38);
LABEL_12:
    sub_10000DAF8(&qword_100808570);
    v50 = v158;
    v51 = ((uint64_t (*)(void))TabChangeAction.navigationTab.getter)();
    v52 = NavigationTab.rawValue.getter(v51);
    v54 = v53;
    (*((void (**)(char *, uint64_t))v160 + 1))(v50, v7);
    v55 = sub_10047B2E8();
    v56 = swift_allocError(&type metadata for TabChangeActionImplementation.ImplementationError, v55, 0, 0);
    *v57 = v52;
    v57[1] = v54;
    return Promise.__allocating_init(error:)(v56);
  }
  v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v160 + 7);
  v146 = v7;
  v39(v33, 1, 1, v7);
  v40 = (void *)swift_unknownObjectUnownedLoadStrong(v157);
  v41 = objc_msgSend(v40, "selectedIndex");

  v147 = v33;
  v145 = (unint64_t)v38 >> 62;
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v114 = v38;
    else
      v114 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v38);
    v42 = _CocoaArrayWrapper.endIndex.getter(v114);
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v42 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v43 = (id)swift_unknownObjectUnownedLoadStrong(v157);
  v44 = (unint64_t)objc_msgSend(v43, "selectedIndex");

  if ((uint64_t)v41 < v42)
  {
    v45 = (uint64_t)v156;
    if ((v38 & 0xC000000000000001) == 0)
    {
      if ((v44 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v44 < *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v46 = *(id *)(v38 + 8 * v44 + 32);
LABEL_10:
        v47 = v46;
        v48 = objc_msgSend(v46, "tag");

        NavigationTab.init(intValue:)(v48);
        v44 = v146;
        v49 = (uint64_t)v147;
        goto LABEL_15;
      }
      __break(1u);
      goto LABEL_59;
    }
    v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v38);
    goto LABEL_10;
  }
  NavigationTab.init(intValue:)(v44);
  v30 = v27;
  v44 = v146;
  v49 = (uint64_t)v147;
  v45 = (uint64_t)v156;
LABEL_15:
  sub_100010F2C(v49, (uint64_t *)&unk_100828370);
  sub_10013FCF0((uint64_t)v30, v49);
  sub_10047B2A0(v49, (uint64_t)v24);
  v30 = v160;
  v43 = (id)*((_QWORD *)v160 + 6);
  if (((unsigned int (*)(char *, uint64_t, unint64_t))v43)(v24, 1, v44) == 1)
  {
    swift_bridgeObjectRelease(v38);
    sub_100010F2C((uint64_t)v24, (uint64_t *)&unk_100828370);
    v59 = sub_10000DAF8(&qword_100808570);
    v60 = v158;
    v61 = TabChangeAction.navigationTab.getter(v59);
    v62 = NavigationTab.rawValue.getter(v61);
    v64 = v63;
    (*((void (**)(char *, unint64_t))v30 + 1))(v60, v44);
    v65 = sub_10047B2E8();
    v66 = swift_allocError(&type metadata for TabChangeActionImplementation.ImplementationError, v65, 0, 0);
    *v67 = v62;
    v67[1] = v64;
    v30 = (char *)Promise.__allocating_init(error:)(v66);
    sub_100010F2C(v49, (uint64_t *)&unk_100828370);
    return (uint64_t)v30;
  }
  v144 = v38;
  v68 = (uint64_t (*)(char *, char *, unint64_t))*((_QWORD *)v30 + 4);
  v27 = v154;
  v69 = v68(v154, v24, v44);
  TabChangeAction.navigationTab.getter(v69);
  v70 = (*((uint64_t (**)(char *, unint64_t))v30 + 11))(v15, v44);
  v143 = (void (*)(char *, char *, unint64_t))v68;
  if ((_DWORD)v70 != enum case for NavigationTab.infer(_:))
  {
    v24 = v158;
    if ((_DWORD)v70 == enum case for NavigationTab.selected(_:))
    {
      (*((void (**)(uint64_t, char *, unint64_t))v30 + 2))(v45, v27, v44);
    }
    else
    {
      TabChangeAction.navigationTab.getter(v70);
      (*((void (**)(char *, unint64_t))v30 + 1))(v15, v44);
    }
    goto LABEL_37;
  }
  v71 = (void (*)(char *, _QWORD, unint64_t))*((_QWORD *)v30 + 13);
  v24 = v158;
  v71(v158, enum case for NavigationTab.search(_:), v44);
  v72 = static NavigationTab.== infix(_:_:)(v27, v24);
  v73 = (void (*)(char *, unint64_t))*((_QWORD *)v30 + 1);
  v73(v24, v44);
  v74 = v150;
  (*((void (**)(char *, char *, unint64_t))v30 + 2))(v150, v27, v44);
  if ((v72 & 1) != 0)
  {
    v73(v74, v44);
  }
  else
  {
    v71(v24, enum case for NavigationTab.loading(_:), v44);
    v75 = static NavigationTab.== infix(_:_:)(v74, v24);
    v73(v24, v44);
    v73(v74, v44);
    if ((v75 & 1) == 0)
    {
      v85 = v149;
      v71(v149, enum case for NavigationTab.selected(_:), v44);
      v45 = (uint64_t)v156;
      v143(v156, v85, v44);
      goto LABEL_37;
    }
  }
  v45 = (uint64_t)v156;
  if (v145)
  {
    v38 = v144;
    if (v144 < 0)
      v77 = v144;
    else
      v77 = v144 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v144);
    v76 = _CocoaArrayWrapper.endIndex.getter(v77);
  }
  else
  {
    v38 = v144;
    v76 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v144);
  }
  if (!v76)
  {
LABEL_75:
    swift_bridgeObjectRelease(v38);
    __break(1u);
    goto LABEL_76;
  }
  if ((v38 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_61;
    }
    v78 = *(id *)(v38 + 32);
    goto LABEL_34;
  }
LABEL_59:
  v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
LABEL_34:
  v79 = v78;
  v80 = objc_msgSend(v78, "tag", swift_bridgeObjectRelease(v38).n128_f64[0]);
  v81 = v148;
  NavigationTab.init(intValue:)(v80);

  v82 = ((uint64_t (*)(char *, uint64_t, unint64_t))v43)(v81, 1, v44);
  if ((_DWORD)v82 == 1)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v83 = v149;
  v84 = (void (*)(uint64_t, char *, unint64_t))v143;
  v143(v149, v81, v44);
  v84(v45, v83, v44);
LABEL_37:
  type metadata accessor for MetricsActivity(0);
  static MetricsActivity.current.getter(v86);
  v87 = NavigationTab.pageContext.getter();
  v89 = v88;
  dispatch thunk of MetricsActivity.changeContext(_:)(v87);
  swift_release();
  swift_bridgeObjectRelease(v89);
  v90 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v74 = (char *)*((_QWORD *)v30 + 2);
  ((void (*)(char *, uint64_t, unint64_t))v74)(v24, v45, v44);
  v91 = (uint64_t)v153;
  StoreTab.Identifier.init(navigationTab:)(v24);
  sub_1005FB608(v91);

  v92 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
  BaseObjectGraph.optional<A>(_:)(aBlock, v92, v92);
  v93 = (void *)aBlock[0];
  if (aBlock[0])
  {
    dispatch thunk of AppStoreOnDeviceRecommendationsManager.loadInferences(for:)(v45);

  }
  v94 = sub_10000DAF8(&qword_100808570);
  v30 = (char *)Promise.__allocating_init()(v94);
  v95 = (void *)swift_unknownObjectUnownedLoadStrong(v157);
  v43 = objc_msgSend(v95, "presentedViewController");

  if (!v43)
    goto LABEL_42;
  if ((objc_msgSend(v43, "isBeingDismissed") & 1) != 0)
  {

LABEL_42:
    v96 = TabChangeAction.popToRoot.getter();
    v98 = TabChangeAction.actions.getter(v97);
    v99 = v96 & 1;
    v100 = v144;
    sub_10047A9CC(v45, v144, v99, v98, v155);
    swift_bridgeObjectRelease(v100);
    v101 = swift_bridgeObjectRelease(v98);
    Promise.pipe(to:)(v30, v101);
    v102 = swift_release();
    v103 = (void (*)(uint64_t, unint64_t, __n128))*((_QWORD *)v160 + 1);
    v103(v45, v44, v102);
    v104 = v27;
LABEL_72:
    ((void (*)(char *, unint64_t))v103)(v104, v44);
    sub_100010F2C((uint64_t)v147, (uint64_t *)&unk_100828370);
    return (uint64_t)v30;
  }
  v82 = type metadata accessor for ASKBagContract(0);
  v27 = *(char **)(v155 + qword_10086B3D8);
  if (v27)
  {
    v105 = type metadata accessor for ArticleContainerViewController();
    v76 = swift_dynamicCastClass(v43, v105);
    v106 = swift_retain(v27);
    v38 = TabChangeAction.actions.getter(v106);
    if (!((unint64_t)v38 >> 62))
    {
      if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_46:
        if ((v38 & 0xC000000000000001) != 0)
        {
          v107 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
          goto LABEL_49;
        }
        if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v107 = *(_QWORD *)(v38 + 32);
          swift_retain(v107);
LABEL_49:
          swift_bridgeObjectRelease(v38);
          v108 = type metadata accessor for FlowAction(0);
          if (swift_dynamicCastClass(v107, v108))
          {
            v158 = v74;
            v109 = v76;
            v110 = v27;
            v111 = v151;
            FlowAction.pageUrl.getter();
            v112 = v111;
            v27 = v110;
            v76 = v109;
            v74 = v158;
            swift_release();
            v45 = (uint64_t)v156;
            goto LABEL_67;
          }
          swift_release();
          v112 = v151;
          v45 = (uint64_t)v156;
LABEL_66:
          v116 = type metadata accessor for URL(0, v113);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v112, 1, 1, v116);
LABEL_67:
          v117 = static ResilientDeepLinkController.preventDismissingArticlesForFlowUrl(_:bag:)(v112, v27);
          if (v76 && (v117 & 1) != 0)
          {
            v118 = TabChangeAction.popToRoot.getter();
            v120 = v45;
            v121 = TabChangeAction.actions.getter(v119);
            v122 = v118 & 1;
            v123 = v144;
            sub_10047A9CC(v120, v144, v122, v121, v155);
            swift_bridgeObjectRelease(v123);
            v124 = swift_bridgeObjectRelease(v121);
            Promise.pipe(to:)(v30, v124);

            swift_release();
            swift_release();
            v125 = v160;
          }
          else
          {
            v157 = (char *)swift_unknownObjectUnownedLoadStrong(v157);
            ((void (*)(char *, uint64_t, unint64_t))v74)(v24, v45, v44);
            v158 = v27;
            v125 = v160;
            v126 = v160[80];
            v127 = (v126 + 24) & ~v126;
            v128 = (v8 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
            v129 = (v128 + 15) & 0xFFFFFFFFFFFFFFF8;
            v130 = (v129 + 15) & 0xFFFFFFFFFFFFFFF8;
            v131 = (v130 + 15) & 0xFFFFFFFFFFFFFFF8;
            v132 = swift_allocObject(&unk_100755D00, v131 + 8, v126 | 7);
            v133 = v24;
            v134 = v152;
            *(_QWORD *)(v132 + 16) = v152;
            v143((char *)(v132 + v127), v133, v146);
            *(_QWORD *)(v132 + v128) = v144;
            v135 = v159;
            *(_QWORD *)(v132 + v129) = v159;
            v136 = v155;
            *(_QWORD *)(v132 + v130) = v155;
            *(_QWORD *)(v132 + v131) = v30;
            v44 = v146;
            aBlock[4] = sub_10047B3F4;
            aBlock[5] = v132;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1000924A0;
            aBlock[3] = &unk_100755D18;
            v137 = _Block_copy(aBlock);
            v138 = v134;
            v139 = v135;
            v120 = (uint64_t)v156;
            swift_retain(v139);
            swift_retain(v136);
            swift_retain(v30);
            *(_QWORD *)&v140 = swift_release().n128_u64[0];
            v141 = v157;
            objc_msgSend(v157, "dismissViewControllerAnimated:completion:", 1, v137, v140);
            _Block_release(v137);

            swift_release();
          }
          sub_100010F2C(v151, (uint64_t *)&unk_1008092A0);
          v103 = (void (*)(uint64_t, unint64_t, __n128))*((_QWORD *)v125 + 1);
          ((void (*)(uint64_t, unint64_t))v103)(v120, v44);
          v104 = v154;
          goto LABEL_72;
        }
        __break(1u);
        goto LABEL_75;
      }
LABEL_65:
      swift_bridgeObjectRelease(v38);
      v112 = v151;
      goto LABEL_66;
    }
LABEL_61:
    if (v38 < 0)
      v115 = v38;
    else
      v115 = v38 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v115))
      goto LABEL_46;
    goto LABEL_65;
  }
LABEL_77:
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v82, v82);
  __break(1u);
  return result;
}

double sub_10047A940(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v10;
  uint64_t v11;
  __n128 v12;
  double result;

  v10 = TabChangeAction.popToRoot.getter();
  v11 = TabChangeAction.actions.getter();
  sub_10047A9CC(a2, a3, v10 & 1, v11, a5);
  v12 = swift_bridgeObjectRelease(v11);
  Promise.pipe(to:)(a6, v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10047A9CC(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  void *Strong;
  void *v33;
  void *v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v77;
  uint64_t v78;
  char *v79;
  int v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  id v97;

  v86 = a5;
  v82 = a4;
  v80 = a3;
  v95 = a2;
  v7 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v7);
  v84 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v79 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0, v10);
  __chkstk_darwin(v11);
  v81 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10000DAF8(&qword_100825630);
  __chkstk_darwin(v93);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100828370);
  __chkstk_darwin(v15);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v77 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v77 - v22;
  v24 = type metadata accessor for NavigationTab(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v25 + 104))(v28, enum case for NavigationTab.loading(_:), v24, v26);
  v94 = a1;
  v29 = static NavigationTab.== infix(_:_:)(a1, v28);
  v96 = v25;
  v30 = *(void (**)(char *, uint64_t))(v25 + 8);
  v87 = v28;
  v90 = v30;
  v30(v28, v24);
  v31 = (void *)(v5 + OBJC_IVAR____TtC20ProductPageExtension29TabChangeActionImplementation_rootTabBarController);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v5 + OBJC_IVAR____TtC20ProductPageExtension29TabChangeActionImplementation_rootTabBarController);
  v33 = Strong;
  if ((v29 & 1) != 0)
  {
    v34 = *(void **)(v5
                   + OBJC_IVAR____TtC20ProductPageExtension29TabChangeActionImplementation_loadingNavigationController);
    objc_msgSend(Strong, "setTransientViewController:animated:", v34, 0);

    sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "setViewControllers:", isa);

    goto LABEL_28;
  }
  v78 = v5;
  objc_msgSend(Strong, "setTransientViewController:animated:", 0, 0);

  v36 = v95;
  if (v95 >> 62)
    goto LABEL_22;
  v37 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v95);
  if (v37)
  {
LABEL_5:
    v77 = v31;
    v38 = 0;
    v91 = v37;
    v92 = v36 & 0xC000000000000001;
    v89 = v23;
    while (1)
    {
      if (v92)
      {
        v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v36);
        v42 = v38 + 1;
        if (__OFADD__(v38, 1))
          goto LABEL_21;
      }
      else
      {
        v41 = *(id *)(v36 + 8 * v38 + 32);
        v42 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
LABEL_21:
          __break(1u);
LABEL_22:
          if (v36 < 0)
            v52 = v36;
          else
            v52 = v36 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v36);
          v37 = _CocoaArrayWrapper.endIndex.getter(v52);
          if (!v37)
            goto LABEL_26;
          goto LABEL_5;
        }
      }
      v97 = v41;
      NavigationTab.init(intValue:)(objc_msgSend(v41, "tag", v77));
      v43 = (uint64_t)v14;
      v44 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v20, v94, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v20, 0, 1, v24);
      v31 = (void *)(v43 + *(int *)(v93 + 48));
      sub_10047B2A0((uint64_t)v23, v43);
      sub_10047B2A0((uint64_t)v20, (uint64_t)v31);
      v45 = (uint64_t)v23;
      v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
      v14 = (char *)v43;
      if (v46(v43, 1, v24) == 1)
        break;
      sub_10047B2A0(v43, (uint64_t)v17);
      if (v46((uint64_t)v31, 1, v24) == 1)
      {
        sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_100828370);
        v23 = v89;
        sub_100010F2C((uint64_t)v89, (uint64_t *)&unk_100828370);
        v90(v17, v24);
LABEL_7:
        sub_100010F2C(v43, &qword_100825630);
        v40 = v97;
        goto LABEL_8;
      }
      v47 = v87;
      (*(void (**)(char *, void *, uint64_t))(v96 + 32))(v87, v31, v24);
      v48 = sub_10000E720(&qword_100810E70, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationTab, (uint64_t)&protocol conformance descriptor for NavigationTab);
      v88 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v47, v24, v48);
      v49 = v47;
      v50 = v90;
      v90(v49, v24);
      v31 = &unk_100828370;
      sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_100828370);
      v23 = v89;
      sub_100010F2C((uint64_t)v89, (uint64_t *)&unk_100828370);
      v50(v17, v24);
      sub_100010F2C((uint64_t)v14, (uint64_t *)&unk_100828370);
      v40 = v97;
      if ((v88 & 1) != 0)
        goto LABEL_20;
LABEL_8:

      ++v38;
      v36 = v95;
      if (v42 == v91)
        goto LABEL_26;
    }
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_100828370);
    sub_100010F2C(v45, (uint64_t *)&unk_100828370);
    v39 = v46((uint64_t)v31, 1, v24);
    v23 = (char *)v45;
    if (v39 == 1)
    {
      sub_100010F2C(v43, (uint64_t *)&unk_100828370);
      v40 = v97;
LABEL_20:
      swift_bridgeObjectRelease(v95);
      v51 = (void *)swift_unknownObjectUnownedLoadStrong(v77);
      objc_msgSend(v51, "setSelectedIndex:", v38);

      goto LABEL_27;
    }
    goto LABEL_7;
  }
LABEL_26:
  swift_bridgeObjectRelease(v36);
LABEL_27:
  v5 = v78;
LABEL_28:
  v53 = (void *)swift_unknownObjectUnownedLoadStrong(v5 + OBJC_IVAR____TtC20ProductPageExtension29TabChangeActionImplementation_rootTabBarController);
  v54 = objc_msgSend(v53, "selectedViewController");

  v56 = v85;
  v55 = v86;
  v57 = v84;
  if (v54)
  {
    if ((v80 & 1) != 0)
    {
      v58 = objc_opt_self(UINavigationController);
      v59 = (void *)swift_dynamicCastObjCClass(v54, v58);
      if (v59)

    }
    v60 = v82;
    swift_bridgeObjectRetain(v82);
    v61 = v81;
    static ActionMetrics.notInstrumented.getter(v62);
    v63 = type metadata accessor for CompoundAction(0);
    swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
    v64 = CompoundAction.init(title:actions:presentationStyle:actionMetrics:)(0, 0, v60, 0, v61);
    swift_retain(v64);
    BaseObjectGraph.optional<A>(_:)(v57, v56, v56);
    v65 = v83;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(v57, 1, v56) == 1)
    {
      sub_100010F2C((uint64_t)v57, (uint64_t *)&unk_100809290);
      sub_10000DAF8(&qword_100808570);
      v66 = sub_10005ABBC();
      v67 = swift_allocError(&type metadata for GeneralActionImplementationError, v66, 0, 0);
      *v68 = 1;
      v69 = Promise.__allocating_init(error:)(v67);
    }
    else
    {
      v73 = (uint64_t)v79;
      (*(void (**)(char *, _QWORD *, uint64_t))(v65 + 32))(v79, v57, v56);
      v74 = sub_10032D848(v64, v55, v73);
      v75 = v65;
      v69 = v74;
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v56);
    }
    swift_release_n(v64, 2);

  }
  else
  {
    sub_10000DAF8(&qword_100808570);
    v70 = sub_10047B2E8();
    v71 = swift_allocError(&type metadata for TabChangeActionImplementation.ImplementationError, v70, 0, 0);
    *v72 = 0;
    v72[1] = 0;
    return Promise.__allocating_init(error:)(v71);
  }
  return v69;
}

id sub_10047B1C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TabChangeActionImplementation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TabChangeActionImplementation()
{
  return objc_opt_self(_TtC20ProductPageExtension29TabChangeActionImplementation);
}

uint64_t sub_10047B250()
{
  return sub_10000E720(&qword_100825628, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
}

uint64_t sub_10047B27C(uint64_t *a1, uint64_t a2)
{
  return sub_100479C44(*a1, a2);
}

uint64_t sub_10047B2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100828370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10047B2E8()
{
  unint64_t result;

  result = qword_100825638;
  if (!qword_100825638)
  {
    result = swift_getWitnessTable(&unk_1006643E4, &type metadata for TabChangeActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100825638);
  }
  return result;
}

uint64_t sub_10047B32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for NavigationTab(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v5);
}

double sub_10047B3F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for NavigationTab(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10047A940(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10047B45C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10047B46C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *initializeBufferWithCopyOfBuffer for TabChangeActionImplementation.ImplementationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for TabChangeActionImplementation.ImplementationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for TabChangeActionImplementation.ImplementationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabChangeActionImplementation.ImplementationError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TabChangeActionImplementation.ImplementationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_10047B5B4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_10047B5CC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TabChangeActionImplementation.ImplementationError()
{
  return &type metadata for TabChangeActionImplementation.ImplementationError;
}

id sub_10047B600(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  NSNumber v13;
  uint64_t v14;
  Class v15;

  v2 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v3 = sub_10000DAF8(&qword_1008091A0);
  v4 = swift_allocObject(v3, 96, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100640600;
  v5 = objc_msgSend(a1, "colorWithAlphaComponent:", 0.0);
  v6 = objc_msgSend(v5, "CGColor");

  type metadata accessor for CGColor(0);
  v8 = v7;
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 32) = v6;
  v9 = objc_msgSend(a1, "CGColor");
  *(_QWORD *)(v4 + 88) = v8;
  *(_QWORD *)(v4 + 64) = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setColors:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v11 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1006423E0;
  sub_1001A15DC();
  *(NSNumber *)(v12 + 32) = NSNumber.init(integerLiteral:)(0);
  v13.super.super.isa = NSNumber.init(floatLiteral:)(0.8).super.super.isa;
  *(NSNumber *)(v12 + 40) = v13;
  specialized Array._endMutation()(v13.super.super.isa);
  v14 = v12;
  v15 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setLocations:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v2, "setStartPoint:", 0.0, 0.5);
  objc_msgSend(v2, "setEndPoint:", 1.0, 0.5);
  return v2;
}

id sub_10047B7E4(void *a1, char a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  NSNumber v16;
  uint64_t v17;
  Class v18;
  double v19;

  v4 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v5 = sub_10000DAF8(&qword_1008091A0);
  v6 = swift_allocObject(v5, 96, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100640600;
  v7 = 0.0;
  v8 = objc_msgSend(a1, "colorWithAlphaComponent:", 0.0);
  v9 = objc_msgSend(v8, "CGColor");

  type metadata accessor for CGColor(0);
  v11 = v10;
  *(_QWORD *)(v6 + 56) = v10;
  *(_QWORD *)(v6 + 32) = v9;
  v12 = objc_msgSend(a1, "CGColor");
  *(_QWORD *)(v6 + 88) = v11;
  *(_QWORD *)(v6 + 64) = v12;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setColors:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v14 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1006423E0;
  sub_1001A15DC();
  *(NSNumber *)(v15 + 32) = NSNumber.init(integerLiteral:)(0);
  v16.super.super.isa = NSNumber.init(floatLiteral:)(0.8).super.super.isa;
  *(NSNumber *)(v15 + 40) = v16;
  specialized Array._endMutation()(v16.super.super.isa);
  v17 = v15;
  v18 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setLocations:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

  if ((a2 & 1) != 0)
    v19 = 1.0;
  else
    v19 = 0.0;
  if ((a2 & 1) == 0)
    v7 = 1.0;
  objc_msgSend(v4, "setStartPoint:", v19, 0.5);
  objc_msgSend(v4, "setEndPoint:", v7, 0.5);
  return v4;
}

char *sub_10047B9EC(_OWORD *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  objc_class *v6;
  char *v7;
  id v8;
  double left;
  double bottom;
  double right;
  id v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  objc_super v18;
  objc_super v19;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_contentView] = 0;
  sub_100097590(a1, &v1[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_layoutMetrics]);
  v3 = objc_allocWithZone((Class)UIScrollView);
  v4 = v1;
  v5 = objc_msgSend(v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_contentScrollView] = v5;
  sub_10000EF80((uint64_t)(a1 + 5), (uint64_t)v20);
  sub_10000EF80((uint64_t)a1 + 40, (uint64_t)&v21);
  sub_10000EF80((uint64_t)a1 + 120, (uint64_t)&v22);
  v6 = (objc_class *)type metadata accessor for OnboardingTrayView();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension18OnboardingTrayView_itemViewLayoutItems] = _swiftEmptyArrayStorage;
  sub_10047C7F8(v20, &v7[OBJC_IVAR____TtC20ProductPageExtension18OnboardingTrayView_layoutMetrics]);
  v19.receiver = v7;
  v19.super_class = v6;
  v8 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v8, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  sub_10047C834(v20);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayView] = v8;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayBackgroundView] = v12;

  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for OnboardingPageView();
  v13 = (char *)objc_msgSendSuper2(&v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v14 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_contentScrollView];
  objc_msgSend(v14, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(v14, "setShowsVerticalScrollIndicator:", 0);
  objc_msgSend(v14, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v13, "addSubview:", v14);
  v15 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayBackgroundView];
  objc_msgSend(v13, "addSubview:", v15);
  v16 = objc_msgSend(v15, "contentView");
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayView]);

  sub_1000975CC(a1);
  return v13;
}

void sub_10047BCFC(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  _BYTE v17[24];
  char v18[24];

  v2 = v1;
  v4 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayView];
  v5 = &v4[OBJC_IVAR____TtC20ProductPageExtension18OnboardingTrayView_itemViewLayoutItems];
  v6 = swift_beginAccess(&v4[OBJC_IVAR____TtC20ProductPageExtension18OnboardingTrayView_itemViewLayoutItems], v18, 0, 0).n128_u64[0];
  v7 = *(_QWORD *)v5;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (!v8)
  {
LABEL_10:
    objc_msgSend(v2, "setNeedsLayout", *(double *)&v6);
    return;
  }
  sub_100018B6C(0, (unint64_t *)&qword_1008119A0, NSObject_ptr);
  swift_bridgeObjectRetain(v7);
  v9 = 32;
  while ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v7 + v9)) & 1) == 0)
  {
    v9 += 88;
    if (!--v8)
    {
      v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease(v7);
  swift_beginAccess(v5, v17, 33, 0);
  __chkstk_darwin(v10);
  sub_1005E5760(v5, (uint64_t (*)(uint64_t, uint64_t *))sub_10047C868);
  v12 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v12 >= v11)
  {
    sub_1005E5984(v11, v12);
    swift_endAccess(v17);
    v13 = objc_msgSend(a1, "superview");
    if (v13)
    {
      v14 = v13;
      sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
      v15 = v4;
      v16 = v14;
      LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

      if ((v14 & 1) != 0)
        objc_msgSend(a1, "removeFromSuperview");
    }
    goto LABEL_10;
  }
  __break(1u);
}

id sub_10047BECC()
{
  char *v0;
  objc_class *v1;
  void *v2;
  unsigned __int8 v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat MaxY;
  void *v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  CGFloat MinX;
  CGFloat MinY;
  double Width;
  double Height;
  CGFloat v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  id v35;
  CGFloat v37;
  CGFloat v38;
  CGFloat rect;
  objc_super v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  v1 = (objc_class *)type metadata accessor for OnboardingPageView();
  v40.receiver = v0;
  v40.super_class = v1;
  objc_msgSendSuper2(&v40, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayView];
  v3 = objc_msgSend(v2, "isHidden");
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  v8 = 0.0;
  if ((v3 & 1) == 0)
  {
    v9 = v2;
    LayoutMarginsAware<>.layoutFrame.getter(v1);
    objc_msgSend(v9, "measurementsWithFitting:in:", v0, v10, v11);
    v7 = v12;
    v8 = v13;

    v41.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    v5 = floor(CGRectGetMidX(v41) + v7 * -0.5);
    v42.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    MaxY = CGRectGetMaxY(v42);
    v6 = MaxY - v8;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayBackgroundView], "setFrame:", v5, MaxY - v8, v7, v8);
    objc_msgSend(v9, "setFrame:", 0.0, 0.0, v7, v8);
  }
  objc_msgSend(v0, "bounds");
  v15 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_contentScrollView];
  objc_msgSend(v15, "setFrame:");
  v16 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_contentView];
  v17 = 0.0;
  v18 = 0.0;
  if (v16)
  {
    rect = v6;
    v19 = v16;
    v43.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    MinX = CGRectGetMinX(v43);
    v44.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    MinY = CGRectGetMinY(v44);
    v45.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
    Width = CGRectGetWidth(v45);
    v37 = v5;
    v38 = v7;
    if ((v3 & 1) != 0)
    {
      v46.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
      Height = CGRectGetHeight(v46);
    }
    else
    {
      v47.origin.x = v5;
      v47.origin.y = rect;
      v47.size.width = v7;
      v47.size.height = v8;
      Height = CGRectGetMinY(v47);
    }
    v24 = Height;
    objc_msgSend(v19, "measurementsWithFitting:in:", v0, Width, Height);
    v17 = v25;
    v4 = v26;
    v48.origin.x = MinX;
    v48.origin.y = MinY;
    v48.size.width = Width;
    v48.size.height = v24;
    v27 = floor(CGRectGetMidX(v48) + v17 * -0.5);
    v49.origin.x = MinX;
    v49.origin.y = MinY;
    v49.size.width = Width;
    v49.size.height = v24;
    v28 = CGRectGetMinY(v49);
    v29 = LayoutMarginsAware<>.layoutFrame.getter(v1);
    objc_msgSend(v19, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v0, v29));
    if ((v3 & 1) != 0)
      goto LABEL_9;
    v50.origin.x = v27;
    v50.origin.y = v28;
    v50.size.width = v17;
    v50.size.height = v4;
    v30 = CGRectGetMaxY(v50);
    v51.origin.x = v37;
    v51.size.width = v38;
    v51.origin.y = rect;
    v51.size.height = v8;
    if (CGRectGetMinY(v51) > v30)
    {
LABEL_9:
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayBackgroundView], "setEffect:", 0);
      v18 = 0.0;
    }
    else
    {
      v52.origin.x = v37;
      v52.origin.y = rect;
      v52.size.width = v38;
      v52.size.height = v8;
      v31 = CGRectGetHeight(v52);
      v53.origin.x = v27;
      v53.origin.y = v28;
      v53.size.width = v17;
      v53.size.height = v4;
      v32 = CGRectGetMaxY(v53);
      v54.origin.x = v37;
      v54.origin.y = rect;
      v54.size.width = v38;
      v54.size.height = v8;
      v33 = v32 - CGRectGetMinY(v54);
      if (v33 >= v31)
        v18 = v31;
      else
        v18 = v33;
      v34 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension18OnboardingPageView_trayBackgroundView];
      v35 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 4);
      objc_msgSend(v34, "setEffect:", v35);

    }
  }
  objc_msgSend(v15, "setContentSize:", v17, v4);
  objc_msgSend(v15, "setContentInset:", 0.0, 0.0, v18, 0.0);
  return objc_msgSend(v15, "setContentOffset:", 0.0, 0.0);
}

void sub_10047C2E8(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  int v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  objc_super v17;

  v2 = v1;
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for OnboardingPageView();
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersAccessibilityLayouts.getter(v4);

  if (!a1 || ((UITraitCollection.prefersAccessibilityLayouts.getter(v6) ^ v5) & 1) != 0)
    goto LABEL_7;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  v9 = objc_msgSend(a1, "preferredContentSizeCategory");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v15 = v13;
  if (v10 == v14 && v12 == v13)
  {

    swift_bridgeObjectRelease_n(v12, 2);
    return;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
LABEL_7:
    objc_msgSend(v2, "setNeedsLayout");
}

id sub_10047C4D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingPageView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for OnboardingPageView()
{
  return objc_opt_self(_TtC20ProductPageExtension18OnboardingPageView);
}

uint64_t destroy for OnboardingPageView.LayoutMetrics(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 5);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 10);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 15);
}

_OWORD *initializeWithCopy for OnboardingPageView.LayoutMetrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  return a1;
}

_QWORD *assignWithCopy for OnboardingPageView.LayoutMetrics(_QWORD *a1, _QWORD *a2)
{
  sub_10002D2D4(a1, a2);
  sub_10002D2D4(a1 + 5, a2 + 5);
  sub_10002D2D4(a1 + 10, a2 + 10);
  sub_10002D2D4(a1 + 15, a2 + 15);
  return a1;
}

uint64_t assignWithTake for OnboardingPageView.LayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingPageView.LayoutMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingPageView.LayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingPageView.LayoutMetrics()
{
  return &type metadata for OnboardingPageView.LayoutMetrics;
}

_OWORD *sub_10047C7F8(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for OnboardingTrayLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_10047C834(_QWORD *a1)
{
  destroy for OnboardingTrayLayout.Metrics(a1);
  return a1;
}

uint64_t sub_10047C868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005E50C4(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10047C8FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  _QWORD v36[4];
  char v37;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for PurchasesLoadingViewController();
  v35.receiver = v0;
  v35.super_class = v5;
  objc_msgSendSuper2(&v35, "viewDidLoad");
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    v8 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v10 = (void *)static UIColor.defaultBackground.getter(v8, v9);
    objc_msgSend(v7, "setBackgroundColor:", v10);

    sub_100020248(&qword_100825710, v11, (uint64_t (*)(uint64_t))type metadata accessor for PurchasesLoadingViewController, (uint64_t)&unk_1006644F8);
    v12 = swift_unknownObjectRetain(v1);
    v13 = dispatch thunk of PurchasesPresenter.view.setter(v12);
    v14 = dispatch thunk of BasePresenter.didLoad()(v13);
    static JULoadingViewController.PresentationContext.placeholder.getter(v14);
    v15 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v16 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v4, 0);
    v17 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController;
    v18 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController];
    v19 = v18;
    static ViewControllerContainment.remove(_:)(v18);

    v20 = *(void **)&v1[v17];
    *(_QWORD *)&v1[v17] = v16;
    v21 = v16;

    v22 = *(void **)&v1[v17];
    v23 = v22;
    v24 = objc_msgSend(v1, "view");
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v24, "bounds");
      v27 = v26;
      v29 = v28;
      v31 = v30;
      v33 = v32;

      v36[0] = v27;
      v36[1] = v29;
      v36[2] = v31;
      v36[3] = v33;
      v37 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v22, v1, v36);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10047CBA0()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  objc_super v43;

  v43.receiver = v0;
  v43.super_class = (Class)type metadata accessor for PurchasesLoadingViewController();
  objc_msgSendSuper2(&v43, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v0, "view");
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v5, "bounds");
        v8 = v7;
        v10 = v9;
        v12 = v11;
        v14 = v13;

        objc_msgSend(v4, "setFrame:", v8, v10, v12, v14);
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  v15 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_familyPurchases];
  if (!v15)
    goto LABEL_9;
  v16 = v15;
  v17 = objc_msgSend(v16, "view");
  if (!v17)
    goto LABEL_16;
  v18 = v17;
  v19 = objc_msgSend(v0, "view");
  if (!v19)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20 = v19;
  objc_msgSend(v19, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  objc_msgSend(v18, "setFrame:", v22, v24, v26, v28);
LABEL_9:
  v29 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_loggedInUserPurchases];
  if (!v29)
    return;
  v30 = v29;
  v31 = objc_msgSend(v30, "view");
  if (!v31)
    goto LABEL_18;
  v32 = v31;
  v33 = objc_msgSend(v0, "view");
  if (!v33)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v34 = v33;
  objc_msgSend(v33, "bounds");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;

  objc_msgSend(v32, "setFrame:", v36, v38, v40, v42);
}

void sub_10047CDFC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  _QWORD v52[6];
  _QWORD v53[5];
  _QWORD v54[4];
  char v55;

  v1 = v0;
  v2 = type metadata accessor for Dependency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController;
  v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController];
  v8 = v7;
  static ViewControllerContainment.remove(_:)(v7);

  v9 = *(void **)&v1[v6];
  *(_QWORD *)&v1[v6] = 0;

  v10 = *(void **)&v1[v6];
  v11 = v10;
  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v12;
  objc_msgSend(v12, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v54[0] = v15;
  v54[1] = v17;
  v54[2] = v19;
  v54[3] = v21;
  v55 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v10, v1, v54);

  v22 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_loggedInUserPurchases;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_loggedInUserPurchases])
  {
    v23 = sub_10000DAF8((uint64_t *)&unk_1008103A0);
    v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_objectGraph];
    v25 = type metadata accessor for ObjectGraph(0);
    inject<A, B>(_:from:)(v23, v24, v23, v25);
    type metadata accessor for ASDPurchaseHistoryContext(0);
    v52[0] = 1;
    Dependency.init<A>(satisfying:with:)(v26, v52, v26);
    dispatch thunk of BaseObjectGraph.adding(dependency:)(v5);
    v27 = *(void (**)(char *, uint64_t))(v3 + 8);
    v27(v5, v2);
    LOBYTE(v52[0]) = 1;
    Dependency.init<A>(satisfying:with:)(&type metadata for Bool, v52, &type metadata for Bool);
    v28 = (void *)dispatch thunk of BaseObjectGraph.adding(dependency:)(v5);
    v29 = swift_release();
    ((void (*)(char *, uint64_t, __n128))v27)(v5, v2, v29);
    v30 = sub_100011B28(v28);
    v32 = v31;
    v33 = sub_100018B6C(0, (unint64_t *)&qword_10080AC60, ACAccountStore_ptr);
    swift_retain(v24);
    inject<A, B>(_:from:)(v33, v24, v33, v25);
    v34 = v52[5];
    sub_10000EF80((uint64_t)v53, (uint64_t)v52);
    v35 = type metadata accessor for PurchasesContentPresenter(0);
    swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
    v36 = swift_unknownObjectRetain(v30);
    v37 = PurchasesContentPresenter.init(objectGraph:accountStore:appStateController:familyMember:purchaseHistory:showMacOSCompatibleIOSApps:appleSilicon:)(v24, v34, v30, v32, 0, v52, 0, 0, v36);
    v38 = sub_100020248(&qword_1008103B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
    swift_retain(v37);
    v39 = sub_1005A60D4(v24, v37, v38, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000014, 0x80000001006A6260);
    v40 = objc_allocWithZone((Class)type metadata accessor for PurchasesViewController());
    v41 = sub_10038D734(v37, v39);
    v42 = *(void **)&v1[v22];
    *(_QWORD *)&v1[v22] = v41;

    v43 = *(void **)&v1[v22];
    if (v43)
    {
      v44 = v43;
      objc_msgSend(v44, "willMoveToParentViewController:", v1);
      objc_msgSend(v1, "addChildViewController:", v44);
      v45 = objc_msgSend(v1, "view");
      if (v45)
      {
        v46 = v45;
        v47 = objc_msgSend(v44, "view");
        if (v47)
        {
          v48 = v47;
          objc_msgSend(v46, "addSubview:", v47);

          objc_msgSend(v44, "didMoveToParentViewController:", v1);
          v49 = objc_msgSend(v44, "title");
          objc_msgSend(v1, "setTitle:", v49);

          v50 = objc_msgSend(v44, "collectionView");
          objc_msgSend(v1, "setContentScrollView:forEdge:", v50, 15);
          swift_unknownObjectRelease();
          swift_release();

          swift_release();
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
          return;
        }
        goto LABEL_11;
      }
LABEL_10:
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
}

void sub_10047D280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  _QWORD v46[4];
  char v47;

  v4 = v3;
  v8 = type metadata accessor for Bag(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController;
  v12 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController];
  v13 = v12;
  static ViewControllerContainment.remove(_:)(v12);

  v14 = *(void **)&v4[v11];
  *(_QWORD *)&v4[v11] = 0;

  v15 = *(void **)&v4[v11];
  v16 = v15;
  v17 = objc_msgSend(v4, "view");
  if (!v17)
  {
    __break(1u);
    goto LABEL_10;
  }
  v18 = v17;
  objc_msgSend(v17, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v46[0] = v20;
  v46[1] = v22;
  v46[2] = v24;
  v46[3] = v26;
  v47 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v15, v4, v46);

  v27 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_familyPurchases;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_familyPurchases])
    return;
  v28 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_objectGraph];
  v29 = type metadata accessor for ObjectGraph(0);
  swift_retain(v28);
  swift_bridgeObjectRetain(a3);
  inject<A, B>(_:from:)(v8, v28, v8, v29);
  v30 = type metadata accessor for FamilyPurchasesPresenter(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = FamilyPurchasesPresenter.init(objectGraph:familyPurchasesError:iCloudMemberAppleId:bag:)(v28, a1, a2, a3, v10);
  v32 = sub_100020248(&qword_100825708, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FamilyPurchasesPresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_retain(v31);
  v33 = sub_1005A60D4(v28, v31, v32, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, 0x80000001006A6240);
  v34 = objc_allocWithZone((Class)type metadata accessor for FamilyPurchasesViewController());
  v35 = sub_100035430(v31, v33);
  v36 = *(void **)&v4[v27];
  *(_QWORD *)&v4[v27] = v35;

  v37 = *(void **)&v4[v27];
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v38, "willMoveToParentViewController:", v4);
    objc_msgSend(v4, "addChildViewController:", v38);
    v39 = objc_msgSend(v4, "view");
    if (v39)
    {
      v40 = v39;
      v41 = objc_msgSend(v38, "view");
      if (v41)
      {
        v42 = v41;
        objc_msgSend(v40, "addSubview:", v41);

        objc_msgSend(v38, "didMoveToParentViewController:", v4);
        v43 = objc_msgSend(v38, "title");
        objc_msgSend(v4, "setTitle:", v43);

        v44 = objc_msgSend(v38, "collectionView");
        objc_msgSend(v4, "setContentScrollView:forEdge:", v44, 15);

        goto LABEL_7;
      }
LABEL_11:
      __break(1u);
      return;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_7:
  swift_release();
}

void sub_10047D5E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];
  char v27;

  v1 = v0;
  v2 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v26[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static JULoadingViewController.PresentationContext.placeholder.getter(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v7 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v4, 0);
  v8 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController;
  v9 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController];
  v10 = v9;
  static ViewControllerContainment.remove(_:)(v9);

  v11 = *(void **)&v1[v8];
  *(_QWORD *)&v1[v8] = v7;
  v12 = v7;

  v13 = *(void **)&v1[v8];
  v14 = v13;
  v15 = objc_msgSend(v1, "view");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "bounds");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    v26[0] = v18;
    v26[1] = v20;
    v26[2] = v22;
    v26[3] = v24;
    v27 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v13, v1, v26);

  }
  else
  {
    __break(1u);
  }
}

void sub_10047D73C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[4];
  char v18;

  v1 = OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController];
  v3 = v2;
  static ViewControllerContainment.remove(_:)(v2);

  v4 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  v5 = *(void **)&v0[v1];
  v16 = v5;
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v17[0] = v9;
    v17[1] = v11;
    v17[2] = v13;
    v17[3] = v15;
    v18 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v5, v0, v17);

  }
  else
  {
    __break(1u);
  }
}

id sub_10047D840()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PurchasesLoadingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PurchasesLoadingViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension30PurchasesLoadingViewController);
}

uint64_t sub_10047D918(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100825700, a2, (uint64_t (*)(uint64_t))type metadata accessor for PurchasesLoadingViewController, (uint64_t)&unk_1006644C0);
}

id sub_10047D944(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id result;
  uint64_t v10;
  char *v11;
  objc_super v12;

  v4 = (objc_class *)type metadata accessor for PurchasesLoadingViewController();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_loggedInUserPurchases] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_familyPurchases] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_overlayViewController] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_objectGraph] = a2;
  v6 = type metadata accessor for ArtworkLoader(0);
  v7 = *(_QWORD *)(a2 + qword_10086B3B8);
  if (v7)
  {
    *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_artworkLoader] = v7;
    *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension30PurchasesLoadingViewController_presenter] = a1;
    v12.receiver = v5;
    v12.super_class = v4;
    *(_QWORD *)&v8 = swift_retain(v7).n128_u64[0];
    return objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0, v8);
  }
  else
  {
    v10 = v6;
    v11 = v5;
    swift_retain(a2);
    result = (id)dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v10, v10);
    __break(1u);
  }
  return result;
}

void sub_10047DB7C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  void *v7;
  double Width;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  if ((v0[OBJC_IVAR____TtC20ProductPageExtension9StackView_distribution + 8] & 1) != 0
    || *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9StackView_distribution] != 3)
  {
    return;
  }
  sub_10047DD48();
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v3)
      goto LABEL_5;
LABEL_14:
    v5 = 0.0;
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_14;
LABEL_5:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = 0;
  v5 = 0.0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6;
    ++v4;
    objc_msgSend(v6, "frame");
    Width = CGRectGetWidth(v16);

    v5 = v5 + Width;
  }
  while (v3 != v4);
LABEL_15:
  objc_msgSend(v0, "frame", swift_bridgeObjectRelease(v2).n128_f64[0]);
  if (v5 >= CGRectGetWidth(v17))
    return;
  sub_10047DD48();
  v2 = v9;
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_18;
  }
LABEL_25:
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  v10 = _CocoaArrayWrapper.endIndex.getter(v15);
LABEL_18:
  swift_bridgeObjectRelease(v2);
  if (v10 >= 2)
  {
    sub_10047DD48();
    v12 = v11;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 >= 0)
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
    if (__OFSUB__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v0, "frame", v14);
      CGRectGetWidth(v18);
    }
  }
}

void sub_10047DD48()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  double v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_1000951BC();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_17;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v8 = *(id *)(v3 + 8 * i + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "isHidden");
      if ((v10 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v6 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v6);
        v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v6, v9);
        specialized ContiguousArray._endMutation()(v7);
      }
    }
    swift_bridgeObjectRelease(v3);
  }
}

void sub_10047DF18()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis];
  sub_10047DD48();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (!v4)
      goto LABEL_17;
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
    {
LABEL_17:
      swift_bridgeObjectRelease(v3);
      return;
    }
  }
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v0, "frame");
      objc_msgSend(v7, "sizeThatFits:", v8, v9);
      v11 = v10;
      v13 = v12;
      objc_msgSend(v0, "frame");
      if (v1)
      {
        if (v14 < v11)
        {
          objc_msgSend(v0, "frame");
          v11 = v16;
        }
      }
      else if (v15 < v13)
      {
        objc_msgSend(v0, "frame");
        v13 = v17;
      }
      objc_msgSend(v7, "setFrame:", 0.0, 0.0, v11, v13);

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_10047E080()
{
  char *v0;
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  double MaxX;
  id v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  id v30;
  char v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  double MinX;
  uint64_t v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis];
  sub_10047DB7C();
  v4 = v3;
  sub_10047DD48();
  v6 = v5;
  if (v5 >> 62)
    goto LABEL_25;
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_29:
    swift_bridgeObjectRelease(v6);
    return;
  }
LABEL_3:
  if (v7 >= 1)
  {
    v8 = 0;
    while (1)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v11 = *(id *)(v6 + 8 * v8 + 32);
      v12 = v11;
      v13 = objc_msgSend(v1, "traitCollection");
      v14 = UITraitCollection.prefersRightToLeftLayouts.getter();

      v9 = 0.0;
      if ((v14 & 1) != 0)
      {
        objc_msgSend(v1, "bounds");
        MaxX = CGRectGetMaxX(v38);
        objc_msgSend(v12, "frame");
        v9 = MaxX - CGRectGetWidth(v39);
      }
      if (v8)
      {
        v16 = objc_msgSend(v1, "subviews");
        v17 = sub_1000951BC();
        v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

        v19 = v8 - 1;
        if ((v18 & 0xC000000000000001) != 0)
        {
          v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v18);
        }
        else
        {
          if (v19 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_25:
            if (v6 < 0)
              v37 = v6;
            else
              v37 = v6 & 0xFFFFFFFFFFFFFF8;
            v7 = _CocoaArrayWrapper.endIndex.getter(v37);
            if (!v7)
              goto LABEL_29;
            goto LABEL_3;
          }
          v20 = *(id *)(v18 + 8 * v8 + 24);
        }
        v21 = v20;
        objc_msgSend(v20, "frame", swift_bridgeObjectRelease(v18).n128_f64[0]);
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        if (v2)
        {
          v40.origin.x = v23;
          v40.origin.y = v25;
          v40.size.width = v27;
          v40.size.height = v29;
          v9 = v4 + CGRectGetMaxY(v40);
          v10 = 0.0;
          goto LABEL_7;
        }
        v30 = objc_msgSend(v1, "traitCollection");
        v31 = UITraitCollection.prefersRightToLeftLayouts.getter();

        v32 = v23;
        v33 = v25;
        v34 = v27;
        v35 = v29;
        if ((v31 & 1) != 0)
        {
          MinX = CGRectGetMinX(*(CGRect *)&v32);
          objc_msgSend(v12, "frame");
          v9 = MinX - (v4 + CGRectGetWidth(v41));
        }
        else
        {
          v9 = v4 + CGRectGetMaxX(*(CGRect *)&v32);
        }
      }
      else
      {
        v10 = 0.0;
        if (v2)
          goto LABEL_7;
      }
      v10 = v9;
      v9 = 0.0;
LABEL_7:
      ++v8;
      objc_msgSend(v12, "frame");
      objc_msgSend(v12, "setFrame:", v10, v9);

      if (v7 == v8)
        goto LABEL_29;
    }
  }
  __break(1u);
}

double sub_10047E330()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v14;
  char v15;
  double v16;
  double Width;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGFloat v24;
  id v25;
  char v26;
  double result;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis];
  sub_10047DD48();
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
    v5 = _CocoaArrayWrapper.endIndex.getter(v3);
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        v6 = 0;
        v7 = OBJC_IVAR____TtC20ProductPageExtension9StackView_alignment;
        while (2)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
          else
            v8 = *(id *)(v4 + 8 * v6 + 32);
          v9 = v8;
          switch(*(_QWORD *)&v1[v7])
          {
            case 0:
              objc_msgSend(v1, "bounds");
              if (v2)
                CGRectGetWidth(*(CGRect *)&v10);
              else
                CGRectGetHeight(*(CGRect *)&v10);
              goto LABEL_6;
            case 1:
              if (!v2)
              {
                objc_msgSend(v8, "frame");
                objc_msgSend(v9, "setFrame:");
                goto LABEL_7;
              }
              v14 = objc_msgSend(v1, "traitCollection");
              v15 = UITraitCollection.prefersRightToLeftLayouts.getter();

              v16 = 0.0;
              if ((v15 & 1) == 0)
                goto LABEL_17;
              goto LABEL_16;
            case 2:
              v18 = sub_10000DAF8(&qword_1008091A0);
              v19 = swift_allocObject(v18, 64, 7);
              *(_OWORD *)(v19 + 16) = xmmword_100640720;
              *(_QWORD *)(v19 + 56) = &type metadata for String;
              *(_QWORD *)(v19 + 32) = 0xD00000000000002CLL;
              *(_QWORD *)(v19 + 40) = 0x80000001006A6370;
              print(_:separator:terminator:)(v19, 32, 0xE100000000000000, 10, 0xE100000000000000);
              swift_bridgeObjectRelease(v19);
              goto LABEL_7;
            case 3:
              objc_msgSend(v1, "bounds");
              if (v2)
              {
                v24 = CGRectGetWidth(*(CGRect *)&v20) * 0.5;
                objc_msgSend(v9, "center");
                objc_msgSend(v9, "setCenter:", v24);
              }
              else
              {
                CGRectGetHeight(*(CGRect *)&v20);
                objc_msgSend(v9, "center");
                objc_msgSend(v9, "setCenter:");
              }
              goto LABEL_7;
            case 4:
              if (v2)
              {
                v25 = objc_msgSend(v1, "traitCollection");
                v26 = UITraitCollection.prefersRightToLeftLayouts.getter();

                v16 = 0.0;
                if ((v26 & 1) == 0)
                {
LABEL_16:
                  objc_msgSend(v1, "bounds");
                  Width = CGRectGetWidth(v30);
                  objc_msgSend(v9, "frame");
                  v16 = Width - CGRectGetWidth(v31);
                }
LABEL_17:
                objc_msgSend(v9, "frame");
                objc_msgSend(v9, "setFrame:", v16);
              }
              else
              {
                objc_msgSend(v1, "bounds");
                CGRectGetHeight(v28);
                objc_msgSend(v9, "frame");
                CGRectGetHeight(v29);
LABEL_6:
                objc_msgSend(v9, "frame");
                objc_msgSend(v9, "setFrame:");
              }
LABEL_7:
              ++v6;

              if (v5 != v6)
                continue;
              goto LABEL_32;
            case 5:
              if (v2)
                goto LABEL_7;
              objc_msgSend(v1, "bounds");
              CGRectGetHeight(v32);
              objc_msgSend(v9, "frame");
              CGRectGetHeight(v33);
              objc_msgSend(v9, "lastBaselineFromBottom");
              goto LABEL_6;
            default:
              goto LABEL_7;
          }
        }
      }
      __break(1u);
      JUMPOUT(0x10047E734);
    }
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
  }
LABEL_32:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_10047E74C(double a1, double a2, double a3)
{
  char *v3;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  BOOL v38;
  double v39;
  id v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;

  v7 = objc_msgSend(v3, "subviews");
  v8 = sub_1000951BC();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v50 = v9;
    else
      v50 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v9);
  if (v10)
  {
    v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis];
    sub_10047DD48();
    v13 = v12;
    if ((unint64_t)v12 >> 62)
    {
      if (v12 >= 0)
        v12 &= 0xFFFFFFFFFFFFFF8uLL;
      v14 = _CocoaArrayWrapper.endIndex.getter(v12);
    }
    else
    {
      v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v15 = 0.0;
    if (!v14)
      goto LABEL_36;
    if (v14 >= 1)
    {
      v16 = OBJC_IVAR____TtC20ProductPageExtension9StackView_alignment;
      if ((v13 & 0xC000000000000001) != 0)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
      else
        v17 = *(id *)(v13 + 32);
      v18 = v17;
      objc_msgSend(v17, "sizeThatFits:", a1, a2);
      v21 = v20;
      if (v19 > a2 && v11 == 0)
        v23 = a2;
      else
        v23 = v19;
      v51 = a1;
      if (*(_QWORD *)&v3[v16] == 5)
      {
        objc_msgSend(v18, "lastBaselineFromBottom");
        v24 = a3;
        v26 = v25;

        v27 = v23 - v26;
        a3 = v24;
        a1 = v51;
      }
      else
      {

        if (v21 <= a1)
          v28 = v21;
        else
          v28 = a1;
        if (!v11)
          v28 = v21;
        if (v28 < 0.0)
          v15 = 0.0;
        else
          v15 = v28;
        v27 = v23;
      }
      if (v27 < 0.0)
        v29 = 0.0;
      else
        v29 = v27;
      if (v11)
        v30 = v23;
      else
        v30 = v21;
      v31 = v30 + 0.0;
      v32 = v14 - 1;
      if (v14 != 1)
      {
        v33 = 0;
        do
        {
          if ((v13 & 0xC000000000000001) != 0)
            v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33 + 1, v13);
          else
            v40 = *(id *)(v13 + 8 * v33 + 40);
          v41 = v40;
          objc_msgSend(v40, "sizeThatFits:", a1, a2);
          v44 = v43;
          if (v42 > a2 && v11 == 0)
            v46 = a2;
          else
            v46 = v42;
          if (*(_QWORD *)&v3[v16] == 5)
          {
            objc_msgSend(v41, "lastBaselineFromBottom");
            v47 = a3;
            v49 = v48;

            v35 = v46 - v49;
            a3 = v47;
            a1 = v51;
          }
          else
          {

            if (v44 <= a1)
              v34 = v44;
            else
              v34 = a1;
            if (!v11)
              v34 = v44;
            if (v15 <= v34)
              v15 = v34;
            v35 = v46;
          }
          if (v29 <= v35)
            v29 = v35;
          if (v11)
            v36 = v46;
          else
            v36 = v44;
          v37 = v31 + v36;
          v38 = v36 <= 0.0;
          v39 = -0.0;
          if (!v38)
            v39 = a3;
          v31 = v37 + v39;
          ++v33;
        }
        while (v32 != v33);
      }
LABEL_36:
      swift_bridgeObjectRelease(v13);
      return;
    }
    __break(1u);
  }
}

id sub_10047EB44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StackView()
{
  return objc_opt_self(_TtC20ProductPageExtension9StackView);
}

void sub_10047EB94(void *a1, uint64_t a2, __n128 a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _UNKNOWN **v21;
  SEL *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  __n128 v28;
  Swift::String v29;
  __n128 v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  double *v35;
  id v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  char *v51;
  BOOL v52;
  void *v53;
  char *v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  char *v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  SEL *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t i;
  id v76;
  void *v77;
  unint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  Swift::String v88;
  __n128 v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  NSString v94;
  id v95;
  Class isa;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  char **v106;
  id v107;
  id v108;
  uint64_t v109;
  _UNKNOWN **v110;
  uint64_t v111;
  unint64_t v112;
  id v113;
  _UNKNOWN **v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  void **updated;
  unint64_t v119;
  void **aBlock;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, void *);
  void *v123;
  uint64_t (*v124)(char, uint64_t);
  uint64_t v125;
  _QWORD v126[3];
  char v127[16];

  v107 = a5;
  v11 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char **)type metadata accessor for OSLogger(0, v12);
  v16 = (uint64_t)*(v15 - 1);
  __chkstk_darwin(v15);
  v18 = (char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (a2)
    {
      v61 = a2;
    }
    else
    {
      v78 = sub_100480160();
      v61 = swift_allocError(&type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError, v78, 0, 0);
      *v79 = 1;
    }
    swift_errorRetain(a2);
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v80 = sub_10000EFC4((uint64_t)v15, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, char **))(v16 + 16))(v18, v80, v15);
    v81 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v82 = type metadata accessor for LogMessage(0);
    v83 = swift_allocObject(v81, ((*(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v82 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80) | 7);
    *(_OWORD *)(v83 + 16) = xmmword_100640720;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 1);
    v84._countAndFlagsBits = 0xD000000000000030;
    v84._object = (void *)0x80000001006A6490;
    LogMessage.StringInterpolation.appendLiteral(_:)(v84);
    swift_getErrorValue(v61, v127, v126);
    v85 = Error.localizedDescription.getter(v126[1], v126[2]);
    v123 = &type metadata for String;
    aBlock = (void **)v85;
    v121 = v86;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v87);
    sub_10001282C((uint64_t)&aBlock);
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v88);
    LogMessage.init(stringInterpolation:)(v14);
    Logger.info(_:)(v83, v15, &protocol witness table for OSLogger);
    v89 = swift_bridgeObjectRelease(v83);
    (*(void (**)(char *, char **, __n128))(v16 + 8))(v18, v15, v89);
    Promise.reject(_:)(v61);
    swift_errorRelease(v61);
    return;
  }
  v104[1] = a6;
  v104[0] = a7;
  v19 = (char *)0xD000000000000012;
  v20 = swift_allocObject(&unk_100755F48, 24, 7);
  v105 = v20;
  *(_QWORD *)(v20 + 16) = _swiftEmptyArrayStorage;
  v115 = (uint64_t *)(v20 + 16);
  v108 = a1;
  v21 = (_UNKNOWN **)&unk_100640000;
  v22 = (SEL *)&selRef_isHandlingWriting;
  updated = (void **)UpdateGranularNotificationSettingsAction.settingIDs.getter();
  if (!updated)
  {
    if (qword_100806968 != -1)
      goto LABEL_94;
    goto LABEL_58;
  }
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v23 = sub_10000EFC4((uint64_t)v15, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, char **))(v16 + 16))(v18, v23, v15);
  v24 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v25 = type metadata accessor for LogMessage(0);
  v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(77, 1);
  v27._countAndFlagsBits = 0xD00000000000004DLL;
  v27._object = (void *)0x80000001006A6520;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  v123 = (void *)sub_10000DAF8((uint64_t *)&unk_100815880);
  aBlock = updated;
  v28 = swift_bridgeObjectRetain(updated);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock, v28);
  sub_10001282C((uint64_t)&aBlock);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  LogMessage.init(stringInterpolation:)(v14);
  Logger.info(_:)(v26, v15, &protocol witness table for OSLogger);
  v30 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, char **, __n128))(v16 + 8))(v18, v15, v30);
  v31 = objc_msgSend(v108, "sections");
  v32 = sub_100018B6C(0, &qword_100825770, AMSNotificationSettingsSection_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v102 = v33;
    else
      v102 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v21 = (_UNKNOWN **)_CocoaArrayWrapper.endIndex.getter(v102);
  }
  else
  {
    v21 = *(_UNKNOWN ***)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
  }
  if (v21)
  {
    v34 = 0;
    v112 = v33 & 0xC000000000000001;
    v109 = v33 + 32;
    v106 = (char **)(updated + 9);
    v110 = v21;
    v111 = v33;
    while (1)
    {
      if (v112)
      {
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v33);
        v37 = __OFADD__(v34, 1);
        v38 = (uint64_t)v34 + 1;
        if (v37)
          goto LABEL_81;
      }
      else
      {
        v36 = *(id *)(v109 + 8 * (_QWORD)v34);
        v37 = __OFADD__(v34, 1);
        v38 = (uint64_t)v34 + 1;
        if (v37)
          goto LABEL_81;
      }
      v113 = v36;
      v114 = (_UNKNOWN **)v38;
      v39 = objc_msgSend(v36, "items");
      v40 = sub_100018B6C(0, &qword_1008081D0, AMSNotificationSettingsItem_ptr);
      v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);

      aBlock = (void **)_swiftEmptyArrayStorage;
      if (!((unint64_t)v41 >> 62))
      {
        v22 = *(SEL **)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v22)
          break;
        goto LABEL_53;
      }
      v60 = v41 < 0 ? v41 : v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v41);
      v22 = (SEL *)_CocoaArrayWrapper.endIndex.getter(v60);
      swift_bridgeObjectRelease(v41);
      if (v22)
        break;
LABEL_53:
      swift_bridgeObjectRelease(v41);
      v35 = _swiftEmptyArrayStorage;
LABEL_10:
      sub_10001AAB8((uint64_t)v35);

      v34 = v114;
      if (v114 == v21)
        goto LABEL_56;
    }
    v38 = 0;
    v21 = (_UNKNOWN **)updated[2];
    v119 = v41 & 0xC000000000000001;
    v116 = v41 + 32;
    v117 = v41 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      while (1)
      {
        if (v119)
        {
          v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v41);
        }
        else
        {
          if ((unint64_t)v38 >= *(_QWORD *)(v117 + 16))
            goto LABEL_79;
          v45 = (char *)*(id *)(v116 + 8 * v38);
        }
        v19 = v45;
        v37 = __OFADD__(v38++, 1);
        if (v37)
        {
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        v15 = (char **)objc_msgSend(v45, "identifier");
        v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v48 = v47;

        if (v21)
          break;

        swift_bridgeObjectRelease(v48);
        if ((SEL *)v38 == v22)
          goto LABEL_9;
      }
      v49 = v41;
      v50 = updated[4];
      v51 = (char *)updated[5];
      v52 = v50 == (void *)v46 && v51 == v48;
      if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v46, v48, 0) & 1) == 0)
      {
        if (v21 == (_UNKNOWN **)1)
          goto LABEL_35;
        v53 = updated[6];
        v54 = (char *)updated[7];
        if ((v53 != (void *)v46 || v54 != v48)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, v46, v48, 0) & 1) == 0)
        {
          break;
        }
      }
LABEL_21:
      swift_bridgeObjectRelease(v48);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v43 = aBlock[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v19);
      specialized ContiguousArray._endMutation()(v44);
LABEL_22:
      v41 = v49;
      if ((SEL *)v38 == v22)
      {
LABEL_9:
        swift_bridgeObjectRelease(v41);
        v35 = (double *)aBlock;
        v21 = v110;
        v33 = v111;
        goto LABEL_10;
      }
    }
    if (v21 != (_UNKNOWN **)2)
    {
      v15 = v106;
      v55 = 2;
      do
      {
        v56 = (_UNKNOWN **)(v55 + 1);
        if (__OFADD__(v55, 1))
          goto LABEL_80;
        v57 = (uint64_t)*(v15 - 1);
        v58 = *v15;
        v59 = v57 == v46 && v58 == v48;
        if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v46, v48, 0) & 1) != 0)
          goto LABEL_21;
        v15 += 2;
        ++v55;
      }
      while (v56 != v21);
    }
LABEL_35:

    swift_bridgeObjectRelease(v48);
    goto LABEL_22;
  }
LABEL_56:
  swift_bridgeObjectRelease(updated);
  while (1)
  {
    swift_bridgeObjectRelease_n(v33, 2);
    v38 = *v115;
    if ((unint64_t)*v115 >> 62)
    {
LABEL_82:
      if (v38 < 0)
        v90 = v38;
      else
        v90 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v38, 2);
      v74 = _CocoaArrayWrapper.endIndex.getter(v90);
      if (!v74)
        goto LABEL_86;
    }
    else
    {
      v74 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*v115, 2);
      if (!v74)
        goto LABEL_86;
    }
    if (v74 >= 1)
      break;
    __break(1u);
LABEL_94:
    swift_once(&qword_100806968, sub_10050332C);
LABEL_58:
    sub_10000EFC4((uint64_t)v15, (uint64_t)qword_10086AB38);
    v62 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v63 = type metadata accessor for LogMessage(0);
    v64 = swift_allocObject(v62, ((*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) | 7);
    *(_OWORD *)(v64 + 16) = *((_OWORD *)v21 + 114);
    LogMessage.init(stringLiteral:)(v19 + 58, 0x80000001006A64D0);
    Logger.info(_:)(v64, v15, &protocol witness table for OSLogger);
    *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
    v66 = objc_msgSend(v108, v22[82], v65);
    v67 = sub_100018B6C(0, &qword_100825770, AMSNotificationSettingsSection_ptr);
    v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v67);

    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v103 = v33;
      else
        v103 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      v68 = _CocoaArrayWrapper.endIndex.getter(v103);
      if (v68)
      {
LABEL_60:
        if (v68 < 1)
        {
          __break(1u);
          return;
        }
        v69 = 0;
        v19 = (char *)v33;
        v15 = &selRef_setEffect_;
        v21 = AMSNotificationSettingsItem_ptr;
        do
        {
          if ((v33 & 0xC000000000000001) != 0)
            v70 = (SEL *)specialized _ArrayBuffer._getElementSlowPath(_:)(v69, v33);
          else
            v70 = (SEL *)*(id *)(v33 + 8 * v69 + 32);
          v22 = v70;
          ++v69;
          v71 = -[SEL items](v70, "items");
          v72 = sub_100018B6C(0, &qword_1008081D0, AMSNotificationSettingsItem_ptr);
          v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v71, v72);

          sub_10001AAB8(v73);
        }
        while (v68 != v69);
      }
    }
    else
    {
      v68 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v33);
      if (v68)
        goto LABEL_60;
    }
  }
  for (i = 0; i != v74; ++i)
  {
    if ((v38 & 0xC000000000000001) != 0)
      v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
    else
      v76 = *(id *)(v38 + 8 * i + 32);
    v77 = v76;
    objc_msgSend(v76, "setEnabled:", 1);

  }
LABEL_86:
  swift_bridgeObjectRelease_n(v38, 2);
  v91 = v107;
  v92 = ASKBagContract.amsBag.getter(v91);
  v93 = objc_allocWithZone((Class)AMSNotificationSettingsTask);
  v94 = String._bridgeToObjectiveC()();
  v95 = objc_msgSend(v93, "initWithIdentifier:account:bag:", v94, v91, v92);

  swift_unknownObjectRelease();
  sub_100018B6C(0, &qword_1008081D0, AMSNotificationSettingsItem_ptr);
  swift_bridgeObjectRetain(v38);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v97 = objc_msgSend(v95, "updateSettings:", isa, swift_bridgeObjectRelease(v38).n128_f64[0]);

  if (v97)
  {
    v98 = swift_allocObject(&unk_100755F70, 32, 7);
    v99 = v105;
    v100 = v104[0];
    *(_QWORD *)(v98 + 16) = v105;
    *(_QWORD *)(v98 + 24) = v100;
    v124 = sub_100480254;
    v125 = v98;
    aBlock = _NSConcreteStackBlock;
    v121 = 1107296256;
    v122 = sub_1004EA610;
    v123 = &unk_100755F88;
    v101 = _Block_copy(&aBlock);
    swift_retain(v99);
    swift_retain(v100);
    objc_msgSend(v97, "addFinishBlock:", v101, swift_release().n128_f64[0]);

    _Block_release(v101);
    swift_release();

  }
  else
  {
    swift_release();

  }
}

uint64_t sub_10047F7A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  __n128 v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  _BYTE v52[8];
  _BYTE v53[24];
  _QWORD v54[3];
  void *v55;

  v49 = type metadata accessor for ActionOutcome(0);
  v8 = *(_QWORD *)(v49 - 8);
  v9 = __chkstk_darwin(v49);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LogMessage.StringInterpolation(0, v9);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OSLogger(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)(a3 + 16);
  v50 = a4;
  if ((a1 & 1) != 0)
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v21 = sub_10000EFC4(v16, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v21, v16);
    v22 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v23 = type metadata accessor for LogMessage(0);
    v24 = swift_allocObject(v22, ((*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) | 7);
    *(_OWORD *)(v24 + 16) = xmmword_100640720;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(55, 1);
    v25._countAndFlagsBits = 0xD000000000000037;
    v25._object = (void *)0x80000001006A65A0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    swift_beginAccess(v20, v53, 0, 0);
    v26 = *v20;
    v55 = (void *)sub_10000DAF8(&qword_1008081D8);
    v54[0] = v26;
    v27 = swift_bridgeObjectRetain(v26);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v54, v27);
    sub_10001282C((uint64_t)v54);
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)(v15);
    Logger.info(_:)(v24, v16, &protocol witness table for OSLogger);
    v29 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v29);
    v30 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for ActionOutcome.performed(_:), v49);
    Promise.resolve(_:)(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v30);
  }
  else
  {
    if (a2)
    {
      v32 = a2;
    }
    else
    {
      v33 = sub_100480160();
      v32 = swift_allocError(&type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError, v33, 0, 0);
      *v34 = 2;
    }
    swift_errorRetain(a2);
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v35 = sub_10000EFC4(v16, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v35, v16);
    v36 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v37 = type metadata accessor for LogMessage(0);
    v38 = swift_allocObject(v36, ((*(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80) | 7);
    *(_OWORD *)(v38 + 16) = xmmword_100640720;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(54, 2);
    v39._object = (void *)0x80000001006A6570;
    v39._countAndFlagsBits = 0xD00000000000002DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    swift_beginAccess(v20, v53, 0, 0);
    v40 = *v20;
    v55 = (void *)sub_10000DAF8(&qword_1008081D8);
    v54[0] = v40;
    v41 = swift_bridgeObjectRetain(v40);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v54, v41);
    sub_10001282C((uint64_t)v54);
    v42._countAndFlagsBits = 0x3A726F727245202ELL;
    v42._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    swift_getErrorValue(v32, v52, v51);
    v43 = Error.localizedDescription.getter(v51[1], v51[2]);
    v55 = &type metadata for String;
    v54[0] = v43;
    v54[1] = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v54, v45);
    sub_10001282C((uint64_t)v54);
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    LogMessage.init(stringInterpolation:)(v15);
    Logger.info(_:)(v38, v16, &protocol witness table for OSLogger);
    v47 = swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v47);
    Promise.reject(_:)(v32);
    return swift_errorRelease(v32);
  }
}

uint64_t sub_10047FC58(uint64_t *a1, uint64_t a2, __n128 a3)
{
  return sub_10047FC60(*a1, a2, a3);
}

uint64_t sub_10047FC60(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  id v24;
  __n128 v25;
  Swift::String v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  id aBlock[3];
  void *v51;
  void (*v52)(void *, uint64_t, __n128);
  _QWORD *v53;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_100808570);
  v14 = Promise.__allocating_init()(v13);
  v15 = sub_100018B6C(0, (unint64_t *)&qword_10080AC60, ACAccountStore_ptr);
  v16 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v15, a2, v15, v16);
  v17 = aBlock[0];
  v18 = objc_msgSend(aBlock[0], "ams_activeiTunesAccount");

  if (!v18)
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    sub_10000EFC4(v9, (uint64_t)qword_10086AB38);
    v41 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v42 = type metadata accessor for LogMessage(0);
    v43 = swift_allocObject(v41, ((*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v42 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) | 7);
    *(_OWORD *)(v43 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000043, 0x80000001006A63D0);
    Logger.info(_:)(v43, v9, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v43);
    v44 = sub_100480160();
    v45 = swift_allocError(&type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError, v44, 0, 0);
    *v46 = 0;
    Promise.reject(_:)(v45);
    swift_errorRelease(v45);
    return v14;
  }
  v48 = a1;
  v49 = v14;
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v19 = sub_10000EFC4(v9, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v19, v9);
  v20 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v21 = type metadata accessor for LogMessage(0);
  v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 1);
  v23._countAndFlagsBits = 0xD00000000000002DLL;
  v23._object = (void *)0x80000001006A6420;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  v51 = (void *)sub_100018B6C(0, &qword_100825768, ACAccount_ptr);
  aBlock[0] = v18;
  v24 = v18;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(aBlock, v25);
  sub_10001282C((uint64_t)aBlock);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.info(_:)(v22, v9, &protocol witness table for OSLogger);
  v27 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
  v28 = type metadata accessor for ASKBagContract(0);
  v29 = *(_QWORD *)(a2 + qword_10086B3D8);
  if (v29)
  {
    v30 = v24;
    swift_retain(v29);
    v32 = ASKBagContract.amsBag.getter(v31);
    v33 = objc_allocWithZone((Class)AMSNotificationSettingsTask);
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "initWithIdentifier:account:bag:", v34, v30, v32);

    v36 = objc_msgSend(v35, "fetchAllSettings", swift_unknownObjectRelease().n128_f64[0]);
    v37 = (_QWORD *)swift_allocObject(&unk_100755EF8, 48, 7);
    v38 = v48;
    v14 = v49;
    v37[2] = v48;
    v37[3] = v30;
    v37[4] = v29;
    v37[5] = v14;
    v52 = sub_1004801E0;
    v53 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1001B6740;
    v51 = &unk_100755F10;
    v39 = _Block_copy(aBlock);
    v40 = v30;
    swift_retain(v29);
    swift_retain(v38);
    swift_retain(v14);
    objc_msgSend(v36, "addFinishBlock:", v39, swift_release().n128_f64[0]);
    _Block_release(v39);

    swift_release();
    return v14;
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v28, v28);
  __break(1u);
  return result;
}

unint64_t sub_100480160()
{
  unint64_t result;

  result = qword_100825760;
  if (!qword_100825760)
  {
    result = swift_getWitnessTable(&unk_100664640, &type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100825760);
  }
  return result;
}

uint64_t sub_1004801A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1004801E0(void *a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  sub_10047EB94(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1004801EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004801FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100480204()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100480228()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100480254(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10047F7A8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t storeEnumTagSinglePayload for UpdateGranularNotificationSettingsActionImplementation.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004802A8 + 4 * byte_100664555[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004802DC + 4 * asc_100664550[v4]))();
}

uint64_t sub_1004802DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004802E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004802ECLL);
  return result;
}

uint64_t sub_1004802F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100480300);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100480304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10048030C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateGranularNotificationSettingsActionImplementation.ImplementationError()
{
  return &type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError;
}

ValueMetadata *type metadata accessor for UpdateGranularNotificationSettingsActionImplementation()
{
  return &type metadata for UpdateGranularNotificationSettingsActionImplementation;
}

unint64_t sub_10048033C()
{
  unint64_t result;

  result = qword_100825778;
  if (!qword_100825778)
  {
    result = swift_getWitnessTable(&unk_100664618, &type metadata for UpdateGranularNotificationSettingsActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100825778);
  }
  return result;
}

unint64_t sub_100480384()
{
  unint64_t result;
  uint64_t updated;

  result = qword_100825780;
  if (!qword_100825780)
  {
    updated = type metadata accessor for UpdateGranularNotificationSettingsAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, updated);
    atomic_store(result, (unint64_t *)&qword_100825780);
  }
  return result;
}

id sub_1004803D4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  objc_super v15;

  v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded] = 0;
  v9 = &v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics] = 0;
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid];
  v11 = type metadata accessor for PageGrid(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory] = 7;
  v12 = &v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_otherVideoViewToExchangeVideoContainerWith]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for RevealingVideoView(0);
  v13 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  return v13;
}

id sub_100480558()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  void *v5;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  if (Strong)
  {
    v3 = (void *)Strong;
    *(_BYTE *)(Strong + qword_1008674B8) = v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded];
    sub_100323708();

  }
  v4 = (_QWORD *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate]);
  if (v4)
  {
    v5 = v4;
    (*(void (**)(_QWORD))((swift_isaMask & *v4) + 0xA0))(v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded]);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_100480604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t Strong;
  _QWORD *v8;
  _BYTE v11[24];

  v3 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid, v11, 33, 0);
  sub_10031D0A0(a1, v6);
  swift_endAccess(v11);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate);
  if (Strong)
  {
    v8 = (_QWORD *)Strong;
    sub_10003C2B0(v6, (uint64_t)v5);
    (*(void (**)(_BYTE *))((swift_isaMask & *v8) + 0x100))(v5);

  }
  return sub_100062D88(a1);
}

void sub_1004806F8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, __n128);
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  _QWORD *v17;
  _BYTE v18[24];

  v3 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate);
  if (Strong)
  {
    if (a1 && Strong == a1)
    {

    }
    else
    {
      v17 = Strong;
      v7 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
      v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize);
      v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize + 8);
      v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize + 16);
      v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics);
      v12 = v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid;
      swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid, v18, 0, 0);
      sub_10003C2B0(v12, (uint64_t)v5);
      v13 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, __n128))((swift_isaMask & *v17) + 0x150);
      v14 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory);
      v15 = v17;
      v16 = swift_bridgeObjectRetain(v11);
      v13(v7, v8, v9, v10, v11, v5, v14, v16);

      swift_bridgeObjectRelease(v11);
      sub_100062D88((uint64_t)v5);
    }
  }
}

void sub_100480890(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  id v10;
  _BYTE v12[24];
  objc_super v13;

  v3 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (objc_class *)type metadata accessor for RevealingVideoView(0);
  v13.receiver = v1;
  v13.super_class = v6;
  objc_msgSendSuper2(&v13, "willMoveToWindow:", a1);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_otherVideoViewToExchangeVideoContainerWith]);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = Strong + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid;
    swift_beginAccess(Strong + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid, v12, 0, 0);
    sub_10003C2B0(v9, (uint64_t)v5);
    v10 = v8;
    sub_1004815CC((char *)v8, (uint64_t)v5);

    sub_100062D88((uint64_t)v5);
    swift_unknownObjectWeakAssign();

  }
}

id sub_100480A50(void *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6)
{
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *Strong;
  __n128 v18;
  id v19;
  double *v20;
  char *v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(__n128);
  __n128 v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v38;
  unsigned int v39;

  v7 = v6;
  v39 = a4;
  v13 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  swift_unknownObjectWeakAssign(v18);
  v19 = a1;
  sub_100481308(Strong);

  v20 = (double *)&v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize];
  *v20 = a5;
  v20[1] = a6;
  *((_BYTE *)v20 + 16) = 0;
  v21 = &v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate];
  v22 = (_QWORD *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate]);
  if (v22)
  {
    v23 = v22;
    (*(void (**)(_QWORD, _QWORD, _QWORD))((swift_isaMask & *v22) + 0xE8))(*(_QWORD *)&a5, *(_QWORD *)&a6, 0);

  }
  v24 = OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics;
  v25 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics];
  *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v25);
  v26 = swift_unknownObjectWeakLoadStrong(v21);
  if (v26)
  {
    v27 = (_QWORD *)v26;
    v28 = *(_QWORD *)&v7[v24];
    v29 = *(void (**)(__n128))((swift_isaMask & *v27) + 0xD0);
    v30 = swift_bridgeObjectRetain(v28);
    v29(v30);

  }
  sub_10003C2B0(a3, (uint64_t)v15);
  sub_100480604((uint64_t)v15);
  v31 = v39;
  v7[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory] = v39;
  v32 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v21);
  if (v32)
  {
    v33 = v32;
    (*(void (**)(uint64_t))((swift_isaMask & *v32) + 0x118))(v31);

  }
  v34 = swift_unknownObjectWeakLoadStrong(v21);
  if (v34)
  {
    v35 = (_QWORD *)v34;
    v36 = (void *)swift_unknownObjectWeakLoadStrong(v16);
    (*(void (**)(void *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v35) + 0x150))(v36, *(_QWORD *)v20, *((_QWORD *)v20 + 1), *((unsigned __int8 *)v20 + 16), a2, a3, v31);

  }
  return objc_msgSend(v7, "setNeedsLayout");
}

void sub_100480C88(__n128 a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *Strong;
  double *v18;
  double v19;
  double v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, uint64_t, __n128);
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  double v29;
  uint64_t v30;
  __n128 v31;
  double v32;
  unsigned int *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  int v38;
  id v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char v59[24];
  CGRect v60;
  CGRect v61;

  v2 = v1;
  v3 = type metadata accessor for TodayCardArtworkSizedLayoutMetrics.Priority(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - v8;
  v10 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PageGrid(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  if (Strong)
  {
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics]
      || (v18 = (double *)&v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize],
          (v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize + 16] & 1) != 0))
    {

      return;
    }
    v57 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics];
    v58 = Strong;
    v20 = *v18;
    v19 = v18[1];
    v21 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid];
    swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid], v59, 0, 0);
    sub_10003C2B0(v21, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {

      sub_100062D88((uint64_t)v12);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v22 = v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory];
    if (v22 == 7)
    {
      v23 = *(void (**)(char *, uint64_t, __n128))(v14 + 8);
      v24 = v57;
      v25 = swift_bridgeObjectRetain(v57);
      v23(v16, v13, v25);
      v26 = v24;
LABEL_11:
      swift_bridgeObjectRelease(v26);

      return;
    }
    v27 = v57;
    objc_msgSend(v2, "bounds", swift_bridgeObjectRetain(v57).n128_f64[0]);
    v61.origin.x = 0.0;
    v61.origin.y = 0.0;
    v61.size.width = 0.0;
    v61.size.height = 0.0;
    v28 = CGRectEqualToRect(v60, v61);
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v26 = v27;
      goto LABEL_11;
    }
    v29 = static CGFloat.allColumns.getter(v28);
    v31.n128_f64[0] = PageGrid.componentMeasuringSize(spanning:)(v29);
    if (v22 != 6)
    {
      if (v22 == 5)
      {
        v34 = PageGrid.columnWidth.getter(v30);
      }
      else
      {
        if (v22 == 4)
        {
          v32 = floor((v31.n128_f64[0] - PageGrid.interColumnSpace.getter(v31)) * 0.5);
          v33 = (unsigned int *)&enum case for TodayCardArtworkSizedLayoutMetrics.Priority.mini(_:);
LABEL_20:
          (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *v33, v3);
          (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
          v35 = v57;
          v36 = Array<A>.bestArtworkLayoutMetrics(for:prioritizing:)(v9, v57, v32);
          v37 = swift_bridgeObjectRelease(v35);
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v9, v3, v37);
          v38 = v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded];
          swift_retain(v36);
          v39 = v58;
          objc_msgSend(v2, "bounds");
          v41 = v40;
          v43 = v42;
          v45 = v44;
          v47 = v46;
          v48 = objc_msgSend(v2, "traitCollection");
          v49 = sub_10059FA98((uint64_t)v48, v41, v43, v45, v47, v20, v19, v36, v38);
          v51 = v50;
          v53 = v52;
          v55 = v54;

          objc_msgSend(v39, "setFrame:", v49, v51, v53, v55);
          swift_release_n(v36, 2);

          (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
          return;
        }
        sub_1004B8D9C(v22);
      }
      v32 = v34;
      v33 = (unsigned int *)&enum case for TodayCardArtworkSizedLayoutMetrics.Priority.none(_:);
      goto LABEL_20;
    }
    v32 = floor(v31.n128_f64[0]);
    v33 = (unsigned int *)&enum case for TodayCardArtworkSizedLayoutMetrics.Priority.extraWide(_:);
    goto LABEL_20;
  }
}

void sub_1004810B4()
{
  uint64_t v0;
  void *Strong;
  double v2;
  double Height;
  double Width;
  double v5;
  float64x2_t *v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v10;
  double v11;
  char *v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  if (Strong)
  {
    v2 = *(double *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop)
       + 56.0;
    v12 = Strong;
    objc_msgSend(v12, "bounds");
    Height = CGRectGetHeight(v13);
    objc_msgSend(v12, "frame");
    v11 = Height + CGRectGetMinY(v14) - v2;
    objc_msgSend(v12, "bounds");
    Width = CGRectGetWidth(v15);
    objc_msgSend(v12, "frame");
    v5 = Width + CGRectGetMinX(v16) + -71.0;
    v6 = (float64x2_t *)&v12[qword_10086A9F8];
    v7 = *(float64x2_t *)&v12[qword_10086A9F8];
    v8 = *(float64x2_t *)&v12[qword_10086A9F8 + 16];
    v9 = (float64x2_t)vdupq_n_s64(0xC059000000000000);
    *v6 = v9;
    v10.f64[0] = v11;
    v6[1].f64[0] = v11;
    v6[1].f64[1] = v5;
    v10.f64[1] = v5;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, v7), (int32x4_t)vceqq_f64(v10, v8))), 0xFuLL))) & 1) == 0)sub_1004EC1AC();

  }
}

void sub_1004811F8()
{
  char *v0;
  void *Strong;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidX;
  double v7;
  double v8;
  double *v9;
  double v10;
  double v11;
  int v12;
  char *v15;
  CGRect v16;
  CGRect v17;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  if (Strong)
  {
    v15 = Strong;
    objc_msgSend(v0, "bounds");
    x = v16.origin.x;
    y = v16.origin.y;
    width = v16.size.width;
    height = v16.size.height;
    MidX = CGRectGetMidX(v16);
    v17.origin.x = x;
    v17.origin.y = y;
    v17.size.width = width;
    v17.size.height = height;
    objc_msgSend(v0, "convertPoint:toCoordinateSpace:", v15, MidX, CGRectGetMidY(v17));
    v9 = (double *)&v15[qword_10086AA00];
    v10 = *(double *)&v15[qword_10086AA00];
    v11 = *(double *)&v15[qword_10086AA00 + 8];
    v12 = v15[qword_10086AA00 + 16];
    *v9 = v7;
    v9[1] = v8;
    *((_BYTE *)v9 + 16) = 0;
    if (v12 == 1 || v7 != v10 || v8 != v11)
      sub_1004EB3EC();

  }
}

void sub_100481308(void *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  unsigned __int8 *v13;
  id v14;
  id v15;
  void *v16;
  unsigned __int8 *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  char *v23;
  char v25[24];

  v2 = v1;
  v4 = type metadata accessor for VideoConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_10000E720(&qword_100816400, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_100667D20);
    v10 = v9;
    v11 = objc_msgSend(v10, "superview");
    if (v11)
    {
      v12 = v11;
      sub_1000951BC();
      v13 = v2;
      v14 = v12;
      LOBYTE(v12) = static NSObject.== infix(_:_:)(v14, v13);

      if ((v12 & 1) != 0)
        goto LABEL_11;
    }
    else
    {

    }
    objc_msgSend(v10, "removeFromSuperview");
    objc_msgSend(v2, "addSubview:", v10);
LABEL_11:
    v19 = OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded;
    v10[qword_1008674B8] = v2[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded];
    sub_100323708();
    v20 = v2[v19];
    v21 = &v10[qword_10086AA40];
    v22 = swift_beginAccess(&v10[qword_10086AA40], v25, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v7, v21, v4, v22);
    v23 = v10;
    VideoConfiguration.canPlayFullScreen.setter(v20);
    sub_1004EAABC(v7);

    objc_msgSend(v2, "setNeedsLayout");
    return;
  }
  if (a1)
  {
    sub_10000E720(&qword_100816400, type metadata accessor for TodayCardVideoView, (uint64_t)&unk_100667D20);
    v15 = objc_msgSend(a1, "superview");
    if (v15)
    {
      v16 = v15;
      sub_1000951BC();
      v17 = v2;
      v18 = v16;
      LOBYTE(v16) = static NSObject.== infix(_:_:)(v18, v17);

      if ((v16 & 1) != 0)
        objc_msgSend(a1, "removeFromSuperview");
    }
  }
}

void (*sub_10048158C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + v2);
  return sub_10021FBF4;
}

void sub_1004815CC(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double *v5;
  unsigned int v6;
  double v8;
  double v9;
  char *v10;
  void *Strong;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  id v26;

  if (a1)
  {
    v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics];
    if (v4)
    {
      v5 = (double *)&a1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize];
      if ((a1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize + 16] & 1) == 0)
      {
        v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory);
        if (v6 != 7)
        {
          v9 = *v5;
          v8 = v5[1];
          v10 = &a1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView];
          Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
          v12 = a1;
          swift_bridgeObjectRetain(v4);
          sub_100480A50(Strong, v4, a2, v6, v9, v8);

          swift_bridgeObjectRelease(v4);
          v13 = v2 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView;
          v14 = swift_unknownObjectWeakLoadStrong(v13);
          if (v14)
          {
            v15 = (void *)v14;
            v16 = (void *)swift_unknownObjectWeakLoadStrong(v10);
            if (v16)
            {
              v17 = v16;
              v18 = objc_msgSend(v16, "isHidden");

            }
            else
            {
              v18 = 0;
            }
            objc_msgSend(v15, "setHidden:", v18);

          }
          v19 = swift_unknownObjectWeakLoadStrong(v13);
          if (v19)
          {
            v20 = (_BYTE *)v19;
            v21 = swift_unknownObjectWeakLoadStrong(v10);
            v22 = (_BYTE *)v21;
            if (v21)
            {
              v20[qword_1008674B0] = *(_BYTE *)(v21 + qword_1008674B0);
              sub_100323494();
              v23 = qword_1008674B8;
              v24 = v22[qword_1008674B8];
            }
            else
            {
              v20[qword_1008674B0] = 7;
              sub_100323494();
              v24 = 0;
              v23 = qword_1008674B8;
            }
            v20[v23] = v24;
            sub_100323708();

          }
          v26 = (id)swift_unknownObjectWeakLoadStrong(v10);
          swift_unknownObjectWeakAssign(v25);
          sub_100481308(v26);

        }
      }
    }
  }
}

id sub_1004817C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RevealingVideoView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100481860()
{
  return type metadata accessor for RevealingVideoView(0);
}

uint64_t type metadata accessor for RevealingVideoView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008257D0;
  if (!qword_1008257D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RevealingVideoView);
  return result;
}

void sub_1004818A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100664718;
  v4[1] = &unk_100664730;
  v4[2] = &unk_100664748;
  sub_10021FD9C(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100664760;
    v4[5] = &unk_100664778;
    v4[6] = &unk_100664790;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[8] = &unk_100664790;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

id sub_10048195C(double a1)
{
  char *v1;
  double v2;
  id result;

  v2 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop];
  *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop] = a1;
  if (v2 != a1)
    return objc_msgSend(v1, "setNeedsLayout");
  return result;
}

uint64_t sub_100481988()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
}

void sub_100481998(void *a1)
{
  uint64_t v1;
  void *Strong;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView);
  swift_unknownObjectWeakAssign();
  sub_100481308(Strong);

}

uint64_t (*sub_1004819F8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10048158C(v2);
  return sub_10001C148;
}

uint64_t sub_100481A3C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664818, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_100481A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664818, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_100481ABC(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100664818, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

uint64_t sub_100481B20()
{
  return sub_10000E720(&qword_1008257E0, type metadata accessor for RevealingVideoView, (uint64_t)&unk_1006647A8);
}

uint64_t sub_100481B4C()
{
  return sub_10000E720(&qword_1008257E8, type metadata accessor for RevealingVideoView, (uint64_t)&unk_1006647D8);
}

uint64_t sub_100481B78(uint64_t a1)
{
  uint64_t result;

  result = sub_10000E720((unint64_t *)&unk_1008257F0, type metadata accessor for RevealingVideoView, (uint64_t)&unk_100664818);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_100481BB4(char *a1, char a2, uint64_t a3)
{
  void *v3;
  char *v4;
  void *v5;
  __n128 v6;
  void *Strong;
  char *v9;
  char *v10;

  if (a1)
  {
    if ((a2 & 1) != 0)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);
      v9 = a1;

      if (Strong)
      {
        v10 = v9;
        sub_1004815CC(a1, a3);

      }
    }
    else
    {
      v4 = a1;
      objc_msgSend(v4, "frame");
      objc_msgSend(v3, "setFrame:");
      objc_msgSend(v3, "setHidden:", objc_msgSend(v4, "isHidden"));
      v5 = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView]);

      if (v5)
        swift_unknownObjectWeakAssign(v6);
    }

  }
}

void sub_100481CC0()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;

  v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_isExpanded] = 0;
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkSize];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_artworkLayoutWithMetrics] = 0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_pageGrid];
  v3 = type metadata accessor for PageGrid(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_sizeCategory] = 7;
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_mirrorDelegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_otherVideoViewToExchangeVideoContainerWith], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_additionalVideoControlsInsetTop] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension18RevealingVideoView_videoView], 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/RevealingVideoView.swift", 45, 2, 37, 0);
  __break(1u);
}

ValueMetadata *type metadata accessor for HttpActionImplementation()
{
  return &type metadata for HttpActionImplementation;
}

uint64_t sub_100481DEC()
{
  return sub_1003DEA20((unint64_t *)&unk_100825800, (uint64_t (*)(uint64_t))&type metadata accessor for HttpAction);
}

uint64_t sub_100481E10(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  __n128 v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[3];
  void *v99;
  uint64_t v100;
  _BYTE v101[24];

  v96 = a3;
  v97 = a5;
  v93 = a4;
  v7 = type metadata accessor for ActionOutcome(0);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  __chkstk_darwin(v7);
  v85 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100820670);
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  __chkstk_darwin(v9);
  v89 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v11);
  v76 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v74 = (uint64_t)&v73 - v14;
  v90 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v77 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v75 = (char *)&v73 - v18;
  v19 = type metadata accessor for OSLogger(0, v17);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = *a1;
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v23 = sub_10000EFC4(v19, (uint64_t)qword_10086AB38);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v83 = v23;
  v84 = v24;
  ((void (*)(char *))v24)(v22);
  v25 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v26 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 32) & ~v28;
  v82 = v25;
  v81 = v28 | 7;
  v30 = swift_allocObject(v25, v29 + 6 * v27, v28 | 7);
  *(_OWORD *)(v30 + 16) = xmmword_100640730;
  LogMessage.init(stringLiteral:)(0x6574656C706D6F43, 0xE900000000000064);
  v80 = type metadata accessor for HttpAction(0);
  v99 = (void *)v80;
  v98[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v98);
  sub_100010F2C((uint64_t)v98, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x676E697375, 0xE500000000000000);
  v78 = 2 * v27;
  v79 = 3 * v27;
  v31 = type metadata accessor for Bag(0);
  v95 = a2;
  v32 = v31;
  v99 = (void *)v31;
  v33 = sub_1000119C0(v98);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v33, v96, v32);
  static LogMessage.sensitive(_:)(v98);
  sub_100010F2C((uint64_t)v98, &qword_100808F20);
  LogMessage.init(stringLiteral:)(980709223, 0xE400000000000000);
  v99 = (void *)sub_100018B6C(0, &qword_100825810, AMSURLResult_ptr);
  v98[0] = v94;
  v34 = v94;
  static LogMessage.sensitive(_:)(v98);
  sub_100010F2C((uint64_t)v98, &qword_100808F20);
  Logger.debug(_:)(v30, v19, &protocol witness table for OSLogger);
  v35 = swift_bridgeObjectRelease(v30);
  v36 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
  v36(v22, v19, v35);
  if ((char *)objc_msgSend(v34, "responseStatusCode") - 200 <= (char *)0x63)
  {
    v37 = HttpAction.successAction.getter();
    if (!v37)
    {
LABEL_7:
      v52 = v85;
      v51 = v86;
      v53 = v87;
      (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v85, enum case for ActionOutcome.performed(_:), v87);
      Promise.resolve(_:)(v52);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    }
    v38 = v37;
    v39 = v93;
    v40 = v93 + qword_10086B3B0;
    swift_beginAccess(v93 + qword_10086B3B0, v101, 0, 0);
    v41 = v40;
    v42 = v74;
    sub_10005E588(v41, v74);
    v43 = v88;
    v44 = v90;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v42, 1, v90) != 1)
    {
      v45 = v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v75, v42, v44);
      v99 = (void *)type metadata accessor for Action(0);
      v100 = sub_1003DEA20(&qword_10081C890, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
      v98[0] = v38;
      v47 = v91;
      v46 = v92;
      v48 = v89;
      (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v89, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v92);
      v49 = swift_retain(v38);
      ActionDispatcher.perform(_:withMetrics:asPartOf:)(v98, v48, v39, v44, v49);
      swift_release();
      v50 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v48, v46, v50);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v98);
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  v84(v22, v83, v19);
  v55 = swift_allocObject(v82, v29 + 4 * v27, v81);
  *(_OWORD *)(v55 + 16) = xmmword_100640F90;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100687410);
  v99 = (void *)v80;
  v98[0] = v95;
  swift_retain(v95);
  static LogMessage.sensitive(_:)(v98);
  sub_100010F2C((uint64_t)v98, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0xD000000000000013, 0x80000001006A66B0);
  v56 = objc_msgSend(v34, "responseStatusCode");
  v99 = &type metadata for Int;
  v98[0] = v56;
  static LogMessage.sensitive(_:)(v98);
  sub_100010F2C((uint64_t)v98, &qword_100808F20);
  Logger.error(_:)(v55, v19, &protocol witness table for OSLogger);
  v57 = swift_bridgeObjectRelease(v55);
  v58 = ((uint64_t (*)(char *, uint64_t, __n128))v36)(v22, v19, v57);
  v59 = HttpAction.failureAction.getter(v58);
  if (!v59)
  {
LABEL_11:
    v71 = sub_100482F5C();
    v72 = swift_allocError(&type metadata for HttpActionImplementation.Error, v71, 0, 0);
    Promise.reject(_:)(v72);
    return swift_errorRelease(v72);
  }
  v60 = v59;
  v61 = v93;
  v62 = v93 + qword_10086B3B0;
  swift_beginAccess(v93 + qword_10086B3B0, v101, 0, 0);
  v63 = v62;
  v42 = v76;
  sub_10005E588(v63, v76);
  v64 = v88;
  v44 = v90;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v42, 1, v90) != 1)
  {
    v65 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v77, v42, v44);
    v99 = (void *)type metadata accessor for Action(0);
    v100 = sub_1003DEA20(&qword_10081C890, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
    v98[0] = v60;
    v67 = v91;
    v66 = v92;
    v68 = v89;
    (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v89, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v92);
    v69 = swift_retain(v60);
    ActionDispatcher.perform(_:withMetrics:asPartOf:)(v98, v68, v61, v44, v69);
    swift_release();
    v70 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v68, v66, v70);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v44);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v98);
    goto LABEL_11;
  }
LABEL_12:
  sub_100010F2C(v42, (uint64_t *)&unk_100809290);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v44, v44);
  __break(1u);
  return result;
}

uint64_t sub_100482674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  char v55[24];
  uint64_t v56;
  uint64_t v57;
  char v58[16];

  v51 = a4;
  v49 = a3;
  v6 = sub_10000DAF8((uint64_t *)&unk_100820670);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  __chkstk_darwin(v6);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  v11 = __chkstk_darwin(v10);
  v43 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OSLogger(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v17 = sub_10000EFC4(v13, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v19 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ 4 * *(_QWORD *)(v19 + 72), *(unsigned __int8 *)(v19 + 80) | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100640F90;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100687410);
  v53 = type metadata accessor for HttpAction(0);
  v52[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v52);
  sub_100010F2C((uint64_t)v52, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x3A6E6F73616572, 0xE700000000000000);
  v50 = a1;
  swift_getErrorValue(a1, v58, &v56);
  v21 = v56;
  v22 = v57;
  v53 = v57;
  v23 = sub_1000119C0(v52);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v23, v21, v22);
  static LogMessage.sensitive(_:)(v52);
  sub_100010F2C((uint64_t)v52, &qword_100808F20);
  Logger.error(_:)(v20, v13, &protocol witness table for OSLogger);
  v24 = swift_bridgeObjectRelease(v20);
  v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v24);
  v26 = HttpAction.failureAction.getter(v25);
  if (!v26)
    return Promise.reject(_:)(v50);
  v27 = v26;
  v28 = v49;
  v29 = v49 + qword_10086B3B0;
  swift_beginAccess(v49 + qword_10086B3B0, v55, 0, 0);
  v30 = v29;
  v31 = v42;
  sub_10005E588(v30, v42);
  v33 = v44;
  v32 = v45;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v31, 1, v45) != 1)
  {
    v34 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v43, v31, v32);
    v53 = type metadata accessor for Action(0);
    v54 = sub_1003DEA20(&qword_10081C890, (uint64_t (*)(uint64_t))&type metadata accessor for Action);
    v52[0] = v27;
    v36 = v46;
    v35 = v47;
    v37 = v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v48);
    v38 = swift_retain(v27);
    ActionDispatcher.perform(_:withMetrics:asPartOf:)(v52, v36, v28, v32, v38);
    swift_release();
    v39 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v36, v37, v39);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
    return Promise.reject(_:)(v50);
  }
  sub_100010F2C(v31, (uint64_t *)&unk_100809290);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v32, v32);
  __break(1u);
  return result;
}

uint64_t sub_100482AB0(uint64_t *a1, uint64_t a2)
{
  return sub_100482AB8(*a1, a2);
}

uint64_t sub_100482AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[2];
  char *v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD v46[5];

  v4 = type metadata accessor for Bag(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v42 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v38 - v8;
  v10 = sub_10000DAF8(&qword_100808570);
  v11 = Promise.__allocating_init()(v10);
  v12 = sub_100018B6C(0, (unint64_t *)&unk_1008094D0, AMSURLSession_ptr);
  v13 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v12, a2, v12, v13);
  v45 = (id)v46[0];
  v43 = v4;
  inject<A, B>(_:from:)(v4, a2, v4, v13);
  v14 = sub_100018B6C(0, (unint64_t *)&qword_100808580, AMSProcessInfo_ptr);
  inject<A, B>(_:from:)(v14, a2, v14, v13);
  v15 = (void *)v46[0];
  v16 = type metadata accessor for ASKBagContract(0);
  v17 = *(_QWORD *)(a2 + qword_10086B3D8);
  if (v17)
  {
    v44 = v11;
    v18 = sub_10000DAF8((uint64_t *)&unk_1008094E0);
    swift_retain(v17);
    v19 = inject<A, B>(_:from:)(v18, a2, v18, v13);
    v20 = v46[0];
    v21 = HttpAction.needsMediaToken.getter(v19);
    v41 = v20;
    if ((v21 & 1) != 0)
      v22 = swift_unknownObjectRetain(v20);
    else
      v20 = 0;
    v40 = v15;
    v38[1] = HttpAction.start(urlSession:bag:process:bagContract:mediaTokenService:)(v45, v9, v15, v17, v20, v22);
    v23 = swift_unknownObjectRelease();
    v25 = v42;
    v24 = v43;
    (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v42, v9, v43, v23);
    v26 = *(unsigned __int8 *)(v5 + 80);
    v27 = (v26 + 24) & ~v26;
    v28 = (v6 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = v9;
    v29 = v5;
    v30 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    v31 = swift_allocObject(&unk_1007561C0, v30 + 8, v26 | 7);
    *(_QWORD *)(v31 + 16) = a1;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31 + v27, v25, v24);
    *(_QWORD *)(v31 + v28) = a2;
    v32 = v44;
    *(_QWORD *)(v31 + v30) = v44;
    v33 = (_QWORD *)swift_allocObject(&unk_1007561E8, 40, 7);
    v33[2] = a1;
    v33[3] = a2;
    v33[4] = v32;
    v34 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
    swift_retain_n(a1, 2);
    swift_retain_n(a2, 2);
    swift_retain_n(v32, 2);
    v36 = static OS_dispatch_queue.main.getter(v35);
    v46[3] = v34;
    v46[4] = &protocol witness table for OS_dispatch_queue;
    v46[0] = v36;
    Promise.then(perform:orCatchError:on:)(sub_100482EBC, v31, sub_100482F50, v33, v46);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v46);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v24);
    return v32;
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v16, v16);
    __break(1u);
  }
  return result;
}

uint64_t sub_100482E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Bag(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_100482EBC(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Bag(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100481E10(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100482F1C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100482F50(uint64_t a1)
{
  uint64_t *v1;

  return sub_100482674(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_100482F5C()
{
  unint64_t result;

  result = qword_100825818;
  if (!qword_100825818)
  {
    result = swift_getWitnessTable(&unk_100664998, &type metadata for HttpActionImplementation.Error);
    atomic_store(result, (unint64_t *)&qword_100825818);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HttpActionImplementation.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100482FE0 + 4 * byte_100664890[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100483000 + 4 * byte_100664895[v4]))();
}

_BYTE *sub_100482FE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100483000(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100483008(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100483010(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100483018(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100483020(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HttpActionImplementation.Error()
{
  return &type metadata for HttpActionImplementation.Error;
}

unint64_t sub_100483040()
{
  unint64_t result;

  result = qword_100825820;
  if (!qword_100825820)
  {
    result = swift_getWitnessTable(&unk_100664970, &type metadata for HttpActionImplementation.Error);
    atomic_store(result, (unint64_t *)&qword_100825820);
  }
  return result;
}

void sub_1004831E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD **v7;
  _QWORD *v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  id v14;
  _BYTE v15[24];

  v14 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (v14)
  {
    v3 = objc_opt_self(UITabBarController);
    v4 = (void *)swift_dynamicCastObjCClass(v14, v3);
    if (v4)
    {
      v5 = v4;
      sub_1005E3148(1, v4, a1);
      v6 = swift_allocObject(&unk_100756468, 24, 7);
      *(_QWORD *)(v6 + 16) = v5;
      v7 = (_QWORD **)(v1 + OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks);
      swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks, v15, 33, 0);
      v8 = *v7;
      v9 = v14;
      swift_retain(v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
      *v7 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_1003DB0E4(0, v8[2] + 1, 1, v8);
        *v7 = v8;
      }
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
      {
        v8 = sub_1003DB0E4((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
        *v7 = v8;
      }
      v8[2] = v12 + 1;
      v13 = &v8[3 * v12];
      v13[4] = sub_100483CDC;
      v13[5] = v6;
      *((_BYTE *)v13 + 48) = 2;
      swift_endAccess(v15);

      swift_release();
    }
    else
    {

    }
  }
}

void sub_100483378(void *a1)
{
  char *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v12;
  CGFloat v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  double v28;
  void *v29;
  CGFloat *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void **aBlock;
  uint64_t v39;
  void *v40;
  void *v41;
  id (*v42)();
  CGFloat *v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v2 = v1;
  v37 = objc_msgSend(a1, "containerView");
  v4 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v6)
  {

LABEL_6:
    return;
  }
  v7 = v6;
  objc_msgSend(a1, "finalFrameForViewController:", v5);
  x = v44.origin.x;
  y = v44.origin.y;
  width = v44.size.width;
  height = v44.size.height;
  v12 = CGRectGetWidth(v44) * 0.2;
  v45.origin.x = x;
  v45.origin.y = y;
  v45.size.width = width;
  v45.size.height = height;
  v13 = CGRectGetHeight(v45) * 0.2;
  v46.origin.x = x;
  v46.origin.y = y;
  v46.size.width = width;
  v46.size.height = height;
  v47 = CGRectInset(v46, v12, v13);
  v14 = (double *)&v1[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionPresentAnimation_originRect];
  if ((v1[OBJC_IVAR____TtC20ProductPageExtension31TodayTransitionPresentAnimation_originRect + 32] & 1) != 0)
  {
    v15 = v47.origin.x;
    v16 = v47.origin.y;
    v17 = v47.size.width;
    v18 = v47.size.height;
  }
  else
  {
    v17 = v14[2];
    v18 = v14[3];
    v15 = *v14;
    v16 = v14[1];
  }
  objc_msgSend(v37, "addSubview:", v7);
  objc_msgSend(v7, "setFrame:", v15, v16, v17, v18);
  objc_msgSend(v7, "layoutIfNeeded");
  *(_QWORD *)&v19 = swift_unknownObjectRetain(a1).n128_u64[0];
  v21 = objc_msgSend(v20, "containerView", v19);
  v22 = objc_msgSend(v21, "traitCollection");

  LOBYTE(v21) = UITraitCollection.isSizeClassCompact.getter(v23);
  swift_unknownObjectRelease();

  if ((v21 & 1) != 0)
    v24 = 0.62;
  else
    v24 = 0.61;
  v25 = objc_msgSend(a1, "containerView");
  v26 = objc_msgSend(v25, "traitCollection");

  LOBYTE(v25) = UITraitCollection.isSizeClassCompact.getter(v27);
  if ((v25 & 1) != 0)
    v28 = 0.8;
  else
    v28 = 0.84;
  v29 = (void *)objc_opt_self(UIView);
  v30 = (CGFloat *)swift_allocObject(&unk_1007563C8, 64, 7);
  *((_QWORD *)v30 + 2) = v2;
  *((_QWORD *)v30 + 3) = v7;
  v30[4] = x;
  v30[5] = y;
  v30[6] = width;
  v30[7] = height;
  v42 = sub_100483BF8;
  v43 = v30;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_1000924A0;
  v41 = &unk_1007563E0;
  v31 = _Block_copy(&aBlock);
  v32 = v2;
  v33 = v7;
  swift_release();
  v34 = swift_allocObject(&unk_100756418, 32, 7);
  *(_QWORD *)(v34 + 16) = a1;
  *(_QWORD *)(v34 + 24) = v32;
  v42 = (id (*)())sub_100483BC8;
  v43 = (CGFloat *)v34;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_10004A774;
  v41 = &unk_100756430;
  v35 = _Block_copy(&aBlock);
  swift_unknownObjectRetain(a1);
  v36 = v32;
  swift_release();
  objc_msgSend(v29, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 129, v31, v35, v24, 0.0, v28, 1.0);

  _Block_release(v35);
  _Block_release(v31);
}

void sub_100483760(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  double v21;
  id v22;
  id v23;
  uint64_t v24;
  double v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  void **aBlock;
  uint64_t v36;
  void *v37;
  void *v38;
  id (*v39)();
  uint64_t v40;

  v2 = v1;
  v34 = objc_msgSend(a1, "containerView");
  v4 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v4)
    goto LABEL_11;
  v5 = v4;
  v6 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v6)
  {

LABEL_11:
    return;
  }
  v7 = v6;
  objc_msgSend(a1, "finalFrameForViewController:", v5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(v34, "addSubview:", v7);
  objc_msgSend(v7, "setFrame:", v9, v11, v13, v15);
  objc_msgSend(v7, "layoutIfNeeded");
  objc_msgSend(v7, "setAlpha:", 0.0);
  *(_QWORD *)&v16 = swift_unknownObjectRetain(a1).n128_u64[0];
  v18 = objc_msgSend(v17, "containerView", v16);
  v19 = objc_msgSend(v18, "traitCollection");

  LOBYTE(v18) = UITraitCollection.isSizeClassCompact.getter(v20);
  swift_unknownObjectRelease();

  if ((v18 & 1) != 0)
    v21 = 0.62;
  else
    v21 = 0.61;
  v22 = objc_msgSend(a1, "containerView");
  v23 = objc_msgSend(v22, "traitCollection");

  LOBYTE(v22) = UITraitCollection.isSizeClassCompact.getter(v24);
  if ((v22 & 1) != 0)
    v25 = 0.8;
  else
    v25 = 0.84;
  v26 = (void *)objc_opt_self(UIView);
  v27 = swift_allocObject(&unk_100756328, 32, 7);
  *(_QWORD *)(v27 + 16) = v2;
  *(_QWORD *)(v27 + 24) = v7;
  v39 = sub_100483B74;
  v40 = v27;
  aBlock = _NSConcreteStackBlock;
  v36 = 1107296256;
  v37 = sub_1000924A0;
  v38 = &unk_100756340;
  v28 = _Block_copy(&aBlock);
  v29 = v2;
  v30 = v7;
  swift_release();
  v31 = swift_allocObject(&unk_100756378, 32, 7);
  *(_QWORD *)(v31 + 16) = a1;
  *(_QWORD *)(v31 + 24) = v29;
  v39 = (id (*)())sub_100483BC8;
  v40 = v31;
  aBlock = _NSConcreteStackBlock;
  v36 = 1107296256;
  v37 = sub_10004A774;
  v38 = &unk_100756390;
  v32 = _Block_copy(&aBlock);
  swift_unknownObjectRetain(a1);
  v33 = v29;
  swift_release();
  objc_msgSend(v26, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 129, v28, v32, v21, 0.0, v25, 1.0);

  _Block_release(v32);
  _Block_release(v28);
}

id sub_100483AF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayTransitionPresentAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TodayTransitionPresentAnimation()
{
  return objc_opt_self(_TtC20ProductPageExtension31TodayTransitionPresentAnimation);
}

uint64_t sub_100483B48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100483B74()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  sub_100071FF4(1);
  return objc_msgSend(v1, "setAlpha:", 1.0);
}

uint64_t sub_100483BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100483BBC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100483BCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_100483BF8()
{
  double *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = (void *)*((_QWORD *)v0 + 3);
  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = v0[7];
  sub_100071FF4(1);
  return objc_msgSend(v1, "setFrame:", v2, v3, v4, v5);
}

uint64_t sub_100483C58()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100483C84()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "completeTransition:", 1);
  return sub_100071FF4(2);
}

uint64_t sub_100483CB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100483CDC()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), "tabBar");
  objc_msgSend(v1, "setHidden:", 0);

}

void sub_100483D3C(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  void *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  NSString v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t j;
  id v51;
  void *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  __n128 v62;
  void *v63;
  _QWORD *v64;
  id v65;
  void (*v66)(_QWORD *, uint64_t);
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, _QWORD *, uint64_t);
  void (*v75)(char *, _QWORD, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  _QWORD v78[3];
  _QWORD v79[3];

  v3 = v2;
  v71 = a2;
  v5 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v5);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v67 - v13);
  if (qword_100805DF0 != -1)
    swift_once(&qword_100805DF0, sub_100484744);
  v15 = sub_10000DAF8(&qword_100812250);
  sub_10000EFC4(v15, (uint64_t)qword_1008258B8);
  v79[0] = v2;
  Conditional.evaluate(with:)(v14, v79, v15);
  v16 = *(void **)&v2[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingTextLabel];
  v74 = *(void (**)(char *, _QWORD *, uint64_t))(v9 + 16);
  v74(v7, v14, v8);
  v70 = v9;
  v75 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v75(v7, 0, 1, v8);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v7);
  if (qword_100805DD8 != -1)
    swift_once(&qword_100805DD8, sub_100484524);
  v17 = sub_10000DAF8((uint64_t *)&unk_100808820);
  v18 = sub_10000EFC4(v17, (uint64_t)qword_100825870);
  v78[0] = v3;
  v72 = v18;
  v73 = v17;
  Conditional.evaluate(with:)(v79, v78, v17);
  AnnotationItem_V2.heading.getter(objc_msgSend(v16, "setTextAlignment:", v79[0]));
  v68 = v14;
  if (v19)
  {
    v21 = v19;
    v22 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v20 = swift_bridgeObjectRelease(v21).n128_u64[0];
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v16, "setText:", v22, v20);

  v23 = *(id *)&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingArtworkView];
  v24 = AnnotationItem_V2.headingArtworkItems.getter();
  sub_1006059DC(v24, v25);

  swift_bridgeObjectRelease(v24);
  if (qword_100805DE8 != -1)
    swift_once(&qword_100805DE8, sub_1004845DC);
  sub_10000EFC4(v15, (uint64_t)qword_1008258A0);
  v79[0] = v3;
  Conditional.evaluate(with:)(v11, v79, v15);
  v26 = *(void **)&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_textLabel];
  v74(v7, v11, v8);
  v75(v7, 0, 1, v8);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v7);
  v78[0] = v3;
  Conditional.evaluate(with:)(v79, v78, v73);
  AnnotationItem_V2.text.getter(objc_msgSend(v26, "setTextAlignment:", v79[0]));
  if (v27)
  {
    v29 = v27;
    v30 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v26, "setText:", v30, v28);

  v32 = AnnotationItem_V2.textPairs.getter(v31);
  v33 = type metadata accessor for AnnotationItem_V2.TextPair(0);
  v34 = Array.isNotEmpty.getter(v32, v33);
  *(_QWORD *)&v35 = swift_bridgeObjectRelease(v32).n128_u64[0];
  if ((v34 & 1) != 0
    && (v36 = objc_msgSend(v3, "traitCollection", v35),
        v37 = UITraitCollection.prefersAccessibilityLayouts.getter(v36),
        v36,
        (v37 & 1) == 0))
  {
    v39 = 4;
    v38 = 1;
  }
  else
  {
    v38 = 0;
    v39 = 0;
  }
  objc_msgSend(v26, "setNumberOfLines:", v38, v35);
  objc_msgSend(v26, "setLineBreakMode:", v39);
  v40 = (uint64_t *)&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels];
  swift_beginAccess(&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels], v79, 0, 0);
  v41 = *v40;
  v69 = v11;
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v46 = v41;
    else
      v46 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v41, 2);
    v42 = _CocoaArrayWrapper.endIndex.getter(v46);
    if (!v42)
      goto LABEL_29;
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v41, 2);
    if (!v42)
      goto LABEL_29;
  }
  if (v42 < 1)
  {
    __break(1u);
    goto LABEL_55;
  }
  for (i = 0; i != v42; ++i)
  {
    if ((v41 & 0xC000000000000001) != 0)
      v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v41);
    else
      v44 = *(id *)(v41 + 8 * i + 32);
    v45 = v44;
    objc_msgSend(v44, "removeFromSuperview");

  }
LABEL_29:
  swift_bridgeObjectRelease_n(v41, 2);
  v47 = (uint64_t *)&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_trailingPairLabels];
  swift_beginAccess(&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_trailingPairLabels], v78, 0, 0);
  v48 = *v47;
  if ((unint64_t)v48 >> 62)
  {
    if (v48 < 0)
      v53 = v48;
    else
      v53 = v48 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v48, 2);
    v49 = _CocoaArrayWrapper.endIndex.getter(v53);
    if (!v49)
      goto LABEL_41;
  }
  else
  {
    v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v48, 2);
    if (!v49)
      goto LABEL_41;
  }
  if (v49 < 1)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  for (j = 0; j != v49; ++j)
  {
    if ((v48 & 0xC000000000000001) != 0)
      v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v48);
    else
      v51 = *(id *)(v48 + 8 * j + 32);
    v52 = v51;
    objc_msgSend(v51, "removeFromSuperview");

  }
LABEL_41:
  v54 = swift_bridgeObjectRelease_n(v48, 2);
  v55 = AnnotationItem_V2.textPairs.getter(v54);
  v56 = v55;
  if (!((unint64_t)v55 >> 62))
  {
    v57 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v55);
    if (v57)
      goto LABEL_43;
LABEL_53:
    v62 = swift_bridgeObjectRelease_n(v56, 2);
    v63 = *(void **)&v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_listTextLabel];
    v64 = v69;
    ((void (*)(char *, _QWORD *, uint64_t, __n128))v74)(v7, v69, v8, v62);
    v75(v7, 0, 1, v8);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v7);
    v76 = v3;
    Conditional.evaluate(with:)(&v77, &v76, v73);
    objc_msgSend(v63, "setTextAlignment:", v77);
    v65 = sub_1004859FC(a1, v3);
    objc_msgSend(v63, "setAttributedText:", v65);

    v3[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_isLastItem] = v71 & 1;
    objc_msgSend(v3, "setNeedsLayout");
    v66 = *(void (**)(_QWORD *, uint64_t))(v70 + 8);
    v66(v64, v8);
    v66(v68, v8);
    return;
  }
  if (v55 < 0)
    v61 = v55;
  else
    v61 = v55 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v55);
  v57 = _CocoaArrayWrapper.endIndex.getter(v61);
  if (!v57)
    goto LABEL_53;
LABEL_43:
  if (v57 >= 1)
  {
    v58 = 0;
    do
    {
      if ((v56 & 0xC000000000000001) != 0)
      {
        v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v56);
      }
      else
      {
        v59 = *(_QWORD *)(v56 + 8 * v58 + 32);
        v60 = swift_retain(v59);
      }
      ++v58;
      v77 = v59;
      sub_10048654C((uint64_t)&v77, v3, v60);
      swift_release();
    }
    while (v57 != v58);
    goto LABEL_53;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_10048447C()
{
  uint64_t v0;
  _QWORD v2[5];
  _QWORD v3[5];
  _QWORD v4[5];
  _QWORD v5[5];
  _QWORD v6[5];

  v0 = type metadata accessor for ProductAnnotationLayout.ItemLayout.Metrics(0);
  sub_100011980(v0, qword_100868BA8);
  sub_10000EFC4(v0, (uint64_t)qword_100868BA8);
  v6[3] = &type metadata for Double;
  v6[4] = &protocol witness table for Double;
  v5[4] = &protocol witness table for Double;
  v6[0] = 0x4010000000000000;
  v5[3] = &type metadata for Double;
  v5[0] = 0x4010000000000000;
  v4[3] = &type metadata for Double;
  v4[4] = &protocol witness table for Double;
  v3[4] = &protocol witness table for Double;
  v4[0] = 0x4000000000000000;
  v3[3] = &type metadata for Double;
  v2[4] = &protocol witness table for Double;
  v3[0] = 0x4028000000000000;
  v2[3] = &type metadata for Double;
  v2[0] = 0x4028000000000000;
  return ProductAnnotationLayout.ItemLayout.Metrics.init(headingArtworkTopSpace:headingArtworkBottomSpace:textSpacing:listTextTopSpace:horizontalPairTextSpace:)(v6, v5, v4, v3, v2);
}

uint64_t sub_100484524(uint64_t a1)
{
  return sub_10048454C(a1, qword_100825870, 0, 2);
}

uint64_t sub_100484538(uint64_t a1)
{
  return sub_10048454C(a1, qword_100825888, 2, 0);
}

uint64_t sub_10048454C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v7 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_100011980(v7, a2);
  sub_10000EFC4(v7, (uint64_t)a2);
  v11 = a4;
  v12 = a3;
  v8 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v12, &v11, v8, v9);
}

double sub_1004845DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DAF8(&qword_100812250);
  sub_100011980(v7, qword_1008258A0);
  sub_10000EFC4(v7, (uint64_t)qword_1008258A0);
  if (qword_100806210 != -1)
    swift_once(&qword_100806210, sub_1004C70B4);
  v8 = sub_10000EFC4(v0, (uint64_t)qword_100869708);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_100806208 != -1)
    swift_once(&qword_100806208, sub_1004C709C);
  v10 = sub_10000EFC4(v0, (uint64_t)qword_1008696F0);
  v9(v3, v10, v0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0).n128_u64[0];
  return result;
}

double sub_100484744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DAF8(&qword_100812250);
  sub_100011980(v7, qword_1008258B8);
  sub_10000EFC4(v7, (uint64_t)qword_1008258B8);
  if (qword_100806220 != -1)
    swift_once(&qword_100806220, sub_1004C70E4);
  v8 = sub_10000EFC4(v0, (uint64_t)qword_100869738);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_100806218 != -1)
    swift_once(&qword_100806218, sub_1004C70CC);
  v10 = sub_10000EFC4(v0, (uint64_t)qword_100869720);
  v9(v3, v10, v0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0).n128_u64[0];
  return result;
}

char *sub_1004848AC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  objc_class *ObjCClassFromMetadata;
  id v16;
  id v17;
  id v18;
  id v19;
  double left;
  double bottom;
  double right;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char *v30;
  uint64_t v31;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_trailingPairLabels] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_isLastItem] = 0;
  v10 = type metadata accessor for AnnotationImagesView(0);
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingArtworkView] = v13;
  v14 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v14);
  v16 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingTextLabel] = v16;
  v17 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_textLabel] = v17;
  v18 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_listTextLabel] = v18;

  v32.receiver = v12;
  v32.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v32, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v23 = (char *)v19;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingArtworkView]);
  v24 = OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingTextLabel;
  v25 = *(void **)&v23[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingTextLabel];
  objc_msgSend(v25, "setNumberOfLines:", 0);
  if (qword_100805DD8 != -1)
    swift_once(&qword_100805DD8, sub_100484524);
  v26 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_10000EFC4(v26, (uint64_t)qword_100825870);
  v30 = v23;
  Conditional.evaluate(with:)(&v31, &v30, v26);
  objc_msgSend(v25, "setTextAlignment:", v31);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[v24]);
  v27 = *(void **)&v23[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_textLabel];
  objc_msgSend(v27, "setNumberOfLines:", 0);
  v30 = v23;
  Conditional.evaluate(with:)(&v31, &v30, v26);
  objc_msgSend(v27, "setTextAlignment:", v31);
  objc_msgSend(v23, "addSubview:", v27);
  v28 = *(void **)&v23[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_listTextLabel];
  objc_msgSend(v28, "setNumberOfLines:", 0);
  v30 = v23;
  Conditional.evaluate(with:)(&v31, &v30, v26);
  objc_msgSend(v28, "setTextAlignment:", v31);
  objc_msgSend(v23, "addSubview:", v28);

  return v23;
}

double sub_100484C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  _BYTE v24[24];
  _BYTE v25[24];
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[5];
  _QWORD v29[5];

  v1 = type metadata accessor for ProductAnnotationLayout.ItemLayout.Metrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100805DD0 != -1)
    swift_once(&qword_100805DD0, sub_10048447C);
  v5 = sub_10000EFC4(v1, (uint64_t)qword_100868BA8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = *(void **)(v0 + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingTextLabel);
  v7 = type metadata accessor for DynamicTypeLabel(0);
  v29[3] = v7;
  v29[4] = &protocol witness table for UILabel;
  v29[0] = v6;
  v8 = *(void **)(v0 + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_headingArtworkView);
  v28[3] = type metadata accessor for AnnotationImagesView(0);
  v28[4] = &protocol witness table for UIView;
  v27[4] = &protocol witness table for UILabel;
  v28[0] = v8;
  v9 = *(void **)(v0 + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_textLabel);
  v27[3] = v7;
  v26[4] = &protocol witness table for UILabel;
  v27[0] = v9;
  v10 = *(void **)(v0 + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_listTextLabel);
  v26[3] = v7;
  v26[0] = v10;
  v11 = (uint64_t *)(v0 + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels);
  swift_beginAccess(v0 + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels, v25, 0, 0);
  v12 = *v11;
  v13 = v6;
  v14 = v8;
  v15 = v9;
  v16 = v10;
  swift_bridgeObjectRetain(v12);
  v18 = sub_1003AFAF0(v17);
  swift_bridgeObjectRelease(v12);
  v19 = (uint64_t *)(v0
                  + OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_trailingPairLabels);
  swift_beginAccess(v19, v24, 0, 0);
  v20 = *v19;
  swift_bridgeObjectRetain(v20);
  v22 = sub_1003AFAF0(v21);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)&result = ProductAnnotationLayout.ItemLayout.init(metrics:headingText:headingArtwork:text:listText:leadingTextPairs:trailingTextPairs:)(v4, v29, v28, v27, v26, v18, v22).n128_u64[0];
  return result;
}

double sub_100485040(void *a1, void *a2, uint64_t a3, __n128 a4, double a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  id v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(_QWORD *, uint64_t, uint64_t);
  id v64;
  char v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  char v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void *v81;
  id v82;
  _QWORD *v83;
  id v84;
  id v85;
  char v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  double v91;
  void (*v92)(_QWORD *, uint64_t);
  uint64_t v93;
  int v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  char *v121;
  _QWORD v122[5];
  _QWORD v123[5];
  _QWORD v124[5];
  _QWORD v125[5];
  char v126[8];
  char v127[8];

  v108 = a3;
  v105 = a2;
  v7 = a4.n128_u64[0];
  v117 = type metadata accessor for LabelPlaceholderCompatibility(0, a4);
  v107 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v113 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v109 = (char *)&v96 - v10;
  __chkstk_darwin(v11);
  v106 = (char *)&v96 - v12;
  v13 = type metadata accessor for ProductAnnotationLayout.ItemLayout.Metrics(0);
  v104 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v121 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for ProductAnnotationLayout.ItemLayout(0, v14);
  v116 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v114 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for FontUseCase(0);
  v112 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v18 = (uint64_t *)((char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v96 - v20);
  if (qword_100805DE8 != -1)
    swift_once(&qword_100805DE8, sub_1004845DC);
  v22 = sub_10000DAF8(&qword_100812250);
  sub_10000EFC4(v22, (uint64_t)qword_1008258A0);
  v125[0] = a1;
  Conditional.evaluate(with:)(v21, v125, v22);
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  swift_getObjectType();
  v23 = objc_msgSend(a1, "traitCollection");
  v110 = v21;
  v24 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v21, v23);

  if (qword_100805DF0 != -1)
    swift_once(&qword_100805DF0, sub_100484744);
  sub_10000EFC4(v22, (uint64_t)qword_1008258B8);
  v125[0] = a1;
  Conditional.evaluate(with:)(v18, v125, v22);
  v25 = objc_msgSend(a1, "traitCollection");
  v111 = v18;
  v99 = (id)static UIFont.preferredFont(forUseWith:compatibleWith:)(v18, v25);

  v26 = v108;
  v27 = AnnotationItem_V2.headingArtworkItems.getter();
  v28.n128_u64[0] = v7;
  sub_100607320(v27, (uint64_t)a1, v28, a5);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_bridgeObjectRelease(v27);
  v37 = type metadata accessor for LayoutViewPlaceholder(0);
  v38 = *(unsigned int *)(v37 + 48);
  v39 = *(unsigned __int16 *)(v37 + 52);
  v101 = v37;
  swift_allocObject(v37, v38, v39);
  v40 = LayoutViewPlaceholder.init(measurements:)(v30, v32, v34, v36);
  v41 = AnnotationItem_V2.headingArtworkItems.getter();
  v42 = type metadata accessor for Artwork(0);
  v43 = Array.isNotEmpty.getter(v41, v42);
  v44 = swift_bridgeObjectRelease(v41);
  v120 = v40;
  LayoutViewPlaceholder.hasContent.setter(v43 & 1, v44);
  v45 = sub_100485970(v26, a1) & 1;
  v47 = AnnotationItem_V2.textPairs.getter(v46);
  v48 = v24;
  v103 = sub_10048625C(v47, v48, v45, v49, (uint64_t)v127, (uint64_t (*)(__n128))&AnnotationItem_V2.TextPair.leadingText.getter);
  swift_bridgeObjectRelease(v47);

  v51 = AnnotationItem_V2.textPairs.getter(v50);
  v52 = v48;
  v100 = v45;
  v102 = sub_10048625C(v51, v52, v45, v53, (uint64_t)v126, (uint64_t (*)(__n128))&AnnotationItem_V2.TextPair.trailingText.getter);
  swift_bridgeObjectRelease(v51);
  v97 = v52;

  v119 = a1;
  v98 = sub_1004859FC(v26, a1);
  if (qword_100805DD0 != -1)
    swift_once(&qword_100805DD0, sub_10048447C);
  v54 = sub_10000EFC4(v13, (uint64_t)qword_100868BA8);
  v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 16))(v121, v54, v13);
  v56 = AnnotationItem_V2.heading.getter(v55);
  v58 = v57;
  v59 = type metadata accessor for Feature(0);
  v125[3] = v59;
  v60 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v125[4] = v60;
  v61 = sub_1000119C0(v125);
  v62 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v63 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104);
  v63(v61, enum case for Feature.measurement_with_labelplaceholder(_:), v59);
  v64 = v99;
  v65 = isFeatureEnabled(_:)(v125);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v125);
  v66 = v106;
  v105 = v64;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v56, v58, v64, 4, 0, 0, 0, 0, v65 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v125, v67);
  v68 = *(void (**)(char *, uint64_t))(v107 + 8);
  v69 = v66;
  v70 = v117;
  v68(v69, v117);
  v124[3] = v101;
  v124[4] = &protocol witness table for LayoutViewPlaceholder;
  v124[0] = v120;
  swift_retain(v120);
  v72 = AnnotationItem_V2.text.getter(v71);
  v74 = v73;
  v123[3] = v59;
  v123[4] = v60;
  v75 = sub_1000119C0(v123);
  v63(v75, v62, v59);
  v76 = v97;
  LOBYTE(v64) = isFeatureEnabled(_:)(v123);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v123);
  v77 = v64 & 1;
  v78 = v70;
  LOBYTE(v95) = v77;
  v79 = v109;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v72, v74, v76, 4, 0, 0, v100, 0, v95);
  LabelPlaceholderCompatibility.layoutTextView.getter(v123, v80);
  v68(v79, v78);
  v81 = v98;
  v82 = v98;
  if (!v98)
    v82 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  v122[3] = v59;
  v122[4] = v60;
  v83 = sub_1000119C0(v122);
  v63(v83, v62, v59);
  v84 = v81;
  v85 = v76;
  v86 = isFeatureEnabled(_:)(v122);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v122);
  v87 = v86 & 1;
  v88 = v113;
  v89 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v82, v85, 4, 0, 0, 0, 0, v87);
  LabelPlaceholderCompatibility.layoutTextView.getter(v122, v89);
  v68(v88, v78);
  v90 = v114;
  ProductAnnotationLayout.ItemLayout.init(metrics:headingText:headingArtwork:text:listText:leadingTextPairs:trailingTextPairs:)(v121, v125, v124, v123, v122, v103, v102);
  v91 = ProductAnnotationLayout.ItemLayout.measurements(fitting:in:)(v119, *(double *)&v7, 1.79769313e308);

  swift_release();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v90, v118);
  v92 = *(void (**)(_QWORD *, uint64_t))(v112 + 8);
  v93 = v115;
  v92(v111, v115);
  v92(v110, v93);
  return v91;
}

uint64_t _s8ItemViewCMa()
{
  return objc_opt_self(_TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView);
}

uint64_t sub_100485970(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  char v7;
  char v8;

  v3 = AnnotationItem_V2.textPairs.getter();
  v4 = type metadata accessor for AnnotationItem_V2.TextPair(0);
  v5 = Array.isNotEmpty.getter(v3, v4);
  swift_bridgeObjectRelease(v3);
  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(a2, "traitCollection");
    v7 = UITraitCollection.prefersAccessibilityLayouts.getter(v6);

    v8 = v7 ^ 1;
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

id sub_1004859FC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  double v32;
  id v33;
  Class isa;
  char *v35;
  __n128 v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t inited;
  NSString *v41;
  id v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  NSString v46;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD v57[2];
  _QWORD v58[2];
  char v59[72];
  _QWORD v60[6];

  v3 = type metadata accessor for Locale(0);
  v56 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v55 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for FloatingPointRoundingRule(0);
  v53 = *(_QWORD *)(v54 - 8);
  v5 = __chkstk_darwin(v54);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontSource(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticDimension(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = AnnotationItem_V2.listText.getter(v14);
  if (!v18)
    return 0;
  v51 = v17;
  v50 = v3;
  v52 = v18;
  v49 = a2;
  v19 = objc_msgSend(a2, "traitCollection");
  v20 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v20 & 1) != 0)
  {
    v21 = v52;
    v60[0] = v51;
    v60[1] = v52;
    v58[0] = 161644770;
    v58[1] = 0xA400000000000000;
    v57[0] = 0x208F80E2A280E2;
    v57[1] = 0xA700000000000000;
    v22 = sub_1000FCE08();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v58, v57, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v22, v22, v22);
    v24 = v23;
    swift_bridgeObjectRelease(v21);
    v25 = objc_allocWithZone((Class)NSAttributedString);
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "initWithString:", v26, swift_bridgeObjectRelease(v24).n128_f64[0]);
  }
  else
  {
    if (qword_100806210 != -1)
      swift_once(&qword_100806210, sub_1004C70B4);
    v28 = type metadata accessor for FontUseCase(0);
    v29 = sub_10000EFC4(v28, (uint64_t)qword_100869708);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FontSource.useCase(_:), v8);
    v60[3] = v8;
    v60[4] = &protocol witness table for FontSource;
    v30 = sub_1000119C0(v60);
    (*(void (**)(_QWORD *, char *, uint64_t))(v9 + 16))(v30, v11, v8);
    StaticDimension.init(_:scaledLike:)(v60, 12.0);
    v31 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    static Dimensions.defaultRoundingRule.getter(v31);
    v32 = AnyDimension.value(in:rounded:)(v49, v7, v12, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v54);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v33 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    objc_msgSend(v33, "setFirstLineHeadIndent:", 0.0);
    objc_msgSend(v33, "setHeadIndent:", v32);
    objc_msgSend(v33, "setDefaultTabInterval:", v32);
    sub_100018B6C(0, &qword_100825938, NSTextTab_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "setTabStops:", isa);

    objc_msgSend(v33, "setParagraphSpacing:", 0.0);
    v35 = v55;
    static Locale.storefront.getter(v36);
    v38 = Locale.paragraphLineHeightMultiple.getter(v37);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v50);
    objc_msgSend(v33, "setLineHeightMultiple:", v38);
    v39 = sub_10000DAF8(&qword_100815380);
    inited = swift_initStackObject(v39, v59);
    *(_OWORD *)(inited + 16) = xmmword_100640720;
    *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
    *(_QWORD *)(inited + 64) = sub_100018B6C(0, &qword_100814180, NSMutableParagraphStyle_ptr);
    *(_QWORD *)(inited + 40) = v33;
    v41 = NSParagraphStyleAttributeName;
    v42 = v33;
    v43 = sub_100509728(inited);
    v44 = objc_allocWithZone((Class)NSAttributedString);
    v45 = v52;
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    type metadata accessor for Key(0);
    sub_10000E720((unint64_t *)&qword_100807520, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10064059C);
    v26 = Dictionary._bridgeToObjectiveC()().super.isa;
    v27 = objc_msgSend(v44, "initWithString:attributes:", v46, v26, swift_bridgeObjectRelease(v43).n128_f64[0]);

  }
  return v27;
}

id sub_100485F8C(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  NSString v24;
  void *v26;
  void *v27;

  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (void **)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(a4, "traitCollection", v11);
  v15 = UITraitCollection.prefersAccessibilityLayouts.getter(v14);

  if (qword_100805DE8 != -1)
    swift_once(&qword_100805DE8, sub_1004845DC);
  v16 = sub_10000DAF8(&qword_100812250);
  sub_10000EFC4(v16, (uint64_t)qword_1008258A0);
  v27 = a4;
  Conditional.evaluate(with:)(v13, &v27, v16);
  if (((v15 | a3) & 1) != 0)
  {
    if (qword_100805DD8 != -1)
      swift_once(&qword_100805DD8, sub_100484524);
    v17 = sub_10000DAF8((uint64_t *)&unk_100808820);
    v18 = v17;
    v19 = qword_100825870;
  }
  else
  {
    if (qword_100805DE0 != -1)
      swift_once(&qword_100805DE0, sub_100484538);
    v17 = sub_10000DAF8((uint64_t *)&unk_100808820);
    v18 = v17;
    v19 = qword_100825888;
  }
  sub_10000EFC4(v17, (uint64_t)v19);
  v26 = a4;
  Conditional.evaluate(with:)(&v27, &v26, v18);
  v20 = v27;
  v21 = type metadata accessor for DynamicTypeLabel(0);
  v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21)), "init");
  (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 16))(v8, v13, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v8);
  objc_msgSend(v22, "setNumberOfLines:", (v15 & 1) == 0);
  if ((v15 & 1) != 0)
    v23 = 0;
  else
    v23 = 4;
  objc_msgSend(v22, "setLineBreakMode:", v23);
  objc_msgSend(v22, "setTextAlignment:", v20);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v24);

  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  return v22;
}

uint64_t sub_10048625C(uint64_t a1, void *a2, uint64_t a3, __n128 a4, uint64_t a5, uint64_t (*a6)(__n128))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double *v13;
  uint64_t result;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t (*v43)(__n128);
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  double *v47;

  v42 = a3;
  v43 = a6;
  v7 = v6;
  v41 = a2;
  v9 = type metadata accessor for LabelPlaceholderCompatibility(0, a4);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v13 = _swiftEmptyArrayStorage;
    if (!v12)
      return (uint64_t)v13;
    v47 = _swiftEmptyArrayStorage;
    result = sub_1001F174C(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
      break;
    v35 = v7;
    v7 = 0;
    v13 = v47;
    v37 = a1 & 0xC000000000000001;
    v36 = enum case for Feature.measurement_with_labelplaceholder(_:);
    v38 = a1;
    while (v12 != v7)
    {
      if (v37)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v15 = swift_retain(*(_QWORD *)(a1 + 8 * v7 + 32));
      v16 = v43(v15);
      v18 = v17;
      v19 = type metadata accessor for Feature(0);
      v45 = v19;
      v46 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v20 = sub_1000119C0(v44);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, v36, v19);
      v21 = v41;
      v22 = isFeatureEnabled(_:)(v44);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v44);
      LOBYTE(v34) = v22 & 1;
      LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v16, v18, v21, 4, 0, 0, v42, 0, v34);
      LabelPlaceholderCompatibility.layoutTextView.getter(v44, v23);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
      swift_release();
      v47 = v13;
      v25 = *((_QWORD *)v13 + 2);
      v24 = *((_QWORD *)v13 + 3);
      if (v25 >= v24 >> 1)
        sub_1001F174C(v24 > 1, v25 + 1, 1);
      ++v7;
      v26 = v45;
      v27 = v46;
      v28 = sub_100085788((uint64_t)v44, v45);
      v29 = __chkstk_darwin(v28);
      v31 = (char *)&v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v32 + 16))(v31, v29);
      sub_10036E9AC(v25, (uint64_t)v31, (uint64_t *)&v47, v26, v27);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v44);
      v13 = v47;
      a1 = v38;
      if (v12 == v7)
        return (uint64_t)v13;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v33 = a1;
    else
      v33 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_10048654C(uint64_t a1, char *a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v4 = AnnotationItem_V2.TextPair.leadingText.getter(a1, a3);
  v6 = v5;
  v7 = sub_100485F8C(v4, v5, 1, a2);
  v8 = swift_bridgeObjectRelease(v6);
  v9 = AnnotationItem_V2.TextPair.trailingText.getter(v8);
  v11 = v10;
  v12 = sub_100485F8C(v9, v10, 1, a2);
  swift_bridgeObjectRelease(v11);
  v13 = &a2[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels];
  swift_beginAccess(&a2[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_leadingPairLabels], v23, 33, 0);
  v14 = v7;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((*(_QWORD *)v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((*(_QWORD *)v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  swift_endAccess(v23);
  v18 = &a2[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_trailingPairLabels];
  swift_beginAccess(&a2[OBJC_IVAR____TtCC20ProductPageExtension28AnnotationCollectionViewCell8ItemView_trailingPairLabels], v23, 33, 0);
  v19 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((*(_QWORD *)v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)((*(_QWORD *)v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
  specialized Array._endMutation()(v22);
  objc_msgSend(a2, "addSubview:", v14, swift_endAccess(v23).n128_f64[0]);
  objc_msgSend(a2, "addSubview:", v19);

}

uint64_t sub_1004866D8@<X0>(char a1@<W0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, __n128 a8@<Q0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  int v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t *v99;

  v86 = a6;
  v95 = a4;
  v96 = a5;
  v98 = a2;
  v97 = a7;
  v10 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, a8);
  v92 = *(_QWORD *)(v10 - 8);
  v93 = v10;
  __chkstk_darwin(v10);
  v94 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_1008119D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v85 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v85 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v85 - v22;
  v24 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v24);
  v91 = (uint64_t)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (uint64_t *)((char *)&v85 - v27);
  v29 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v29);
  v90 = (uint64_t)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v85 - v32;
  v34 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v87 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v89 = (uint64_t)&v85 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v88 = (uint64_t)&v85 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v85 - v39;
  v42 = __chkstk_darwin(v41);
  v99 = (uint64_t *)((char *)&v85 - v43);
  if ((a3 & 1) != 0)
  {
    if (qword_100804B88 != -1)
      swift_once(&qword_100804B88, sub_10014FD60);
    v42.n128_u64[0] = qword_1008656C0;
    v44 = qword_1008656A8;
    *v28 = qword_1008656C0;
    v28[1] = v44;
    v45 = enum case for TitleHeaderLayout.AccessoryVerticalAlignment.corner(_:);
    v46 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v42);
    v47 = *(_QWORD *)(v46 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v47 + 104))(v28, v45, v46);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v46);
    if (qword_100804F18 != -1)
      swift_once(&qword_100804F18, sub_100231DD0);
    v48 = (uint64_t)v28;
    v49 = sub_10000EFC4(v34, (uint64_t)qword_1008660E0);
    sub_100034094(v49, (uint64_t)v99);
    v50 = 10.0;
    v51 = (uint64_t)v40;
    if (qword_100804F48 != -1)
      swift_once(&qword_100804F48, sub_10023364C);
    v52 = 1;
    v53 = qword_100866170;
LABEL_39:
    v73 = v51;
    goto LABEL_40;
  }
  v54 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v42);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v28, 1, 1, v54);
  if ((a1 & 1) != 0)
  {
    if ((v98 & 1) == 0)
    {
      sub_100018ADC(v86, (uint64_t)v20, &qword_1008119D0);
      v63 = type metadata accessor for ShelfHeader.Configuration(0);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v20, 1, v63) == 1)
      {
        sub_100010F2C((uint64_t)v20, &qword_1008119D0);
        v66 = 0;
      }
      else
      {
        v66 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
        v65.n128_f64[0] = (*(double (**)(char *, uint64_t))(v64 + 8))(v20, v63);
      }
      v51 = (uint64_t)v40;
      v48 = (uint64_t)v28;
      sub_100231A7C(v66, v99, v65);

      v50 = 16.0;
      if (qword_100804F40 != -1)
        swift_once(&qword_100804F40, sub_100233628);
      v52 = 1;
      v53 = qword_100866158;
      goto LABEL_39;
    }
    sub_100018ADC(v86, (uint64_t)v23, &qword_1008119D0);
    v55 = type metadata accessor for ShelfHeader.Configuration(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v23, 1, v55) == 1)
    {
      sub_100010F2C((uint64_t)v23, &qword_1008119D0);
      v58 = 0;
    }
    else
    {
      v58 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
      v57.n128_f64[0] = (*(double (**)(char *, uint64_t))(v56 + 8))(v23, v55);
    }
    sub_100231A7C(v58, v99, v57);

    if (qword_100804F58 != -1)
      swift_once(&qword_100804F58, sub_1002339D4);
    v48 = (uint64_t)v28;
    v71 = sub_10000EFC4(v34, (uint64_t)qword_1008661A0);
    v51 = (uint64_t)v40;
    v72 = (uint64_t)v40;
  }
  else
  {
    if ((v98 & 1) == 0)
    {
      sub_100018ADC(v86, (uint64_t)v14, &qword_1008119D0);
      v67 = type metadata accessor for ShelfHeader.Configuration(0);
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v14, 1, v67) == 1)
      {
        sub_100010F2C((uint64_t)v14, &qword_1008119D0);
        v70 = 0;
      }
      else
      {
        v70 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
        v69.n128_f64[0] = (*(double (**)(char *, uint64_t))(v68 + 8))(v14, v67);
      }
      v51 = (uint64_t)v40;
      v48 = (uint64_t)v28;
      sub_100231A7C(v70, v99, v69);

      v50 = 16.0;
      if (qword_100804F38 != -1)
        swift_once(&qword_100804F38, sub_100233604);
      v52 = 1;
      v53 = qword_100866140;
      goto LABEL_39;
    }
    sub_100018ADC(v86, (uint64_t)v17, &qword_1008119D0);
    v59 = type metadata accessor for ShelfHeader.Configuration(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v17, 1, v59) == 1)
    {
      sub_100010F2C((uint64_t)v17, &qword_1008119D0);
      v62 = 0;
    }
    else
    {
      v62 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
      v61.n128_f64[0] = (*(double (**)(char *, uint64_t))(v60 + 8))(v17, v59);
    }
    v51 = (uint64_t)v40;
    sub_100231A7C(v62, v99, v61);

    if (qword_100804F50 != -1)
      swift_once(&qword_100804F50, sub_1002339C0);
    v48 = (uint64_t)v28;
    v71 = sub_10000EFC4(v34, (uint64_t)qword_100866188);
    v72 = (uint64_t)v40;
  }
  sub_100034094(v71, v72);
  v50 = 16.0;
  if (qword_100804F30 != -1)
    swift_once(&qword_100804F30, sub_1002332D8);
  v52 = 0;
  v53 = qword_100866128;
  v73 = (uint64_t)v33;
LABEL_40:
  v74 = sub_10000EFC4(v34, (uint64_t)v53);
  sub_100034094(v74, v73);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v33, v52, 1, v34);
  v75 = v99;
  v76 = v88;
  sub_100034094((uint64_t)v99, v88);
  v77 = v89;
  sub_100034094(v51, v89);
  v78 = v90;
  sub_100018ADC((uint64_t)v33, v90, &qword_100811808);
  v79 = v48;
  v80 = v91;
  sub_100018ADC(v48, v91, &qword_1008119A8);
  v81 = (uint64_t)v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v94, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v93);
  sub_100035178();
  v82 = static UIColor.defaultLine.getter();
  v83.n128_f64[0] = v50;
  sub_10015001C(v76, v77, v78, v95 & 1, v96 & 1, v98 & 1, v80, v81, v97, v83, 0, v82);
  sub_100010F2C(v79, &qword_1008119A8);
  sub_100010F2C((uint64_t)v33, &qword_100811808);
  sub_100236928(v51);
  return sub_100236928((uint64_t)v75);
}

uint64_t sub_100486F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  return sub_100486F28(a1, (char *)sub_100232F50, a2, a3);
}

uint64_t sub_100486F28@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  v38 = a2;
  v6 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, a4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v33 - v20;
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v22 = sub_10000EFC4(v15, (uint64_t)qword_1008660C8);
  sub_100034094(v22, (uint64_t)v21);
  v36 = v18;
  ((void (*)(uint64_t))v38)(a1);
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  v24 = enum case for TitleHeaderLayout.AccessoryVerticalAlignment.firstLineCenter(_:);
  v25 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v23);
  v35 = v14;
  v26 = *(_QWORD *)(v25 - 8);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 104);
  v33(v11, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
  v27 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v37, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v6);
  sub_100035178();
  v34 = static UIColor.defaultLine.getter();
  v28 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v38 = v11;
  v29 = v6;
  v30 = v28[8];
  sub_1000CE854((uint64_t)v21, a3, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854((uint64_t)v36, a3 + v28[5], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v35, a3 + v28[6]);
  *(_BYTE *)(a3 + v28[7]) = 0;
  *(_BYTE *)(a3 + v30) = 0;
  *(_BYTE *)(a3 + v28[9]) = 0;
  *(_QWORD *)(a3 + v28[14]) = 0x4030000000000000;
  *(_QWORD *)(a3 + v28[12]) = 0;
  *(_QWORD *)(a3 + v28[13]) = v34;
  v31 = (uint64_t)v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3 + v28[11], v27, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(a3 + v28[10], v31, v25);
  sub_100010F2C(v31, &qword_1008119A8);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v33)(a3 + v28[10], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:), v25);
}

uint64_t sub_100487274@<X0>(char *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, _QWORD, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  char *v42;

  v42 = a1;
  v4 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, a3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v37 - v19;
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v21 = sub_10000EFC4(v14, (uint64_t)qword_1008660C8);
  sub_100034094(v21, (uint64_t)v20);
  v41 = v17;
  sub_100232F50(v42);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v23 = UITraitCollection.isSizeClassRegular.getter(v22);
  v25 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v24);
  v40 = v13;
  v26 = *(_QWORD *)(v25 - 8);
  v27 = (unsigned int *)&enum case for TitleHeaderLayout.AccessoryVerticalAlignment.center(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 104);
  if ((v23 & 1) == 0)
    v27 = (unsigned int *)&enum case for TitleHeaderLayout.AccessoryVerticalAlignment.firstLineCenter(_:);
  v29 = *v27;
  v38 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v26 + 104);
  v28(v10, v29, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v4);
  sub_100035178();
  v30 = static UIColor.defaultLine.getter();
  v39 = v7;
  v31 = v30;
  v32 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v42 = v10;
  v33 = v4;
  v34 = v32[8];
  sub_1000CE854((uint64_t)v20, a2, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854((uint64_t)v41, a2 + v32[5], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v40, a2 + v32[6]);
  *(_BYTE *)(a2 + v32[7]) = 0;
  *(_BYTE *)(a2 + v34) = 0;
  *(_BYTE *)(a2 + v32[9]) = 0;
  *(_QWORD *)(a2 + v32[14]) = 0x4030000000000000;
  *(_QWORD *)(a2 + v32[12]) = 0;
  *(_QWORD *)(a2 + v32[13]) = v31;
  v35 = (uint64_t)v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2 + v32[11], v39, v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v35, 1, v25) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(a2 + v32[10], v35, v25);
  sub_100010F2C(v35, &qword_1008119A8);
  return v38(a2 + v32[10], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:), v25);
}

uint64_t sub_1004875C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  return sub_100486F28(a1, (char *)sub_1002324B0, a2, a3);
}

uint64_t sub_1004875D4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t Main;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a2;
  v53 = type metadata accessor for TitleHeaderView.Style(0);
  v3 = __chkstk_darwin(v53);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v3);
  v56 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - v14;
  v16 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v47 - v21;
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v47 - v25;
  Main = JUScreenClassGetMain(v24);
  if ((a1 & 1) != 0)
  {
    if (Main == 1)
    {
      if (qword_100804FA8 != -1)
        swift_once(&qword_100804FA8, sub_1002352B0);
      v28 = qword_100866290;
    }
    else
    {
      if (qword_100804FA0 != -1)
        swift_once(&qword_100804FA0, sub_100234ED0);
      v28 = qword_100866278;
    }
    v30 = sub_10000EFC4(v16, (uint64_t)v28);
    sub_100034094(v30, (uint64_t)v26);
    if (qword_100804FB0 != -1)
      swift_once(&qword_100804FB0, sub_100235668);
    v31 = sub_10000EFC4(v16, (uint64_t)qword_1008662A8);
    sub_100034094(v31, (uint64_t)v15);
    v32 = 0;
  }
  else
  {
    if (Main == 1)
    {
      if (qword_100804F98 != -1)
        swift_once(&qword_100804F98, sub_100234B14);
      v29 = qword_100866260;
    }
    else
    {
      if (qword_100804F90 != -1)
        swift_once(&qword_100804F90, sub_100234B00);
      v29 = qword_100866248;
    }
    v33 = sub_10000EFC4(v16, (uint64_t)v29);
    sub_100034094(v33, (uint64_t)v26);
    v32 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v32, 1, v16);
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v34 = sub_10000EFC4(v16, (uint64_t)qword_1008660C8);
  sub_100034094(v34, (uint64_t)v22);
  v51 = v26;
  v35 = (uint64_t)v26;
  v36 = (uint64_t)v19;
  sub_100034094(v35, (uint64_t)v19);
  v54 = v15;
  sub_100018ADC((uint64_t)v15, (uint64_t)v12, &qword_100811808);
  v38 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v37);
  v48 = *(_QWORD *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v9, 1, 1, v38);
  v39 = v49;
  v40 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v49, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v50);
  sub_100035178();
  v47 = static UIColor.defaultLine.getter();
  v52 = v9;
  v41 = (int *)v53;
  v42 = *(int *)(v53 + 32);
  sub_1000CE854((uint64_t)v22, (uint64_t)v5, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854(v36, (uint64_t)&v5[v41[5]], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v12, (uint64_t)&v5[v41[6]]);
  v5[v41[7]] = 0;
  v5[v42] = 0;
  v5[v41[9]] = 1;
  *(_QWORD *)&v5[v41[14]] = 0x4030000000000000;
  *(_QWORD *)&v5[v41[12]] = 0;
  *(_QWORD *)&v5[v41[13]] = v47;
  v43 = v39;
  v44 = v48;
  v45 = (uint64_t)v52;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v5[v41[11]], v43, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v38) == 1)
  {
    sub_100010F2C(v45, &qword_1008119A8);
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(&v5[v41[10]], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.firstBaseline(_:), v38);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(&v5[v41[10]], v45, v38);
  }
  sub_1000CE854((uint64_t)v5, v55, type metadata accessor for TitleHeaderView.Style);
  sub_100010F2C((uint64_t)v54, &qword_100811808);
  return sub_100236928((uint64_t)v51);
}

uint64_t sub_100487B04@<X0>(int a1@<W0>, int a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, __n128 a7@<Q0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  void *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  _QWORD *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  void *v93;
  _BYTE v94[4];
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  int v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t *v110;

  v96 = a5;
  v95 = a1;
  v108 = a6;
  v10 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, a7);
  v105 = *(_QWORD *)(v10 - 8);
  v106 = v10;
  __chkstk_darwin(v10);
  v107 = &v94[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_10000DAF8(&qword_1008119D0);
  __chkstk_darwin(v12);
  v14 = &v94[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v94[-v16];
  __chkstk_darwin(v18);
  v20 = &v94[-v19];
  __chkstk_darwin(v21);
  v23 = &v94[-v22];
  __chkstk_darwin(v24);
  v26 = &v94[-v25];
  v27 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v27);
  v104 = &v94[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v29);
  v31 = &v94[-v30];
  v32 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v32);
  v103 = &v94[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v34);
  v102 = &v94[-v35];
  v36 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v97 = *(_QWORD *)(v36 - 8);
  v98 = v36;
  __chkstk_darwin(v36);
  v100 = &v94[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v38);
  v99 = &v94[-v39];
  __chkstk_darwin(v40);
  v42 = &v94[-v41];
  v44 = __chkstk_darwin(v43);
  v109 = v31;
  v110 = (uint64_t *)&v94[-v45];
  v101 = a2;
  if ((a3 & 1) != 0)
  {
    if (qword_100804B88 != -1)
      swift_once(&qword_100804B88, sub_10014FD60);
    v44.n128_u64[0] = qword_1008656C0;
    v46 = qword_1008656A8;
    v47 = v109;
    *v109 = qword_1008656C0;
    v47[1] = v46;
    v48 = enum case for TitleHeaderLayout.AccessoryVerticalAlignment.corner(_:);
    v49 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v44);
    v50 = *(_QWORD *)(v49 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v50 + 104))(v47, v48, v49);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    if (qword_100804F18 != -1)
      swift_once(&qword_100804F18, sub_100231DD0);
    v51 = v98;
    v52 = sub_10000EFC4(v98, (uint64_t)qword_1008660E0);
    sub_100034094(v52, (uint64_t)v110);
    v53 = 10.0;
    v54 = v102;
    if (qword_100804F48 != -1)
      swift_once(&qword_100804F48, sub_10023364C);
    v55 = 1;
    v56 = qword_100866170;
LABEL_9:
    v57 = (uint64_t)v42;
    goto LABEL_37;
  }
  v58 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v44);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v31, 1, 1, v58);
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_100018ADC(v96, (uint64_t)v26, &qword_1008119D0);
      v59 = type metadata accessor for ShelfHeader.Configuration(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v60 + 48))(v26, 1, v59) == 1)
      {
        sub_100010F2C((uint64_t)v26, &qword_1008119D0);
        v62 = 0;
      }
      else
      {
        v62 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
        v61.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v60 + 8))(v26, v59);
      }
      v54 = v102;
      sub_100231A7C(v62, v110, v61);

      if (qword_100804F80 != -1)
        swift_once(&qword_100804F80, sub_10023442C);
      v75 = qword_100866218;
      v51 = v98;
    }
    else
    {
      sub_100018ADC(v96, (uint64_t)v23, &qword_1008119D0);
      v67 = type metadata accessor for ShelfHeader.Configuration(0);
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v68 + 48))(v23, 1, v67) == 1)
      {
        sub_100010F2C((uint64_t)v23, &qword_1008119D0);
        v70 = 0;
      }
      else
      {
        v70 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
        v69.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v68 + 8))(v23, v67);
      }
      v54 = v102;
      v51 = v98;
      sub_100231A7C(v70, v110, v69);

      if (qword_100804F70 != -1)
        swift_once(&qword_100804F70, sub_100234408);
      v75 = qword_1008661E8;
    }
    v76 = sub_10000EFC4(v51, (uint64_t)v75);
    sub_100034094(v76, (uint64_t)v42);
    v53 = 16.0;
    if (qword_100804F30 != -1)
      swift_once(&qword_100804F30, sub_1002332D8);
    v55 = 0;
    v56 = qword_100866128;
    v57 = (uint64_t)v54;
  }
  else
  {
    if ((a4 & 1) == 0)
    {
      if ((v95 & 1) != 0)
      {
        sub_100018ADC(v96, (uint64_t)v17, &qword_1008119D0);
        v71 = type metadata accessor for ShelfHeader.Configuration(0);
        v72 = *(_QWORD *)(v71 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v72 + 48))(v17, 1, v71) == 1)
        {
          sub_100010F2C((uint64_t)v17, &qword_1008119D0);
          v74 = 0;
        }
        else
        {
          v74 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
          v73.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v72 + 8))(v17, v71);
        }
        v54 = v102;
        v51 = v98;
        sub_100231A84(v74, v110, v73);

        v53 = 16.0;
        if (qword_100804F68 != -1)
          swift_once(&qword_100804F68, sub_1002340C0);
        v55 = 1;
        v56 = qword_1008661D0;
      }
      else
      {
        sub_100018ADC(v96, (uint64_t)v14, &qword_1008119D0);
        v90 = type metadata accessor for ShelfHeader.Configuration(0);
        v91 = *(_QWORD *)(v90 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v91 + 48))(v14, 1, v90) == 1)
        {
          sub_100010F2C((uint64_t)v14, &qword_1008119D0);
          v93 = 0;
        }
        else
        {
          v93 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
          v92.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v91 + 8))(v14, v90);
        }
        v54 = v102;
        v51 = v98;
        sub_100231A7C(v93, v110, v92);

        v53 = 16.0;
        if (qword_100804F60 != -1)
          swift_once(&qword_100804F60, sub_100233D74);
        v55 = 1;
        v56 = qword_1008661B8;
      }
      goto LABEL_9;
    }
    sub_100018ADC(v96, (uint64_t)v20, &qword_1008119D0);
    v63 = type metadata accessor for ShelfHeader.Configuration(0);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v64 + 48))(v20, 1, v63) == 1)
    {
      sub_100010F2C((uint64_t)v20, &qword_1008119D0);
      v66 = 0;
    }
    else
    {
      v66 = (void *)ShelfHeader.Configuration.eyebrowColor.getter();
      v65.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v64 + 8))(v20, v63);
    }
    v51 = v98;
    sub_100231A7C(v66, v110, v65);

    v53 = 16.0;
    if (qword_100804F78 != -1)
      swift_once(&qword_100804F78, sub_10023441C);
    v55 = 1;
    v56 = qword_100866200;
    v57 = (uint64_t)v42;
    v54 = v102;
  }
LABEL_37:
  v77 = sub_10000EFC4(v51, (uint64_t)v56);
  sub_100034094(v77, v57);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v54, v55, 1, v51);
  v78 = v110;
  v79 = v99;
  sub_100034094((uint64_t)v110, (uint64_t)v99);
  v80 = (uint64_t)v54;
  v81 = v100;
  sub_100034094((uint64_t)v42, (uint64_t)v100);
  v82 = v103;
  sub_100018ADC(v80, (uint64_t)v103, &qword_100811808);
  v83 = (uint64_t)v42;
  v84 = v109;
  v85 = v104;
  sub_100018ADC((uint64_t)v109, (uint64_t)v104, &qword_1008119A8);
  v86 = (uint64_t)v107;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v105 + 104))(v107, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v106);
  sub_100035178();
  v87 = static UIColor.defaultLine.getter();
  v88.n128_f64[0] = v53;
  sub_10015001C((uint64_t)v79, (uint64_t)v81, (uint64_t)v82, 0, 0, v101 & 1, (uint64_t)v85, v86, v108, v88, 0, v87);
  sub_100010F2C((uint64_t)v84, &qword_1008119A8);
  sub_100010F2C(v80, &qword_100811808);
  sub_100236928(v83);
  return sub_100236928((uint64_t)v78);
}

uint64_t sub_100488424@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  unsigned int *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char v35;
  unsigned int *v36;
  unint64_t v37;
  uint64_t v38;
  __n128 v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a3;
  v6 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, a4);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v43 - v20;
  v22 = type metadata accessor for ASKBagContract(0);
  if (*(_QWORD *)(a2 + qword_10086B3D8))
  {
    v23 = swift_retain(*(_QWORD *)(a2 + qword_10086B3D8));
    v24 = ASKBagContract.todayAdMediumLockupScreenshotsEnabled.getter(v23);
    swift_release();
    if (qword_100804F10 != -1)
      swift_once(&qword_100804F10, sub_100231A2C);
    v25 = sub_10000EFC4(v15, (uint64_t)qword_1008660C8);
    sub_100034094(v25, (uint64_t)v21);
    sub_1002324B0(a1, v18, v26);
    sub_1002328D0(v14, v27);
    v28 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((UITraitCollection.isSizeClassCompact.getter(v28) & 1) != 0)
    {
      v30 = (unsigned int *)&enum case for TitleHeaderLayout.AccessoryVerticalAlignment.firstLineCenter(_:);
    }
    else
    {
      *v11 = 0;
      v11[1] = 0;
      v30 = (unsigned int *)&enum case for TitleHeaderLayout.AccessoryVerticalAlignment.corner(_:);
    }
    v31 = *v30;
    v32 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v29);
    v33.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v11, v31, v32);
    type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v33);
    v34 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 0, 1, v32);
    v35 = UITraitCollection.isSizeClassCompact.getter(v34);
    v36 = (unsigned int *)&enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:);
    if ((v35 & 1) == 0)
      v36 = (unsigned int *)&enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.centered(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v8, *v36, v45);
    v37 = sub_100035178();
    v42 = static UIColor.defaultLine.getter(v37, v38);
    if ((v24 & 1) != 0)
      v40 = 2;
    else
      v40 = 1;
    v39.n128_u64[0] = 16.0;
    return sub_10015001C((uint64_t)v21, (uint64_t)v18, (uint64_t)v14, 0, 0, v40, (uint64_t)v11, (uint64_t)v8, v46, v39, 0, v42);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v22, v22);
    __break(1u);
  }
  return result;
}

uint64_t sub_100488710()
{
  int *v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v0 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v1);
  v4 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v35 = (uint64_t)&v31 - v18;
  sub_100011980((uint64_t)v0, qword_100868BC0);
  v33 = sub_10000EFC4((uint64_t)v0, (uint64_t)qword_100868BC0);
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v19 = sub_10000EFC4(v13, (uint64_t)qword_1008660C8);
  sub_100034094(v19, v35);
  if (qword_100804F20 != -1)
    swift_once(&qword_100804F20, sub_100232150);
  v20 = sub_10000EFC4(v13, (uint64_t)qword_1008660F8);
  sub_100034094(v20, (uint64_t)v16);
  v21.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v22 = enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastLineCenter(_:);
  v23 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v21);
  v32 = v12;
  v24 = *(_QWORD *)(v23 - 8);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 104);
  v31(v9, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v36);
  v25 = sub_100035178();
  v27 = static UIColor.defaultLine.getter(v25, v26);
  v34 = v9;
  v28 = v0[8];
  sub_1000CE854(v35, (uint64_t)v3, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854((uint64_t)v16, (uint64_t)&v3[v0[5]], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v32, (uint64_t)&v3[v0[6]]);
  v3[v0[7]] = 0;
  v3[v28] = 0;
  v3[v0[9]] = 0;
  *(_QWORD *)&v3[v0[14]] = 0x4030000000000000;
  *(_QWORD *)&v3[v0[12]] = 0;
  *(_QWORD *)&v3[v0[13]] = v27;
  v29 = (uint64_t)v34;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v3[v0[11]], v6, v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23) == 1)
  {
    sub_100010F2C(v29, &qword_1008119A8);
    v31(&v3[v0[10]], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:), v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v3[v0[10]], v29, v23);
  }
  return sub_1000CE854((uint64_t)v3, v33, type metadata accessor for TitleHeaderView.Style);
}

uint64_t sub_100488AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100811808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100488B1C(uint64_t a1)
{
  return sub_1004892A8(a1, qword_100868BD8, byte_100804F88, (uint64_t)qword_100866230, (uint64_t)sub_1002347A4);
}

uint64_t sub_100488B40()
{
  int *v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v0 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v1);
  v4 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v34 = (uint64_t)&v30 - v18;
  sub_100011980((uint64_t)v0, qword_100868BF0);
  v32 = sub_10000EFC4((uint64_t)v0, (uint64_t)qword_100868BF0);
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v19 = sub_10000EFC4(v13, (uint64_t)qword_1008660C8);
  sub_100034094(v19, v34);
  if (qword_100804FB8 != -1)
    swift_once(&qword_100804FB8, sub_100235A20);
  v20 = sub_10000EFC4(v13, (uint64_t)qword_1008662C0);
  sub_100034094(v20, (uint64_t)v16);
  v21.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v22 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v21);
  v31 = v12;
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v9, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v35);
  v24 = sub_100035178();
  v26 = static UIColor.defaultLine.getter(v24, v25);
  v33 = v9;
  v27 = v0[8];
  sub_1000CE854(v34, (uint64_t)v3, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854((uint64_t)v16, (uint64_t)&v3[v0[5]], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v31, (uint64_t)&v3[v0[6]]);
  v3[v0[7]] = 1;
  v3[v27] = 0;
  v3[v0[9]] = 0;
  *(_QWORD *)&v3[v0[14]] = 0x4030000000000000;
  *(_QWORD *)&v3[v0[12]] = 0;
  *(_QWORD *)&v3[v0[13]] = v26;
  v28 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v3[v0[11]], v6, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22) == 1)
  {
    sub_100010F2C(v28, &qword_1008119A8);
    (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(&v3[v0[10]], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:), v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v3[v0[10]], v28, v22);
  }
  return sub_1000CE854((uint64_t)v3, v32, type metadata accessor for TitleHeaderView.Style);
}

uint64_t sub_100488EE4()
{
  int *v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v0 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v1);
  v4 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v34 = (uint64_t)&v30 - v18;
  sub_100011980((uint64_t)v0, qword_100868C08);
  v32 = sub_10000EFC4((uint64_t)v0, (uint64_t)qword_100868C08);
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v19 = sub_10000EFC4(v13, (uint64_t)qword_1008660C8);
  sub_100034094(v19, v34);
  if (qword_100804FC0 != -1)
    swift_once(&qword_100804FC0, sub_100235D7C);
  v20 = sub_10000EFC4(v13, (uint64_t)qword_1008662D8);
  sub_100034094(v20, (uint64_t)v16);
  v21.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v22 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v21);
  v31 = v12;
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v9, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.centered(_:), v35);
  v24 = sub_100035178();
  v26 = static UIColor.defaultLine.getter(v24, v25);
  v33 = v9;
  v27 = v0[8];
  sub_1000CE854(v34, (uint64_t)v3, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854((uint64_t)v16, (uint64_t)&v3[v0[5]], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v31, (uint64_t)&v3[v0[6]]);
  v3[v0[7]] = 0;
  v3[v27] = 0;
  v3[v0[9]] = 0;
  *(_QWORD *)&v3[v0[14]] = 0x4030000000000000;
  *(_QWORD *)&v3[v0[12]] = 0;
  *(_QWORD *)&v3[v0[13]] = v26;
  v28 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v3[v0[11]], v6, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22) == 1)
  {
    sub_100010F2C(v28, &qword_1008119A8);
    (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(&v3[v0[10]], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:), v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v3[v0[10]], v28, v22);
  }
  return sub_1000CE854((uint64_t)v3, v32, type metadata accessor for TitleHeaderView.Style);
}

uint64_t sub_100489284(uint64_t a1)
{
  return sub_1004892A8(a1, qword_100868C20, byte_100804FC8, (uint64_t)qword_1008662F0, (uint64_t)sub_1002360DC);
}

uint64_t sub_1004892A8(uint64_t a1, uint64_t *a2, char *a3, uint64_t a4, uint64_t a5)
{
  int *v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a5;
  v37 = a3;
  v39 = (char *)a4;
  v6 = (int *)type metadata accessor for TitleHeaderView.Style(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for TitleHeaderLayout.ChildrenHorizontalAlignment(0, v7);
  v10 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_1008119A8);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8(&qword_100811808);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v40 = (uint64_t)&v36 - v24;
  sub_100011980((uint64_t)v6, a2);
  v38 = sub_10000EFC4((uint64_t)v6, (uint64_t)a2);
  if (qword_100804F10 != -1)
    swift_once(&qword_100804F10, sub_100231A2C);
  v25 = sub_10000EFC4(v19, (uint64_t)qword_1008660C8);
  sub_100034094(v25, v40);
  if (*(_QWORD *)v37 != -1)
    swift_once(v37, v36);
  v26 = sub_10000EFC4(v19, (uint64_t)v39);
  sub_100034094(v26, (uint64_t)v22);
  v27.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  v28 = type metadata accessor for TitleHeaderLayout.AccessoryVerticalAlignment(0, v27);
  v37 = v18;
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v15, 1, 1, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for TitleHeaderLayout.ChildrenHorizontalAlignment.leading(_:), v41);
  v30 = sub_100035178();
  v32 = static UIColor.defaultLine.getter(v30, v31);
  v39 = v15;
  v33 = v6[8];
  sub_1000CE854(v40, (uint64_t)v9, type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_1000CE854((uint64_t)v22, (uint64_t)&v9[v6[5]], type metadata accessor for TitleHeaderView.TextConfiguration);
  sub_100488AD4((uint64_t)v37, (uint64_t)&v9[v6[6]]);
  v9[v6[7]] = 0;
  v9[v33] = 0;
  v9[v6[9]] = 0;
  *(_QWORD *)&v9[v6[14]] = 0x4030000000000000;
  *(_QWORD *)&v9[v6[12]] = 0;
  *(_QWORD *)&v9[v6[13]] = v32;
  v34 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v9[v6[11]], v12, v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28) == 1)
  {
    sub_100010F2C(v34, &qword_1008119A8);
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(&v9[v6[10]], enum case for TitleHeaderLayout.AccessoryVerticalAlignment.lastBaseline(_:), v28);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v9[v6[10]], v34, v28);
  }
  return sub_1000CE854((uint64_t)v9, v38, type metadata accessor for TitleHeaderView.Style);
}

char *sub_10048963C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  double left;
  double bottom;
  double right;
  char *v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v11[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_preferredImageSizes] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator] = 0;
  v13 = &v11[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for AppSearchResultContentView();
  v14 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = (char *)v14;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView]);
  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots]);

  return v18;
}

uint64_t sub_10048980C(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  if (!a1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v5 = v2;
  v6 = v4;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  return v7 & 1;
}

void (*sub_1004898A8(uint64_t *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t Strong;

  a1[1] = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia) == 1)
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots)+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  else
    Strong = 0;
  *a1 = Strong;
  return sub_100489914;
}

void sub_100489914(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10048FC80();

    v3 = v2;
  }
  else
  {
    sub_10048FC80();
    v3 = v4;
  }

}

id sub_100489978()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  char *v10;
  unint64_t v11;
  __n128 v12;
  double v13;
  double v14;
  id result;
  __n128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void (*v22)(_QWORD, _QWORD);
  void (*v23)(_QWORD, _QWORD);
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  double v40;
  double v41;
  id v42;
  __n128 v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  double v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  __int128 v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64[24];
  objc_super v65;
  CGRect v66;
  CGRect v67;

  v1 = v0;
  v2 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for AppSearchResultContentView();
  v65.receiver = v0;
  v65.super_class = v9;
  objc_msgSendSuper2(&v65, "layoutSubviews");
  v10 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView];
  LayoutMarginsAware<>.layoutFrame.getter(v9);
  v12.n128_u64[0] = v11;
  sub_10044F944(v12, v13);
  LayoutMarginsAware<>.layoutFrame.getter(v9);
  v14 = LayoutMarginsAware<>.layoutFrame.getter(v9);
  result = objc_msgSend(v10, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v0, v14));
  if (v0[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia] == 1)
  {
    v62 = v4;
    static StandardSearchResultContentViewMetrics.bottomMargin.getter(v16);
    v17 = objc_msgSend(v0, "traitCollection");
    v18 = type metadata accessor for TraitEnvironmentPlaceholder(0);
    v60 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v19 = swift_allocObject(v60, 40, 7);
    v58 = xmmword_100640AE0;
    *(_OWORD *)(v19 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v19 + 32) = v17;
    v20 = v17;
    v61 = v18;
    v21 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v19);
    v59 = sub_100354980();
    dispatch thunk of AnyDimension.rawValue(in:)(v21, v5, v59);

    v57 = *(void (**)(char *, uint64_t))(v6 + 8);
    v57(v8, v5);
    v66.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v9);
    CGRectGetMinX(v66);
    objc_msgSend(v10, "frame");
    CGRectGetMaxY(v67);
    v22 = *(void (**)(_QWORD, _QWORD))&v10[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_title + 8];
    v56 = *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_title];
    v23 = v22;
    v24 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel], "text", swift_bridgeObjectRetain(v22).n128_f64[0]);
    if (v24)
    {
      v25 = v24;
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v63 = v26;

    }
    else
    {
      v54 = 0;
      v63 = 0;
    }
    v53 = v8;
    v27 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_descriptionLabel], "text");
    v55 = v5;
    if (v27)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    v32 = (uint64_t *)(*(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView]
                    + OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemModels);
    swift_beginAccess(v32, v64, 0, 0);
    v52 = *v32;
    v33 = v52;
    swift_bridgeObjectRetain(v52);
    v34 = (uint64_t)v62;
    _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
    v35 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
    v36 = *(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_searchTagsRibbonView]
                    + OBJC_IVAR____TtC20ProductPageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
    swift_bridgeObjectRetain(v36);
    v37 = LayoutMarginsAware<>.layoutFrame.getter(v9);
    v39 = v38;
    v41 = v40;
    v42 = objc_msgSend(v1, "traitCollection", v37);
    v43.n128_u64[0] = v39;
    v44.n128_f64[0] = sub_100452B44(v56, v23, v54, v63, v29, v31, v33, v34, v43, v41, v36, v42);
    v45 = v53;
    static StandardSearchResultContentViewMetrics.bottomMargin.getter(v44);
    v46 = swift_allocObject(v60, 40, 7);
    *(_OWORD *)(v46 + 16) = v58;
    *(_QWORD *)(v46 + 32) = v42;
    v47 = v42;
    v48 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v46);
    v49 = v55;
    dispatch thunk of AnyDimension.rawValue(in:)(v48, v55, v59);

    v57(v45, v49);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v36);

    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v63);
    sub_100010F2C(v34, (uint64_t *)&unk_100825010);
    v50 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots];
    objc_msgSend(v1, "bounds");
    return objc_msgSend(v50, "setFrame:", CGRect.withLayoutDirection(in:relativeTo:)(v1, v51));
  }
  return result;
}

void sub_100489EE4(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  _BYTE *v3;
  _BYTE *v4;
  void *v5;
  char v6;

  v4 = v3;
  sub_10044FE7C(a1, a2, a3);
  v5 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots];
  sub_10048E89C();
  v6 = v4[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia];
  v4[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia] = 1;
  if ((v6 & 1) == 0)
  {
    objc_msgSend(v5, "setHidden:", 0);
    objc_msgSend(v4, "setNeedsLayout");
  }
}

_QWORD *sub_100489F74(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *result;
  __n128 v22;
  __n128 v23;
  double v24;
  char v25;
  uint64_t v26;
  int v27;
  char **v28;
  __n128 v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  __n128 v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;

  v3 = v2;
  v70 = a2;
  swift_getObjectType();
  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v64 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v8);
  v65 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_1008081F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PageGrid(0);
  v68 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v66 = *(_QWORD *)(v16 - 8);
  v67 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AppSearchResult(0);
  v20 = sub_100020248(&qword_1008259D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(&v72, v19, v19, v20);
  if (v72)
  {
    v62 = v6;
    v63 = v5;
    v71 = AppSearchResult.lockup.getter(v22);
    v24 = MixedMediaLockup.screenshotsDisplayStyle.getter(v23);
    v25 = dispatch thunk of AppSearchResult.shouldDisplayMedia.getter(v24);
    v26 = OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia;
    v27 = v3[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia];
    v3[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia] = v25 & 1;
    v28 = &selRef_fileURLWithPath_;
    if ((v25 & 1) != v27)
    {
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots], "setHidden:", (v25 & 1) == 0);
      objc_msgSend(v3, "setNeedsLayout");
    }
    static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
    v30 = PageGrid.interColumnSpace.getter(v29);
    v31 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView];
    *(double *)&v31[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = v30;
    objc_msgSend(v31, "setNeedsLayout");
    v32 = type metadata accessor for ItemLayoutContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
    v61 = type metadata accessor for ObjectGraph(0);
    v33 = swift_dynamicCastClassUnconditional(v70, v61, 0, 0, 0);
    sub_10030F2E4(v71, (uint64_t)v12, v33);
    sub_100010F2C((uint64_t)v12, &qword_1008081F0);
    if (v3[v26] != 1)
      goto LABEL_47;
    v35 = ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v34);
    if ((v35 & 1) == 0)
      goto LABEL_47;
    v36 = MixedMediaLockup.screenshots.getter(v35);
    v37 = v36;
    if ((unint64_t)v36 >> 62)
    {
      if (v36 >= 0)
        v36 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v36))
        goto LABEL_8;
    }
    else if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_8:
      if ((v37 & 0xC000000000000001) != 0)
      {
        v28 = (char **)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
      }
      else
      {
        if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_51;
        }
        v28 = *(char ***)(v37 + 32);
        swift_retain(v28);
      }
      swift_bridgeObjectRelease(v37);
LABEL_16:
      v39 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots];
      v40 = MixedMediaLockup.trailers.getter(v38);
      v37 = v40;
      if ((unint64_t)v40 >> 62)
      {
        if (v40 >= 0)
          v40 &= 0xFFFFFFFFFFFFFF8uLL;
        v42 = _CocoaArrayWrapper.endIndex.getter(v40);
        v60 = v39;
        if (v42)
        {
LABEL_18:
          if ((v37 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_53;
            }
            v59 = *(void **)(v37 + 32);
            swift_retain(v59);
            goto LABEL_21;
          }
LABEL_51:
          v59 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
LABEL_21:
          swift_bridgeObjectRelease(v37);
          goto LABEL_26;
        }
      }
      else
      {
        v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        v60 = v39;
        if (v41)
          goto LABEL_18;
      }
      swift_bridgeObjectRelease(v37);
      v59 = 0;
LABEL_26:
      type metadata accessor for ContentSearchResultCollectionViewCell();
      v44 = (id)ASKDeviceTypeGetCurrent(v43);
      swift_getKeyPath(&unk_100664C78);
      ItemLayoutContext.subscript.getter(&v72);
      swift_release();
      v45 = v72;
      sub_10023E078((uint64_t)v44, v65);

      v47 = MixedMediaLockup.screenshots.getter(v46);
      v37 = v47;
      if ((unint64_t)v47 >> 62)
      {
        if (v47 >= 0)
          v47 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v47))
        {
LABEL_28:
          if ((v37 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_55;
            }
            v45 = *(void **)(v37 + 32);
            swift_retain(v45);
            goto LABEL_31;
          }
LABEL_53:
          v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
LABEL_31:
          swift_bridgeObjectRelease(v37);
          goto LABEL_36;
        }
      }
      else if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      swift_bridgeObjectRelease(v37);
      v45 = 0;
LABEL_36:
      v49 = MixedMediaLockup.trailers.getter(v48);
      v37 = v49;
      if ((unint64_t)v49 >> 62)
      {
        if (v49 >= 0)
          v49 &= 0xFFFFFFFFFFFFFF8uLL;
        result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v49);
        if (result)
        {
LABEL_38:
          if ((v37 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return result;
            }
            v50 = *(_QWORD *)(v37 + 32);
            swift_retain(v50);
            goto LABEL_41;
          }
LABEL_55:
          v50 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
LABEL_41:
          v51 = swift_bridgeObjectRelease(v37);
LABEL_46:
          v52 = v64;
          sub_10048D0D4((uint64_t)v45, v50, (uint64_t)v18, v64, v51);
          swift_release();
          v53 = swift_release();
          v54 = (id)ASKDeviceTypeGetCurrent(v53);
          v55 = swift_dynamicCastClassUnconditional(v70, v61, 0, 0, 0);
          v56 = v65;
          sub_10010BD8C((uint64_t)v28, v59, v65, v52, (uint64_t)v18, v55);

          swift_release();
          v57 = swift_release();
          (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v52, v63, v57);
          sub_100010F2C(v56, (uint64_t *)&unk_100811F20);
LABEL_47:
          objc_msgSend(v3, "setNeedsLayout", v59, v60);
          swift_release();
          v58 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v15, v69, v58);
          return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v18, v67);
        }
      }
      else
      {
        result = *(_QWORD **)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (result)
          goto LABEL_38;
      }
      v51 = swift_bridgeObjectRelease(v37);
      v50 = 0;
      goto LABEL_46;
    }
    swift_bridgeObjectRelease(v37);
    v28 = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10048A5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator, v19, 1, 0);
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  *v4 = 0;
  swift_release();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock, v18, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = 0;
  v5[1] = 0;
  sub_100018908(v6, v7);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView);
  v9 = (_QWORD *)(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator, v17, 1, 0);
  if (*v9)
  {
    swift_retain(*v9);
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  *v9 = 0;
  swift_release();
  v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v8 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock, &v16, 1, 0);
  v11 = *v10;
  v12 = v10[1];
  *v10 = 0;
  v10[1] = 0;
  sub_100018908(v11, v12);
  v13 = type metadata accessor for SearchTagsRibbonView(0);
  v14 = sub_100020248(&qword_1008248A0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v13, v14);
}

id sub_10048A76C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppSearchResultContentView()
{
  return objc_opt_self(_TtC20ProductPageExtension26AppSearchResultContentView);
}

uint64_t sub_10048A838()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia) == 1)
    return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots)+ OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  else
    return 0;
}

void sub_10048A888(void *a1)
{
  sub_10048FC80();

}

uint64_t (*sub_10048A8C0(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1004898A8(v2);
  return sub_10001C148;
}

uint64_t sub_10048A904()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_10048A94C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_10048A99C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10048A9E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_10048AA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

uint64_t (*sub_10048AA94(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10048AAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_100020248(&qword_1008248A0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

uint64_t sub_10048AB68(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664C00, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10048AB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664C00, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_10048ABE8(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100664C00, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

uint64_t sub_10048AC50(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100825998, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView, (uint64_t)&unk_100664A8C);
}

uint64_t sub_10048AC7C(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_1008259A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView, (uint64_t)&unk_100664ABC);
}

uint64_t sub_10048ACA8(uint64_t a1, uint64_t a2)
{
  return sub_100020248((unint64_t *)&unk_1008259A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView, (uint64_t)&unk_100664AD8);
}

uint64_t sub_10048ACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100020248(&qword_1008259B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView, (uint64_t)&unk_100664B38);
  result = sub_100020248((unint64_t *)&unk_1008259C0, v3, (uint64_t (*)(uint64_t))type metadata accessor for AppSearchResultContentView, (uint64_t)&unk_100664B68);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_QWORD *sub_10048AD30(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *result;
  __n128 v26;
  void *v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  __n128 v35;
  __n128 v36;
  void (*v37)(_QWORD, _QWORD);
  void (*v38)(_QWORD, _QWORD);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  void *v53;
  __n128 v54;
  char *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  id v85;
  __n128 v86;
  __n128 v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  void *v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(_QWORD, _QWORD);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void *v106[2];

  v95 = type metadata accessor for LockupMediaLayout.DisplayType(0, a2);
  v3 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v97 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v5);
  v96 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v99 = *(_QWORD *)(v7 - 8);
  v100 = (void (*)(_QWORD, _QWORD))v7;
  __chkstk_darwin(v7);
  v98 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v9);
  v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PageGrid(0);
  v102 = *(_QWORD *)(v15 - 8);
  v103 = v15;
  __chkstk_darwin(v15);
  v104 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v17 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v88 - v21;
  v23 = type metadata accessor for AppSearchResult(0);
  v24 = sub_100020248(&qword_1008259D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(v106, v23, v23, v24);
  v27 = v106[0];
  if (!v106[0])
    return result;
  v28 = AppSearchResult.lockup.getter(v26);
  v30.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v29);
  v101 = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v30);
  if (qword_1008059F8 != -1)
    swift_once(&qword_1008059F8, sub_1003A0ECC);
  v31 = qword_100867D20;
  swift_bridgeObjectRetain(qword_100867D20);
  PageGrid.init(from:breakpointOverrides:)(v14, v31);
  v32 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v34 = v33;
  v90 = v27;
  LOBYTE(v31) = dispatch thunk of AppSearchResult.shouldDisplayMedia.getter(v32);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v105);
  v91 = v22;
  if ((v31 & 1) != 0)
    v92 = ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v35);
  else
    v92 = 0;
  v88 = v3;
  v89 = *(void (**)(char *, uint64_t))(v17 + 8);
  v89(v19, v105);
  v36 = swift_retain(v28);
  v94 = Lockup.title.getter(v36);
  v38 = v37;
  swift_release();
  v39 = swift_retain(v28);
  v93 = Lockup.subtitle.getter(v39);
  v41 = v40;
  swift_release();
  v42 = swift_retain(v28);
  v43 = Lockup.searchAd.getter(v42);
  v44 = swift_release();
  if (v43)
  {
    v45 = SearchAd.advertisingText.getter(v44);
    v47 = v46;
    v44 = swift_release();
  }
  else
  {
    v45 = 0;
    v47 = 0;
  }
  v48 = MixedMediaLockup.metadataRibbonItems.getter(v44);
  _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
  v49 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v50 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v11, 0, 1, v49);
  v51 = MixedMediaLockup.searchTagRibbonItems.getter(v50);
  swift_getKeyPath(&unk_100664C78);
  ItemLayoutContext.subscript.getter(v106);
  v52 = swift_release();
  v53 = v106[0];
  v52.n128_f64[0] = v32;
  sub_100452B44(v94, v38, v93, v41, v45, v47, v48, (uint64_t)v11, v52, v34, v51, v106[0]);

  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v38);
  sub_100010F2C((uint64_t)v11, (uint64_t *)&unk_100825010);
  if ((v92 & 1) == 0)
  {
    swift_release();
    v69 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v102 + 8))(v104, v103, v69);
    return (_QWORD *)((uint64_t (*)(char *, uint64_t))v89)(v91, v105);
  }
  v55 = v98;
  static StandardSearchResultContentViewMetrics.bottomMargin.getter(v54);
  swift_getKeyPath(&unk_100664C78);
  ItemLayoutContext.subscript.getter(v106);
  swift_release();
  v56 = v106[0];
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v57 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v58 = swift_allocObject(v57, 40, 7);
  *(_OWORD *)(v58 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v58 + 32) = v56;
  v59 = v56;
  v60 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v58);
  v61 = sub_100354980();
  v62 = (uint64_t)v100;
  dispatch thunk of AnyDimension.rawValue(in:)(v60, v100, v61);

  v63 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v55, v62);
  v64 = MixedMediaLockup.screenshots.getter(v63);
  v65 = v64;
  if ((unint64_t)v64 >> 62)
  {
    if (v64 >= 0)
      v64 &= 0xFFFFFFFFFFFFFF8uLL;
    v70 = _CocoaArrayWrapper.endIndex.getter(v64);
    v67 = (uint64_t)v96;
    v66 = (uint64_t)v97;
    if (v70)
      goto LABEL_14;
LABEL_22:
    swift_bridgeObjectRelease(v65);
    v60 = 0;
    goto LABEL_23;
  }
  v67 = (uint64_t)v96;
  v66 = (uint64_t)v97;
  if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_22;
LABEL_14:
  if ((v65 & 0xC000000000000001) != 0)
  {
    v60 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v65);
  }
  else
  {
    if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_56;
    }
    v60 = *(void **)(v65 + 32);
    swift_retain(v60);
  }
  swift_bridgeObjectRelease(v65);
LABEL_23:
  v71 = MixedMediaLockup.trailers.getter(v68);
  v65 = v71;
  if ((unint64_t)v71 >> 62)
  {
    if (v71 >= 0)
      v71 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v71))
    {
LABEL_25:
      if ((v65 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_58;
        }
        v38 = *(void (**)(_QWORD, _QWORD))(v65 + 32);
        swift_retain(v38);
        goto LABEL_28;
      }
LABEL_56:
      v38 = (void (*)(_QWORD, _QWORD))specialized _ArrayBuffer._getElementSlowPath(_:)(0, v65);
LABEL_28:
      swift_bridgeObjectRelease(v65);
      goto LABEL_33;
    }
  }
  else if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_25;
  }
  swift_bridgeObjectRelease(v65);
  v38 = 0;
LABEL_33:
  v72 = type metadata accessor for ContentSearchResultCollectionViewCell();
  v74 = (id)ASKDeviceTypeGetCurrent(v73);
  swift_getKeyPath(&unk_100664C78);
  ItemLayoutContext.subscript.getter(v106);
  swift_release();
  v75 = v106[0];
  sub_10023E078((uint64_t)v74, v67);

  v77 = MixedMediaLockup.screenshots.getter(v76);
  v65 = v77;
  if ((unint64_t)v77 >> 62)
  {
    if (v77 >= 0)
      v77 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v77))
    {
LABEL_35:
      if ((v65 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_60;
        }
        v72 = *(_QWORD *)(v65 + 32);
        swift_retain(v72);
        goto LABEL_38;
      }
LABEL_58:
      v72 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v65);
LABEL_38:
      swift_bridgeObjectRelease(v65);
      goto LABEL_43;
    }
  }
  else if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_35;
  }
  swift_bridgeObjectRelease(v65);
  v72 = 0;
LABEL_43:
  v79 = MixedMediaLockup.trailers.getter(v78);
  v65 = v79;
  if (!((unint64_t)v79 >> 62))
  {
    result = *(_QWORD **)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
    v100 = v38;
    if (result)
      goto LABEL_45;
LABEL_52:
    v80 = (uint64_t)v60;
    v81 = v67;
    swift_bridgeObjectRelease(v65);
    v82 = 0;
    goto LABEL_53;
  }
  if (v79 >= 0)
    v79 &= 0xFFFFFFFFFFFFFF8uLL;
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v79);
  v100 = v38;
  if (!result)
    goto LABEL_52;
LABEL_45:
  if ((v65 & 0xC000000000000001) != 0)
  {
LABEL_60:
    v80 = (uint64_t)v60;
    v81 = v67;
    v82 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v65);
    goto LABEL_48;
  }
  if (*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v80 = (uint64_t)v60;
    v81 = v67;
    v82 = *(_QWORD *)(v65 + 32);
    swift_retain(v82);
LABEL_48:
    swift_bridgeObjectRelease(v65);
LABEL_53:
    type metadata accessor for LockupMediaView(0);
    v83 = (uint64_t)v91;
    sub_10048D0D4(v72, v82, (uint64_t)v91, v66, v84);
    swift_release();
    swift_release();
    v85 = sub_10052A948();
    swift_getObjectType();
    v86.n128_f64[0] = v32;
    sub_10010BBCC(v80, (uint64_t)v100, v81, v86, v34, v66, (uint64_t)v85, v83);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    v87 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v88 + 8))(v66, v95, v87);
    sub_100010F2C(v81, (uint64_t *)&unk_100811F20);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v103);
    return (_QWORD *)((uint64_t (*)(uint64_t, uint64_t))v89)(v83, v105);
  }
  __break(1u);
  return result;
}

void sub_10048B660(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  double v61;
  char v62;
  __n128 v63;
  char v64;
  void (*v65)(char *, uint64_t);
  __n128 v66;
  void (*v67)(_QWORD, _QWORD);
  void (*v68)(_QWORD, _QWORD);
  __n128 v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  __n128 v85;
  __n128 v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  unint64_t v94;
  uint64_t v95;
  double v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  __n128 v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(_QWORD, _QWORD);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE v126[48];

  v7 = v6;
  v12 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v123 = *(_QWORD *)(v12 - 8);
  v124 = v12;
  __chkstk_darwin(v12);
  v122 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v14);
  v16 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v110 - v22;
  v25 = type metadata accessor for Artwork.Style(0, v24);
  __chkstk_darwin(v25);
  v27 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EF80(a1, (uint64_t)v126);
  v28 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v29 = type metadata accessor for AppSearchResult(0);
  if (swift_dynamicCast(&v125, v126, v28, v29, 6))
  {
    v115 = v16;
    v120 = v125;
    v121 = v23;
    v31 = AppSearchResult.lockup.getter(v30);
    v32 = swift_retain(v31);
    v33 = Lockup.icon.getter(v32);
    swift_release();
    v118 = a2;
    v119 = v7;
    if (v33)
    {
      v117 = v17;
      v34 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView];
      v35 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
      v116 = v34;
      v36 = qword_100804E70;
      v37 = *(id *)(v34 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      if (v36 != -1)
        swift_once(&qword_100804E70, sub_10020D688);
      v38 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v39 = sub_10000EFC4(v38, (uint64_t)qword_100865F50);
      v40 = SmallLockupLayout.Metrics.artworkSize.getter(v39);
      v42 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v37, "contentMode"), 0, v40, v41);
      Artwork.style.getter(v42);
      v43 = ArtworkView.style.setter(v27);
      *(_QWORD *)&v44 = Artwork.contentMode.getter(v43).n128_u64[0];
      v46 = ArtworkLoaderConfig.size.getter(objc_msgSend(v37, "setContentMode:", v45, v44));
      v48 = ArtworkView.imageSize.setter(v46, v47);
      v49 = Artwork.backgroundColor.getter(v48);
      if (!v49)
      {
        v50 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v49 = static UIColor.placeholderBackground.getter(v50);
      }
      ArtworkView.backgroundColor.setter(v49);
      v51 = *(void **)(v116 + v35);
      v52 = type metadata accessor for ArtworkView(0);
      v53 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v54 = v51;
      v55 = v52;
      v56 = v118;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v42, 2, 1, v54, v55, v53);
      swift_release();

      a2 = v56;
      swift_release();

      v17 = v117;
      v7 = v119;
    }
    v57 = objc_retain(*(id *)(*(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView]
                            + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView));
    sub_10044EF1C(v58, a1, a2);

    v59 = (uint64_t)v121;
    v61 = MixedMediaLockup.screenshotsDisplayStyle.getter(v60);
    v62 = dispatch thunk of AppSearchResult.shouldDisplayMedia.getter(v61);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v59, v17);
    if ((v62 & 1) != 0)
    {
      v64 = ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v63);
      v65 = *(void (**)(char *, uint64_t))(v18 + 8);
      v65(v20, v17);
      if ((v64 & 1) != 0)
      {
        v66 = swift_retain(v31);
        v114 = (void (*)(_QWORD, _QWORD))Lockup.title.getter(v66);
        v68 = v67;
        swift_release();
        v69 = swift_retain(v31);
        v113 = Lockup.subtitle.getter(v69);
        v116 = v70;
        swift_release();
        v71 = swift_retain(v31);
        v72 = Lockup.searchAd.getter(v71);
        v73 = swift_release();
        v117 = v17;
        if (v72)
        {
          v74 = SearchAd.advertisingText.getter(v73);
          v76 = v75;
          v73 = swift_release();
        }
        else
        {
          v74 = 0;
          v76 = 0;
        }
        v77 = v119;
        v78 = MixedMediaLockup.metadataRibbonItems.getter(v73);
        v111 = v78;
        v79 = (uint64_t)v115;
        _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
        v80 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
        v81 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
        v82 = MixedMediaLockup.searchTagRibbonItems.getter(v81);
        v112 = v82;
        v83 = objc_msgSend(v77, "traitCollection");
        v84 = v116;
        v85.n128_f64[0] = a5;
        v86.n128_f64[0] = sub_100452B44((uint64_t)v114, v68, v113, v116, v74, v76, v78, v79, v85, a6, v82, v83);
        v88 = v87;
        v114 = v68;
        v89 = (uint64_t)v122;
        static StandardSearchResultContentViewMetrics.bottomMargin.getter(v86);
        type metadata accessor for TraitEnvironmentPlaceholder(0);
        v90 = sub_10000DAF8((uint64_t *)&unk_100808840);
        v91 = swift_allocObject(v90, 40, 7);
        *(_OWORD *)(v91 + 16) = xmmword_100640AE0;
        *(_QWORD *)(v91 + 32) = v83;
        v92 = v83;
        v93 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v91);
        v94 = sub_100354980();
        v95 = v124;
        v96 = dispatch thunk of AnyDimension.rawValue(in:)(v93, v124, v94);

        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v89, v95);
        v97 = v119;
        swift_bridgeObjectRelease(v112);
        swift_bridgeObjectRelease(v111);
        swift_bridgeObjectRelease(v76);
        swift_bridgeObjectRelease(v84);
        swift_bridgeObjectRelease(v114);
        v98 = sub_100010F2C(v79, (uint64_t *)&unk_100825010);
        v99 = MixedMediaLockup.screenshots.getter(v98);
        v100 = v99;
        if ((unint64_t)v99 >> 62)
        {
          if (v99 >= 0)
            v99 &= 0xFFFFFFFFFFFFFF8uLL;
          v103 = _CocoaArrayWrapper.endIndex.getter(v99);
          v101 = v117;
          if (v103)
            goto LABEL_17;
        }
        else
        {
          v101 = v117;
          if (*(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_17:
            if ((v100 & 0xC000000000000001) != 0)
            {
              v89 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v100);
            }
            else
            {
              if (!*(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_39;
              }
              v89 = *(_QWORD *)(v100 + 32);
              swift_retain(v89);
            }
            swift_bridgeObjectRelease(v100);
LABEL_25:
            v104 = MixedMediaLockup.trailers.getter(v102);
            v100 = v104;
            if ((unint64_t)v104 >> 62)
            {
              if (v104 >= 0)
                v104 &= 0xFFFFFFFFFFFFFF8uLL;
              if (_CocoaArrayWrapper.endIndex.getter(v104))
              {
LABEL_27:
                if ((v100 & 0xC000000000000001) == 0)
                {
                  if (!*(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
                    return;
                  }
                  v105 = *(_QWORD *)(v100 + 32);
                  swift_retain(v105);
                  goto LABEL_30;
                }
LABEL_39:
                v105 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v100);
LABEL_30:
                swift_bridgeObjectRelease(v100);
LABEL_35:
                v106 = objc_msgSend(v97, "traitCollection");
                v107.n128_f64[0] = a5;
                v108 = (uint64_t)v121;
                sub_10010B258(v89, v105, (uint64_t)v106, v118, (uint64_t)v121, v107, a6 - v88 - v96);
                swift_release();
                swift_release();

                swift_release();
                v109 = swift_release();
                ((void (*)(uint64_t, uint64_t, __n128))v65)(v108, v101, v109);
                return;
              }
            }
            else if (*(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_27;
            }
            swift_bridgeObjectRelease(v100);
            v105 = 0;
            goto LABEL_35;
          }
        }
        swift_bridgeObjectRelease(v100);
        v89 = 0;
        goto LABEL_25;
      }
    }
    else
    {
      v65 = *(void (**)(char *, uint64_t))(v18 + 8);
      v65(v20, v17);
    }
    v65((char *)v59, v17);
    swift_release();
    swift_release();
  }
}

_QWORD *sub_10048BE30(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *result;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  __n128 v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  unint64_t v58;
  double v59;
  double v60;
  __n128 v61;
  void (*v62)(_QWORD, _QWORD);
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  void (*v76)(_QWORD, _QWORD);
  __n128 v77;
  double v78;
  double v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  unint64_t v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  id v102;
  double *v103;
  __n128 v104;
  void *v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(_QWORD, _QWORD);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void *rawValue;
  uint64_t v128;
  void *v129;
  Swift::OpaquePointer v130;

  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v122 = *(_QWORD *)(v9 - 8);
  v123 = v9;
  __chkstk_darwin(v9);
  v121 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v11);
  v125 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v13);
  v120 = (uint64_t)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PageGrid(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v124 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v126 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v128 = (uint64_t)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AppSearchResult(0);
  v21 = sub_100020248(&qword_1008259D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(&v130, v20, v20, v21);
  if (v130._rawValue)
  {
    v117 = v6;
    v118 = v5;
    rawValue = v130._rawValue;
    v24 = AppSearchResult.lockup.getter(v23);
    v130._rawValue = _swiftEmptyArrayStorage;
    v25 = swift_retain(v24);
    v26 = Lockup.icon.getter(v25);
    v27 = swift_release();
    if (v26)
    {
      v119 = v16;
      v28 = v15;
      v29 = v18;
      v30 = a1;
      v31 = v8;
      v32 = a2;
      if (qword_100804E70 != -1)
        swift_once(&qword_100804E70, sub_10020D688);
      v33 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v34 = sub_10000EFC4(v33, (uint64_t)qword_100865F50);
      v35 = SmallLockupLayout.Metrics.artworkSize.getter(v34);
      v37 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v35, v36);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
      v39 = *(_QWORD *)(((unint64_t)v130._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      v38 = *(_QWORD *)(((unint64_t)v130._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v39 >= v38 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
      v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
      specialized Array._endMutation()(v40);
      v27 = swift_release();
      a2 = v32;
      v8 = v31;
      a1 = v30;
      v18 = v29;
      v15 = v28;
      v16 = v119;
    }
    v41 = MixedMediaLockup.metadataRibbonItems.getter(v27);
    swift_getKeyPath(&unk_100664C78);
    ItemLayoutContext.subscript.getter(&v129);
    v42 = swift_release();
    v43 = v129;
    v44 = sub_10044F2C4(v41, (uint64_t)v129, v42);

    swift_bridgeObjectRelease(v41);
    sub_10001A478((uint64_t)v44);
    v45 = v128;
    MixedMediaLockup.screenshotsDisplayStyle.getter(v46);
    v48 = MixedMediaLockup.screenshots.getter(v47);
    v49 = v48;
    if ((unint64_t)v48 >> 62)
    {
      if (v48 >= 0)
        v48 &= 0xFFFFFFFFFFFFFF8uLL;
      v50 = _CocoaArrayWrapper.endIndex.getter(v48);
    }
    else
    {
      v50 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v49).n128_u64[0];
    if (!v50
      || (dispatch thunk of AppSearchResult.shouldDisplayMedia.getter(v51) & 1) == 0
      || (ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v52) & 1) == 0)
    {
      goto LABEL_63;
    }
    v54 = v120;
    ItemLayoutContext.parentShelfLayoutContext.getter(v53);
    if (qword_1008059F8 != -1)
      swift_once(&qword_1008059F8, sub_1003A0ECC);
    v55 = qword_100867D20;
    swift_bridgeObjectRetain(qword_100867D20);
    v56 = PageGrid.init(from:breakpointOverrides:)(v54, v55);
    v57.n128_f64[0] = PageGrid.columnWidth.getter(v56);
    v58 = v57.n128_u64[0];
    sub_10048AD30(a1, v57);
    v60 = v59;
    v61 = swift_retain(v24);
    v114 = Lockup.title.getter(v61);
    v115 = v62;
    swift_release();
    v63 = swift_retain(v24);
    v112 = Lockup.subtitle.getter(v63);
    v120 = v64;
    swift_release();
    v65 = swift_retain(v24);
    v66 = Lockup.searchAd.getter(v65);
    v67 = swift_release();
    v108 = a2;
    v119 = v16;
    v113 = v8;
    if (v66)
    {
      v109 = SearchAd.advertisingText.getter(v67);
      v116 = v68;
      v67 = swift_release();
    }
    else
    {
      v109 = 0;
      v116 = 0;
    }
    v69 = MixedMediaLockup.metadataRibbonItems.getter(v67);
    v110 = v69;
    v70 = v125;
    _s20ProductPageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
    v71 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
    v72 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v70, 0, 1, v71);
    v73 = MixedMediaLockup.searchTagRibbonItems.getter(v72);
    v111 = v73;
    swift_getKeyPath(&unk_100664C78);
    ItemLayoutContext.subscript.getter(&v129);
    v74 = swift_release();
    v75 = v129;
    v107 = v73;
    v76 = v115;
    v74.n128_u64[0] = v58;
    v77.n128_f64[0] = sub_100452B44(v114, v115, v112, v120, v109, v116, v69, v70, v74, v60, v107, v129);
    v79 = v78;
    v80 = v121;
    static StandardSearchResultContentViewMetrics.bottomMargin.getter(v77);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v81 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v82 = swift_allocObject(v81, 40, 7);
    *(_OWORD *)(v82 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v82 + 32) = v75;
    v83 = v75;
    v84 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v82);
    v85 = sub_100354980();
    v86 = v123;
    v87 = dispatch thunk of AnyDimension.rawValue(in:)(v84, v123, v85);

    (*(void (**)(char *, uint64_t))(v122 + 8))(v80, v86);
    swift_bridgeObjectRelease(v111);
    swift_bridgeObjectRelease(v110);
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v120);
    swift_bridgeObjectRelease(v76);
    v88 = sub_100010F2C(v125, (uint64_t *)&unk_100825010);
    v89 = MixedMediaLockup.screenshots.getter(v88);
    v90 = v89;
    if ((unint64_t)v89 >> 62)
    {
      if (v89 >= 0)
        v89 &= 0xFFFFFFFFFFFFFF8uLL;
      v91 = _CocoaArrayWrapper.endIndex.getter(v89);
    }
    else
    {
      v91 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v92 = (uint64_t)v113;
    if (v91)
    {
      if ((v90 & 0xC000000000000001) != 0)
      {
        v80 = (char *)v15;
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v90);
      }
      else
      {
        if (!*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_67;
        }
        v80 = (char *)v15;
        v15 = *(_QWORD *)(v90 + 32);
        swift_retain(v15);
      }
      swift_bridgeObjectRelease(v90);
    }
    else
    {
      v80 = (char *)v15;
      swift_bridgeObjectRelease(v90);
      v15 = 0;
    }
    v94 = MixedMediaLockup.trailers.getter(v93);
    v90 = v94;
    if ((unint64_t)v94 >> 62)
    {
      if (v94 >= 0)
        v94 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v94))
      {
LABEL_28:
        if ((v90 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_69;
          }
          a1 = *(_QWORD *)(v90 + 32);
          swift_retain(a1);
          goto LABEL_31;
        }
LABEL_67:
        a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v90);
LABEL_31:
        swift_bridgeObjectRelease(v90);
        goto LABEL_42;
      }
    }
    else if (*(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    swift_bridgeObjectRelease(v90);
    a1 = 0;
LABEL_42:
    v96 = MixedMediaLockup.screenshots.getter(v95);
    v90 = v96;
    if ((unint64_t)v96 >> 62)
    {
      if (v96 >= 0)
        v96 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v96))
      {
LABEL_44:
        if ((v90 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_71;
          }
          v86 = *(_QWORD *)(v90 + 32);
          swift_retain(v86);
          goto LABEL_47;
        }
LABEL_69:
        v86 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v90);
LABEL_47:
        swift_bridgeObjectRelease(v90);
        goto LABEL_52;
      }
    }
    else if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_44;
    }
    swift_bridgeObjectRelease(v90);
    v86 = 0;
LABEL_52:
    v98 = MixedMediaLockup.trailers.getter(v97);
    v90 = v98;
    if ((unint64_t)v98 >> 62)
    {
      if (v98 >= 0)
        v98 &= 0xFFFFFFFFFFFFFF8uLL;
      result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v98);
      if (result)
      {
LABEL_54:
        if ((v90 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v99 = *(_QWORD *)(v90 + 32);
          swift_retain(v99);
          goto LABEL_57;
        }
LABEL_71:
        v99 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v90);
LABEL_57:
        v100 = swift_bridgeObjectRelease(v90);
LABEL_62:
        v100.n128_f64[0] = v60 - v79;
        v101 = v128;
        sub_10048D0D4(v86, v99, v128, v92, v100);
        swift_release();
        v45 = v101;
        swift_release();
        v102 = sub_10052A948();
        v103 = sub_10010CB74(v15, a1, v92, v102, *(double *)&v58, v60 - v79 - v87);
        swift_unknownObjectRelease();
        swift_release();
        v104 = swift_release();
        (*(void (**)(uint64_t, uint64_t, __n128))(v117 + 8))(v92, v118, v104);
        sub_10001A478((uint64_t)v103);
        (*(void (**)(char *, char *))(v119 + 8))(v124, v80);
LABEL_63:
        v105 = v130._rawValue;
        ArtworkLoader.prefetchArtwork(using:)(v130);
        swift_release();
        swift_release();
        v106 = swift_bridgeObjectRelease(v105);
        return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, __n128))(v126 + 8))(v45, v18, v106);
      }
    }
    else
    {
      result = *(_QWORD **)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (result)
        goto LABEL_54;
    }
    v100 = swift_bridgeObjectRelease(v90);
    v99 = 0;
    goto LABEL_62;
  }
  return result;
}

void sub_10048C7BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::Bool v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Swift::Bool v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE v43[40];
  char v44[24];
  UIImage_optional v45;
  UIImage_optional v46;
  UIImage_optional v47;

  v39 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots);
  v1 = (uint64_t *)(v39 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v39 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v44, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v12 = *v1;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v3)
      goto LABEL_13;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (!v3)
      goto LABEL_13;
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    ++v4;
    v42 = v5;
    v7 = type metadata accessor for BorderedScreenshotView();
    v8 = sub_100020248(&qword_10080FAD8, 255, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v9 = v6;
    AnyHashable.init<A>(_:)(&v42, v7, v8);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v43, 1);
    sub_100018968((uint64_t)v43);
    v10 = *(id *)&v9[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
    v45.value.super.isa = 0;
    v45.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v45, v11);

  }
  while (v3 != v4);
LABEL_13:
  swift_bridgeObjectRelease(v2);
  Strong = swift_unknownObjectWeakLoadStrong(v39 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v14 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_100828468), "setImage:", 0);
    v42 = v14;
    v15 = type metadata accessor for VideoView(0);
    v16 = sub_100020248((unint64_t *)&qword_10080FAE8, 255, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v17 = v14;
    AnyHashable.init<A>(_:)(&v42, v15, v16);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v43, 1);

    sub_100018968((uint64_t)v43);
  }
  v18 = *(_QWORD *)(v40 + OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView);
  v19 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v20 = *(id *)(v18 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v46.value.super.isa = 0;
  v46.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v46, v21);

  v22 = *(char **)(v18 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView);
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v41 = v18;
    v25 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
    v38 = v22;
    swift_bridgeObjectRetain(v23);
    v26 = 32;
    do
    {
      v27 = *(void **)(v23 + v26);
      v28 = swift_dynamicCastClass(v27, v25);
      if (v28)
      {
        v29 = *(_QWORD *)(v28 + OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView);
        v30 = v27;
        v47.value.super.isa = 0;
        v47.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v47, v31);
        v32 = type metadata accessor for ArtworkView(0);
        v33 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v29, 1, v32, v33);

      }
      v26 += 16;
      --v24;
    }
    while (v24);

    swift_bridgeObjectRelease(v23);
    v18 = v41;
  }
  v34 = *(void **)(v18 + v19);
  v35 = type metadata accessor for ArtworkView(0);
  v36 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v37 = v34;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v37, 1, v35, v36);

}

void sub_10048CB98()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_screenshots;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v0[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_shouldDisplayMedia] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_preferredImageSizes] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsCalculator] = 0;
  v3 = &v0[OBJC_IVAR____TtC20ProductPageExtension26AppSearchResultContentView_impressionsUpdateBlock];
  *v3 = 0;
  v3[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/AppSearchResultContentView.swift", 53, 2, 39, 0);
  __break(1u);
}

uint64_t sub_10048CC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  int v19;
  unsigned int *v20;
  _BYTE v22[4];
  int v23;
  _BYTE *v24;

  v5 = v4;
  v24 = a3;
  v8 = type metadata accessor for LockupMediaLayout.DisplayType(0, a4);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_10000DAF8(&qword_100825A60);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_10048F350(a1);
  v15 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v17 = sub_10048F73C(a1, (uint64_t)v14);
  sub_100010F2C((uint64_t)v14, &qword_100825A60);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v18(v11, v5, v8);
  v19 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 88))(v11, v8);
  if (v19 != enum case for LockupMediaLayout.DisplayType.oneUp(_:))
  {
    if (v19 == enum case for LockupMediaLayout.DisplayType.twoUp(_:)
      || v19 == enum case for LockupMediaLayout.DisplayType.threeUp(_:))
    {
      if ((v17 & 1) != 0)
        goto LABEL_11;
      if ((v23 & 1) != 0)
        goto LABEL_9;
    }
    else if (((v19 == enum case for LockupMediaLayout.DisplayType.fourUp(_:)) & v17) != 0)
    {
      goto LABEL_11;
    }
    v18(v24, v5, v8);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
  if ((v17 & 1) != 0)
  {
LABEL_11:
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    v20 = (unsigned int *)&enum case for LockupMediaLayout.DisplayType.fourUp(_:);
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v24, *v20, v8);
  }
  if ((v23 & 1) != 0)
  {
LABEL_9:
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    v20 = (unsigned int *)&enum case for LockupMediaLayout.DisplayType.threeUp(_:);
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v24, *v20, v8);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v24, enum case for LockupMediaLayout.DisplayType.twoUp(_:), v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10048CED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];

  v28 = a6;
  v11 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v11);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for AspectRatio(0);
  v15 = __chkstk_darwin(v14);
  v17 = &v29[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v18 = type metadata accessor for LockupMediaLayout.DisplayType(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = &v29[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000EF80(a3, (uint64_t)v29);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16))(v21, a5, v18);
  sub_10048EFD8(a1, a2, 0, 1);
  v23 = v22;
  if (!((unint64_t)v22 >> 62))
  {
    result = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    AspectRatio.init(_:_:)(v27);
    goto LABEL_11;
  }
  if (v22 >= 0)
    v22 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!result)
    goto LABEL_10;
LABEL_3:
  if ((v23 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain(*(_QWORD *)(v23 + 32));
LABEL_6:
    swift_bridgeObjectRelease(v23);
    Artwork.size.getter(v25);
    AspectRatio.init(_:_:)(v26);
    swift_release();
LABEL_11:
    sub_100018ADC(a4, (uint64_t)v13, (uint64_t *)&unk_100811F20);
    return LockupMediaLayout.Metrics.init(interItemSpacing:displayType:mediaAspectRatio:boundingAspectRatio:)(v29, v21, v17, v13);
  }
  __break(1u);
  return result;
}

void sub_10048D0D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  __n128 v31;
  char v32;
  __n128 v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, _QWORD, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE v51[4];
  int v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v9 = type metadata accessor for LockupMediaLayout.DisplayType(0, a5);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v51[-v14];
  v16 = sub_10000DAF8(&qword_100825A60);
  v17 = __chkstk_darwin(v16);
  v19 = &v51[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((ScreenshotsDisplayStyle.shouldShowScreenshots.getter(v17) & 1) == 0)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(a4, enum case for LockupMediaLayout.DisplayType.none(_:), v9);
    return;
  }
  v53 = v15;
  v54 = a4;
  sub_10048EFD8(a1, a2, 0, 1);
  v21 = v20;
  v22 = (unint64_t)v20 >> 62;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v24 = v20;
    else
      v24 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v55 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v21);
    if (a1)
      goto LABEL_4;
  }
  else
  {
    v55 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (a1)
    {
LABEL_4:
      v23 = ((uint64_t (*)(void))Screenshots.mediaPlatform.getter)();
      goto LABEL_11;
    }
  }
  v23 = 0;
LABEL_11:
  v52 = sub_10048F350(v23);
  v25 = swift_release();
  if (a1)
    v26 = Screenshots.mediaPlatform.getter(v25);
  else
    v26 = 0;
  v27 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v28 + 16))(v19, a3, v27);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v19, 0, 1, v27);
  v29 = sub_10048F73C(v26, (uint64_t)v19);
  swift_release();
  sub_100010F2C((uint64_t)v19, &qword_100825A60);
  if (!v22)
  {
    v30 = v55;
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_16;
LABEL_25:
    v33 = swift_bridgeObjectRelease(v21);
    goto LABEL_26;
  }
  if (v21 < 0)
    v36 = v21;
  else
    v36 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v21);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v21);
  v30 = v55;
  if (!v37)
    goto LABEL_25;
LABEL_16:
  if ((v21 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
LABEL_19:
    v31 = swift_bridgeObjectRelease(v21);
    v32 = dispatch thunk of Artwork.isLandscape.getter(v31);
    v33 = swift_release();
    if ((v32 & 1) != 0)
    {
      v34 = v53;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v10 + 104))(v53, enum case for LockupMediaLayout.DisplayType.landscape(_:), v9, v33);
      v35 = v54;
      goto LABEL_36;
    }
LABEL_26:
    v38 = *(uint64_t (**)(_BYTE *, _QWORD, uint64_t, __n128))(v10 + 104);
    v39 = v38(v12, enum case for LockupMediaLayout.DisplayType.fourUp(_:), v9, v33);
    v40 = LockupMediaLayout.DisplayType.numberOfViews.getter(v39);
    v41 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
    v41(v12, v9);
    if (((v30 >= v40) & v29) == 1)
    {
      v34 = v53;
    }
    else
    {
      v42 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t))v38)(v12, enum case for LockupMediaLayout.DisplayType.threeUp(_:), v9);
      v43 = LockupMediaLayout.DisplayType.numberOfViews.getter(v42);
      v41(v12, v9);
      if (((v30 >= v43) & v52) != 1)
      {
        v44 = enum case for LockupMediaLayout.DisplayType.twoUp(_:);
        v45 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t))v38)(v12, enum case for LockupMediaLayout.DisplayType.twoUp(_:), v9);
        v46 = LockupMediaLayout.DisplayType.numberOfViews.getter(v45);
        v41(v12, v9);
        v34 = v53;
        v35 = v54;
        if (v30 >= v46
          || (v44 = enum case for LockupMediaLayout.DisplayType.oneUp(_:),
              v47 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t))v38)(v12, enum case for LockupMediaLayout.DisplayType.oneUp(_:), v9), v48 = LockupMediaLayout.DisplayType.numberOfViews.getter(v47), v41(v12, v9), v30 == v48))
        {
          v49 = v34;
          v50 = v44;
        }
        else
        {
          v50 = enum case for LockupMediaLayout.DisplayType.none(_:);
          v49 = v34;
        }
        ((void (*)(_BYTE *, uint64_t, uint64_t))v38)(v49, v50, v9);
        goto LABEL_36;
      }
      v34 = v53;
    }
    ((void (*)(void))v38)();
    v35 = v54;
LABEL_36:
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(v35, v34, v9);
    return;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain(*(_QWORD *)(v21 + 32));
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_10048D53C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v18[5];

  v0 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  __chkstk_darwin(v0);
  v2 = (char *)&v18[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AspectRatio(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LockupMediaLayout.DisplayType(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LockupMediaLayout.Metrics(0, v10);
  sub_100011980(v13, qword_1008259D8);
  sub_10000EFC4(v13, (uint64_t)qword_1008259D8);
  v18[3] = &type metadata for CGFloat;
  v18[4] = &protocol witness table for CGFloat;
  v18[0] = 0x4021000000000000;
  v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for LockupMediaLayout.DisplayType.none(_:), v8);
  v15 = AspectRatio.init(_:_:)(v14);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v2, 1, 1, v3, v15);
  return LockupMediaLayout.Metrics.init(interItemSpacing:displayType:mediaAspectRatio:boundingAspectRatio:)(v18, v12, v7, v2);
}

id sub_10048D6C8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  __n128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  objc_super v28;

  v1 = sub_10000DAF8(&qword_100825A40);
  __chkstk_darwin(v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews] = _swiftEmptyArrayStorage;
  v4 = type metadata accessor for BorderedScreenshotView();
  v5 = v0;
  ViewRecycler.init()(v4);
  v6 = sub_10048EDDC();
  ReusePool.init(recycler:limit:)(v3, 2, v1, v6);
  v7 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView]);
  v8 = &v5[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics];
  if (qword_100805E20 != -1)
    swift_once(&qword_100805E20, sub_10048D53C);
  v9 = type metadata accessor for LockupMediaLayout.Metrics(0, v7);
  v10 = sub_10000EFC4(v9, (uint64_t)qword_1008259D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v10, v9);
  v11 = OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayConfiguration;
  if (qword_1008046E0 != -1)
    swift_once(&qword_1008046E0, sub_100078A50);
  v12 = &v5[v11];
  v13 = qword_100864AE0;
  v14 = byte_100864AE8;
  v15 = qword_100864AF0;
  v16 = byte_100864AF8;
  v17 = qword_100864B00;
  v18 = (void *)qword_100864B08;
  v19 = unk_100864B10;
  v20 = unk_100864B20;
  *(_QWORD *)v12 = qword_100864AD8;
  *((_QWORD *)v12 + 1) = v13;
  v12[16] = v14;
  *((_QWORD *)v12 + 3) = v15;
  v12[32] = v16;
  *((_QWORD *)v12 + 5) = v17;
  *((_QWORD *)v12 + 6) = v18;
  *(_OWORD *)(v12 + 56) = v19;
  *(_OWORD *)(v12 + 72) = v20;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_platform] = 0;
  v21 = &v5[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayStyle];
  v22 = enum case for ScreenshotsDisplayStyle.standard(_:);
  v23 = type metadata accessor for ScreenshotsDisplayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  v24 = v18;

  v25 = (objc_class *)type metadata accessor for LockupMediaView(0);
  v28.receiver = v5;
  v28.super_class = v25;
  v26 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v26, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  return v26;
}

void sub_10048D96C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v1, v27, 0, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v24 = *v1;
  else
    v24 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v25 = OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_platform;
    v5 = v26 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayConfiguration;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v6 = (char *)*(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = *(_QWORD *)(v26 + v25);
      ++v4;
      *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_platform] = v8;
      swift_retain_n(v8, 2);
      swift_release();
      sub_1000F305C();
      swift_release();
      v9 = *(_QWORD *)(v5 + 8);
      v10 = *(_BYTE *)(v5 + 16);
      v11 = *(_QWORD *)(v5 + 24);
      v12 = *(_BYTE *)(v5 + 32);
      v13 = *(_QWORD *)(v5 + 40);
      v14 = *(void **)(v5 + 48);
      v15 = &v7[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_displayConfiguration];
      v16 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_displayConfiguration + 48];
      v17 = *(_OWORD *)(v5 + 56);
      v18 = *(_OWORD *)(v5 + 72);
      *(_QWORD *)v15 = *(_QWORD *)v5;
      *((_QWORD *)v15 + 1) = v9;
      v15[16] = v10;
      *((_QWORD *)v15 + 3) = v11;
      v15[32] = v12;
      *((_QWORD *)v15 + 5) = v13;
      *((_QWORD *)v15 + 6) = v14;
      *(_OWORD *)(v15 + 56) = v17;
      *(_OWORD *)(v15 + 72) = v18;
      v19 = v14;

      v20 = OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView;
      v21 = *(id *)&v7[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
      dispatch thunk of RoundedCornerView.borderWidth.setter(v21);

      v22 = (void *)*((_QWORD *)v15 + 6);
      v23 = *(id *)&v7[v20];
      dispatch thunk of RoundedCornerView.borderColor.setter(v22);

      objc_msgSend(v7, "setNeedsLayout");
    }
    while (v3 != v4);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_10048DB94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  char *v15;
  __n128 v16;
  void *Strong;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  char v34[24];
  uint64_t v35;
  char v36[24];
  objc_super v37;

  v1 = v0;
  v33 = type metadata accessor for LayoutRect(0);
  v2 = *(_QWORD *)(v33 - 8);
  v3 = __chkstk_darwin(v33);
  v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for LockupMediaLayout.Metrics(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for LockupMediaLayout(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = (objc_class *)type metadata accessor for LockupMediaView(0);
  v37.receiver = v1;
  v37.super_class = v14;
  objc_msgSendSuper2(&v37, "layoutSubviews");
  v15 = &v1[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics];
  v16 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics], v36, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v15, v6, v16);
  v35 = (uint64_t)_swiftEmptyArrayStorage;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView]);
  if (Strong)
  {
    v18 = Strong;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);

  }
  v22 = (uint64_t *)&v1[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews], v34, 0, 0);
  v23 = *v22;
  if ((unint64_t)*v22 >> 62)
  {
    if (v23 < 0)
      v30 = *v22;
    else
      v30 = v23 & 0xFFFFFFFFFFFFFF8;
    v31 = sub_1000951BC();
    v32 = swift_bridgeObjectRetain(v23);
    v25 = _bridgeCocoaArray<A>(_:)(v30, v31, v32);
  }
  else
  {
    swift_bridgeObjectRetain_n(v23, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
    sub_1000951BC();
    v25 = v23;
  }
  swift_bridgeObjectRelease(v23);
  sub_10001A304(v25);
  v26 = v35;
  v27 = sub_1003AFCDC(v35);
  v28 = swift_bridgeObjectRelease(v26);
  LockupMediaLayout.init(metrics:mediaViews:)(v9, v27, v28);
  objc_msgSend(v1, "bounds");
  LockupMediaLayout.placeChildren(relativeTo:in:)(v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double sub_10048DE70(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  _BYTE *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __n128 v40;
  void *Strong;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v58;
  unint64_t v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72[24];
  uint64_t v73;
  char v74[24];
  char v75[32];

  v3 = v2;
  v6 = type metadata accessor for LockupMediaLayout(0);
  v70 = *(_QWORD *)(v6 - 8);
  v71 = v6;
  __chkstk_darwin(v6);
  v69 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v8 = *(_QWORD *)(v65 - 8);
  v9 = __chkstk_darwin(v65);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LockupMediaLayout.DisplayType(0, v9);
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v64 = (char *)&v61 - v16;
  v17 = type metadata accessor for LockupMediaLayout.Metrics(0, v15);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v63 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v61 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v61 - v24;
  v26 = v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics;
  v27 = swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics, v75, 0, 0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v28(v25, v26, v17, v27);
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v22, v26, v17);
  LockupMediaLayout.Metrics.displayType.getter(v29);
  v68 = *(void (**)(char *, uint64_t))(v18 + 8);
  v68(v22, v17);
  v30 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_platform);
  v31 = v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayStyle;
  v32 = swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayStyle, v74, 0, 0);
  v33 = v65;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v31, v65, v32);
  v34 = swift_retain(v30);
  v35 = v64;
  v36 = v62;
  sub_10048CC90(v37, (uint64_t)v11, v64, v34);
  v38 = v25;
  v39 = v63;
  v40 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v33, v40);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v36, v67);
  LockupMediaLayout.Metrics.displayType.setter(v35);
  ((void (*)(char *, char *, uint64_t))v28)(v39, v38, v17);
  v73 = (uint64_t)_swiftEmptyArrayStorage;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v42 = Strong;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
    v44 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v43 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v44 >= v43 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
    specialized Array._endMutation()(v45);

  }
  v46 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v72, 0, 0);
  v47 = *v46;
  if ((unint64_t)v47 >> 62)
  {
    if (v47 < 0)
      v58 = v47;
    else
      v58 = v47 & 0xFFFFFFFFFFFFFF8;
    v59 = sub_1000951BC();
    v60 = swift_bridgeObjectRetain(v47);
    v49 = _bridgeCocoaArray<A>(_:)(v58, v59, v60);
  }
  else
  {
    swift_bridgeObjectRetain_n(v47, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v48);
    sub_1000951BC();
    v49 = v47;
  }
  swift_bridgeObjectRelease(v47);
  sub_10001A304(v49);
  v50 = v73;
  v51 = sub_1003AFCDC(v73);
  v52 = swift_bridgeObjectRelease(v50);
  v53 = v69;
  LockupMediaLayout.init(metrics:mediaViews:)(v39, v51, v52);
  v54 = sub_10000E720(&qword_100825A90, (uint64_t (*)(uint64_t))&type metadata accessor for LockupMediaLayout, (uint64_t)&protocol conformance descriptor for LockupMediaLayout);
  v55 = v71;
  v56 = dispatch thunk of Measurable.measurements(fitting:in:)(v3, v71, v54, a1, a2);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v53, v55);
  v68(v38, v17);
  return v56;
}

void sub_10048E30C(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *Strong;
  char *v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  char *v38;
  void *v39;
  __int128 v40;
  __int128 v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _BYTE v66[24];
  char v67[24];
  _BYTE v68[24];

  v2 = v1;
  v3 = type metadata accessor for LockupMediaLayout.DisplayType(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LockupMediaLayout.Metrics(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView]);

  v13 = &v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics];
  v14 = &v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics];
  if (!Strong)
  {
    v20 = swift_beginAccess(v14, v68, 0, 0);
    v21 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v13, v8, v20);
    LockupMediaLayout.Metrics.displayType.getter(v21);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v19 = LockupMediaLayout.DisplayType.numberOfViews.getter(v22);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    goto LABEL_5;
  }
  v15 = swift_beginAccess(v14, v68, 0, 0);
  v16 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v13, v8, v15);
  LockupMediaLayout.Metrics.displayType.getter(v16);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = LockupMediaLayout.DisplayType.numberOfViews.getter(v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if (!__OFSUB__(v18, 1))
  {
    v19 = (v18 - 1) & ~((v18 - 1) >> 63);
LABEL_5:
    v23 = (uint64_t *)&v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews];
    v24 = &v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViewReusePool];
    v64 = OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_platform;
    v25 = &v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayConfiguration];
    swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews], v67, 0, 0);
    while (1)
    {
      while (1)
      {
        v26 = *v23;
        if ((unint64_t)*v23 >> 62)
        {
          if (v26 < 0)
            v58 = *v23;
          else
            v58 = v26 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v23);
          v59 = _CocoaArrayWrapper.endIndex.getter(v58);
          swift_bridgeObjectRelease(v26);
          if (v59 == v19)
            return;
        }
        else if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10) == v19)
        {
          return;
        }
        v27 = *v23;
        if ((unint64_t)*v23 >> 62)
        {
          v60 = v27 < 0 ? *v23 : v27 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v23);
          v28 = _CocoaArrayWrapper.endIndex.getter(v60);
          swift_bridgeObjectRelease(v27);
        }
        else
        {
          v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v28 >= v19)
          break;
        swift_beginAccess(v24, v66, 33, 0);
        v29 = sub_10000DAF8(&qword_100825A88);
        ReusePool.dequeue(or:)(&v65, sub_10048E860, 0, v29);
        swift_endAccess(v66);
        v30 = v65;
        v31 = *(_QWORD *)&v2[v64];
        *(_QWORD *)&v65[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_platform] = v31;
        swift_retain_n(v31, 2);
        swift_release();
        sub_1000F305C();
        swift_release();
        v32 = *((_QWORD *)v25 + 1);
        v33 = v25[16];
        v34 = *((_QWORD *)v25 + 3);
        v35 = v25[32];
        v36 = *((_QWORD *)v25 + 5);
        v37 = (void *)*((_QWORD *)v25 + 6);
        v38 = &v30[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_displayConfiguration];
        v39 = *(void **)&v30[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_displayConfiguration + 48];
        v40 = *(_OWORD *)(v25 + 56);
        v41 = *(_OWORD *)(v25 + 72);
        *(_QWORD *)v38 = *(_QWORD *)v25;
        *((_QWORD *)v38 + 1) = v32;
        v38[16] = v33;
        *((_QWORD *)v38 + 3) = v34;
        v38[32] = v35;
        *((_QWORD *)v38 + 5) = v36;
        *((_QWORD *)v38 + 6) = v37;
        *(_OWORD *)(v38 + 56) = v40;
        *(_OWORD *)(v38 + 72) = v41;
        v42 = v37;

        v43 = OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView;
        v44 = *(id *)&v30[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
        dispatch thunk of RoundedCornerView.borderWidth.setter(v44);

        v45 = (void *)*((_QWORD *)v38 + 6);
        v46 = *(id *)&v30[v43];
        dispatch thunk of RoundedCornerView.borderColor.setter(v45);

        objc_msgSend(v30, "setNeedsLayout");
        swift_beginAccess(v23, v66, 33, 0);
        v47 = v30;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
        v49 = *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v48 = *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v49 >= v48 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
        v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
        specialized Array._endMutation()(v50);
        swift_endAccess(v66);
        objc_msgSend(v2, "addSubview:", v47);

      }
      swift_beginAccess(v23, v66, 33, 0);
      v51 = *v23;
      if ((unint64_t)*v23 >> 62)
      {
        if (v51 < 0)
          v61 = *v23;
        else
          v61 = v51 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v23);
        v62 = _CocoaArrayWrapper.endIndex.getter(v61);
        swift_bridgeObjectRelease(v51);
        if (!v62)
          goto LABEL_6;
LABEL_17:
        v52 = *v23;
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v23);
        *v23 = v52;
        if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v52 < 0 || (v52 & 0x4000000000000000) != 0)
        {
          isUniquelyReferenced_nonNull_bridgeObject = sub_1003F9BB8(v52);
          v52 = isUniquelyReferenced_nonNull_bridgeObject;
          *v23 = isUniquelyReferenced_nonNull_bridgeObject;
        }
        v54 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v54)
        {
          __break(1u);
          break;
        }
        v55 = v54 - 1;
        v56 = *(char **)((v52 & 0xFFFFFFFFFFFFFF8) + 8 * v55 + 0x20);
        *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) = v55;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
        swift_endAccess(v66);
        v65 = v56;
        swift_beginAccess(v24, v66, 33, 0);
        v57 = sub_10000DAF8(&qword_100825A88);
        ReusePool.recycle(_:)(&v65, v57);
        swift_endAccess(v66);

      }
      else
      {
        if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_17;
LABEL_6:
        swift_endAccess(v66);
      }
    }
  }
  __break(1u);
}

id sub_10048E860@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = type metadata accessor for BorderedScreenshotView();
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *a1 = result;
  return result;
}

void sub_10048E89C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _BYTE v30[24];
  char *v31;
  char v32[24];

  v1 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  __chkstk_darwin(v1);
  v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews], v32, 1, 0);
  v4 = *v3;
  v5 = (unint64_t)*v3 >> 62;
  v29 = v0;
  if (v5)
  {
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  v7 = 0;
  v8 = &v29[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViewReusePool];
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
    else
      v9 = (char *)*(id *)(v4 + 8 * v7 + 32);
    v10 = v9;
    ++v7;
    v31 = v9;
    swift_beginAccess(v8, v30, 33, 0);
    v11 = sub_10000DAF8(&qword_100825A88);
    ReusePool.recycle(_:)(&v31, v11);
    swift_endAccess(v30);
    v12 = *(id *)&v10[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
    ArtworkView.image.setter(0);

  }
  while (v6 != v7);
LABEL_13:
  swift_bridgeObjectRelease(v4);
  v14 = *v3;
  *v3 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v14);
  v15 = v29;
  Strong = swift_unknownObjectWeakLoadStrong(&v29[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView]);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = *(void **)(Strong + qword_100828488);
    if (v18)
    {
      v19 = v18;
      dispatch thunk of VideoPlayer.releaseAssets()();

      v17 = v19;
    }

  }
  sub_10048FC80();
  v21 = v26;
  v20 = v27;
  v22 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, enum case for ScreenshotsDisplayStyle.standard(_:), v28);
  v23 = &v15[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayStyle];
  v24 = swift_beginAccess(&v15[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayStyle], v30, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v20 + 24))(v23, v21, v22, v24);
  swift_endAccess(v30);
  objc_msgSend(v15, "setNeedsLayout");
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
}

id sub_10048EB5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LockupMediaView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10048EC68()
{
  return type metadata accessor for LockupMediaView(0);
}

uint64_t type metadata accessor for LockupMediaView(uint64_t a1)
{
  uint64_t result;

  result = qword_100825A28;
  if (!qword_100825A28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LockupMediaView);
  return result;
}

void sub_10048ECAC(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[7];

  v9[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10048ED78(319);
  if (v4 <= 0x3F)
  {
    v9[1] = *(_QWORD *)(v2 - 8) + 64;
    v9[2] = "\b";
    v5 = type metadata accessor for LockupMediaLayout.Metrics(319, v3);
    if (v6 <= 0x3F)
    {
      v9[3] = *(_QWORD *)(v5 - 8) + 64;
      v9[4] = &unk_100664CF0;
      v9[5] = &unk_100664D08;
      v7 = type metadata accessor for ScreenshotsDisplayStyle(319);
      if (v8 <= 0x3F)
      {
        v9[6] = *(_QWORD *)(v7 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 7, v9, a1 + 80);
      }
    }
  }
}

void sub_10048ED78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_100825A38)
  {
    v2 = sub_100010DE0(&qword_100825A40);
    v3 = sub_10048EDDC();
    v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_100825A38);
  }
}

unint64_t sub_10048EDDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100825A48;
  if (!qword_100825A48)
  {
    v1 = sub_100010DE0(&qword_100825A40);
    result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100825A48);
  }
  return result;
}

uint64_t sub_10048EE28()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
}

void sub_10048EE38(void *a1)
{
  sub_10048FC80();

}

void (*sub_10048EE5C(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  return sub_10023D054;
}

uint64_t sub_10048EE9C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664D90, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10048EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664D90, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

void (*sub_10048EF1C(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100664D90, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001EB20;
}

uint64_t sub_10048EF80()
{
  return sub_10000E720(&qword_100825A50, type metadata accessor for LockupMediaView, (uint64_t)&unk_100664D20);
}

uint64_t sub_10048EFAC()
{
  return sub_10000E720(&qword_100825A58, type metadata accessor for LockupMediaView, (uint64_t)&unk_100664D50);
}

void sub_10048EFD8(uint64_t a1, uint64_t a2, int64_t a3, char a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  __n128 v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;

  v8 = a1;
  if (!a2)
  {
LABEL_9:
    if (!v8)
      goto LABEL_11;
    goto LABEL_10;
  }
  v9 = Trailers.videos.getter(a1);
  v10 = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 >= 0)
      v9 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v9))
    {
LABEL_4:
      if ((v10 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
      }
      else
      {
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v11)
        {
          __break(1u);
          goto LABEL_49;
        }
        swift_retain(*(_QWORD *)(v10 + 32));
      }
      swift_bridgeObjectRelease(v10);
      v4 = Video.preview.getter(v12);
      swift_release();
      swift_retain(v4);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v5 < v11 >> 1)
      {
LABEL_8:
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v4);
        specialized Array._endMutation()(v14);
        swift_release();
        goto LABEL_9;
      }
LABEL_49:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v5 + 1, 1);
      goto LABEL_8;
    }
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease(v10);
  if (v8)
  {
LABEL_10:
    v15 = Screenshots.artwork.getter(a1);
    sub_10001A4A8(v15);
  }
LABEL_11:
  if ((a4 & 1) != 0)
    return;
  v16 = (unint64_t)_swiftEmptyArrayStorage >> 62;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) <= a3)
      return;
LABEL_14:
    if (a3 < 0)
    {
      __break(1u);
    }
    else if (!v16)
    {
      v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17 >= a3)
        goto LABEL_17;
      goto LABEL_56;
    }
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v31 = _swiftEmptyArrayStorage;
    else
      v31 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v8 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v8 < 0)
    {
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v17 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v17 >= a3)
    {
LABEL_17:
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0 && a3)
      {
        type metadata accessor for Artwork(0);
        v18 = 0;
        do
        {
          v19 = v18 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v18);
          v18 = v19;
        }
        while (a3 != v19);
      }
      if (v16)
      {
        if ((uint64_t)_swiftEmptyArrayStorage < 0)
          v21 = _swiftEmptyArrayStorage;
        else
          v21 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v17 = _CocoaArrayWrapper.subscript.getter(0, a3, v21);
        v8 = v22;
        v16 = v23;
        a3 = v24;
        v20 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        if ((a3 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        v17 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
        v8 = ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32;
        a3 = (2 * a3) | 1;
        v20 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        if ((a3 & 1) == 0)
        {
LABEL_28:
          sub_1003F90EC(v17, v8, v16, a3);
LABEL_35:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          return;
        }
      }
      v25 = type metadata accessor for __ContiguousArrayStorageBase(0, v20);
      v26 = swift_unknownObjectRetain_n(v17, 2);
      v27 = (_QWORD *)swift_dynamicCastClass(v26, v25);
      if (!v27)
      {
        swift_unknownObjectRelease();
        v27 = _swiftEmptyArrayStorage;
      }
      v28 = v27[2];
      swift_release();
      if (!__OFSUB__((unint64_t)a3 >> 1, v16))
      {
        if (v28 == ((unint64_t)a3 >> 1) - v16)
        {
          if (!swift_dynamicCastClass(v17, v25))
            swift_unknownObjectRelease();
          goto LABEL_35;
        }
        goto LABEL_58;
      }
LABEL_57:
      __break(1u);
LABEL_58:
      swift_unknownObjectRelease();
      goto LABEL_28;
    }
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v29 = _swiftEmptyArrayStorage;
  else
    v29 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v30 > a3)
    goto LABEL_14;
}

uint64_t sub_10048F350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 v29;
  char v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a1;
  v1 = type metadata accessor for AppPlatform(0);
  v52 = *(_QWORD *)(v1 - 8);
  v53 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_100825A70);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100825A78);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v46 - v15;
  v17 = (id)ASKDeviceTypeGetCurrent(v14);
  v18 = ASKDeviceTypePad;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  if (v19 == v22 && v21 == v23)
  {

    swift_bridgeObjectRelease_n(v21, 2);
LABEL_9:
    v30 = 0;
    return v30 & 1;
  }
  v25 = v23;
  v47 = v4;
  v48 = v12;
  v49 = v16;
  v50 = v6;
  v46 = v9;
  v26 = v52;
  v27 = v53;
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);

  swift_bridgeObjectRelease(v21);
  v29 = swift_bridgeObjectRelease(v25);
  v30 = 0;
  if ((v28 & 1) == 0)
  {
    if (v51)
    {
      v31 = (uint64_t)v49;
      MediaPlatform.appPlatform.getter(v29);
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
      v32(v31, 0, 1, v27);
    }
    else
    {
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
      v31 = (uint64_t)v49;
      v32((uint64_t)v49, 1, 1, v27);
    }
    v34 = (uint64_t)v50;
    v35 = v3;
    v36 = v27;
    v37 = v47;
    v38 = (uint64_t)v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v48, enum case for AppPlatform.watch(_:), v27);
    v32(v38, 0, 1, v27);
    v39 = v34 + *(int *)(v37 + 48);
    sub_100018ADC(v31, v34, &qword_100825A78);
    sub_100018ADC(v38, v39, &qword_100825A78);
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v40(v34, 1, v27) == 1)
    {
      sub_100010F2C(v38, &qword_100825A78);
      sub_100010F2C(v31, &qword_100825A78);
      if (v40(v39, 1, v27) == 1)
      {
        sub_100010F2C(v34, &qword_100825A78);
        goto LABEL_9;
      }
    }
    else
    {
      v41 = (uint64_t)v46;
      sub_100018ADC(v34, (uint64_t)v46, &qword_100825A78);
      if (v40(v39, 1, v36) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v35, v39, v36);
        v42 = sub_10000E720(&qword_100825A80, (uint64_t (*)(uint64_t))&type metadata accessor for AppPlatform, (uint64_t)&protocol conformance descriptor for AppPlatform);
        v43 = dispatch thunk of static Equatable.== infix(_:_:)(v41, v35, v36, v42);
        v44 = v36;
        v45 = *(void (**)(char *, uint64_t))(v26 + 8);
        v45(v35, v44);
        sub_100010F2C(v38, &qword_100825A78);
        sub_100010F2C(v31, &qword_100825A78);
        v45((char *)v41, v44);
        sub_100010F2C(v34, &qword_100825A78);
        v30 = v43 ^ 1;
        return v30 & 1;
      }
      sub_100010F2C(v38, &qword_100825A78);
      sub_100010F2C(v31, &qword_100825A78);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v41, v36);
    }
    sub_100010F2C(v34, &qword_100825A70);
    v30 = 1;
  }
  return v30 & 1;
}

uint64_t sub_10048F73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v32 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v4 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_100825A68);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_100825A60);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - v17;
  LOBYTE(a1) = sub_10048F350(a1);
  sub_100018ADC(a2, (uint64_t)v18, &qword_100825A60);
  if ((a1 & 1) == 0)
  {
    v23 = &qword_100825A60;
    v24 = (uint64_t)v18;
LABEL_9:
    sub_100010F2C(v24, v23);
    v22 = 0;
    return v22 & 1;
  }
  v19 = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v15, enum case for ScreenshotsDisplayStyle.fourScreenshots(_:), v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v19);
  v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100018ADC((uint64_t)v18, (uint64_t)v9, &qword_100825A60);
  sub_100018ADC((uint64_t)v15, v20, &qword_100825A60);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v9, 1, v19) != 1)
  {
    v25 = v4;
    sub_100018ADC((uint64_t)v9, (uint64_t)v12, &qword_100825A60);
    if (v21(v20, 1, v32) != 1)
    {
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
      v28 = v32;
      v27(v6, v20, v32);
      v29 = sub_10000E720((unint64_t *)&qword_100816B30, (uint64_t (*)(uint64_t))&type metadata accessor for ScreenshotsDisplayStyle, (uint64_t)&protocol conformance descriptor for ScreenshotsDisplayStyle);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v6, v28, v29);
      v30 = *(void (**)(char *, uint64_t))(v25 + 8);
      v30(v6, v28);
      sub_100010F2C((uint64_t)v15, &qword_100825A60);
      sub_100010F2C((uint64_t)v18, &qword_100825A60);
      v30(v12, v28);
      sub_100010F2C((uint64_t)v9, &qword_100825A60);
      return v22 & 1;
    }
    sub_100010F2C((uint64_t)v15, &qword_100825A60);
    sub_100010F2C((uint64_t)v18, &qword_100825A60);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v32);
    goto LABEL_8;
  }
  sub_100010F2C((uint64_t)v15, &qword_100825A60);
  sub_100010F2C((uint64_t)v18, &qword_100825A60);
  if (v21(v20, 1, v32) != 1)
  {
LABEL_8:
    v23 = &qword_100825A68;
    v24 = (uint64_t)v9;
    goto LABEL_9;
  }
  sub_100010F2C((uint64_t)v9, &qword_100825A60);
  v22 = 1;
  return v22 & 1;
}

void sub_10048FA84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  char v30[24];

  v2 = v1 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayConfiguration;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayConfiguration + 48);
  v4 = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(a1 + 80);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v2 = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 16) = v5;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 48) = v6;
  *(_OWORD *)(v2 + 64) = v4;
  sub_1000F3B80(a1);

  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, v30, 0, 0);
  v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v8);
    return;
  }
  if (v8 < 0)
    v29 = v8;
  else
    v29 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      else
        v11 = (char *)*(id *)(v8 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      v13 = *(_QWORD *)(v2 + 8);
      v14 = *(_BYTE *)(v2 + 16);
      v15 = *(_QWORD *)(v2 + 24);
      v16 = *(_BYTE *)(v2 + 32);
      v17 = *(_QWORD *)(v2 + 40);
      v18 = *(void **)(v2 + 48);
      v19 = &v11[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_displayConfiguration];
      v20 = *(void **)&v11[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_displayConfiguration + 48];
      v21 = *(_OWORD *)(v2 + 56);
      v22 = *(_OWORD *)(v2 + 72);
      *(_QWORD *)v19 = *(_QWORD *)v2;
      *((_QWORD *)v19 + 1) = v13;
      v19[16] = v14;
      *((_QWORD *)v19 + 3) = v15;
      v19[32] = v16;
      *((_QWORD *)v19 + 5) = v17;
      *((_QWORD *)v19 + 6) = v18;
      *(_OWORD *)(v19 + 56) = v21;
      *(_OWORD *)(v19 + 72) = v22;
      v23 = v18;

      v24 = OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView;
      v25 = *(id *)&v12[OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView];
      dispatch thunk of RoundedCornerView.borderWidth.setter(v25);

      v26 = *(void **)&v12[v24];
      v27 = (void *)*((_QWORD *)v19 + 6);
      v28 = v26;
      dispatch thunk of RoundedCornerView.borderColor.setter(v27);

      objc_msgSend(v12, "setNeedsLayout");
    }
    while (v9 != v10);
    goto LABEL_13;
  }
  __break(1u);
}

id sub_10048FC80()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t Strong;
  __n128 v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView]);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
    v6 = objc_msgSend(v5, "superview");
    if (!v6)
    {
LABEL_6:

      goto LABEL_7;
    }
    v7 = v6;
    sub_1000951BC();
    v8 = v1;
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v7 & 1) != 0)
    {
      v10 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      if (v10)
      {
        v5 = v10;
        objc_msgSend(v10, "removeFromSuperview");
        goto LABEL_6;
      }
    }
  }
LABEL_7:
  v11 = swift_unknownObjectWeakAssign(v4);
  v12 = swift_unknownObjectWeakLoadStrong(v11);
  if (v12)
  {
    v14 = (void *)v12;
    objc_msgSend(v1, "addSubview:", v12);

  }
  sub_10048E30C(v13);
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_10048FDB4(objc_class *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Swift::Bool v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  UIImage_optional v40;

  v3 = v2;
  v39 = (uint64_t)_swiftEmptyArrayStorage;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView);
  if (Strong)
  {
    v7 = Strong;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v9 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v8 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v9 >= v8 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
    v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
    specialized Array._endMutation()(v10);

  }
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews, &v38, 0, 0);
  v12 = *v11;
  if ((unint64_t)*v11 >> 62)
  {
    if (v12 < 0)
      v33 = *v11;
    else
      v33 = v12 & 0xFFFFFFFFFFFFFF8;
    v34 = sub_1000951BC();
    v35 = swift_bridgeObjectRetain(v12);
    v14 = _bridgeCocoaArray<A>(_:)(v33, v34, v35);
  }
  else
  {
    swift_bridgeObjectRetain_n(v12, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v13);
    sub_1000951BC();
    v14 = v12;
  }
  swift_bridgeObjectRelease(v12);
  sub_10001A304(v14);
  v15 = v39;
  if (!((unint64_t)v39 >> 62))
  {
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      goto LABEL_9;
LABEL_29:
    swift_bridgeObjectRelease(v15);
    return;
  }
  if (v39 < 0)
    v36 = v39;
  else
    v36 = v39 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v39);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v15);
  if (v37 <= a2)
    goto LABEL_29;
LABEL_9:
  if ((v15 & 0xC000000000000001) == 0)
  {
    if (a2 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
    {
      v16 = *(id *)(v15 + 8 * a2 + 32);
      goto LABEL_13;
    }
    __break(1u);
    return;
  }
  v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v15);
LABEL_13:
  v17 = v16;
  v18 = type metadata accessor for VideoView(0);
  v19 = swift_dynamicCastClass(v17, v18);
  if (v19)
  {
    v20 = v19;
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v15).n128_u64[0];
    v22 = qword_100828468;
    v23 = *(void **)(v20 + qword_100828468);
    v24 = objc_msgSend(v23, "layer", v21);
    objc_msgSend(v24, "removeAllAnimations");

    objc_msgSend(v23, "setImage:", a1);
    objc_msgSend(*(id *)(v20 + v22), "setNeedsDisplay");

  }
  else
  {

    if ((v15 & 0xC000000000000001) != 0)
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v15);
    else
      v25 = *(id *)(v15 + 8 * a2 + 32);
    v26 = v25;
    swift_bridgeObjectRelease(v15);
    v27 = type metadata accessor for BorderedScreenshotView();
    v28 = swift_dynamicCastClass(v26, v27);
    if (v28)
    {
      v29 = v28;
      v30 = OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView;
      v31 = *(id *)(v28 + OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView);
      v40.value.super.isa = a1;
      v40.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v40, v32);

      objc_msgSend(*(id *)(v29 + v30), "setNeedsDisplay");
    }

  }
}

void sub_1004900B0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v1 = sub_10000DAF8(&qword_100825A40);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_imageViews] = _swiftEmptyArrayStorage;
  v4 = type metadata accessor for BorderedScreenshotView();
  ViewRecycler.init()(v4);
  v5 = sub_10048EDDC();
  ReusePool.init(recycler:limit:)(v3, 2, v1, v5);
  v6 = swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_videoView]);
  v7 = &v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_metrics];
  if (qword_100805E20 != -1)
    swift_once(&qword_100805E20, sub_10048D53C);
  v8 = type metadata accessor for LockupMediaLayout.Metrics(0, v6);
  v9 = sub_10000EFC4(v8, (uint64_t)qword_1008259D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v9, v8);
  v10 = OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayConfiguration;
  if (qword_1008046E0 != -1)
    swift_once(&qword_1008046E0, sub_100078A50);
  v11 = &v0[v10];
  v12 = qword_100864AE0;
  v13 = byte_100864AE8;
  v14 = qword_100864AF0;
  v15 = byte_100864AF8;
  v16 = qword_100864B00;
  v17 = (void *)qword_100864B08;
  v18 = unk_100864B10;
  v19 = unk_100864B20;
  *(_QWORD *)v11 = qword_100864AD8;
  *((_QWORD *)v11 + 1) = v12;
  v11[16] = v13;
  *((_QWORD *)v11 + 3) = v14;
  v11[32] = v15;
  *((_QWORD *)v11 + 5) = v16;
  *((_QWORD *)v11 + 6) = v17;
  *(_OWORD *)(v11 + 56) = v18;
  *(_OWORD *)(v11 + 72) = v19;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_platform] = 0;
  v20 = &v0[OBJC_IVAR____TtC20ProductPageExtension15LockupMediaView_screenshotsDisplayStyle];
  v21 = enum case for ScreenshotsDisplayStyle.standard(_:);
  v22 = type metadata accessor for ScreenshotsDisplayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = v17;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/LockupMediaView.swift", 42, 2, 199, 0);
  __break(1u);
}

uint64_t sub_1004902DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a8;
  v14 = type metadata accessor for ActivityFeedLockupActionHandlers(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActivityFeedLockupViewModel(0, v15);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 16))(v21, a1, v19);
  sub_1004903F0(a3, a4, a5, a6, a7, v25, (uint64_t)v17);
  return ActivityFeedPlatterView.init(data:actionHandlers:)(v21, v17);
}

uint64_t sub_1004903F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a6;
  v54 = a7;
  v51 = a5;
  v48 = a1;
  v49 = a4;
  v10 = sub_10000DAF8(&qword_10081C870);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v52 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v50 = (uint64_t)&v45 - v14;
  __chkstk_darwin(v15);
  v47 = (uint64_t)&v45 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v45 - v21;
  v23 = swift_allocObject(&unk_1007566A8, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v7);
  sub_100491A24(a3, (uint64_t)v22);
  sub_100491A24(a2, (uint64_t)v19);
  v24 = *(unsigned __int8 *)(v11 + 80);
  v25 = (v24 + 16) & ~v24;
  v45 = v24 | 7;
  v26 = (v12 + v24 + v25) & ~v24;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1007566D0, v28 + 8, v24 | 7);
  sub_100491B64((uint64_t)v22, v29 + v25);
  sub_100491B64((uint64_t)v19, v29 + v26);
  *(_QWORD *)(v29 + v27) = v23;
  v30 = v48;
  *(_QWORD *)(v29 + v28) = v48;
  v31 = swift_allocObject(&unk_1007566A8, 24, 7);
  v32 = v46;
  swift_unknownObjectWeakInit(v31 + 16, v46);
  v33 = v47;
  sub_100491A24(v49, v47);
  v34 = (v24 + 32) & ~v24;
  v35 = v34 + v12;
  v36 = v45;
  v37 = swift_allocObject(&unk_1007566F8, v34 + v12, v45);
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v30;
  sub_100491B64(v33, v37 + v34);
  v38 = swift_allocObject(&unk_1007566A8, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16, v32);
  v39 = v50;
  sub_100491A24(v51, v50);
  v40 = swift_allocObject(&unk_100756720, v35, v36);
  *(_QWORD *)(v40 + 16) = v38;
  *(_QWORD *)(v40 + 24) = v30;
  sub_100491B64(v39, v40 + v34);
  v41 = swift_allocObject(&unk_1007566A8, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v32);
  v42 = v52;
  sub_100491A24(v53, v52);
  v43 = swift_allocObject(&unk_100756748, v35, v36);
  *(_QWORD *)(v43 + 16) = v41;
  *(_QWORD *)(v43 + 24) = v30;
  sub_100491B64(v42, v43 + v34);
  swift_retain_n(v30, 4);
  return ActivityFeedLockupActionHandlers.init(profileHandler:leaderboardsHandler:achievementsHandler:appHandler:)(sub_100491BAC, v29, sub_100491C38, v37, sub_100491CD0, v40, sub_100491DF0, v43);
}

double sub_100490708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  double result;
  _QWORD v27[4];

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = type metadata accessor for ActionRunner.Origin(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionMetrics(0, v15);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 16))(v19, a4, v17);
  v21 = type metadata accessor for GameCenterPlayerProfileAction(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = swift_bridgeObjectRetain(a2);
  v23 = GameCenterPlayerProfileAction.init(playerId:actionMetrics:)(a1, a2, v19, v22);
  if (UIResponder.nearestActionRunner.getter())
  {
    v27[3] = ObjectType;
    v27[0] = v5;
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for ActionRunner.Origin.userInitiated(_:), v11);
    v24 = v5;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v23, v27, v14, a3);
    swift_release();
    v25 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
    sub_100010F2C((uint64_t)v27, &qword_100808F20);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1004908A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  double result;
  uint64_t ObjectType;
  uint64_t v30;
  _QWORD v31[4];

  v7 = v6;
  v30 = a5;
  ObjectType = swift_getObjectType();
  v13 = type metadata accessor for ActionRunner.Origin(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&ObjectType - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActionMetrics(0, v17);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&ObjectType - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 16))(v21, a6, v19);
  v23 = type metadata accessor for GameCenterLeaderboardsAction(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  swift_bridgeObjectRetain(a2);
  v24 = swift_bridgeObjectRetain(a4);
  v25 = GameCenterLeaderboardsAction.init(leaderboardID:bundleID:actionMetrics:)(a1, a2, a3, a4, v21, v24);
  if (UIResponder.nearestActionRunner.getter())
  {
    v31[3] = ObjectType;
    v31[0] = v7;
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for ActionRunner.Origin.userInitiated(_:), v13);
    v26 = v7;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v25, v31, v16, v30);
    swift_release();
    v27 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v27);
    sub_100010F2C((uint64_t)v31, &qword_100808F20);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100490A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  __n128 v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v6 = v5;
  v29 = a4;
  ObjectType = swift_getObjectType();
  v12 = type metadata accessor for ActionRunner.Origin(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ActionMetrics(0, v16);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v21 + 16))(v20, a5, v18);
  v22 = type metadata accessor for GameCenterAchievementsAction(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  swift_bridgeObjectRetain(a3);
  v23 = swift_bridgeObjectRetain(a1);
  v24 = GameCenterAchievementsAction.init(bundleID:achievementIdsToHighlight:actionMetrics:)(a2, a3, a1, v20, v23);
  if (UIResponder.nearestActionRunner.getter())
  {
    v30[3] = ObjectType;
    v30[0] = v6;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for ActionRunner.Origin.userInitiated(_:), v12);
    v25 = v6;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v24, v30, v15, v29);
    swift_release();
    v26 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v26);
    sub_100010F2C((uint64_t)v30, &qword_100808F20);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100490C14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  double result;
  char *v54;
  uint64_t ObjectType;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  Swift::String v73;
  char *v74;
  _OWORD v75[2];
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v69 = a4;
  v58 = a3;
  v73._countAndFlagsBits = a1;
  v73._object = a2;
  ObjectType = swift_getObjectType();
  v59 = type metadata accessor for ActionRunner.Origin(0);
  v57 = *(_QWORD *)(v59 - 8);
  v4 = __chkstk_darwin(v59);
  v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowOrigin(0, v4);
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  __chkstk_darwin(v6);
  v71 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowAnimationBehavior(0);
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  __chkstk_darwin(v8);
  v70 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for FlowPresentationContext(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v64 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ActionMetrics(0, v11);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FlowPage(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v21);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v54 - v25;
  v28 = type metadata accessor for URL(0, v27);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v74 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v76 = 0;
  *((_QWORD *)&v76 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(*((_QWORD *)&v76 + 1));
  *(_QWORD *)&v76 = 0xD00000000000001BLL;
  *((_QWORD *)&v76 + 1) = 0x8000000100686EA0;
  String.append(_:)(v73);
  v31 = *((_QWORD *)&v76 + 1);
  URL.init(string:)(v76, *((_QWORD *)&v76 + 1));
  v32 = swift_bridgeObjectRelease(v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48))(v26, 1, v28, v32) == 1)
  {
    v33 = (uint64_t *)&unk_1008092A0;
    v34 = v26;
LABEL_5:
    sub_100010F2C((uint64_t)v34, v33);
    return result;
  }
  v35 = v74;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v74, v26, v28);
  v78 = 0;
  v76 = 0u;
  v77 = 0u;
  v36 = *(void (**)(char *, _QWORD, uint64_t))(v18 + 104);
  v54 = v20;
  v36(v20, enum case for FlowPage.product(_:), v17);
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v23, v35, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
  v37 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v16, 1, 1, v37);
  memset(v75, 0, sizeof(v75));
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v13, v69, v61);
  v38 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v64, enum case for FlowPresentationContext.infer(_:), v63);
  v39 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v70, enum case for FlowAnimationBehavior.infer(_:), v66);
  v40 = v71;
  v41 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v67 + 104))(v71, enum case for FlowOrigin.inapp(_:), v68);
  v42 = static FlowActionPresentation.stackPush.getter(v41);
  v44 = v43;
  v45 = type metadata accessor for FlowAction(0);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  v46 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v76, 0, 0, 0, v54, v23, 0, 0, v16, v75, v13, v38, v39, v40, 0, v42, v44);
  v47 = v72;
  if (UIResponder.nearestActionRunner.getter())
  {
    *((_QWORD *)&v77 + 1) = ObjectType;
    *(_QWORD *)&v76 = v47;
    v48 = v57;
    v49 = v56;
    v50 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for ActionRunner.Origin.userInitiated(_:), v59);
    v51 = v47;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v46, &v76, v49, v58);
    swift_release();
    v52 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v49, v50, v52);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v74, v28);
    v33 = &qword_100808F20;
    v34 = (char *)&v76;
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v74, v28);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004911C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v29 = a2;
  v30 = a7;
  v12 = type metadata accessor for ActionMetrics(0, a2);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8(&qword_10081C870);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  v22 = a6 + 16;
  if ((a3 & 1) != 0)
    v23 = a4;
  else
    v23 = a5;
  sub_100491A24(v23, (uint64_t)&v28 - v20);
  swift_beginAccess(v22, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v22);
  if (Strong)
  {
    v25 = (void *)Strong;
    sub_100491A24((uint64_t)v21, (uint64_t)v18);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
    if ((_DWORD)v26 == 1)
    {
      static ActionMetrics.notInstrumented.getter(v26);
      sub_100010F2C((uint64_t)v18, &qword_10081C870);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    }
    sub_100490708(a1, v29, v30, (uint64_t)v15);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return sub_100010F2C((uint64_t)v21, &qword_10081C870);
}

uint64_t sub_100491374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  void *v24;
  uint64_t v25;
  _BYTE v27[24];

  v15 = sub_10000DAF8(&qword_10081C870);
  __chkstk_darwin(v15);
  v17 = &v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v19 = type metadata accessor for ActionMetrics(0, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = &v27[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a7 += 16;
  swift_beginAccess(a7, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a7);
  if (result)
  {
    v24 = (void *)result;
    sub_100491A24(a9, (uint64_t)v17);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19);
    if ((_DWORD)v25 == 1)
    {
      static ActionMetrics.notInstrumented.getter(v25);
      sub_100010F2C((uint64_t)v17, &qword_10081C870);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v17, v19);
    }
    sub_1004908A8(a1, a2, a5, a6, a8, (uint64_t)v22);

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  return result;
}

uint64_t sub_1004914F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  _BYTE v26[24];

  v14 = sub_10000DAF8(&qword_10081C870);
  __chkstk_darwin(v14);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v18 = type metadata accessor for ActionMetrics(0, v17);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = &v26[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a6 += 16;
  swift_beginAccess(a6, v26, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a6);
  if (result)
  {
    v23 = (void *)result;
    sub_100491A24(a8, (uint64_t)v16);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18);
    if ((_DWORD)v24 == 1)
    {
      static ActionMetrics.notInstrumented.getter(v24);
      sub_100010F2C((uint64_t)v16, &qword_10081C870);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v16, v18);
    }
    sub_100490A64(a1, a4, a5, a7, (uint64_t)v21);

    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  return result;
}

uint64_t sub_100491668(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  void *v20;
  uint64_t v21;
  _BYTE v23[24];

  v11 = sub_10000DAF8(&qword_10081C870);
  __chkstk_darwin(v11);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for ActionMetrics(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v23, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a4);
  if (result)
  {
    v20 = (void *)result;
    sub_100491A24(a6, (uint64_t)v13);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
    if ((_DWORD)v21 == 1)
    {
      static ActionMetrics.notInstrumented.getter(v21);
      sub_100010F2C((uint64_t)v13, &qword_10081C870);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v13, v15);
    }
    sub_100490C14(a1, a2, a5, (uint64_t)v18);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_100491900()
{
  uint64_t v0;

  return sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension40GameCenterActivityFeedCollectionViewCell_itemLayoutContext, &qword_1008081F0);
}

uint64_t sub_100491950()
{
  return type metadata accessor for GameCenterActivityFeedCollectionViewCell(0);
}

uint64_t type metadata accessor for GameCenterActivityFeedCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100825AC0;
  if (!qword_100825AC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GameCenterActivityFeedCollectionViewCell);
  return result;
}

void sub_100491994(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 88);
  }
}

uint64_t sub_100491A00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100491A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10081C870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100491A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(sub_10000DAF8(&qword_10081C870) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (v4 + v2 + v3) & ~v2;
  v6 = v0 + v3;
  v8 = type metadata accessor for ActionMetrics(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v6, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  if (!v10(v0 + v5, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v5, v8);
  swift_release();
  swift_release();
  return swift_deallocObject(v0, ((((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100491B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10081C870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100491BAC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(sub_10000DAF8(&qword_10081C870) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  return sub_1004911C8(a1, a2, a3, v3 + v9, v3 + ((v10 + v8 + v9) & ~v8), *(_QWORD *)(v3 + ((v10 + ((v10 + v8 + v9) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((v10 + ((v10 + v8 + v9) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100491C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;

  v13 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DAF8(&qword_10081C870) - 8) + 80);
  return sub_100491374(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), v6 + ((v13 + 32) & ~v13));
}

uint64_t sub_100491CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DAF8(&qword_10081C870) - 8) + 80);
  return sub_1004914F0(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v5 + ((v11 + 32) & ~v11));
}

uint64_t sub_100491D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(sub_10000DAF8(&qword_10081C870) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release();
  swift_release();
  v6 = type metadata accessor for ActionMetrics(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100491DF0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DAF8(&qword_10081C870) - 8) + 80);
  return sub_100491668(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v7 + 32) & ~v7));
}

double sub_100491E4C(void *a1, double a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  static ActivityFeedPlatterView.viewHeight(for:)(v4);
  return a2;
}

uint64_t TodayCardLockupLayout.init(metrics:artworkView:ordinalText:headingText:titleText:subtitleText:tertiaryTitleText:crossLinkTitleText:crossLinkSubtitleText:offerText:offerButton:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  _BYTE v90[760];

  v80 = a7;
  v81 = a5;
  v82 = a4;
  v77 = a1;
  v78 = a9;
  sub_100225678((uint64_t)a1, (uint64_t)v90);
  v83 = a8;
  v16 = *(_QWORD *)(a8 + 24);
  v90[744] = v16 != 0;
  v76 = a2;
  sub_10000EF80((uint64_t)a2, (uint64_t)&v90[344]);
  v75 = a3;
  sub_100018ADC(a3, (uint64_t)v84, (uint64_t *)&unk_100810120);
  v17 = v85;
  if (v85)
  {
    v18 = v86;
    sub_100010F08(v84, v85);
    v19 = type metadata accessor for Optional(0, v17);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = __chkstk_darwin(v19);
    v23 = (char *)&v73 - v22;
    LayoutTextView.nilIfHiddenOrHasNoContent()(v17, v18, v21);
    v24 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v17) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    else
    {
      *((_QWORD *)&v88 + 1) = v17;
      v89 = v18;
      v25 = sub_1000119C0(&v87);
      (*(void (**)(_QWORD *, char *, uint64_t))(v24 + 32))(v25, v23, v17);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
    v87 = 0u;
    v88 = 0u;
    v89 = 0;
  }
  sub_10002548C((uint64_t)&v87, (uint64_t)&v90[384], (uint64_t *)&unk_100810120);
  sub_100018ADC(v82, (uint64_t)v84, (uint64_t *)&unk_100810120);
  v26 = v85;
  if (v85)
  {
    v27 = v86;
    sub_100010F08(v84, v85);
    v28 = type metadata accessor for Optional(0, v26);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = __chkstk_darwin(v28);
    v32 = (char *)&v73 - v31;
    LayoutTextView.nilIfHiddenOrHasNoContent()(v26, v27, v30);
    v33 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v26) == 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    else
    {
      *((_QWORD *)&v88 + 1) = v26;
      v89 = v27;
      v34 = sub_1000119C0(&v87);
      (*(void (**)(_QWORD *, char *, uint64_t))(v33 + 32))(v34, v32, v26);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
    v87 = 0u;
    v88 = 0u;
    v89 = 0;
  }
  sub_10002548C((uint64_t)&v87, (uint64_t)&v90[424], (uint64_t *)&unk_100810120);
  sub_10000EF80((uint64_t)v81, (uint64_t)&v90[464]);
  v35 = a6[3];
  v36 = a6[4];
  v79 = a6;
  sub_100010F08(a6, v35);
  v37 = type metadata accessor for Optional(0, v35);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = __chkstk_darwin(v37);
  v41 = (char *)&v73 - v40;
  if (v16)
    LayoutTextView.nilIfHasNoContent()(v35, v36, v39);
  else
    LayoutTextView.nilIfHiddenOrHasNoContent()(v35, v36, v39);
  v42 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v41, 1, v35) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
    v89 = 0;
    v87 = 0u;
    v88 = 0u;
  }
  else
  {
    *((_QWORD *)&v88 + 1) = v35;
    v89 = v36;
    v43 = sub_1000119C0(&v87);
    (*(void (**)(_QWORD *, char *, uint64_t))(v42 + 32))(v43, v41, v35);
  }
  sub_10002548C((uint64_t)&v87, (uint64_t)&v90[504], (uint64_t *)&unk_100810120);
  sub_100018ADC(v80, (uint64_t)v84, (uint64_t *)&unk_100810120);
  v44 = v85;
  if (v85)
  {
    v45 = v86;
    sub_100010F08(v84, v85);
    v46 = type metadata accessor for Optional(0, v44);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = __chkstk_darwin(v46);
    v50 = (char *)&v73 - v49;
    LayoutTextView.nilIfHiddenOrHasNoContent()(v44, v45, v48);
    v51 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v50, 1, v44) == 1)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    else
    {
      *((_QWORD *)&v88 + 1) = v44;
      v89 = v45;
      v52 = sub_1000119C0(&v87);
      (*(void (**)(_QWORD *, char *, uint64_t))(v51 + 32))(v52, v50, v44);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
    v87 = 0u;
    v88 = 0u;
    v89 = 0;
  }
  v74 = a12;
  sub_10002548C((uint64_t)&v87, (uint64_t)&v90[544], (uint64_t *)&unk_100810120);
  sub_100018ADC(v83, (uint64_t)&v90[584], (uint64_t *)&unk_100810120);
  sub_100018ADC(a10, (uint64_t)v84, (uint64_t *)&unk_100810120);
  v53 = v85;
  if (v85)
  {
    v54 = v86;
    sub_100010F08(v84, v85);
    v55 = type metadata accessor for Optional(0, v53);
    v56 = *(_QWORD *)(v55 - 8);
    v57 = __chkstk_darwin(v55);
    v59 = (char *)&v73 - v58;
    LayoutTextView.nilIfHasNoContent()(v53, v54, v57);
    v60 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v59, 1, v53) == 1)
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v55);
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    else
    {
      *((_QWORD *)&v88 + 1) = v53;
      v89 = v54;
      v61 = sub_1000119C0(&v87);
      (*(void (**)(_QWORD *, char *, uint64_t))(v60 + 32))(v61, v59, v53);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
    v87 = 0u;
    v88 = 0u;
    v89 = 0;
  }
  sub_10002548C((uint64_t)&v87, (uint64_t)&v90[624], (uint64_t *)&unk_100810120);
  sub_100018ADC(a11, (uint64_t)v84, (uint64_t *)&unk_100810120);
  v62 = v85;
  if (v85)
  {
    v63 = v86;
    sub_100010F08(v84, v85);
    v64 = type metadata accessor for Optional(0, v62);
    v65 = *(_QWORD *)(v64 - 8);
    v66 = __chkstk_darwin(v64);
    v68 = (char *)&v73 - v67;
    LayoutTextView.nilIfHiddenOrHasNoContent()(v62, v63, v66);
    v69 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v68, 1, v62) == 1)
    {
      sub_100010F2C(a11, (uint64_t *)&unk_100810120);
      sub_100010F2C(a10, (uint64_t *)&unk_100810120);
      sub_100010F2C(v80, (uint64_t *)&unk_100810120);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v81);
      sub_100010F2C(v82, (uint64_t *)&unk_100810120);
      sub_100010F2C(v75, (uint64_t *)&unk_100810120);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
      sub_1002256B4(v77);
      sub_100010F2C(v83, (uint64_t *)&unk_100810120);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v64);
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    else
    {
      *((_QWORD *)&v88 + 1) = v62;
      v89 = v63;
      v71 = sub_1000119C0(&v87);
      (*(void (**)(_QWORD *, char *, uint64_t))(v69 + 32))(v71, v68, v62);
      sub_100010F2C(a11, (uint64_t *)&unk_100810120);
      sub_100010F2C(a10, (uint64_t *)&unk_100810120);
      sub_100010F2C(v80, (uint64_t *)&unk_100810120);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v81);
      sub_100010F2C(v82, (uint64_t *)&unk_100810120);
      sub_100010F2C(v75, (uint64_t *)&unk_100810120);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
      sub_1002256B4(v77);
      sub_100010F2C(v83, (uint64_t *)&unk_100810120);
    }
    v70 = v79;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  }
  else
  {
    sub_100010F2C(a11, (uint64_t *)&unk_100810120);
    sub_100010F2C(a10, (uint64_t *)&unk_100810120);
    sub_100010F2C(v80, (uint64_t *)&unk_100810120);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v81);
    sub_100010F2C(v82, (uint64_t *)&unk_100810120);
    sub_100010F2C(v75, (uint64_t *)&unk_100810120);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v76);
    sub_1002256B4(v77);
    sub_100010F2C(v83, (uint64_t *)&unk_100810120);
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
    v87 = 0u;
    v88 = 0u;
    v89 = 0;
    v70 = v79;
  }
  sub_10002548C((uint64_t)&v87, (uint64_t)&v90[664], (uint64_t *)&unk_100810120);
  sub_10002548C(v74, (uint64_t)&v90[704], (uint64_t *)&unk_10080CE00);
  memcpy(v78, v90, 0x2E9uLL);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
}

uint64_t TodayCardLockupLayout.Metrics.init(artworkSize:artworkMargin:ordinalSpaceProvider:headingSpace:titleSpace:subtitleSpace:tertiaryTitleSpace:offerTextSpace:offerButtonSize:offerButtonMargin:preferVerticallyStackedIcon:preferStackedLargeAXLayouts:singleLineTitleAndSubtitle:allowAccessibilityLayout:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, char a14, __int128 *a15, char a16, char a17, char a18, char a19)
{
  uint64_t result;

  *(double *)a9 = a10;
  *(double *)(a9 + 8) = a11;
  sub_100010E24(a1, a9 + 16);
  *(_QWORD *)(a9 + 56) = a2;
  *(_QWORD *)(a9 + 64) = a3;
  sub_100010E24(a4, a9 + 72);
  sub_100010E24(a5, a9 + 112);
  sub_100010E24(a8, a9 + 232);
  sub_100010E24(a6, a9 + 152);
  sub_100010E24(a7, a9 + 192);
  *(_QWORD *)(a9 + 272) = a12;
  *(_QWORD *)(a9 + 280) = a13;
  *(_BYTE *)(a9 + 288) = a14 & 1;
  result = sub_100010E24(a15, a9 + 296);
  *(_BYTE *)(a9 + 336) = a16;
  *(_BYTE *)(a9 + 337) = a17;
  *(_BYTE *)(a9 + 338) = a18;
  *(_BYTE *)(a9 + 339) = a19;
  return result;
}

uint64_t TodayCardLockupLayout.Metrics.ordinalSpaceProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_retain(*(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t TodayCardLockupLayout.Metrics.ordinalSpaceProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 64));
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t TodayCardLockupLayout.Metrics.titleSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 112, a1);
}

uint64_t TodayCardLockupLayout.Metrics.titleSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 112);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v3);
  return sub_100010E24(a1, (uint64_t)v3);
}

uint64_t TodayCardLockupLayout.Metrics.subtitleSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 152, a1);
}

uint64_t TodayCardLockupLayout.Metrics.subtitleSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 152);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v3);
  return sub_100010E24(a1, (uint64_t)v3);
}

uint64_t (*TodayCardLockupLayout.Metrics.subtitleSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.tertiaryTitleSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 192, a1);
}

uint64_t TodayCardLockupLayout.Metrics.tertiaryTitleSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 192);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v3);
  return sub_100010E24(a1, (uint64_t)v3);
}

uint64_t (*TodayCardLockupLayout.Metrics.tertiaryTitleSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.offerTextSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 232, a1);
}

uint64_t TodayCardLockupLayout.Metrics.offerTextSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 232);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v3);
  return sub_100010E24(a1, (uint64_t)v3);
}

uint64_t (*TodayCardLockupLayout.Metrics.offerTextSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.offerButtonSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 272);
}

uint64_t TodayCardLockupLayout.Metrics.offerButtonSize.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 272) = result;
  *(_QWORD *)(v3 + 280) = a2;
  *(_BYTE *)(v3 + 288) = a3 & 1;
  return result;
}

uint64_t (*TodayCardLockupLayout.Metrics.offerButtonSize.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.offerButtonMargin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 296, a1);
}

uint64_t TodayCardLockupLayout.Metrics.offerButtonMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 296);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v3);
  return sub_100010E24(a1, (uint64_t)v3);
}

uint64_t (*TodayCardLockupLayout.Metrics.offerButtonMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.preferVerticallyStackedIcon.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 336);
}

uint64_t TodayCardLockupLayout.Metrics.preferVerticallyStackedIcon.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 336) = result;
  return result;
}

uint64_t (*TodayCardLockupLayout.Metrics.preferVerticallyStackedIcon.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.preferStackedLargeAXLayouts.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 337);
}

uint64_t TodayCardLockupLayout.Metrics.preferStackedLargeAXLayouts.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 337) = result;
  return result;
}

uint64_t (*TodayCardLockupLayout.Metrics.preferStackedLargeAXLayouts.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.singleLineTitleAndSubtitle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 338);
}

uint64_t TodayCardLockupLayout.Metrics.singleLineTitleAndSubtitle.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 338) = result;
  return result;
}

uint64_t (*TodayCardLockupLayout.Metrics.singleLineTitleAndSubtitle.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t TodayCardLockupLayout.Metrics.allowAccessibilityLayout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 339);
}

uint64_t TodayCardLockupLayout.Metrics.allowAccessibilityLayout.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 339) = result;
  return result;
}

uint64_t (*TodayCardLockupLayout.Metrics.allowAccessibilityLayout.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

void *TodayCardLockupLayout.Metrics.init(byCopying:)@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  return memcpy(a2, __src, 0x154uLL);
}

uint64_t TodayCardLockupLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100225678(v1, a1);
}

uint64_t TodayCardLockupLayout.artworkView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 344, a1);
}

uint64_t TodayCardLockupLayout.ordinalText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 384, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.headingText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 424, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.titleText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000EF80(v1 + 464, a1);
}

uint64_t TodayCardLockupLayout.subtitleText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 504, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.tertiaryTitleText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 544, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.crossLinkTitleText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 584, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.crossLinkSubtitleText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 624, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.offerText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 664, a1, (uint64_t *)&unk_100810120);
}

uint64_t TodayCardLockupLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100018ADC(v1 + 704, a1, (uint64_t *)&unk_10080CE00);
}

double TodayCardLockupLayout.measure(toFit:with:)(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  double v9;
  __int128 v11[2];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if ((UITraitCollection.prefersAccessibilityLayouts.getter(a1) & 1) != 0 && *(_BYTE *)(v3 + 339) == 1)
    sub_100492F58(0, a1, v11, a2, a3);
  else
    sub_10049391C(0, a1, v11, a2, a3);
  sub_100010E24(v11, (uint64_t)v12);
  v7 = v13;
  v8 = v14;
  sub_100010F08(v12, v13);
  v9 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v7, v8, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);
  return v9;
}

uint64_t TodayCardLockupLayout.place(at:with:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  void *v6;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17[2];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v6 = (void *)a1;
  v11 = (_BYTE *)(v5 + 339);
  if (*(_BYTE *)(v5 + 744) == 1)
  {
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(a1) & 1) != 0 && *v11 == 1)
      sub_100492F58(1, v6, v17, a4, a5);
    else
      sub_10049391C(1u, v6, v17, a4, a5);
    sub_100010E24(v17, (uint64_t)v18);
    v12 = v19;
    v13 = v20;
    sub_100010F08(v18, v19);
    dispatch thunk of Placeable.place(at:with:)(v6, v12, v13, a2, a3, a4, a5);
    a1 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  }
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(a1) & 1) != 0 && *v11 == 1)
    sub_100492F58(0, v6, v17, a4, a5);
  else
    sub_10049391C(0, v6, v17, a4, a5);
  sub_100010E24(v17, (uint64_t)v18);
  v14 = v19;
  v15 = v20;
  sub_100010F08(v18, v19);
  dispatch thunk of Placeable.place(at:with:)(v6, v14, v15, a2, a3, a4, a5);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
}

uint64_t sub_100492F58@<X0>(int a1@<W0>, void *a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  _QWORD *v5;
  double *v6;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  double v34;
  id v35;
  char v36;
  char v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double *v42;
  uint64_t v43;
  void (*v44)(double *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  double *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double *v58;
  uint64_t v59;
  void (*v60)(double *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  char *v65;
  double *v66;
  uint64_t v67;
  id v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  double *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  double *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(double *, uint64_t, uint64_t);
  double *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  double *v94;
  uint64_t v95;
  void *v96;
  id v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  void *v107;
  _BYTE *v108;
  void (*v109)(double *, uint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unsigned int v114;
  double *v115;
  double *v116;
  uint64_t v117;
  double *v118;
  char *v119;
  double *v120;
  _QWORD v121[5];
  _QWORD v122[3];
  uint64_t v123;
  _QWORD *v124;
  __int128 v125[47];
  _QWORD v126[95];

  v6 = (double *)v5;
  LODWORD(v109) = a1;
  v113 = a3;
  v10 = v5 + 36;
  v11 = type metadata accessor for HorizontalStack(0);
  v118 = *(double **)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for Resize.Rule(0);
  v14 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v120 = (double *)((char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v119 = (char *)&v102 - v17;
  __chkstk_darwin(v18);
  v116 = (double *)((char *)&v102 - v19);
  __chkstk_darwin(v20);
  v115 = (double *)((char *)&v102 - v21);
  v22 = type metadata accessor for VerticalStack(0);
  v111 = *(_QWORD *)(v22 - 8);
  v112 = v22;
  v23 = __chkstk_darwin(v22);
  v110 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  VerticalStack.init(with:)(sub_1001815F4, 0, v23);
  v25 = v5 + 14;
  v26 = v5[17];
  v27 = *((_QWORD *)v6 + 18);
  sub_100010F08(v25, v26);
  v29 = AnyDimension.value(with:)(a2, v26, v27, v28);
  v30 = v29 + v29;
  v31 = *((_QWORD *)v6 + 22);
  v32 = *((_QWORD *)v6 + 23);
  sub_100010F08((_QWORD *)v6 + 19, v31);
  v34 = v30 + AnyDimension.value(with:)(a2, v31, v32, v33);
  v108 = v10;
  LODWORD(v31) = v10[48];
  sub_100497254((uint64_t)v6, (uint64_t)v126);
  v107 = a2;
  if ((_DWORD)v31 == 1)
  {
    sub_100497288(v126);
LABEL_5:
    v39 = *((_QWORD *)v6 + 46);
    v40 = *((_QWORD *)v6 + 47);
    sub_100010F08((_QWORD *)v6 + 43, v39);
    Measurable.placeable.getter(v125, v39, *(_QWORD *)(v40 + 8));
    v41 = *v6;
    v42 = v115;
    *((_QWORD *)v115 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v42 + 4) = &protocol witness table for CGFloat;
    *v42 = v41;
    v43 = enum case for Resize.Rule.replaced(_:);
    v44 = *(void (**)(double *, uint64_t, uint64_t))(v14 + 104);
    v114 = enum case for Resize.Rule.replaced(_:);
    v45 = v117;
    v44(v42, enum case for Resize.Rule.replaced(_:), v117);
    v46 = *((_QWORD *)v6 + 1);
    v47 = v116;
    *((_QWORD *)v116 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v47 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v47 = v46;
    v44(v47, v43, v45);
    v118 = v6;
    v48 = enum case for Resize.Rule.unchanged(_:);
    v49 = v119;
    v44((double *)v119, enum case for Resize.Rule.unchanged(_:), v45);
    v44(v120, v48, v45);
    v105 = type metadata accessor for Resize(0);
    v123 = v105;
    v124 = &protocol witness table for Resize;
    sub_1000119C0(v122);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v125, v42, v47, v49, v120);
    sub_100497254((uint64_t)v118, (uint64_t)v125);
    v50 = swift_allocObject(&unk_100756918, 776, 7);
    memcpy((void *)(v50 + 16), v125, 0x2E9uLL);
    *(_QWORD *)(v50 + 768) = a2;
    v51 = a2;
    v52 = v110;
    VerticalStack.add(_:with:)(v122, sub_1004972F0, v50);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v122);
    sub_1004943C8(v109 & 1, (uint64_t)v51, v122, a4, a5);
    *((_QWORD *)v42 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v42 + 4) = &protocol witness table for CGFloat;
    *v42 = v34;
    v44(v42, v114, v45);
    v44(v47, v48, v45);
    v53 = v119;
    v44((double *)v119, v48, v45);
    v106 = v48;
    v54 = v48;
    v6 = v118;
    v109 = (void (*)(_QWORD *, uint64_t, uint64_t))v44;
    v44(v120, v54, v45);
    *((_QWORD *)&v125[1] + 1) = v105;
    *(_QWORD *)&v125[2] = &protocol witness table for Resize;
    sub_1000119C0(v125);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v122, v47, v42, v53, v120);
    VerticalStack.add(_:with:)(v125, 0, 0);
    goto LABEL_8;
  }
  v35 = objc_msgSend(a2, "preferredContentSizeCategory");
  v36 = static UIContentSizeCategory.>= infix(_:_:)(v35, UIContentSizeCategoryAccessibilityExtraExtraLarge);

  memcpy(v125, v126, 0x2E9uLL);
  if ((v36 & 1) != 0)
  {
    v37 = BYTE1(v125[21]);
    sub_100497288(v125);
    if ((v37 & 1) != 0)
      goto LABEL_5;
  }
  else
  {
    sub_100497288(v125);
  }
  HorizontalStack.init(with:)(sub_10005421C, 0, v38);
  v55 = *((_QWORD *)v6 + 46);
  v56 = *((_QWORD *)v6 + 47);
  sub_100010F08((_QWORD *)v6 + 43, v55);
  Measurable.placeable.getter(v125, v55, *(_QWORD *)(v56 + 8));
  v57 = *v6;
  v58 = v115;
  *((_QWORD *)v115 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v58 + 4) = &protocol witness table for CGFloat;
  *v58 = v57;
  v59 = enum case for Resize.Rule.replaced(_:);
  v104 = v11;
  v105 = (uint64_t)v13;
  v60 = *(void (**)(double *, uint64_t, uint64_t))(v14 + 104);
  v114 = enum case for Resize.Rule.replaced(_:);
  v61 = v117;
  v60(v58, enum case for Resize.Rule.replaced(_:), v117);
  v62 = *((_QWORD *)v6 + 1);
  v63 = v116;
  *((_QWORD *)v116 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v63 + 4) = &protocol witness table for CGFloat;
  *(_QWORD *)v63 = v62;
  v60(v63, v59, v61);
  v64 = enum case for Resize.Rule.unchanged(_:);
  v65 = v119;
  v60((double *)v119, enum case for Resize.Rule.unchanged(_:), v61);
  v66 = v120;
  v60(v120, v64, v61);
  v103 = type metadata accessor for Resize(0);
  v123 = v103;
  v124 = &protocol witness table for Resize;
  sub_1000119C0(v122);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v125, v58, v63, v65, v66);
  sub_100497254((uint64_t)v6, (uint64_t)v125);
  v67 = swift_allocObject(&unk_1007568C8, 776, 7);
  memcpy((void *)(v67 + 16), v125, 0x2E9uLL);
  *(_QWORD *)(v67 + 768) = a2;
  v68 = a2;
  HorizontalStack.add(_:with:)(v122, sub_1004972B8, v67);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v122);
  v69 = a4 - *v6;
  v70 = *((_QWORD *)v6 + 5);
  v71 = *((_QWORD *)v6 + 6);
  sub_100010F08((_QWORD *)v6 + 2, v70);
  v73 = AnyDimension.value(with:)(v68, v70, v71, v72);
  v74 = sub_1004943C8(v109 & 1, (uint64_t)v68, v125, v69 - v73, a5);
  v75 = static Center.Axis.vertical.getter(v74);
  v123 = type metadata accessor for Center(0);
  v124 = &protocol witness table for Center;
  sub_1000119C0(v122);
  Center.init(_:filling:)(v125, v75);
  *((_QWORD *)v58 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v58 + 4) = &protocol witness table for CGFloat;
  *v58 = v34;
  v60(v58, v114, v61);
  v60(v63, v64, v61);
  v76 = v119;
  v60((double *)v119, v64, v61);
  v77 = v120;
  v106 = v64;
  v109 = (void (*)(_QWORD *, uint64_t, uint64_t))v60;
  v60(v120, v64, v61);
  *((_QWORD *)&v125[1] + 1) = v103;
  *(_QWORD *)&v125[2] = &protocol witness table for Resize;
  sub_1000119C0(v125);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v122, v63, v58, v76, v77);
  v78 = v105;
  HorizontalStack.add(_:with:)(v125, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v125);
  v79 = v104;
  *((_QWORD *)&v125[1] + 1) = v104;
  *(_QWORD *)&v125[2] = &protocol witness table for HorizontalStack;
  v80 = sub_1000119C0(v125);
  v81 = (uint64_t)v118;
  (*((void (**)(_QWORD *, uint64_t, uint64_t))v118 + 2))(v80, v78, v79);
  v52 = v110;
  VerticalStack.add(_:with:)(v125, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v78, v79);
LABEL_8:
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v125);
  sub_100018ADC((uint64_t)(v6 + 88), (uint64_t)v125, (uint64_t *)&unk_10080CE00);
  if (*((_QWORD *)&v125[1] + 1))
  {
    sub_100010E24(v125, (uint64_t)v122);
    if ((*v108 & 1) == 0)
    {
      v83 = *((_QWORD *)v6 + 34);
      v82 = *((_QWORD *)v6 + 35);
      v84 = v123;
      v85 = v124;
      sub_100010F08(v122, v123);
      Measurable.placeable.getter(v125, v84, v85[1]);
      v86 = v115;
      *((_QWORD *)v115 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v86 + 4) = &protocol witness table for CGFloat;
      *(_QWORD *)v86 = v83;
      v87 = v114;
      v88 = v117;
      v89 = (void (*)(double *, uint64_t, uint64_t))v109;
      v109(v86, v114, v117);
      v90 = v116;
      *((_QWORD *)v116 + 3) = &type metadata for CGFloat;
      *((_QWORD *)v90 + 4) = &protocol witness table for CGFloat;
      *(_QWORD *)v90 = v82;
      v89(v90, v87, v88);
      v91 = v119;
      v92 = (uint64_t)v6;
      v93 = v106;
      v89((double *)v119, v106, v88);
      v94 = v120;
      v89(v120, v93, v88);
      v121[3] = type metadata accessor for Resize(0);
      v121[4] = &protocol witness table for Resize;
      sub_1000119C0(v121);
      Resize.init(_:width:height:firstBaseline:lastBaseline:)(v125, v86, v90, v91, v94);
      sub_100497254(v92, (uint64_t)v125);
      v95 = swift_allocObject(&unk_1007568F0, 776, 7);
      memcpy((void *)(v95 + 16), v125, 0x2E9uLL);
      v96 = v107;
      *(_QWORD *)(v95 + 768) = v107;
      v97 = v96;
      VerticalStack.add(_:with:)(v121, sub_1004972E0, v95);
      swift_release();
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v121);
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v122);
  }
  else
  {
    sub_100010F2C((uint64_t)v125, (uint64_t *)&unk_10080CE00);
  }
  v99 = v112;
  v98 = v113;
  v113[3] = v112;
  v98[4] = &protocol witness table for VerticalStack;
  v100 = sub_1000119C0(v98);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v111 + 32))(v100, v52, v99);
}

uint64_t sub_10049391C@<X0>(unsigned int a1@<W0>, void *a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  void (*v32)(double *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  void *v54;
  double v55;
  double v56;
  uint64_t v57;
  void (*v58)(double *, uint64_t, uint64_t);
  uint64_t v59;
  double *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void *v93;
  id v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unsigned int v126;
  double *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _BYTE *v132;
  char *v133;
  char *v134;
  id v135;
  uint64_t v136;
  char *v137;
  _QWORD v138[3];
  uint64_t v139;
  void *v140;
  _QWORD v141[3];
  uint64_t v142;
  uint64_t v143;
  __int128 v144[47];
  _QWORD v145[3];
  uint64_t v146;
  void *v147;

  v6 = v5;
  v135 = a2;
  v126 = a1;
  v10 = type metadata accessor for VerticalStack(0);
  v123 = *(_QWORD *)(v10 - 8);
  v124 = v10;
  __chkstk_darwin(v10);
  v125 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for Resize.Rule(0);
  v12 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v134 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v122 - v15;
  __chkstk_darwin(v17);
  v19 = (double *)((char *)&v122 - v18);
  __chkstk_darwin(v20);
  v22 = (double *)((char *)&v122 - v21);
  v23 = type metadata accessor for HorizontalStack(0);
  v129 = *(_QWORD *)(v23 - 8);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v122 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalStack.init(with:)(sub_100497570, 0, v24);
  v132 = (_BYTE *)(v6 + 288);
  v27 = *(_BYTE *)(v6 + 336);
  v133 = v16;
  v130 = v23;
  v131 = a3;
  v137 = v26;
  v127 = v19;
  v128 = v12;
  if ((v27 & 1) == 0)
  {
    v28 = *(_QWORD *)(v6 + 368);
    v29 = *(_QWORD *)(v6 + 376);
    sub_100010F08((_QWORD *)(v6 + 344), v28);
    Measurable.placeable.getter(v144, v28, *(_QWORD *)(v29 + 8));
    v30 = *(double *)v6;
    *((_QWORD *)v22 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v22 + 4) = &protocol witness table for CGFloat;
    *v22 = v30;
    v31 = enum case for Resize.Rule.replaced(_:);
    v32 = *(void (**)(double *, uint64_t, uint64_t))(v12 + 104);
    v32(v22, enum case for Resize.Rule.replaced(_:), v136);
    v33 = *(_QWORD *)(v6 + 8);
    *((_QWORD *)v19 + 3) = &type metadata for CGFloat;
    v34 = v136;
    *((_QWORD *)v19 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v19 = v33;
    v32(v19, v31, v34);
    v35 = enum case for Resize.Rule.unchanged(_:);
    v32((double *)v16, enum case for Resize.Rule.unchanged(_:), v34);
    v36 = v134;
    v32((double *)v134, v35, v34);
    v146 = type metadata accessor for Resize(0);
    v147 = &protocol witness table for Resize;
    sub_1000119C0(v145);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v144, v22, v19, v16, v36);
    sub_100497254(v6, (uint64_t)v144);
    v37 = swift_allocObject(&unk_100756A08, 776, 7);
    memcpy((void *)(v37 + 16), v144, 0x2E9uLL);
    v38 = v135;
    *(_QWORD *)(v37 + 768) = v135;
    v39 = v38;
    HorizontalStack.add(_:with:)(v145, sub_100497568, v37);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
    v40 = a4 - *(double *)v6;
    v41 = *(_QWORD *)(v6 + 40);
    v42 = *(_QWORD *)(v6 + 48);
    sub_100010F08((_QWORD *)(v6 + 16), v41);
    a4 = v40 - AnyDimension.value(with:)(v39, v41, v42, v43);
  }
  v44 = v126;
  v45 = v6 + 704;
  sub_100018ADC(v6 + 704, (uint64_t)v144, (uint64_t *)&unk_10080CE00);
  v46 = *((_QWORD *)&v144[1] + 1);
  sub_100010F2C((uint64_t)v144, (uint64_t *)&unk_10080CE00);
  v47 = (uint64_t *)v6;
  if (v46 && (*v132 & 1) == 0)
  {
    v49 = a4 - *(double *)(v6 + 272);
    v50 = *(_QWORD *)(v6 + 320);
    v51 = *(_QWORD *)(v6 + 328);
    sub_100010F08((_QWORD *)(v6 + 296), v50);
    v48 = (uint64_t)v135;
    a4 = v49 - AnyDimension.value(with:)(v135, v50, v51, v52);
  }
  else
  {
    v48 = (uint64_t)v135;
  }
  sub_1004943C8(v44 & 1, v48, v145, a4, a5);
  v53 = v146;
  v54 = v147;
  sub_100010F08(v145, v146);
  dispatch thunk of Placeable.measure(toFit:with:)(v48, v53, v54, a4, 1.79769313e308);
  v56 = v55;
  sub_10000EF80((uint64_t)v145, (uint64_t)v141);
  *((_QWORD *)v22 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v22 + 4) = &protocol witness table for CGFloat;
  *v22 = a4;
  v57 = enum case for Resize.Rule.replaced(_:);
  v58 = *(void (**)(double *, uint64_t, uint64_t))(v128 + 104);
  v59 = v136;
  v58(v22, enum case for Resize.Rule.replaced(_:), v136);
  v60 = v127;
  *((_QWORD *)v127 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v60 + 4) = &protocol witness table for CGFloat;
  v61 = v59;
  *v60 = v56;
  v126 = v57;
  v58(v60, v57, v59);
  v62 = enum case for Resize.Rule.unchanged(_:);
  v63 = v133;
  v58((double *)v133, enum case for Resize.Rule.unchanged(_:), v61);
  v64 = v134;
  LODWORD(v128) = v62;
  v58((double *)v134, v62, v61);
  v65 = type metadata accessor for Resize(0);
  *((_QWORD *)&v144[1] + 1) = v65;
  *(_QWORD *)&v144[2] = &protocol witness table for Resize;
  sub_1000119C0(v144);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v141, v22, v60, v63, v64);
  HorizontalStack.add(_:with:)(v144, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v144);
  sub_100018ADC(v45, (uint64_t)v144, (uint64_t *)&unk_10080CE00);
  if (!*((_QWORD *)&v144[1] + 1))
  {
    sub_100010F2C((uint64_t)v144, (uint64_t *)&unk_10080CE00);
    goto LABEL_11;
  }
  sub_100010E24(v144, (uint64_t)v141);
  if ((*v132 & 1) != 0)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
LABEL_11:
    v67 = v130;
    v66 = v131;
    v131[3] = v130;
    v66[4] = &protocol witness table for HorizontalStack;
    v68 = sub_1000119C0(v66);
    (*(void (**)(_QWORD *, char *, uint64_t))(v129 + 32))(v68, v137, v67);
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
  }
  v69 = v47[34];
  if ((v132[48] & 1) != 0)
  {
    v70 = v47[5];
    v71 = v47[6];
    sub_100010F08(v47 + 2, v70);
    v73 = v56 + AnyDimension.value(with:)(v135, v70, v71, v72);
    v74 = v142;
    v75 = v143;
    sub_100010F08(v141, v142);
    Measurable.placeable.getter(v144, v74, *(_QWORD *)(v75 + 8));
    *((_QWORD *)v22 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v22 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v22 = v69;
    v76 = v65;
    v122 = v65;
    v77 = v126;
    v58(v22, v126, v61);
    *((_QWORD *)v60 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v60 + 4) = &protocol witness table for CGFloat;
    *v60 = v73;
    v58(v60, v77, v61);
    v78 = v133;
    v79 = v128;
    v58((double *)v133, v128, v61);
    v80 = v134;
    v58((double *)v134, v79, v61);
    v139 = v76;
    v140 = &protocol witness table for Resize;
    sub_1000119C0(v138);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v144, v22, v60, v78, v80);
    sub_100497254((uint64_t)v47, (uint64_t)v144);
    v81 = swift_allocObject(&unk_100756A58, 776, 7);
    memcpy((void *)(v81 + 16), v144, 0x2E9uLL);
    v82 = v135;
    *(_QWORD *)(v81 + 768) = v135;
    v135 = v82;
    HorizontalStack.add(_:with:)(v138, sub_100497430, v81);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v138);
    VerticalStack.init(with:)(sub_10008AE6C, 0, v83);
    v84 = v47[46];
    v85 = v47[47];
    sub_100010F08(v47 + 43, v84);
    Measurable.placeable.getter(v144, v84, *(_QWORD *)(v85 + 8));
    v86 = *v47;
    *((_QWORD *)v22 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v22 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v22 = v86;
    v87 = v126;
    v58(v22, v126, v61);
    v88 = v47[1];
    *((_QWORD *)v60 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v60 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v60 = v88;
    v58(v60, v87, v61);
    v89 = v133;
    v90 = v128;
    v58((double *)v133, v128, v61);
    v91 = v134;
    v58((double *)v134, v90, v61);
    v139 = v122;
    v140 = &protocol witness table for Resize;
    sub_1000119C0(v138);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v144, v22, v60, v89, v91);
    sub_100497254((uint64_t)v47, (uint64_t)v144);
    v92 = swift_allocObject(&unk_100756A80, 776, 7);
    memcpy((void *)(v92 + 16), v144, 0x2E9uLL);
    v93 = v135;
    *(_QWORD *)(v92 + 768) = v135;
    v94 = v93;
    v95 = v125;
    VerticalStack.add(_:with:)(v138, sub_100497544, v92);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v138);
    v96 = v130;
    *((_QWORD *)&v144[1] + 1) = v130;
    *(_QWORD *)&v144[2] = &protocol witness table for HorizontalStack;
    v97 = sub_1000119C0(v144);
    v98 = v129;
    v99 = v137;
    (*(void (**)(_QWORD *, char *, uint64_t))(v129 + 16))(v97, v137, v96);
    v100 = v95;
    VerticalStack.add(_:with:)(v144, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v144);
    v101 = v131;
    v102 = v124;
    v131[3] = v124;
    v101[4] = &protocol witness table for VerticalStack;
    v103 = sub_1000119C0(v101);
    (*(void (**)(_QWORD *, char *, uint64_t))(v123 + 32))(v103, v100, v102);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v96);
  }
  else
  {
    v104 = v47[35];
    v105 = v142;
    v106 = v143;
    sub_100010F08(v141, v142);
    Measurable.placeable.getter(v138, v105, *(_QWORD *)(v106 + 8));
    v107 = v61;
    *((_QWORD *)v22 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v22 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v22 = v69;
    v108 = v126;
    v58(v22, v126, v61);
    *((_QWORD *)v60 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v60 + 4) = &protocol witness table for CGFloat;
    *(_QWORD *)v60 = v104;
    v58(v60, v108, v61);
    v109 = v133;
    v110 = v128;
    v58((double *)v133, v128, v107);
    v111 = v134;
    v58((double *)v134, v110, v107);
    *((_QWORD *)&v144[1] + 1) = v65;
    *(_QWORD *)&v144[2] = &protocol witness table for Resize;
    sub_1000119C0(v144);
    v112 = Resize.init(_:width:height:firstBaseline:lastBaseline:)(v138, v22, v60, v109, v111);
    v113 = static Center.Axis.vertical.getter(v112);
    v139 = type metadata accessor for Center(0);
    v140 = &protocol witness table for Center;
    sub_1000119C0(v138);
    Center.init(_:filling:)(v144, v113);
    sub_100497254((uint64_t)v47, (uint64_t)v144);
    v114 = swift_allocObject(&unk_100756A30, 776, 7);
    memcpy((void *)(v114 + 16), v144, 0x2E9uLL);
    v115 = v135;
    *(_QWORD *)(v114 + 768) = v135;
    v116 = v115;
    v117 = v137;
    HorizontalStack.add(_:with:)(v138, sub_10049756C, v114);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v138);
    v119 = v130;
    v118 = v131;
    v131[3] = v130;
    v118[4] = &protocol witness table for HorizontalStack;
    v120 = sub_1000119C0(v118);
    (*(void (**)(_QWORD *, char *, uint64_t))(v129 + 32))(v120, v117, v119);
  }
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v141);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
}

uint64_t sub_1004943C8@<X0>(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(__int128 *__return_ptr, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD v77[5];
  _QWORD v78[3];
  uint64_t v79;
  void *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84[47];

  v6 = v5;
  v76 = a3;
  v11 = type metadata accessor for Resize.Rule(0);
  v67 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v71 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v70 = (char *)&v67 - v14;
  __chkstk_darwin(v15);
  v69 = (char *)&v67 - v16;
  __chkstk_darwin(v17);
  v68 = (uint64_t)&v67 - v18;
  v19 = type metadata accessor for HorizontalStack(0);
  v72 = *(_QWORD *)(v19 - 8);
  v73 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for VerticalStack(0);
  v74 = *(_QWORD *)(v22 - 8);
  v75 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100497254(v5, (uint64_t)v84);
  v25 = swift_allocObject(&unk_100756940, 761, 7);
  memcpy((void *)(v25 + 16), v84, 0x2E9uLL);
  VerticalStack.init(with:)(sub_100497300, v25, v26);
  sub_100018ADC(v6 + 424, (uint64_t)v84, (uint64_t *)&unk_100810120);
  if (*((_QWORD *)&v84[1] + 1))
  {
    sub_100010E24(v84, (uint64_t)&v81);
    v28 = v82;
    v27 = v83;
    sub_100010F08(&v81, v82);
    dispatch thunk of LayoutTextView.numberOfLines.setter(1, v28, v27);
    v29 = v82;
    v30 = v83;
    sub_100010F08(&v81, v82);
    dispatch thunk of LayoutTextView.lineBreakMode.setter(4, v29, v30);
    v31 = v82;
    v32 = v83;
    sub_100010F08(&v81, v82);
    Measurable.placeable.getter(v78, v31, *(_QWORD *)(*(_QWORD *)(v32 + 8) + 8));
    sub_100497254(v6, (uint64_t)v84);
    v33 = swift_allocObject(&unk_1007569B8, 761, 7);
    memcpy((void *)(v33 + 16), v84, 0x2E9uLL);
    VerticalStack.add(_:with:)(v78, sub_100497324, v33);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v78);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v81);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
  }
  sub_100494E18(a1 & 1, a2, v84, a4, a5);
  VerticalStack.add(_:with:)(v84, 0, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  sub_100018ADC(v6 + 544, (uint64_t)v84, (uint64_t *)&unk_100810120);
  if (*((_QWORD *)&v84[1] + 1))
  {
    sub_100010E24(v84, (uint64_t)&v81);
    v34 = v82;
    v35 = v83;
    sub_100010F08(&v81, v82);
    dispatch thunk of LayoutTextView.numberOfLines.setter(1, v34, v35);
    v36 = v82;
    v37 = v83;
    sub_100010F08(&v81, v82);
    dispatch thunk of LayoutTextView.lineBreakMode.setter(4, v36, v37);
    v38 = v82;
    v39 = v83;
    sub_100010F08(&v81, v82);
    Measurable.placeable.getter(v78, v38, *(_QWORD *)(*(_QWORD *)(v39 + 8) + 8));
    sub_100497254(v6, (uint64_t)v84);
    v40 = swift_allocObject(&unk_100756990, 761, 7);
    memcpy((void *)(v40 + 16), v84, 0x2E9uLL);
    VerticalStack.add(_:with:)(v78, sub_100497318, v40);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v78);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v81);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
  }
  sub_100018ADC(v6 + 664, (uint64_t)v84, (uint64_t *)&unk_100810120);
  if (*((_QWORD *)&v84[1] + 1))
  {
    sub_100010E24(v84, (uint64_t)&v81);
    v41 = v82;
    v42 = v83;
    sub_100010F08(&v81, v82);
    Measurable.placeable.getter(v78, v41, *(_QWORD *)(*(_QWORD *)(v42 + 8) + 8));
    sub_100497254(v6, (uint64_t)v84);
    v43 = swift_allocObject(&unk_100756968, 761, 7);
    memcpy((void *)(v43 + 16), v84, 0x2E9uLL);
    VerticalStack.add(_:with:)(v78, sub_10049730C, v43);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v78);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v81);
  }
  else
  {
    sub_100010F2C((uint64_t)v84, (uint64_t *)&unk_100810120);
  }
  sub_100018ADC(v6 + 384, (uint64_t)&v81, (uint64_t *)&unk_100810120);
  if (v82)
  {
    sub_100010E24(&v81, (uint64_t)v84);
    v44 = *(void (**)(__int128 *__return_ptr, uint64_t))(v6 + 56);
    v45 = *((_QWORD *)&v84[1] + 1);
    v46 = *(_QWORD *)&v84[2];
    sub_100010F08(v84, *((uint64_t *)&v84[1] + 1));
    v47 = dispatch thunk of LayoutTextView.textLength.getter(v45, v46);
    v44(&v81, v47);
    HorizontalStack.init(with:)(sub_1003C3A7C, 0, v48);
    v49 = *((_QWORD *)&v84[1] + 1);
    v50 = *(_QWORD *)&v84[2];
    sub_100010F08(v84, *((uint64_t *)&v84[1] + 1));
    Measurable.placeable.getter(v77, v49, *(_QWORD *)(*(_QWORD *)(v50 + 8) + 8));
    v51 = v68;
    sub_10000EF80((uint64_t)&v81, v68);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 104);
    v52(v51, enum case for Resize.Rule.replaced(_:), v11);
    v53 = enum case for Resize.Rule.unchanged(_:);
    v54 = v69;
    v52((uint64_t)v69, enum case for Resize.Rule.unchanged(_:), v11);
    v55 = v70;
    v52((uint64_t)v70, v53, v11);
    v56 = v71;
    v52((uint64_t)v71, v53, v11);
    v79 = type metadata accessor for Resize(0);
    v80 = &protocol witness table for Resize;
    sub_1000119C0(v78);
    Resize.init(_:width:height:firstBaseline:lastBaseline:)(v77, v51, v54, v55, v56);
    HorizontalStack.add(_:with:)(v78, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v78);
    v57 = v75;
    v79 = v75;
    v80 = &protocol witness table for VerticalStack;
    v58 = sub_1000119C0(v78);
    v59 = v74;
    (*(void (**)(_QWORD *, char *, uint64_t))(v74 + 16))(v58, v24, v57);
    HorizontalStack.add(_:with:)(v78, 0, 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v78);
    v60 = v76;
    v61 = v73;
    v76[3] = v73;
    v60[4] = &protocol witness table for HorizontalStack;
    v62 = sub_1000119C0(v60);
    (*(void (**)(_QWORD *, char *, uint64_t))(v72 + 32))(v62, v21, v61);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v81);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v24, v57);
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v84);
  }
  else
  {
    sub_100010F2C((uint64_t)&v81, (uint64_t *)&unk_100810120);
    v65 = v75;
    v64 = v76;
    v76[3] = v75;
    v64[4] = &protocol witness table for VerticalStack;
    v66 = sub_1000119C0(v64);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v74 + 32))(v66, v24, v65);
  }
}

uint64_t sub_100494AE0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD v8[5];

  v4 = a2[40];
  v5 = a2[41];
  sub_100010F08(a2 + 37, v4);
  v8[3] = &type metadata for CGFloat;
  v8[4] = &protocol witness table for CGFloat;
  v8[0] = AnyDimension.value(with:)(a3, v4, v5, v6);
  return HorizontalStack.Properties.leadingSpacing.setter(v8);
}

uint64_t sub_100494B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t result;
  _QWORD v9[5];

  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  sub_100010F08((_QWORD *)(a2 + 16), v5);
  v9[3] = &type metadata for CGFloat;
  v9[4] = &protocol witness table for CGFloat;
  v9[0] = AnyDimension.value(with:)(a3, v5, v6, v7);
  result = VerticalStack.Properties.bottomSpacing.setter(v9);
  if (*(_BYTE *)(a2 + 336) == 1)
    return VerticalStack.Properties.alignment.setter(1);
  return result;
}

uint64_t sub_100494BFC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  _QWORD v10[5];

  v6 = a2[5];
  v7 = a2[6];
  sub_100010F08(a2 + 2, v6);
  v10[3] = &type metadata for CGFloat;
  v10[4] = &protocol witness table for CGFloat;
  v10[0] = AnyDimension.value(with:)(a3, v6, v7, v8);
  return a4(v10);
}

uint64_t sub_100494C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  double v13;
  double v14[3];
  void *v15;
  void *v16;

  v5 = (_QWORD *)(a2 + 296);
  v6 = *(_QWORD *)(a2 + 320);
  v7 = *(_QWORD *)(a2 + 328);
  sub_100010F08((_QWORD *)(a2 + 296), v6);
  v15 = &type metadata for CGFloat;
  v16 = &protocol witness table for CGFloat;
  v14[0] = AnyDimension.value(with:)(a3, v6, v7, v8);
  result = VerticalStack.Properties.topSpacing.setter(v14);
  if (*(_BYTE *)(a2 + 336) == 1)
  {
    v10 = *(_QWORD *)(a2 + 320);
    v11 = *(_QWORD *)(a2 + 328);
    sub_100010F08(v5, v10);
    v13 = AnyDimension.value(with:)(a3, v10, v11, v12);
    v15 = &type metadata for CGFloat;
    v16 = &protocol witness table for CGFloat;
    v14[0] = v13 + v13;
    return VerticalStack.Properties.bottomSpacing.setter(v14);
  }
  return result;
}

uint64_t sub_100494D64(uint64_t a1, uint64_t a2)
{
  int v2;
  char v3;
  uint64_t v4;
  _QWORD v6[42];
  char v7;

  v2 = *(unsigned __int8 *)(a2 + 339);
  sub_100497254(a2, (uint64_t)v6);
  if (v2 != 1)
  {
    sub_100497288(v6);
    goto LABEL_5;
  }
  v3 = v7;
  sub_100497288(v6);
  if ((v3 & 1) == 0)
  {
LABEL_5:
    v4 = 0;
    return VerticalStack.Properties.alignment.setter(v4);
  }
  v4 = 1;
  return VerticalStack.Properties.alignment.setter(v4);
}

uint64_t sub_100494DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[40];

  v3 = static VerticalStack.Edge.top.getter(a1);
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v3);
  sub_10000EF80(a2 + 72, (uint64_t)v5);
  return VerticalStack.Properties.topSpacing.setter(v5);
}

uint64_t sub_100494E18@<X0>(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  __int128 v59[47];
  _QWORD v60[5];
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _BYTE v66[40];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v6 = v5;
  v54 = a2;
  v56 = a3;
  v57 = type metadata accessor for VerticalStack(0);
  v55 = *(_QWORD *)(v57 - 8);
  v10 = __chkstk_darwin(v57);
  v58 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  VerticalStack.init(with:)(sub_10018407C, 0, v10);
  sub_100018ADC(v5 + 424, (uint64_t)v67, (uint64_t *)&unk_100810120);
  v12 = v68;
  sub_100010F2C((uint64_t)v67, (uint64_t *)&unk_100810120);
  sub_100018ADC(v5 + 664, (uint64_t)v67, (uint64_t *)&unk_100810120);
  v13 = v68;
  sub_100010F2C((uint64_t)v67, (uint64_t *)&unk_100810120);
  sub_100018ADC(v5 + 544, (uint64_t)v67, (uint64_t *)&unk_100810120);
  v14 = v68;
  sub_100010F2C((uint64_t)v67, (uint64_t *)&unk_100810120);
  v16 = *(_QWORD *)(v5 + 488);
  v15 = *(_QWORD *)(v5 + 496);
  sub_100010F08((_QWORD *)(v6 + 464), *(_QWORD *)(v6 + 488));
  v17 = dispatch thunk of LayoutTextView.isTextExtraTall.getter(v16, v15);
  sub_100497254(v6, (uint64_t)v67);
  if ((v17 & 1) != 0)
  {
    sub_100497288(v67);
    v18 = v54;
    goto LABEL_5;
  }
  sub_100018ADC((uint64_t)&v69, (uint64_t)v59, (uint64_t *)&unk_100810120);
  v19 = *((_QWORD *)&v59[1] + 1);
  if (!*((_QWORD *)&v59[1] + 1))
  {
    sub_100497288(v67);
    sub_100010F2C((uint64_t)v59, (uint64_t *)&unk_100810120);
    v18 = v54;
LABEL_34:
    if (v12)
      v22 = 1;
    else
      v22 = 2;
    v23 = 2;
    if (!v12)
      v23 = 3;
    if (!(v14 | v13))
      goto LABEL_9;
    goto LABEL_10;
  }
  v20 = *(_QWORD *)&v59[2];
  sub_100010F08(v59, *((uint64_t *)&v59[1] + 1));
  v21 = dispatch thunk of LayoutTextView.isTextExtraTall.getter(v19, v20);
  sub_100497288(v67);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  v18 = v54;
  if ((v21 & 1) == 0)
    goto LABEL_34;
LABEL_5:
  v22 = 1;
  if (v12)
    v23 = 1;
  else
    v23 = 2;
  if (!(v14 | v13))
LABEL_9:
    v22 = v23;
LABEL_10:
  v24 = sub_10049543C(v22, a1 & 1, v18, a4, a5);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  if ((a1 & 1) != 0)
    sub_100018ADC(v6 + 584, (uint64_t)v66, (uint64_t *)&unk_100810120);
  else
    sub_10000EF80(v6 + 464, (uint64_t)v66);
  sub_100018ADC((uint64_t)v66, (uint64_t)&v64, (uint64_t *)&unk_100810120);
  if (v65)
  {
    sub_100010E24(&v64, (uint64_t)v59);
    if ((v26 & 1) == 0)
    {
      v31 = *((_QWORD *)&v59[1] + 1);
      v32 = *(_QWORD *)&v59[2];
      sub_100010F08(v59, *((uint64_t *)&v59[1] + 1));
      Measurable.placeable.getter(&v64, v31, *(_QWORD *)(*(_QWORD *)(v32 + 8) + 8));
      VerticalStack.add(_:with:)(&v64, 0, 0);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v64);
      v33 = *((_QWORD *)&v59[1] + 1);
      v34 = *(_QWORD *)&v59[2];
      sub_100010F08(v59, *((uint64_t *)&v59[1] + 1));
      dispatch thunk of LayoutTextView.numberOfLines.setter(v24, v33, v34);
      v35 = *((_QWORD *)&v59[1] + 1);
      v36 = *(_QWORD *)&v59[2];
      sub_100010F08(v59, *((uint64_t *)&v59[1] + 1));
      dispatch thunk of LayoutTextView.lineBreakMode.setter(4, v35, v36);
LABEL_20:
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
      goto LABEL_22;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  }
  else
  {
    sub_100010F2C((uint64_t)&v64, (uint64_t *)&unk_100810120);
  }
  sub_100018ADC((uint64_t)v66, (uint64_t)v59, (uint64_t *)&unk_100810120);
  v37 = *((_QWORD *)&v59[1] + 1);
  if (*((_QWORD *)&v59[1] + 1))
  {
    v38 = *(_QWORD *)&v59[2];
    sub_100010F08(v59, *((uint64_t *)&v59[1] + 1));
    dispatch thunk of LayoutTextView.numberOfLines.setter(0, v37, v38);
    goto LABEL_20;
  }
  sub_100010F2C((uint64_t)v59, (uint64_t *)&unk_100810120);
LABEL_22:
  v39 = 504;
  if ((a1 & 1) != 0)
    v39 = 624;
  sub_100018ADC(v6 + v39, (uint64_t)&v64, (uint64_t *)&unk_100810120);
  sub_100018ADC((uint64_t)&v64, (uint64_t)v59, (uint64_t *)&unk_100810120);
  if (*((_QWORD *)&v59[1] + 1))
  {
    sub_100010E24(v59, (uint64_t)v61);
    if ((v30 & 1) == 0)
    {
      v40 = v62;
      v41 = v63;
      sub_100010F08(v61, v62);
      Measurable.placeable.getter(v60, v40, *(_QWORD *)(*(_QWORD *)(v41 + 8) + 8));
      sub_100497254(v6, (uint64_t)v59);
      v42 = swift_allocObject(&unk_1007569E0, 761, 7);
      memcpy((void *)(v42 + 16), v59, 0x2E9uLL);
      VerticalStack.add(_:with:)(v60, sub_10049741C, v42);
      swift_release();
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v60);
      v43 = v62;
      v44 = v63;
      sub_100010F08(v61, v62);
      dispatch thunk of LayoutTextView.numberOfLines.setter(v28, v43, v44);
      v45 = v62;
      v46 = v63;
      sub_100010F08(v61, v62);
      dispatch thunk of LayoutTextView.lineBreakMode.setter(4, v45, v46);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v61);
      v48 = v56;
      v47 = v57;
      v49 = v55;
      goto LABEL_32;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v61);
  }
  else
  {
    sub_100010F2C((uint64_t)v59, (uint64_t *)&unk_100810120);
  }
  v48 = v56;
  v47 = v57;
  v49 = v55;
  sub_100018ADC((uint64_t)&v64, (uint64_t)v59, (uint64_t *)&unk_100810120);
  v50 = *((_QWORD *)&v59[1] + 1);
  if (*((_QWORD *)&v59[1] + 1))
  {
    v51 = *(_QWORD *)&v59[2];
    sub_100010F08(v59, *((uint64_t *)&v59[1] + 1));
    dispatch thunk of LayoutTextView.numberOfLines.setter(0, v50, v51);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  }
  else
  {
    sub_100010F2C((uint64_t)v59, (uint64_t *)&unk_100810120);
  }
LABEL_32:
  v48[3] = v47;
  v48[4] = &protocol witness table for VerticalStack;
  v52 = sub_1000119C0(v48);
  (*(void (**)(_QWORD *, char *, uint64_t))(v49 + 32))(v52, v58, v47);
  sub_100010F2C((uint64_t)&v64, (uint64_t *)&unk_100810120);
  return sub_100010F2C((uint64_t)v66, (uint64_t *)&unk_100810120);
}

uint64_t sub_1004953B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[40];

  v3 = static VerticalStack.Edge.top.getter(a1);
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v3);
  sub_10000EF80(a2 + 192, (uint64_t)v5);
  return VerticalStack.Properties.topSpacing.setter(v5);
}

uint64_t sub_1004953F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[40];

  v3 = static VerticalStack.Edge.top.getter(a1);
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v3);
  sub_10000EF80(a2 + 232, (uint64_t)v5);
  return VerticalStack.Properties.topSpacing.setter(v5);
}

uint64_t sub_10049543C(uint64_t a1, char a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[40];
  _BYTE v38[40];
  JUMeasurements v39;

  if ((a2 & 1) != 0)
  {
    sub_100018ADC(v5 + 584, (uint64_t)v38, (uint64_t *)&unk_100810120);
    v10 = v5 + 624;
  }
  else
  {
    sub_10000EF80(v5 + 464, (uint64_t)v38);
    v10 = v5 + 504;
  }
  sub_100018ADC(v10, (uint64_t)v37, (uint64_t *)&unk_100810120);
  if (*(_BYTE *)(v5 + 338) == 1)
  {
    sub_100018ADC((uint64_t)v37, (uint64_t)v34, (uint64_t *)&unk_100810120);
    v11 = v35;
    if (v35)
    {
      v12 = v36;
      sub_100010F08(v34, v35);
      dispatch thunk of LayoutView.hasContent.getter(v11, *(_QWORD *)(v12 + 8));
      sub_100010F2C((uint64_t)v37, (uint64_t *)&unk_100810120);
      sub_100010F2C((uint64_t)v38, (uint64_t *)&unk_100810120);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v34);
    }
    else
    {
      sub_100010F2C((uint64_t)v37, (uint64_t *)&unk_100810120);
      sub_100010F2C((uint64_t)v38, (uint64_t *)&unk_100810120);
      sub_100010F2C((uint64_t)v34, (uint64_t *)&unk_100810120);
    }
    v13 = 0;
    v26 = 1;
    goto LABEL_30;
  }
  sub_100018ADC((uint64_t)v38, (uint64_t)&v32, (uint64_t *)&unk_100810120);
  if (v33)
  {
    sub_100010E24(&v32, (uint64_t)v34);
    v14 = v35;
    v15 = v36;
    sub_100010F08(v34, v35);
    dispatch thunk of LayoutTextView.numberOfLines.setter(0, v14, v15);
    v16 = v35;
    v17 = v36;
    sub_100010F08(v34, v35);
    v18 = Measurable.measurements(fitting:with:)(a3, v16, *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8), a4, a5);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    sub_100010F08(v34, v35);
    v39.var0 = v18;
    v39.var1 = v20;
    v39.var2 = v22;
    v39.var3 = v24;
    v25 = LayoutTextView.estimatedNumberOfLines(from:)(v39) > 1;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v34);
  }
  else
  {
    sub_100010F2C((uint64_t)&v32, (uint64_t *)&unk_100810120);
    v25 = 0;
  }
  sub_100018ADC((uint64_t)v37, (uint64_t)v34, (uint64_t *)&unk_100810120);
  v27 = v35;
  if (v35)
  {
    v28 = v36;
    sub_100010F08(v34, v35);
    LOBYTE(v27) = dispatch thunk of LayoutView.hasContent.getter(v27, *(_QWORD *)(v28 + 8));
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v34);
    if (v25)
    {
      v30 = a1;
      if ((v27 & 1) != 0)
      {
        v30 = a1 - 1;
        if (__OFSUB__(a1, 1))
          goto LABEL_32;
      }
      if (v30 <= 1)
        v26 = 1;
      else
        v26 = v30;
    }
    else
    {
      v26 = 1;
    }
  }
  else
  {
    sub_100010F2C((uint64_t)v34, (uint64_t *)&unk_100810120);
    if (a1 <= 1)
      v31 = 1;
    else
      v31 = a1;
    if (v25)
      v26 = v31;
    else
      v26 = 1;
  }
  sub_100010F2C((uint64_t)v37, (uint64_t *)&unk_100810120);
  result = sub_100010F2C((uint64_t)v38, (uint64_t *)&unk_100810120);
  if (!__OFSUB__(a1, v26))
  {
    v13 = (v27 & 1) == 0 || a1 - v26 < 1;
LABEL_30:
    v38[0] = 0;
    v37[0] = v13;
    return v26;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100495758(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[40];

  v3 = static VerticalStack.Edge.top.getter(a1);
  VerticalStack.Properties.edgesAlignedToBaseline.setter(v3);
  sub_10000EF80(a2 + 152, (uint64_t)v5);
  return VerticalStack.Properties.topSpacing.setter(v5);
}

double _s20ProductPageExtension21TodayCardLockupLayoutV21estimatedMeasurements7fitting5using4withSo14JUMeasurementsVSo6CGSizeV_AC7MetricsVSo17UITraitCollectionCtFZ_0(_QWORD *a1, id a2, double a3)
{
  _BYTE *v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;

  v6 = a1 + 36;
  v7 = objc_msgSend(a2, "preferredContentSizeCategory");
  v8 = static UIContentSizeCategory.>= infix(_:_:)(v7, UIContentSizeCategoryAccessibilityExtraExtraLarge);

  if ((v8 & 1) != 0 && v6[49] == 1)
  {
    v10 = a1[17];
    v11 = a1[18];
    sub_100010F08(a1 + 14, v10);
    AnyDimension.value(with:)(a2, v10, v11, v12);
    v13 = a1[22];
    v14 = a1[23];
    sub_100010F08(a1 + 19, v13);
    AnyDimension.value(with:)(a2, v13, v14, v15);
    v16 = a1[5];
    v17 = a1[6];
    sub_100010F08(a1 + 2, v16);
    AnyDimension.value(with:)(a2, v16, v17, v18);
LABEL_8:
    v28 = a1 + 37;
    v29 = a1[40];
    v30 = a1[41];
    sub_100010F08(v28, v29);
    AnyDimension.value(with:)(a2, v29, v30, v31);
    return a3;
  }
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v9) & 1) != 0 && v6[51] == 1)
  {
    v19 = a1[17];
    v20 = a1[18];
    sub_100010F08(a1 + 14, v19);
    AnyDimension.value(with:)(a2, v19, v20, v21);
    v22 = a1[22];
    v23 = a1[23];
    sub_100010F08(a1 + 19, v22);
    AnyDimension.value(with:)(a2, v22, v23, v24);
    if (v6[48])
    {
      v25 = a1[40];
      v26 = a1[41];
      sub_100010F08(a1 + 37, v25);
      AnyDimension.value(with:)(a2, v25, v26, v27);
    }
    goto LABEL_8;
  }
  v32 = a1[17];
  v33 = a1[18];
  sub_100010F08(a1 + 14, v32);
  AnyDimension.value(with:)(a2, v32, v33, v34);
  v35 = a1[22];
  v36 = a1[23];
  sub_100010F08(a1 + 19, v35);
  AnyDimension.value(with:)(a2, v35, v36, v37);
  if (v6[48] == 1)
  {
    v38 = a1[5];
    v39 = a1[6];
    sub_100010F08(a1 + 2, v38);
    AnyDimension.value(with:)(a2, v38, v39, v40);
  }
  return a3;
}

uint64_t destroy for TodayCardLockupLayout(_QWORD *a1)
{
  uint64_t result;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 2);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 9);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 14);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 19);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 24);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 29);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 37);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 43);
  if (a1[51])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 48);
  if (a1[56])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 53);
  result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 58);
  if (a1[66])
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 63);
  if (a1[71])
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 68);
  if (a1[76])
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 73);
  if (a1[81])
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 78);
  if (a1[86])
    result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 83);
  if (a1[91])
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 88);
  return result;
}

uint64_t initializeWithCopy for TodayCardLockupLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  __int128 v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  __int128 v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain(v5);
  v8(a1 + 72, a2 + 72, v7);
  v9 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 112, a2 + 112);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 152, a2 + 152);
  v11 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 192, a2 + 192);
  v12 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 256) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 232, a2 + 232);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v13 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 320) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 296, a2 + 296);
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  v14 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 368) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 344, a2 + 344);
  v15 = (_OWORD *)(a1 + 384);
  v16 = (_OWORD *)(a2 + 384);
  v17 = *(_QWORD *)(a2 + 408);
  if (v17)
  {
    v18 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 408) = v17;
    *(_QWORD *)(a1 + 416) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 400);
    *v15 = *v16;
    *(_OWORD *)(a1 + 400) = v19;
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  }
  v20 = (_OWORD *)(a1 + 424);
  v21 = (_OWORD *)(a2 + 424);
  v22 = *(_QWORD *)(a2 + 448);
  if (v22)
  {
    v23 = *(_QWORD *)(a2 + 456);
    *(_QWORD *)(a1 + 448) = v22;
    *(_QWORD *)(a1 + 456) = v23;
    (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
  }
  else
  {
    v24 = *(_OWORD *)(a2 + 440);
    *v20 = *v21;
    *(_OWORD *)(a1 + 440) = v24;
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  }
  v25 = *(_QWORD *)(a2 + 488);
  v26 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = v25;
  *(_QWORD *)(a1 + 496) = v26;
  (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 464, a2 + 464);
  v27 = (_OWORD *)(a1 + 504);
  v28 = (_OWORD *)(a2 + 504);
  v29 = *(_QWORD *)(a2 + 528);
  if (v29)
  {
    *(_QWORD *)(a1 + 528) = v29;
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
  }
  else
  {
    v30 = *(_OWORD *)(a2 + 520);
    *v27 = *v28;
    *(_OWORD *)(a1 + 520) = v30;
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  }
  v31 = (_OWORD *)(a1 + 544);
  v32 = (_OWORD *)(a2 + 544);
  v33 = *(_QWORD *)(a2 + 568);
  if (v33)
  {
    *(_QWORD *)(a1 + 568) = v33;
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    (**(void (***)(_OWORD *, _OWORD *))(v33 - 8))(v31, v32);
  }
  else
  {
    v34 = *(_OWORD *)(a2 + 560);
    *v31 = *v32;
    *(_OWORD *)(a1 + 560) = v34;
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  }
  v35 = (_OWORD *)(a1 + 584);
  v36 = (_OWORD *)(a2 + 584);
  v37 = *(_QWORD *)(a2 + 608);
  if (v37)
  {
    *(_QWORD *)(a1 + 608) = v37;
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    (**(void (***)(_OWORD *, _OWORD *))(v37 - 8))(v35, v36);
  }
  else
  {
    v38 = *(_OWORD *)(a2 + 600);
    *v35 = *v36;
    *(_OWORD *)(a1 + 600) = v38;
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  }
  v39 = (_OWORD *)(a1 + 624);
  v40 = (_OWORD *)(a2 + 624);
  v41 = *(_QWORD *)(a2 + 648);
  if (v41)
  {
    *(_QWORD *)(a1 + 648) = v41;
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
    (**(void (***)(_OWORD *, _OWORD *))(v41 - 8))(v39, v40);
  }
  else
  {
    v42 = *(_OWORD *)(a2 + 640);
    *v39 = *v40;
    *(_OWORD *)(a1 + 640) = v42;
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  }
  v43 = (_OWORD *)(a1 + 664);
  v44 = (_OWORD *)(a2 + 664);
  v45 = *(_QWORD *)(a2 + 688);
  if (v45)
  {
    *(_QWORD *)(a1 + 688) = v45;
    *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
    (**(void (***)(_OWORD *, _OWORD *))(v45 - 8))(v43, v44);
  }
  else
  {
    v46 = *(_OWORD *)(a2 + 680);
    *v43 = *v44;
    *(_OWORD *)(a1 + 680) = v46;
    *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  }
  v47 = (_OWORD *)(a1 + 704);
  v48 = (_OWORD *)(a2 + 704);
  v49 = *(_QWORD *)(a2 + 728);
  if (v49)
  {
    *(_QWORD *)(a1 + 728) = v49;
    *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
    (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
  }
  else
  {
    v50 = *(_OWORD *)(a2 + 720);
    *v47 = *v48;
    *(_OWORD *)(a1 + 720) = v50;
    *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  }
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  return a1;
}

uint64_t assignWithCopy for TodayCardLockupLayout(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = (_BYTE *)(a2 + 336);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_10002D2D4((_QWORD *)(a1 + 16), (_QWORD *)(a2 + 16));
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release();
  sub_10002D2D4((_QWORD *)(a1 + 72), (_QWORD *)(a2 + 72));
  sub_10002D2D4((_QWORD *)(a1 + 112), (_QWORD *)(a2 + 112));
  sub_10002D2D4((_QWORD *)(a1 + 152), (_QWORD *)(a2 + 152));
  sub_10002D2D4((_QWORD *)(a1 + 192), (_QWORD *)(a2 + 192));
  sub_10002D2D4((_QWORD *)(a1 + 232), (_QWORD *)(a2 + 232));
  v6 = *(_OWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = v6;
  sub_10002D2D4((_QWORD *)(a1 + 296), (_QWORD *)(a2 + 296));
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_BYTE *)(a1 + 337) = v4[1];
  *(_BYTE *)(a1 + 338) = v4[2];
  *(_BYTE *)(a1 + 339) = v4[3];
  sub_10002D2D4((_QWORD *)(a1 + 344), (_QWORD *)(a2 + 344));
  v7 = *(_QWORD *)(a2 + 408);
  if (*(_QWORD *)(a1 + 408))
  {
    if (v7)
    {
      sub_10002D2D4((_QWORD *)(a1 + 384), (_QWORD *)(a2 + 384));
      goto LABEL_8;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 384));
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 408) = v7;
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 384, a2 + 384);
    goto LABEL_8;
  }
  v8 = *(_OWORD *)(a2 + 384);
  v9 = *(_OWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 384) = v8;
  *(_OWORD *)(a1 + 400) = v9;
LABEL_8:
  v10 = *(_QWORD *)(a2 + 448);
  if (*(_QWORD *)(a1 + 448))
  {
    if (v10)
    {
      sub_10002D2D4((_QWORD *)(a1 + 424), (_QWORD *)(a2 + 424));
      goto LABEL_15;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 424));
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 448) = v10;
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 424, a2 + 424);
    goto LABEL_15;
  }
  v11 = *(_OWORD *)(a2 + 424);
  v12 = *(_OWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 424) = v11;
  *(_OWORD *)(a1 + 440) = v12;
LABEL_15:
  sub_10002D2D4((_QWORD *)(a1 + 464), (_QWORD *)(a2 + 464));
  v13 = *(_QWORD *)(a2 + 528);
  if (*(_QWORD *)(a1 + 528))
  {
    if (v13)
    {
      sub_10002D2D4((_QWORD *)(a1 + 504), (_QWORD *)(a2 + 504));
      goto LABEL_22;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 504));
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 528) = v13;
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 504, a2 + 504);
    goto LABEL_22;
  }
  v14 = *(_OWORD *)(a2 + 504);
  v15 = *(_OWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 504) = v14;
  *(_OWORD *)(a1 + 520) = v15;
LABEL_22:
  v16 = *(_QWORD *)(a2 + 568);
  if (*(_QWORD *)(a1 + 568))
  {
    if (v16)
    {
      sub_10002D2D4((_QWORD *)(a1 + 544), (_QWORD *)(a2 + 544));
      goto LABEL_29;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 544));
  }
  else if (v16)
  {
    *(_QWORD *)(a1 + 568) = v16;
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 544, a2 + 544);
    goto LABEL_29;
  }
  v17 = *(_OWORD *)(a2 + 544);
  v18 = *(_OWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 544) = v17;
  *(_OWORD *)(a1 + 560) = v18;
LABEL_29:
  v19 = *(_QWORD *)(a2 + 608);
  if (*(_QWORD *)(a1 + 608))
  {
    if (v19)
    {
      sub_10002D2D4((_QWORD *)(a1 + 584), (_QWORD *)(a2 + 584));
      goto LABEL_36;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 584));
  }
  else if (v19)
  {
    *(_QWORD *)(a1 + 608) = v19;
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 584, a2 + 584);
    goto LABEL_36;
  }
  v20 = *(_OWORD *)(a2 + 584);
  v21 = *(_OWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 584) = v20;
  *(_OWORD *)(a1 + 600) = v21;
LABEL_36:
  v22 = *(_QWORD *)(a2 + 648);
  if (*(_QWORD *)(a1 + 648))
  {
    if (v22)
    {
      sub_10002D2D4((_QWORD *)(a1 + 624), (_QWORD *)(a2 + 624));
      goto LABEL_43;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 624));
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 648) = v22;
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 624, a2 + 624);
    goto LABEL_43;
  }
  v23 = *(_OWORD *)(a2 + 624);
  v24 = *(_OWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 624) = v23;
  *(_OWORD *)(a1 + 640) = v24;
LABEL_43:
  v25 = *(_QWORD *)(a2 + 688);
  if (*(_QWORD *)(a1 + 688))
  {
    if (v25)
    {
      sub_10002D2D4((_QWORD *)(a1 + 664), (_QWORD *)(a2 + 664));
      goto LABEL_50;
    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 664));
  }
  else if (v25)
  {
    *(_QWORD *)(a1 + 688) = v25;
    *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 664, a2 + 664);
    goto LABEL_50;
  }
  v26 = *(_OWORD *)(a2 + 664);
  v27 = *(_OWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 664) = v26;
  *(_OWORD *)(a1 + 680) = v27;
LABEL_50:
  v28 = *(_QWORD *)(a2 + 728);
  if (!*(_QWORD *)(a1 + 728))
  {
    if (v28)
    {
      *(_QWORD *)(a1 + 728) = v28;
      *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
      (**(void (***)(uint64_t, uint64_t))(v28 - 8))(a1 + 704, a2 + 704);
      goto LABEL_57;
    }
LABEL_56:
    v29 = *(_OWORD *)(a2 + 704);
    v30 = *(_OWORD *)(a2 + 720);
    *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 704) = v29;
    *(_OWORD *)(a1 + 720) = v30;
    goto LABEL_57;
  }
  if (!v28)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 704));
    goto LABEL_56;
  }
  sub_10002D2D4((_QWORD *)(a1 + 704), (_QWORD *)(a2 + 704));
LABEL_57:
  *(_BYTE *)(a1 + 744) = v4[408];
  return a1;
}

void *initializeWithTake for TodayCardLockupLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2E9uLL);
}

uint64_t assignWithTake for TodayCardLockupLayout(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v4 = (_BYTE *)(a2 + 336);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 16));
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 112));
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 152));
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 192));
  v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 232));
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 296));
  v8 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v8;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_BYTE *)(a1 + 337) = v4[1];
  *(_BYTE *)(a1 + 338) = v4[2];
  *(_BYTE *)(a1 + 339) = v4[3];
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 344));
  v9 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v9;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  if (*(_QWORD *)(a1 + 408))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 384));
  v10 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v10;
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  if (*(_QWORD *)(a1 + 448))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 424));
  v11 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v11;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 464));
  v12 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v12;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  if (*(_QWORD *)(a1 + 528))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 504));
  v13 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v13;
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  if (*(_QWORD *)(a1 + 568))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 544));
  v14 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v14;
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  if (*(_QWORD *)(a1 + 608))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 584));
  v15 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v15;
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  if (*(_QWORD *)(a1 + 648))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 624));
  v16 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v16;
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  if (*(_QWORD *)(a1 + 688))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 664));
  v17 = *(_OWORD *)(a2 + 680);
  *(_OWORD *)(a1 + 664) = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 680) = v17;
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  if (*(_QWORD *)(a1 + 728))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 704));
  v18 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v18;
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 744) = v4[408];
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayCardLockupLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 745))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayCardLockupLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 744) = 0;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 745) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 745) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayCardLockupLayout()
{
  return &type metadata for TodayCardLockupLayout;
}

uint64_t destroy for TodayCardLockupLayout.Metrics(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 2);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 9);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 14);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 19);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 24);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 29);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 37);
}

uint64_t initializeWithCopy for TodayCardLockupLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain(v5);
  v8(a1 + 72, a2 + 72, v7);
  v9 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 112, a2 + 112);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 152, a2 + 152);
  v11 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 192, a2 + 192);
  v12 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 256) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 232, a2 + 232);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v13 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 320) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 296, a2 + 296);
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  return a1;
}

uint64_t assignWithCopy for TodayCardLockupLayout.Metrics(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  __int128 v6;

  v4 = (_BYTE *)(a2 + 336);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_10002D2D4((_QWORD *)(a1 + 16), (_QWORD *)(a2 + 16));
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release();
  sub_10002D2D4((_QWORD *)(a1 + 72), (_QWORD *)(a2 + 72));
  sub_10002D2D4((_QWORD *)(a1 + 112), (_QWORD *)(a2 + 112));
  sub_10002D2D4((_QWORD *)(a1 + 152), (_QWORD *)(a2 + 152));
  sub_10002D2D4((_QWORD *)(a1 + 192), (_QWORD *)(a2 + 192));
  sub_10002D2D4((_QWORD *)(a1 + 232), (_QWORD *)(a2 + 232));
  v6 = *(_OWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = v6;
  sub_10002D2D4((_QWORD *)(a1 + 296), (_QWORD *)(a2 + 296));
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_BYTE *)(a1 + 337) = v4[1];
  *(_BYTE *)(a1 + 338) = v4[2];
  *(_BYTE *)(a1 + 339) = v4[3];
  return a1;
}

void *initializeWithTake for TodayCardLockupLayout.Metrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x154uLL);
}

uint64_t assignWithTake for TodayCardLockupLayout.Metrics(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = (_BYTE *)(a2 + 336);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 16));
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 112));
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 152));
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 192));
  v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 232));
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 296));
  v8 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v8;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_BYTE *)(a1 + 337) = v4[1];
  *(_BYTE *)(a1 + 338) = v4[2];
  *(_BYTE *)(a1 + 339) = v4[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayCardLockupLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 340))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayCardLockupLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 340) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 340) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayCardLockupLayout.Metrics()
{
  return &type metadata for TodayCardLockupLayout.Metrics;
}

double sub_100496C0C(void *a1, uint64_t a2, char a3)
{
  BOOL v3;
  double v4;
  double result;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  if (*(_BYTE *)(a2 + 336) == 1)
  {
    v3 = *(_BYTE *)(a2 + 339) == 0;
    v4 = 160.0;
    goto LABEL_3;
  }
  v7 = objc_msgSend(a1, "preferredContentSizeCategory");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  if (v8 == v11 && v10 == v12)
    goto LABEL_18;
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
    goto LABEL_19;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
  v10 = v17;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  if (v16 == v18 && v10 == v19)
    goto LABEL_18;
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v10, v18, v19, 0);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) != 0)
  {
LABEL_19:

    return 52.0;
  }
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
  v10 = v24;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v27 = v25;
  if (v23 == v26 && v10 == v25)
  {
LABEL_18:
    swift_bridgeObjectRelease_n(v10, 2);
    goto LABEL_19;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v10, v26, v25, 0);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v27);
  if ((v29 & 1) != 0)
    goto LABEL_19;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v32 = v31;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v35 = v33;
  if (v30 == v34 && v32 == v33)
  {
    swift_bridgeObjectRelease_n(v32, 2);
LABEL_27:

    return 54.0;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v34, v33, 0);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v35);
  if ((v36 & 1) != 0)
    goto LABEL_27;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {
    swift_bridgeObjectRelease_n(v39, 2);
LABEL_32:

    return 62.0;
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v42);
  if ((v43 & 1) != 0)
    goto LABEL_32;
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
  v46 = v45;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v49 = v47;
  if (v44 == v48 && v46 == v47)
  {
    swift_bridgeObjectRelease_n(v46, 2);
LABEL_37:

    return 67.0;
  }
  v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v48, v47, 0);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v49);
  if ((v50 & 1) != 0)
    goto LABEL_37;
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
  v53 = v52;
  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v56 = v54;
  if (v51 == v55 && v53 == v54)
  {
    swift_bridgeObjectRelease_n(v53, 2);
LABEL_42:

    return 76.0;
  }
  v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v55, v54, 0);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v56);
  if ((v57 & 1) != 0)
    goto LABEL_42;
  v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  v60 = v59;
  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v63 = v61;
  if (v58 == v62 && v60 == v61)
  {
    swift_bridgeObjectRelease_n(v60, 2);
LABEL_47:

    return 153.0;
  }
  v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v60, v62, v61, 0);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v63);
  if ((v64 & 1) != 0)
    goto LABEL_47;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
  v67 = v66;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v70 = v68;
  if (v65 == v69 && v67 == v68)
  {
    swift_bridgeObjectRelease_n(v67, 2);
LABEL_52:

    return 170.0;
  }
  v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v67, v69, v68, 0);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v70);
  if ((v71 & 1) != 0)
    goto LABEL_52;
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v74 = v73;
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v77 = v75;
  if (v72 == v76 && v74 == v75)
  {
    swift_bridgeObjectRelease_n(v74, 2);
LABEL_57:

    return 193.0;
  }
  v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v76, v75, 0);
  swift_bridgeObjectRelease(v74);
  swift_bridgeObjectRelease(v77);
  if ((v78 & 1) != 0)
    goto LABEL_57;
  v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v81 = v80;
  v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v84 = v82;
  if (v79 == v83 && v81 == v82)
  {
    swift_bridgeObjectRelease_n(v81, 2);
LABEL_62:

    goto LABEL_63;
  }
  v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v81, v83, v82, 0);
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v84);
  if ((v85 & 1) != 0)
    goto LABEL_62;
  v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v88 = v87;
  v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v91 = v89;
  if (v86 == v90 && v88 == v89)
  {

    swift_bridgeObjectRelease_n(v88, 2);
  }
  else
  {
    v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v88, v90, v89, 0);

    swift_bridgeObjectRelease(v88);
    swift_bridgeObjectRelease(v91);
    if ((v92 & 1) == 0)
      return 52.0;
  }
LABEL_63:
  v3 = (a3 & 1) == 0;
  v4 = 216.0;
LABEL_3:
  result = v4;
  if (!v3)
    return 293.0;
  return result;
}

uint64_t sub_100497254(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TodayCardLockupLayout(a2, a1);
  return a2;
}

_QWORD *sub_100497288(_QWORD *a1)
{
  destroy for TodayCardLockupLayout(a1);
  return a1;
}

uint64_t sub_1004972B8(uint64_t a1)
{
  uint64_t v1;

  return sub_100494BFC(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 768), (uint64_t (*)(_QWORD *))&HorizontalStack.Properties.trailingSpacing.setter);
}

uint64_t sub_1004972E0(uint64_t a1)
{
  uint64_t v1;

  return sub_100494C84(a1, v1 + 16, *(_QWORD *)(v1 + 768));
}

uint64_t sub_1004972F0(uint64_t a1)
{
  uint64_t v1;

  return sub_100494B5C(a1, v1 + 16, *(_QWORD *)(v1 + 768));
}

uint64_t sub_100497300(uint64_t a1)
{
  uint64_t v1;

  return sub_100494D64(a1, v1 + 16);
}

uint64_t sub_10049730C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004953F8(a1, v1 + 16);
}

uint64_t sub_100497318(uint64_t a1)
{
  uint64_t v1;

  return sub_1004953B4(a1, v1 + 16);
}

uint64_t sub_100497324(uint64_t a1)
{
  uint64_t v1;

  return sub_100494DD4(a1, v1 + 16);
}

uint64_t sub_100497330()
{
  _QWORD *v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 4);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 11);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 16);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 21);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 26);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 31);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 39);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 45);
  if (v0[53])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 50);
  if (v0[58])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 55);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 60);
  if (v0[68])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 65);
  if (v0[73])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 70);
  if (v0[78])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 75);
  if (v0[83])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 80);
  if (v0[88])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 85);
  if (v0[93])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 90);
  return swift_deallocObject(v0, 761, 7);
}

uint64_t sub_10049741C(uint64_t a1)
{
  uint64_t v1;

  return sub_100495758(a1, v1 + 16);
}

uint64_t sub_100497430(uint64_t a1)
{
  uint64_t v1;

  return sub_100494AE0(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 768));
}

uint64_t sub_100497450()
{
  uint64_t v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 32));
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 88));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 128));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 168));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 208));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 248));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 312));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 360));
  if (*(_QWORD *)(v0 + 424))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 400));
  if (*(_QWORD *)(v0 + 464))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 440));
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 480));
  if (*(_QWORD *)(v0 + 544))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 520));
  if (*(_QWORD *)(v0 + 584))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 560));
  if (*(_QWORD *)(v0 + 624))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 600));
  if (*(_QWORD *)(v0 + 664))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 640));
  if (*(_QWORD *)(v0 + 704))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 680));
  if (*(_QWORD *)(v0 + 744))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 720));

  return swift_deallocObject(v0, 776, 7);
}

uint64_t sub_100497544(uint64_t a1)
{
  uint64_t v1;

  return sub_100494BFC(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 768), (uint64_t (*)(_QWORD *))&VerticalStack.Properties.bottomSpacing.setter);
}

void sub_100497574()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel], "font");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "descender");

    if (qword_100805E38 != -1)
      swift_once(&qword_100805E38, sub_10049784C);
    v3 = type metadata accessor for SpacerDimension(0);
    sub_10000EFC4(v3, (uint64_t)qword_100825B00);
    v4 = objc_msgSend(v0, "traitCollection");
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v5 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v6 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v6 + 32) = v4;
    v7 = v4;
    v8 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v6);
    v9 = sub_1001D327C();
    dispatch thunk of AnyDimension.rawValue(in:)(v8, v3, v9);

  }
  else
  {
    __break(1u);
  }
}

id sub_1004976C0(uint64_t a1, uint64_t a2, NSString a3, uint64_t a4, NSString a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  __n128 v15;
  void *v16;
  void *v17;
  _BYTE v20[24];

  v9 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v11);
  v14 = &v5[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions];
  v15 = swift_beginAccess(&v5[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions], v20, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v10 + 24))(v14, v13, v9, v15);
  swift_endAccess(v20);
  sub_100497D84();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  v16 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_badgeLabel];
  if (a3)
    a3 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setText:", a3);

  v17 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel];
  if (a5)
    a5 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", a5);

  return objc_msgSend(v5, "setNeedsLayout");
}

uint64_t sub_10049782C(uint64_t a1)
{
  return sub_10049785C(18.0, a1, qword_100825AD0);
}

uint64_t sub_10049783C(uint64_t a1)
{
  return sub_10049785C(2.0, a1, qword_100825AE8);
}

uint64_t sub_10049784C(uint64_t a1)
{
  return sub_10049785C(16.0, a1, qword_100825B00);
}

uint64_t sub_10049785C(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = type metadata accessor for SpacerDimension(0);
  sub_100011980(v5, a3);
  sub_10000EFC4(v5, (uint64_t)a3);
  return SpacerDimension.init(constant:)(a1);
}

char *sub_1004978B0(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *ObjCClassFromMetadata;
  uint64_t v30;
  id v31;
  double left;
  double bottom;
  double right;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  objc_super v54;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v25 + 104))(v24, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:), v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:), v17);
  v26 = v5;
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v26);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)(v24, v20, v16, 1);
  v27 = OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_badgeLabel;
  v28 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v28);
  *(_QWORD *)&v26[v27] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v30 = OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel;
  *(_QWORD *)&v26[v30] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");

  v54.receiver = v26;
  v54.super_class = ObjectType;
  v31 = objc_msgSendSuper2(&v54, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v35 = (char *)v31;
  objc_msgSend(v35, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v35, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v35, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v36 = objc_msgSend(v35, "layer");
  objc_msgSend(v36, "setAllowsGroupBlending:", 0);

  v37 = OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_badgeLabel;
  if (qword_100806708 != -1)
    swift_once(&qword_100806708, sub_1004C9C78);
  v38 = type metadata accessor for FontUseCase(0);
  v39 = sub_10000EFC4(v38, (uint64_t)qword_10086A5F0);
  v40 = *(_QWORD *)(v38 - 8);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v41(v13, v39, v38);
  v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
  v42(v13, 0, 1, v38);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);
  v43 = *(void **)&v35[v37];
  objc_msgSend(v43, "setNumberOfLines:", 1);
  v44 = (void *)objc_opt_self(UIColor);
  v45 = v43;
  v46 = objc_msgSend(v44, "secondaryLabelColor");
  objc_msgSend(v45, "setTextColor:", v46);

  v47 = objc_msgSend(*(id *)&v35[v37], "layer");
  objc_msgSend(v47, "setCompositingFilter:", kCAFilterPlusL);

  v48 = OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel;
  if (qword_100806710 != -1)
    swift_once(&qword_100806710, sub_1004C9C94);
  v49 = sub_10000EFC4(v38, (uint64_t)qword_10086A608);
  v41(v13, v49, v38);
  v42(v13, 0, 1, v38);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);
  v50 = *(void **)&v35[v48];
  objc_msgSend(v50, "setNumberOfLines:", 3);
  v51 = v50;
  v52 = objc_msgSend(v44, "labelColor");
  objc_msgSend(v51, "setTextColor:", v52);

  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v35[v37]);
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v35[v48]);
  sub_100497D84();

  return v35;
}

id sub_100497D84()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void (*v21)(char *, uint64_t);
  id v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t);
  char *v27;
  id v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  void (*v41)(char *, uint64_t);
  char *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t);
  uint64_t (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char v52[24];

  v50 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v44 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v46 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - v6;
  v8 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - v15;
  v43 = *(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_badgeLabel];
  v51 = v0;
  v17 = &v0[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions];
  swift_beginAccess(&v0[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions], v52, 0, 0);
  v49 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
  v18 = v49(v16, v17, v8);
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v18);
  v48 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v19 = v48(v16, v8);
  v20 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.badgeColor.getter(v19);
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v47 = v2;
  v41 = v21;
  v21(v7, v2);
  if (!v20)
    v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v22 = v43;
  objc_msgSend(v43, "setTextColor:", v20);

  v23 = v49;
  v24 = v49(v13, v17, v8);
  v25 = v46;
  HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v24);
  v26 = v48;
  v48(v13, v8);
  v27 = v51;
  v28 = objc_msgSend(v51, "traitCollection");
  v29 = HeroCarouselItemOverlay.DisplayOptions.Placement.textAlignment(with:)();

  v44 = *(_QWORD *)(v44 + 8);
  ((void (*)(char *, uint64_t))v44)(v25, v50);
  objc_msgSend(v22, "setTextAlignment:", v29);
  v30 = *(void **)&v27[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel];
  v31 = v42;
  v32 = v23(v42, v17, v8);
  v33 = v45;
  HeroCarouselItemOverlay.DisplayOptions.textColorOverrides.getter(v32);
  v34 = v26(v31, v8);
  v35 = (id)HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.titleColor.getter(v34);
  v41(v33, v47);
  if (!v35)
    v35 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v30, "setTextColor:", v35);

  v36 = v49(v13, v17, v8);
  HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v36);
  v48(v13, v8);
  v37 = v51;
  v38 = objc_msgSend(v51, "traitCollection");
  v39 = HeroCarouselItemOverlay.DisplayOptions.Placement.textAlignment(with:)();

  ((void (*)(char *, uint64_t))v44)(v25, v50);
  objc_msgSend(v30, "setTextAlignment:", v39);
  return objc_msgSend(v37, "setNeedsLayout");
}

uint64_t sub_1004981A0@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  id v19;
  void (*v20)(char *, uint64_t);
  void *v21;
  id v22;
  _QWORD *v23;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v27[5];
  _QWORD v28[3];
  uint64_t v29;
  void *v30;

  v26 = a1;
  v2 = type metadata accessor for VerticalStack(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - v7;
  v9 = type metadata accessor for DisjointStack(0);
  v25 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_100756AE8, 24, 7);
  *(_QWORD *)(v12 + 16) = v1;
  v13 = v1;
  DisjointStack.init(with:)(sub_100498B4C, v12);
  v14 = swift_allocObject(&unk_100756B10, 24, 7);
  *(_QWORD *)(v14 + 16) = v13;
  v15 = (char *)v13;
  VerticalStack.init(with:)(sub_100498B54, v14, v16);
  v17 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_badgeLabel];
  v18 = type metadata accessor for DynamicTypeLabel(0);
  v29 = v18;
  v30 = &protocol witness table for UILabel;
  v28[0] = v17;
  v19 = v17;
  VerticalStack.adding(_:with:)(v28, sub_100498B5C, 0);
  v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v5, v2);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  v21 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel];
  v27[3] = v18;
  v27[4] = &protocol witness table for UILabel;
  v27[0] = v21;
  v29 = v2;
  v30 = &protocol witness table for VerticalStack;
  sub_1000119C0(v28);
  v22 = v21;
  VerticalStack.adding(_:with:)(v27, sub_100498BFC, 0);
  v20(v8, v2);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
  v23 = v26;
  v26[3] = v9;
  v23[4] = &protocol witness table for DisjointStack;
  sub_1000119C0(v23);
  DisjointStack.inserting(_:at:with:)(v28, 0, 1, 0, 0);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
}

uint64_t sub_1004984E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  __n128 v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];

  v30 = a2;
  v3 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DisjointStack.EdgePosition(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = type metadata accessor for ZeroDimension(0);
  v13[3] = v29;
  v13[4] = &protocol witness table for ZeroDimension;
  v14 = sub_1000119C0(v13);
  v15 = static ZeroDimension.zero.getter(v14);
  v16 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v17 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v11 + 104);
  v17(v13, enum case for DisjointStack.EdgePosition.anchored(_:), v10, v15);
  v33 = a1;
  DisjointStack.Properties.bottomEdge.setter(v13);
  v18 = v30 + OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions;
  v19 = swift_beginAccess(v30 + OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions, v34, 0, 0);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v18, v6, v19);
  HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v20);
  v21 = v9;
  v22 = v31;
  v23 = v32;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v5, v23);
  if ((_DWORD)result == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:))
  {
    v13[3] = v29;
    v13[4] = &protocol witness table for ZeroDimension;
    v25 = sub_1000119C0(v13);
    v26 = static ZeroDimension.zero.getter(v25);
    v17(v13, v16, v10, v26);
    return DisjointStack.Properties.leadingEdge.setter(v13);
  }
  else if ((_DWORD)result != enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.center(_:))
  {
    if ((_DWORD)result == enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.trailing(_:))
    {
      v13[3] = v29;
      v13[4] = &protocol witness table for ZeroDimension;
      v27 = sub_1000119C0(v13);
      v28 = static ZeroDimension.zero.getter(v27);
      v17(v13, v16, v10, v28);
      return DisjointStack.Properties.trailingEdge.setter(v13);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v5, v23);
    }
  }
  return result;
}

uint64_t sub_100498764(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v3 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = a2 + OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_displayOptions;
  swift_beginAccess(v11, v17, 0, 0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  HeroCarouselItemOverlay.DisplayOptions.horizontalPlacement.getter(v12);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = HeroCarouselItemOverlay.DisplayOptions.Placement.verticalStackAlignment.getter(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return VerticalStack.Properties.alignment.setter(v14);
}

uint64_t sub_1004989C4()
{
  return type metadata accessor for CarouselItemModuleHeaderView(0);
}

uint64_t type metadata accessor for CarouselItemModuleHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_100825B58;
  if (!qword_100825B58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarouselItemModuleHeaderView);
  return result;
}

uint64_t sub_100498A08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_100498A84(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1004981A0(v10);
  v6 = v11;
  v7 = v12;
  sub_100010F08(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v10);
  return v8;
}

uint64_t sub_100498B28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100498B4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004984E4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100498B54(uint64_t a1)
{
  uint64_t v1;

  return sub_100498764(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100498B5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD v4[5];

  if (qword_100805E28 != -1)
    swift_once(&qword_100805E28, sub_10049782C);
  v0 = type metadata accessor for SpacerDimension(0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100825AD0);
  v4[3] = v0;
  v4[4] = sub_1001D327C();
  v2 = sub_1000119C0(v4);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
  return VerticalStack.Properties.topSpacing.setter(v4);
}

uint64_t sub_100498BFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  void (*v4)(_QWORD *, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  if (qword_100805E30 != -1)
    swift_once(&qword_100805E30, sub_10049783C);
  v0 = type metadata accessor for SpacerDimension(0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100825AE8);
  v9 = v0;
  v2 = sub_1001D327C();
  v10 = v2;
  v3 = sub_1000119C0(v8);
  v4 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16);
  v4(v3, v1, v0);
  VerticalStack.Properties.topSpacing.setter(v8);
  if (qword_100805E38 != -1)
    swift_once(&qword_100805E38, sub_10049784C);
  v5 = sub_10000EFC4(v0, (uint64_t)qword_100825B00);
  v9 = v0;
  v10 = v2;
  v6 = sub_1000119C0(v8);
  v4(v6, v5, v0);
  return VerticalStack.Properties.bottomSpacing.setter(v8);
}

void sub_100498D04()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *ObjCClassFromMetadata;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.Placement(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HeroCarouselItemOverlay.DisplayOptions.TextAlignment(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v12 + 104))(v11, enum case for HeroCarouselItemOverlay.DisplayOptions.TextAlignment.center(_:), v9);
  v13 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for HeroCarouselItemOverlay.DisplayOptions.Placement.leading(_:), v4);
  HeroCarouselItemOverlay.DisplayOptions.TextColorOverrides.init()(v13);
  HeroCarouselItemOverlay.DisplayOptions.init(textAlignment:horizontalPlacement:textColorOverrides:isOverDarkContent:)(v11, v7, v3, 1);
  v14 = OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_badgeLabel;
  v15 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v15);
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v17 = OBJC_IVAR____TtC20ProductPageExtension28CarouselItemModuleHeaderView_titleLabel;
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/CarouselItemModuleHeaderView.swift", 55, 2, 55, 0);
  __break(1u);
}

uint64_t type metadata accessor for ShelfBasedPageScrollActionRunner(uint64_t a1)
{
  uint64_t result;

  result = qword_100825B70;
  if (!qword_100825B70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShelfBasedPageScrollActionRunner);
  return result;
}

uint64_t sub_100498F00(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_100868C68);
}

double sub_100498F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double result;
  uint64_t v19;
  __int128 v20[2];
  uint64_t v21;
  uint64_t Strong;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for ShelfBasedPageScrollAction(0);
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = v8;
    Strong = swift_unknownObjectUnownedLoadStrong(v3 + qword_100825B68);
    v10 = sub_1000E1F78();
    swift_retain(a1);
    v11 = sub_10000DAF8(&qword_10081A5B0);
    if (swift_dynamicCast(v20, &Strong, v10, v11, 6))
    {
      sub_100010E24(v20, (uint64_t)v23);
      v12 = v24;
      v13 = v25;
      sub_100010F08(v23, v24);
      v14 = type metadata accessor for ObjectGraph(0);
      v15 = swift_dynamicCastClassUnconditional(a3, v14, 0, 0, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v9, a2, v15, v12, v13);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v23);
    }
    else
    {
      v21 = 0;
      memset(v20, 0, sizeof(v20));
      sub_1002D5CF8((uint64_t)v20);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    v16 = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100825B68);
    v17 = objc_msgSend(v16, "nextResponder");

    if (v17)
    {
      v19 = UIResponder.nearestActionRunner.getter();

      if (v19)
      {
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a1, a2, a3);
        *(_QWORD *)&result = swift_release().n128_u64[0];
      }
    }
  }
  return result;
}

void sub_1004990F4()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.ShelfBasedPageScrollActionRunner", 53, "init()", 6, 0);
  __break(1u);
}

double sub_100499120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  id v8;
  double result;
  uint64_t v10;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100825B68);
  v8 = objc_msgSend(Strong, "nextResponder");

  if (v8)
  {
    v10 = UIResponder.nearestActionRunner.getter();

    if (v10)
    {
      dispatch thunk of ActionRunner.send(metricsData:from:asPartOf:)(a1, a2, a3);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1004991C4()
{
  uint64_t v0;

  return swift_unknownObjectUnownedDestroy(v0 + qword_100825B68);
}

uint64_t sub_1004991D4()
{
  uint64_t v0;

  v0 = ActionRunner.deinit();
  swift_unknownObjectUnownedDestroy(v0 + qword_100825B68);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_100499210()
{
  return type metadata accessor for ShelfBasedPageScrollActionRunner(0);
}

uint64_t type metadata accessor for CappedSizeRoundedTitledButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100825BD0;
  if (!qword_100825BD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CappedSizeRoundedTitledButton);
  return result;
}

uint64_t sub_100499254(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "(";
  v2[1] = &unk_100665078;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100868C78);
}

double sub_1004992A4(void *a1, double a2, double a3)
{
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = a1;
  v17.super_class = ObjectType;
  v11 = a1;
  objc_msgSendSuper2(&v17, "sizeThatFits:", a2, a3);
  v13 = v12;
  v14 = *(_QWORD *)&v11[qword_100825BC0 + 24];
  v15 = *(_QWORD *)&v11[qword_100825BC0 + 32];
  sub_100010F08(&v11[qword_100825BC0], v14);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v14);
  AnyDimension.value(in:rounded:)(v11, v10, v14, v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  return v13;
}

void sub_1004993C0(char *a1, uint64_t a2, void *a3)
{
  void (*v3)(uint64_t);
  uint64_t v5;
  id v6;
  uint64_t v7;
  char *v8;

  v3 = *(void (**)(uint64_t))&a1[qword_100825BC8];
  if (v3)
  {
    v5 = *(_QWORD *)&a1[qword_100825BC8 + 8];
    v6 = a3;
    v8 = a1;
    v7 = sub_100018918((uint64_t)v3, v5);
    v3(v7);
    sub_100018908((uint64_t)v3, v5);

  }
}

id sub_100499450(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v9, "measurementsWithFitting:in:", a5, a2, a3);
}

void sub_1004994B4()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.CappedSizeRoundedTitledButton", 50, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_1004994E0()
{
  uint64_t v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + qword_100825BC0));
  return sub_100018908(*(_QWORD *)(v0 + qword_100825BC8), *(_QWORD *)(v0 + qword_100825BC8 + 8));
}

uint64_t sub_100499510(uint64_t a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + qword_100825BC0));
  return sub_100018908(*(_QWORD *)(a1 + qword_100825BC8), *(_QWORD *)(a1 + qword_100825BC8 + 8));
}

uint64_t sub_10049954C()
{
  return type metadata accessor for CappedSizeRoundedTitledButton(0);
}

ValueMetadata *type metadata accessor for ArcadeSeeAllGamesPageShelfLayoutSectionProvider()
{
  return &type metadata for ArcadeSeeAllGamesPageShelfLayoutSectionProvider;
}

uint64_t sub_100499568@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  __n128 v14;
  uint64_t result;
  __n128 v16;
  uint64_t v17;

  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v10);
  KeyPath = swift_getKeyPath(&unk_100665120);
  ReadOnlyLens.subscript.getter(v7, KeyPath, v8);
  v14 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v14);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result == enum case for Shelf.ContentType.appTrailerLockup(_:))
  {
    *(_QWORD *)(a2 + 24) = &type metadata for Double;
    *(_QWORD *)(a2 + 32) = &protocol witness table for Double;
    *(_QWORD *)a2 = 0x4040000000000000;
  }
  else
  {
    sub_100538B00(a1, (double *)a2, v16);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1004996C8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char *v12;
  __n128 v13;

  if (*v1 != *a1)
    return 0;
  if ((static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 2) & 1) == 0)
    return 0;
  v3 = type metadata accessor for StringPreferencesDebugSetting(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v1[7];
  v9 = v1[8];
  v10 = v6 == v8 && v7 == v9;
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0) & 1) == 0)
    return 0;
  v11 = v5 + OBJC_IVAR____TtC20ProductPageExtension29StringPreferencesDebugSetting_key;
  v12 = (char *)v1 + OBJC_IVAR____TtC20ProductPageExtension29StringPreferencesDebugSetting_key;
  v13 = swift_retain(a1);
  LOBYTE(v12) = static PreferenceKey.== infix(_:_:)(v11, v12, &type metadata for String, v13);
  swift_release();
  return v12 & 1;
}

uint64_t sub_100499790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  AnyHashable.hash(into:)();
  v5 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v5, v4);
  return swift_bridgeObjectRelease(v4);
}

double sub_1004997E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension29StringPreferencesDebugSetting_key;
  v2 = sub_10000DAF8(&qword_100808970);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100499838()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  sub_100018968((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v0[8]);
  v1 = (char *)v0 + OBJC_IVAR____TtC20ProductPageExtension29StringPreferencesDebugSetting_key;
  v2 = sub_10000DAF8(&qword_100808970);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1004998AC()
{
  return type metadata accessor for StringPreferencesDebugSetting(0);
}

uint64_t type metadata accessor for StringPreferencesDebugSetting(uint64_t a1)
{
  uint64_t result;

  result = qword_100825C48;
  if (!qword_100825C48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StringPreferencesDebugSetting);
  return result;
}

void sub_1004998F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1006651A0;
  sub_100499968();
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1006651A0;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 120);
  }
}

void sub_100499968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_100825C58)
  {
    v0 = type metadata accessor for PreferenceKey(0, &type metadata for String);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_100825C58);
  }
}

id sub_1004999BC()
{
  _BYTE *v0;
  _QWORD *v1;
  _OWORD *v2;
  _QWORD *v3;
  objc_class *v4;
  id v5;
  double left;
  double bottom;
  double right;
  id v9;
  objc_super v11;

  v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderAvoidsOverscroll] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_isSupplementaryViewAnimationEnabled] = 1;
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderFrame];
  *v2 = 0u;
  v2[1] = 0u;
  v3 = &v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_pendingPrepareObserver];
  v4 = (objc_class *)type metadata accessor for CollectionViewTableFlowLayout();
  *v3 = 0;
  v3[1] = 0;
  v11.receiver = v0;
  v11.super_class = v4;
  v5 = objc_msgSendSuper2(&v11, "init");
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v9 = v5;
  objc_msgSend(v9, "setSectionInset:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v9, "setMinimumInteritemSpacing:", 0.0);
  objc_msgSend(v9, "setMinimumLineSpacing:", 0.0);
  objc_msgSend(v9, "setScrollDirection:", 0);

  return v9;
}

double sub_100499B90()
{
  void *v0;
  id v1;
  double v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  __objc2_prot *v11;

  v1 = objc_msgSend(v0, "collectionView");
  v2 = 0.0;
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v1, "delegate");

    if (v4)
    {
      v11 = &OBJC_PROTOCOL____TtP20ProductPageExtension37CollectionViewDelegateTableFlowLayout_;
      v5 = swift_dynamicCastObjCProtocolConditional(v4, 1, &v11);
      if (v5 && (v6 = (void *)v5, (v7 = objc_msgSend(v0, "collectionView")) != 0))
      {
        v8 = v7;
        objc_msgSend(v6, "collectionView:heightForGlobalHeaderViewInTableFlowLayout:", v7, v0);
        v2 = v9;
        swift_unknownObjectRelease(v4);

      }
      else
      {
        swift_unknownObjectRelease(v4);
      }
    }
  }
  return v2;
}

uint64_t sub_100499C7C()
{
  char *v0;
  id v1;
  void *v2;
  CGFloat Width;
  double v4;
  double *v5;
  char *v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double MinY;
  double *v18;
  __int128 v19;
  uint64_t *v20;
  void (*v21)(char *, __n128);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v27;
  CGRect v28;
  CGRect v29;

  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  objc_msgSendSuper2(&v27, "prepareLayout");
  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");
    Width = CGRectGetWidth(v28);
    v4 = sub_100499B90();

    v5 = (double *)&v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize];
    *v5 = Width;
    v5[1] = v4;
  }
  else
  {
    v6 = &v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize];
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
  }
  v7 = 0.0;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderAvoidsOverscroll] == 1)
  {
    v8 = objc_msgSend(v0, "collectionView");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "contentInset");
      v7 = v10;
      v12 = v11;
      objc_msgSend(v9, "bounds");
      v29.origin.x = sub_1000D6344(v13, v14, v15, v16, v7, v12);
      MinY = CGRectGetMinY(v29);

      if (MinY < v7)
        v7 = MinY;
    }
  }
  v18 = (double *)&v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderFrame];
  v19 = *(_OWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize];
  *v18 = 0.0;
  v18[1] = v7;
  *((_OWORD *)v18 + 1) = v19;
  v20 = (uint64_t *)&v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_pendingPrepareObserver];
  v21 = *(void (**)(char *, __n128))&v0[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_pendingPrepareObserver];
  if (v21)
  {
    v22 = v20[1];
    v23 = swift_retain(v22);
    v21(v0, v23);
    sub_100018908((uint64_t)v21, v22);
    v24 = *v20;
  }
  else
  {
    v24 = 0;
  }
  v25 = v20[1];
  *v20 = 0;
  v20[1] = 0;
  return sub_100018908(v24, v25);
}

id sub_100499ED4()
{
  char *v0;
  char *v1;
  Class isa;
  id v3;
  unint64_t v5;
  void *v6;
  objc_super v8;

  v1 = v0;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
  v3 = objc_msgSendSuper2(&v8, "layoutAttributesForItemAtIndexPath:", isa);

  if (v3)
  {
    if (*(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize] >= COERCE_DOUBLE(1)
      && *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize + 8] >= COERCE_DOUBLE(1))
    {
      v5 = sub_1000BBD64();
      v6 = (void *)NSCopying.makeCopy()(v5);
      objc_msgSend(v6, "frame");
      objc_msgSend(v6, "setFrame:");

      return v6;
    }
  }
  return v3;
}

id sub_10049A050(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  NSString v5;
  Class isa;
  id v7;
  NSString v9;
  Class v10;
  unint64_t v12;
  void *v13;
  objc_super v14;

  v3 = v2;
  if (a1 == 0xD000000000000035 && a2 == 0x80000001006A6DA0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000035, 0x80000001006A6DA0, 0) & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v7 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForSupplementaryViewOfKind:withIndexPath:", v5, isa);

    objc_msgSend(v7, "setFrame:", *(double *)&v3[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderFrame], *(double *)&v3[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderFrame + 8], *(double *)&v3[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderFrame + 16], *(double *)&v3[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderFrame + 24]);
  }
  else
  {
    v9 = String._bridgeToObjectiveC()();
    v10 = IndexPath._bridgeToObjectiveC()().super.isa;
    v14.receiver = v2;
    v14.super_class = (Class)type metadata accessor for CollectionViewTableFlowLayout();
    v7 = objc_msgSendSuper2(&v14, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v9, v10);

    if (v7)
    {
      if (*(double *)&v3[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize] >= COERCE_DOUBLE(1)
        && *(double *)&v3[OBJC_IVAR____TtC20ProductPageExtension29CollectionViewTableFlowLayout_globalHeaderSize + 8] >= COERCE_DOUBLE(1))
      {
        v12 = sub_1000BBD64();
        v13 = (void *)NSCopying.makeCopy()(v12);
        objc_msgSend(v13, "frame");
        objc_msgSend(v13, "setFrame:");

        return v13;
      }
    }
  }
  return v7;
}

