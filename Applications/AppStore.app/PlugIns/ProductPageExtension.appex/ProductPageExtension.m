void sub_100006E34(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100006E54(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  void *v8;
  void *v9;
  void (**v10)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", 1, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "configuration"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "completion"));

  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "configuration"));
    v10 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "completion"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "reasonID"));
    ((void (**)(_QWORD, id, void *, id))v10)[2](v10, WeakRetained, v11, v5);

  }
}

void sub_1000080EC(uint64_t a1)
{
  objc_method *InstanceMethod;
  objc_method *v3;
  objc_class *v4;
  void (*MethodImplementation)(void);
  const char *TypeEncoding;
  objc_class *v7;
  void (*v8)(void);
  const char *v9;
  objc_method *v10;
  objc_method *v11;

  InstanceMethod = class_getInstanceMethod(*(Class *)(a1 + 32), "presentViewController:animated:completion:");
  v3 = class_getInstanceMethod(*(Class *)(a1 + 32), "as_presentViewController:animated:completion:");
  v4 = *(objc_class **)(a1 + 32);
  MethodImplementation = class_getMethodImplementation(v4, "presentViewController:animated:completion:");
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  class_addMethod(v4, "presentViewController:animated:completion:", MethodImplementation, TypeEncoding);
  v7 = *(objc_class **)(a1 + 32);
  v8 = class_getMethodImplementation(v7, "as_presentViewController:animated:completion:");
  v9 = method_getTypeEncoding(v3);
  class_addMethod(v7, "as_presentViewController:animated:completion:", v8, v9);
  v10 = class_getInstanceMethod(*(Class *)(a1 + 32), "presentViewController:animated:completion:");
  v11 = class_getInstanceMethod(*(Class *)(a1 + 32), "as_presentViewController:animated:completion:");
  method_exchangeImplementations(v10, v11);
}

uint64_t sub_10000831C(uint64_t a1)
{
  uint64_t result;

  if (*(_BYTE *)(a1 + 48))
    objc_msgSend(*(id *)(a1 + 32), "as_viewDidBecomePartiallyVisible");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000091C0(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  double MinY;
  void *v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  void *v19;
  id v20;
  CGRect v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v2, "beginUpdates");

  v3 = *(double *)(a1 + 40);
  v4 = *(double *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "keyboardOverlapHeight");
  v6 = v5;
  v7 = *(double *)(a1 + 64);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v8, "setContentInset:", v3, v4, v6, v7);

  if (JUScreenClassGetMain() == 1)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", 0, 0));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "cellForRowAtIndexPath:", v10));

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    objc_msgSend(v11, "frame");
    MinY = CGRectGetMinY(v21);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    objc_msgSend(v14, "contentInset");
    v16 = MinY - v15;
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    objc_msgSend(v17, "safeAreaInsets");
    objc_msgSend(v12, "setContentOffset:", 0.0, v16 - v18);

  }
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v19, "endUpdates");

  v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v20, "layoutIfNeeded");

}

void sub_10000947C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "keyboardOverlapHeight");
  v5 = v4;
  v6 = *(double *)(a1 + 64);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v7, "setContentInset:", v2, v3, v5, v6);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v8, "layoutIfNeeded");

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v9, "beginUpdates");

  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v10, "endUpdates");

}

uint64_t sub_10000A2FC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_10000AB88(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 1.0, 1.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  v4 = v5;
  objc_msgSend(v2, "setTransform:", &v4);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

id sub_10000AC04(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "duration");
  return _objc_msgSend(v1, "_dismissAfterDelay:");
}

void sub_10000B08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10000B0D4(_QWORD *a1, void *a2, double a3)
{
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double MinX;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  float v16;
  double v17;
  double Height;
  double MaxY;
  double v20;
  id v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v21 = a2;
  objc_msgSend(v21, "frame");
  v5 = *(_QWORD *)(a1[4] + 8);
  v6 = *(double *)(v5 + 48);
  v7 = *(double *)(v5 + 56);
  objc_msgSend(v21, "sizeThatFits:", v6, v7);
  v9 = v8;
  MinX = CGRectGetMinX(*(CGRect *)(*(_QWORD *)(a1[4] + 8) + 32));
  v11 = *(double *)(*(_QWORD *)(a1[5] + 8) + 24);
  if (v11 <= 0.0)
  {
    v14 = CGRectGetMinY(*(CGRect *)(*(_QWORD *)(a1[4] + 8) + 32)) + a3;
  }
  else
  {
    v12 = v11 + a3;
    objc_msgSend(v21, "_firstBaselineOffsetFromTop");
    *(float *)&v13 = v12 - v13;
    v14 = ceilf(*(float *)&v13);
  }
  if (v9 >= v7)
    v15 = v7;
  else
    v15 = v9;
  v16 = v15;
  v17 = ceilf(v16);
  objc_msgSend(v21, "setFrame:", MinX, v14, v6, v17);
  v22.origin.x = MinX;
  v22.origin.y = v14;
  v22.size.width = v6;
  v22.size.height = v17;
  *(double *)(*(_QWORD *)(a1[4] + 8) + 56) = *(double *)(*(_QWORD *)(a1[4] + 8) + 56) - CGRectGetHeight(v22);
  Height = CGRectGetHeight(*(CGRect *)(*(_QWORD *)(a1[4] + 8) + 32));
  if (Height < 0.0)
    Height = 0.0;
  *(double *)(*(_QWORD *)(a1[4] + 8) + 56) = Height;
  v23.origin.x = MinX;
  v23.origin.y = v14;
  v23.size.width = v6;
  v23.size.height = v17;
  MaxY = CGRectGetMaxY(v23);
  objc_msgSend(v21, "_baselineOffsetFromBottom");
  *(double *)(*(_QWORD *)(a1[5] + 8) + 24) = MaxY - v20;
  v24.origin.x = MinX;
  v24.origin.y = v14;
  v24.size.width = v6;
  v24.size.height = v17;
  *(CGFloat *)(*(_QWORD *)(a1[6] + 8) + 24) = CGRectGetMaxY(v24);

}

void sub_10000B374(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  CGAffineTransform v8;
  CGAffineTransform v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contentView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "superview"));
  objc_msgSend(v4, "setAlpha:", 0.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  objc_msgSend(v6, "setBackgroundColor:", v5);

  CGAffineTransformMakeScale(&v9, 0.88, 0.88);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v8 = v9;
  objc_msgSend(v7, "setTransform:", &v8);

}

id sub_10000B450(uint64_t a1)
{
  void *v2;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 1.0, 1.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v4 = v5;
  objc_msgSend(v2, "setTransform:", &v4);

  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 0, 0);
}

void sub_10000BE28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  id v9;
  void *v10;

  if (a2 == 1)
  {
    v9 = objc_begin_catch(exception_object);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "description"));
    NSLog(CFSTR("Unable to copy MicaPlayer. Error = %@"));

    objc_end_catch();
    JUMPOUT(0x10000BE08);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000C908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000C924(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "runPlayTimer:", v3);

}

uint64_t sub_10000D390()
{
  return 1;
}

void sub_10000D398()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  _QWORD v17[5];
  uint64_t v18;
  objc_super v19;

  v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, "tintColorDidChange");
  v2 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView]
                + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_subtitleLabel);
  if (v2)
  {
    v3 = objc_msgSend(v2, "attributedText");
    if (v3)
    {
      v4 = v3;
      v5 = v2;
      v6 = objc_msgSend(v1, "tintColor");
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v4);
        v9 = objc_msgSend(v4, "length");
        v10 = swift_allocObject(&unk_100736050, 32, 7);
        *(_QWORD *)(v10 + 16) = v8;
        *(_QWORD *)(v10 + 24) = v7;
        v11 = swift_allocObject(&unk_100736078, 32, 7);
        *(_QWORD *)(v11 + 16) = sub_10000F008;
        *(_QWORD *)(v11 + 24) = v10;
        v17[4] = sub_10000F020;
        v18 = v11;
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 1107296256;
        v17[2] = sub_1001F0F90;
        v17[3] = &unk_100736090;
        v12 = _Block_copy(v17);
        v13 = v18;
        v14 = v8;
        v15 = v7;
        swift_retain(v11);
        objc_msgSend(v4, "enumerateAttribute:inRange:options:usingBlock:", NSForegroundColorAttributeName, 0, v9, 0x100000, v12, swift_release(v13).n128_f64[0]);
        _Block_release(v12);
        LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v11, "", 113, 83, 11, 1);

        swift_release(v10);
        *(_QWORD *)&v16 = swift_release(v11).n128_u64[0];
        if ((v9 & 1) == 0)
        {
          objc_msgSend(v5, "setAttributedText:", v14, v16);

          return;
        }
        __break(1u);
      }
      __break(1u);
    }
  }
}

id MetadataRibbonView.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_10000D6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *v5;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  Swift::Bool v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  UIImage_optional v13;
  UIImage_optional v14;

  v5 = *(char **)(*(_QWORD *)(v3
                            + OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView)
                + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_iconView);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView];
  v12 = v5;
  v13.value.super.isa = 0;
  v13.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v13, v7);
  v8 = *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_tileIconArtworkView];
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, v9);
  v10 = type metadata accessor for ArtworkView(0);
  v11 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, a3, v10, v11);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, a3, v10, v11);

}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.itemLayoutContext@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DB44((uint64_t (*)(_QWORD))&type metadata accessor for ItemLayoutContext, a1);
}

id variable initialization expression of CondensedEditorialSearchResultContentView.viewButton()
{
  return objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.configuration@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for CondensedSearchResultCardLayout.Configuration.standard(_:);
  v3 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid()
{
  return 0;
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.buttonHandler()
{
  return 0;
}

double variable initialization expression of CondensedEditorialSearchResultContentView.artworkSize()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v12;

  v0 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v4);
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v8);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v10;
}

uint64_t variable initialization expression of CondensedInAppPurchaseContentView.titleLabel()
{
  type metadata accessor for DynamicTypeLabel(0);
  return DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
}

id variable initialization expression of CondensedInAppPurchaseContentView.offerButton()
{
  uint64_t v0;

  v0 = type metadata accessor for OfferButton();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

char *variable initialization expression of CondensedInAppPurchaseContentView.inAppPurchaseView()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v5;

  v0 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804928 != -1)
    swift_once(&qword_100804928, sub_1000C90F4);
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&xmmword_100864F50);
  v3 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  return sub_1004BC704((uint64_t)v2, 1);
}

double variable initialization expression of CondensedInAppPurchaseContentView.tileOffset()
{
  return 0.0;
}

uint64_t variable initialization expression of TodayCardLockupLayout.Metrics.offerButtonSize()
{
  return 0;
}

double variable initialization expression of LinkableHeaderViewLayout.Metrics.bottomSpace@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of ShelfHeaderLayout.Metrics.eyebrowArtworkAspectRatio@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DB44((uint64_t (*)(_QWORD))&type metadata accessor for AspectRatio, a1);
}

void *variable initialization expression of MetadataRibbonView.metadataRibbonItemViews()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of NotifyMeButtonPresenter.isSchedulingNotification()
{
  return 0;
}

uint64_t variable initialization expression of AppEventFormattedDatePresenter.currentFormattedDate@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DB44(type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate, a1);
}

uint64_t variable initialization expression of ObjectGraph.actionDispatcher@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_10000DAF8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of ObjectGraph.metricsPipeline@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DB44((uint64_t (*)(_QWORD))&type metadata accessor for MetricsPipeline, a1);
}

uint64_t sub_10000DB44@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_10000DB84()
{
  return type metadata accessor for InAppPurchaseTiledLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for InAppPurchaseTiledLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100806ED8;
  if (!qword_100806ED8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppPurchaseTiledLockupCollectionViewCell);
  return result;
}

uint64_t sub_10000DBC8(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 304);
}

__n128 initializeWithTake for ProductPageAppEntity(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for Measurements(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806EE8, (uint64_t)&unk_100735AF0);
}

void type metadata accessor for UITextLayoutDirection(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806EF0, (uint64_t)&unk_100735B20);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806EF8, (uint64_t)&unk_100735B40);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F00, (uint64_t)&unk_100735B70);
}

void type metadata accessor for AVPlayerViewControllerPreferredUnobscuredArea(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F08, (uint64_t)&unk_100735B98);
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F10, (uint64_t)&unk_100735C10);
}

void type metadata accessor for Alignment(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F18, (uint64_t)&unk_100735C40);
}

void type metadata accessor for Axis(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F20, (uint64_t)&unk_100735C60);
}

void type metadata accessor for Distribution(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F28, (uint64_t)&unk_100735C80);
}

void type metadata accessor for UITraitEnvironmentLayoutDirection(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F30, (uint64_t)&unk_100735CA0);
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F38, (uint64_t)&unk_100735CC0);
}

__n128 initializeWithTake for SearchLandingPageGridProvider(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F40, (uint64_t)&unk_100735D38);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F48, (uint64_t)&unk_100735D60);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F50, (uint64_t)&unk_100735DE0);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F58, (uint64_t)&unk_100735E60);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F60, (uint64_t)&unk_100735E88);
}

void type metadata accessor for CAGradientLayerType(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F68, (uint64_t)&unk_100735EA8);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F70, (uint64_t)&unk_100735ED0);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F78, (uint64_t)&unk_100735F00);
}

void type metadata accessor for GKRefreshDataType(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F80, (uint64_t)&unk_100735F20);
}

uint64_t initializeBufferWithCopyOfBuffer for IconArtworkGridLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_10000DDD8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000DDF8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F88, (uint64_t)&unk_100735FA0);
}

uint64_t getEnumTagSinglePayload for TodayCardMeshTransforms.MeshPoint(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TodayCardMeshTransforms.MeshPoint(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10000F278(a1, &qword_100806F90, (uint64_t)&unk_100736028);
}

uint64_t sub_10000DE94(uint64_t a1, uint64_t a2)
{
  return sub_10000EB6C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_10000DEB0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_10000DEB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_10000DECC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_10000DEE0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10000DEF4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10000DF24@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000DF50@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_10000DF74(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10000DF88(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_10000DF9C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_10000DFB0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000DFC4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000DFD8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_10000DFEC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000E000()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_10000E010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_10000E028(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_10000E044@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_10000E054(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

void sub_10000E064(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_10000E06C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_10000E09C(uint64_t a1, uint64_t a2)
{
  return sub_10000EB6C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void sub_10000E0AC()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

uint64_t sub_10000E0D8(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_10000E14C(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10000E1C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

_QWORD *sub_10000E208@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Int sub_10000E214()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10000E258(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_10000E298(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_10000E2AC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_10000F918(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

_QWORD *sub_10000E2E8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_10000E2F8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_10000E304@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000E32C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_100807120, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10063EC9C);
  v3 = sub_10000E720(&qword_100807128, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10063EC3C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720((unint64_t *)&qword_100807520, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10064059C);
  v3 = sub_10000E720(&qword_100807528, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10063F594);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_100807510, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10063F708);
  v3 = sub_10000E720(&qword_100807518, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10063F6A8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E4B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_1008074F0, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10063FB50);
  v3 = sub_10000E720(&qword_1008074F8, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10063FAF0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E53C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_100807110, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10063EF94);
  v3 = sub_10000E720(&qword_100807118, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10063EF3C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E5C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_100807500, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10063F87C);
  v3 = sub_10000E720(&qword_100807508, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10063F81C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E644(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_100807130, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10063EADC);
  v3 = sub_10000E720(&qword_100807138, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10063EA7C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E6C8()
{
  return sub_10000E720(&qword_100806F98, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10063EA40);
}

uint64_t sub_10000E6F4()
{
  return sub_10000E720(&qword_100806FA0, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10063EA14);
}

uint64_t sub_10000E720(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000E760()
{
  return sub_10000E720(&qword_100806FA8, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10063EAB0);
}

uint64_t sub_10000E78C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720((unint64_t *)&qword_1008074A0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100640514);
  v3 = sub_10000E720(&qword_1008074A8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100640468);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_1008074C0, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10063FF04);
  v3 = sub_10000E720(&qword_1008074C8, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10063FEAC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_1008074B0, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_100640044);
  v3 = sub_10000E720(&qword_1008074B8, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10063FFEC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720((unint64_t *)&qword_1008074D0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100640558);
  v3 = sub_10000E720(&qword_1008074D8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10063FDA0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E99C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10000E9E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E720(&qword_1008074E0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10063FCA8);
  v3 = sub_10000E720(&qword_1008074E8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10063FC48);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EA64()
{
  return sub_10000E720(&qword_100806FB0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10063EC00);
}

uint64_t sub_10000EA90()
{
  return sub_10000E720(&qword_100806FB8, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10063EBD4);
}

uint64_t sub_10000EABC()
{
  return sub_10000E720(&qword_100806FC0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10063EC70);
}

uint64_t sub_10000EAE8()
{
  return sub_10000E720(&qword_100806FC8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10063EF04);
}

uint64_t sub_10000EB14()
{
  return sub_10000E720(&qword_100806FD0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10063EEDC);
}

uint64_t sub_10000EB40()
{
  return sub_10000E720(&qword_100806FD8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10063EF6C);
}

uint64_t sub_10000EB6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10000EBA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000EBE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10000EC58(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

void sub_10000ECE0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  id v22;
  char *v23;
  __n128 v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  objc_class *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;
  uint64_t v34;
  _BYTE v35[40];

  v3 = v2;
  v6 = type metadata accessor for InAppPurchaseTheme(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  sub_10000EF80(a1, (uint64_t)v35);
  v13 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v14 = type metadata accessor for InAppPurchaseLockup(0);
  if (swift_dynamicCast(&v34, v35, v13, v14, 6))
  {
    v32 = a2;
    v15 = v34;
    v16 = qword_1008047E8;
    v17 = (char *)objc_retain(*(id *)(*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView]
                                    + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_iconView));
    if (v16 != -1)
      swift_once(&qword_1008047E8, sub_1000ADB38);
    v18 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
    sub_10000EFC4(v18, (uint64_t)qword_100864CF8);
    v19 = InAppPurchaseIconLayout.Metrics.mainIconSize.getter();
    v21 = v20;
    v22 = objc_msgSend(v3, "backgroundColor");
    InAppPurchaseLockup.theme.getter();
    v23 = &v17[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_theme];
    v24 = swift_beginAccess(&v17[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_theme], v35, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 24))(v23, v12, v6, v24);
    swift_endAccess(v35);
    v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v25(v9, v23, v6);
    sub_1004BCD64((uint64_t)v9, v26);
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v9, v6);
    v27(v12, v6);
    v28 = (objc_class *)type metadata accessor for InAppPurchaseView(0);
    v33.receiver = v17;
    v33.super_class = v28;
    v29 = v22;
    objc_msgSendSuper2(&v33, "setBackgroundColor:", v29);
    sub_1004BD174();

    sub_1005C0404(v19, v21, v15, (uint64_t)v17, v32, 2);
    v25(v12, v23, v6);
    sub_1004BCD64((uint64_t)v12, v30);
    v27(v12, v6);
    objc_msgSend(v17, "setNeedsLayout");

    swift_release(v15);
  }
}

uint64_t sub_10000EF80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10000EFC4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_10000EFDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10000F008(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return sub_10031510C(a1, a2, a3, a4, *(id *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_10000F010()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000F020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1000271E8(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_10000F028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000F038(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072C0, (uint64_t)&unk_1007360C8);
}

__n128 initializeWithTake for DynamicTypeLinkedTextView.LinkItem(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for IconGridView.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IconGridView.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072C8, (uint64_t)&unk_100736140);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072D0, (uint64_t)&unk_100736178);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072D8, (uint64_t)&unk_1007361A0);
}

void type metadata accessor for UIRectEdge(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072E0, (uint64_t)&unk_1007361C0);
}

void type metadata accessor for CategoryOptions(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072E8, (uint64_t)&unk_1007361E8);
}

void type metadata accessor for Mode(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072F0, (uint64_t)&unk_100736210);
}

void type metadata accessor for Category(uint64_t a1)
{
  sub_10000F278(a1, &qword_1008072F8, (uint64_t)&unk_100736238);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807300, (uint64_t)&unk_100736260);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807308, (uint64_t)&unk_100736288);
}

void type metadata accessor for BuildType(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807310, (uint64_t)&unk_1007362B0);
}

void type metadata accessor for ASDPurchaseHistoryContext(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807318, (uint64_t)&unk_1007362D8);
}

void type metadata accessor for ScreenClass(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807320, (uint64_t)&unk_1007362F8);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807328, (uint64_t)&unk_100736318);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807330, (uint64_t)&unk_100736338);
}

void type metadata accessor for ContentHorizontalAlignment(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807338, (uint64_t)&unk_100736358);
}

void type metadata accessor for DeviceType(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807340, (uint64_t)&unk_100736378);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807348, (uint64_t)&unk_1007363A0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807350, (uint64_t)&unk_1007363C8);
}

void type metadata accessor for NSWritingDirection(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807358, (uint64_t)&unk_1007363F0);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807360, (uint64_t)&unk_100736468);
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807368, (uint64_t)&unk_100736490);
}

void type metadata accessor for NSLineBreakMode(uint64_t a1)
{
  sub_10000F278(a1, &qword_100807370, (uint64_t)&unk_1007364B0);
}

void sub_10000F278(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_10000F2BC()
{
  return sub_10000E720(&qword_100807378, (uint64_t (*)(uint64_t))type metadata accessor for SymbolScale, (uint64_t)&unk_10063F458);
}

uint64_t sub_10000F2E8()
{
  return sub_10000E720(&qword_100807380, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10063F558);
}

uint64_t sub_10000F314()
{
  return sub_10000E720(&qword_100807388, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10063F52C);
}

uint64_t sub_10000F340()
{
  return sub_10000E720(&qword_100807390, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10063F66C);
}

uint64_t sub_10000F36C()
{
  return sub_10000E720(&qword_100807398, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10063F640);
}

uint64_t sub_10000F398()
{
  return sub_10000E720(&qword_1008073A0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10063F6DC);
}

uint64_t sub_10000F3C4()
{
  return sub_10000E720(&qword_1008073A8, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10063F7E0);
}

uint64_t sub_10000F3F0()
{
  return sub_10000E720(&qword_1008073B0, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10063F7B4);
}

uint64_t sub_10000F41C()
{
  return sub_10000E720(&qword_1008073B8, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10063F850);
}

uint64_t sub_10000F448()
{
  return sub_10000E720(&qword_1008073C0, (uint64_t (*)(uint64_t))type metadata accessor for ScreenClass, (uint64_t)&unk_10063FA20);
}

uint64_t sub_10000F474()
{
  return sub_10000E720(&qword_1008073C8, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10063FAB4);
}

uint64_t sub_10000F4A0()
{
  return sub_10000E720(&qword_1008073D0, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10063FA88);
}

uint64_t sub_10000F4CC()
{
  return sub_10000E720(&qword_1008073D8, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10063FB24);
}

uint64_t sub_10000F4F8()
{
  return sub_10000E720(&qword_1008073E0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10063FC0C);
}

uint64_t sub_10000F524()
{
  return sub_10000E720(&qword_1008073E8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10063FBE0);
}

uint64_t sub_10000F550()
{
  return sub_10000E720(&qword_1008073F0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10063FC7C);
}

uint64_t sub_10000F57C()
{
  return sub_10000E720(&qword_1008073F8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10063FD64);
}

uint64_t sub_10000F5A8()
{
  return sub_10000E720(&qword_100807400, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10063FD38);
}

uint64_t sub_10000F5D4()
{
  return sub_10000E720(&qword_100807408, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10063FE74);
}

uint64_t sub_10000F600()
{
  return sub_10000E720(&qword_100807410, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10063FE4C);
}

uint64_t sub_10000F62C()
{
  return sub_10000E720(&qword_100807418, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10063FEDC);
}

uint64_t sub_10000F658()
{
  return sub_10000E720(&qword_100807420, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10063FFB4);
}

uint64_t sub_10000F684()
{
  return sub_10000E720(&qword_100807428, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10063FF8C);
}

uint64_t sub_10000F6B0()
{
  return sub_10000E720(&qword_100807430, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10064001C);
}

uint64_t sub_10000F6DC()
{
  return sub_10000E720(&qword_100807438, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_1006400FC);
}

uint64_t sub_10000F708()
{
  return sub_10000E720(&qword_100807440, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_1006400CC);
}

uint64_t sub_10000F734()
{
  return sub_10000E720(&qword_100807448, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_100640124);
}

uint64_t sub_10000F760()
{
  return sub_10000E720(&qword_100807450, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_10064015C);
}

uint64_t sub_10000F78C()
{
  return sub_10000E720(&qword_100807458, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_100640290);
}

uint64_t sub_10000F7B8()
{
  return sub_10000E720(&qword_100807460, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_10064025C);
}

uint64_t sub_10000F7E4()
{
  return sub_10000E720(&qword_100807468, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_1006402BC);
}

uint64_t sub_10000F810()
{
  return sub_10000E720(&qword_100807470, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_1006402F8);
}

uint64_t sub_10000F83C()
{
  return sub_10000E720(&qword_100807478, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10064042C);
}

uint64_t sub_10000F868()
{
  return sub_10000E720(&qword_100807480, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100640400);
}

uint64_t sub_10000F894()
{
  return sub_10000E720(&qword_100807488, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10064049C);
}

uint64_t sub_10000F8C0()
{
  return sub_10000E720(&qword_100807490, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10063FDD4);
}

uint64_t sub_10000F8EC()
{
  return sub_10000E720(&qword_100807498, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10063F5C8);
}

uint64_t sub_10000F918(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

char *sub_10000F9C4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v5 = &v2[qword_1008647C0];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = type metadata accessor for AdvertRotationControllerProvider(0);
  v7 = type metadata accessor for ObjectGraph(0);
  v8 = v2;
  inject<A, B>(_:from:)(v6, a2, v6, v7);
  *(_QWORD *)&v8[qword_100807650] = v16;

  swift_retain(a1);
  swift_retain(a2);
  v9 = (char *)sub_100252CFC(a1, a2);
  v10 = *(void **)&v9[qword_100866528];
  v11 = *(_QWORD *)&v9[qword_100807650];
  v12 = v9;
  v13 = v10;
  swift_retain(v11);
  CompoundScrollObserver.addChild(_:)(v14, &protocol witness table for AdvertRotationControllerProvider);

  swift_release();
  swift_release();
  swift_release();
  return v12;
}

id sub_10000FADC()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id result;
  void *v14;
  objc_super v15[2];
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.receiver = v0;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, "viewDidLoad", v4);
  v7 = objc_msgSend(v0, "collectionView");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "setKeyboardDismissMode:", 1);

  }
  v9 = objc_msgSend(v0, "collectionView");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setAllowsSelection:", 1);

  }
  v11 = objc_msgSend(v0, "collectionView");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  }
  result = objc_msgSend(v0, "collectionView");
  if (result)
  {
    v14 = result;
    memset(v15, 0, sizeof(v15));
    static AutomationSemantics.page(name:id:)(0x614C686372616573, 0xED0000676E69646ELL, v15);
    sub_100010F2C((uint64_t)v15, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v6);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000FC84(void *a1)
{
  id v1;

  v1 = a1;
  sub_10000FADC();

}

void sub_10000FCB8(void *a1, uint64_t a2)
{
  sub_10000FCF4(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10000FCCC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10000FD70(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10000FCE0(void *a1, uint64_t a2)
{
  sub_10000FCF4(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10000FCF4(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_10000FD5C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10000FD70(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10000FD70(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1, a2);
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

uint64_t sub_10000FDE0()
{
  return sub_10000FE4C((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_10000FDFC(void *a1)
{
  id v1;

  v1 = a1;
  sub_10000FDE0();

}

uint64_t sub_10000FE30()
{
  return sub_10000FE4C((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_10000FE4C(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_100010EC0(v11, (uint64_t)v22);
  if (v23)
  {
    sub_10000EF80((uint64_t)v22, (uint64_t)v18);
    sub_100010F2C((uint64_t)v22, &qword_10080AFE0);
    v12 = v19;
    v13 = v20;
    sub_100010F08(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  }
  else
  {
    v14 = sub_100010F2C((uint64_t)v22, &qword_10080AFE0);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_10000FFB0(void *a1)
{
  id v1;

  v1 = a1;
  sub_10000FE30();

}

id sub_10000FFE4()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DAF8(&qword_100807C20);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1006405F0;
  v5 = *(_QWORD *)&v0[qword_1008664F0];
  v6 = *(_QWORD *)&v0[qword_100807650];
  v7 = sub_10000DAF8(&qword_100807C28);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(v5);
  v8 = swift_retain(v6);
  v9 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v5, v6, v8);
  v10 = sub_100010E80(&qword_100807C30, &qword_100807C28, (uint64_t)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v10;
  v11 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v12 = swift_allocObject(v11, 17, 7);
  *(_BYTE *)(v12 + 16) = 0;
  v13 = sub_10000E720(&qword_100807C38, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10066DE20);
  *(_QWORD *)(v4 + 48) = v12;
  *(_QWORD *)(v4 + 56) = v13;
  v14 = sub_10000E720(&qword_100807BD8, type metadata accessor for SearchLandingDiffablePageViewController, (uint64_t)&unk_100654940);
  v15 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v25, ObjectType, v14);
  v16 = TimedMetricsPagePresenter.impressionsCalculator.getter(v15);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v6);
  result = objc_msgSend(v1, "collectionView", swift_retain(v17).n128_f64[0]);
  if (result)
  {
    v19 = result;
    v20 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    *(_QWORD *)(v4 + 64) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v25, v16, v6, v17, v19);
    *(_QWORD *)(v4 + 72) = &protocol witness table for ImpressionsCollectionElementsObserver;
    v21 = type metadata accessor for CompoundCollectionElementsObserver(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v22 = CompoundCollectionElementsObserver.init(children:)(v4);
    v23 = sub_1005B52F0();
    if (swift_dynamicCastClass(v23, v21))
    {
      v24 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_10001025C, 0);
      CompoundCollectionElementsObserver.addChild(_:)(v24, &protocol witness table for CompoundCollectionElementsObserver);
      swift_unknownObjectRelease(v23);
      swift_release(v24);
    }
    else
    {
      swift_unknownObjectRelease(v23);
    }
    return (id)v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10001025C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  return swift_dynamicCastClass(a1, v2) != 0;
}

unint64_t sub_100010294@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SearchLandingPageShelfLayoutSpacingProvider;
  result = sub_100010E3C();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000102C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
  v2 = sub_10000E720(&qword_100807C08, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v3 = type metadata accessor for SearchLandingPageShelfSupplementaryProvider();
  v4 = swift_allocObject(v3, 40, 7);
  *(_QWORD *)(v4 + 32) = 0;
  v5 = swift_unknownObjectWeakInit(v4 + 24, 0);
  *(_QWORD *)(v4 + 32) = v2;
  swift_unknownObjectWeakAssign(v5);
  *(_QWORD *)(v4 + 16) = v1;
  sub_10000E720(&qword_100807C10, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingPageShelfSupplementaryProvider, (uint64_t)&unk_100658410);
  swift_retain(v1);
  return v4;
}

uint64_t sub_100010398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];

  v0 = sub_10000DAF8(&qword_100807BE8);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100640600;
  v2 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v3 = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(v3 + 16) = 0;
  v4 = sub_10000E720(&qword_100807BF0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_10065CE74);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_10000DAF8(&qword_100807BF8);
  v6 = sub_100010E80(&qword_100807C00, &qword_100807BF8, (uint64_t)&unk_100654940);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v14, v5, v6);
  v7 = type metadata accessor for GenericPageItemSupplementaryProvider();
  v8 = swift_allocObject(v7, 64, 7);
  sub_10000EF80((uint64_t)v14, v8 + 16);
  v9 = type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  v10 = swift_allocObject(v9, 56, 7);
  sub_100010E24(v14, v10 + 16);
  *(_QWORD *)(v8 + 56) = v10;
  v11 = sub_10000E720(&qword_100817650, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider, (uint64_t)&unk_10066C7C8);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v11;
  v12 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v1);
}

uint64_t sub_1000104FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];
  _QWORD v24[5];
  _QWORD v25[5];
  __int128 v26;
  _QWORD v27[4];
  _QWORD v28[5];

  ObjectType = swift_getObjectType();
  v26 = xmmword_100640600;
  v4 = sub_10000E720(&qword_100807BD8, type metadata accessor for SearchLandingDiffablePageViewController, (uint64_t)&unk_100654940);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v27[3] = swift_getObjectType();
  v27[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v28[3] = swift_getObjectType();
  v28[0] = v6;
  sub_100010D84((uint64_t)v27, (uint64_t)v25);
  sub_100010D84((uint64_t)v25, (uint64_t)v24);
  v7 = sub_10000DAF8(&qword_100807BE0);
  if ((swift_dynamicCast(v23, v24, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    v23[0] = 0uLL;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  if (*(_QWORD *)&v23[0])
  {
    v21 = v23[0];
    v8 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v8 = sub_1003D99D0(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1003D99D0((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    *(_OWORD *)&v8[2 * v10 + 4] = v21;
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  sub_100010D84((uint64_t)v28, (uint64_t)v25);
  sub_100010D84((uint64_t)v25, (uint64_t)v24);
  v11 = sub_10000DAF8(&qword_100807BE0);
  if ((swift_dynamicCast(v23, v24, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
    v23[0] = 0uLL;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  if (*(_QWORD *)&v23[0])
  {
    v22 = v23[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_1003D99D0(0, v8[2] + 1, 1, v8);
    v13 = v8[2];
    v12 = v8[3];
    v14 = v22;
    if (v13 >= v12 >> 1)
    {
      v20 = sub_1003D99D0((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
      v14 = v22;
      v8 = v20;
    }
    v8[2] = v13 + 1;
    *(_OWORD *)&v8[2 * v13 + 4] = v14;
  }
  swift_arrayDestroy(v27, v26, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v25, ObjectType, v4);
  v15 = *(_QWORD *)(v1 + qword_100866540);
  v16 = type metadata accessor for SearchLandingLayoutSectionProvider(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  sub_10000EF80((uint64_t)v25, (uint64_t)v24);
  sub_10000EF80((uint64_t)v24, (uint64_t)v23);
  v17 = swift_retain(v15);
  v18 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v23, v8, v15, 0, v17);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v24);
  result = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  a1[3] = v16;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v18;
  return result;
}

unint64_t sub_100010814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PageGridCache.init()();
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for SearchLandingPageGridProvider;
  result = sub_100010D40();
  a1[4] = result;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void sub_100010890(void *a1, uint64_t a2, void *a3)
{
  id v4;
  char *v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = a3;
  v5 = (char *)v12.receiver;
  objc_msgSendSuper2(&v12, "scrollViewWillBeginDragging:", v4);
  v6 = &v5[qword_1008647C0];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[qword_1008647C0]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);

    swift_unknownObjectRelease(v9);
  }
  else
  {

  }
}

uint64_t sub_10001093C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SearchLandingShelfComponentTypeMappingProvider();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(_QWORD *)(v3 + 16) = swift_allocObject(v4, 16, 7);
  a1[3] = v2;
  result = sub_10000E720(&qword_100807BC8, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingShelfComponentTypeMappingProvider, (uint64_t)&unk_100654ED8);
  a1[4] = result;
  *a1 = v3;
  return result;
}

void sub_1000109C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_10000DAF8(&qword_100807BC0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100600744(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:))
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  else
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100010A90(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v5;
  int v6;
  id v7;
  int v8;
  int v9;
  id v10;
  int v11;
  id v12;
  void *v13;
  objc_super v14;

  v3 = v2;
  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2, a2);
  v5 = objc_msgSendSuper2(&v14, "traitCollectionDidChange:", a1);
  if (a1)
    v6 = UITraitCollection.prefersAccessibilityLayouts.getter(v5) & 1;
  else
    v6 = 2;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = UITraitCollection.prefersAccessibilityLayouts.getter(v7);

  if (v6 == 2
    || ((v8 ^ (v6 != 0)) & 1) != 0
    || (!a1 ? (v9 = 2) : (v9 = UITraitCollection.prefersRightToLeftLayouts.getter() & 1),
        (v10 = objc_msgSend(v3, "traitCollection"),
         v11 = UITraitCollection.prefersRightToLeftLayouts.getter(),
         v10,
         v9 == 2)
     || ((v11 ^ (v9 != 0)) & 1) != 0))
  {
    v12 = objc_msgSend(v3, "collectionView");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100010BD0(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_100010A90((uint64_t)a3, (uint64_t)v6);

}

uint64_t sub_100010C28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_100807650));
  return sub_100010D1C(v0 + qword_1008647C0);
}

uint64_t sub_100010C54(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_100807650));
  return sub_100010D1C(a1 + qword_1008647C0);
}

uint64_t type metadata accessor for SearchLandingDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100807680;
  if (!qword_100807680)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchLandingDiffablePageViewController);
  return result;
}

uint64_t sub_100010CC8(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_100640688;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_100010D14()
{
  return type metadata accessor for SearchLandingDiffablePageViewController(0);
}

uint64_t sub_100010D1C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_100010D40()
{
  unint64_t result;

  result = qword_100807BD0;
  if (!qword_100807BD0)
  {
    result = swift_getWitnessTable(&unk_100642F38, &type metadata for SearchLandingPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_100807BD0);
  }
  return result;
}

uint64_t sub_100010D84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100010DE0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100010E24(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_100010E3C()
{
  unint64_t result;

  result = qword_100807C18;
  if (!qword_100807C18)
  {
    result = swift_getWitnessTable(&unk_10064148C, &type metadata for SearchLandingPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_100807C18);
  }
  return result;
}

uint64_t sub_100010E80(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100010DE0(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100010EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10080AFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100010F08(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100010F2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10000DAF8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100010F68()
{
  qword_100807C40 = 0x4034000000000000;
}

uint64_t sub_100010F78(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100807C48);
  sub_10000EFC4(v5, (uint64_t)qword_100807C48);
  if (qword_100806558 != -1)
    swift_once(&qword_100806558, sub_1004C950C);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_10086A0E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 22.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

char *sub_1000110C4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v9 = &v4[OBJC_IVAR____TtC20ProductPageExtension39InAppPurchaseShowcaseCollectionViewCell_itemLayoutContext];
  v10 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = OBJC_IVAR____TtC20ProductPageExtension39InAppPurchaseShowcaseCollectionViewCell_lockupView;
  v12 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseShowcaseLockupView());
  v13 = v4;
  *(_QWORD *)&v4[v11] = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for InAppPurchaseShowcaseCollectionViewCell(0);
  v14 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v16 = objc_msgSend(v14, "contentView");
  v17 = *(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension39InAppPurchaseShowcaseCollectionViewCell_lockupView];
  objc_msgSend(v16, "addSubview:", v17);

  return v14;
}

id sub_100011438()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InAppPurchaseShowcaseCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000114A4()
{
  return type metadata accessor for InAppPurchaseShowcaseCollectionViewCell(0);
}

uint64_t type metadata accessor for InAppPurchaseShowcaseCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100807C88;
  if (!qword_100807C88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppPurchaseShowcaseCollectionViewCell);
  return result;
}

void sub_1000114E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_100011560(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080AD00)
  {
    v2 = type metadata accessor for ItemLayoutContext(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080AD00);
  }
}

void sub_1000115B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *v5;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  Swift::Bool v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  UIImage_optional v13;
  UIImage_optional v14;

  v5 = *(char **)(*(_QWORD *)(v3
                            + OBJC_IVAR____TtC20ProductPageExtension39InAppPurchaseShowcaseCollectionViewCell_lockupView)
                + OBJC_IVAR____TtC20ProductPageExtension31InAppPurchaseShowcaseLockupView_iconView);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView];
  v12 = v5;
  v13.value.super.isa = 0;
  v13.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v13, v7);
  v8 = *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_tileIconArtworkView];
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, v9);
  v10 = type metadata accessor for ArtworkView(0);
  v11 = sub_1000116A4();
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, a3, v10, v11);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, a3, v10, v11);

}

unint64_t sub_1000116A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100806FE0;
  if (!qword_100806FE0)
  {
    v1 = type metadata accessor for ArtworkView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkView, v1);
    atomic_store(result, (unint64_t *)&qword_100806FE0);
  }
  return result;
}

void sub_1000116EC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  __n128 v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  objc_class *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;
  uint64_t v31;
  _BYTE v32[40];

  v3 = v2;
  v6 = type metadata accessor for InAppPurchaseTheme(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  sub_10000EF80(a1, (uint64_t)v32);
  v13 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v14 = type metadata accessor for InAppPurchaseShowcase(0);
  if (swift_dynamicCast(&v31, v32, v13, v14, 6))
  {
    v29 = a2;
    v15 = v31;
    if (qword_1008059D0 != -1)
      swift_once(&qword_1008059D0, sub_10039C7DC);
    v16 = *(double *)&qword_100867CD8;
    v17 = (char *)objc_retain(*(id *)(*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension39InAppPurchaseShowcaseCollectionViewCell_lockupView]
                                    + OBJC_IVAR____TtC20ProductPageExtension31InAppPurchaseShowcaseLockupView_iconView));
    v28 = v15;
    v18 = InAppPurchaseShowcase.lockup.getter();
    v19 = objc_msgSend(v3, "backgroundColor");
    InAppPurchaseLockup.theme.getter();
    v20 = &v17[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_theme];
    v21 = swift_beginAccess(&v17[OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_theme], v32, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 24))(v20, v12, v6, v21);
    swift_endAccess(v32);
    v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v22(v9, v20, v6);
    sub_1004BCD64((uint64_t)v9, v23);
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v9, v6);
    v24(v12, v6);
    v25 = (objc_class *)type metadata accessor for InAppPurchaseView(0);
    v30.receiver = v17;
    v30.super_class = v25;
    v26 = v19;
    objc_msgSendSuper2(&v30, "setBackgroundColor:", v26);
    sub_1004BD174();

    sub_1005C0404(v16, v16, v18, (uint64_t)v17, v29, 2);
    v22(v12, v20, v6);
    sub_1004BCD64((uint64_t)v12, v27);
    v24(v12, v6);
    objc_msgSend(v17, "setNeedsLayout");
    swift_release(v28);

    swift_release(v18);
  }
}

uint64_t *sub_100011980(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

_QWORD *sub_1000119C0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_1000119FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_1008081F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_100011A40()
{
  _QWORD *result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  result = BaseObjectGraph.optional<A>(_:)(v5, &type metadata for Bool, &type metadata for Bool);
  if (LOBYTE(v5[0]) == 2 || (v5[0] & 1) == 0)
  {
    v1 = type metadata accessor for ASDInAppPurchaseStateProvider(0);
    swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    v2 = ASDInAppPurchaseStateProvider.init()();
    v5[3] = v1;
    v5[4] = &protocol witness table for ASDInAppPurchaseStateProvider;
    v5[0] = v2;
    v3 = type metadata accessor for InAppPurchaseStateDataSource(0);
    swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    v4 = InAppPurchaseStateDataSource.init(withStateProvider:)(v5);
    InAppPurchaseStateDataSource.refreshData()();
    type metadata accessor for InAppPurchaseInstallPagePresenter(0);
    static InAppPurchaseInstallPagePresenter.use(stateDataSource:)(v4);
    type metadata accessor for InAppPurchaseOfferButtonPresenter(0);
    static InAppPurchaseOfferButtonPresenter.use(stateDataSource:)(v4);
    type metadata accessor for StreamlinedInAppPurchaseOfferButtonPresenter(0);
    static StreamlinedInAppPurchaseOfferButtonPresenter.use(stateDataSource:)(v4);
    return (_QWORD *)swift_release(v4);
  }
  return result;
}

uint64_t sub_100011B28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  _QWORD *v21;
  void (*v22)(_QWORD *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, _QWORD *);
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  __n128 v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  void (*v60)(_QWORD *, char *, uint64_t);
  _QWORD *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  __n128 v68;
  uint64_t v69;
  __n128 v70;
  void (*v71)(char *, uint64_t, __n128);
  __int128 v73;
  uint64_t v74;
  id v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  void (*v80)(_QWORD *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t updated;
  char *v88;
  __int128 v89;
  __int128 v90;
  void *v91;
  __int128 v92;
  __int128 v93;
  void *v94;

  v75 = a1;
  v1 = type metadata accessor for ModernAppStateDataSource(0);
  v2 = *(_QWORD *)(v1 - 8);
  v81 = v1;
  v82 = v2;
  __chkstk_darwin(v1);
  v86 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v88 = (char *)&v73 - v6;
  v77 = (_QWORD *)type metadata accessor for AppStoreType(0, v5);
  v7 = *(v77 - 1);
  v8 = __chkstk_darwin(v77);
  v76 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DeviceAppQuery(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v73 = v10;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ASDDeviceAppFetcher(0, v12);
  v83 = *(_QWORD *)(v15 - 8);
  v16 = v83;
  __chkstk_darwin(v15);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011A40();
  updated = type metadata accessor for DeviceUpdateRegistry(0);
  v85 = DeviceUpdateRegistry.__allocating_init()();
  v94 = 0;
  v92 = 0u;
  v93 = 0u;
  ASDDeviceAppFetcher.init(regulatoryLogger:)(&v92);
  v19 = type metadata accessor for DeviceAppStateDataSource(0);
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
  v20(v14, enum case for DeviceAppQuery.betaApps(_:), v10);
  v84 = v15;
  *((_QWORD *)&v93 + 1) = v15;
  v94 = &protocol witness table for ASDDeviceAppFetcher;
  v21 = sub_1000119C0(&v92);
  v22 = *(void (**)(_QWORD *, char *, uint64_t))(v16 + 16);
  v23 = v18;
  v79 = v18;
  v22(v21, v18, v15);
  v80 = v22;
  v91 = 0;
  v89 = 0u;
  v90 = 0u;
  v24 = enum case for AppStoreType.default(_:);
  v25 = *(void (**)(char *, uint64_t, _QWORD *))(v7 + 104);
  v26 = v76;
  v27 = v77;
  v25(v76, enum case for AppStoreType.default(_:), v77);
  v74 = v19;
  v78 = DeviceAppStateDataSource.__allocating_init(query:fetcher:updateRegistry:store:)(v14, &v92, &v89, v26);
  v20(v14, enum case for DeviceAppQuery.allStoreApps(_:), v73);
  v28 = v84;
  *((_QWORD *)&v93 + 1) = v84;
  v94 = &protocol witness table for ASDDeviceAppFetcher;
  v29 = sub_1000119C0(&v92);
  v22(v29, v23, v28);
  *((_QWORD *)&v90 + 1) = updated;
  v91 = &protocol witness table for DeviceUpdateRegistry;
  v30 = v85;
  *(_QWORD *)&v89 = v85;
  v25(v26, v24, v27);
  swift_retain(v30);
  v76 = (char *)DeviceAppStateDataSource.__allocating_init(query:fetcher:updateRegistry:store:)(v14, &v92, &v89, v26);
  type metadata accessor for PurchaseHistoryAppStateDataSource(0);
  v31 = swift_retain(v75);
  v33 = v32;
  v34 = (void *)PurchaseHistoryAppStateDataSource.__allocating_init(asPartOf:)(v31);
  v35 = sub_10000DAF8(&qword_100807C98);
  v36 = type metadata accessor for App.Kind(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = v39 + *(_QWORD *)(v37 + 72);
  v41 = v38 | 7;
  v42 = swift_allocObject(v35, v40, v38 | 7);
  v73 = xmmword_100640720;
  *(_OWORD *)(v42 + 16) = xmmword_100640720;
  v43 = enum case for App.Kind.store(_:);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104);
  v44(v42 + v39, enum case for App.Kind.store(_:), v36);
  v77 = v34;
  ModernAppStateDataSource.init(_:isIncremental:supportedAppKinds:)();
  type metadata accessor for RemotePersonalizationAppStateDataSource(0);
  v45 = swift_retain(v33);
  v46 = (void *)RemotePersonalizationAppStateDataSource.__allocating_init(asPartOf:)(v45);
  v47 = swift_allocObject(v35, v40, v41);
  *(_OWORD *)(v47 + 16) = v73;
  v44(v47 + v39, v43, v36);
  v75 = v46;
  v48 = v86;
  ModernAppStateDataSource.init(_:isIncremental:supportedAppKinds:)();
  v49 = sub_10000DAF8(&qword_100807CA0);
  v50 = swift_allocObject(v49, 272, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100640730;
  v51 = type metadata accessor for WaitingAppStateDataSource(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v52 = WaitingAppStateDataSource.init()();
  *(_QWORD *)(v50 + 56) = v51;
  *(_QWORD *)(v50 + 64) = &protocol witness table for WaitingAppStateDataSource;
  *(_QWORD *)(v50 + 32) = v52;
  v53 = v74;
  *(_QWORD *)(v50 + 96) = v74;
  *(_QWORD *)(v50 + 104) = &protocol witness table for DeviceAppStateDataSource;
  v54 = v78;
  *(_QWORD *)(v50 + 72) = v78;
  *(_QWORD *)(v50 + 136) = v53;
  *(_QWORD *)(v50 + 144) = &protocol witness table for DeviceAppStateDataSource;
  v55 = v76;
  *(_QWORD *)(v50 + 112) = v76;
  v56 = v81;
  *(_QWORD *)(v50 + 176) = v81;
  v57 = sub_10001215C();
  *(_QWORD *)(v50 + 184) = v57;
  v58 = sub_1000119C0((_QWORD *)(v50 + 152));
  v59 = v82;
  v60 = *(void (**)(_QWORD *, char *, uint64_t))(v82 + 16);
  v60(v58, v88, v56);
  *(_QWORD *)(v50 + 216) = v56;
  *(_QWORD *)(v50 + 224) = v57;
  v61 = sub_1000119C0((_QWORD *)(v50 + 192));
  v60(v61, v48, v56);
  v62 = type metadata accessor for DefaultAppStateDataSource(0);
  swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
  swift_retain(v54);
  v63 = swift_retain(v55);
  v64 = DefaultAppStateDataSource.init()(v63);
  *(_QWORD *)(v50 + 256) = v62;
  *(_QWORD *)(v50 + 264) = &protocol witness table for DefaultAppStateDataSource;
  *(_QWORD *)(v50 + 232) = v64;
  v65 = v84;
  *((_QWORD *)&v93 + 1) = v84;
  v94 = &protocol witness table for ASDDeviceAppFetcher;
  v66 = sub_1000119C0(&v92);
  v67 = v79;
  v80(v66, v79, v65);
  *((_QWORD *)&v90 + 1) = updated;
  v91 = &protocol witness table for DeviceUpdateRegistry;
  *(_QWORD *)&v89 = v85;
  v68 = swift_retain(v85);
  v69 = makeModernAppStateController(deviceAppFetcher:updateRegistry:dataSources:)(&v92, &v89, v50, v68);
  swift_release();

  swift_release();
  swift_release();
  v70 = swift_bridgeObjectRelease(v50);
  v71 = *(void (**)(char *, uint64_t, __n128))(v59 + 8);
  v71(v86, v56, v70);
  ((void (*)(char *, uint64_t))v71)(v88, v56);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v67, v65);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v89);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v92);
  return v69;
}

unint64_t sub_10001215C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807CA8;
  if (!qword_100807CA8)
  {
    v1 = type metadata accessor for ModernAppStateDataSource(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ModernAppStateDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_100807CA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernAppStateControllerFactory()
{
  return &type metadata for ModernAppStateControllerFactory;
}

ValueMetadata *type metadata accessor for CopyTextActionImplementation()
{
  return &type metadata for CopyTextActionImplementation;
}

unint64_t sub_1000121C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807CB0;
  if (!qword_100807CB0)
  {
    v1 = type metadata accessor for CopyTextAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100807CB0);
  }
  return result;
}

uint64_t sub_100012210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v9;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  CopyTextAction.text.getter();
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setString:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  sub_10000DAF8(&qword_100808570);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  return Promise.__allocating_init(value:)(v3);
}

void sub_100012308(_QWORD *a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __n128 v24;
  Swift::String v25;
  __n128 v26;
  Swift::String v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  _QWORD *v32;

  v5 = v4;
  v30 = a2;
  v8 = type metadata accessor for LogMessage.StringInterpolation(0, a4);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806980 != -1)
    swift_once(&qword_100806980, sub_10050338C);
  v16 = sub_10000EFC4(v12, (uint64_t)qword_10086AB80);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v18 = type metadata accessor for LogMessage(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2);
  v20._countAndFlagsBits = 0x5370696B53646964;
  v20._object = (void *)0xED0000203A706574;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  v21 = a1[3];
  v22 = sub_100010F08(a1, v21);
  v32 = (_QWORD *)v21;
  v23 = sub_1000119C0(v31);
  v24.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v23, v22, v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v31, v24);
  sub_10001282C((uint64_t)v31);
  v25._countAndFlagsBits = 0x6E6F73616572202CLL;
  v25._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  v32 = &type metadata for String;
  v31[0] = v30;
  v31[1] = a3;
  v26 = swift_bridgeObjectRetain(a3);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v31, v26);
  sub_10001282C((uint64_t)v31);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  LogMessage.init(stringInterpolation:)(v11);
  Logger.info(_:)(v19, v12, &protocol witness table for OSLogger);
  v28 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v28);
  swift_beginAccess(v5 + 32, v31, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(v5 + 32) + 16))
  {
    sub_1005E5308(0, 1);
    swift_endAccess(v31);
  }
  else
  {
    __break(1u);
  }
}

void sub_1000125A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[40];

  swift_beginAccess(v0 + 32, v7, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v1 + 16))
  {
    sub_10000EF80(v1 + 32, (uint64_t)v8);
    v2 = sub_10000DAF8(&qword_1008154B0);
    if ((swift_dynamicCast(&v6, v8, v2, &type metadata for WelcomeOnboardingStep, 6) & 1) != 0)
    {
      v3 = v6;
      sub_100537FF8();
      v4 = swift_retain(v3);
      sub_100012AD8(v5, v0, (uint64_t)&type metadata for WelcomeOnboardingStep, (uint64_t)&off_10075B460, v4);
      swift_release_n(v3, 2);
    }
  }
}

void sub_100012654()
{
  sub_100012664(1);
}

void sub_10001265C()
{
  sub_100012664(0);
}

void sub_100012664(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[40];

  v3 = v1;
  swift_beginAccess(v1 + 32, v13, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(v4 + 16))
  {
    sub_10000EF80(v4 + 32, (uint64_t)v14);
    v5 = sub_10000DAF8(&qword_1008154B0);
    v6 = type metadata accessor for AdPrivacyOnboardingStep();
    if ((swift_dynamicCast(&v12, v14, v5, v6, 6) & 1) != 0)
    {
      v7 = v12;
      v8 = sub_10043EDEC();
      objc_msgSend(v8, "setPersonalizedAds:", a1 & 1);

      sub_10043F3B8(v9);
      v10 = swift_retain(v7);
      sub_10001286C(v11, v3, v10);
      swift_release_n(v7, 2);
    }
  }
}

void sub_100012734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[40];

  swift_beginAccess(v0 + 32, v8, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v1 + 16))
  {
    sub_10000EF80(v1 + 32, (uint64_t)v9);
    v2 = sub_10000DAF8(&qword_1008154B0);
    if ((swift_dynamicCast(&v7, v9, v2, &type metadata for LocationPrivacyOnboardingStep, 6) & 1) != 0)
    {
      v4 = v7;
      sub_100206F74(v3);
      v5 = swift_retain(v4);
      sub_100012AD8(v6, v0, (uint64_t)&type metadata for LocationPrivacyOnboardingStep, (uint64_t)&off_100745480, v5);
      swift_release_n(v4, 2);
    }
  }
}

uint64_t sub_1000127E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for OnboardingPresenter()
{
  return objc_opt_self(_TtC20ProductPageExtension19OnboardingPresenter);
}

uint64_t sub_10001282C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_100808F20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10001286C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __n128 v22;
  Swift::String v23;
  __n128 v24;
  _QWORD v26[4];
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AdPrivacyOnboardingStep();
  v29 = &off_100754400;
  v27[0] = a1;
  v13 = qword_100806980;
  swift_retain(a1);
  if (v13 != -1)
    swift_once(&qword_100806980, sub_10050338C);
  v14 = sub_10000EFC4(v9, (uint64_t)qword_10086AB80);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v16 = type metadata accessor for LogMessage(0);
  v17 = swift_allocObject(v15, ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
  v18._object = (void *)0x80000001006855E0;
  v18._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v28;
  v20 = sub_100010F08(v27, v28);
  v26[3] = v19;
  v21 = sub_1000119C0(v26);
  v22.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v20, v19);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v26, v22);
  sub_10001282C((uint64_t)v26);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.info(_:)(v17, v9, &protocol witness table for OSLogger);
  v24 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v24);
  swift_beginAccess(a2 + 32, v26, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16))
  {
    sub_1005E5308(0, 1);
    swift_endAccess(v26);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
  }
  else
  {
    __break(1u);
  }
}

void sub_100012AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  __n128 v26;
  Swift::String v27;
  __n128 v28;
  _QWORD v30[4];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v9 = type metadata accessor for LogMessage.StringInterpolation(0, a5);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v30[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OSLogger(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a3;
  v33 = a4;
  v31[0] = a1;
  v17 = qword_100806980;
  swift_retain(a1);
  if (v17 != -1)
    swift_once(&qword_100806980, sub_10050338C);
  v18 = sub_10000EFC4(v13, (uint64_t)qword_10086AB80);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
  v19 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v20 = type metadata accessor for LogMessage(0);
  v21 = swift_allocObject(v19, ((*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) | 7);
  *(_OWORD *)(v21 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
  v22._object = (void *)0x80000001006855E0;
  v22._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  v23 = v32;
  v24 = sub_100010F08(v31, v32);
  v30[3] = v23;
  v25 = sub_1000119C0(v30);
  v26.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v25, v24, v23);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v30, v26);
  sub_10001282C((uint64_t)v30);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  LogMessage.init(stringInterpolation:)(v12);
  Logger.info(_:)(v21, v13, &protocol witness table for OSLogger);
  v28 = swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v28);
  swift_beginAccess(a2 + 32, v30, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16))
  {
    sub_1005E5308(0, 1);
    swift_endAccess(v30);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v31);
  }
  else
  {
    __break(1u);
  }
}

void sub_100012D3C(void *a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  __n128 v23;
  Swift::String v24;
  __n128 v25;
  _QWORD v27[4];
  _QWORD v28[3];
  uint64_t v29;
  _UNKNOWN **v30;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for JourneyDrivenOnboardingStep();
  v30 = &off_100758860;
  v28[0] = a1;
  v13 = qword_100806980;
  v14 = a1;
  if (v13 != -1)
    swift_once(&qword_100806980, sub_10050338C);
  v15 = sub_10000EFC4(v9, (uint64_t)qword_10086AB80);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
  v19._object = (void *)0x80000001006855E0;
  v19._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v20 = v29;
  v21 = sub_100010F08(v28, v29);
  v27[3] = v20;
  v22 = sub_1000119C0(v27);
  v23.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v22, v21, v20);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v27, v23);
  sub_10001282C((uint64_t)v27);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.info(_:)(v18, v9, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
  swift_beginAccess(a2 + 32, v27, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16))
  {
    sub_1005E5308(0, 1);
    swift_endAccess(v27);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  }
  else
  {
    __break(1u);
  }
}

id CondensedEditorialSearchResultContentView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

char *CondensedEditorialSearchResultContentView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  double left;
  double bottom;
  double right;
  char *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  objc_class *v55;
  UITraitCollection v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t ObjectType;
  char v63[24];
  objc_super v64;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = sub_10000DAF8(&qword_100826A80);
  __chkstk_darwin(v10);
  v61 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v16;
  __chkstk_darwin(v16);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v4[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_itemLayoutContext];
  v22 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel;
  type metadata accessor for DynamicTypeLabel(0);
  v24 = v5;
  *(_QWORD *)&v5[v23] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v25 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel;
  *(_QWORD *)&v24[v25] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v26 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton;
  *(_QWORD *)&v24[v26] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v27 = enum case for CondensedSearchResultCardLayout.Configuration.standard(_:);
  v58 = v17;
  v59 = v18;
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 104);
  v28(&v24[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v18);
  *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_action] = 0;
  v29 = &v24[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_buttonHandler];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v30 = (double *)&v24[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize];
  v31 = v28(v20, v27, v18);
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v31);
  v60 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  v32 = v60(v20, v18);
  v33 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v32);
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *v30 = v33;
  *((_QWORD *)v30 + 1) = v35;

  v36 = (objc_class *)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v64.receiver = v24;
  v64.super_class = v36;
  v37 = objc_msgSendSuper2(&v64, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v41 = (char *)v37;
  objc_msgSend(v41, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v42 = *(void **)&v41[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel];
  objc_msgSend(v41, "addSubview:", v42);
  v43 = *(void **)&v41[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel];
  objc_msgSend(v41, "addSubview:", v43);
  v44 = *(void **)&v41[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton];
  objc_msgSend(v41, "addSubview:", v44);
  objc_msgSend(v42, "setLineBreakMode:", 4);
  objc_msgSend(v43, "setLineBreakMode:", 4);
  v45 = v44;
  v46 = objc_msgSend(v41, "traitCollection");
  v47 = v61;
  sub_10058CCD8((uint64_t)v44, v46, v61);

  v48 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
  UIButton.configuration.setter(v47);
  v49 = sub_10058CEE0();
  v51 = v50;
  sub_1000134EC(v49, v50, &OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton);
  swift_bridgeObjectRelease(v51);
  v52 = &v41[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration];
  v53 = swift_beginAccess(&v41[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], v63, 0, 0);
  v54 = v59;
  (*(void (**)(char *, char *, uint64_t, __n128))(v58 + 16))(v20, v52, v59, v53);
  v55 = (objc_class *)objc_msgSend(v41, "traitCollection");
  v56.super.isa = v55;
  sub_100013888((uint64_t)v20, v56);

  v60(v20, v54);
  return v41;
}

uint64_t type metadata accessor for CondensedEditorialSearchResultContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_100807DF8;
  if (!qword_100807DF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CondensedEditorialSearchResultContentView);
  return result;
}

uint64_t sub_1000134E0(uint64_t a1, uint64_t a2)
{
  return sub_1000134EC(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension25CondensedAppEventCardView_viewButton);
}

uint64_t sub_1000134EC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Class isa;
  uint64_t KeyPath;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  objc_class *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;

  v46 = a1;
  v6 = sub_10000DAF8((uint64_t *)&unk_10081B9D0);
  v7 = __chkstk_darwin(v6);
  v45 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FontSource(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AttributeContainer(0, v11);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AttributedString(0, v15);
  v48 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(&qword_100826A80);
  __chkstk_darwin(v21);
  v47 = (uint64_t)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v45 - v24;
  v26 = *(id *)&v3[*a3];
  UIButton.configuration.getter();

  v27 = swift_bridgeObjectRetain(a2);
  AttributeContainer.init()(v27);
  AttributedString.init(_:attributes:)(v46, a2, v17);
  if (qword_100806408 != -1)
    swift_once(&qword_100806408, sub_1004C7FF4);
  v28 = type metadata accessor for FontUseCase(0);
  v29 = sub_10000EFC4(v28, (uint64_t)qword_100869CF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v13, v29, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for FontSource.useCase(_:), v9);
  v30 = objc_msgSend(v3, "traitCollection");
  isa = FontSource.font(compatibleWith:)((UITraitCollection)v30).super.isa;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  KeyPath = swift_getKeyPath(&unk_100640A28);
  __chkstk_darwin(KeyPath);
  *(&v45 - 2) = v33;
  v34 = swift_getKeyPath(&unk_100640A58);
  v50 = isa;
  v35 = sub_10001888C();
  v36 = isa;
  AttributedString.subscript.setter(&v50, v34, v35);
  v37 = type metadata accessor for UIButton.Configuration(0);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v25, 1, v37);
  v40 = v48;
  v39 = v49;
  if (!v38)
  {
    v41 = v45;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v20, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
    UIButton.Configuration.attributedTitle.setter(v41);
  }
  v42 = v47;
  sub_100018ADC((uint64_t)v25, v47, &qword_100826A80);
  v43 = v26;
  UIButton.configuration.setter(v42);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v39);
  return sub_100010F2C((uint64_t)v25, &qword_100826A80);
}

void sub_100013888(uint64_t a1, UITraitCollection a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  void *v13;
  id v14;
  uint64_t v15;

  v4 = type metadata accessor for FontUseCase(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel);
  objc_msgSend(v9, "setNumberOfLines:", CondensedSearchResultCardLayout.Configuration.headerNumberOfLines.getter(v6));
  v10 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel);
  objc_msgSend(v10, "setNumberOfLines:", CondensedSearchResultCardLayout.Configuration.titleNumberOfLines(in:)(a2));
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  CondensedSearchResultCardLayout.Configuration.headerFont.getter();
  v11 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v8, a2.super.isa);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  objc_msgSend(v9, "setFont:", v11);

  CondensedSearchResultCardLayout.Configuration.titleFont.getter();
  v13 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v8, a2.super.isa);
  v12(v8, v4);
  objc_msgSend(v10, "setFont:", v13);

  v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v9, "setTextColor:", v14);

}

Swift::Void __swiftcall CondensedEditorialSearchResultContentView.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t OpaqueTypeConformance2;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t ObjectType;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  void *v89;
  _QWORD v90[3];
  uint64_t v91;
  void *v92;
  _QWORD v93[3];
  uint64_t v94;
  void *v95;
  __int128 v96;
  __int128 v97;
  void *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  objc_super v102;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_10000DAF8(&qword_100807DA8);
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  v3 = __chkstk_darwin(v2);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for CondensedSearchResultCardLayout(0, v3);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LayoutRect(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin(v6);
  v79 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v71 - v16;
  __chkstk_darwin(v18);
  v72 = (char *)&v71 - v19;
  v20 = (objc_class *)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v102.receiver = v1;
  v102.super_class = v20;
  objc_msgSendSuper2(&v102, "layoutSubviews");
  v21 = LayoutMarginsAware<>.layoutFrame.getter(v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView];
  v71 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView;
  if (v28)
  {
    *((_QWORD *)&v100 + 1) = type metadata accessor for ArtworkView(0);
    v101 = sub_10000E720((unint64_t *)&qword_100810F20, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    *(_QWORD *)&v99 = v28;
  }
  else if (*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid])
  {
    *(_QWORD *)&v87 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid];
    v29 = type metadata accessor for IconArtworkGridView();
    Measurable.placeable.getter(&v99, v29, &protocol witness table for UIView);
  }
  else
  {
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
  }
  v30 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid;
  v31 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid];
  v32 = v28;
  if (v31)
    objc_msgSend(v31, "_setContinuousCornerRadius:", 10.0);
  v33 = objc_msgSend(v1, "traitCollection", v71);
  v34 = UITraitCollection.prefersAccessibilityLayouts.getter(v33);

  if ((v34 & 1) != 0)
  {
    v35 = &v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration];
    v36 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], &v86, 0, 0);
    v37 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v35, v8, v36);
    CondensedSearchResultCardLayout.Configuration.metrics.getter(v37);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v38 = (uint64_t)v72;
    CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(*(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize], *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize + 8]);
    v39 = v84;
    v40 = *(void (**)(char *, uint64_t))(v83 + 8);
    v40(v17, v84);
    v41 = *(void **)&v1[v71];
    if (v41)
    {
      v88 = type metadata accessor for ArtworkView(0);
      v89 = &protocol witness table for UIView;
      *(_QWORD *)&v87 = v41;
      sub_100010E24(&v87, (uint64_t)&v96);
    }
    else
    {
      v59 = *(void **)&v1[v30];
      if (v59)
      {
        *((_QWORD *)&v97 + 1) = type metadata accessor for IconArtworkGridView();
        v98 = &protocol witness table for UIView;
        *(_QWORD *)&v96 = v59;
      }
      else
      {
        v98 = 0;
        v96 = 0u;
        v97 = 0u;
      }
      v60 = v59;
      v41 = 0;
    }
    v61 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel];
    v94 = type metadata accessor for DynamicTypeLabel(0);
    v95 = &protocol witness table for UIView;
    v93[0] = v61;
    v62 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel];
    v91 = v94;
    v92 = &protocol witness table for UILabel;
    v90[0] = v62;
    v63 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton];
    v85[3] = sub_100018B6C(0, (unint64_t *)&qword_100819C20, UIButton_ptr);
    v85[4] = &protocol witness table for UIView;
    v85[0] = v63;
    v64 = v41;
    v65 = v61;
    v66 = v62;
    v67 = v63;
    sub_10001413C(v38, (uint64_t)&v96, (void (*)(_QWORD, _QWORD))v93, v90, (uint64_t)v85, &v87);
    v40((char *)v38, v39);
    sub_100010F2C((uint64_t)&v96, (uint64_t *)&unk_10080CE00);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v85);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v93);
    v68 = v88;
    v69 = v89;
    sub_100010F08(&v87, v88);
    v70 = v79;
    dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v68, v69, v21, v23, v25, v27);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v70, v82);
    sub_100010F2C((uint64_t)&v99, &qword_100810F00);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v87);
  }
  else
  {
    v42 = &v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration];
    v43 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], v85, 0, 0);
    v44 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v42, v8, v43);
    CondensedSearchResultCardLayout.Configuration.metrics.getter(v44);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(*(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize], *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize + 8]);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v14, v84);
    sub_100018ADC((uint64_t)&v99, (uint64_t)&v87, &qword_100810F00);
    v45 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel];
    *((_QWORD *)&v97 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v98 = &protocol witness table for UILabel;
    *(_QWORD *)&v96 = v45;
    v46 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel];
    v94 = *((_QWORD *)&v97 + 1);
    v95 = &protocol witness table for UILabel;
    v93[0] = v46;
    v47 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton];
    v91 = sub_100018B6C(0, (unint64_t *)&qword_100819C20, UIButton_ptr);
    v92 = &protocol witness table for UIButton;
    v90[0] = v47;
    v48 = v45;
    v49 = v46;
    v50 = v47;
    v51 = v73;
    CondensedSearchResultCardLayout.init(metrics:artwork:headerText:titleText:viewButton:isTextBaselineAligned:)(v17, &v87, &v96, v93, v90, 1);
    v52 = objc_msgSend(v1, "traitCollection");
    v53 = sub_10000E720(&qword_100807DB0, (uint64_t (*)(uint64_t))&type metadata accessor for CondensedSearchResultCardLayout, (uint64_t)&protocol conformance descriptor for CondensedSearchResultCardLayout);
    v55 = v75;
    v54 = v76;
    v56 = dispatch thunk of CustomLayout.layout.getter(v76, v53);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v56, &opaque type descriptor for <<opaque return type of CondensedSearchResultCardLayout.layout>>, 1);
    v58 = v78;
    dispatch thunk of Placeable.place(at:with:)(v52, v78, OpaqueTypeConformance2, v21, v23, v25, v27);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v58);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v54);
    sub_100010F2C((uint64_t)&v99, &qword_100810F00);
  }
}

uint64_t sub_10001413C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD)@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _BYTE *v77;
  void (*v78)(_BYTE *, _QWORD, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  void (*v104)(_BYTE *, uint64_t);
  _BYTE v106[4];
  unsigned int v107;
  void (*v108)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v109;
  _QWORD *v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(_BYTE *, uint64_t);
  uint64_t v122;
  void (*v123)(_BYTE *);
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  void (*v134)(_QWORD, _QWORD);
  _BYTE *v135;
  _BYTE *v136;
  __int128 v137;
  _QWORD *v138;
  uint64_t v139;
  _OWORD v140[2];
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  _QWORD v145[5];

  v114 = a5;
  v110 = a4;
  v134 = a3;
  v116 = a6;
  v117 = type metadata accessor for VerticalFlowLayout.HorizontalPlacement(0);
  v122 = *(_QWORD *)(v117 - 8);
  v8 = __chkstk_darwin(v117);
  v10 = &v106[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v106[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for VerticalFlowLayout.VerticalPlacement(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v106[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v106[-v21];
  v120 = type metadata accessor for VerticalFlowLayout.Child(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v115 = &v106[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v136 = &v106[-v25];
  __chkstk_darwin(v26);
  v135 = &v106[-v27];
  __chkstk_darwin(v28);
  v132 = &v106[-v29];
  __chkstk_darwin(v30);
  *(_QWORD *)&v137 = &v106[-v31];
  v138 = _swiftEmptyArrayStorage;
  sub_100018ADC(a2, (uint64_t)&v142, (uint64_t *)&unk_10080CE00);
  v118 = a1;
  v113 = v11;
  v112 = v15;
  v111 = v22;
  v109 = v10;
  if (*((_QWORD *)&v143 + 1))
  {
    v130 = (uint64_t)v19;
    v32 = sub_100010E24(&v142, (uint64_t)v145);
    v33 = CondensedSearchResultCardLayout.Metrics.artworkTopMargin.getter(&v142, v32);
    CondensedSearchResultCardLayout.Metrics.artworkAXBottomMargin.getter(v140, v33);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104))(v22, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v16);
    v34 = sub_10000DAF8((uint64_t *)&unk_10082C080);
    v133 = v17;
    v35 = v16;
    v36 = swift_allocObject(v34, ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 3 * *(_QWORD *)(v12 + 72), *(unsigned __int8 *)(v12 + 80) | 7);
    *(_OWORD *)(v36 + 16) = xmmword_1006405F0;
    v37 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
    v38 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v37);
    v39 = v119;
    static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v38);
    v139 = v36;
    v40 = sub_10000E720(&qword_100807E20, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
    v41 = sub_10000DAF8((uint64_t *)&unk_10082C090);
    v42 = sub_100018B20();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v139, v41, v42, v11, v40);
    v43 = v122;
    v44 = v117;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v122 + 104))(v10, enum case for VerticalFlowLayout.HorizontalPlacement.leading(_:), v117);
    v45 = v137;
    static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v145, &v142, v140, v22, v10, v15);
    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v10, v44);
    v131 = v12;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    v46 = *(void (**)(_BYTE *, uint64_t))(v133 + 8);
    v129 = v35;
    v46(v22, v35);
    sub_100010F2C((uint64_t)v140, &qword_100814FB0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v142);
    v47 = v132;
    v48 = v120;
    (*(void (**)(_BYTE *, uint64_t))(v39 + 16))(v132, v45);
    v49 = (unint64_t)v138;
    if ((swift_isUniquelyReferenced_nonNull_native(v138) & 1) == 0)
      v49 = sub_1003D9B30(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
    v51 = *(_QWORD *)(v49 + 16);
    v50 = *(_QWORD *)(v49 + 24);
    v52 = v134;
    v53 = v131;
    v19 = (_BYTE *)v130;
    if (v51 >= v50 >> 1)
      v49 = sub_1003D9B30(v50 > 1, v51 + 1, 1, v49);
    *(_QWORD *)(v49 + 16) = v51 + 1;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v39 + 32))(v49+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v51, v47, v48);
    v138 = (_QWORD *)v49;
    (*(void (**)(_QWORD, uint64_t))(v39 + 8))(v137, v48);
    v54 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
    v16 = v129;
    v17 = v133;
    v55 = (uint64_t)v52;
  }
  else
  {
    v54 = sub_100010F2C((uint64_t)&v142, (uint64_t *)&unk_10080CE00);
    v55 = (uint64_t)v134;
    v53 = v12;
  }
  CondensedSearchResultCardLayout.Metrics.headerTextSpace.getter(v145, v54);
  v144 = 0;
  v142 = 0u;
  v143 = 0u;
  sub_10000EF80(v55, (uint64_t)v140);
  v56 = sub_10000DAF8((uint64_t *)&unk_100812F70);
  v57 = sub_10000DAF8(&qword_100815520);
  if (swift_dynamicCast(&v139, v140, v56, v57, 6))
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v139);
    v58 = *(void (**)(_QWORD))(v17 + 104);
    v107 = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
    v108 = (void (*)(_BYTE *, _QWORD, uint64_t))v58;
    v58(v19);
  }
  else
  {
    v108 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104);
    v108(v19, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v16);
    v107 = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
  }
  v59 = v17;
  v133 = sub_10000DAF8((uint64_t *)&unk_10082C080);
  v60 = *(_QWORD *)(v53 + 72);
  v61 = *(unsigned __int8 *)(v53 + 80);
  v130 = 2 * v60;
  v129 = v60;
  v132 = (_BYTE *)(((v61 + 32) & ~v61) + 3 * v60);
  v128 = (v61 + 32) & ~v61;
  v131 = v61 | 7;
  v62 = swift_allocObject(v133, v132, v61 | 7);
  v137 = xmmword_1006405F0;
  *(_OWORD *)(v62 + 16) = xmmword_1006405F0;
  v63 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v64 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v63);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v64);
  *(_QWORD *)&v140[0] = v62;
  v65 = sub_10000E720(&qword_100807E20, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
  v126 = v65;
  v66 = sub_10000DAF8((uint64_t *)&unk_10082C090);
  v125 = v66;
  v127 = sub_100018B20();
  v67 = v112;
  v68 = v113;
  dispatch thunk of SetAlgebra.init<A>(_:)(v140, v66, v127, v113, v65);
  v124 = enum case for VerticalFlowLayout.HorizontalPlacement.leading(_:);
  v69 = v122;
  v123 = *(void (**)(_BYTE *))(v122 + 104);
  v70 = v109;
  v71 = v117;
  v123(v109);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v134, v145, &v142, v19, v70, v67);
  v134 = *(void (**)(_QWORD, _QWORD))(v69 + 8);
  v134(v70, v71);
  v122 = *(_QWORD *)(v53 + 8);
  ((void (*)(_BYTE *, uint64_t))v122)(v67, v68);
  v121 = *(void (**)(_BYTE *, uint64_t))(v59 + 8);
  v121(v19, v16);
  sub_100010F2C((uint64_t)&v142, &qword_100814FB0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
  v72 = v110[3];
  v73 = v110[4];
  v74 = sub_100010F08(v110, v72);
  v145[3] = v72;
  v145[4] = *(_QWORD *)(v73 + 8);
  v75 = sub_1000119C0(v145);
  v76 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v75, v74, v72);
  CondensedSearchResultCardLayout.Metrics.titleTextSpace.getter(&v142, v76);
  v141 = 0;
  memset(v140, 0, sizeof(v140));
  v77 = v111;
  v78 = v108;
  v108(v111, v107, v16);
  v79 = swift_allocObject(v133, v132, v131);
  *(_OWORD *)(v79 + 16) = v137;
  v80 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v81 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v80);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v81);
  v139 = v79;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v139, v125, v127, v68, v126);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v123)(v70, v124, v71);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v145, &v142, v140, v77, v70, v67);
  v134(v70, v71);
  ((void (*)(_BYTE *, uint64_t))v122)(v67, v68);
  v121(v77, v16);
  sub_100010F2C((uint64_t)v140, &qword_100814FB0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v142);
  v82 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
  v83 = CondensedSearchResultCardLayout.Metrics.viewButtonAXTopMargin.getter(v145, v82);
  CondensedSearchResultCardLayout.Metrics.artworkBottomMargin.getter(&v142, v83);
  v78(v77, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v16);
  v84 = swift_allocObject(v133, v132, v131);
  *(_OWORD *)(v84 + 16) = v137;
  v85 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v86 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v85);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v86);
  *(_QWORD *)&v140[0] = v84;
  dispatch thunk of SetAlgebra.init<A>(_:)(v140, v125, v127, v68, v126);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v123)(v70, v124, v71);
  v87 = v115;
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v114, v145, &v142, v77, v70, v67);
  v134(v70, v71);
  ((void (*)(_BYTE *, uint64_t))v122)(v67, v68);
  v121(v77, v16);
  sub_100010F2C((uint64_t)&v142, &qword_100814FB0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v145);
  v88 = sub_10000DAF8(&qword_100807E30);
  v89 = v119;
  v90 = *(_QWORD *)(v119 + 72);
  v91 = *(unsigned __int8 *)(v119 + 80);
  v92 = (v91 + 32) & ~v91;
  v93 = 2 * v90;
  v94 = swift_allocObject(v88, v92 + 3 * v90, v91 | 7);
  *(_OWORD *)(v94 + 16) = v137;
  v95 = v94 + v92;
  v96 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v89 + 16);
  v97 = v135;
  v98 = v120;
  v96(v95, v135, v120);
  v99 = v95 + v90;
  v100 = v136;
  v96(v99, v136, v98);
  v96(v95 + v93, v87, v98);
  sub_10001A310(v94);
  v101 = v138;
  v102 = type metadata accessor for VerticalFlowLayout(0);
  v103 = v116;
  v116[3] = v102;
  v103[4] = &protocol witness table for VerticalFlowLayout;
  v103[5] = &protocol witness table for VerticalFlowLayout;
  sub_1000119C0(v103);
  VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v101);
  v104 = *(void (**)(_BYTE *, uint64_t))(v89 + 8);
  v104(v87, v98);
  v104(v100, v98);
  return ((uint64_t (*)(_BYTE *, uint64_t))v104)(v97, v98);
}

Swift::Void __swiftcall CondensedEditorialSearchResultContentView.prepareForReuse()()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_10000DAF8(&qword_100826A80);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel], "setText:", 0, v2);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel], "setText:", 0);
  sub_1000168D0(0);
  v5 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid;
  v6 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid];
  if (v6)
  {
    objc_msgSend(v6, "removeFromSuperview");
    v7 = *(void **)&v0[v5];
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)&v0[v5] = 0;

  if (*(_QWORD *)&v0[v5])
    objc_msgSend(v0, "addSubview:");
  objc_msgSend(v0, "setNeedsLayout");
  v8 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  UIButton.configuration.setter(v4);
}

Swift::Void __swiftcall CondensedEditorialSearchResultContentView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  objc_class *v32;
  UITraitCollection v33;
  uint64_t v34;
  char v35[24];
  objc_super v36;

  v2 = v1;
  isa = a1.value.super.isa;
  swift_getObjectType();
  v34 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DAF8(&qword_100826A80);
  __chkstk_darwin(v7);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (objc_class *)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v36.receiver = v1;
  v36.super_class = v10;
  objc_msgSendSuper2(&v36, "traitCollectionDidChange:", isa);
  v11 = objc_msgSend(v1, "traitCollection");
  v12 = objc_msgSend(v11, "userInterfaceStyle");

  if (!isa || v12 != -[objc_class userInterfaceStyle](isa, "userInterfaceStyle"))
  {
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton];
    v14 = objc_msgSend(v2, "traitCollection", v34);
    sub_10058CCD8(v13, v14, (uint64_t)v9);

    v15 = type metadata accessor for UIButton.Configuration(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
    UIButton.configuration.setter(v9);
    objc_msgSend(v2, "setNeedsLayout");
  }
  v16 = objc_msgSend(v2, "traitCollection", v34);
  v17 = objc_msgSend(v16, "preferredContentSizeCategory");

  if (!isa)
  {

LABEL_10:
    v26 = sub_10058CEE0();
    v28 = v27;
    sub_1000134EC(v26, v27, &OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton);
    swift_bridgeObjectRelease(v28);
    v29 = &v2[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration];
    v30 = swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], v35, 0, 0);
    v31 = v34;
    (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v6, v29, v34, v30);
    v32 = (objc_class *)objc_msgSend(v2, "traitCollection");
    v33.super.isa = v32;
    sub_100013888((uint64_t)v6, v33);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
    objc_msgSend(v2, "setNeedsLayout");
    return;
  }
  v18 = -[objc_class preferredContentSizeCategory](isa, "preferredContentSizeCategory");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v24 = v22;
  if (v19 == v23 && v21 == v22)
  {

    swift_bridgeObjectRelease_n(v21, 2);
    return;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);

  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) == 0)
    goto LABEL_10;
}

uint64_t sub_1000152B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitCollection.getter();
  *a1 = result;
  return result;
}

double sub_1000152DC(uint64_t a1, __n128 a2, double a3, uint64_t a4, objc_class *a5)
{
  double v6;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  Class v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Class v48;
  Swift::Int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  char v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD *);
  unsigned int v73;
  uint64_t v74;
  void (*v75)(char *);
  unsigned int v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  UITraitCollection v88;
  _QWORD v89[5];
  _QWORD v90[5];
  _QWORD v91[5];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v88.super.isa = a5;
  v6 = a2.n128_f64[0];
  v87 = type metadata accessor for FontSource(0, a2);
  v79 = *(_QWORD *)(v87 - 8);
  v8 = __chkstk_darwin(v87);
  v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for LabelPlaceholderCompatibility(0, v8);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v80 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AspectRatio(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - v20;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v22);
  AspectRatio.init(_:_:)(v23);
  v77 = a1;
  sub_100016E00();
  v25 = v24;
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v28 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v84 = v21;
  v86 = v15;
  v29 = v28(v21, v15);
  v85 = (void (*)(uint64_t, uint64_t))v28;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v29);
  CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(v25, v27);
  v28(v18, v15);
  v30 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v81 = LayoutViewPlaceholder.init(representing:)(v25, v27);
  v31 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter();
  v71 = v32;
  v33 = v78;
  CondensedSearchResultCardLayout.Configuration.headerFont.getter();
  v76 = enum case for FontSource.useCase(_:);
  v34 = v79;
  v75 = *(void (**)(char *))(v79 + 104);
  v35 = v87;
  v75(v33);
  isa = v88.super.isa;
  v37 = FontSource.font(compatibleWith:)(v88).super.isa;
  v79 = *(_QWORD *)(v34 + 8);
  v38.n128_f64[0] = ((double (*)(char *, uint64_t))v79)(v33, v35);
  v39 = CondensedSearchResultCardLayout.Configuration.headerNumberOfLines.getter(v38);
  v40 = type metadata accessor for Feature(0);
  v93 = v40;
  v74 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v94 = v74;
  v41 = sub_1000119C0(&v92);
  v73 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v72 = *(void (**)(_QWORD *))(*(_QWORD *)(v40 - 8) + 104);
  v72(v41);
  LOBYTE(v12) = isFeatureEnabled(_:)(&v92);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v92);
  v68 = v12 & 1;
  v42 = v80;
  v43 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v31, v71, v37, 4, 4, 0, v39, 0, v68);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v97, v43);
  v82 = *(_QWORD *)(v82 + 8);
  v44 = v83;
  v45 = ((uint64_t (*)(char *, uint64_t))v82)(v42, v83);
  v77 = EditorialSearchResult.title.getter(v45);
  v71 = v46;
  CondensedSearchResultCardLayout.Configuration.titleFont.getter();
  v47 = v87;
  ((void (*)(char *, _QWORD, uint64_t))v75)(v33, v76, v87);
  v48 = FontSource.font(compatibleWith:)((UITraitCollection)isa).super.isa;
  ((void (*)(char *, uint64_t))v79)(v33, v47);
  v49 = CondensedSearchResultCardLayout.Configuration.titleNumberOfLines(in:)((UITraitCollection)isa);
  v93 = v40;
  v94 = v74;
  v50 = sub_1000119C0(&v92);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v72)(v50, v73, v40);
  LOBYTE(v39) = isFeatureEnabled(_:)(&v92);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v92);
  LOBYTE(v69) = v39 & 1;
  v51 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v77, v71, v48, 4, 4, 0, v49, 0, v69);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v96, v51);
  v52 = ((uint64_t (*)(char *, uint64_t))v82)(v42, v44);
  v53 = static CondensedSearchResultCardLayout.estimatedSizeForViewButtonInAXLayouts.getter(v52);
  v55 = v54;
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v56 = LayoutViewPlaceholder.init(representing:)(v53, v55);
  v91[4] = &protocol witness table for LayoutViewPlaceholder;
  v91[3] = v30;
  v57 = v81;
  v91[0] = v81;
  v58 = v98;
  v59 = v99;
  v60 = sub_100010F08(&v97, v98);
  v90[3] = v58;
  v90[4] = *(_QWORD *)(v59 + 8);
  v61 = sub_1000119C0(v90);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v61, v60, v58);
  v89[4] = &protocol witness table for LayoutViewPlaceholder;
  v89[3] = v30;
  v89[0] = v56;
  swift_retain(v57);
  swift_retain(v56);
  v62 = (uint64_t)v84;
  sub_10001413C((uint64_t)v84, (uint64_t)v91, (void (*)(_QWORD, _QWORD))v90, &v96, (uint64_t)v89, &v92);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v89);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
  sub_100010F2C((uint64_t)v91, (uint64_t *)&unk_10080CE00);
  v63 = v93;
  v64 = v95;
  sub_100010F08(&v92, v93);
  Measurable.measurements(fitting:with:)(v88.super.isa, v63, v64, v6, a3);
  v66 = v65;
  swift_release(v57);
  swift_release(v56);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v96);
  v85(v62, v86);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v92);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v97);
  return v66;
}

uint64_t sub_100015990(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[7];
  _BYTE v22[24];
  _QWORD v23[10];
  _QWORD v24[10];

  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v24[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v9);
    v12 = (uint64_t *)(a1 + 32);
    do
    {
      v13 = *v12;
      v12 += 2;
      swift_retain(v13);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = *(_QWORD *)(v24[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized ContiguousArray._endMutation()(v16);
      --v9;
    }
    while (v9);
    v10 = (_QWORD *)v24[0];
  }
  if (qword_100804BF0 != -1)
    swift_once(&qword_100804BF0, sub_100188190);
  v17 = sub_10001899C((uint64_t)&xmmword_1008657E0, (uint64_t)v24);
  if (a4 > 0.0 && a5 > 0.0)
  {
    __chkstk_darwin(v17);
    v21[2] = v10;
    v21[3] = a3;
    *(CGFloat *)&v21[4] = a4;
    *(CGFloat *)&v21[5] = a5;
    v18 = sub_100018A18();
    Copyable.copyWithOverrides(in:)(v23, sub_100018A0C, v21, &type metadata for IconArtworkGridView.Config, v18);
    v19 = a2 + OBJC_IVAR____TtC20ProductPageExtension19IconArtworkGridView_config;
    swift_beginAccess(a2 + OBJC_IVAR____TtC20ProductPageExtension19IconArtworkGridView_config, v22, 33, 0);
    sub_100018A5C((uint64_t)v23, v19);
    swift_endAccess(v22);
    sub_100188798();
    sub_1000189D8((uint64_t)v23);
    sub_100188B10(a4, a5);
  }
  swift_bridgeObjectRelease(v10);
  return sub_1000189D8((uint64_t)v24);
}

void CondensedEditorialSearchResultContentView.applyData(from:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  char *v31;
  unsigned int *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  void (*v41)(char *, uint64_t);
  uint64_t KeyPath;
  void *v43;
  UITraitCollection v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  __n128 v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  double v63;
  double v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  double v76;
  double v77;
  double v78;
  double v79;
  id v80;
  double *v81;
  char **v82;
  id v83;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  double v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  _QWORD v109[3];

  v103 = a2;
  v3 = type metadata accessor for AspectRatio(0);
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  __chkstk_darwin(v3);
  v98 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v101 = *(_QWORD *)(v5 - 8);
  v102 = v5;
  __chkstk_darwin(v5);
  v108 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EditorialSearchResultType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v96 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v96 - v15;
  v107 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v17 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v96 - v21;
  v24 = __chkstk_darwin(v23);
  v106 = (char *)&v96 - v25;
  v26 = type metadata accessor for EditorialSearchResult(0, v24);
  v27 = sub_10000E720(&qword_100822180, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v105 = a1;
  v28 = ItemLayoutContext.typedModel<A>(as:)(v109, v26, v26, v27);
  if (v109[0])
  {
    v97 = v109[0];
    EditorialSearchResult.type.getter(v28);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v16, v7);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
    if (v29 == enum case for EditorialSearchResultType.category(_:))
    {
      v30 = v107;
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v22, enum case for CondensedSearchResultCardLayout.Configuration.category(_:), v107);
      v31 = v104;
      goto LABEL_10;
    }
    v30 = v107;
    v31 = v104;
    if (v29 == enum case for EditorialSearchResultType.story(_:))
    {
      v32 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.stories(_:);
    }
    else
    {
      if (v29 != enum case for EditorialSearchResultType.developer(_:))
      {
        v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
        if (v29 != enum case for EditorialSearchResultType.appEventStory(_:))
        {
          v34(v22, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v107);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_10:
          v35 = (uint64_t)v106;
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v106, v22, v30);
          v36 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
          v37 = v36(v16, v7);
          v38 = v30;
          CondensedSearchResultCardLayout.Configuration.metrics.getter(v37);
          (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v35, v30);
          v39 = &v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration];
          v40 = swift_beginAccess(&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], v109, 33, 0);
          (*(void (**)(char *, char *, uint64_t, __n128))(v17 + 24))(v39, v19, v38, v40);
          swift_endAccess(v109);
          objc_msgSend(v31, "setNeedsLayout");
          v41 = *(void (**)(char *, uint64_t))(v17 + 8);
          v41(v19, v38);
          KeyPath = swift_getKeyPath(&unk_100640890);
          ItemLayoutContext.subscript.getter(v109);
          swift_release(KeyPath);
          v43 = (void *)v109[0];
          v44.super.isa = (Class)v109[0];
          sub_100013888(v35, v44);

          v45 = v97;
          v46 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter();
          v48 = v47;
          EditorialSearchResult.type.getter(v46);
          sub_1000162E0(v46, v48, (uint64_t)v10);
          v49 = swift_bridgeObjectRelease(v48);
          v50 = ((uint64_t (*)(char *, uint64_t, __n128))v36)(v10, v7, v49);
          v51 = *(void **)&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel];
          EditorialSearchResult.title.getter(v50);
          v104 = (char *)v41;
          if (v52)
          {
            v54 = v52;
            v55 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v53 = swift_bridgeObjectRelease(v54).n128_u64[0];
          }
          else
          {
            v55 = 0;
          }
          v57 = v102;
          v56 = v103;
          v58 = v101;
          objc_msgSend(v51, "setText:", v55, v53);

          v59 = EditorialSearchResult.collectionAdamIds.getter();
          if (v59)
          {
            v60 = v59;
            v61 = type metadata accessor for AdamId(0);
            v62 = Array.isNotEmpty.getter(v60, v61);
            swift_bridgeObjectRelease(v60);
            if ((v62 & 1) != 0)
            {
              v63 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v59);
              v65 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IconArtworkGridView()), "initWithFrame:", 0.0, 0.0, v63, v64);
              v66 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid;
              v67 = *(void **)&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid];
              if (v67)
              {
                objc_msgSend(v67, "removeFromSuperview");
                v68 = *(void **)&v31[v66];
              }
              else
              {
                v68 = 0;
              }
              *(_QWORD *)&v31[v66] = v65;
              v83 = v65;

              if (*(_QWORD *)&v31[v66])
                objc_msgSend(v31, "addSubview:");
              v82 = &selRef_fileURLWithPath_;
              objc_msgSend(v31, "setNeedsLayout");

LABEL_27:
              v85 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v84);
              v79 = v86;
              v81 = (double *)&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize];
              *(double *)&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize] = v85;
              goto LABEL_28;
            }
          }
          v69 = EditorialSearchResult.editorialVideo.getter(v59);
          if (v69)
          {
            v70 = v69;
            v71 = Video.preview.getter();
            swift_release(v71);
            swift_release(v70);
          }
          else
          {
            v73 = EditorialSearchResult.editorialArtwork.getter();
            v74 = swift_release(v73);
            if (!v73)
            {
              v91 = EditorialSearchResult.iconArtwork.getter(v74);
              swift_release(v91);
              v82 = &selRef_fileURLWithPath_;
              if (!v91)
                goto LABEL_29;
              v93 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v92);
              v95 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v93, v94);
              sub_1000168D0(v95);

              goto LABEL_27;
            }
          }
          v75 = v98;
          AspectRatio.init(_:_:)(v72);
          sub_100016E00();
          v77 = v76;
          v79 = v78;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v75, v100);
          v80 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v77, v79);
          sub_1000168D0(v80);

          v81 = (double *)&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize];
          *(double *)&v31[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize] = v77;
          v82 = &selRef_fileURLWithPath_;
LABEL_28:
          v81[1] = v79;
          objc_msgSend(v31, v82[151]);
LABEL_29:
          v87 = swift_allocObject(&unk_100736788, 24, 7);
          swift_unknownObjectWeakInit(v87 + 16, v31);
          v88 = swift_allocObject(&unk_1007367B0, 24, 7);
          swift_weakInit(v88 + 16, v45);
          v89 = (_QWORD *)swift_allocObject(&unk_1007367D8, 40, 7);
          v89[2] = v87;
          v89[3] = v88;
          v89[4] = v56;
          swift_retain(v87);
          swift_retain(v88);
          swift_retain(v56);
          sub_1000169E8((uint64_t)sub_100018548, (uint64_t)v89);
          v90 = swift_release(v89);
          (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v108, v57, v90);
          ((void (*)(char *, uint64_t))v104)(v106, v107);
          swift_release(v87);
          objc_msgSend(v31, v82[151], swift_release(v88).n128_f64[0]);
          swift_release(v45);
          return;
        }
        v33 = enum case for CondensedSearchResultCardLayout.Configuration.appEvent(_:);
LABEL_9:
        v34(v22, v33, v107);
        goto LABEL_10;
      }
      v32 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.developer(_:);
    }
    v33 = *v32;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
    goto LABEL_9;
  }
}

void sub_1000162E0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  unsigned int *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  NSString v23;
  Swift::String v24;
  unint64_t v25;
  id v26;
  NSString v27;
  id v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;

  v4 = v3;
  v8 = type metadata accessor for SystemImage(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialSearchResultType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
    if (v16 == enum case for EditorialSearchResultType.category(_:)
      || v16 == enum case for EditorialSearchResultType.story(_:))
    {
      v18 = (unsigned int *)&enum case for SystemImage.appstore(_:);
    }
    else
    {
      if (v16 != enum case for EditorialSearchResultType.developer(_:))
      {
        v29 = *(void (**)(char *, uint64_t))(v13 + 8);
        swift_bridgeObjectRetain(a2);
        v29(v15, v12);
        v30 = objc_allocWithZone((Class)NSMutableAttributedString);
        v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(a2);
        v28 = objc_msgSend(v30, "initWithString:", v23);
        v21 = 0;
        goto LABEL_12;
      }
      v18 = (unsigned int *)&enum case for SystemImage.personCropSquare(_:);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *v18, v8);
    swift_bridgeObjectRetain(a2);
    v19 = (void *)static SystemImage.load(_:with:)(v11, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v20 = (void *)objc_opt_self(NSTextAttachment);
    v21 = v19;
    v22 = objc_msgSend(v20, "textAttachmentWithImage:", v21);
    v23 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v22);
    v33 = 32;
    v34 = 0xE100000000000000;
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(a2);
    v25 = v34;
    v26 = objc_allocWithZone((Class)NSMutableAttributedString);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    v28 = objc_msgSend(v26, "initWithString:", v27);

    objc_msgSend(v28, "insertAttributedString:atIndex:", v23, 0);
LABEL_12:

    v31 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel);
    v32 = v28;
    objc_msgSend(v31, "setAttributedText:", v32);

  }
}

double sub_1000165D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *Strong;
  double result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD v20[4];
  _BYTE v21[24];
  _BYTE v22[24];

  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    v14 = UIResponder.nearestActionRunner.getter();

    if (v14)
    {
      swift_beginAccess(a3 + 16, v21, 0, 0);
      v15 = swift_weakLoadStrong(a3 + 16);
      if (v15 && (v16 = v15, v17 = EditorialSearchResult.clickAction.getter(), swift_release(v16), v17))
      {
        v20[3] = type metadata accessor for CondensedEditorialSearchResultContentView(0);
        v20[0] = v13;
        (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ActionRunner.Origin.userInitiated(_:), v7);
        v18 = v13;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v17, v20, v10, a4);

        swift_release(v17);
        v19 = swift_release(v14);
        (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v19);
        sub_100010F2C((uint64_t)v20, &qword_100808F20);
      }
      else
      {

        *(_QWORD *)&result = swift_release(v14).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

uint64_t static CondensedEditorialSearchResultContentView.sizingForArtworkPrefetch(in:asPartOf:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for ComponentPrefetchSizing(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

id CondensedEditorialSearchResultContentView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1000168D0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView;
  v9 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView];
  if (v9)
  {
    objc_msgSend(v9, "removeFromSuperview");
    v10 = *(void **)&v2[v8];
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)&v2[v8] = a1;
  v11 = a1;

  v12 = *(void **)&v2[v8];
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v2, "addSubview:", v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CornerStyle.continuous(_:), v4);
    ArtworkView.setCorner(radius:style:)(v7, 10.0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_1000169E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;

  v3 = v2;
  v6 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_action;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_action);
  if (v7)
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton), "removeAction:forControlEvents:", v7, 4095);
    v8 = *(void **)(v3 + v6);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v3 + v6) = 0;

  v9 = *(_QWORD *)(v3 + v6);
  if (v9)
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton), "addAction:forControlEvents:", v9, 64);
  v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_buttonHandler);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_buttonHandler);
  v12 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_buttonHandler
                  + 8);
  *v10 = a1;
  v10[1] = a2;
  sub_100018918(a1, a2);
  result = sub_100018908(v11, v12);
  v14 = *v10;
  if (*v10)
  {
    v15 = v10[1];
    sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
    sub_100018918(v14, v15);
    v16 = swift_retain(v15);
    v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v16, 0, 0, 0, v14, v15);
    v18 = *(_QWORD *)(v3 + v6);
    if (v18)
    {
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton), "removeAction:forControlEvents:", v18, 4095);
      v19 = *(void **)(v3 + v6);
    }
    else
    {
      v19 = 0;
    }
    *(_QWORD *)(v3 + v6) = v17;
    v20 = v17;

    v21 = *(_QWORD *)(v3 + v6);
    if (v21)
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton), "addAction:forControlEvents:", v21, 64);

    return sub_100018908(v14, v15);
  }
  return result;
}

void sub_100016BB0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v0[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_headerLabel;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v1[v12] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_titleLabel;
  *(_QWORD *)&v1[v13] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_viewButton;
  *(_QWORD *)&v1[v14] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v15 = enum case for CondensedSearchResultCardLayout.Configuration.standard(_:);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v16(&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_configuration], enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v6);
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_action] = 0;
  v17 = &v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_buttonHandler];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = (double *)&v1[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkSize];
  v19 = v16(v9, v15, v6);
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v19);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v21 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *v18 = v21;
  *((_QWORD *)v18 + 1) = v23;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/CondensedEditorialSearchResultContentView.swift", 68, 2, 168, 0);
  __break(1u);
}

void sub_100016E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AspectRatio(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = EditorialSearchResult.editorialVideo.getter(v6);
  if (v9)
  {
    v10 = v9;
    v11 = Video.preview.getter();
    v12 = swift_release(v10);
    v13 = Artwork.size.getter(v12);
    v14 = AspectRatio.init(_:_:)(v13);
    CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v14);
    v16 = ((uint64_t (*)(double))AspectRatio.width(fromHeight:))(v15);
    v18 = v17;
    CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v16);
    v21 = AspectRatio.width(fromHeight:)(v19);
    if (v18 >= v21)
      v18 = v21;
    v22 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v20);
    v24 = v23;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v1 + 104))(v3, enum case for FloatingPointRoundingRule.up(_:), v0, v22);
    CGSize.rounded(_:)(v3, v18, v24);
    swift_release(v11);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    CondensedSearchResultCardLayout.Metrics.artworkSize.getter(0);
  }
}

double sub_100016F9C(double a1, double a2, uint64_t a3, uint64_t a4, objc_class *a5)
{
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  double (*v49)(char *, uint64_t);
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t);
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(_QWORD *, char *, uint64_t);
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t OpaqueTypeConformance2;
  uint64_t v91;
  double v92;
  double v93;
  void (*v94)(char *, uint64_t);
  void (*v95)(char *, uint64_t);
  void (*v97)(char *, uint64_t);
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t);
  char *v117;
  char *v118;
  char *v119;
  UITraitCollection v120;
  uint64_t v121;
  _QWORD v122[5];
  _QWORD v123[5];
  _QWORD v124[5];
  _QWORD v125[5];

  v120.super.isa = a5;
  v113 = sub_10000DAF8(&qword_100807DA8);
  v114 = *(_QWORD *)(v113 - 8);
  v7 = __chkstk_darwin(v113);
  v111 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for CondensedSearchResultCardLayout(0, v7);
  v112 = *(_QWORD *)(v110 - 8);
  v9 = __chkstk_darwin(v110);
  v109 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for LabelPlaceholder(0, v9);
  v108 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v117 = (char *)&v97 - v13;
  v115 = type metadata accessor for FontUseCase(0);
  v116 = *(uint64_t (**)(char *, uint64_t))(v115 - 8);
  v14 = __chkstk_darwin(v115);
  v99 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for DynamicTextAppearance(0, v14);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v104 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v97 - v18;
  __chkstk_darwin(v20);
  v98 = (char *)&v97 - v21;
  __chkstk_darwin(v22);
  v118 = (char *)&v97 - v23;
  v24 = type metadata accessor for AspectRatio(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v103 = *(_QWORD *)(v121 - 8);
  v28 = v103;
  __chkstk_darwin(v121);
  v30 = (char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v97 - v32;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v34);
  AspectRatio.init(_:_:)(v35);
  sub_100016E00();
  v37 = v36;
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v40 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  v119 = v33;
  v41 = v121;
  v42 = v40(v33, v121);
  v106 = (void (*)(char *, uint64_t))v40;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v42);
  CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(v37, v39);
  v43 = v40(v30, v41);
  v44 = DynamicTextAppearance.init()(v43);
  v45 = v99;
  CondensedSearchResultCardLayout.Configuration.headerFont.getter(v44);
  v46 = v98;
  DynamicTextAppearance.withFontUseCase(_:)(v45);
  v97 = (void (*)(char *, uint64_t))*((_QWORD *)v116 + 1);
  v47 = v45;
  v97(v45, v115);
  v48 = v100;
  v49 = *(double (**)(char *, uint64_t))(v100 + 8);
  v50 = v102;
  v51.n128_f64[0] = v49(v19, v102);
  v116 = (uint64_t (*)(char *, uint64_t))v49;
  v52 = CondensedSearchResultCardLayout.Configuration.headerNumberOfLines.getter(v51);
  v53 = v118;
  DynamicTextAppearance.withNumberOfLines(_:)(v52);
  v54 = ((uint64_t (*)(char *, uint64_t))v49)(v46, v50);
  v55 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v54);
  v57 = v56;
  v58 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v58(v46, v53, v50);
  v59 = LabelPlaceholder.Options.init(rawValue:)(0);
  v60 = v117;
  v61 = v57;
  v62 = v46;
  v63 = LabelPlaceholder.init(_:with:where:)(v55, v61, v46, v59);
  v64 = v104;
  v65 = DynamicTextAppearance.init()(v63);
  CondensedSearchResultCardLayout.Configuration.titleFont.getter(v65);
  DynamicTextAppearance.withFontUseCase(_:)(v47);
  v97(v47, v115);
  v66 = v116;
  v116(v64, v50);
  v67 = CondensedSearchResultCardLayout.Configuration.titleNumberOfLines(in:)(v120);
  DynamicTextAppearance.withNumberOfLines(_:)(v67);
  v68 = v66(v19, v50);
  v69 = EditorialSearchResult.title.getter(v68);
  v71 = v70;
  v72 = v62;
  v73 = v50;
  v58(v19, v62, v50);
  v74 = LabelPlaceholder.Options.init(rawValue:)(0);
  v75 = v105;
  LabelPlaceholder.init(_:with:where:)(v69, v71, v19, v74);
  v76 = v101;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v101, v119, v121);
  v125[3] = &type metadata for FixedSizedPlaceholder;
  v125[4] = sub_100018A98();
  *(double *)v125 = v37;
  *(double *)&v125[1] = v39;
  v77 = v107;
  v124[3] = v107;
  v124[4] = &protocol witness table for LabelPlaceholder;
  v78 = sub_1000119C0(v124);
  v79 = v108;
  v80 = *(void (**)(_QWORD *, char *, uint64_t))(v108 + 16);
  v80(v78, v60, v77);
  v123[3] = v77;
  v123[4] = &protocol witness table for LabelPlaceholder;
  v81 = sub_1000119C0(v123);
  v82 = v75;
  v80(v81, v75, v77);
  v83 = type metadata accessor for EmptyPlaceable(0);
  swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
  v84 = EmptyPlaceable.init()();
  v122[3] = v83;
  v122[4] = sub_10000E720(&qword_100807E18, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyPlaceable, (uint64_t)&protocol conformance descriptor for EmptyPlaceable);
  v122[0] = v84;
  v85 = v109;
  CondensedSearchResultCardLayout.init(metrics:artwork:headerText:titleText:viewButton:isTextBaselineAligned:)(v76, v125, v124, v123, v122, 1);
  v86 = sub_10000E720(&qword_100807DB0, (uint64_t (*)(uint64_t))&type metadata accessor for CondensedSearchResultCardLayout, (uint64_t)&protocol conformance descriptor for CondensedSearchResultCardLayout);
  v87 = v111;
  v88 = v110;
  v89 = dispatch thunk of CustomLayout.layout.getter(v110, v86);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v89, &opaque type descriptor for <<opaque return type of CondensedSearchResultCardLayout.layout>>, 1);
  v91 = v113;
  dispatch thunk of Placeable.measure(toFit:with:)(v120.super.isa, v113, OpaqueTypeConformance2, a1, a2);
  v93 = v92;
  (*(void (**)(char *, uint64_t))(v114 + 8))(v87, v91);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v85, v88);
  v94 = *(void (**)(char *, uint64_t))(v79 + 8);
  v94(v82, v77);
  v95 = (void (*)(char *, uint64_t))v116;
  v116(v72, v73);
  v94(v117, v77);
  v95(v118, v73);
  v106(v119, v121);
  return v93;
}

double _s20ProductPageExtension41CondensedEditorialSearchResultContentViewC6height2in8asPartOf12CoreGraphics7CGFloatV19AppStoreKitInternal17ItemLayoutContextV_9JetEngine15BaseObjectGraphCtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t KeyPath;
  char *v33;
  objc_class *v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  __n128 v40;
  double v41;
  void (*v43)(char *, _QWORD, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  objc_class *v50;

  v0 = type metadata accessor for EditorialSearchResultType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - v5;
  v7 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v8 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  v48 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v14 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageGrid(0);
  v45 = *(_QWORD *)(v17 - 8);
  v46 = v17;
  v18 = __chkstk_darwin(v17);
  v49 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for EditorialSearchResult(0, v18);
  v21 = sub_10000E720(&qword_100822180, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v50, v20, v20, v21);
  v23 = (uint64_t)v50;
  if (!v50)
    return 0.0;
  v44 = v13;
  ItemLayoutContext.parentShelfLayoutContext.getter(v22);
  if (qword_1008059F8 != -1)
    swift_once(&qword_1008059F8, sub_1003A0ECC);
  v24 = qword_100867D20;
  swift_bridgeObjectRetain(qword_100867D20);
  v25 = PageGrid.init(from:breakpointOverrides:)(v16, v24);
  EditorialSearchResult.type.getter(v25);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v26 == enum case for EditorialSearchResultType.category(_:))
  {
    v27 = enum case for CondensedSearchResultCardLayout.Configuration.category(_:);
    v29 = v47;
    v28 = v48;
  }
  else
  {
    v29 = v47;
    if (v26 != enum case for EditorialSearchResultType.story(_:))
    {
      v31 = (uint64_t)v44;
      if (v26 == enum case for EditorialSearchResultType.developer(_:))
      {
        v28 = v48;
        (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v10, enum case for CondensedSearchResultCardLayout.Configuration.developer(_:), v47);
      }
      else
      {
        v43 = *(void (**)(char *, _QWORD, uint64_t))(v48 + 104);
        if (v26 == enum case for EditorialSearchResultType.appEventStory(_:))
        {
          v43(v10, enum case for CondensedSearchResultCardLayout.Configuration.appEvent(_:), v47);
        }
        else
        {
          v43(v10, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v47);
          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        }
        v28 = v48;
      }
      goto LABEL_10;
    }
    v27 = enum case for CondensedSearchResultCardLayout.Configuration.stories(_:);
    v28 = v48;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v10, v27, v29);
  v31 = (uint64_t)v44;
LABEL_10:
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v31, v10, v29);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  KeyPath = swift_getKeyPath(&unk_100640890);
  ItemLayoutContext.subscript.getter(&v50);
  swift_release(KeyPath);
  v33 = v49;
  v34 = v50;
  v35 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v37 = v36;
  v39 = v38;
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v35) & 1) != 0)
  {
    v40.n128_f64[0] = v37;
    v41 = sub_1000152DC(v23, v40, v39, v31, v34);
  }
  else
  {
    v41 = sub_100016F9C(v37, v39, v23, v31, v34);
  }
  v30 = v41;
  swift_release(v23);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v29);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
  return v30;
}

uint64_t _s20ProductPageExtension41CondensedEditorialSearchResultContentViewC5fetch3for2in2on8asPartOfy19AppStoreKitInternal27ManagedArtworkModelProtocol_p_So6CGRectV0qrS00V6LoaderC9JetEngine15BaseObjectGraphCtF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t result;
  uint64_t (*v33)(char *, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  double *v56;
  double *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  void *v69;
  id v70;
  char *v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  char *v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  char *v91;
  double v92;
  double v93;
  double v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, _QWORD, uint64_t);
  uint64_t (*v109)(char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  _QWORD v126[5];
  _QWORD v127[6];

  v115 = a3;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  v6 = __chkstk_darwin(v5);
  v111 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for Artwork.Crop(0, v6);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for AspectRatio(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v11 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v13 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v124 = (char *)&v109 - v15;
  v16 = type metadata accessor for EditorialSearchResultType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v118 = (void (*)(char *, uint64_t))((char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (char *)&v109 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v109 - v23;
  v123 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v125 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v122 = (char *)&v109 - v28;
  sub_10000EF80(a1, (uint64_t)v127);
  v29 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v31 = type metadata accessor for EditorialSearchResult(0, v30);
  result = swift_dynamicCast(v126, v127, v29, v31, 6);
  if ((_DWORD)result)
  {
    v110 = a2;
    v119 = v126[0];
    EditorialSearchResult.type.getter(result);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v24, v16);
    v33 = *(uint64_t (**)(char *, uint64_t))(v17 + 88);
    v34 = v33(v21, v16);
    v109 = v33;
    if (v34 == enum case for EditorialSearchResultType.category(_:))
    {
      v35 = v125;
      v36 = v123;
      (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v26, enum case for CondensedSearchResultCardLayout.Configuration.category(_:), v123);
      goto LABEL_9;
    }
    v36 = v123;
    if (v34 == enum case for EditorialSearchResultType.story(_:))
    {
      v37 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.stories(_:);
    }
    else
    {
      if (v34 != enum case for EditorialSearchResultType.developer(_:))
      {
        v108 = *(void (**)(char *, _QWORD, uint64_t))(v125 + 104);
        if (v34 == enum case for EditorialSearchResultType.appEventStory(_:))
        {
          v108(v26, enum case for CondensedSearchResultCardLayout.Configuration.appEvent(_:), v123);
        }
        else
        {
          v108(v26, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v123);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
        }
        v35 = v125;
LABEL_9:
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v122, v26, v36);
        v38 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
        v39 = v38(v24, v16);
        CondensedSearchResultCardLayout.Configuration.metrics.getter(v39);
        CondensedSearchResultCardLayout.Configuration.metrics.getter(v40);
        v42 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v41);
        v44 = v43;
        v45 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
        v46 = v120;
        v47 = v45(v13, v120);
        v48 = v119;
        v49 = EditorialSearchResult.collectionAdamIds.getter(v47);
        v50 = v110;
        if (v49)
        {
          v51 = v49;
          v52 = *(void **)&v121[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid];
          if (v52)
          {
            v53 = type metadata accessor for ArtworkIconFetcher(0);
            v54 = v52;
            BaseObjectGraph.optional<A>(_:)(v127, v53, v53);
            v55 = v127[0];
            if (v127[0])
            {
              v56 = (double *)swift_allocObject(&unk_1007368A8, 48, 7);
              *((_QWORD *)v56 + 2) = v54;
              *((_QWORD *)v56 + 3) = v50;
              v56[4] = v42;
              *((_QWORD *)v56 + 5) = v44;
              v57 = (double *)swift_allocObject(&unk_1007368D0, 48, 7);
              *((_QWORD *)v57 + 2) = v54;
              *((_QWORD *)v57 + 3) = v50;
              v57[4] = v42;
              *((_QWORD *)v57 + 5) = v44;
              v118 = (void (*)(char *, uint64_t))v45;
              v58 = v121;
              v127[0] = v121;
              v59 = type metadata accessor for CondensedEditorialSearchResultContentView(0);
              v60 = sub_10000E720(&qword_100807E08, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for NSObject);
              v61 = v54;
              swift_retain_n(v50, 2);
              v62 = v61;
              v63 = v58;
              AnyHashable.init<A>(_:)(v127, v59, v60);
              dispatch thunk of ArtworkIconFetcher.fetchArtworkIcons(for:partialCompletion:completion:handlerKey:)(v127, v51, sub_10001892C, v56, sub_100018BA4, v57, v126);

              swift_release(v119);
              swift_release(v55);
              swift_release(v56);
              swift_release(v57);
              swift_bridgeObjectRelease(v51);
              sub_100010F2C((uint64_t)v126, &qword_100809010);
              sub_100018968((uint64_t)v127);
              v118(v124, v46);
              return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v122, v123);
            }
            swift_bridgeObjectRelease(v51);

            v48 = v119;
          }
          else
          {
            swift_bridgeObjectRelease(v49);
          }
        }
        v64 = EditorialSearchResult.editorialVideo.getter(v49);
        if (v64)
        {
          v65 = v64;
          v66 = Video.preview.getter();
          swift_release(v65);
        }
        else
        {
          v67 = EditorialSearchResult.editorialArtwork.getter();
          if (!v67)
            goto LABEL_25;
          v66 = v67;
        }
        v69 = *(void **)&v121[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView];
        if (v69)
        {
          v70 = v69;
          AspectRatio.init(_:_:)(v70);
          v71 = v124;
          sub_100016E00();
          v73 = v72;
          v75 = v74;
          (*(void (**)(char *, uint64_t))(v116 + 8))(v10, v117);
          v76 = objc_msgSend(v70, "setContentMode:", 0);
          v77 = (char *)v118;
          EditorialSearchResult.type.getter(v76);
          v78 = v109(v77, v16);
          v79 = 0;
          if (v78 != enum case for EditorialSearchResultType.developer(_:)
            && v78 != enum case for EditorialSearchResultType.appEventStory(_:))
          {
            v80 = v112;
            v81 = Artwork.crop.getter();
            v79 = Artwork.Crop.preferredContentMode.getter(v81);
            (*(void (**)(char *, uint64_t))(v113 + 8))(v80, v114);
            v38((char *)v118, v16);
          }
          v82 = Artwork.config(_:mode:prefersLayeredImage:)(v79, 0, v73, v75);
          v83 = type metadata accessor for ArtworkView(0);
          v84 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v82, 2, 1, v70, v83, v84);

          swift_release(v82);
          swift_release(v66);
          v85 = swift_release(v119);
          v86 = v71;
          goto LABEL_34;
        }
        v68 = swift_release(v66);
LABEL_25:
        v87 = EditorialSearchResult.iconArtwork.getter(v68);
        if (v87)
        {
          v88 = v87;
          v89 = *(void **)&v121[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView];
          if (v89)
          {
            v90 = v89;
            v91 = v124;
            v92 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v90);
            v94 = v93;
            v95 = v112;
            v96 = Artwork.crop.getter();
            v97 = Artwork.Crop.preferredContentMode.getter(v96);
            (*(void (**)(char *, uint64_t))(v113 + 8))(v95, v114);
            v98 = Artwork.config(_:mode:prefersLayeredImage:)(v97, 0, v92, v94);
            v99 = v111;
            Artwork.style.getter(v98);
            v100 = ArtworkView.style.setter(v99);
            v101 = objc_msgSend(v90, "setContentMode:", Artwork.contentMode.getter(v100));
            v102 = ArtworkLoaderConfig.size.getter(v101);
            v104 = ArtworkView.imageSize.setter(v102, v103);
            v105 = Artwork.backgroundColor.getter(v104);
            if (!v105)
            {
              sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
              v105 = static UIColor.placeholderBackground.getter();
            }
            ArtworkView.backgroundColor.setter(v105);
            v106 = type metadata accessor for ArtworkView(0);
            v107 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
            ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v98, 2, 1, v90, v106, v107);

            swift_release(v98);
            swift_release(v88);
            v85 = swift_release(v119);
            v86 = v91;
            goto LABEL_34;
          }
          swift_release(v87);
        }
        v85 = swift_release(v48);
        v86 = v124;
LABEL_34:
        ((void (*)(char *, uint64_t, __n128))v45)(v86, v46, v85);
        return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v122, v123);
      }
      v37 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.developer(_:);
    }
    v35 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v26, *v37, v123);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1000184A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitCollection.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000184CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000184F0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100018514()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100018548(uint64_t a1)
{
  uint64_t *v1;

  return sub_1000165D4(a1, v1[2], v1[3], v1[4]);
}

void _s20ProductPageExtension41CondensedEditorialSearchResultContentViewC20cancelArtworkFetches2on8asPartOf014deprioritizingL0y11AppStoreKit0K6LoaderC_9JetEngine15BaseObjectGraphCSbtF_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  UIImage_optional v20;

  v1 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_iconGrid];
  if (!v1)
    goto LABEL_15;
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension19IconArtworkGridView_iconViews];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension19IconArtworkGridView_iconViews];
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    v11 = v1;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (v3)
      goto LABEL_4;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v4 = v1;
    swift_bridgeObjectRetain(v2);
    if (v3)
    {
LABEL_4:
      if (v3 < 1)
      {
        __break(1u);
        return;
      }
      v5 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
        else
          v6 = *(id *)(v2 + 8 * v5 + 32);
        v7 = v6;
        ++v5;
        v8 = type metadata accessor for ArtworkView(0);
        v9 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, 1, v8, v9);

      }
      while (v3 != v5);
    }
  }

  swift_bridgeObjectRelease(v2);
  v0 = v18;
LABEL_15:
  v12 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension41CondensedEditorialSearchResultContentView_artworkView];
  if (v12)
  {
    v13 = v12;
    v14 = (char)v13;
    v19 = v13;
    v20.value.super.isa = 0;
    v20.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v20, v14);
    v15 = type metadata accessor for ArtworkView(0);
    v16 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v19, 1, v15, v16);

  }
}

uint64_t sub_10001873C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10000E720(&qword_100807DB8, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for CondensedEditorialSearchResultContentView);
  result = sub_10000E720(&qword_100807DC0, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for CondensedEditorialSearchResultContentView);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100018798()
{
  return sub_10000E720(&qword_100807DC8, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for CondensedEditorialSearchResultContentView);
}

uint64_t sub_1000187C4()
{
  return type metadata accessor for CondensedEditorialSearchResultContentView(0);
}

void sub_1000187CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = "\b";
      v6[6] = "\b";
      v6[7] = "\b";
      v6[8] = &unk_1006409F8;
      v6[9] = &unk_100640A10;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

unint64_t sub_10001888C()
{
  unint64_t result;

  result = qword_10081BA00;
  if (!qword_10081BA00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_10081BA00);
  }
  return result;
}

uint64_t sub_1000188D4()
{
  return 8;
}

uint64_t sub_1000188E0(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1000188E8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1000188FC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100018908(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_100018918(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10001892C(uint64_t a1)
{
  uint64_t v1;

  return sub_100015990(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40));
}

uint64_t sub_10001893C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100018968(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10001899C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IconArtworkGridView.Config(a2, a1);
  return a2;
}

uint64_t sub_1000189D8(uint64_t a1)
{
  destroy for IconArtworkGridView.Config(a1);
  return a1;
}

uint64_t sub_100018A0C(uint64_t a1)
{
  uint64_t v1;

  return sub_100189364(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

unint64_t sub_100018A18()
{
  unint64_t result;

  result = qword_100807E10;
  if (!qword_100807E10)
  {
    result = swift_getWitnessTable(&unk_10064E68C, &type metadata for IconArtworkGridView.Config);
    atomic_store(result, (unint64_t *)&qword_100807E10);
  }
  return result;
}

uint64_t sub_100018A5C(uint64_t a1, uint64_t a2)
{
  assignWithCopy for IconArtworkGridView.Config(a2, a1);
  return a2;
}

unint64_t sub_100018A98()
{
  unint64_t result;

  result = qword_10081BA40;
  if (!qword_10081BA40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FixedSizedPlaceholder, &type metadata for FixedSizedPlaceholder);
    atomic_store(result, (unint64_t *)&qword_10081BA40);
  }
  return result;
}

uint64_t sub_100018ADC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000DAF8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100018B20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100807E28;
  if (!qword_100807E28)
  {
    v1 = sub_100010DE0((uint64_t *)&unk_10082C090);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100807E28);
  }
  return result;
}

uint64_t sub_100018B6C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100018BA8(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  _QWORD *v16;
  void (*v17)(_QWORD *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD v35[3];
  uint64_t v36;
  void *v37;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for StaticDimension(0);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v34 = (char *)&v28 - v7;
  __chkstk_darwin(v8);
  v33 = (char *)&v28 - v9;
  v10 = type metadata accessor for BadgeParagraphView.Metrics(0);
  sub_100011980(v10, qword_1008647E8);
  v28 = v10;
  v29 = sub_10000EFC4(v10, (uint64_t)qword_1008647E8);
  if (qword_100806178 != -1)
    swift_once(&qword_100806178, sub_1004C6DD0);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = sub_10000EFC4(v11, (uint64_t)qword_100869540);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13(v4, v12, v11);
  v14 = enum case for FontSource.useCase(_:);
  v15 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v15(v4, enum case for FontSource.useCase(_:), v1);
  v36 = v1;
  v37 = &protocol witness table for FontSource;
  v16 = sub_1000119C0(v35);
  v17 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v17(v16, v4, v1);
  StaticDimension.init(_:scaledLike:)(v35, 32.0);
  v18 = (void (*)(char *, uint64_t))v2[1];
  v18(v4, v1);
  v13(v4, v12, v11);
  v15(v4, v14, v1);
  v36 = v1;
  v37 = &protocol witness table for FontSource;
  v19 = sub_1000119C0(v35);
  v17(v19, v4, v1);
  StaticDimension.init(_:scaledLike:)(v35, 32.0);
  v18(v4, v1);
  if (qword_100806190 != -1)
    swift_once(&qword_100806190, sub_1004C6EA0);
  v20 = sub_10000EFC4(v11, (uint64_t)qword_100869588);
  v13(v4, v20, v11);
  v15(v4, v14, v1);
  v36 = v1;
  v37 = &protocol witness table for FontSource;
  v21 = sub_1000119C0(v35);
  v17(v21, v4, v1);
  v22 = v31;
  StaticDimension.init(_:scaledLike:)(v35, 20.0);
  v18(v4, v1);
  v23 = v29;
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v25 = v32;
  v24(v29, v33, v32);
  v26 = v28;
  v24(v23 + *(int *)(v28 + 20), v34, v25);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(v23 + *(int *)(v26 + 24), v22, v25);
}

char *sub_100018EC8(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  id v25;
  objc_class *v26;
  id v27;
  double left;
  double bottom;
  double right;
  char *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  char *v37;
  id v38;
  Class isa;
  id v40;
  id v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  _QWORD v52[4];
  objc_super v53;

  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v51 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DirectionalTextAlignment(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = qword_100804550;
  v20 = v4;
  if (v19 != -1)
    swift_once(&qword_100804550, sub_100018BA8);
  v21 = type metadata accessor for BadgeParagraphView.Metrics(0);
  v22 = sub_10000EFC4(v21, (uint64_t)qword_1008647E8);
  sub_10001A11C(v22, (uint64_t)&v20[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_metrics]);
  if (qword_100806178 != -1)
    swift_once(&qword_100806178, sub_1004C6DD0);
  v23 = sub_10000EFC4(v9, (uint64_t)qword_100869540);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24(v18, v23, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DirectionalTextAlignment.none(_:), v12);
  v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v18, 1, 0, 1, 0, v15, 0, 0);

  v26 = (objc_class *)type metadata accessor for BadgeParagraphView(0);
  v53.receiver = v20;
  v53.super_class = v26;
  v27 = objc_msgSendSuper2(&v53, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v31 = (char *)v27;
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v32 = OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel;
  v33 = *(void **)&v31[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel];
  v34 = (void *)objc_opt_self(UIColor);
  v35 = v33;
  v36 = objc_msgSend(v34, "systemGrayColor");
  objc_msgSend(v35, "setTextColor:", v36);

  v37 = v51;
  v24(v51, v23, v9);
  v38 = objc_msgSend(v31, "traitCollection");
  isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v38).super.isa;
  v40 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

  if (v40)
  {
    v41 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v40, 0.0);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
    if (v41)
    {
      objc_msgSend(*(id *)&v31[v32], "setFont:", v41);

    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
  }
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v31[v32]);
  v42 = objc_msgSend(v31, "traitCollection");
  v43 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if ((v43 & 1) != 0)
    v44 = 2;
  else
    v44 = 0;
  UILabel.alignment.setter(v44);
  v45 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v46 = swift_allocObject(v45, 48, 7);
  *(_OWORD *)(v46 + 16) = xmmword_100640720;
  *(_QWORD *)(v46 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v46 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v52[3] = v26;
  v52[0] = v31;
  v47 = v31;
  v48 = UIView.registerForTraitChanges(_:target:action:)(v46, v52, "preferredContentSizeCategoryDidChange");
  swift_unknownObjectRelease(v48);

  swift_bridgeObjectRelease(v46);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v52);
  return v47;
}

id sub_100019474()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  double v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  double v22;
  objc_super v24;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for BadgeParagraphView(0);
  v24.receiver = v0;
  v24.super_class = v6;
  objc_msgSendSuper2(&v24, "layoutSubviews");
  v7 = objc_msgSend(v0, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (id)1)
  {
    v10 = objc_msgSend(v1, "traitCollection");
    v11 = objc_msgSend(v10, "horizontalSizeClass");

    if (v11 == (id)2)
      v9 = type metadata accessor for BadgeParagraphView.Metrics(0);
  }
  static Dimensions.defaultRoundingRule.getter(v9);
  v12 = type metadata accessor for StaticDimension(0);
  v13 = AnyDimension.value(in:rounded:)(v1, v5, v12, &protocol witness table for StaticDimension);
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v6);
  objc_msgSend(v15, "measurementsWithFitting:in:", v1, v16, v17);
  v19 = v13 - v18;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
  CGPoint.rounded(_:)(v5, 0.0, v19);
  v14(v5, v2);
  v20 = objc_msgSend(v1, "traitCollection");
  v21 = objc_msgSend(v20, "layoutDirection");

  v22 = LayoutMarginsAware<>.layoutFrame.getter(v6);
  CGRect.withLayoutDirection(_:relativeTo:)(v21, v22);
  return objc_msgSend(v15, "setFrame:");
}

uint64_t sub_100019708(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  char v5;
  uint64_t result;
  id v7;
  char v8;
  uint64_t v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for BadgeParagraphView(0);
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if (!a1 || (result = UITraitCollection.prefersRightToLeftLayouts.getter(), (result & 1) != (v5 & 1)))
  {
    v7 = objc_msgSend(v2, "traitCollection");
    v8 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v8 & 1) != 0)
      v9 = 2;
    else
      v9 = 0;
    return UILabel.alignment.setter(v9);
  }
  return result;
}

void sub_100019840()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  Class isa;
  id v9;
  id v10;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for FontUseCase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806178 != -1)
    swift_once(&qword_100806178, sub_1004C6DD0);
  v6 = sub_10000EFC4(v2, (uint64_t)qword_100869540);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = objc_msgSend(v1, "traitCollection");
  isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v7).super.isa;
  v9 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

  if (v9)
  {
    v10 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v9, 0.0);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v10)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension18BadgeParagraphView_paragraphLabel], "setFont:", v10);

    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_100019A10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BadgeParagraphView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100019A7C()
{
  return type metadata accessor for BadgeParagraphView(0);
}

uint64_t type metadata accessor for BadgeParagraphView(uint64_t a1)
{
  return sub_100019B28(a1, (uint64_t *)&unk_100807E68, (uint64_t)&nominal type descriptor for BadgeParagraphView);
}

uint64_t sub_100019A98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for BadgeParagraphView.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for BadgeParagraphView.Metrics(uint64_t a1)
{
  return sub_100019B28(a1, qword_100807ED0, (uint64_t)&nominal type descriptor for BadgeParagraphView.Metrics);
}

uint64_t sub_100019B28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t *sub_100019B5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for StaticDimension(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
  }
  return a1;
}

uint64_t sub_100019C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for StaticDimension(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 20), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t sub_100019C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100019D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100019D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100019E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100019E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100019EA4);
}

uint64_t sub_100019EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100019EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019EEC);
}

uint64_t sub_100019EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticDimension(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100019F2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

double sub_100019F98(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  uint64_t v18;

  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BadgeParagraphView.Metrics(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804550 != -1)
    swift_once(&qword_100804550, sub_100018BA8);
  v13 = sub_10000EFC4(v10, (uint64_t)qword_1008647E8);
  sub_10001A11C(v13, (uint64_t)v12);
  v14 = objc_msgSend(a1, "userInterfaceIdiom");
  if (v14 == (id)1)
    v14 = objc_msgSend(a1, "horizontalSizeClass");
  static Dimensions.defaultRoundingRule.getter(v14);
  StaticDimension.value(compatibleWith:rounded:)(a1, v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (a3 >= a2)
    v15 = a2;
  else
    v15 = a3;
  v16 = ceil(v15);
  sub_10001A160((uint64_t)v12);
  return v16;
}

uint64_t sub_10001A11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BadgeParagraphView.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001A160(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BadgeParagraphView.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10001A19C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1003D99E4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_10000DAF8(&qword_100808060);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_10001A304(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001C9B8);
}

void sub_10001A310(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1003D9B30(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for VerticalFlowLayout.Child(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v24 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v24, 1092, 0);
  __break(1u);
}

uint64_t sub_10001A478(uint64_t a1)
{
  return sub_10001ACBC(a1, &type metadata accessor for ArtworkLoaderConfig, &qword_100808058, &qword_100808050, (uint64_t *)sub_10001E9D0);
}

uint64_t sub_10001A49C(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001CBD4);
}

uint64_t sub_10001A4A8(uint64_t a1)
{
  return sub_10001ACBC(a1, &type metadata accessor for Artwork, (unint64_t *)&unk_100808070, &qword_100808068, (uint64_t *)sub_10001EA24);
}

void sub_10001A4CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1003DA694(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_10000DAF8(&qword_100815640);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_10001A62C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1003DAC1C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_10001A784(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1003DAE34(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  sub_10000DAF8(&qword_100815510);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_10001A8E4(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D048);
}

void sub_10001A8F0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1003DAF88(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for Dependency(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

uint64_t sub_10001AA64(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D480);
}

uint64_t sub_10001AA70(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D69C);
}

uint64_t sub_10001AA7C(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D8B8);
}

uint64_t sub_10001AA88(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001DAD4);
}

uint64_t sub_10001AA94(uint64_t a1)
{
  return sub_10001ACBC(a1, (unint64_t *)type metadata accessor for DebugSetting, &qword_100808180, &qword_100808178, (uint64_t *)sub_10001EA24);
}

uint64_t sub_10001AAB8(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001DEF0);
}

uint64_t sub_10001AAC4(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001E10C);
}

uint64_t sub_10001AAD0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001AC8C(uint64_t a1)
{
  return sub_10001AAD0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001E328);
}

uint64_t sub_10001AC98(uint64_t a1)
{
  return sub_10001ACBC(a1, (unint64_t *)type metadata accessor for DebugSection, &qword_1008080E0, &qword_1008080D8, (uint64_t *)sub_10001EA24);
}

uint64_t sub_10001ACBC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_10001CE14(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001AECC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_10086A7E8);
  qword_100864820 = v0;
  unk_100864828 = &protocol witness table for StaticDimension;
  v2 = sub_1000119C0(qword_100864808);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

char *sub_10001AF50(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  double left;
  double bottom;
  double right;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  objc_super v26;

  v9 = OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v14 = &v11[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator] = 0;
  v15 = &v11[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;

  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for AppEventSearchResultContentView();
  v16 = objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v20 = (char *)v16;
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView]);
  v21 = *(void **)&v20[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView];
  objc_msgSend(v20, "addSubview:", v21);
  v22 = *(void **)&v20[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer];
  objc_msgSend(v22, "addTarget:action:", v20, "handleTapWithGestureRecognizer:");
  objc_msgSend(v22, "setDelegate:", v20);
  v23 = v21;
  v24 = v22;
  objc_msgSend(v23, "addGestureRecognizer:", v24);

  return v20;
}

id sub_10001B1A4()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer], "removeTarget:action:", v0, 0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppEventSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10001B2D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  double v10;
  double v11;
  CGFloat v12;
  unint64_t v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  void *v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  double v26;
  void (*v27)(char *, uint64_t);
  id v28;
  double MaxY;
  double Width;
  double v31;
  char *v32;
  double v33;
  void *v34;
  double v35;
  uint64_t v37;
  _QWORD *v38;
  objc_super v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v1 = v0;
  v2 = type metadata accessor for AppEventCardLayout(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for AppEventSearchResultContentView();
  v39.receiver = v1;
  v39.super_class = v9;
  objc_msgSendSuper2(&v39, "layoutSubviews");
  v10 = LayoutMarginsAware<>.layoutFrame.getter(v9);
  v12 = v11;
  v14 = *(double *)&v13;
  v16 = v15;
  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView];
  v18.n128_u64[0] = v13;
  sub_10044F944(v18, v15);
  CGRect.withLayoutDirection(in:relativeTo:)(v1, v10);
  objc_msgSend(v17, "setFrame:");
  if ((MetadataRibbonView.hasContent.getter() & 1) != 0 || (sub_10042489C() & 1) != 0)
  {
    static StandardSearchResultContentViewMetrics.bottomMargin.getter();
    v19 = objc_msgSend(v1, "traitCollection");
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v38 = v4;
    v20 = v6;
    v21 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v22 = swift_allocObject(v21, 40, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v22 + 32) = v19;
    v23 = v19;
    v24 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v22);
    v25 = sub_100010E80((unint64_t *)&qword_100808040, (uint64_t *)&unk_100808020, (uint64_t)&protocol conformance descriptor for <> Conditional<A, B>);
    v26 = dispatch thunk of AnyDimension.rawValue(in:)(v24, v5, v25);

    v27 = *(void (**)(char *, uint64_t))(v20 + 8);
    v4 = v38;
    v27(v8, v5);
  }
  else
  {
    if (qword_100804558 != -1)
      swift_once(&qword_100804558, sub_10001AECC);
    sub_100010F08(qword_100864808, qword_100864820);
    v28 = objc_msgSend(v1, "traitCollection");
    v26 = AnyDimension.value(with:)();

  }
  v40.origin.x = v10;
  v40.origin.y = v12;
  v40.size.width = v14;
  v40.size.height = v16;
  CGRectGetMinX(v40);
  objc_msgSend(v17, "frame");
  MaxY = CGRectGetMaxY(v41);
  v42.origin.x = v10;
  v42.origin.y = v12;
  v42.size.width = v14;
  v42.size.height = v16;
  Width = CGRectGetWidth(v42);
  v43.origin.x = v10;
  v43.origin.y = v12;
  v43.size.width = v14;
  v43.size.height = v16;
  v31 = CGRectGetMaxY(v43);
  v32 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView];
  if (qword_100805B48 != -1)
    swift_once(&qword_100805B48, sub_1003EDD48);
  v33 = v31 - (v26 + MaxY);
  sub_1001EDE64(&unk_1008680E8, v32, Width, v33);
  v34 = *(void **)&v32[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
  sub_10011AA04((uint64_t)v4);
  sub_1001ED7B0(v34, v4, Width, v33);
  sub_100020684((uint64_t)v4);
  objc_msgSend(v1, "bounds");
  CGRect.withLayoutDirection(in:relativeTo:)(v1, v35);
  return objc_msgSend(v32, "setFrame:");
}

uint64_t sub_10001B7F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView)
                 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_mediaContentView);
  sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

void (*sub_10001B8B4(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView);
  v3 = OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
  return sub_10001B914;
}

void sub_10001B914(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10011BCEC();

    v3 = v2;
  }
  else
  {
    sub_10011BCEC();
    v3 = v4;
  }

}

id sub_10001B974(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;

  sub_10044FE7C(a1, a2, a3);
  v4 = *(char **)(v3 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView);
  sub_1003EDA7C();
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView];
  sub_10011B758();
  v6 = &v4[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_initialLongPressLocation];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v4, "addSubview:", v5);
}

uint64_t type metadata accessor for AppEventSearchResultContentView()
{
  return objc_opt_self(_TtC20ProductPageExtension31AppEventSearchResultContentView);
}

_QWORD *sub_10001BA60(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double (*v30)();
  double (**v31)();
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  swift_getObjectType();
  v5 = sub_10000DAF8(&qword_1008081F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppEventSearchResult(0);
  v13 = sub_100020248((unint64_t *)&qword_100808030, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(&v38, v12, v12, v13);
  v15 = v38;
  if (v38)
  {
    v16 = static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
    v17 = PageGrid.columnWidth.getter(v16);
    v18 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView];
    *(double *)&v18[OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = v17;
    v19 = AppEventSearchResult.lockup.getter(objc_msgSend(v18, "setNeedsLayout"));
    v37 = v9;
    v20 = v19;
    v21 = type metadata accessor for ItemLayoutContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
    v22 = type metadata accessor for ObjectGraph(0);
    v36 = v8;
    v23 = v22;
    v24 = swift_dynamicCastClassUnconditional(a2, v22, 0, 0, 0);
    sub_10030F2E4(v20, (uint64_t)v7, v24);
    swift_release(v20);
    v25 = sub_100010F2C((uint64_t)v7, &qword_1008081F0);
    v26 = AppEventSearchResult.appEvent.getter(v25);
    v27 = swift_dynamicCastClassUnconditional(a2, v23, 0, 0, 0);
    v28 = sub_10052A948();
    sub_10057D7EC(v26, v27);
    swift_release(v26);
    swift_unknownObjectRelease(v28);
    v29 = swift_allocObject(&unk_1007369F8, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, v3);
    v30 = (double (*)())swift_allocObject(&unk_100736A20, 40, 7);
    *((_QWORD *)v30 + 2) = v29;
    *((_QWORD *)v30 + 3) = v15;
    *((_QWORD *)v30 + 4) = a2;
    v31 = (double (**)())&v3[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
    v32 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
    v33 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventViewTappedAction
                       + 8];
    *v31 = sub_100020678;
    v31[1] = v30;
    swift_retain(v15);
    swift_retain(a2);
    sub_100018908(v32, v33);
    objc_msgSend(v3, "setNeedsLayout");
    v34 = swift_release(v15);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v37 + 8))(v11, v36, v34);
  }
  return result;
}

double sub_10001BD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  double result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  void *v17;
  id v18;
  __n128 v19;
  _QWORD v21[3];
  uint64_t v22;
  _BYTE v23[24];

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v23, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v13 = AppEventSearchResult.appEvent.getter();
      v14 = AppPromotion.clickAction.getter();
      swift_release(v13);
      if (v14)
      {
        v22 = type metadata accessor for AppEventSearchResultContentView();
        v21[0] = v11;
        v15 = (char *)v11;
        v16 = swift_retain(v14);
        dispatch thunk of Action.clickSender.setter(v21, v16);
        v17 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView];
        v22 = type metadata accessor for AppEventView(0);
        v21[0] = v17;
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
        v18 = v17;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v14, v21, v8, a3);

        swift_release_n(v14, 2);
        v19 = swift_release(v12);
        (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
        sub_100010F2C((uint64_t)v21, &qword_100808F20);
      }
      else
      {

        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

uint64_t sub_10001BEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator, v23, 1, 0);
  v5 = *v4;
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v5);
    v6 = *v4;
  }
  else
  {
    v6 = 0;
  }
  *v4 = 0;
  swift_release(v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock, v22, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100018908(v8, v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView);
  v11 = (_QWORD *)(v10 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v10 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsCalculator, v21, 1, 0);
  v12 = *v11;
  if (*v11)
  {
    swift_retain(*v11);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v12);
    v13 = *v11;
  }
  else
  {
    v13 = 0;
  }
  *v11 = 0;
  swift_release(v13);
  v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v10 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_impressionsUpdateBlock, &v20, 1, 0);
  v15 = *v14;
  v16 = v14[1];
  *v14 = 0;
  v14[1] = 0;
  sub_100018908(v15, v16);
  v17 = type metadata accessor for SearchTagsRibbonView(0);
  v18 = sub_100020248(&qword_1008248A0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v17, v18);
}

uint64_t sub_10001C08C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView)+ OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
}

void sub_10001C0BC(void *a1)
{
  sub_10011BCEC();

}

uint64_t (*sub_10001C104(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10001B8B4(v2);
  return sub_10001C148;
}

id sub_10001C14C()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView)
                           + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView));
}

id sub_10001C170()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView);
}

double sub_10001C184()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView)+ OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppEventView(0);
  v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetHeight(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_10001C20C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_formattedDateView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppEventView(0);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_10001C298()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_10001C2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

void *sub_10001C330(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_10001C378()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100018918(*v1, v1[1]);
  return v2;
}

uint64_t sub_10001C3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100018908(v6, v7);
}

void *sub_10001C42C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_10001C470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_100020248(&qword_1008248A0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006617A0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

uint64_t sub_10001C500(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100640CB4, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10001C534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100640CB4, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_10001C580(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100640CB4, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001C148;
}

id sub_10001C5E8()
{
  void *v0;

  return objc_msgSend(v0, "frame");
}

uint64_t sub_10001C5F8(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100807F68, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_100640B30);
}

uint64_t sub_10001C624(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100807F70, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_100640B60);
}

uint64_t sub_10001C650(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100807F78, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_100640B7C);
}

uint64_t sub_10001C67C()
{
  return sub_100020248(&qword_100807F80, 255, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
}

uint64_t sub_10001C6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100020248(&qword_100807F88, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_100640BDC);
  result = sub_100020248((unint64_t *)&unk_100807F90, v3, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_100640C0C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10001C70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  BOOL v19;
  uint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unint64_t v30;
  _QWORD v31[5];

  v4 = type metadata accessor for MetadataRibbonItemViewType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Feature(0);
  v31[3] = v8;
  v31[4] = sub_100020248((unint64_t *)&qword_10080CED0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v9 = sub_1000119C0(v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.search_tags(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v31);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v31);
  if ((v8 & 1) == 0)
    a1 = a2;
  if (a1)
  {
    v10 = type metadata accessor for MetadataRibbonItem(0);
    if ((Array.isNotEmpty.getter(a1, v10) & 1) != 0)
    {
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)a1 >> 62)
        goto LABEL_25;
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      while (v12)
      {
        v30 = a1 & 0xC000000000000001;
        v13 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
        v29 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
        v14 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
        v28 = enum case for MetadataRibbonItemViewType.starRating(_:);
        v26 = enum case for MetadataRibbonItemViewType.divider(_:);
        v27 = enum case for MetadataRibbonItemViewType.textLabel(_:);
        v15 = 4;
        v25 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
        while (1)
        {
          v16 = v15 - 4;
          if (!v30)
            break;
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1);
          v19 = __OFADD__(v16, 1);
          v20 = v15 - 3;
          if (v19)
            goto LABEL_24;
LABEL_13:
          MetadataRibbonItem.viewContainerType.getter(v18);
          v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
          if (v21 == v13 || v21 == v29 || v21 == v14 || v21 == v28 || v21 == v27 || v21 == v26 || v21 == v25)
          {
            swift_bridgeObjectRelease(a1);
            swift_release(v17);
            return 1;
          }
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          swift_release(v17);
          ++v15;
          if (v20 == v12)
            goto LABEL_21;
        }
        v17 = *(_QWORD *)(a1 + 8 * v15);
        v18 = swift_retain(v17);
        v19 = __OFADD__(v16, 1);
        v20 = v15 - 3;
        if (!v19)
          goto LABEL_13;
LABEL_24:
        __break(1u);
LABEL_25:
        if (a1 >= 0)
          v23 = v11;
        else
          v23 = a1;
        swift_bridgeObjectRetain(a1);
        v12 = _CocoaArrayWrapper.endIndex.getter(v23);
      }
LABEL_21:
      swift_bridgeObjectRelease(a1);
    }
  }
  return 0;
}

uint64_t sub_10001C9B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_100808088, &qword_100808080, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100808080);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001CBD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_1008080D0, (uint64_t *)&unk_1008080C0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8((uint64_t *)&unk_1008080C0);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&unk_100813250, NSCollectionLayoutSupplementaryItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001CDF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001CE14(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for Artwork, (unint64_t *)&unk_100808070, &qword_100808068, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10001EA24);
}

uint64_t sub_10001CE14(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100010E80(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10000DAF8(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D024(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001CE14(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for HeroCarouselScrollView.PageViewTracker, &qword_100808170, &qword_100808168, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10001EA24);
}

uint64_t sub_10001D048(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_1008080B8, &qword_1008080B0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_1008080B0);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D264(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_1008081B0, &qword_1008081A8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_1008081A8);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D480(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_100808110, &qword_100808108, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100808108);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, &qword_100808100, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D69C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_1008081C8, &qword_1008081B8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_1008081B8);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, &qword_1008081C0, NSCollectionLayoutGroup_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D8B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_100808198, &qword_100808188, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100808188);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808190, UIKeyCommand_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001DAD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_100808160, &qword_100815510, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100815510);
          v13 = sub_10001EA78(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CGColor(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001DCE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80((unint64_t *)&unk_1008080A0, &qword_100808098, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100808098);
          v13 = sub_10001EACC(v19, i, a3);
          v15 = *v14;
          v16 = swift_unknownObjectRetain(*v14);
          ((void (*)(uint64_t **, _QWORD, __n128))v13)(v19, 0, v16);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000DAF8(&qword_100808090);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001DEF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80((unint64_t *)&unk_1008081E0, &qword_1008081D8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_1008081D8);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, &qword_1008081D0, AMSNotificationSettingsItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001E10C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_100808158, &qword_100808150, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100808150);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_10080D920, UICollectionViewLayoutAttributes_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001E328(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80((unint64_t *)&unk_100808140, (uint64_t *)&unk_100808130, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8((uint64_t *)&unk_100808130);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_10081A480, UILabel_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001E544(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_100808128, &qword_100808120, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_100808120);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808118, NSValue_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001E760(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010E80(&qword_1008080F8, &qword_1008080F0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DAF8(&qword_1008080F0);
          v13 = sub_10001E97C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100018B6C(0, &qword_1008080E8, CALayer_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t (*sub_10001E97C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10001EB4C(v6, a2, a3);
  return sub_10001C148;
}

uint64_t (*sub_10001E9D0(uint64_t **a1, unint64_t a2, uint64_t a3))()
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10001EBB8(v6, a2, a3);
  return sub_10001C148;
}

uint64_t (*sub_10001EA24(uint64_t **a1, unint64_t a2, uint64_t a3))()
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10001EC2C(v6, a2, a3);
  return sub_10001C148;
}

uint64_t (*sub_10001EA78(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10001EC98(v6, a2, a3);
  return sub_10001C148;
}

uint64_t (*sub_10001EACC(uint64_t **a1, unint64_t a2, uint64_t a3))()
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10001ED0C(v6, a2, a3);
  return sub_10001C148;
}

void sub_10001EB20(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_10001EB4C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s20ProductPageExtension16SearchLinkLayoutV7MetricsVwxx;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10001EBB8(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for RotatedArtworkLoaderConfig;
  }
  __break(1u);
  return result;
}

uint64_t destroy for RotatedArtworkLoaderConfig(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *sub_10001EC2C(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)j__s20ProductPageExtension26RotatedArtworkLoaderConfigVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10001EC98(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for SearchLinkLayout.Metrics;
  }
  __break(1u);
  return result;
}

void destroy for SearchLinkLayout.Metrics(id *a1)
{

}

uint64_t *sub_10001ED0C(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for TodayCardOverlayReusePool.Scrap;
  }
  __break(1u);
  return result;
}

uint64_t destroy for TodayCardOverlayReusePool.Scrap(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

double *sub_10001ED80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  double **v4;
  unint64_t v5;
  uint64_t v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  double *result;
  int64_t v13;
  uint64_t v14;
  double *v15;
  char *v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *v4;
  v8 = *((_QWORD *)*v4 + 2);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (double *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)result || v9 > *((_QWORD *)v7 + 3) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v13 = v8 + v6;
      else
        v13 = v8;
      result = sub_1003DB5D0(result, v13, 1, v7);
      v7 = result;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v14 = *((_QWORD *)v7 + 2);
  if ((*((_QWORD *)v7 + 3) >> 1) - v14 < v6)
    goto LABEL_25;
  if (v6 < 0)
  {
LABEL_27:
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_28;
  }
  v15 = &v7[2 * v14 + 4];
  v16 = (char *)(a2 + 16 * a3);
  if (v16 >= (char *)&v15[2 * v6] || v15 >= (double *)&v16[16 * v6])
  {
    result = (double *)memcpy(v15, v16, 16 * v6);
    if (!v6)
    {
LABEL_22:
      *v4 = v7;
      return result;
    }
    v18 = *((_QWORD *)v7 + 2);
    v19 = __OFADD__(v18, v6);
    v20 = v18 + v6;
    if (!v19)
    {
      *((_QWORD *)v7 + 2) = v20;
      goto LABEL_22;
    }
    goto LABEL_26;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_10001EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *result;
  __n128 v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(_QWORD, _QWORD);
  void (*v29)(_QWORD, _QWORD);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  __n128 v44;
  void *v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  char *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90[3];
  uint64_t v91;
  uint64_t v92;

  v4 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v87 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v86 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100825010);
  __chkstk_darwin(v6);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PageGrid(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AppEventSearchResult(0);
  v17 = sub_100020248((unint64_t *)&qword_100808030, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(v90, v16, v16, v17);
  v20 = v90[0];
  if (v90[0])
  {
    v78 = v4;
    ItemLayoutContext.parentShelfLayoutContext.getter(v19);
    if (qword_1008059F8 != -1)
      swift_once(&qword_1008059F8, sub_1003A0ECC);
    v83 = v13;
    v84 = v12;
    v88 = a1;
    v21 = qword_100867D20;
    swift_bridgeObjectRetain(qword_100867D20);
    PageGrid.init(from:breakpointOverrides:)(v11, v21);
    v22 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v24 = v23;
    v26 = AppEventSearchResult.lockup.getter(v25);
    v27 = swift_retain(v26);
    v80 = Lockup.title.getter(v27);
    v29 = v28;
    swift_release(v26);
    v30 = swift_retain(v26);
    v79 = Lockup.subtitle.getter(v30);
    v32 = v31;
    swift_release(v26);
    v33 = swift_retain(v26);
    v34 = Lockup.searchAd.getter(v33);
    v35 = swift_release(v26);
    v85 = a2;
    v81 = v20;
    v82 = v15;
    if (v34)
    {
      v36 = SearchAd.advertisingText.getter(v35);
      v38 = v37;
      v35 = swift_release(v34);
    }
    else
    {
      v36 = 0;
      v38 = 0;
    }
    v39 = MixedMediaLockup.metadataRibbonItems.getter(v35);
    v40 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
    v42 = MixedMediaLockup.searchTagRibbonItems.getter(v41);
    KeyPath = swift_getKeyPath(&unk_100640D28);
    ItemLayoutContext.subscript.getter(v90);
    v44 = swift_release(KeyPath);
    v45 = v90[0];
    v44.n128_u64[0] = v22;
    sub_100452B44(v80, v29, v79, v32, v36, v38, v39, (uint64_t)v8, v44, v24, v42, v90[0]);
    v47 = v46;

    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v29);
    sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_100825010);
    swift_retain(v26);
    v49 = MixedMediaLockup.searchTagRibbonItems.getter(v48);
    v51 = MixedMediaLockup.metadataRibbonItems.getter(v50);
    LOBYTE(v39) = sub_10001C70C(v49, v51);
    swift_release(v26);
    swift_bridgeObjectRelease(v51);
    v52 = swift_bridgeObjectRelease(v49);
    if ((v39 & 1) != 0)
    {
      v53 = v86;
      static StandardSearchResultContentViewMetrics.bottomMargin.getter(v52);
      v54 = swift_getKeyPath(&unk_100640D28);
      ItemLayoutContext.subscript.getter(v90);
      swift_release(v54);
      v55 = v90[0];
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v56 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v57 = swift_allocObject(v56, 40, 7);
      *(_OWORD *)(v57 + 16) = xmmword_100640AE0;
      *(_QWORD *)(v57 + 32) = v55;
      v58 = v55;
      v59 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v57);
      v60 = sub_100010E80((unint64_t *)&qword_100808040, (uint64_t *)&unk_100808020, (uint64_t)&protocol conformance descriptor for <> Conditional<A, B>);
      v61 = v78;
      v62 = dispatch thunk of AnyDimension.rawValue(in:)(v59, v78, v60);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v61);
      v64 = v81;
      v63 = v82;
    }
    else
    {
      v64 = v81;
      v63 = v82;
      if (qword_100804558 != -1)
        swift_once(&qword_100804558, sub_10001AECC);
      sub_10000EF80((uint64_t)qword_100864808, (uint64_t)v90);
      v65 = v91;
      v66 = v92;
      sub_100010F08(v90, v91);
      v67 = swift_getKeyPath(&unk_100640D28);
      ItemLayoutContext.subscript.getter(&v89);
      v68 = swift_release(v67);
      v69 = v89;
      v62 = AnyDimension.value(with:)(v89, v65, v66, v68);

      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v90);
    }
    v70 = type metadata accessor for AppEventView(0);
    v71 = AppEventSearchResult.appEvent.getter(v70);
    v72 = sub_10052A948();
    ObjectType = swift_getObjectType();
    v74 = type metadata accessor for ObjectGraph(0);
    v75 = swift_dynamicCastClassUnconditional(v85, v74, 0, 0, 0);
    v76.n128_u64[0] = v22;
    sub_10057D510(v71, v72, v75, v76, v24 - (v47 + v62), v70, ObjectType);
    swift_release(v26);
    swift_release(v71);
    swift_unknownObjectRelease(v72);
    v77 = swift_release(v64);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v83 + 8))(v63, v84, v77);
  }
  return result;
}

void sub_10001F4E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;

  v1 = OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsCalculator] = 0;
  v5 = &v0[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/AppEventSearchResultContentView.swift", 58, 2, 45, 0);
  __break(1u);
}

uint64_t sub_10001F5FC(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  BOOL v19;
  uint64_t v20;
  _BOOL8 v21;
  CGPoint v23;
  CGPoint v24;
  CGPoint v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v2 = *(char **)&v1[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView];
  v3 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView]
                + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView);
  if (!v3)
    return 0;
  v5 = v3;
  objc_msgSend(a1, "locationInView:", v1);
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  objc_msgSend(a1, "locationInView:", v2);
  v12 = v11;
  v14 = v13;
  objc_msgSend(a1, "locationInView:", v5);
  v16 = v15;
  v18 = v17;
  objc_msgSend(v2, "bounds");
  v23.x = v12;
  v23.y = v14;
  if (CGRectContainsPoint(v26, v23)
    && (objc_msgSend(v5, "bounds"), v24.x = v16, v24.y = v18, !CGRectContainsPoint(v27, v24))
    && *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventViewTappedAction])
  {
    objc_msgSend(v1, "bounds");
    v25.x = v7;
    v25.y = v9;
    v19 = CGRectContainsPoint(v28, v25);

    if (v19)
    {
      if (!v10)
        return 1;
      v20 = objc_opt_self(UIControl);
      v21 = swift_dynamicCastObjCClass(v10, v20) == 0;
    }
    else
    {
      v21 = 0;
    }
    v5 = v10;
  }
  else
  {

    v21 = 0;
  }

  return v21;
}

void sub_10001F7A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::Bool v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  Swift::Bool v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Swift::Bool v22;
  char *v23;
  UIImage_optional v24;
  UIImage_optional v25;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView);
  v4 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v5 = *(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v24.value.super.isa = 0;
  v24.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v24, v6);

  v7 = *(void **)(v3 + v4);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v10 = v7;
  v11 = a1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1, v8, v9);

  v13 = *(char **)(v3 + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC20ProductPageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
    v23 = v13;
    swift_bridgeObjectRetain(v14);
    v17 = 32;
    do
    {
      v18 = *(void **)(v14 + v17);
      v19 = swift_dynamicCastClass(v18, v16);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC20ProductPageExtension31MetadataRibbonIconWithLabelView_artworkView);
        v21 = v18;
        v25.value.super.isa = 0;
        v25.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v25, v22);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v20, 1, v8, v9);

      }
      v17 += 16;
      --v15;
    }
    while (v15);

    swift_bridgeObjectRelease(v14);
  }
  sub_10045BAFC(v11, 1, v12);
}

uint64_t sub_10001F964(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t Strong;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[40];
  _QWORD v89[5];

  v8 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v86 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.Style(0, v11);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork.Crop(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AppEvent(0, v18);
  v89[3] = v21;
  v89[4] = &protocol witness table for AppPromotion;
  v89[0] = a1;
  sub_10000EF80((uint64_t)v89, (uint64_t)v88);
  swift_retain(a1);
  v22 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  if (swift_dynamicCast(&v87, v88, v22, v21, 6))
  {
    v83 = v16;
    v23 = v87;
    if (qword_100804A48 != -1)
      swift_once(&qword_100804A48, sub_100118934);
    v82 = v8;
    v24 = type metadata accessor for AppEventCardLayout.Metrics(0);
    sub_10000EFC4(v24, (uint64_t)qword_1008652C8);
    v25 = AspectRatio.height(fromWidth:)(a4);
    v27 = AppEvent.moduleVideo.getter(v26);
    v84 = v23;
    v85 = a2;
    if (v27)
    {
      v28 = v27;
      v29 = Video.preview.getter(v27);
      swift_release(v28);
    }
    else
    {
      v29 = AppEvent.moduleArtwork.getter();
      if (!v29)
        goto LABEL_13;
    }
    v30 = swift_retain(v29);
    v31 = Artwork.crop.getter(v30);
    v32 = Artwork.Crop.preferredContentMode.getter(v31);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v83);
    v33 = Artwork.config(_:mode:prefersLayeredImage:)(v32, 0, a4, v25);
    v34 = *(void **)(a3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_artworkView);
    Artwork.style.getter(v33);
    v35 = ArtworkView.style.setter(v15);
    v36 = objc_msgSend(v34, "setContentMode:", Artwork.contentMode.getter(v35));
    v37 = ArtworkLoaderConfig.size.getter(v36);
    v39 = ArtworkView.imageSize.setter(v37, v38);
    v40 = Artwork.backgroundColor.getter(v39);
    if (!v40)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v40 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v40);
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_videoView);
    if (Strong)
    {
      v42 = (void *)Strong;
      v43 = type metadata accessor for VideoView(0);
      v44 = sub_100020248((unint64_t *)&unk_100807FB0, 255, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2, 1, v42, v43, v44);

    }
    else
    {
      v45 = type metadata accessor for ArtworkView(0);
      v46 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2, 1, v34, v45, v46);
    }
    v23 = v84;
    swift_release(v29);
    swift_release(v33);
LABEL_13:
    v47 = *(void **)(a3 + OBJC_IVAR____TtC20ProductPageExtension16AppEventCardView_lockupView);
    if (v47)
    {
      v48 = v47;
      v49 = AppEvent.lockup.getter(v48);
      v50 = dispatch thunk of Lockup.artwork.getter(v49);
      swift_release(v49);
      if (v50)
      {
        v51 = &v48[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics];
        v52 = swift_beginAccess(&v48[OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics], v88, 0, 0);
        v53 = v86;
        v54 = v82;
        v55 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v86 + 16))(v10, v51, v82, v52);
        v56 = SmallLockupLayout.Metrics.artworkSize.getter(v55);
        v58 = v57;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v54);
        v60 = Artwork.crop.getter(v59);
        v61 = Artwork.Crop.preferredContentMode.getter(v60);
        v62 = v83;
        v86 = *(_QWORD *)(v17 + 8);
        ((void (*)(char *, uint64_t))v86)(v20, v83);
        v63 = Artwork.config(_:mode:prefersLayeredImage:)(v61, 0, v56, v58);
        v64 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
        v65 = *(id *)&v48[OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView];
        Artwork.style.getter(v65);
        v66 = ArtworkView.style.setter(v15);
        v67 = objc_msgSend(v65, "setContentMode:", Artwork.contentMode.getter(v66));
        v68 = ArtworkLoaderConfig.size.getter(v67);
        v70 = ArtworkView.imageSize.setter(v68, v69);
        v71 = Artwork.backgroundColor.getter(v70);
        if (!v71)
        {
          sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
          v71 = static UIColor.placeholderBackground.getter();
        }
        ArtworkView.backgroundColor.setter(v71);

        v72 = *(id *)&v48[v64];
        v74 = Artwork.crop.getter(v73);
        v75 = Artwork.Crop.preferredContentMode.getter(v74);
        ((void (*)(char *, uint64_t))v86)(v20, v62);
        objc_msgSend(v72, "setContentMode:", v75);

        v76 = *(void **)&v48[v64];
        v77 = type metadata accessor for ArtworkView(0);
        v78 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        v79 = v76;
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v63, 2, 1, v79, v77, v78);

        swift_release(v50);
        swift_release(v63);

        v80 = v84;
        goto LABEL_20;
      }

    }
    v80 = v23;
LABEL_20:
    swift_release(v80);
    swift_release(v29);
  }
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v89);
}

void sub_10001FF44(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[40];

  v6 = v5;
  v10 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EF80(a1, (uint64_t)v46);
  v13 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v14 = type metadata accessor for AppEventSearchResult(0);
  if (swift_dynamicCast(&v45, v46, v13, v14, 6))
  {
    v15 = v45;
    sub_10001F7A8(a2);
    v17 = AppEventSearchResult.lockup.getter(v16);
    v19 = Lockup.icon.getter(v18);
    swift_release(v17);
    if (v19)
    {
      v20 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
      v44 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView);
      v21 = qword_100804E70;
      v22 = *(id *)(v44 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
      if (v21 != -1)
        swift_once(&qword_100804E70, sub_10020D688);
      v23 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v24 = sub_10000EFC4(v23, (uint64_t)qword_100865F50);
      v25 = SmallLockupLayout.Metrics.artworkSize.getter(v24);
      v27 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v22, "contentMode"), 0, v25, v26);
      Artwork.style.getter(v27);
      v28 = ArtworkView.style.setter(v12);
      v29 = objc_msgSend(v22, "setContentMode:", Artwork.contentMode.getter(v28));
      v30 = ArtworkLoaderConfig.size.getter(v29);
      v32 = ArtworkView.imageSize.setter(v30, v31);
      v33 = Artwork.backgroundColor.getter(v32);
      if (!v33)
      {
        sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
        v33 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v33);
      v34 = *(void **)(v44 + v20);
      v35 = type metadata accessor for ArtworkView(0);
      v36 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v37 = v34;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v27, 2, 1, v37, v35, v36);
      swift_release(v19);

      swift_release(v27);
    }
    v38 = objc_retain(*(id *)(*(_QWORD *)(v6
                                        + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_lockupView)
                            + OBJC_IVAR____TtC20ProductPageExtension21SmallSearchLockupView_metadataRibbonView));
    sub_10044EF1C(v39, a1, a2);

    v40 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension31AppEventSearchResultContentView_appEventView);
    v42 = AppEventSearchResult.appEvent.getter(v41);
    sub_10001F964(v42, a2, *(_QWORD *)(v40 + OBJC_IVAR____TtC20ProductPageExtension12AppEventView_appEventCardView), a5);
    swift_release(v42);
    swift_release(v15);
  }
}

uint64_t sub_100020248(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_100020288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  void *rawValue;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t KeyPath;
  __n128 v32;
  void *v33;
  _QWORD *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  void *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  Swift::OpaquePointer v50;

  v5 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppEventSearchResult(0);
  v13 = sub_100020248((unint64_t *)&qword_100808030, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(&v50, v12, v12, v13);
  rawValue = v50._rawValue;
  if (v50._rawValue)
  {
    v47 = a3;
    v48 = v8;
    v50._rawValue = _swiftEmptyArrayStorage;
    v16 = AppEventSearchResult.lockup.getter(result);
    v18 = Lockup.icon.getter(v17);
    swift_release(v16);
    if (v18)
    {
      if (qword_100804E70 != -1)
        swift_once(&qword_100804E70, sub_10020D688);
      v20 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v21 = sub_10000EFC4(v20, (uint64_t)qword_100865F50);
      v22 = SmallLockupLayout.Metrics.artworkSize.getter(v21);
      v24 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v22, v23);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v26 = *(_QWORD *)(((unint64_t)v50._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      v25 = *(_QWORD *)(((unint64_t)v50._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v26 >= v25 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
      v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
      specialized Array._endMutation()(v27);
      swift_release(v18);
    }
    v28 = AppEventSearchResult.lockup.getter(v19);
    v30 = MixedMediaLockup.metadataRibbonItems.getter(v29);
    swift_release(v28);
    KeyPath = swift_getKeyPath(&unk_100640D28);
    ItemLayoutContext.subscript.getter(&v49);
    v32 = swift_release(KeyPath);
    v33 = v49;
    v34 = sub_10044F2C4(v30, (uint64_t)v49, v32);

    swift_bridgeObjectRelease(v30);
    sub_10001ACBC((uint64_t)v34, &type metadata accessor for ArtworkLoaderConfig, &qword_100808058, &qword_100808050, (uint64_t *)sub_10001E9D0);
    ItemLayoutContext.parentShelfLayoutContext.getter(v35);
    if (qword_1008059F8 != -1)
      swift_once(&qword_1008059F8, sub_1003A0ECC);
    v36 = qword_100867D20;
    swift_bridgeObjectRetain(qword_100867D20);
    v37 = PageGrid.init(from:breakpointOverrides:)(v7, v36);
    v38 = PageGrid.columnWidth.getter(v37);
    sub_10001EF14(a1, v47);
    v40 = v39;
    v41 = type metadata accessor for AppEventView(0);
    v42 = AppEventSearchResult.appEvent.getter(v41);
    v43 = sub_10052A948();
    swift_getObjectType();
    v44 = sub_10057D64C(v42, v43, v38, v40);
    swift_release(v42);
    swift_unknownObjectRelease(v43);
    sub_10001ACBC(v44, &type metadata accessor for ArtworkLoaderConfig, &qword_100808058, &qword_100808050, (uint64_t *)sub_10001E9D0);
    v45 = v50._rawValue;
    ArtworkLoader.prefetchArtwork(using:)(v50);
    swift_release(rawValue);
    v46 = swift_bridgeObjectRelease(v45);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v48, v46);
  }
  return result;
}

uint64_t sub_100020620()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100020644()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100020678()
{
  uint64_t *v0;

  return sub_10001BD4C(v0[2], v0[3], v0[4]);
}

uint64_t sub_100020684(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppEventCardLayout(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000206D0()
{
  return sub_10000E720(&qword_1008081F8, type metadata accessor for BrickCollectionViewCell, (uint64_t)&unk_100640D58);
}

double sub_1000206FC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v7;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v2);
  v5 = sub_100020790();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

double sub_100020790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  __n128 v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v30;

  v0 = type metadata accessor for Shelf.PresentationHints(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - v5;
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v11);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v14 = v13;
  v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = ShelfLayoutContext.shelfPresentationHints.getter(v15);
  static Shelf.PresentationHints.showSupplementaryText.getter(v16);
  v17 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v18 = dispatch thunk of SetAlgebra.isSuperset(of:)(v3, v0, v17);
  v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v3, v0);
  v19(v6, v0);
  if ((v18 & 1) != 0)
  {
    if (qword_1008057B8 != -1)
      swift_once(&qword_1008057B8, sub_10034B088);
    v21 = type metadata accessor for BrickLayout.Metrics(0, v20);
    v22 = qword_100867988;
  }
  else
  {
    if (qword_1008057C0 != -1)
      swift_once(&qword_1008057C0, sub_10034B31C);
    v21 = type metadata accessor for BrickLayout.Metrics(0, v20);
    v22 = qword_1008679A0;
  }
  v23 = sub_10000EFC4(v21, (uint64_t)v22);
  v24 = ShelfLayoutContext.traitEnvironment.getter();
  v25 = type metadata accessor for BrickLayout(0);
  v26 = sub_10000E720(&qword_100808200, (uint64_t (*)(uint64_t))&type metadata accessor for BrickLayout, (uint64_t)&protocol conformance descriptor for BrickLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v23, v24, v25, v26, v12, v14);
  v28 = v27;
  swift_unknownObjectRelease(v24);
  return v28;
}

uint64_t sub_1000209DC(uint64_t a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  double v26;
  unint64_t v27;
  void (*v33)(_QWORD);
  double left;
  double bottom;
  double right;
  __int128 v37;
  __int128 v39;
  __int128 v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  __int128 v48;
  double v49;
  double v50;
  __int128 v51;
  int64x2_t v53;
  double v54;
  double top;
  uint64_t v56;
  void (*v57)(int64x2_t *, _QWORD, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;

  v58 = a1;
  v1 = sub_10000DAF8(&qword_100808208);
  v2 = __chkstk_darwin(v1);
  v4 = &v53.i8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = type metadata accessor for PageGrid.HorizontalMargins(0, v2);
  v5 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v7 = (int64x2_t *)((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v8);
  v10 = &v53.i8[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v53.i8[-v12];
  __chkstk_darwin(v14);
  v16 = &v53.i8[-v15];
  __chkstk_darwin(v17);
  v19 = &v53.i8[-v18];
  v20 = sub_10000DAF8(&qword_100808218);
  v21 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v59 = v22;
  v24 = swift_allocObject(v20, ((v23 + 32) & ~v23) + 6 * v22, v23 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100640730;
  v56 = v24;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v25 = xmmword_100868E30;
  v26 = (double)v58;
  v61 = (double)v58;
  v27 = sub_10002128C();
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 15.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v33 = *(void (**)(_QWORD))(v5 + 104);
  LODWORD(v58) = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v57 = (void (*)(int64x2_t *, _QWORD, uint64_t))v33;
  v33(v7);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v61) = 0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for Bool, &protocol witness table for Bool);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v37 = xmmword_100868E40;
  v61 = v26;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 15.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  __asm { FMOV            V0.2D, #20.0 }
  *v7 = _Q0;
  v57(v7, v58, v60);
  LOBYTE(v61) = 0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for Bool, &protocol witness table for Bool);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v37, *((double *)&v37 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v39 = xmmword_100868E50;
  v61 = v26;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 20.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v53 = vdupq_n_s64(0x4041000000000000uLL);
  *v7 = v53;
  v57(v7, v58, v60);
  LOBYTE(v61) = 0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for Bool, &protocol witness table for Bool);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v54 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v39, *((double *)&v39 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v40 = xmmword_100868E90;
  v61 = v26;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 20.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  *v7 = v53;
  v57(v7, v58, v60);
  v41 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  LOBYTE(v61) = 0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for Bool, &protocol witness table for Bool);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v40, *((double *)&v40 + 1), v41, v43, v45, v47);
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v48 = xmmword_100868EA0;
  v61 = 3.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 24.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v53 = vdupq_n_s64(0x404A000000000000uLL);
  *v7 = v53;
  v57(v7, v58, v60);
  LOBYTE(v61) = 0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for Bool, &protocol witness table for Bool);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v50 = v54;
  v49 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v48, *((double *)&v48 + 1), top, v54, bottom, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v51 = xmmword_100868EB0;
  v61 = 3.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 24.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  *v7 = v53;
  v57(v7, v58, v60);
  LOBYTE(v61) = 0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for Bool, &protocol witness table for Bool);
  v61 = 0.0;
  PageGrid.DirectionalValue.init(_:)(&v61, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v51, *((double *)&v51 + 1), v49, v50, bottom, right);
  return v56;
}

unint64_t sub_10002128C()
{
  unint64_t result;

  result = qword_100808220;
  if (!qword_100808220)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100808220);
  }
  return result;
}

uint64_t sub_1000212D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v7;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806950 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v4 = sub_10000EFC4(v0, (uint64_t)qword_10086AAF0);
  v5.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  qword_100864848 = type metadata accessor for OSLogger(0, v5);
  unk_100864850 = &protocol witness table for OSLogger;
  sub_1000119C0(qword_100864830);
  return OSLogger.init(subsystem:category:)(v3, 0xD00000000000001BLL, 0x8000000100640DE0);
}

char *sub_1000213C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  double v44;
  Class isa;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  NSDictionary v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  unint64_t v57;
  char *v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t v76;
  objc_super v77;
  id v78;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_dynamicDelegate] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridPresenter] = 0;
  v13 = &v4[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph] = a4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_requestInfo] = a1;
  v14 = &v4[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_referrer];
  *(_QWORD *)v14 = a2;
  *((_QWORD *)v14 + 1) = a3;
  v15 = type metadata accessor for ArtworkLoader(0);
  v16 = v4;
  swift_retain(a4);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v78, v15, v15);
  *(_QWORD *)&v16[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_artworkLoader] = v78;

  MarketingItemRequestInfo.serviceType.getter();
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  v20 = swift_bridgeObjectRelease(v18);
  MarketingItemRequestInfo.placement.getter(v20);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = type metadata accessor for ASKBagContract(0);
  v25 = BaseObjectGraph.inject<A>(_:)(&v78, v24, v24);
  v26 = ASKBagContract.amsBag.getter(v25);
  *(_QWORD *)&v27 = swift_release().n128_u64[0];
  v77.receiver = v16;
  v77.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v77, "initWithServiceType:placement:bag:", v19, v23, v26, v27);
  swift_unknownObjectRelease();

  v29 = v28;
  MarketingItemRequestInfo.seed.getter();
  v30 = type metadata accessor for AdamId(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v30);
  if ((_DWORD)v32 == 1)
  {
    sub_100010F2C((uint64_t)v12, &qword_100808390);
    v34 = 0;
  }
  else
  {
    AdamId.stringValue.getter(v32);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
    v34 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v36).n128_u64[0];
  }
  objc_msgSend(v29, "setSeed:", v34, v33);

  v37 = v29;
  MarketingItemRequestInfo.offerHints.getter();
  if (v38)
  {
    v40 = v38;
    v41 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v39 = swift_bridgeObjectRelease(v40).n128_u64[0];
  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v37, "setOfferHints:", v41, v39);

  v42 = v37;
  v43 = MarketingItemRequestInfo.clientOptions.getter();
  isa = (Class)v43;
  if (v43)
  {
    sub_10006A1FC(v43);
    v47 = v46;
    swift_bridgeObjectRelease(isa);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v47).n128_u64[0];
  }
  objc_msgSend(v42, "setClientOptions:", isa, v44);

  v48 = v42;
  v49 = MarketingItemRequestInfo.metricsOverlay.getter();
  if (v49)
  {
    v51 = v49;
    v52.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v50 = swift_bridgeObjectRelease(v51).n128_u64[0];
  }
  else
  {
    v52.super.isa = 0;
  }
  objc_msgSend(v48, "setMetricsOverlay:", v52.super.isa, v50);

  objc_msgSend(v48, "setAnonymousMetrics:", 1);
  v53 = v48;
  static ASKBootstrap.tokenServiceClient.getter();
  v55 = v54;
  v56 = String._bridgeToObjectiveC()();
  objc_msgSend(v53, "setMediaClientIdentifier:", v56, swift_bridgeObjectRelease(v55).n128_f64[0]);

  v57 = sub_100022D1C();
  v58 = (char *)v53;
  BaseObjectGraph.inject<A>(_:)(&v78, v57, v57);
  v59 = v78;
  v60 = objc_msgSend(v78, "ams_activeiTunesAccount");

  objc_msgSend(v58, "setAccount:", v60);
  v61 = type metadata accessor for ArcadeSubscriptionManager(0);
  BaseObjectGraph.inject<A>(_:)(&v78, v61, v61);
  v62 = v78;
  v63 = swift_allocObject(&unk_100736BE0, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v58);
  v64 = swift_allocObject(&unk_100736BE0, 24, 7);
  swift_unknownObjectWeakInit(v64 + 16, v58);
  v65 = swift_allocObject(&unk_100736BE0, 24, 7);
  swift_unknownObjectWeakInit(v65 + 16, v58);
  v66 = swift_allocObject(&unk_100736BE0, 24, 7);
  swift_unknownObjectWeakInit(v66 + 16, v58);
  v67 = swift_allocObject(&unk_100736BE0, 24, 7);
  swift_unknownObjectWeakInit(v67 + 16, v58);
  v68 = swift_allocObject(&unk_100736BE0, 24, 7);
  v69 = swift_unknownObjectWeakInit(v68 + 16, v58);
  v70 = objc_allocWithZone((Class)type metadata accessor for DynamicViewControllerDelegate(0, v69));
  v71 = DynamicViewControllerDelegate.init(subscriptionManager:purchaseSuccessHandler:purchaseFailureHandler:carrierLinkSuccessHandler:carrierLinkFailureHandler:didDismissHandler:contentViewConstructor:)(v62, sub_100022D7C, v63, sub_100022D9C, v64, sub_100022DBC, v65, sub_100022DDC, v66, sub_100022DFC, v67, sub_100022E1C, v68);
  v72 = OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_dynamicDelegate;
  *(_QWORD *)&v58[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_dynamicDelegate] = v71;
  objc_msgSend(v58, "setDelegate:", *(_QWORD *)&v58[v72], swift_unknownObjectRelease().n128_f64[0]);
  type metadata accessor for AutoPlayVideoSettingsManager(0);
  v73 = v58;
  v74 = (void *)static AutoPlayVideoSettingsManager.shared.getter();
  objc_msgSend(v73, "setMediaContentDelegate:", v74);

  swift_release();
  swift_release();
  return v73;
}

void sub_1000219E0(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    a2();

  }
}

id sub_100021A34(uint64_t a1, uint64_t a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v11;
  uint64_t Strong;
  __n128 v13;
  void *v14;
  id v15;
  _BYTE v17[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (!Strong)
    return 0;
  v14 = (void *)Strong;
  v13.n128_f64[0] = a3;
  v15 = sub_100021ACC(a1, v13, a4, a5, a6);

  return v15;
}

id sub_100021ACC(uint64_t a1, __n128 a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  double v10;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _QWORD v50[4];
  char v51[24];
  CGRect v52;

  v6 = v5;
  v10 = a2.n128_f64[0];
  v12 = type metadata accessor for OSLogger(0, a2);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph);
  v18 = type metadata accessor for UpsellGridPresenter(0, v14);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain(v17);
  v19 = swift_bridgeObjectRetain(a1);
  v20 = UpsellGridPresenter.init(objectGraph:contentDictionary:)(v17, a1, v19);
  v21 = objc_allocWithZone((Class)type metadata accessor for UpsellGridView());
  v22 = sub_100445FE4(0);
  objc_msgSend(v22, "setFrame:", v10, a3, a4, a5);
  v23 = sub_100020248(&qword_100808368, 255, (uint64_t (*)(uint64_t))type metadata accessor for UpsellGridView, (uint64_t)&unk_100662744);
  v24 = v6 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView;
  swift_beginAccess(v6 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView, v51, 1, 0);
  v25 = *(id *)v24;
  *(_QWORD *)v24 = v22;
  *(_QWORD *)(v24 + 8) = v23;
  v48 = v22;

  v27 = sub_100020248(&qword_100808360, v26, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController, (uint64_t)&unk_100640E90);
  v28 = swift_unknownObjectRetain(v6);
  v29 = UpsellGridPresenter.view.setter(v28, v27);
  v49 = v20;
  dispatch thunk of BasePresenter.didLoad()(v29);
  if (qword_100806958 != -1)
    swift_once(&qword_100806958, sub_1005032EC);
  v30 = sub_10000EFC4(v12, (uint64_t)qword_10086AB08);
  v31 = *(void (**)(char *))(v13 + 16);
  v47 = v30;
  v31(v16);
  v32 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v33 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v34 = *(_QWORD *)(v33 + 72);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = v13;
  v38 = v35 | 7;
  v39 = swift_allocObject(v32, v36 + 2 * v34, v35 | 7);
  *(_OWORD *)(v39 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000003ALL, 0x8000000100685B50);
  type metadata accessor for CGRect(0);
  v50[3] = v40;
  v41 = swift_allocObject(&unk_100736BB8, 48, 7);
  v50[0] = v41;
  *(double *)(v41 + 16) = v10;
  *(CGFloat *)(v41 + 24) = a3;
  *(CGFloat *)(v41 + 32) = a4;
  *(CGFloat *)(v41 + 40) = a5;
  static LogMessage.safe(_:)(v50);
  sub_100010F2C((uint64_t)v50, &qword_100808F20);
  Logger.info(_:)(v39, v12, &protocol witness table for OSLogger);
  v42 = swift_bridgeObjectRelease(v39);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v16, v12, v42);
  v52.origin.x = v10;
  v52.origin.y = a3;
  v52.size.width = a4;
  v52.size.height = a5;
  if (CGRectIsEmpty(v52))
  {
    v43 = swift_allocObject(v32, v36 + v34, v38);
    *(_OWORD *)(v43 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000040, 0x8000000100685B90);
    Logger.error(_:)(v43, v12, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v43);
  }
  v44 = *(id *)v24;
  v45 = *(id *)v24;
  swift_release();

  return v44;
}

id sub_100021E60(uint64_t a1, __n128 a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  double v10;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v46;
  id v47;
  uint64_t v48;
  _QWORD v49[4];
  char v50[24];
  CGRect v51;

  v6 = v5;
  v10 = a2.n128_f64[0];
  v12 = type metadata accessor for OSLogger(0, a2);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_objectGraph);
  v18 = type metadata accessor for UpsellGridPresenter(0, v14);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain(v17);
  v19 = swift_bridgeObjectRetain(a1);
  v20 = UpsellGridPresenter.init(objectGraph:contentDictionary:)(v17, a1, v19);
  v21 = objc_allocWithZone((Class)type metadata accessor for UpsellGridView());
  v22 = sub_100445FE4(0);
  objc_msgSend(v22, "setFrame:", v10, a3, a4, a5);
  v23 = sub_100020248(&qword_100808368, 255, (uint64_t (*)(uint64_t))type metadata accessor for UpsellGridView, (uint64_t)&unk_100662744);
  v24 = v6 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView;
  swift_beginAccess(v6 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView, v50, 1, 0);
  v25 = *(id *)v24;
  *(_QWORD *)v24 = v22;
  *(_QWORD *)(v24 + 8) = v23;
  v47 = v22;

  v26 = sub_100020248(&qword_10080AC50, 255, (uint64_t (*)(uint64_t))type metadata accessor for DynamicViewController, (uint64_t)&unk_1006433A8);
  v27 = swift_unknownObjectRetain(v6);
  v28 = UpsellGridPresenter.view.setter(v27, v26);
  v48 = v20;
  dispatch thunk of BasePresenter.didLoad()(v28);
  if (qword_100806958 != -1)
    swift_once(&qword_100806958, sub_1005032EC);
  v29 = sub_10000EFC4(v12, (uint64_t)qword_10086AB08);
  v30 = *(void (**)(char *))(v13 + 16);
  v46 = v29;
  v30(v16);
  v31 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v32 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = *(unsigned __int8 *)(v32 + 80);
  v35 = (v34 + 32) & ~v34;
  v36 = v13;
  v37 = v34 | 7;
  v38 = swift_allocObject(v31, v35 + 2 * v33, v34 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000003ALL, 0x8000000100685B50);
  type metadata accessor for CGRect(0);
  v49[3] = v39;
  v40 = swift_allocObject(&unk_100736BB8, 48, 7);
  v49[0] = v40;
  *(double *)(v40 + 16) = v10;
  *(CGFloat *)(v40 + 24) = a3;
  *(CGFloat *)(v40 + 32) = a4;
  *(CGFloat *)(v40 + 40) = a5;
  static LogMessage.safe(_:)(v49);
  sub_100010F2C((uint64_t)v49, &qword_100808F20);
  Logger.info(_:)(v38, v12, &protocol witness table for OSLogger);
  v41 = swift_bridgeObjectRelease(v38);
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v16, v12, v41);
  v51.origin.x = v10;
  v51.origin.y = a3;
  v51.size.width = a4;
  v51.size.height = a5;
  if (CGRectIsEmpty(v51))
  {
    v42 = swift_allocObject(v31, v35 + v33, v37);
    *(_OWORD *)(v42 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000040, 0x8000000100685B90);
    Logger.error(_:)(v42, v12, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v42);
  }
  v43 = *(id *)v24;
  v44 = *(id *)v24;
  swift_release();

  return v43;
}

uint64_t type metadata accessor for MarketingItemViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension27MarketingItemViewController);
}

uint64_t sub_100022560()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_artworkLoader));
}

uint64_t sub_100022570()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_referrer);
  swift_bridgeObjectRetain(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_referrer
                                     + 8));
  return v1;
}

uint64_t sub_1000225A8()
{
  return MarketingItemRequestInfo.purchaseSuccessAction.getter();
}

uint64_t sub_1000225D0()
{
  return MarketingItemRequestInfo.purchaseFailureAction.getter();
}

uint64_t sub_1000225F8()
{
  return MarketingItemRequestInfo.carrierLinkSuccessAction.getter();
}

uint64_t sub_100022620()
{
  return MarketingItemRequestInfo.carrierLinkFailureAction.getter();
}

uint64_t sub_100022648()
{
  return MarketingItemRequestInfo.onDismissalAction.getter();
}

uint64_t sub_100022670()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridPresenter));
}

id sub_100022680()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;
  _BYTE v5[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView, v5, 0, 0);
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_1000226D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView;
  swift_beginAccess(v5, v7, 1, 0);
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;

}

void *sub_10002272C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_gridView, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_100022770()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "metricsOverlay");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  return v3;
}

void sub_1000227DC(uint64_t a1)
{
  void *v1;
  Class isa;

  if (a1)
  {
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    isa = 0;
  }
  objc_msgSend(v1, "setMetricsOverlay:", isa);

}

void (*sub_100022850(uint64_t **a1))(_QWORD *a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_100022894(v2);
  return sub_10001EB20;
}

void (*sub_100022894(uint64_t *a1))(uint64_t *a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;

  a1[1] = (uint64_t)v1;
  v3 = objc_msgSend(v1, "metricsOverlay");
  if (v3)
  {
    v4 = v3;
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  return sub_10002291C;
}

void sub_10002291C(uint64_t *a1, char a2)
{
  uint64_t v3;
  Class isa;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain(*a1);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      isa = 0;
    }
    objc_msgSend((id)a1[1], "setMetricsOverlay:", isa);
    swift_bridgeObjectRelease(v3);
  }
  else if (v3)
  {
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    objc_msgSend((id)a1[1], "setMetricsOverlay:", isa);
  }
  else
  {
    isa = 0;
    objc_msgSend((id)a1[1], "setMetricsOverlay:", 0);
  }

}

void sub_100022A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_getObjectType(v2, a2);
  DynamicViewControllerDisplaying.injectFieldsIntoMetricsOverlay()();
}

id sub_100022A28()
{
  void *v0;

  return objc_msgSend(v0, "reloadContentViewImpressionItems");
}

uint64_t sub_100022A38(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  v6 = sub_100020248((unint64_t *)&unk_100808380, v5, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController, (uint64_t)&unk_100640ED8);
  return DynamicViewControllerDisplaying.loadGrid(primaryIcon:remainingIcons:)(a1, a2, ObjectType, v6);
}

uint64_t sub_100022A98(uint64_t a1, uint64_t a2)
{
  return sub_100022AB0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&DynamicViewControllerDisplaying.showLoading());
}

uint64_t sub_100022AA4(uint64_t a1, uint64_t a2)
{
  return sub_100022AB0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&DynamicViewControllerDisplaying.hideLoading());
}

uint64_t sub_100022AB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_100020248((unint64_t *)&unk_100808380, v4, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController, (uint64_t)&unk_100640ED8);
  return a3(ObjectType, v5);
}

uint64_t sub_100022B0C(uint64_t a1, uint64_t a2)
{
  return sub_100022AB0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&DynamicViewControllerDisplaying.reloadData());
}

uint64_t sub_100022B18(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100808350, a2, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController, (uint64_t)&unk_100640E30);
}

uint64_t sub_100022B44(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100808358, a2, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController, (uint64_t)&unk_100640E58);
}

uint64_t sub_100022B70(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100808360, a2, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController, (uint64_t)&unk_100640E90);
}

uint64_t sub_100022B9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100022BAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  _QWORD v14[4];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  if (qword_100804560 != -1)
    swift_once(&qword_100804560, sub_1000212D0);
  sub_10000EF80((uint64_t)qword_100864830, (uint64_t)v15);
  v2 = v16;
  v3 = v17;
  sub_100010F08(v15, v16);
  v4 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v5 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 2 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD000000000000025, 0x8000000100685BE0);
  swift_getErrorValue(a1, v13, &v11);
  v7 = v11;
  v8 = v12;
  v14[3] = v12;
  v9 = sub_1000119C0(v14);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, v7, v8);
  static LogMessage.safe(_:)(v14);
  sub_100010F2C((uint64_t)v14, &qword_100808F20);
  Logger.error(_:)(v6, v2, v3);
  swift_bridgeObjectRelease(v6);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
}

unint64_t sub_100022D1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080AC60;
  if (!qword_10080AC60)
  {
    v1 = objc_opt_self(ACAccountStore);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080AC60);
  }
  return result;
}

uint64_t sub_100022D58()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100022D7C()
{
  uint64_t v0;

  sub_1000219E0(v0, sub_10006A5B0);
}

void sub_100022D9C()
{
  uint64_t v0;

  sub_1000219E0(v0, (void (*)(void))sub_10006A5BC);
}

void sub_100022DBC()
{
  uint64_t v0;

  sub_1000219E0(v0, sub_10006A5D8);
}

void sub_100022DDC()
{
  uint64_t v0;

  sub_1000219E0(v0, (void (*)(void))sub_10006A898);
}

void sub_100022DFC()
{
  uint64_t v0;

  sub_1000219E0(v0, (void (*)(void))sub_10006A8B4);
}

id sub_100022E1C(uint64_t a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;

  return sub_100021A34(a1, v5, a2, a3, a4, a5);
}

uint64_t sub_100022E24(uint64_t a1, uint64_t a2)
{
  return sub_100022E6C(a1, a2, 0xD000000000000010, 0x8000000100685E60, &enum case for AppStoreInteractionType.normal(_:));
}

uint64_t sub_100022E48(uint64_t a1, uint64_t a2)
{
  return sub_100022E6C(a1, a2, 0xD000000000000016, 0x8000000100685E40, &enum case for AppStoreInteractionType.adMarker(_:));
}

uint64_t sub_100022E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];

  v28 = a2;
  v29 = a5;
  v8 = v5;
  v30 = a1;
  v31 = type metadata accessor for AppStoreInteractionType(0);
  v27 = *(_QWORD *)(v31 - 8);
  v9 = __chkstk_darwin(v31);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806978 != -1)
    swift_once(&qword_100806978, sub_100503374);
  v16 = sub_10000EFC4(v12, (uint64_t)qword_10086AB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v18 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ 4 * *(_QWORD *)(v18 + 72), *(unsigned __int8 *)(v18 + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_100640F90;
  static LogMessage.identity(_:)(v8);
  LogMessage.init(stringLiteral:)(a3, a4);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v32[3] = &type metadata for String;
  v20 = v30;
  v21 = v28;
  v32[0] = v30;
  v32[1] = v28;
  swift_bridgeObjectRetain(v28);
  static LogMessage.safe(_:)(v32);
  sub_10001282C((uint64_t)v32);
  Logger.info(_:)(v19, v12, &protocol witness table for OSLogger);
  v22 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v22);
  v23 = v27;
  v24 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v11, *v29, v31);
  AppStoreMetricManager.interacted(_:type:completion:)(v20, v21, v11, 0, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v24);
}

uint64_t sub_1000230CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  uint64_t v7;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  _QWORD v54[3];
  void *v55;

  v48 = a5;
  v49 = a6;
  v46 = a2;
  v45 = type metadata accessor for OSLogger(0, a7);
  v53 = *(_QWORD *)(v45 - 8);
  v11 = __chkstk_darwin(v45);
  v43 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AdvertActionMetrics.AdvertType(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AppStoreInteractionType(0);
  v50 = *(_QWORD *)(v17 - 8);
  v51 = (void *)v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v7;
  v20 = *(_QWORD *)(*(_QWORD *)(v7 + 24) + 24);
  ObjectType = swift_getObjectType();
  v44 = a3;
  v22 = dispatch thunk of AppStateController.stateMachine(forApp:)(a3, ObjectType, v20);
  v24 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  v52 = v19;
  if (v25 == enum case for AdvertActionMetrics.AdvertType.standardApp(_:))
  {
    sub_10054B1E8(v24, (uint64_t)v19);
LABEL_5:
    swift_unknownObjectRelease(v22);
    goto LABEL_7;
  }
  if (v25 == enum case for AdvertActionMetrics.AdvertType.arcadeApp(_:))
  {
    sub_10054B1DC(v24, (uint64_t)v52);
    goto LABEL_5;
  }
  v26 = swift_unknownObjectRelease(v22);
  (*(void (**)(char *, _QWORD, void *, __n128))(v50 + 104))(v52, enum case for AppStoreInteractionType.unknown(_:), v51, v26);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_7:
  if (qword_100806978 != -1)
    swift_once(&qword_100806978, sub_100503374);
  v27 = v45;
  v28 = sub_10000EFC4(v45, (uint64_t)qword_10086AB68);
  v29 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v43, v28, v27);
  v30 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v31 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v32 = swift_allocObject(v30, ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ 8 * *(_QWORD *)(v31 + 72), *(unsigned __int8 *)(v31 + 80) | 7);
  *(_OWORD *)(v32 + 16) = xmmword_100640FA0;
  static LogMessage.identity(_:)(v47);
  LogMessage.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100685E00);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v55 = &type metadata for String;
  v54[0] = a1;
  v42 = a1;
  v33 = v46;
  v54[1] = v46;
  swift_bridgeObjectRetain(v46);
  static LogMessage.safe(_:)(v54);
  sub_10001282C((uint64_t)v54);
  LogMessage.init(stringLiteral:)(0x3A64496D616461, 0xE700000000000000);
  v34 = type metadata accessor for AdamId(0);
  v55 = (void *)v34;
  v35 = sub_1000119C0(v54);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v35, v44, v34);
  static LogMessage.traceableSensitive(_:)(v54);
  sub_10001282C((uint64_t)v54);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100685E20);
  v36 = v51;
  v55 = v51;
  v37 = sub_1000119C0(v54);
  v38 = v50;
  v39 = (uint64_t)v52;
  (*(void (**)(_QWORD *, char *, void *))(v50 + 16))(v37, v52, v36);
  static LogMessage.traceableSensitive(_:)(v54);
  sub_10001282C((uint64_t)v54);
  Logger.info(_:)(v32, v27, &protocol witness table for OSLogger);
  v40 = swift_bridgeObjectRelease(v32);
  (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v29, v27, v40);
  AppStoreMetricManager.interacted(_:type:completion:)(v42, v33, v39, v48, v49);
  return (*(uint64_t (**)(uint64_t, void *))(v38 + 8))(v39, v36);
}

void sub_100023534(uint64_t a1, void *a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  _QWORD v17[4];

  v4 = v3;
  v7 = type metadata accessor for OSLogger(0, a3);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806978 != -1)
    swift_once(&qword_100806978, sub_100503374);
  v11 = sub_10000EFC4(v7, (uint64_t)qword_10086AB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100640F90;
  static LogMessage.identity(_:)(v4);
  LogMessage.init(stringLiteral:)(0xD000000000000018, 0x8000000100685DE0);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v17[3] = &type metadata for String;
  v17[0] = a1;
  v17[1] = a2;
  swift_bridgeObjectRetain(a2);
  static LogMessage.safe(_:)(v17);
  sub_10001282C((uint64_t)v17);
  Logger.info(_:)(v14, v7, &protocol witness table for OSLogger);
  v15 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v15);
  v16._countAndFlagsBits = a1;
  v16._object = a2;
  AppStoreMetricManager.leftAdDestination(_:)(v16);
}

uint64_t sub_100023718()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for PromotedContentAdvertInteractionMetricsReporter()
{
  return objc_opt_self(_TtC20ProductPageExtension47PromotedContentAdvertInteractionMetricsReporter);
}

uint64_t sub_100023764(uint64_t a1, uint64_t a2)
{
  return sub_100022E6C(a1, a2, 0xD000000000000010, 0x8000000100685E60, &enum case for AppStoreInteractionType.normal(_:));
}

uint64_t sub_1000237A4(uint64_t a1, uint64_t a2)
{
  return sub_100022E6C(a1, a2, 0xD000000000000016, 0x8000000100685E40, &enum case for AppStoreInteractionType.adMarker(_:));
}

uint64_t sub_1000237E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  return sub_1000230CC(a1, a2, a3, a4, a5, a6, a7);
}

void sub_100023804(uint64_t a1, void *a2, __n128 a3)
{
  sub_100023534(a1, a2, a3);
}

_QWORD *sub_100023824(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;

  v23 = a2;
  v3 = type metadata accessor for Shelf.ContentType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = _swiftEmptyArrayStorage;
  v25 = _swiftEmptyArrayStorage;
  KeyPath = swift_getKeyPath(&unk_1006410E0);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v13 = swift_getKeyPath(&unk_100641110);
  ReadOnlyLens.subscript.getter(v6, v13, v7);
  v14 = swift_release(v13);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v14);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v4 + 88))(v6, v3) == enum case for Shelf.ContentType.productBadge(_:))
  {
    v15 = sub_100023A10(a1, v23);
    sub_10001A49C(v15);
  }
  else
  {
    v24 = (unint64_t)_swiftEmptyArrayStorage;
    v16 = sub_10039E060(a1, v23);
    if (v16)
    {
      v17 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized Array._endMutation()(v20);

      v11 = (_QWORD *)v24;
    }
    sub_10001A49C((uint64_t)v11);
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v25;
}

unint64_t sub_100023A10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void (*v80)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  int v86;
  uint64_t *v87;
  int v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  void *v94;
  id v95;
  uint64_t v96;
  __n128 v97;
  void *v98;
  double v99;
  id v100;
  id v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  double v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  id v110;
  Swift::String v111;
  Swift::String v112;
  void *object;
  __n128 v114;
  uint64_t v115;
  id v116;
  NSString v117;
  id v118;
  id v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  double v126;
  id v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  id v131;
  Swift::String v132;
  Swift::String v133;
  void *v134;
  __n128 v135;
  uint64_t v136;
  id v137;
  NSString v138;
  id v139;
  id v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  id v145;
  id v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  unint64_t v183;

  v175 = a2;
  v3 = type metadata accessor for ComponentSeparator.Position(0);
  v173 = *(_QWORD *)(v3 - 8);
  v174 = v3;
  __chkstk_darwin(v3);
  v172 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageGrid(0);
  v170 = *(_QWORD *)(v5 - 8);
  v171 = v5;
  __chkstk_darwin(v5);
  v169 = (char **)((char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v167 = type metadata accessor for Shelf.ContentType(0);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v152 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_10000DAF8((uint64_t *)&unk_10080F0A0);
  __chkstk_darwin(v163);
  v168 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v9);
  v155 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v164 = (char *)&v151 - v12;
  __chkstk_darwin(v13);
  v165 = (char *)&v151 - v14;
  v15 = type metadata accessor for Uber.Style(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v151 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_10000DAF8(&qword_100808530);
  __chkstk_darwin(v159);
  v176 = (uint64_t)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8(&qword_100808538);
  __chkstk_darwin(v19);
  v153 = (uint64_t)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v151 - v22;
  __chkstk_darwin(v24);
  v177 = (uint64_t)&v151 - v25;
  v26 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v26);
  v162 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char **)((char *)&v151 - v29);
  v31 = sub_10000DAF8(&qword_100808548);
  __chkstk_darwin(v31);
  v161 = (uint64_t)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v151 - v34;
  v183 = (unint64_t)_swiftEmptyArrayStorage;
  KeyPath = swift_getKeyPath(&unk_100641140);
  v178 = a1;
  ItemLayoutContext.subscript.getter(v30);
  swift_release(KeyPath);
  v160 = v26;
  v37 = (uint64_t)v30 + *(int *)(v26 + 48);
  sub_10002548C((uint64_t)v30, (uint64_t)v35, &qword_100808548);
  v38 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v39 = *(_QWORD *)(v38 - 8);
  v158 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v40 = v158(v35, 1, v38);
  v157 = v38;
  if (v40 == 1)
  {
    sub_100010F2C(v37, &qword_100808548);
    sub_100010F2C((uint64_t)v35, &qword_100808548);
    v180 = 0u;
    v181 = 0u;
    v182 = 0;
    v41 = v177;
    v42 = v178;
LABEL_10:
    sub_100010F2C((uint64_t)&v180, &qword_100819230);
    goto LABEL_11;
  }
  v43 = swift_getKeyPath(&unk_1006411D0);
  ReadOnlyLens.subscript.getter(&v179, v43, v38);
  v44 = swift_release(v43);
  v45 = v179;
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v35, v38, v44);
  if (*(_QWORD *)(v45 + 16))
  {
    sub_10000EF80(v45 + 32, (uint64_t)&v180);
  }
  else
  {
    v182 = 0;
    v180 = 0u;
    v181 = 0u;
  }
  v41 = v177;
  v42 = v178;
  swift_bridgeObjectRelease(v45);
  sub_100010F2C(v37, &qword_100808548);
  if (!*((_QWORD *)&v181 + 1))
    goto LABEL_10;
  v46 = sub_10000DAF8(&qword_10080E910);
  v47 = type metadata accessor for ProductTopLockup(0);
  if ((swift_dynamicCast(&v179, &v180, v46, v47, 6) & 1) != 0)
  {
    v48 = v179;
    v49 = ProductTopLockup.uber.getter();
    swift_release(v48);
    if (v49)
    {
      v50 = v39;
      v51 = swift_retain(v49);
      Uber.style.getter(v51);
      v156 = v49;
      v52 = swift_release(v49);
      v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v53)(v41, 0, 1, v15, v52);
      goto LABEL_12;
    }
  }
LABEL_11:
  v50 = v39;
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v53(v41, 1, 1, v15);
  v156 = 0;
LABEL_12:
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v23, enum case for Uber.Style.inline(_:), v15);
  v53((uint64_t)v23, 0, 1, v15);
  v54 = v176;
  v55 = v176 + *(int *)(v159 + 48);
  sub_100018ADC(v41, v176, &qword_100808538);
  sub_100018ADC((uint64_t)v23, v55, &qword_100808538);
  v56 = v16;
  v57 = v41;
  v58 = v56;
  v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v60 = v59(v54, 1, v15);
  v154 = v50;
  if (v60 == 1)
  {
    sub_100010F2C((uint64_t)v23, &qword_100808538);
    sub_100010F2C(v57, &qword_100808538);
    v61 = v59(v55, 1, v15);
    if (v61 == 1)
      v62 = &qword_100808538;
    else
      v62 = &qword_100808530;
    if (v61 == 1)
      v63 = -1;
    else
      v63 = 0;
    LODWORD(v159) = v63;
  }
  else
  {
    v64 = v153;
    sub_100018ADC(v54, v153, &qword_100808538);
    if (v59(v55, 1, v15) == 1)
    {
      sub_100010F2C((uint64_t)v23, &qword_100808538);
      sub_100010F2C(v177, &qword_100808538);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v64, v15);
      LODWORD(v159) = 0;
      v62 = &qword_100808530;
    }
    else
    {
      v65 = v58;
      v66 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
      v67 = v151;
      v66(v151, v55, v15);
      v68 = sub_10000E720((unint64_t *)&qword_100808550, (uint64_t (*)(uint64_t))&type metadata accessor for Uber.Style, (uint64_t)&protocol conformance descriptor for Uber.Style);
      LODWORD(v159) = dispatch thunk of static Equatable.== infix(_:_:)(v64, v67, v15, v68);
      v69 = v64;
      v70 = *(void (**)(char *, uint64_t))(v65 + 8);
      v54 = v176;
      v70(v67, v15);
      v62 = &qword_100808538;
      sub_100010F2C((uint64_t)v23, &qword_100808538);
      sub_100010F2C(v177, &qword_100808538);
      v70((char *)v69, v15);
    }
  }
  v71 = (uint64_t)v168;
  v72 = v162;
  sub_100010F2C(v54, v62);
  v73 = swift_getKeyPath(&unk_100641140);
  ItemLayoutContext.subscript.getter(v72);
  swift_release(v73);
  v74 = v161;
  sub_10002548C((uint64_t)v72 + *(int *)(v160 + 48), v161, &qword_100808548);
  v75 = v157;
  v76 = v158((char *)v74, 1, v157);
  v77 = v167;
  v78 = v166;
  v79 = v165;
  if (v76 == 1)
  {
    sub_100010F2C((uint64_t)v72, &qword_100808548);
    sub_100010F2C(v74, &qword_100808548);
    v80 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v78 + 56);
    v80(v79, 1, 1, v77);
  }
  else
  {
    v81 = swift_getKeyPath(&unk_100641110);
    ReadOnlyLens.subscript.getter(v79, v81, v75);
    v82 = swift_release(v81);
    (*(void (**)(uint64_t, uint64_t, __n128))(v154 + 8))(v74, v75, v82);
    v80 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v78 + 56);
    v80(v79, 0, 1, v77);
    sub_100010F2C((uint64_t)v72, &qword_100808548);
  }
  v83 = (uint64_t)v164;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v164, enum case for Shelf.ContentType.productMediaItem(_:), v77);
  v80((_QWORD *)v83, 0, 1, v77);
  v84 = v71 + *(int *)(v163 + 48);
  sub_100018ADC((uint64_t)v79, v71, (uint64_t *)&unk_10080F0B0);
  sub_100018ADC(v83, v84, (uint64_t *)&unk_10080F0B0);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  if (v85(v71, 1, v77) == 1)
  {
    sub_100010F2C(v83, (uint64_t *)&unk_10080F0B0);
    sub_100010F2C((uint64_t)v79, (uint64_t *)&unk_10080F0B0);
    v86 = v85(v84, 1, v77);
    if (v86 == 1)
      v87 = (uint64_t *)&unk_10080F0B0;
    else
      v87 = (uint64_t *)&unk_10080F0A0;
    if (v86 == 1)
      v88 = -1;
    else
      v88 = 0;
    LODWORD(v177) = v88;
  }
  else
  {
    v89 = v155;
    sub_100018ADC(v71, v155, (uint64_t *)&unk_10080F0B0);
    if (v85(v84, 1, v77) == 1)
    {
      sub_100010F2C(v83, (uint64_t *)&unk_10080F0B0);
      sub_100010F2C((uint64_t)v79, (uint64_t *)&unk_10080F0B0);
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v89, v77);
      LODWORD(v177) = 0;
      v87 = (uint64_t *)&unk_10080F0A0;
    }
    else
    {
      v90 = v152;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v152, v84, v77);
      v91 = sub_10000E720((unint64_t *)&qword_10080F0C0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
      v92 = v89;
      LODWORD(v177) = dispatch thunk of static Equatable.== infix(_:_:)(v89, v90, v77, v91);
      v93 = *(void (**)(char *, uint64_t))(v78 + 8);
      v93(v90, v77);
      v87 = (uint64_t *)&unk_10080F0B0;
      sub_100010F2C(v83, (uint64_t *)&unk_10080F0B0);
      sub_100010F2C((uint64_t)v79, (uint64_t *)&unk_10080F0B0);
      v93((char *)v92, v77);
    }
  }
  sub_100010F2C(v71, v87);
  v94 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v95 = objc_msgSend(v94, "fractionalWidthDimension:", 1.0);
  v96 = swift_getKeyPath(&unk_100641170);
  ItemLayoutContext.subscript.getter(&v180);
  v97 = swift_release(v96);
  v98 = (void *)v180;
  v99 = static ComponentSeparator.thickness(compatibleWith:)(v180, v97);

  v100 = objc_msgSend(v94, "absoluteDimension:", v99);
  v101 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v95, v100);

  if ((v159 & 1) == 0)
  {
    v102 = swift_getKeyPath(&unk_1006411A0);
    v103 = v169;
    ItemLayoutContext.subscript.getter(v169);
    swift_release(v102);
    v105 = PageGrid.interRowSpace.getter(v104);
    (*(void (**)(_QWORD *, uint64_t))(v170 + 8))(v103, v171);
    v106 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 1, 0.0, v105 * -0.5);
    type metadata accessor for SeparatorSupplementaryView(0);
    v108 = v173;
    v107 = v174;
    v109 = v172;
    (*(void (**)(char *, _QWORD, uint64_t))(v173 + 104))(v172, enum case for ComponentSeparator.Position.top(_:), v174);
    *(_QWORD *)&v180 = 0;
    *((_QWORD *)&v180 + 1) = 0xE000000000000000;
    v110 = v101;
    _print_unlocked<A, B>(_:_:)(v109, &v180, v107, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v111._countAndFlagsBits = 95;
    v111._object = (void *)0xE100000000000000;
    String.append(_:)(v111);
    v112._countAndFlagsBits = static UICollectionReusableView.makeItemScopedElementKind(in:uniquify:)(v42, 0);
    object = v112._object;
    String.append(_:)(v112);
    v114 = swift_bridgeObjectRelease(object);
    v115 = *((_QWORD *)&v180 + 1);
    (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v109, v107, v114);
    v116 = v106;
    v117 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v115);
    v118 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v110, v117, v116);

    v119 = v118;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v119);
    v121 = *(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v120 = *(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v121 >= v120 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v120 > 1, v121 + 1, 1);
    v122 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v121, v119);
    specialized Array._endMutation()(v122);

    v42 = v178;
  }
  if ((v177 & 1) == 0)
  {
    v123 = swift_getKeyPath(&unk_1006411A0);
    v124 = v169;
    ItemLayoutContext.subscript.getter(v169);
    swift_release(v123);
    v126 = PageGrid.interRowSpace.getter(v125);
    (*(void (**)(_QWORD *, uint64_t))(v170 + 8))(v124, v171);
    v127 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 4, 0.0, v126 * 0.5);
    type metadata accessor for SeparatorSupplementaryView(0);
    v129 = v172;
    v128 = v173;
    v130 = v174;
    (*(void (**)(char *, _QWORD, uint64_t))(v173 + 104))(v172, enum case for ComponentSeparator.Position.bottom(_:), v174);
    *(_QWORD *)&v180 = 0;
    *((_QWORD *)&v180 + 1) = 0xE000000000000000;
    v131 = v101;
    _print_unlocked<A, B>(_:_:)(v129, &v180, v130, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v132._countAndFlagsBits = 95;
    v132._object = (void *)0xE100000000000000;
    String.append(_:)(v132);
    v133._countAndFlagsBits = static UICollectionReusableView.makeItemScopedElementKind(in:uniquify:)(v42, 0);
    v134 = v133._object;
    String.append(_:)(v133);
    v135 = swift_bridgeObjectRelease(v134);
    v136 = *((_QWORD *)&v180 + 1);
    (*(void (**)(char *, uint64_t, __n128))(v128 + 8))(v129, v130, v135);
    v137 = v127;
    v138 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v136);
    v139 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v131, v138, v137);

    v140 = v139;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v140);
    v142 = *(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v141 = *(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v142 >= v141 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v141 > 1, v142 + 1, 1);
    v143 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v142, v140);
    specialized Array._endMutation()(v143);

  }
  v144 = _swiftEmptyArrayStorage;
  *(_QWORD *)&v180 = _swiftEmptyArrayStorage;
  v145 = sub_10039E060(v42, v175);
  if (v145)
  {
    v146 = v145;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
    v148 = *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v147 = *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v148 >= v147 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
    v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v146);
    specialized Array._endMutation()(v149);

    v144 = (_QWORD *)v180;
  }
  sub_10001A49C((uint64_t)v144);

  swift_release(v156);
  return v183;
}

uint64_t sub_1000249F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t KeyPath;
  uint64_t v16;
  __n128 v17;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a4;
  v20 = a1;
  v21 = a2;
  v7 = type metadata accessor for Shelf.ContentType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_1006410E0);
  ItemLayoutContext.subscript.getter(v14);
  swift_release(KeyPath);
  v16 = swift_getKeyPath(&unk_100641110);
  ReadOnlyLens.subscript.getter(v10, v16, v11);
  v17 = swift_release(v16);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v12 + 8))(v14, v11, v17);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v8 + 88))(v10, v7) == enum case for Shelf.ContentType.productBadge(_:))
    return sub_100024B80(v20, v21, a3, v22, a5);
  v19 = sub_10039DEB4(v20, v21, a3, v22, a5);
  return (*(uint64_t (**)(_QWORD *, uint64_t, double))(v8 + 8))(v10, v7, v19);
}

uint64_t sub_100024B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __n128 v57;
  uint64_t v59[2];
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v69 = (_QWORD *)a5;
  v72 = a3;
  v73 = a4;
  v7 = type metadata accessor for ComponentSeparator.Position(0);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  __chkstk_darwin(v7);
  v60 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10000DAF8(&qword_100808508);
  __chkstk_darwin(v62);
  v10 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_100808510);
  __chkstk_darwin(v11);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentSeparator(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8(&qword_100808518);
  v65 = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(v65 + 64);
  __chkstk_darwin(v18);
  v66 = (uint64_t)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v61 = (uint64_t)v59 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)v59 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)v59 - v26;
  v28 = type metadata accessor for SeparatorSupplementaryView(0);
  v70 = a1;
  v71 = a2;
  v67 = v28;
  sub_10052E484((uint64_t)v27);
  v29 = *(_QWORD *)(v68 + 56);
  sub_10039E90C(v72, v73, (uint64_t)v13);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v68 = v14;
  if (v30(v13, 1, v14) == 1)
  {
    sub_100010F2C((uint64_t)v13, &qword_100808510);
    v31 = (uint64_t)v27;
LABEL_12:
    v45 = v71;
    v46 = swift_bridgeObjectRetain(v71);
    v47 = v67;
    v48 = static UICollectionReusableView.defaultReuseIdentifier.getter(v46);
    v50 = v49;
    v51 = v66;
    sub_100018ADC(v31, v66, &qword_100808518);
    v52 = *(unsigned __int8 *)(v65 + 80);
    v53 = (v52 + 16) & ~v52;
    v54 = swift_allocObject(&unk_100736D20, v53 + v19, v52 | 7);
    sub_10002548C(v51, v54 + v53, &qword_100808518);
    v55 = sub_10000DAF8((uint64_t *)&unk_10080F090);
    v56 = v69;
    v69[3] = v55;
    v56[4] = sub_100025434();
    sub_1000119C0(v56);
    ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(v70, v45, v48, v50, sub_1000253CC, v54, v47, v57);
    return sub_100010F2C(v31, &qword_100808518);
  }
  v59[1] = v29;
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v68);
  ComponentSeparator.position.getter(v32);
  v34 = v63;
  v33 = v64;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v24, 0, 1, v64);
  v35 = (uint64_t)&v10[*(int *)(v62 + 48)];
  sub_100018ADC((uint64_t)v24, (uint64_t)v10, &qword_100808518);
  v62 = (uint64_t)v27;
  sub_100018ADC((uint64_t)v27, v35, &qword_100808518);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v36((uint64_t)v10, 1, v33) != 1)
  {
    v37 = v34;
    v38 = v61;
    sub_100018ADC((uint64_t)v10, v61, &qword_100808518);
    if (v36(v35, 1, v33) != 1)
    {
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
      v59[0] = (uint64_t)v10;
      v40 = v60;
      v39(v60, v35, v33);
      v41 = sub_10000E720(&qword_100808528, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentSeparator.Position, (uint64_t)&protocol conformance descriptor for ComponentSeparator.Position);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v40, v33, v41);
      v43 = *(void (**)(char *, uint64_t))(v37 + 8);
      v43(v40, v33);
      sub_100010F2C((uint64_t)v24, &qword_100808518);
      v43((char *)v38, v33);
      sub_100010F2C(v59[0], &qword_100808518);
      if ((v42 & 1) != 0)
        goto LABEL_10;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v68);
      v31 = v62;
      goto LABEL_12;
    }
    sub_100010F2C((uint64_t)v24, &qword_100808518);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v33);
LABEL_8:
    sub_100010F2C((uint64_t)v10, &qword_100808508);
    goto LABEL_11;
  }
  sub_100010F2C((uint64_t)v24, &qword_100808518);
  if (v36(v35, 1, v33) != 1)
    goto LABEL_8;
  sub_100010F2C((uint64_t)v10, &qword_100808518);
LABEL_10:
  v44 = sub_10039DEB4(v70, v71, v72, v73, (uint64_t)v69);
  (*(void (**)(char *, uint64_t, double))(v15 + 8))(v17, v68, v44);
  v31 = v62;
  return sub_100010F2C(v31, &qword_100808518);
}

uint64_t sub_1000250A0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  void *v24;
  char *v25;
  __n128 v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[24];

  v30 = a1;
  v6 = type metadata accessor for ComponentSeparator(0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - v10;
  v12 = sub_10000DAF8(&qword_100808518);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ComponentSeparator.Position(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  sub_100018ADC(a5, (uint64_t)v14, &qword_100808518);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_100010F2C((uint64_t)v14, &qword_100808518);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
  ComponentSeparator.init(position:leadingInset:trailingInset:)(v18, 0.0, 0.0);
  v23 = v29;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v8, v11, v6);
  v24 = v30;
  v25 = &v30[OBJC_IVAR____TtC20ProductPageExtension26SeparatorSupplementaryView_separator];
  v26 = swift_beginAccess(&v30[OBJC_IVAR____TtC20ProductPageExtension26SeparatorSupplementaryView_separator], v31, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v23 + 24))(v25, v8, v6, v26);
  swift_endAccess(v31);
  objc_msgSend(v24, "setNeedsLayout");
  v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v8, v6);
  v27(v11, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

uint64_t sub_1000252E0()
{
  uint64_t v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for ProductPageItemSupplementaryViewProvider()
{
  return objc_opt_self(_TtC20ProductPageExtension40ProductPageItemSupplementaryViewProvider);
}

uint64_t sub_100025334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10000DAF8(&qword_100808518) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for ComponentSeparator.Position(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000253CC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000DAF8(&qword_100808518) - 8) + 80);
  return sub_1000250A0(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

unint64_t sub_100025434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808520;
  if (!qword_100808520)
  {
    v1 = sub_100010DE0((uint64_t *)&unk_10080F090);
    result = swift_getWitnessTable(&protocol conformance descriptor for ReusableSupplementaryRegistration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100808520);
  }
  return result;
}

uint64_t sub_10002548C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000DAF8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for WriteReviewActionImplentation(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for WriteReviewActionImplentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for WriteReviewActionImplentation()
{
  return &type metadata for WriteReviewActionImplentation;
}

unint64_t sub_100025584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808560;
  if (!qword_100808560)
  {
    v1 = type metadata accessor for WriteReviewAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_100808560);
  }
  return result;
}

Swift::Int sub_1000255CC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_10002560C()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_100025630(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_10002567C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *Strong;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  id v91;
  id v92;
  __n128 v93;
  uint64_t result;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _QWORD aBlock[5];
  uint64_t v115;
  _BYTE v116[16];

  v109 = a2;
  v113 = a1;
  v3 = sub_10000DAF8(&qword_100808568);
  __chkstk_darwin(v3);
  v104 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = (_QWORD *)type metadata accessor for LegacyAppState(0);
  v5 = *(v106 - 1);
  __chkstk_darwin(v106);
  v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for AdamId(0);
  v105 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.URLTemplate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for Bag(0);
  v108 = *(_QWORD *)(v111 - 8);
  v14 = *(_QWORD *)(v108 + 64);
  __chkstk_darwin(v111);
  v102 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v112 = (char *)&v96 - v16;
  v103 = sub_10000DAF8(&qword_100808570);
  v17 = Promise.__allocating_init()();
  v107 = v2;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2);
  v19 = objc_msgSend(Strong, "view");

  if (v19)
  {
    v20 = objc_msgSend(v19, "window");

    if (!v20 || (v21 = objc_msgSend(v20, "windowScene"), v20, !v21))
    {
      v39 = sub_1000263FC();
      v40 = swift_allocError(&type metadata for WriteReviewActionImplentation.ImplementationError, v39, 0, 0);
      Promise.reject(_:)(v40);
      swift_errorRelease(v40);
      return v17;
    }
    v100 = v21;
    v22 = type metadata accessor for ObjectGraph(0);
    v23 = v109;
    inject<A, B>(_:from:)(v111, v109, v111, v22);
    v24 = sub_100026440();
    v25 = inject<A, B>(_:from:)(v24, v23, v24, v22);
    v99 = (id)aBlock[0];
    v26 = (void *)WriteReviewAction.appName.getter(v25);
    v101 = v17;
    if (v27)
    {
      v28 = v27;
      v98 = v26;
      v29 = WriteReviewAction.itemDescription.getter();
      if (v30)
      {
        v31 = v30;
        v97 = v29;
        v32 = WriteReviewAction.appIcon.getter();
        if (v32)
        {
          v33 = v32;
          Artwork.template.getter();
          v34 = swift_release(v33);
          v35 = Artwork.URLTemplate.rawValue.getter(v34);
          v96 = v36;
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
          v37 = objc_allocWithZone((Class)type metadata accessor for ReviewLockupDetails(0));
          v38 = (void *)ReviewLockupDetails.init(name:itemDescription:artworkURLTemplate:)(v98, v28, v97, v31, v35, v96);
        }
        else
        {
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v31);
          v38 = 0;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v28);
        v38 = 0;
      }
    }
    else
    {
      v38 = 0;
    }
    v41 = *(_QWORD *)(v109 + qword_10086B3C8);
    if (v41)
    {
      v42 = *(_QWORD *)(v109 + qword_10086B3C8 + 8);
      ObjectType = swift_getObjectType();
      v44 = swift_unknownObjectRetain(v41);
      WriteReviewAction.adamId.getter(v44);
      v109 = v41;
      v45 = dispatch thunk of AppStateController.stateMachine(forApp:)(v9, ObjectType, v42);
      v47 = v46;
      v48 = *(void (**)(char *, uint64_t))(v105 + 8);
      v48(v9, v110);
      v49 = swift_getObjectType();
      v105 = v45;
      dispatch thunk of AppStateMachine.currentState.getter(v49, v47);
      v50 = v106;
      if ((*(unsigned int (**)(char *, _QWORD *))(v5 + 88))(v7, v106) == enum case for LegacyAppState.openable(_:))
      {
        (*(void (**)(char *, _QWORD *))(v5 + 96))(v7, v50);
        v51 = *(void **)&v7[*(int *)(sub_10000DAF8(&qword_100808600) + 48)];
        v52 = type metadata accessor for OpenableDestination(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v7, v52);
        v53 = objc_msgSend(v51, "stringValue");
        v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
        v56 = v55;

      }
      else
      {
        (*(void (**)(char *, _QWORD *))(v5 + 8))(v7, v50);
        v54 = 0;
        v56 = 0;
      }
      v57 = static ReviewComposerUtility.lockupStyle(from:)(v113);
      v98 = v38;
      v58 = v99;
      v106 = v99;
      v59 = WriteReviewAction.adamId.getter(v106);
      v60 = AdamId.stringValue.getter(v59);
      v62 = v61;
      v48(v9, v110);
      v63 = objc_allocWithZone((Class)type metadata accessor for ReviewContext(0));
      v64 = (void *)ReviewContext.init(accentColor:lockupStyle:lockupDetails:mediaTaskType:clientInfo:itemIdentifier:itemVersion:)(0, v57, v38, 0, 0, v58, v60, v62, v54, v56);
      v65 = v107;
      v66 = (void *)swift_unknownObjectUnownedLoadStrong(v107);
      v67 = objc_msgSend(v66, "presentedViewController");

      v17 = v101;
      if (v67)
      {
        if ((objc_msgSend(v67, "isBeingDismissed") & 1) == 0)
        {
          sub_10002650C(v65, (uint64_t)v116);
          v81 = v108;
          v82 = v102;
          v83 = v111;
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v102, v112, v111);
          v84 = *(unsigned __int8 *)(v81 + 80);
          v85 = (v84 + 40) & ~v84;
          v86 = (v14 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
          v87 = swift_allocObject(&unk_100736E38, v86 + 8, v84 | 7);
          sub_1000265BC((uint64_t)v116, v87 + 16);
          v88 = v100;
          *(_QWORD *)(v87 + 24) = v100;
          *(_QWORD *)(v87 + 32) = v64;
          (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v87 + v85, v82, v83);
          *(_QWORD *)(v87 + v86) = v17;
          aBlock[4] = sub_1000265CC;
          v115 = v87;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000924A0;
          aBlock[3] = &unk_100736E50;
          v89 = _Block_copy(aBlock);
          v90 = v115;
          v91 = v88;
          v92 = v64;
          swift_retain(v17);
          objc_msgSend(v67, "dismissViewControllerAnimated:completion:", 1, v89, swift_release(v90).n128_f64[0]);
          _Block_release(v89);

          swift_unknownObjectRelease(v109);
          swift_unknownObjectRelease(v105);

          (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v112, v83, v93);
          return v17;
        }

      }
      v69 = v112;
      v70 = Bag.amsBag.getter(v68);
      v71 = Promise.__allocating_init()();
      v72 = type metadata accessor for TaskPriority(0);
      v73 = (uint64_t)v104;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v104, 1, 1, v72);
      v74 = (_QWORD *)swift_allocObject(&unk_100736E10, 64, 7);
      v74[2] = 0;
      v74[3] = 0;
      v75 = v100;
      v74[4] = v100;
      v74[5] = v64;
      v74[6] = v70;
      v74[7] = v71;
      v76 = v75;
      v77 = v64;
      swift_unknownObjectRetain(v70);
      swift_retain(v71);
      v78 = sub_100522850(v73, (uint64_t)&unk_1008085F8, (uint64_t)v74);
      swift_unknownObjectRelease(v70);
      v79 = swift_release(v78);
      Promise.pipe(to:)(v17, v79);

      swift_unknownObjectRelease(v109);
      swift_unknownObjectRelease(v105);
      v80 = swift_release(v71);
      (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v69, v111, v80);
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  v95 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v95, v95);
  __break(1u);
  return result;
}

double sub_100025E9C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  double result;
  uint64_t v21;

  v8 = sub_10000DAF8(&qword_100808568);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Bag.amsBag.getter(v9);
  v13 = Promise.__allocating_init()();
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject(&unk_100736E88, 64, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = v12;
  v15[7] = v13;
  v16 = a2;
  v17 = a3;
  swift_unknownObjectRetain(v12);
  swift_retain(v13);
  v18 = sub_100522850((uint64_t)v11, (uint64_t)&unk_100808608, (uint64_t)v15);
  swift_unknownObjectRelease(v12);
  v19 = swift_release(v18);
  Promise.pipe(to:)(a5, v19);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_100025FC8(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v9 = type metadata accessor for OSLogger(0, a1);
  v8[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[15] = v10;
  v8[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionOutcome(0);
  v8[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[18] = v12;
  v8[19] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ReviewResult(0);
  v8[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[21] = v14;
  v8[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10002607C, 0, 0);
}

uint64_t sub_10002607C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = type metadata accessor for ReviewCoordinator(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v0[23] = ReviewCoordinator.init()();
  v4 = (char *)&async function pointer to dispatch thunk of ReviewCoordinator.presentReviewComposer(scene:context:bag:)
     + async function pointer to dispatch thunk of ReviewCoordinator.presentReviewComposer(scene:context:bag:);
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of ReviewCoordinator.presentReviewComposer(scene:context:bag:)
                                  + 1));
  v0[24] = v2;
  *v2 = v0;
  v2[1] = sub_100026108;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v4)(v0[22], v0[10], v0[11], v0[12]);
}

uint64_t sub_100026108()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100026220;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
    v4 = sub_10002617C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10002617C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for ActionOutcome.performed(_:), v4);
  Promise.resolve(_:)(v2);
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100026220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 184));
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = sub_10000EFC4(v4, (uint64_t)qword_10086AB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v7 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v8 = swift_allocObject(v6, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 2 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100685F30);
  swift_getErrorValue(v1, v0 + 72, v0 + 48);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v10;
  v11 = sub_1000119C0((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, v9, v10);
  static LogMessage.sensitive(_:)(v0 + 16);
  sub_10001282C(v0 + 16);
  Logger.error(_:)(v8, v4, &protocol witness table for OSLogger);
  v12 = swift_bridgeObjectRelease(v8);
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v12);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000263F4(uint64_t *a1, uint64_t a2)
{
  return sub_10002567C(*a1, a2);
}

unint64_t sub_1000263FC()
{
  unint64_t result;

  result = qword_100808578;
  if (!qword_100808578)
  {
    result = swift_getWitnessTable(&unk_10064131C, &type metadata for WriteReviewActionImplentation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100808578);
  }
  return result;
}

unint64_t sub_100026440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808580;
  if (!qword_100808580)
  {
    v1 = objc_opt_self(AMSProcessInfo);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100808580);
  }
  return result;
}

uint64_t sub_100026480(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_100808594);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_100026880;
  return sub_100025FC8(v11, a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10002650C(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectUnownedCopyInit(a2, a1);
}

uint64_t sub_10002651C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Bag(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectUnownedDestroy(v0 + 16);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1000265BC(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectUnownedTakeInit(a2, a1);
}

double sub_1000265CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Bag(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100025E9C(v0 + 16, *(void **)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100026614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100026624(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100026630()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100026674(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_100808594);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_100026700;
  return sub_100025FC8(v11, a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100026700()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t getEnumTagSinglePayload for WriteReviewActionImplentation.ImplementationError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for WriteReviewActionImplentation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1000267DC + 4 * byte_100641200[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1000267FC + 4 * byte_100641205[v4]))();
}

_BYTE *sub_1000267DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1000267FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100026804(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10002680C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100026814(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10002681C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WriteReviewActionImplentation.ImplementationError()
{
  return &type metadata for WriteReviewActionImplentation.ImplementationError;
}

unint64_t sub_10002683C()
{
  unint64_t result;

  result = qword_100808610;
  if (!qword_100808610)
  {
    result = swift_getWitnessTable(&unk_1006412F4, &type metadata for WriteReviewActionImplentation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_100808610);
  }
  return result;
}

double sub_100026884(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  type metadata accessor for InAppPurchaseShowcaseLockupView();
  sub_10039C154(v16, a8, a2, a3);
  if (qword_100804540 != -1)
    swift_once(&qword_100804540, sub_100010F68);
  if (qword_100804548 != -1)
    swift_once(&qword_100804548, sub_100010F78);
  v17 = type metadata accessor for StaticDimension(0);
  v18 = sub_10000EFC4(v17, (uint64_t)qword_100807C48);
  static Dimensions.defaultRoundingRule.getter(v18);
  AnyDimension.value(in:rounded:)(a8, v15, v17, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return a2;
}

double sub_1000269EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100026A54(*a1, a2, a3);
}

void sub_1000269F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100026E68(a1, a4);
}

uint64_t sub_1000269FC()
{
  return sub_10000E720(&qword_100808620, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseShowcase, (uint64_t)&protocol conformance descriptor for InAppPurchaseShowcase);
}

uint64_t sub_100026A28()
{
  return sub_10000E720(&qword_100811EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NilState, (uint64_t)&protocol conformance descriptor for NilState);
}

double sub_100026A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  __n128 v44;
  double result;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;

  v52 = a3;
  v4 = sub_10000DAF8(&qword_100818E60);
  __chkstk_darwin(v4);
  v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v48 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = InAppPurchaseShowcase.lockup.getter(v12);
  v53 = v3;
  v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension39InAppPurchaseShowcaseCollectionViewCell_lockupView];
  v17 = *(id *)(v16 + OBJC_IVAR____TtC20ProductPageExtension31InAppPurchaseShowcaseLockupView_titleLabel);
  v18 = swift_retain(v15);
  Lockup.title.getter(v18);
  v20 = v19;
  v21 = swift_release(v15).n128_u64[0];
  if (v20)
  {
    v22 = String._bridgeToObjectiveC()();
    v21 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v17, "setText:", v22, *(double *)&v21);

  v23 = *(id *)(v16 + OBJC_IVAR____TtC20ProductPageExtension31InAppPurchaseShowcaseLockupView_subtitleLabel);
  InAppPurchaseShowcase.subtitle.getter(v23);
  if (v24)
  {
    v26 = v24;
    v27 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v23, "setText:", v27, v25);

  v28 = objc_retain(*(id *)(v16
                          + OBJC_IVAR____TtC20ProductPageExtension31InAppPurchaseShowcaseLockupView_descriptionLabel));
  InAppPurchaseShowcase.descriptionText.getter();
  if (v29)
  {
    v31 = v29;
    v32 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v31).n128_u64[0];
  }
  else
  {
    v32 = 0;
  }
  objc_msgSend(v28, "setText:", v32, v30);

  v33 = *(void **)(v16 + OBJC_IVAR____TtC20ProductPageExtension31InAppPurchaseShowcaseLockupView_offerButton);
  swift_retain(v15);
  v34 = v33;
  v35 = Lockup.offerDisplayProperties.getter(v34);
  swift_release(v15);
  v36 = swift_retain(v15);
  v37 = Lockup.buttonAction.getter(v36);
  swift_release(v15);
  v38 = sub_10000DAF8(&qword_10080B190);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v14, 1, 1, v38);
  v39 = v47;
  v40 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v48, enum case for OfferButtonSubtitlePosition.below(_:), v6);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v42 = v49;
  v41(v49, 1, 1, v6);
  v43 = sub_10000E720((unint64_t *)&qword_10080B180, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)(v40, v42, v6, v43);
  sub_1001B1C4C(v35, v37, 0, (uint64_t)v14, (uint64_t)v10, v52, 0, 0);

  swift_release(v37);
  v44 = swift_release(v35);
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v10, v51, v44);
  sub_100026E28((uint64_t)v14);
  objc_msgSend(v53, "setNeedsLayout");
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_100026E28(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100026E68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[40];
  uint64_t v13;
  _QWORD v14[5];
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v3 = Shelf.items.getter();
  if (qword_1008059D0 != -1)
LABEL_14:
    swift_once(&qword_1008059D0, sub_10039C7DC);
  v4 = *(double *)&qword_100867CD8;
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain(v3);
  v6 = 0;
  while (1)
  {
    if (v6 == v5)
    {
      v18 = 0;
      v6 = v5;
      memset(v17, 0, sizeof(v17));
    }
    else
    {
      if (v6 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        goto LABEL_14;
      }
      sub_10000EF80(v3 + 32 + 40 * v6++, (uint64_t)v17);
    }
    sub_100027004((uint64_t)v17, (uint64_t)&v15);
    if (!v16)
      break;
    sub_100010E24(&v15, (uint64_t)v14);
    sub_10000EF80((uint64_t)v14, (uint64_t)v12);
    v7 = sub_10000DAF8(&qword_10080E910);
    v8 = type metadata accessor for InAppPurchaseShowcase(0);
    if ((swift_dynamicCast(&v13, v12, v7, v8, 6) & 1) != 0)
    {
      v9 = v13;
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
      if (v9)
      {
        v11 = InAppPurchaseShowcase.lockup.getter(v10);
        sub_1005C0404(v4, v4, v11, 0, a2, 0);
        swift_release(v9);
        swift_release(v11);
      }
    }
    else
    {
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
    }
  }
  swift_bridgeObjectRelease_n(v3, 2);
}

uint64_t sub_100027004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100819230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002704C(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1000272A8(a2, a3, *a1, a5, a7, a8);
}

void sub_100027060(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_100027B6C(*a1, a2, a4, a5, a6);
}

void sub_100027074(uint64_t a1, double a2, double a3, uint64_t a4, void *a5, uint64_t a6)
{
  sub_1000280C8(a2, a3, a1, a5, a6);
}

double sub_100027080()
{
  return 0.0;
}

uint64_t sub_10002708C()
{
  return 0;
}

uint64_t sub_100027098()
{
  return sub_10000E720((unint64_t *)&qword_100824010, (uint64_t (*)(uint64_t))&type metadata accessor for FramedArtwork, (uint64_t)&protocol conformance descriptor for FramedMedia);
}

id sub_1000270C8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for CornerStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0.0;
  if (v0[qword_1008657B8] == 1)
  {
    type metadata accessor for ArtworkView(0);
    v6 = static ArtworkView.iconBorderWidth.getter();
    v7 = dispatch thunk of RoundedCornerView.borderWidth.setter(v6);
    v8 = static ArtworkView.iconBorderColor.getter(v7);
    dispatch thunk of RoundedCornerView.borderColor.setter(v8);
    v5 = 8.0;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for CornerStyle.continuous(_:), v1);
  dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v4, v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return objc_msgSend(v0, "setNeedsLayout");
}

uint64_t sub_1000271E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

double sub_100027208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  v11 = v10;
  v12 = sub_10000E720((unint64_t *)&qword_100807520, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10064059C);
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, v11, (char *)&type metadata for Any + 8, v12);
  v9(v13, a3, a4, a5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

uint64_t sub_1000272A8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  char v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void (*v29)(char *, uint64_t);
  __n128 v30;
  char v31;
  __n128 v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  void *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  double v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  void (*v55)(char *, uint64_t);
  double v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  double v61;
  double v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  double v88;
  double v89;
  double v90;
  int v92;
  char v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void *v97;
  _QWORD aBlock[3];
  void *v99;
  uint64_t v100;
  uint64_t v101;

  v9 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v9);
  v95 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FloatingPointRoundingRule(0);
  v94 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FontUseCase(0);
  v96 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AspectRatio(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = FramedMedia.isFullWidth.getter(v19);
  v97 = a6;
  if ((v22 & 1) == 0)
  {
    objc_msgSend(a6, "pageMarginInsets");
    a1 = a1 - v23 - v24;
  }
  v25 = FramedArtwork.artwork.getter();
  if (v25)
  {
    v26 = v25;
    Artwork.size.getter(v25);
    AspectRatio.init(_:_:)(v27);
    v28 = AspectRatio.height(fromWidth:)(a1);
    v29 = *(void (**)(char *, uint64_t))(v18 + 8);
    v29(v21, v17);
    v31 = FramedMedia.isFullWidth.getter(v30);
    if (v28 <= a2)
      v32.n128_f64[0] = v28;
    else
      v32.n128_f64[0] = a2;
    if ((v31 & 1) != 0)
      v32.n128_f64[0] = v28;
    v33 = v32.n128_f64[0] + 0.0;
    v34 = FramedMedia.isFullWidth.getter(v32);
    if ((v34 & 1) != 0 || v28 <= a2)
    {
      swift_release(v26);
    }
    else
    {
      Artwork.size.getter(v34);
      AspectRatio.init(_:_:)(v35);
      v36 = AspectRatio.width(fromHeight:)(a2);
      v29(v21, v17);
      swift_release(v26);
      v37 = floor(v36);
      if (v37 < a1)
        a1 = v37;
    }
  }
  else
  {
    v33 = 0.0;
  }
  v38 = (void *)((uint64_t (*)(void))FramedMedia.caption.getter)();
  v39 = (uint64_t)objc_msgSend(v38, "length");

  if (v39 >= 1)
  {
    v40 = a1 + -20.0 + -20.0;
    v41 = FramedMedia.ordinal.getter();
    if (v42)
    {
      v43 = v41;
      v44 = v42;
      if (qword_100806540 != -1)
        swift_once(&qword_100806540, sub_1004C943C);
      v45 = sub_10000EFC4(v14, (uint64_t)qword_10086A098);
      v46 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v16, v45, v14);
      v47 = type metadata accessor for Feature(0);
      v99 = (void *)v47;
      v100 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v48 = sub_1000119C0(aBlock);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v48, enum case for Feature.measurement_with_labelplaceholder(_:), v47);
      LOBYTE(v47) = isFeatureEnabled(_:)(aBlock);
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(aBlock);
      v93 = v47 & 1;
      v49 = v97;
      v50 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v43, v44, v16, 4, 4, 0, 0, 0, a1 + -20.0 + -20.0, 1.79769313e308, v97, v93);
      v51 = swift_bridgeObjectRelease(v44);
      (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v16, v14, v51);
      if (qword_100804BC0 != -1)
        swift_once(&qword_100804BC0, sub_10017BDCC);
      v52 = type metadata accessor for StaticDimension(0);
      v53 = sub_10000EFC4(v52, (uint64_t)qword_100865760);
      static Dimensions.defaultRoundingRule.getter(v53);
      v54 = AnyDimension.value(in:rounded:)(v49, v13, v52, &protocol witness table for StaticDimension);
      v55 = *(void (**)(char *, uint64_t))(v94 + 8);
      v55(v13, v11);
      if (qword_100804BD0 != -1)
        swift_once(&qword_100804BD0, sub_10017BDEC);
      v56 = v40 - v50;
      v57 = sub_10000EFC4(v52, (uint64_t)qword_100865790);
      static Dimensions.defaultRoundingRule.getter(v57);
      v58 = AnyDimension.value(in:rounded:)(v49, v13, v52, &protocol witness table for StaticDimension);
      v55(v13, v11);
      v59 = v54 + v58;
      if (qword_100804BC8 != -1)
        swift_once(&qword_100804BC8, sub_10017BDDC);
      v40 = v56 + -30.0;
      v60 = sub_10000EFC4(v52, (uint64_t)qword_100865778);
      static Dimensions.defaultRoundingRule.getter(v60);
      v61 = AnyDimension.value(in:rounded:)(v49, v13, v52, &protocol witness table for StaticDimension);
      v41 = ((uint64_t (*)(char *, uint64_t))v55)(v13, v11);
      v62 = v59 + v61;
    }
    else
    {
      v62 = 0.0;
      v49 = v97;
    }
    v63 = (id)FramedMedia.caption.getter(v41);
    v64 = objc_msgSend(v49, "traitCollection");
    v65 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v63);
    v66 = objc_msgSend(v63, "length");
    v67 = swift_allocObject(&unk_100737120, 41, 7);
    *(_QWORD *)(v67 + 16) = 0;
    *(_QWORD *)(v67 + 24) = v64;
    *(_QWORD *)(v67 + 32) = v65;
    *(_BYTE *)(v67 + 40) = 1;
    v68 = swift_allocObject(&unk_100737148, 32, 7);
    *(_QWORD *)(v68 + 16) = sub_1000283A4;
    *(_QWORD *)(v68 + 24) = v67;
    v100 = (uint64_t)sub_1000283A8;
    v101 = v68;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027208;
    v99 = &unk_100737160;
    v69 = _Block_copy(aBlock);
    v70 = v101;
    v71 = v64;
    v72 = v65;
    swift_retain(v68);
    objc_msgSend(v63, "enumerateAttributesInRange:options:usingBlock:", 0, v66, 0x100000, v69, swift_release(v70).n128_f64[0]);
    _Block_release(v69);
    LOBYTE(v66) = swift_isEscapingClosureAtFileLocation(v68, "", 113, 30, 92, 1);

    swift_release(v67);
    swift_release(v68);
    if ((v66 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v73 = qword_100806538;
      v63 = v72;
      if (v73 == -1)
      {
LABEL_30:
        v74 = sub_10000EFC4(v14, (uint64_t)qword_10086A080);
        v76 = (uint64_t)v95;
        v75 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v74, v14);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v14);
        v77 = type metadata accessor for Feature(0);
        v99 = (void *)v77;
        v100 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
        v78 = sub_1000119C0(aBlock);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v77 - 8) + 104))(v78, enum case for Feature.measurement_with_labelplaceholder(_:), v77);
        LOBYTE(v77) = isFeatureEnabled(_:)(aBlock);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(aBlock);
        LOBYTE(v92) = v77 & 1;
        v79 = v97;
        v80 = static LabelPlaceholderCompatibility.measurements(attributedText:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v72, v76, 4, 0, 0, 0, 0, v97, v40, 1.79769313e308, v92);
        v82 = v81;
        v84 = v83;
        v86 = v85;

        sub_100010F2C(v76, (uint64_t *)&unk_100808F50);
        if (qword_100804BC0 != -1)
          swift_once(&qword_100804BC0, sub_10017BDCC);
        v87 = type metadata accessor for StaticDimension(0);
        sub_10000EFC4(v87, (uint64_t)qword_100865760);
        v88 = v82
            + AnyDimension.topMargin(from:in:)(v79, v87, &protocol witness table for StaticDimension, v80, v82, v84, v86);
        if (qword_100804BC8 != -1)
          swift_once(&qword_100804BC8, sub_10017BDDC);
        sub_10000EFC4(v87, (uint64_t)qword_100865778);
        v89 = AnyDimension.bottomMargin(from:in:)(v79, v87, &protocol witness table for StaticDimension, v80, v82, v84, v86);

        v90 = v88 + v89;
        if (v62 > v88 + v89)
          v90 = v62;
        v33 = v33 + v90;
        return CGSize.integral.getter(a1, v33);
      }
    }
    swift_once(&qword_100806538, sub_1004C9424);
    goto LABEL_30;
  }
  return CGSize.integral.getter(a1, v33);
}

void sub_100027B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _BYTE *v5;
  _BYTE *v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  double v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  NSString v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double *v46;
  id v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v6 = v5;
  v8 = (void *)FramedMedia.caption.getter(a1);
  v9 = (uint64_t)objc_msgSend(v8, "length");

  v11 = &selRef_fileURLWithPath_;
  if (v9 >= 1)
  {
    v12 = (void *)FramedMedia.caption.getter(v10);
    v13 = objc_msgSend(a5, "traitCollection");
    v14 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v12);
    v47 = objc_msgSend(v12, "length");
    v15 = swift_allocObject(&unk_1007370A8, 41, 7);
    *(_QWORD *)(v15 + 16) = 0;
    *(_QWORD *)(v15 + 24) = v13;
    *(_QWORD *)(v15 + 32) = v14;
    *(_BYTE *)(v15 + 40) = 1;
    v16 = swift_allocObject(&unk_1007370D0, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_100028028;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_100028048;
    v49 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027208;
    aBlock[3] = &unk_1007370E8;
    v17 = _Block_copy(aBlock);
    v18 = v49;
    v19 = v13;
    v20 = v14;
    swift_retain(v16);
    objc_msgSend(v12, "enumerateAttributesInRange:options:usingBlock:", 0, v47, 0x100000, v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v16, "", 113, 30, 92, 1);

    swift_release(v15);
    *(_QWORD *)&v21 = swift_release(v16).n128_u64[0];
    if ((v14 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v12 = *(void **)&v6[qword_1008124D8];
      objc_msgSend(v12, "setAttributedText:", v20, v21);
      if (qword_100804BD8 == -1)
      {
LABEL_4:
        objc_msgSend(v12, "setTextColor:", qword_1008657A8);
        v6[qword_1008657C0] = 1;
        v22 = *(void **)&v6[qword_1008124C8];
        objc_msgSend(v22, "setHidden:", 0);

        v11 = &selRef_fileURLWithPath_;
        goto LABEL_6;
      }
    }
    swift_once(&qword_100804BD8, sub_10017BF50);
    goto LABEL_4;
  }
  objc_msgSend(*(id *)&v6[qword_1008124D8], "setText:", 0);
  v6[qword_1008657C0] = 0;
  v22 = *(void **)&v6[qword_1008124C8];
  v23 = objc_msgSend(v22, "setHidden:", 1);
LABEL_6:
  v24 = *(void **)&v6[qword_1008124D0];
  FramedMedia.ordinal.getter(v23);
  if (v25)
  {
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v24, v11[180], v28, v26);

  v6[qword_1008657B8] = (FramedMedia.isFullWidth.getter(v29) & 1) == 0;
  sub_1000270C8();
  v31 = FramedMedia.isFullWidth.getter(v30);
  if ((v31 & 1) == 0 && v6[qword_1008657C0] != 1)
  {
    type metadata accessor for ArtworkView(0);
    v31 = static ArtworkView.iconBorderWidth.getter();
  }
  dispatch thunk of RoundedCornerView.borderWidth.setter(v31);
  if ((FramedMedia.isFullWidth.getter(v32) & 1) != 0)
  {
    v33 = objc_msgSend(v22, "setBackgroundColor:", 0);
  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v34 = (void *)static UIColor.placeholderBackground.getter();
    objc_msgSend(v22, "setBackgroundColor:", v34);

  }
  v35 = FramedArtwork.artwork.getter(v33);
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v6, "contentView");
    v38 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v38);
    v40 = v39;

    Artwork.size.getter(v41);
    v43 = v42;
    v45 = Artwork.size.getter(v44);
    swift_release(v36);
    v46 = (double *)&v6[qword_10086B898];
    *v46 = v40;
    v46[1] = v40 * (v43 / v45);
  }
}

void sub_100028028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100314CC4(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(unsigned __int8 *)(v4 + 40));
}

uint64_t sub_100028038()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100028048()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100028068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100028078(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100028084()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1000280B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000280C8(double a1, double a2, uint64_t a3, void *a4, uint64_t a5)
{
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  __n128 v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  _QWORD v38[5];
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v35 = a5;
  v32 = a4;
  v34 = type metadata accessor for AspectRatio(0);
  v33 = *(_QWORD *)(v34 - 8);
  v7 = __chkstk_darwin(v34);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Shelf.items.getter(v7);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain(v10);
  v12 = 0;
  while (1)
  {
    if (v12 == v11)
    {
      v43 = 0;
      v12 = v11;
      v41 = 0u;
      v42 = 0u;
      goto LABEL_11;
    }
    if (v12 >= *(_QWORD *)(v10 + 16))
      break;
    sub_10000EF80(v10 + 32 + 40 * v12++, (uint64_t)&v41);
LABEL_11:
    sub_100027004((uint64_t)&v41, (uint64_t)&v39);
    if (!v40)
    {
      swift_bridgeObjectRelease_n(v10, 2);
      return;
    }
    sub_100010E24(&v39, (uint64_t)v38);
    sub_10000EF80((uint64_t)v38, (uint64_t)v36);
    v19 = sub_10000DAF8(&qword_10080E910);
    v20 = type metadata accessor for FramedArtwork(0);
    if ((swift_dynamicCast(&v37, v36, v19, v20, 6) & 1) != 0)
    {
      v21 = v37;
      v22 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v38);
      if (v21)
      {
        v23 = FramedArtwork.artwork.getter(v22);
        if (v23)
        {
          v24 = v23;
          v25 = swift_retain(v21);
          v26 = FramedMedia.isFullWidth.getter(v25);
          *(_QWORD *)&v28 = swift_release(v21).n128_u64[0];
          v29 = a1;
          if ((v26 & 1) == 0)
          {
            v27 = objc_msgSend(v32, "pageMarginInsets", v28);
            v29 = a1 - v30 - v31;
          }
          Artwork.size.getter(v27);
          AspectRatio.init(_:_:)(v13);
          v14 = AspectRatio.height(fromWidth:)(v29);
          v15 = swift_retain(v21);
          v16 = FramedMedia.isFullWidth.getter(v15);
          swift_release(v21);
          if (!(v16 & 1 | (v14 < a2)))
            v14 = a2;
          v17 = AspectRatio.width(fromHeight:)(v14);
          v18 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v17, v14);
          v43 = 0;
          v41 = 0u;
          v42 = 0u;
          ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v18, 0, 1, &v41, 0, 0);
          swift_release(v21);
          swift_release(v24);
          swift_release(v18);
          sub_100010F2C((uint64_t)&v41, &qword_100809010);
          (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
        }
        else
        {
          swift_release(v21);
        }
      }
    }
    else
    {
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v38);
    }
  }
  __break(1u);
}

uint64_t sub_1000283B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808820);
  sub_100011980(v0, qword_100864858);
  sub_10000EFC4(v0, (uint64_t)qword_100864858);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

uint64_t sub_10002843C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_1008086C0);
  sub_10000EFC4(v5, (uint64_t)qword_1008086C0);
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100869F18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 35.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100028590(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_1008086D8);
  sub_10000EFC4(v5, (uint64_t)qword_1008086D8);
  if (qword_1008064E8 != -1)
    swift_once(&qword_1008064E8, sub_1004C9240);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100869F90);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 28.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_1000286DC()
{
  double result;

  result = 14.0;
  __asm { FMOV            V1.2D, #20.0 }
  xmmword_1008086F0 = xmmword_1006413C0;
  *(_OWORD *)&qword_100808700 = _Q1;
  return result;
}

char *sub_1000286F8(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  objc_class *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  objc_class *v37;
  id v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t);
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  objc_super v57;

  v9 = type metadata accessor for AutomationSemantics(0);
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DirectionalTextAlignment(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel;
  v48 = (uint64_t)v4;
  v19 = qword_1008064B8;
  v20 = v4;
  if (v19 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_10000EFC4(v21, (uint64_t)qword_100869F00);
  v23 = *(_QWORD *)(v21 - 8);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v52(v18, v22, v21);
  v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v51(v18, 0, 1, v21);
  v24 = enum case for DirectionalTextAlignment.none(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v25(v15, enum case for DirectionalTextAlignment.none(_:), v12);
  v26 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v27 = objc_allocWithZone(v26);
  v28 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v18, 1, 0, 1, 0, v15, 0, 0);
  *(_QWORD *)(v48 + v47) = v28;
  v48 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel;
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v29 = sub_10000EFC4(v21, (uint64_t)qword_100869F18);
  v52(v18, v29, v21);
  v51(v18, 0, 1, v21);
  v25(v15, v24, v12);
  v30 = objc_allocWithZone(v26);
  v31 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v18, 3, 0, 1, 0, v15, 0, 0);
  *(_QWORD *)&v20[v48] = v31;
  v32 = v12;
  v33 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel;
  if (qword_1008064E8 != -1)
    swift_once(&qword_1008064E8, sub_1004C9240);
  v34 = sub_10000EFC4(v21, (uint64_t)qword_100869F90);
  v52(v18, v34, v21);
  v51(v18, 0, 1, v21);
  v25(v15, v24, v32);
  v35 = objc_allocWithZone(v26);
  *(_QWORD *)&v20[v33] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v18, 2, 0, 1, 0, v15, 0, 0);
  v20[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_isExpanded] = 0;
  v20[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_sizeCategory] = 7;
  v20[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_wantsCardConsistentMargins] = 1;
  v36 = &v20[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_clickActionHandler];
  *v36 = 0;
  v36[1] = 0;

  v37 = (objc_class *)type metadata accessor for TodayCardThreeLineOverlayView();
  v57.receiver = v20;
  v57.super_class = v37;
  v38 = objc_msgSendSuper2(&v57, "initWithFrame:", a1, a2, a3, a4);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v39 = (char *)v38;
  v40 = (void *)static UIColor.todayCardDefaultBackground.getter();
  objc_msgSend(v39, "setBackgroundColor:", v40);

  v41 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel;
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x676E6964616568, 0xE700000000000000, &v55, &v53);
  sub_10001282C((uint64_t)&v53);
  sub_10001282C((uint64_t)&v55);
  UIView.setAutomationSemantics(_:)(v11);
  v42 = v50;
  v43 = *(void (**)(char *, uint64_t))(v49 + 8);
  v43(v11, v50);
  v44 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel;
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974, 0xE500000000000000, &v55, &v53);
  sub_10001282C((uint64_t)&v53);
  sub_10001282C((uint64_t)&v55);
  UIView.setAutomationSemantics(_:)(v11);
  v43(v11, v42);
  v45 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel;
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x7470697263736564, 0xEB000000006E6F69, &v55, &v53);
  sub_10001282C((uint64_t)&v53);
  sub_10001282C((uint64_t)&v55);
  UIView.setAutomationSemantics(_:)(v11);
  v43(v11, v42);
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[v41]);
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[v44]);
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v39[v45]);

  return v39;
}

id sub_100028CBC()
{
  char *v0;
  char *v1;
  objc_class *v2;
  uint64_t v3;
  CGFloat v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  double MaxY;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  CGFloat v30;
  double v31;
  void *v32;
  id v33;
  double v34;
  double v35;
  objc_super v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for TodayCardThreeLineOverlayView();
  v37.receiver = v0;
  v37.super_class = v2;
  objc_msgSendSuper2(&v37, "layoutSubviews");
  v38.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetWidth(v38);
  if (qword_100804580 != -1)
    v3 = swift_once(&qword_100804580, sub_1000286DC);
  v4 = *((double *)&xmmword_1008086F0 + 1);
  v5 = *(double *)&xmmword_1008086F0;
  v6 = CGSize.subtracting(insets:)(v3);
  v8 = v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel];
  v10 = objc_msgSend(v9, "text");
  if (v10)
  {

    objc_msgSend(v9, "measurementsWithFitting:in:", v0, v6, v8);
    v12 = v11;
    v14 = v13;
    v15 = LayoutMarginsAware<>.layoutFrame.getter(v2);
    CGRect.withLayoutDirection(in:relativeTo:)(v0, v15);
    objc_msgSend(v9, "setFrame:");
    objc_msgSend(v9, "jet_languageAwareOutsets");
    v17 = v16;
    v39.origin.x = v4;
    v39.origin.y = v5;
    v39.size.width = v6;
    v39.size.height = v12;
    v5 = v17 + CGRectGetMaxY(v39) - v14;
  }
  v18 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel];
  v19 = objc_msgSend(v18, "text");
  if (v19)
  {

    objc_msgSend(v18, "measurementsWithFitting:in:", v0, v6, v8);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    if (qword_100804570 != -1)
      swift_once(&qword_100804570, sub_10002843C);
    v29 = type metadata accessor for StaticDimension(0);
    sub_10000EFC4(v29, (uint64_t)qword_1008086C0);
    v30 = v5
        + AnyDimension.topMargin(from:in:)(v1, v29, &protocol witness table for StaticDimension, v22, v24, v26, v28);
    v31 = LayoutMarginsAware<>.layoutFrame.getter(v2);
    CGRect.withLayoutDirection(in:relativeTo:)(v1, v31);
    objc_msgSend(v18, "setFrame:");
    v40.origin.x = v4;
    v40.origin.y = v30;
    v40.size.width = v6;
    v40.size.height = v24;
    MaxY = CGRectGetMaxY(v40);
  }
  v32 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel];
  v33 = objc_msgSend(v32, "text", MaxY);
  if (v33)
  {

    if ((v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_isExpanded] & 1) == 0)
    {
      objc_msgSend(v32, "measurementsWithFitting:in:", v1, v6, v8);
      v41.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
      CGRectGetMaxY(v41);
      v34 = LayoutMarginsAware<>.layoutFrame.getter(v2);
      CGRect.withLayoutDirection(in:relativeTo:)(v1, v34);
      objc_msgSend(v32, "setFrame:");
    }
  }
  v35 = 1.0;
  if (v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_isExpanded])
    v35 = 0.0;
  return objc_msgSend(v32, "setAlpha:", v35);
}

double sub_10002905C(double a1)
{
  char *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  __n128 v20;
  double v21;

  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel], "text");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel], "text");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v13 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel], "text");
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v18 = v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_isExpanded];
  objc_msgSend(v1, "layoutMargins");
  v19 = objc_msgSend(v1, "traitCollection");
  v20.n128_f64[0] = a1;
  v21 = sub_100029A0C(v5, v7, v10, v12, v15, v17, v18, v19, v20);

  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v7);
  return v21;
}

id sub_100029270(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id result;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for TodayCardThreeLineOverlayView();
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = objc_msgSend(v4, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v5 != result))
  {
    if (qword_1008068A0 != -1)
      swift_once(&qword_1008068A0, sub_1004DFF60);
    v7 = sub_10000DAF8((uint64_t *)&unk_100808820);
    sub_10000EFC4(v7, (uint64_t)qword_10086A950);
    v8 = v2;
    Conditional.evaluate(with:)(&v9, &v8, v7);
    UILabel.alignment.setter(v9);
    if (qword_1008068B0 != -1)
      swift_once(&qword_1008068B0, sub_1004E00C0);
    sub_10000EFC4(v7, (uint64_t)qword_10086A980);
    v8 = v2;
    Conditional.evaluate(with:)(&v9, &v8, v7);
    UILabel.alignment.setter(v9);
    if (qword_100804568 != -1)
      swift_once(&qword_100804568, sub_1000283B4);
    sub_10000EFC4(v7, (uint64_t)qword_100864858);
    v8 = v2;
    Conditional.evaluate(with:)(&v9, &v8, v7);
    return (id)UILabel.alignment.setter(v9);
  }
  return result;
}

id sub_1000294A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayCardThreeLineOverlayView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TodayCardThreeLineOverlayView()
{
  return objc_opt_self(_TtC20ProductPageExtension29TodayCardThreeLineOverlayView);
}

id sub_100029554(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  return sub_10002A0C4(*a1, a3, a4, a5);
}

id sub_100029568()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

uint64_t sub_10002958C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_isExpanded) = result;
  return result;
}

uint64_t sub_10002959C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_wantsCardConsistentMargins);
}

uint64_t sub_1000295AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_clickActionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_clickActionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_clickActionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100018908(v4, v5);
}

id sub_1000295CC()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel), "setText:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel), "setText:", 0);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel), "setText:", 0);
}

uint64_t sub_10002962C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "accessibilityElements");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  return v3;
}

uint64_t sub_100029688()
{
  return sub_10000E720(&qword_100808770, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardThreeLineOverlay, (uint64_t)&protocol conformance descriptor for TodayCardOverlay);
}

void sub_1000296B4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  objc_class *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v26 = type metadata accessor for DirectionalTextAlignment(0);
  v2 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel;
  if (qword_1008064B8 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = sub_10000EFC4(v8, (uint64_t)qword_100869F00);
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v7, v9, v8);
  v12 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
  v12(v7, 0, 1, v8);
  v13 = enum case for DirectionalTextAlignment.none(_:);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v14(v4, enum case for DirectionalTextAlignment.none(_:), v26);
  v15 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v16 = objc_allocWithZone(v15);
  v17 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 1, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v25] = v17;
  v25 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel;
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v18 = sub_10000EFC4(v8, (uint64_t)qword_100869F18);
  v11(v7, v18, v8);
  v12(v7, 0, 1, v8);
  v14(v4, v13, v26);
  v19 = objc_allocWithZone(v15);
  v20 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 3, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v25] = v20;
  v25 = OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel;
  if (qword_1008064E8 != -1)
    swift_once(&qword_1008064E8, sub_1004C9240);
  v21 = sub_10000EFC4(v8, (uint64_t)qword_100869F90);
  v11(v7, v21, v8);
  v12(v7, 0, 1, v8);
  v14(v4, v13, v26);
  v22 = objc_allocWithZone(v15);
  v23 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 2, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v25] = v23;
  v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_isExpanded] = 0;
  v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_sizeCategory] = 7;
  v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_wantsCardConsistentMargins] = 1;
  v24 = &v1[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_clickActionHandler];
  *v24 = 0;
  v24[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/TodayCardThreeLineOverlayView.swift", 56, 2, 70, 0);
  __break(1u);
}

double sub_100029A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, void *a8, __n128 a9)
{
  double v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  double v71;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;

  v75 = a7;
  v74 = a5;
  v15 = a9.n128_f64[0];
  v16 = type metadata accessor for LabelPlaceholderCompatibility(0, a9);
  v76 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = CGSize.subtracting(insets:)(v19);
  v22 = v21;
  if (!a2)
  {
    v33 = 0.0;
    v34 = &unk_100640000;
    if (!a4)
      goto LABEL_12;
    goto LABEL_7;
  }
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_1008064B8 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10000EFC4(v23, (uint64_t)qword_100869F00);
  v25 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v24, a8);
  v26 = type metadata accessor for Feature(0);
  v78 = v26;
  v79 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v27 = sub_1000119C0(v77);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v27, enum case for Feature.measurement_with_labelplaceholder(_:), v26);
  v28 = (id)v25;
  LOBYTE(v25) = isFeatureEnabled(_:)(v77);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v77);
  swift_bridgeObjectRetain(a2);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(a1, a2, v28, 4, 0, 0, 1, 0, v25 & 1);
  LabelPlaceholderCompatibility.measurements(fitting:with:)(a8, v20, v22);
  v30 = v29;
  v32 = v31;

  (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v16);
  v33 = v30 - v32 + 0.0;
  v34 = (_OWORD *)&unk_100640000;
  if (a4)
  {
LABEL_7:
    sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    if (qword_1008064C0 != -1)
      swift_once(&qword_1008064C0, sub_1004C8FF8);
    v35 = type metadata accessor for FontUseCase(0);
    v36 = sub_10000EFC4(v35, (uint64_t)qword_100869F18);
    v37 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v36, a8);
    v38 = type metadata accessor for Feature(0);
    v78 = v38;
    v79 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v39 = sub_1000119C0(v77);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v39, enum case for Feature.measurement_with_labelplaceholder(_:), v38);
    v40 = (id)v37;
    LOBYTE(v37) = isFeatureEnabled(_:)(v77);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v77);
    swift_bridgeObjectRetain(a4);
    LOBYTE(v73) = v37 & 1;
    LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(a3, a4, v40, 4, 0, 0, 3, 0, v73);
    LabelPlaceholderCompatibility.measurements(fitting:with:)(a8, v20, v22);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    if (qword_100804570 != -1)
      swift_once(&qword_100804570, sub_10002843C);
    v47 = type metadata accessor for StaticDimension(0);
    sub_10000EFC4(v47, (uint64_t)qword_1008086C0);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v48 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v49 = swift_allocObject(v48, 40, 7);
    *(_OWORD *)(v49 + 16) = v34[174];
    *(_QWORD *)(v49 + 32) = a8;
    v50 = a8;
    v51 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v49);
    v52 = dispatch thunk of AnyDimension.rawValue(in:)(v51, v47, &protocol witness table for StaticDimension);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v16);
    v33 = v42 - v46 + v33 + v52 - v44;
  }
LABEL_12:
  if (a6 && (v75 & 1) == 0)
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
    v53 = qword_1008064E8;
    swift_bridgeObjectRetain(a6);
    if (v53 != -1)
      swift_once(&qword_1008064E8, sub_1004C9240);
    v54 = type metadata accessor for FontUseCase(0);
    v55 = sub_10000EFC4(v54, (uint64_t)qword_100869F90);
    v56 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v55, a8);
    v57 = type metadata accessor for Feature(0);
    v78 = v57;
    v79 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v58 = sub_1000119C0(v77);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v58, enum case for Feature.measurement_with_labelplaceholder(_:), v57);
    v59 = (id)v56;
    LOBYTE(v56) = isFeatureEnabled(_:)(v77);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v77);
    LOBYTE(v73) = v56 & 1;
    LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v74, a6, v59, 4, 0, 0, 2, 0, v73);
    LabelPlaceholderCompatibility.measurements(fitting:with:)(a8, v20, v22);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    if (qword_100804578 != -1)
      swift_once(&qword_100804578, sub_100028590);
    v66 = type metadata accessor for StaticDimension(0);
    sub_10000EFC4(v66, (uint64_t)qword_1008086D8);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v67 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v68 = swift_allocObject(v67, 40, 7);
    *(_OWORD *)(v68 + 16) = v34[174];
    *(_QWORD *)(v68 + 32) = a8;
    v69 = a8;
    v70 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v68);
    v71 = dispatch thunk of AnyDimension.rawValue(in:)(v70, v66, &protocol witness table for StaticDimension);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v16);
    v33 = v61 - v65 + v33 + v71 - v63;
  }
  if (v33 > 0.0 && qword_100804580 != -1)
    swift_once(&qword_100804580, sub_1000286DC);
  return v15;
}

id sub_10002A0C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  char *v4;
  char *v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;

  v5 = v4;
  v6 = v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_sizeCategory];
  v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_sizeCategory] = a4;
  if (a4 == 7)
  {
    if (v6 == 7)
      goto LABEL_6;
LABEL_5:
    objc_msgSend(v4, "setNeedsLayout");
    goto LABEL_6;
  }
  if (v6 == 7)
    goto LABEL_5;
  switch(a4)
  {
    case 6u:
      if (v6 != 6)
        goto LABEL_5;
      break;
    case 5u:
      if (v6 != 5)
        goto LABEL_5;
      break;
    case 4u:
      if (v6 != 4)
        goto LABEL_5;
      break;
    default:
      if (v6 != a4 || (v6 - 7) >= 0xFFFFFFFD)
        goto LABEL_5;
      break;
  }
LABEL_6:
  v7 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_headingLabel];
  TodayCardThreeLineOverlay.heading.getter();
  if (v8)
  {
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v7, "setText:", v10);

  v11 = (void *)TodayCard.Style.cardHeadingTextColor.getter();
  objc_msgSend(v7, "setTextColor:", v11);

  v12 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_titleLabel];
  TodayCardThreeLineOverlay.title.getter();
  if (v13)
  {
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v12, "setText:", v15);

  v16 = (void *)TodayCard.Style.cardTitleTextColor.getter();
  objc_msgSend(v12, "setTextColor:", v16);

  v17 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension29TodayCardThreeLineOverlayView_descriptionLabel];
  TodayCardThreeLineOverlay.description.getter();
  if (v18)
  {
    v19 = v18;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v17, "setText:", v20);

  v21 = (void *)TodayCard.Style.cardHeadingTextColor.getter();
  objc_msgSend(v17, "setTextColor:", v21);

  return objc_msgSend(v5, "setNeedsLayout");
}

ValueMetadata *type metadata accessor for SearchLandingPageShelfLayoutSpacingProvider()
{
  return &type metadata for SearchLandingPageShelfLayoutSpacingProvider;
}

uint64_t sub_10002A2EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  __n128 v22;
  uint64_t v24;

  v2 = sub_10000DAF8(&qword_100808548);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  v11 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - v16;
  ShelfLayoutContext.surroundingShelves.getter(v7, v4, v15);
  sub_100010F2C((uint64_t)v4, &qword_100808548);
  sub_10002AD98((uint64_t)v7, (uint64_t)v10);
  v18 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18) == 1)
  {
    sub_100010F2C((uint64_t)v10, &qword_100808548);
    v20 = type metadata accessor for Shelf.ContentType(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_1006414D0);
    ReadOnlyLens.subscript.getter(v17, KeyPath, v18);
    v22 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v10, v18, v22);
    v20 = type metadata accessor for Shelf.ContentType(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
  }
  sub_10002ADE0((uint64_t)v17, (uint64_t)v13);
  type metadata accessor for Shelf.ContentType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20) == 1)
  {
    a1[3] = (uint64_t)&type metadata for Double;
    a1[4] = (uint64_t)&protocol witness table for Double;
    *a1 = 0;
  }
  else
  {
    sub_100538870(a1);
    sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_10080F0B0);
    v17 = v13;
  }
  return sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_10080F0B0);
}

uint64_t sub_10002A560@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  __n128 v14;
  int v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;

  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v10);
  KeyPath = swift_getKeyPath(&unk_1006414D0);
  ReadOnlyLens.subscript.getter(v7, KeyPath, v8);
  v14 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v14);
  v15 = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 88))(v7, v4);
  if (v15 == enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:)
    || v15 == enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:))
  {
    if (qword_1008067E8 != -1)
      swift_once(&qword_1008067E8, sub_1004D51EC);
    v18 = type metadata accessor for StaticDimension(0);
    v19 = v18;
    v20 = qword_10086A7E8;
    goto LABEL_13;
  }
  if (v15 == enum case for Shelf.ContentType.action(_:))
  {
    if (qword_100806810 != -1)
      swift_once(&qword_100806810, sub_1004D5240);
    v18 = type metadata accessor for StaticDimension(0);
    v19 = v18;
    v20 = qword_10086A860;
LABEL_13:
    v21 = sub_10000EFC4(v18, (uint64_t)v20);
    *((_QWORD *)a2 + 3) = v19;
    *((_QWORD *)a2 + 4) = &protocol witness table for StaticDimension;
    v22 = sub_1000119C0(a2);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v22, v21, v19);
  }
  sub_100538B00(a1, a2, v16);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10002A770@<X0>(double *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  __n128 v23;
  uint64_t KeyPath;
  __n128 v25;
  double (*v26)(char *, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  double *v43;
  char *v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  double *v54;
  _QWORD *v55;
  char *v56;
  char v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  double *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;

  v65 = a1;
  v1 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v59 - v6;
  v64 = type metadata accessor for Shelf.ContentType(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)&v59 - v10;
  __chkstk_darwin(v11);
  v62 = (char *)&v59 - v12;
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v59 - v14);
  v16 = type metadata accessor for PageGrid(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v22 = PageGrid.interRowSpace.getter(v21);
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  ShelfLayoutContext.shelf.getter(v23);
  KeyPath = swift_getKeyPath(&unk_1006414D0);
  ReadOnlyLens.subscript.getter(v15, KeyPath, v1);
  v25 = swift_release(KeyPath);
  v26 = *(double (**)(char *, uint64_t, __n128))(v2 + 8);
  v27.n128_f64[0] = v26(v7, v1, v25);
  ShelfLayoutContext.shelf.getter(v27);
  v28 = swift_getKeyPath(&unk_100641500);
  ReadOnlyLens.subscript.getter(&v66, v28, v1);
  v29 = swift_release(v28);
  v26(v4, v1, v29);
  v30 = v66;
  if (*(_QWORD *)(v66 + 16))
  {
    sub_10000EF80(v66 + 32, (uint64_t)&v67);
  }
  else
  {
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
  }
  v31 = v22 * 0.5;
  swift_bridgeObjectRelease(v30);
  v32 = v64;
  v33 = v63;
  if (!*((_QWORD *)&v68 + 1))
  {
    sub_100010F2C((uint64_t)&v67, &qword_100819230);
    v70 = 0u;
    v71 = 0u;
    v72 = 0;
    goto LABEL_12;
  }
  v34 = sub_10000DAF8(&qword_10080E910);
  v35 = sub_10000DAF8(&qword_100808858);
  if ((swift_dynamicCast(&v70, &v67, v34, v35, 6) & 1) == 0)
  {
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    goto LABEL_12;
  }
  if (!*((_QWORD *)&v71 + 1))
  {
LABEL_12:
    sub_100010F2C((uint64_t)&v70, &qword_100819250);
LABEL_13:
    v43 = v65;
    *((_QWORD *)v65 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v43 + 4) = &protocol witness table for CGFloat;
    *v43 = v31;
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v33 + 8))(v15, v32);
  }
  sub_100010E24(&v70, (uint64_t)v73);
  v36 = v74;
  v37 = v75;
  sub_100010F08(v73, v74);
  if ((SearchAdProviding.isSearchAd.getter(v36, v37) & 1) == 0)
  {
LABEL_26:
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
    goto LABEL_13;
  }
  v38 = *(void (**)(char *, _QWORD, uint64_t))(v33 + 104);
  v38(v62, enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:), v32);
  v39 = sub_10002AD50();
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v32, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v67, v32, v39);
  v40 = *((_QWORD *)&v70 + 1);
  v41 = *((_QWORD *)&v67 + 1);
  if (v70 == v67)
  {
    v42 = 1;
    v41 = *((_QWORD *)&v70 + 1);
  }
  else
  {
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, *((_QWORD *)&v70 + 1), v67, *((_QWORD *)&v67 + 1), 0);
  }
  v45 = v61;
  swift_bridgeObjectRelease(v40);
  v46 = swift_bridgeObjectRelease(v41);
  v47 = *(void (**)(char *, uint64_t, __n128))(v33 + 8);
  v47(v62, v32, v46);
  (*(void (**)(char *, _QWORD *, uint64_t))(v33 + 16))(v45, v15, v32);
  if ((v42 & 1) != 0)
    goto LABEL_18;
  v48 = v60;
  v38(v60, enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:), v32);
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v32, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v67, v32, v39);
  v49 = *((_QWORD *)&v70 + 1);
  v50 = *((_QWORD *)&v67 + 1);
  if (v70 != v67)
  {
    v56 = v45;
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, *((_QWORD *)&v70 + 1), v67, *((_QWORD *)&v67 + 1), 0);
    swift_bridgeObjectRelease(v49);
    v58 = swift_bridgeObjectRelease(v50);
    v47(v48, v32, v58);
    ((void (*)(char *, uint64_t))v47)(v56, v32);
    if ((v57 & 1) != 0)
      goto LABEL_19;
    if (qword_1008059C0 != -1)
      swift_once(&qword_1008059C0, sub_10039A9BC);
    v31 = v31 + fabs(*(double *)&xmmword_100867C90);
    goto LABEL_26;
  }
  v51 = swift_bridgeObjectRelease_n(*((_QWORD *)&v70 + 1), 2);
  v47(v48, v32, v51);
LABEL_18:
  ((void (*)(char *, uint64_t))v47)(v45, v32);
LABEL_19:
  if (qword_1008067E8 != -1)
    swift_once(&qword_1008067E8, sub_1004D51EC);
  v52 = type metadata accessor for StaticDimension(0);
  v53 = sub_10000EFC4(v52, (uint64_t)qword_10086A7E8);
  v54 = v65;
  *((_QWORD *)v65 + 3) = v52;
  *((_QWORD *)v54 + 4) = &protocol witness table for StaticDimension;
  v55 = sub_1000119C0(v54);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v55, v53, v52);
  ((void (*)(_QWORD *, uint64_t))v47)(v15, v32);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v73);
}

unint64_t sub_10002AD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808860;
  if (!qword_100808860)
  {
    v1 = type metadata accessor for Shelf.ContentType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Shelf.ContentType, v1);
    atomic_store(result, (unint64_t *)&qword_100808860);
  }
  return result;
}

uint64_t sub_10002AD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100808548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002ADE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

CGFloat sub_10002AE28()
{
  CGFloat result;
  CATransform3D v1;
  CGAffineTransform m;

  CGAffineTransformMakeScale((CGAffineTransform *)&v1, 1.0, -1.0);
  *(_OWORD *)&m.a = *(_OWORD *)&v1.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&v1.m13;
  *(_OWORD *)&m.tx = *(_OWORD *)&v1.m21;
  CATransform3DMakeAffineTransform(&v1, &m);
  result = v1.m11;
  *(CATransform3D *)byte_100864870 = v1;
  return result;
}

uint64_t sub_10002AEC0()
{
  return type metadata accessor for RevealingImageMirrorView(0);
}

uint64_t type metadata accessor for RevealingImageMirrorView(uint64_t a1)
{
  uint64_t result;

  result = qword_100808890;
  if (!qword_100808890)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RevealingImageMirrorView);
  return result;
}

uint64_t sub_10002AF04(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 480);
}

uint64_t sub_10002AF38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;

  sub_10002D038(a1, a2, a3, a4, a5, a6);
  v9 = v8;
  swift_bridgeObjectRelease(a3);
  swift_unknownObjectRelease(a4);
  return v9;
}

uint64_t sub_10002AF98()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10000DAF8(&qword_100808978);
  sub_100011980(v0, qword_1008088A0);
  sub_10000EFC4(v0, (uint64_t)qword_1008088A0);
  v1 = sub_10000DAF8((uint64_t *)&unk_100808990);
  return PreferenceKey.init(_:)(0xD00000000000001BLL, 0x80000001006863C0, v1);
}

uint64_t sub_10002B010(uint64_t a1)
{
  return sub_10002B1C0(a1, qword_1008088B8, 0x65676175676E616CLL, 0xE800000000000000);
}

uint64_t sub_10002B030()
{
  uint64_t v0;

  v0 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  sub_100011980(v0, qword_1008088D0);
  sub_10000EFC4(v0, (uint64_t)qword_1008088D0);
  return PreferenceKey.init(_:)(0x72656D6165726373, 0xEC00000065646F4DLL, &type metadata for Bool);
}

uint64_t sub_10002B0A0()
{
  uint64_t v0;

  v0 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  sub_100011980(v0, qword_1008088E8);
  sub_10000EFC4(v0, (uint64_t)qword_1008088E8);
  return PreferenceKey.init(_:)(0xD000000000000018, 0x80000001006862E0, &type metadata for Bool);
}

uint64_t sub_10002B10C()
{
  uint64_t v0;

  v0 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  sub_100011980(v0, qword_100808900);
  sub_10000EFC4(v0, (uint64_t)qword_100808900);
  return PreferenceKey.init(_:)(0xD000000000000011, 0x80000001006862C0, &type metadata for Bool);
}

uint64_t sub_10002B178(uint64_t a1)
{
  return sub_10002B1C0(a1, qword_100808918, 0xD00000000000001ELL, 0x80000001006862A0);
}

uint64_t sub_10002B19C(uint64_t a1)
{
  return sub_10002B1C0(a1, qword_100808930, 0xD000000000000020, 0x8000000100686390);
}

uint64_t sub_10002B1C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_10000DAF8(&qword_100808970);
  sub_100011980(v7, a2);
  sub_10000EFC4(v7, (uint64_t)a2);
  return PreferenceKey.init(_:)(a3, a4, &type metadata for String);
}

uint64_t sub_10002B228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  _QWORD *v70;
  uint64_t v71;
  __int128 v72;
  _QWORD *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t ObjectType;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;

  ObjectType = swift_getObjectType();
  v0 = type metadata accessor for UUID(0);
  v107 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v113 = (char *)&v105 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v111 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v109 = (char *)&v105 - v6;
  v7 = sub_10000DAF8(&qword_100808970);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalPreferences(0);
  v12 = static LocalPreferences.currentApplication.getter();
  if (qword_100804590 != -1)
    swift_once(&qword_100804590, sub_10002AF98);
  v117 = v4;
  v13 = sub_10000DAF8(&qword_100808978);
  v14 = sub_10000EFC4(v13, (uint64_t)qword_1008088A0);
  v15 = Preferences.subscript.getter(v14, v11, &protocol witness table for LocalPreferences);
  v17 = v16;
  swift_release(v12);
  v18 = swift_getObjectType();
  if (qword_1008045C0 != -1)
    swift_once(&qword_1008045C0, sub_10002B19C);
  v115 = v0;
  v19 = sub_10000EFC4(v7, (uint64_t)qword_100808930);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v7);
  v121 = xmmword_100641580;
  v118 = v18;
  v20 = Preferences.subscript.setter(&v121, v10, v18, &type metadata for String, v17);
  v21 = static Locale.availableIdentifiers.getter(v20);
  *(_QWORD *)&v121 = v21;
  swift_bridgeObjectRetain(v21);
  sub_10002C440((uint64_t *)&v121);
  swift_bridgeObjectRelease(v21);
  v22 = v121;
  v23 = sub_1003AEC10(v121);
  swift_release(v22);
  *(_QWORD *)&v121 = &off_100734E50;
  sub_10001A4CC((uint64_t)v23);
  v24 = v121;
  swift_unknownObjectRetain(v15);
  v25 = ObjectType;
  v26 = sub_10002AF38(v24, 0x636F4C7465736E75, 0xED00006449656C61, v15, v17, ObjectType);
  swift_bridgeObjectRelease(v24);
  v112 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v27 = swift_allocObject(v112, 104, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100641590;
  v28 = swift_allocObject(&unk_1007372C8, 56, 7);
  *(_QWORD *)(v28 + 16) = v15;
  *(_QWORD *)(v28 + 24) = v17;
  strcpy((char *)(v28 + 32), "unsetLocaleId");
  *(_WORD *)(v28 + 46) = -4864;
  *(_QWORD *)(v28 + 48) = v25;
  v108 = type metadata accessor for MenuDebugSetting();
  swift_allocObject(v108, 96, 7);
  swift_unknownObjectRetain(v15);
  sub_100085A64(0xD000000000000011, 0x8000000100686120, v26, (uint64_t)sub_10002C4D4, v28);
  v116 = (_QWORD *)v27;
  *(_QWORD *)(v27 + 32) = v29;
  if (qword_1008045A0 != -1)
    swift_once(&qword_1008045A0, sub_10002B030);
  v110 = v19;
  v30 = sub_10000EFC4(v2, (uint64_t)qword_1008088D0);
  v31 = v111;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
  v33 = v109;
  v32(v109, v30, v2);
  v34 = (uint64_t)v117;
  v32(v117, (uint64_t)v33, v2);
  v35 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v36 = swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  swift_unknownObjectRetain(v15);
  v37 = v118;
  v38 = sub_1000FD1D8(0x72656D6165726353, 0xED000065646F4D20, 0xD000000000000025, 0x8000000100686140, 0, v34, v15, v36, v118, v17);
  v39 = swift_unknownObjectRelease(v15);
  v111 = *(_QWORD *)(v31 + 8);
  ((void (*)(char *, uint64_t, __n128))v111)(v33, v2, v39);
  v116[5] = v38;
  v40 = v17;
  if (qword_1008045A8 != -1)
    swift_once(&qword_1008045A8, sub_10002B0A0);
  v41 = sub_10000EFC4(v2, (uint64_t)qword_1008088E8);
  v32(v33, v41, v2);
  v42 = (uint64_t)v117;
  v32(v117, (uint64_t)v33, v2);
  v43 = swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  swift_unknownObjectRetain(v15);
  v44 = sub_1000FD1D8(0xD000000000000011, 0x8000000100686170, 0xD00000000000002CLL, 0x8000000100686190, 1, v42, v15, v43, v37, v17);
  v45 = swift_unknownObjectRelease(v15);
  ((void (*)(char *, uint64_t, __n128))v111)(v33, v2, v45);
  v46 = v116;
  v116[6] = v44;
  v106 = type metadata accessor for InfoDebugSetting();
  v47 = v33;
  v48 = (_QWORD *)swift_allocObject(v106, 88, 7);
  v48[7] = 0xD000000000000013;
  v48[8] = 0x80000001006861C0;
  v48[9] = 0xD00000000000001CLL;
  v48[10] = 0x80000001006861E0;
  v49 = v113;
  v51 = UUID.init()(v50);
  v52 = v2;
  v53 = UUID.uuidString.getter(v51);
  v105 = v40;
  v54 = v46;
  v56 = v55;
  v107 = *(_QWORD *)(v107 + 8);
  ((void (*)(char *, uint64_t))v107)(v49, v115);
  *(_QWORD *)&v121 = v53;
  *((_QWORD *)&v121 + 1) = v56;
  v57 = v54;
  AnyHashable.init<A>(_:)(&v121, &type metadata for String, &protocol witness table for String);
  v54[7] = v48;
  if (qword_1008045B0 != -1)
    swift_once(&qword_1008045B0, sub_10002B10C);
  v58 = sub_10000EFC4(v52, (uint64_t)qword_100808900);
  v32(v47, v58, v52);
  v59 = (uint64_t)v117;
  v32(v117, (uint64_t)v47, v52);
  v60 = swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  swift_unknownObjectRetain(v15);
  v61 = v105;
  v62 = sub_1000FD1D8(0xD000000000000012, 0x8000000100686200, 0xD000000000000030, 0x8000000100686220, 0, v59, v15, v60, v118, v105);
  v63 = swift_unknownObjectRelease(v15);
  ((void (*)(char *, uint64_t, __n128))v111)(v47, v52, v63);
  v57[8] = v62;
  v64 = swift_allocObject(v112, 56, 7);
  *(_OWORD *)(v64 + 16) = xmmword_1006415A0;
  v119 = 1701736302;
  v120 = 0xE400000000000000;
  AnyHashable.init<A>(_:)(&v119, &type metadata for String, &protocol witness table for String);
  v65 = (_QWORD *)swift_allocObject(&unk_1007372F0, 40, 7);
  v65[2] = v15;
  v65[3] = v61;
  v66 = ObjectType;
  v65[4] = ObjectType;
  v67 = type metadata accessor for MenuItemDebugSetting();
  v68 = swift_allocObject(v67, 96, 7);
  *(_BYTE *)(v68 + 72) = 0;
  *(_QWORD *)(v68 + 56) = 1701736270;
  *(_QWORD *)(v68 + 64) = 0xE400000000000000;
  *(_QWORD *)(v68 + 80) = sub_10002D150;
  *(_QWORD *)(v68 + 88) = v65;
  v69 = v122;
  *(_OWORD *)(v68 + 16) = v121;
  *(_OWORD *)(v68 + 32) = v69;
  *(_QWORD *)(v68 + 48) = v123;
  *(_QWORD *)(v64 + 32) = v68;
  v119 = 0x646E616D65446E6FLL;
  v120 = 0xE800000000000000;
  swift_unknownObjectRetain(v15);
  AnyHashable.init<A>(_:)(&v119, &type metadata for String, &protocol witness table for String);
  v70 = (_QWORD *)swift_allocObject(&unk_100737318, 40, 7);
  v70[2] = v15;
  v70[3] = v61;
  v70[4] = v66;
  v71 = swift_allocObject(v67, 96, 7);
  *(_BYTE *)(v71 + 72) = 0;
  *(_QWORD *)(v71 + 56) = 0x6E616D6544206E4FLL;
  *(_QWORD *)(v71 + 64) = 0xE900000000000064;
  *(_QWORD *)(v71 + 80) = sub_10002D174;
  *(_QWORD *)(v71 + 88) = v70;
  v72 = v122;
  *(_OWORD *)(v71 + 16) = v121;
  *(_OWORD *)(v71 + 32) = v72;
  *(_QWORD *)(v71 + 48) = v123;
  *(_QWORD *)(v64 + 40) = v71;
  v119 = 0x74726174536E6FLL;
  v120 = 0xE700000000000000;
  swift_unknownObjectRetain(v15);
  AnyHashable.init<A>(_:)(&v119, &type metadata for String, &protocol witness table for String);
  v73 = (_QWORD *)swift_allocObject(&unk_100737340, 40, 7);
  v73[2] = v15;
  v73[3] = v61;
  v73[4] = v66;
  v74 = swift_allocObject(v67, 96, 7);
  *(_BYTE *)(v74 + 72) = 0;
  *(_QWORD *)(v74 + 80) = sub_10002D198;
  *(_QWORD *)(v74 + 88) = v73;
  v75 = v122;
  *(_OWORD *)(v74 + 16) = v121;
  *(_OWORD *)(v74 + 32) = v75;
  v76 = v123;
  *(_QWORD *)(v74 + 56) = 0x7472617453206E4FLL;
  *(_QWORD *)(v74 + 64) = 0xE800000000000000;
  *(_QWORD *)(v74 + 48) = v76;
  *(_QWORD *)(v64 + 48) = v74;
  *(_QWORD *)&v121 = v64;
  specialized Array._endMutation()(v74);
  v77 = v121;
  v78 = (_QWORD *)swift_allocObject(&unk_100737368, 40, 7);
  v78[2] = v15;
  v78[3] = v61;
  v78[4] = v66;
  swift_allocObject(v108, 96, 7);
  swift_unknownObjectRetain_n(v15, 2);
  sub_100085A64(0xD00000000000001ALL, 0x8000000100686260, v77, (uint64_t)sub_10002D1E0, (uint64_t)v78);
  v79 = v116;
  v116[9] = v80;
  Preferences.subscript.getter(&v121, v110, v118, &type metadata for String, v61);
  v81 = v121;
  v82 = swift_allocObject(v106, 88, 7);
  *(_QWORD *)(v82 + 56) = 0xD000000000000016;
  *(_QWORD *)(v82 + 64) = 0x8000000100686280;
  *(_OWORD *)(v82 + 72) = v81;
  swift_bridgeObjectRetain(*((_QWORD *)&v81 + 1));
  v83 = v113;
  v85 = UUID.init()(v84);
  v86 = UUID.uuidString.getter(v85);
  v88 = v87;
  v89 = v115;
  v90 = (uint64_t (*)(char *, uint64_t))v107;
  ((void (*)(char *, uint64_t))v107)(v83, v115);
  v119 = v86;
  v120 = v88;
  AnyHashable.init<A>(_:)(&v119, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(*((_QWORD *)&v81 + 1));
  v79[10] = v82;
  v91 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v91, 120, 7);
  v79[11] = sub_1004A7A88(0x655320796C707041, 0xEE0073676E697474, 0, 0, 0, 0, (uint64_t)sub_10002C3D0, 0);
  swift_allocObject(v91, 120, 7);
  v92 = sub_1004A7A88(0x6553207465736552, 0xEE0073676E697474, 0, 0, 0, 0, (uint64_t)sub_10002CF30, 0);
  v79[12] = v92;
  *(_QWORD *)&v121 = v79;
  specialized Array._endMutation()(v92);
  v93 = v121;
  v94 = swift_allocObject(v112, 40, 7);
  *(_OWORD *)(v94 + 16) = xmmword_100640AE0;
  v95 = type metadata accessor for DebugSection();
  v96 = (_QWORD *)swift_allocObject(v95, 56, 7);
  v98 = UUID.init()(v97);
  v99 = UUID.uuidString.getter(v98);
  v101 = v100;
  v102 = v90(v83, v89);
  v96[2] = v99;
  v96[3] = v101;
  v96[4] = 0x657A696C61636F4CLL;
  v96[5] = 0xE900000000000072;
  v96[6] = v93;
  *(_QWORD *)(v94 + 32) = v96;
  *(_QWORD *)&v121 = v94;
  specialized Array._endMutation()(v102);
  v103 = v121;
  swift_unknownObjectRelease(v15);
  return v103;
}

uint64_t sub_10002BE50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD v23[2];
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v10 = *a1;
  v11 = a1[1];
  if (v11)
  {
    v12 = a1[1];
    v13 = v12;
    v14 = *a1;
    v15 = *a1;
    v16 = v12;
  }
  else
  {
    v16 = a3;
    v15 = a2;
    swift_bridgeObjectRetain(a3);
    v13 = 0;
    v14 = 0x74655320746F4ELL;
    v12 = 0xE700000000000000;
  }
  v23[0] = v15;
  v23[1] = v16;
  swift_bridgeObjectRetain(v13);
  AnyHashable.init<A>(_:)(v23, &type metadata for String, &protocol witness table for String);
  v17 = (_QWORD *)swift_allocObject(&unk_100737390, 56, 7);
  v17[2] = v10;
  v17[3] = v11;
  v17[4] = a4;
  v17[5] = a5;
  v17[6] = a6;
  v18 = type metadata accessor for MenuItemDebugSetting();
  v19 = swift_allocObject(v18, 96, 7);
  *(_BYTE *)(v19 + 72) = 0;
  *(_QWORD *)(v19 + 56) = v14;
  *(_QWORD *)(v19 + 64) = v12;
  *(_QWORD *)(v19 + 80) = sub_10002D218;
  *(_QWORD *)(v19 + 88) = v17;
  v20 = v25;
  *(_OWORD *)(v19 + 16) = v24;
  *(_OWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 48) = v26;
  *a7 = v19;
  swift_bridgeObjectRetain_n(v13, 2);
  return swift_unknownObjectRetain(a4);
}

uint64_t sub_10002BF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[5];

  v7 = sub_10000DAF8(&qword_100808970);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  if (a2)
  {
    if (qword_100804598 != -1)
      swift_once(&qword_100804598, sub_10002B010);
    v12 = sub_10000EFC4(v7, (uint64_t)qword_1008088B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
    v17[0] = a1;
    v17[1] = a2;
    swift_bridgeObjectRetain(a2);
    return Preferences.subscript.setter(v17, v10, ObjectType, &type metadata for String, a4);
  }
  else
  {
    if (qword_100804598 != -1)
      swift_once(&qword_100804598, sub_10002B010);
    v14 = sub_10000EFC4(v7, (uint64_t)qword_1008088B8);
    v17[3] = v7;
    v17[4] = sub_10002D228(&qword_100808988, &qword_100808970);
    v15 = sub_1000119C0(v17);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v15, v14, v7);
    dispatch thunk of Preferences.removeValue(forKey:)(v17, ObjectType, a4);
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  }
}

uint64_t sub_10002C11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  if (qword_100804598 != -1)
    swift_once(&qword_100804598, sub_10002B010);
  v8 = sub_10000DAF8(&qword_100808970);
  v9 = sub_10000EFC4(v8, (uint64_t)qword_1008088B8);
  Preferences.subscript.getter(&v11, v9, ObjectType, &type metadata for String, a2);
  if (v12)
  {
    a3 = v11;
    a4 = v12;
  }
  else
  {
    swift_bridgeObjectRetain(a4);
  }
  v11 = a3;
  v12 = a4;
  return AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
}

uint64_t sub_10002C1FC(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjectType;
  uint64_t v9;
  __n128 v11;
  __n128 v12;

  v11 = a1;
  v4 = sub_10000DAF8(&qword_100808970);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  if (qword_1008045B8 != -1)
    swift_once(&qword_1008045B8, sub_10002B178);
  v9 = sub_10000EFC4(v4, (uint64_t)qword_100808918);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v12 = v11;
  return Preferences.subscript.setter(&v12, v7, ObjectType, &type metadata for String, a3);
}

uint64_t sub_10002C2F0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  ObjectType = swift_getObjectType();
  if (qword_1008045B8 != -1)
    swift_once(&qword_1008045B8, sub_10002B178);
  v4 = sub_10000DAF8(&qword_100808970);
  v5 = sub_10000EFC4(v4, (uint64_t)qword_100808918);
  Preferences.subscript.getter(&v9, v5, ObjectType, &type metadata for String, a2);
  v7 = v9;
  v6 = v10;
  if (!v10)
  {
    v7 = 0x74726174536E6FLL;
    v6 = 0xE700000000000000;
  }
  v9 = v7;
  v10 = v6;
  return AnyHashable.init<A>(_:)(&v9, &type metadata for String, &protocol witness table for String);
}

void sub_10002C3D0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v0, "notify");

}

uint64_t type metadata accessor for LocalizerSettings()
{
  return objc_opt_self(_TtC20ProductPageExtension17LocalizerSettings);
}

void sub_10002C440(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100396B54(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_10002C4E4(v4);
  *a1 = v2;
}

uint64_t sub_10002C4A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10002C4D4()
{
  uint64_t *v0;

  return sub_10002C11C(v0[2], v0[3], v0[4], v0[5]);
}

void sub_10002C4E4(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  _QWORD *v110;
  Swift::Int v111;
  Swift::Int v112;
  Swift::Int v113;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_10002CBCC(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v111 = v4;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v110 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v102 = *v108;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v102)
          goto LABEL_161;
        v100 = v101;
        v104 = *(_QWORD *)&v101[16 * v103 + 32];
        v105 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_10002CC98((char *)(v102 + 16 * v104), (char *)(v102 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 16 * v105, __dst);
        if (v1)
          goto LABEL_116;
        if (v105 < v104)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_100396B40((uint64_t)v100);
        if (v103 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v106 = &v100[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v100 + 2);
        if (v12 > v107)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_117;
      }
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v110 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v111)
      {
        if (__OFADD__(v13, v111))
          goto LABEL_155;
        if (v13 + v111 >= v3)
          v36 = v3;
        else
          v36 = v13 + v111;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v39 == v43 && v40 == v44;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v43, v44, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1003968F8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_1003968F8((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_120;
    }
  }
  v113 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_10002CC98((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v113;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_10002CBCC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10002CC98(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v19 = &v4[16 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v20 = (char *)(a3 - 16);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 16;
          v23 = *((_QWORD *)v19 - 2);
          v24 = *((_QWORD *)v19 - 1);
          v25 = *((_QWORD *)v21 - 2);
          v26 = *((_QWORD *)v21 - 1);
          v21 -= 16;
          v27 = v23 == v25 && v24 == v26;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 1) & 1) == 0)
          {
            v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_OWORD *)v20 = *((_OWORD *)v19 - 1);
            v21 = v6;
            v19 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
              *(_OWORD *)v20 = *(_OWORD *)v21;
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 16;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *((_QWORD *)v6 + 1);
        v16 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v6 == *(_QWORD *)v4 && v15 == v16;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v15, *(_QWORD *)v4, v16, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v30 = v4;
          v18 = v6;
        }
        else
        {
          v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_1003969F0((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_10002CF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  _QWORD v5[5];

  type metadata accessor for LocalPreferences(0);
  v0 = static LocalPreferences.currentApplication.getter();
  if (qword_100804590 != -1)
    swift_once(&qword_100804590, sub_10002AF98);
  v1 = sub_10000DAF8(&qword_100808978);
  v2 = sub_10000EFC4(v1, (uint64_t)qword_1008088A0);
  v5[3] = v1;
  v5[4] = sub_10002D228(&qword_100808980, &qword_100808978);
  v3 = sub_1000119C0(v5);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v3, v2, v1);
  LocalPreferences.removeValue(forKey:)(v5);
  swift_release(v0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v5);
  v4 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v4, "notify");

}

void sub_10002D038(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20[2];
  uint64_t v21;
  _QWORD *v22;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v22 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v8);
    v12 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v13 = *v12;
      v20[0] = *(v12 - 1);
      v20[1] = v13;
      swift_bridgeObjectRetain(v13);
      sub_10002BE50(v20, a2, a3, a4, a5, a6, &v21);
      swift_bridgeObjectRelease(v13);
      if (v6)
        break;
      v12 += 2;
      v15 = v21;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = v22[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
      if (!--v8)
        return;
    }
    swift_release(v22);
  }
}

uint64_t sub_10002D150()
{
  uint64_t v0;

  return sub_10002C1FC((__n128)xmmword_1006415B0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10002D174()
{
  uint64_t v0;

  return sub_10002C1FC((__n128)xmmword_1006415C0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10002D198()
{
  uint64_t v0;

  return sub_10002C1FC((__n128)xmmword_1006415D0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10002D1BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10002D1E0()
{
  uint64_t v0;

  return sub_10002C2F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10002D1EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10002D218()
{
  uint64_t *v0;

  return sub_10002BF8C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10002D228(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100010DE0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for PreferenceKey<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for AutoAdjustingPlaceable(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

_QWORD *assignWithCopy for AutoAdjustingPlaceable(_QWORD *a1, _QWORD *a2)
{
  sub_10002D2D4(a1, a2);
  return a1;
}

_QWORD *sub_10002D2D4(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for AutoAdjustingPlaceable(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AutoAdjustingPlaceable(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoAdjustingPlaceable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoAdjustingPlaceable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoAdjustingPlaceable()
{
  return &type metadata for AutoAdjustingPlaceable;
}

double sub_10002D528(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = v3[3];
  v8 = v3[4];
  sub_100010F08(v3, v7);
  return ceil(dispatch thunk of Placeable.measure(toFit:with:)(a1, v7, v8, a2, a3));
}

uint64_t sub_10002D590(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v9 = floor(a2);
  v10 = floor(a3);
  v11 = v5[3];
  v12 = v5[4];
  sub_100010F08(v5, v11);
  return dispatch thunk of Placeable.place(at:with:)(a1, v11, v12, v9, v10, a4, a5);
}

double sub_10002D608()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100011980(v0, qword_1008089A0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_1008089A0);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

uint64_t sub_10002D658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DAF8(&qword_10081E270);
  sub_100011980(v0, qword_1008089B8);
  sub_10000EFC4(v0, (uint64_t)qword_1008089B8);
  v5 = 2;
  v4 = 8;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  type metadata accessor for UIRectEdge(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

void sub_10002D6E8(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  objc_super v34;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissTapGestureRecognizer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissScreenEdgePanGestureRecognizer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_blurOverlayView] = 0;
  v7 = &v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissalScrollView], 0);
  v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissCompleted] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_scrollDismissInitialTranslationY] = 0;
  v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_isScrollDismissActive] = 0;
  v8 = objc_allocWithZone((Class)UIView);
  v9 = v3;
  v10 = objc_msgSend(v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView] = v10;
  v11 = type metadata accessor for TransitioningPresentedContainerView();
  *(_QWORD *)&v9[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");

  v34.receiver = v9;
  v34.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v34, "initWithPresentedViewController:presentingViewController:", a1, a2);
  v13 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v14 = (char *)v12;
  v15 = objc_msgSend(v13, "initWithTarget:action:", v14, "didTapOverlayView:");
  v16 = OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissTapGestureRecognizer;
  v17 = *(void **)&v14[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissTapGestureRecognizer];
  *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissTapGestureRecognizer] = v15;

  if (!*(_QWORD *)&v14[v16])
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView;
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView], "addGestureRecognizer:");
  v19 = objc_msgSend(objc_allocWithZone((Class)UIScreenEdgePanGestureRecognizer), "initWithTarget:action:", v14, "edgePanDidChange:");
  v20 = OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissScreenEdgePanGestureRecognizer;
  v21 = *(void **)&v14[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissScreenEdgePanGestureRecognizer];
  *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissScreenEdgePanGestureRecognizer] = v19;

  v22 = *(void **)&v14[v20];
  if (!v22)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v23 = qword_1008045D0;
  v24 = v22;
  if (v23 != -1)
    swift_once(&qword_1008045D0, sub_10002D658);
  v25 = sub_10000DAF8(&qword_10081E270);
  sub_10000EFC4(v25, (uint64_t)qword_1008089B8);
  v32 = v14;
  Conditional.evaluate(with:)(&v33, &v32, v25);
  objc_msgSend(v24, "setEdges:", v33);

  v26 = *(void **)&v14[v20];
  if (!v26)
    goto LABEL_10;
  v27 = v26;
  v28 = objc_msgSend(v14, "traitCollection");
  v29 = objc_msgSend(v28, "horizontalSizeClass");

  objc_msgSend(v27, "setEnabled:", v29 != (id)2);
  if (*(_QWORD *)&v14[v20])
  {
    objc_msgSend(*(id *)&v14[v18], "addGestureRecognizer:");
    v30 = objc_msgSend(v14, "traitCollection");
    sub_10002DA40();

    v31 = *(id *)&v14[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView];
    objc_msgSend(v31, "setClipsToBounds:", 0);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_10002DA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  v1 = v0;
  if ((UITraitCollection.isSizeClassRegular.getter() & 1) != 0)
  {
    v2 = OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_blurOverlayView;
    v3 = *(void **)(v0
                  + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_blurOverlayView);
    if (v3)
      goto LABEL_12;
    v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 4);
    v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v4);

    v6 = *(void **)(v1 + v2);
    if (v6)
    {
      objc_msgSend(v6, "removeFromSuperview");
      v7 = *(void **)(v1 + v2);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v1 + v2) = v5;
    v12 = v5;

    if (*(_QWORD *)(v1 + v2))
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView), "addSubview:");

    v3 = *(void **)(v1 + v2);
    if (v3)
    {
LABEL_12:
      v13 = *(void **)(v1
                     + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView);
      v14 = v3;
      objc_msgSend(v13, "bounds");
      objc_msgSend(v14, "setFrame:", 0.0, 0.0);

      v15 = *(void **)(v1 + v2);
      if (v15)
        objc_msgSend(v15, "setHidden:", 0);
    }
    v16 = *(void **)(v1
                   + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView);
    v17 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v16, "setBackgroundColor:", v17);

  }
  else
  {
    v8 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView);
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.4);

    objc_msgSend(v8, "setBackgroundColor:", v10);
    v11 = *(void **)(v1
                   + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_blurOverlayView);
    if (v11)
      objc_msgSend(v11, "setHidden:", 1);
  }
}

void sub_10002DD48()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v16;
  double v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  double v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v1 = v0;
  v2 = objc_msgSend(v0, "containerView");
  if (!v2)
    return;
  v3 = v2;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  if (v5 == (id)2)
  {
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = UITraitCollection.prefersAccessibilityLayouts.getter(v6);

    if ((v7 & 1) != 0)
      v8 = 864.0;
    else
      v8 = 746.0;
    objc_msgSend(v3, "bounds");
    v9 = CGRectGetWidth(v27) + -80.0;
    if (v9 >= v8)
      v10 = v8;
    else
      v10 = v9;
    if (qword_1008045C8 != -1)
      swift_once(&qword_1008045C8, sub_10002D608);
    v11 = type metadata accessor for AspectRatio(0);
    sub_10000EFC4(v11, (uint64_t)qword_1008089A0);
    AspectRatio.height(fromWidth:)(v10);
    objc_msgSend(v3, "bounds");
    x = v28.origin.x;
    y = v28.origin.y;
    width = v28.size.width;
    height = v28.size.height;
    CGRectGetMidX(v28);
    v29.origin.x = x;
    v29.origin.y = y;
    v29.size.width = width;
    v29.size.height = height;
    CGRectGetMidY(v29);

    return;
  }
  v16 = objc_msgSend(v1, "presentingViewController");
  v17 = sub_1004AEE7C(v16);

  v18 = objc_msgSend(v1, "presentingViewController");
  v19 = objc_msgSend(v18, "view");

  if (!v19)
  {
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v19, "safeAreaInsets");

  v20 = objc_msgSend(v1, "presentingViewController");
  v21 = objc_msgSend(v20, "view");

  if (!v21)
  {
LABEL_21:
    __break(1u);
    return;
  }
  objc_msgSend(v21, "safeAreaInsets");

  objc_msgSend(v3, "bounds");
  v23 = v22 - v17 - v17;
  if (qword_100805240 != -1)
    swift_once(&qword_100805240, sub_1002B93BC);
  v24 = type metadata accessor for AppEventDetailPageLayout.Metrics(0);
  sub_10000EFC4(v24, (uint64_t)qword_100866890);
  AspectRatio.height(fromWidth:)(v23);
  v25 = objc_msgSend(v1, "traitCollection");
  v26 = UITraitCollection.prefersAccessibilityLayouts.getter(v25);
  if ((v26 & 1) != 0)
    UITraitCollection.isSizeClassCompact.getter(v26);

  objc_msgSend(v3, "bounds");
  CGRectGetMinY(v30);
  objc_msgSend(v3, "bounds");
  CGRectGetMinX(v31);

}

void sub_10002E0EC()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "containerViewWillLayoutSubviews");
  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView];
    objc_msgSend(v1, "bounds");
    objc_msgSend(v3, "setFrame:");
    v4 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_blurOverlayView];
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v5, "setFrame:", 0.0, 0.0);

    }
    v6 = *(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView];
    sub_10002DD48();
    objc_msgSend(v6, "setFrame:");

  }
}

void sub_10002E21C(uint64_t a1, void *a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  v5 = objc_msgSend(v2, "containerView");
  if (v5)
  {
    v6 = v5;
    sub_10002DA40();
    v7 = swift_allocObject(&unk_100737580, 32, 7);
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v6;
    v12[4] = sub_10002FE0C;
    v13 = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_1005F3AC0;
    v12[3] = &unk_100737598;
    v8 = _Block_copy(v12);
    v9 = v13;
    v10 = v2;
    v11 = v6;
    objc_msgSend(a2, "animateAlongsideTransition:completion:", v8, 0, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
}

void sub_10002E3A4(void *a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  *(_BYTE *)(*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView]
           + OBJC_IVAR____TtC20ProductPageExtension35TransitioningPresentedContainerView_hidesInsertedSubviews) = 1;
  v7 = swift_allocObject(&unk_100737530, 24, 7);
  *(_QWORD *)(v7 + 16) = v3;
  v11[4] = sub_10002FDBC;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1005F3AC0;
  v11[3] = &unk_100737548;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
}

void sub_10002E520()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v19 = v1;
    objc_msgSend(v1, "bounds");
    v3 = v2;
    v5 = v4;
    v6 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView];
    objc_msgSend(v6, "setFrame:");
    v7 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_blurOverlayView];
    if (v7)
      objc_msgSend(v7, "setFrame:", 0.0, 0.0, v3, v5);
    objc_msgSend(v19, "addSubview:", v6);
    v8 = objc_msgSend(v0, "presentedViewController");
    v9 = objc_msgSend(v8, "view");

    if (v9)
    {
      objc_msgSend(v9, "setAutoresizingMask:", 18);
      v10 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView];
      objc_msgSend(v10, "bounds");
      objc_msgSend(v9, "setFrame:");
      objc_msgSend(v10, "addSubview:", v9);
      v11 = objc_msgSend(v0, "presentedViewController");
      v12 = objc_msgSend(v11, "contentScrollView");

      sub_10002FCD0();
    }
    v13 = objc_msgSend(v0, "presentingViewController");
    v14 = objc_msgSend(v13, "transitionCoordinator");

    objc_msgSend(v6, "setAlpha:", 0.0);
    if (v14)
    {
      v15 = swift_allocObject(&unk_1007374E0, 24, 7);
      *(_QWORD *)(v15 + 16) = v0;
      aBlock[4] = sub_10002FC10;
      v21 = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1005F3AC0;
      aBlock[3] = &unk_1007374F8;
      v16 = _Block_copy(aBlock);
      v17 = v21;
      swift_unknownObjectRetain(v14);
      v18 = v0;
      objc_msgSend(v14, "animateAlongsideTransition:completion:", v16, 0, swift_release(v17).n128_f64[0]);

      swift_unknownObjectRelease(v14);
      _Block_release(v16);
      swift_unknownObjectRelease(v14);
    }
    else
    {

    }
  }
}

void sub_10002E7D4(uint64_t a1, char *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView], "setAlpha:", 1.0);
  v3 = objc_msgSend(a2, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (id)1)
  {
    v5 = objc_msgSend(a2, "presentedViewController");
    v6 = objc_msgSend(v5, "view");

    if (v6)
    {
      objc_msgSend(v6, "_setCornerRadius:", 0.0);

    }
  }
}

void sub_10002E8F4(char a1)
{
  char *v1;
  id v2;
  id v3;
  id v4;

  if ((a1 & 1) == 0)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView], "removeFromSuperview");
    v2 = objc_msgSend(v1, "presentedViewController");
    v4 = objc_msgSend(v2, "view");

    if (v4)
    {
      objc_msgSend(v4, "setClipsToBounds:", 0);
      v3 = objc_msgSend(v4, "layer");
      objc_msgSend(v3, "setMaskedCorners:", 15);

      objc_msgSend(v4, "_setCornerRadius:", 0.0);
    }
  }
}

double sub_10002EA1C()
{
  void *v0;
  id v1;
  id v2;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = objc_msgSend(v0, "presentingViewController");
  v2 = objc_msgSend(v1, "transitionCoordinator");

  if (v2)
  {
    v4 = swift_allocObject(&unk_100737490, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v8[4] = sub_10002FBF0;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1005F3AC0;
    v8[3] = &unk_1007374A8;
    v5 = _Block_copy(v8);
    v6 = v9;
    swift_unknownObjectRetain(v2);
    v7 = v0;
    objc_msgSend(v2, "animateAlongsideTransition:completion:", v5, 0, swift_release(v6).n128_f64[0]);
    swift_unknownObjectRelease(v2);
    _Block_release(v5);
    *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  }
  return result;
}

void sub_10002EB24(uint64_t a1, char *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView], "setAlpha:", 0.0);
  v3 = objc_msgSend(a2, "presentedViewController");
  v4 = objc_msgSend(v3, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "layer");

    objc_msgSend(v5, "setMaskedCorners:", 15);
  }
  v6 = objc_msgSend(a2, "presentedViewController");
  objc_msgSend(v6, "setNeedsStatusBarAppearanceUpdate");

}

uint64_t sub_10002ECEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BOOL8 v6;
  _BYTE v8[24];
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal, v8, 33, 0);
  sub_10002FAEC(a1, v3);
  swift_endAccess(v8);
  Strong = swift_unknownObjectWeakLoadStrong(v1+ OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissalScrollView);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10002FB34(v3, (uint64_t)v8);
    v6 = v9 == 0;
    sub_10002FB7C((uint64_t)v8);
    objc_msgSend(v5, "setShowsVerticalScrollIndicator:", v6);

  }
  return sub_10002FB7C(a1);
}

void sub_10002EDA4(void *a1)
{
  char *v1;
  char *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _UNKNOWN **v27;
  id v28;
  id v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  _BYTE v34[24];
  CGRect v35;

  v2 = v1;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView], "frame");
  v4 = CGRectGetWidth(v35) * 0.28;
  objc_msgSend(a1, "translationInView:", 0);
  v6 = fabs(v5);
  if (v6 >= v4)
    v6 = v4;
  v7 = v6 / v4;
  switch((unint64_t)objc_msgSend(a1, "state"))
  {
    case 0uLL:
    case 4uLL:
    case 5uLL:
      goto LABEL_4;
    case 1uLL:
      v11 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v12 = swift_allocObject(v11, 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100640AE0;
      v13 = objc_msgSend(v2, "presentedViewController");
      v14 = objc_msgSend(v13, "view");

      if (!v14)
      {
        __break(1u);
        JUMPOUT(0x10002F160);
      }
      *(_QWORD *)(v12 + 32) = v14;
      *(_QWORD *)&v31 = v12;
      specialized Array._endMutation()(v15);
      v16 = v12;
      v17 = objc_msgSend(v2, "presentedViewController");
      ObjectType = swift_getObjectType();
      v19 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AppPromotionPresentable);
      if (v19)
        v20 = v19;
      else
        v20 = 0;
      if (v19)
        v21 = v17;
      else
        v21 = 0;
      if (v21)
      {
        v22 = (_QWORD *)swift_allocObject(v11, 40, 7);
        *((_OWORD *)v22 + 1) = xmmword_100640AE0;
        v23 = swift_getObjectType();
        v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v23, v20);
        v22[4] = v24;
        *(_QWORD *)&v31 = v22;
        specialized Array._endMutation()(v24);

      }
      else
      {

        v22 = _swiftEmptyArrayStorage;
      }
      v29 = objc_msgSend(v2, "traitCollection");
      *((_QWORD *)&v32 + 1) = &type metadata for ScaleDownInteractiveDismissal;
      v33 = &off_10073D948;
      v30 = swift_allocObject(&unk_100737468, 56, 7);
      *(_QWORD *)&v31 = v30;
      *(_QWORD *)(v30 + 16) = v16;
      *(_QWORD *)(v30 + 24) = v22;
      *(_QWORD *)(v30 + 32) = v29;
      *(_BYTE *)(v30 + 40) = 0;
      *(_QWORD *)(v30 + 48) = 0x3FECCCCCCCCCCCCDLL;
      goto LABEL_24;
    case 2uLL:
      if (v7 >= 1.0)
        goto LABEL_21;
      v25 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal];
      swift_beginAccess(v25, v34, 0, 0);
      if (*(_QWORD *)(v25 + 24))
      {
        sub_10000EF80(v25, (uint64_t)&v31);
        v26 = *((_QWORD *)&v32 + 1);
        v27 = v33;
        sub_100010F08(&v31, *((uint64_t *)&v32 + 1));
        ((void (*)(uint64_t, _UNKNOWN **, double))v27[2])(v26, v27, v7);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v31);
      }
      break;
    case 3uLL:
      if (v7 < 1.0)
      {
LABEL_4:
        if ((v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissCompleted] & 1) == 0)
        {
          v8 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal];
          swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal], v34, 0, 0);
          if (*(_QWORD *)(v8 + 24))
          {
            sub_10000EF80(v8, (uint64_t)&v31);
            v9 = *((_QWORD *)&v32 + 1);
            v10 = v33;
            sub_100010F08(&v31, *((uint64_t *)&v32 + 1));
            ((void (*)(uint64_t, _UNKNOWN **))v10[4])(v9, v10);
            _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v31);
          }
          v33 = 0;
          v31 = 0u;
          v32 = 0u;
LABEL_24:
          sub_10002ECEC((uint64_t)&v31);
        }
      }
      else
      {
LABEL_21:
        v28 = objc_msgSend(v2, "presentedViewController");
        objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, 0);

        v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissCompleted] = 1;
      }
      break;
    default:
      return;
  }
}

void sub_10002F1CC(void *a1)
{
  char *v1;
  _BYTE *v2;
  uint64_t Strong;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE v43[24];
  __int128 v44;
  __int128 v45;
  _UNKNOWN **v46;
  CGRect v47;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissalScrollView]);
  if (Strong)
  {
    v42 = (id)Strong;
    v5 = OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_isScrollDismissActive;
    if (v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_isScrollDismissActive] == 1)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView], "frame");
      v6 = CGRectGetHeight(v47) * 0.18;
      objc_msgSend(a1, "translationInView:", 0);
      v8 = v7
         - *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_scrollDismissInitialTranslationY];
      if (v8 >= v6)
        v9 = v6;
      else
        v9 = v7
           - *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_scrollDismissInitialTranslationY];
      v10 = 0.0;
      if (v6 <= 0.0)
        v10 = v6;
      if (v8 < 0.0)
        v11 = v10;
      else
        v11 = v9;
      objc_msgSend(a1, "state");
      v12 = v11 / v6;
      v13 = v42;
      switch((unint64_t)v42)
      {
        case 0uLL:
        case 4uLL:
        case 5uLL:
          goto LABEL_12;
        case 1uLL:
          goto LABEL_30;
        case 2uLL:
          if (v12 >= 1.0)
            goto LABEL_35;
          v36 = (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal];
          swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal], v43, 0, 0);
          if (*(_QWORD *)(v36 + 24))
          {
            sub_10000EF80(v36, (uint64_t)&v44);
            v37 = *((_QWORD *)&v45 + 1);
            v38 = v46;
            sub_100010F08(&v44, *((uint64_t *)&v45 + 1));
            ((void (*)(uint64_t, _UNKNOWN **, double))v38[2])(v37, v38, v12);

            _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v44);
          }
          else
          {

          }
          return;
        case 3uLL:
          if (v12 < 1.0)
          {
LABEL_12:
            if ((v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissCompleted] & 1) != 0)
              goto LABEL_30;
            v14 = (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal];
            swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal], v43, 0, 0);
            if (*(_QWORD *)(v14 + 24))
            {
              sub_10000EF80(v14, (uint64_t)&v44);
              v15 = *((_QWORD *)&v45 + 1);
              v16 = v46;
              sub_100010F08(&v44, *((uint64_t *)&v45 + 1));
              ((void (*)(uint64_t, _UNKNOWN **))v16[4])(v15, v16);
              _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v44);
            }
            v46 = 0;
            v44 = 0u;
            v45 = 0u;
            sub_10002ECEC((uint64_t)&v44);

            v2[v5] = 0;
          }
          else
          {
LABEL_35:
            v39 = objc_msgSend(v1, "presentedViewController");
            objc_msgSend(v39, "dismissViewControllerAnimated:completion:", 1, 0);

            v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissCompleted] = 1;
          }
          break;
        default:
          goto LABEL_29;
      }
    }
    else if ((objc_msgSend(a1, "state") == (id)1 || objc_msgSend(a1, "state") == (id)2)
           && (objc_msgSend(v42, "contentOffset"), v18 = v17,
                                                   objc_msgSend(v42, "adjustedContentInset"),
                                                   v18 + v19 <= 0.0)
           && (objc_msgSend(a1, "velocityInView:", v42), v20 > 0.0))
    {
      objc_msgSend(v42, "adjustedContentInset");
      objc_msgSend(v42, "contentOffset");
      objc_msgSend(v42, "setContentOffset:");
      v21 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v22 = swift_allocObject(v21, 40, 7);
      *(_OWORD *)(v22 + 16) = xmmword_100640AE0;
      v23 = objc_msgSend(v2, "presentedViewController");
      v24 = objc_msgSend(v23, "view");

      if (!v24)
      {
        __break(1u);
        JUMPOUT(0x10002F6CCLL);
      }
      *(_QWORD *)(v22 + 32) = v24;
      *(_QWORD *)&v44 = v22;
      specialized Array._endMutation()(v25);
      v26 = v22;
      v27 = objc_msgSend(v2, "presentedViewController");
      ObjectType = swift_getObjectType();
      v29 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AppPromotionPresentable);
      if (v29)
        v30 = v29;
      else
        v30 = 0;
      if (v29)
        v31 = v27;
      else
        v31 = 0;
      if (v31)
      {
        v32 = swift_allocObject(v21, 40, 7);
        *(_OWORD *)(v32 + 16) = xmmword_100640AE0;
        v33 = swift_getObjectType();
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v33, v30);
        *(_QWORD *)(v32 + 32) = v34;
        specialized Array._endMutation()(v34);
        v35 = (_QWORD *)v32;

      }
      else
      {

        v35 = _swiftEmptyArrayStorage;
      }
      *((_QWORD *)&v45 + 1) = &type metadata for PullDownInteractiveDismissal;
      v46 = &off_10073D970;
      *(_QWORD *)&v44 = v26;
      *((_QWORD *)&v44 + 1) = v35;
      *(_QWORD *)&v45 = 0x3FB1EB851EB851ECLL;
      sub_10002ECEC((uint64_t)&v44);
      objc_msgSend(a1, "translationInView:", 0);
      v41 = v40;

      *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_scrollDismissInitialTranslationY] = v41;
      v2[v5] = 1;
    }
    else
    {
LABEL_29:
      v13 = v42;
LABEL_30:

    }
  }
}

void sub_10002F7E4(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  objc_super v19;

  v2 = v1;
  v19.receiver = v1;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "layoutDirection");

  if (!a1 || v5 != objc_msgSend(a1, "layoutDirection"))
  {
    v6 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissScreenEdgePanGestureRecognizer];
    if (!v6)
    {
      __break(1u);
      goto LABEL_13;
    }
    v7 = qword_1008045D0;
    v8 = v6;
    if (v7 != -1)
      swift_once(&qword_1008045D0, sub_10002D658);
    v9 = sub_10000DAF8(&qword_10081E270);
    sub_10000EFC4(v9, (uint64_t)qword_1008089B8);
    v17 = v2;
    Conditional.evaluate(with:)(&v18, &v17, v9);
    objc_msgSend(v8, "setEdges:", v18);

  }
  v10 = objc_msgSend(v2, "traitCollection");
  v11 = objc_msgSend(v10, "horizontalSizeClass");

  if (a1 && v11 == objc_msgSend(a1, "horizontalSizeClass"))
    goto LABEL_11;
  v12 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissScreenEdgePanGestureRecognizer];
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v2, "traitCollection");
    v15 = objc_msgSend(v14, "horizontalSizeClass");

    objc_msgSend(v13, "setEnabled:", v15 != (id)2);
LABEL_11:
    v16 = objc_msgSend(v2, "containerView");
    objc_msgSend(v16, "setNeedsLayout");

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t type metadata accessor for AppPromotionDetailPagePresentationController()
{
  return objc_opt_self(_TtC20ProductPageExtension44AppPromotionDetailPagePresentationController);
}

uint64_t sub_10002FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100808A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100808A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FB7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_100808A60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002FBBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

void sub_10002FBF0(uint64_t a1)
{
  uint64_t v1;

  sub_10002EB24(a1, *(char **)(v1 + 16));
}

uint64_t sub_10002FBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002FC08(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10002FC10(uint64_t a1)
{
  uint64_t v1;

  sub_10002E7D4(a1, *(char **)(v1 + 16));
}

void sub_10002FC18()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissalScrollView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissalScrollView);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v4, "removeTarget:action:", v0, "scrollPanDidChange:");
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "_removeScrollViewScrollObserver:", v0);

  }
}

void sub_10002FCD0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  void *v7;
  id v8;

  sub_10002FC18();
  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_dismissalScrollView;
  v3 = swift_unknownObjectWeakAssign(v2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v6, "addTarget:action:", v0, "scrollPanDidChange:");
  }
  v7 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "_addScrollViewScrollObserver:", v0);

  }
}

uint64_t sub_10002FD98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10002FDBC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)
                       + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_presentedContainerView)
           + OBJC_IVAR____TtC20ProductPageExtension35TransitioningPresentedContainerView_hidesInsertedSubviews) = 0;
}

uint64_t sub_10002FDE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10002FE0C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 16)
                + OBJC_IVAR____TtC20ProductPageExtension44AppPromotionDetailPagePresentationController_overlayView);
  objc_msgSend(*(id *)(v0 + 24), "bounds");
  return objc_msgSend(v1, "setFrame:");
}

double sub_10002FE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Shelf.ContentType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v12) <= a1)
    goto LABEL_4;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Shelf.ContentType.reviews(_:), v7);
  v15 = sub_10000E720((unint64_t *)&qword_10080F0C0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v10, v7, v15);
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v14, v7);
  v18 = 0.0;
  if ((v16 & 1) != 0)
  {
    v19 = type metadata accessor for ReviewsPagePresenter(0);
    v20 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v19, v20);
    v21 = sub_100375634();
    v17(v14, v7);
    if (!v21)
    {
LABEL_4:
      if (qword_1008067E8 != -1)
        swift_once(&qword_1008067E8, sub_1004D51EC);
      v22 = type metadata accessor for StaticDimension(0);
      v23 = sub_10000EFC4(v22, (uint64_t)qword_10086A7E8);
      static Dimensions.defaultRoundingRule.getter(v23);
      v18 = AnyDimension.value(in:rounded:)(v26, v6, v22, &protocol witness table for StaticDimension);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return v18;
}

id sub_1000300C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;

  v1 = type metadata accessor for SystemImage(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 144);
  if (v5)
  {
    v6 = *(id *)(v0 + 144);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for SystemImage.chevronDown(_:), v1);
    v7 = (void *)static SystemImage.load(_:with:)(v4, 0);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v8 = *(void **)(v0 + 144);
    *(_QWORD *)(v0 + 144) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

void sub_100030190(id a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  id v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double (**v31)();
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  double (**v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t (**v54)();
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (**v61)();
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  unsigned __int8 *v82;
  __int16 v83;
  int v84;
  id v85;
  id v86;
  uint64_t v87;
  void (*v88)(uint64_t, char *, uint64_t);
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  _QWORD v106[4];
  char v107[24];
  _QWORD v108[6];

  v7 = v6;
  v103 = a3;
  v104 = a2;
  v12 = type metadata accessor for Shelf.ContentType(0);
  v99 = *(_QWORD *)(v12 - 8);
  v100 = v12;
  __chkstk_darwin(v12);
  v98 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  *(_QWORD *)&v17 = __chkstk_darwin(v14).n128_u64[0];
  v18 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = a4;
  v19 = objc_msgSend(a4, "traitCollection", v17);
  v20 = UITraitCollection.isSizeClassRegular.getter(v19);
  v105 = a1;
  if ((v20 & 1) != 0)
  {
    v21 = UITraitCollection.prefersAccessibilityLayouts.getter(v20);

    v101 = v21 ^ 1;
    a1 = v105;
  }
  else
  {

    v101 = 0;
  }
  v22 = type metadata accessor for ProductReviewCollectionViewCell(0);
  v23 = (char *)swift_dynamicCastClass(a1, v22);
  if (!v23)
    goto LABEL_10;
  v97 = a6;
  v95 = v22;
  v94 = v23;
  v96 = v7;
  if ((v101 & 1) != 0)
  {
    v24 = v23;
    v25 = swift_allocObject(&unk_1007375D8, 24, 7);
    swift_weakInit(v25 + 16, v7);
    v26 = v104;
    (*(void (**)(char *))(v15 + 16))((char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    v27 = *(unsigned __int8 *)(v15 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = swift_allocObject(&unk_1007376C8, v28 + v16, v27 | 7);
    *(_QWORD *)(v29 + 16) = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v29 + v28, (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
    v30 = *(_QWORD *)&v24[OBJC_IVAR____TtC20ProductPageExtension31ProductReviewCollectionViewCell_reviewsView];
    v31 = (double (**)())(v30 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreReviewTapHandler);
    v32 = *(_QWORD *)(v30 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreReviewTapHandler);
    v33 = *(_QWORD *)(v30 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreReviewTapHandler + 8);
    *v31 = sub_10003428C;
    v31[1] = (double (*)())v29;
    v34 = v105;
    v35 = v105;
    swift_retain(v29);
    sub_100018908(v32, v33);
    v36 = (double (**)())(v30 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreResponseTapHandler);
    v37 = *(_QWORD *)(v30 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreResponseTapHandler);
    v38 = *(_QWORD *)(v30 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreResponseTapHandler + 8);
    *v36 = sub_10003428C;
    v36[1] = (double (*)())v29;
    swift_retain(v29);
    v39 = v37;
    v40 = v38;
  }
  else
  {
    v87 = *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension31ProductReviewCollectionViewCell_reviewsView];
    v41 = v87;
    v42 = swift_allocObject(&unk_1007375D8, 24, 7);
    v93 = a5;
    v43 = v42;
    swift_weakInit(v42 + 16, v7);
    v92 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v44 = v104;
    v92((char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v104, v14);
    v45 = *(unsigned __int8 *)(v15 + 80);
    v46 = (v45 + 24) & ~v45;
    v47 = v45 | 7;
    v90 = v45 | 7;
    v48 = v16 + v46;
    v49 = v46;
    v91 = v46;
    v50 = v7;
    v51 = (v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v89 = v51 + 8;
    v52 = swift_allocObject(&unk_100737678, v51 + 8, v47);
    *(_QWORD *)(v52 + 16) = v43;
    v88 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    v88(v52 + v49, v18, v14);
    v53 = v97;
    *(_QWORD *)(v52 + v51) = v97;
    v54 = (uint64_t (**)())(v41 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreReviewTapHandler);
    v55 = *(_QWORD *)(v41 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreReviewTapHandler);
    v56 = *(_QWORD *)(v41 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreReviewTapHandler + 8);
    *v54 = sub_100034118;
    v54[1] = (uint64_t (*)())v52;
    v34 = v105;
    v57 = v105;
    v58 = v53;
    sub_100018908(v55, v56);
    v29 = swift_allocObject(&unk_1007375D8, 24, 7);
    swift_weakInit(v29 + 16, v50);
    v26 = v44;
    v92(v18, v44, v14);
    v59 = swift_allocObject(&unk_1007376A0, v89, v90);
    *(_QWORD *)(v59 + 16) = v29;
    v60 = v87;
    v88(v59 + v91, v18, v14);
    *(_QWORD *)(v59 + v51) = v58;
    v61 = (uint64_t (**)())(v60 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreResponseTapHandler);
    v62 = *(_QWORD *)(v60 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreResponseTapHandler);
    v63 = *(_QWORD *)(v60 + OBJC_IVAR____TtC20ProductPageExtension17ProductReviewView_moreResponseTapHandler + 8);
    *v61 = sub_1000341B8;
    v61[1] = (uint64_t (*)())v59;
    v64 = v58;
    a5 = v93;
    swift_retain(v29);
    v39 = v62;
    v40 = v63;
  }
  sub_100018908(v39, v40);
  swift_release(v29);

  v65 = v34;
  v66 = v26;
  v67 = IndexPath.section.getter(v65);
  v68 = v96;
  v69 = type metadata accessor for ReviewsPagePresenter(0);
  v70 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  v71 = v98;
  dispatch thunk of ShelfPresenter.contentType(for:)(v67, v69, v70);
  v72 = sub_100375634();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v71, v100);
  if (v72)
  {

    a6 = v97;
    a1 = v105;
LABEL_10:
    sub_10028DAB0((char *)a1, v104, v103, v102, a5, a6);
    return;
  }
  v74 = v68;
  dispatch thunk of BaseShelfPresenter.model(at:)(v108, v66, v73);
  v75 = sub_10000DAF8(&qword_10080E910);
  v76 = type metadata accessor for Review(0);
  swift_dynamicCast(v106, v108, v75, v76, 7);
  v77 = v106[0];
  if ((v101 & 1) != 0)
  {
LABEL_19:
    v83 = 0;
    LOWORD(v79) = 0;
    goto LABEL_20;
  }
  swift_beginAccess(v68 + 136, v107, 0, 0);
  v78 = *(_QWORD *)(v68 + 136);
  v79 = *(_QWORD *)(v78 + 16);
  if (v79)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v68 + 136));
    v80 = sub_10057EAF8(v66);
    if ((v81 & 1) != 0)
    {
      v82 = (unsigned __int8 *)(*(_QWORD *)(v78 + 56) + 2 * v80);
      v83 = *v82;
      v84 = v82[1];
      swift_bridgeObjectRelease(v78);
      if (v84)
        LOWORD(v79) = 256;
      else
        LOWORD(v79) = 0;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease(v78);
    goto LABEL_19;
  }
  v83 = 0;
LABEL_20:
  sub_1002FDE28(v77, v79 | v83, *(_BYTE *)(v74 + 152), v102, (uint64_t)a5);
  v85 = v94;
  objc_msgSend(v94, "setNeedsLayout");
  v108[3] = v76;
  v108[4] = sub_10000E720((unint64_t *)&unk_100813850, (uint64_t (*)(uint64_t))&type metadata accessor for Review, (uint64_t)&protocol conformance descriptor for Review);
  v108[0] = v77;
  v106[3] = v95;
  v106[0] = v85;
  v86 = v65;
  swift_retain(v77);
  tryToFetch(artworkFor:into:on:asPartOf:)(v108, v106, v103, a5);

  swift_release(v77);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v106);
  sub_100010F2C((uint64_t)v108, &qword_100819230);
}

double sub_10003080C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _BYTE v18[24];
  _QWORD v19[5];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + 16);
    swift_retain(v7);
    v8 = swift_release(v6);
    dispatch thunk of BaseShelfPresenter.model(at:)(v19, a2, v8);
    swift_release(v7);
    v9 = sub_10000DAF8(&qword_10080E910);
    v10 = type metadata accessor for Review(0);
    if ((swift_dynamicCast(&v17, v19, v9, v10, 6) & 1) != 0)
    {
      v11 = v17;
      swift_beginAccess(v3, v19, 0, 0);
      v12 = swift_weakLoadStrong(v3);
      if (v12)
      {
        v13 = v12;
        v15 = *(void (**)(uint64_t, uint64_t, __n128))(v12 + 120);
        v14 = *(_QWORD *)(v12 + 128);
        sub_100018918((uint64_t)v15, v14);
        v16 = swift_release(v13);
        if (v15)
        {
          v15(v11, a2, v16);
          sub_100018908((uint64_t)v15, v14);
        }
      }
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

void sub_10003092C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  __n128 v20;
  __int16 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v13 = a1 + 16;
  swift_beginAccess(a1 + 16, v38, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
    goto LABEL_8;
  v15 = Strong;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
  swift_beginAccess(v15 + 136, v37, 0, 0);
  v16 = *(_QWORD *)(v15 + 136);
  swift_bridgeObjectRetain(v16);
  swift_release(v15);
  if (!*(_QWORD *)(v16 + 16) || (v17 = sub_10057EAF8((uint64_t)v12), (v18 & 1) == 0))
  {
    v22 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v22);
LABEL_8:
    v21 = 1;
    goto LABEL_9;
  }
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v16 + 56) + 2 * v17 + 1);
  v20 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v20);
  if (v19)
    v21 = 257;
  else
    v21 = 1;
LABEL_9:
  swift_beginAccess(v13, v36, 0, 0);
  v23 = swift_weakLoadStrong(v13);
  if (v23)
  {
    v24 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_beginAccess(v24 + 136, v35, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v24 + 136));
    v34 = *(_QWORD *)(v24 + 136);
    *(_QWORD *)(v24 + 136) = 0x8000000000000000;
    sub_1001F9494(v21, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    v26 = *(_QWORD *)(v24 + 136);
    *(_QWORD *)(v24 + 136) = v34;
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v27);
    swift_endAccess(v35);
    swift_release(v24);
  }
  v28 = sub_10000DAF8(&qword_10081E8B0);
  v29 = *(unsigned __int8 *)(v7 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = swift_allocObject(v28, v30 + *(_QWORD *)(v7 + 72), v29 | 7);
  *(_OWORD *)(v31 + 16) = xmmword_100640720;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v31 + v30, a2, v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

}

void sub_100030BB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  unint64_t v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = a1 + 16;
  swift_beginAccess(a1 + 16, v34, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
    swift_beginAccess(Strong + 136, v33, 0, 0);
    v15 = *(_QWORD *)(Strong + 136);
    swift_bridgeObjectRetain(v15);
    swift_release(Strong);
    if (*(_QWORD *)(v15 + 16) && (v16 = sub_10057EAF8((uint64_t)v12), (v17 & 1) != 0))
      LOWORD(Strong) = *(unsigned __int8 *)(*(_QWORD *)(v15 + 56) + 2 * v16);
    else
      LOWORD(Strong) = 0;
    v18 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v18);
  }
  swift_beginAccess(v13, v32, 0, 0);
  v19 = swift_weakLoadStrong(v13);
  if (v19)
  {
    v20 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_beginAccess(v20 + 136, v31, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v20 + 136));
    v30 = *(_QWORD *)(v20 + 136);
    *(_QWORD *)(v20 + 136) = 0x8000000000000000;
    sub_1001F9494(Strong | 0x100, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    v22 = *(_QWORD *)(v20 + 136);
    *(_QWORD *)(v20 + 136) = v30;
    v23 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
    swift_endAccess(v31);
    swift_release(v20);
  }
  v24 = sub_10000DAF8(&qword_10081E8B0);
  v25 = *(unsigned __int8 *)(v7 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = swift_allocObject(v24, v26 + *(_QWORD *)(v7 + 72), v25 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_100640720;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v27 + v26, a2, v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

}

void sub_100030E20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;
  _QWORD v16[4];

  v10 = IndexPath.section.getter(a1);
  if (v10 >= dispatch thunk of BaseShelfPresenter.sectionCount.getter(v11)
    && (v12 = type metadata accessor for ProductReviewCollectionViewCell(0), swift_dynamicCastClass(a1, v12)))
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(a5, "cellForItemAtIndexPath:", isa);

    if (v14)
    v16[3] = sub_100018B6C(0, (unint64_t *)&qword_100813200, UICollectionViewCell_ptr);
    v16[0] = a1;
    v15 = a1;
    tryToCancelArtworkFetch(into:on:asPartOf:deprioritizingFetches:)(v16, a3, a4, v14 == 0);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
  }
  else
  {
    sub_100295630(a1, a2, a3, a4);
  }
}

double sub_100030F50(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  __n128 v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  unsigned __int8 *v60;
  int v61;
  int v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char v73[24];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v5 = v4;
  v67 = a4;
  v70 = a3;
  v65 = a2;
  v66 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Shelf.ContentType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - v18;
  v68 = v5;
  v20 = *(_QWORD *)(v5 + 16);
  v71 = a1;
  v22 = IndexPath.section.getter(v21);
  v64 = v20;
  dispatch thunk of BaseShelfPresenter.contentType(for:)(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v16, enum case for Shelf.ContentType.reviews(_:), v10);
  v23 = sub_10000E720((unint64_t *)&qword_100808860, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v69 = v19;
  dispatch thunk of RawRepresentable.rawValue.getter(&v77, v10, v23);
  v72 = v10;
  dispatch thunk of RawRepresentable.rawValue.getter(&v75, v10, v23);
  v24 = v78;
  v25 = v76;
  if (v77 == v75 && v78 == v76)
  {
    v26 = 1;
    v25 = v78;
  }
  else
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, v75, v76, 0);
  }
  swift_bridgeObjectRelease(v24);
  v27 = swift_bridgeObjectRelease(v25);
  v28 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v29 = v72;
  v28(v16, v72, v27);
  v30 = v66;
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v71, v66);
  if ((v26 & 1) != 0)
  {
    v32 = IndexPath.section.getter(v31);
    v33 = type metadata accessor for ReviewsPagePresenter(0);
    v34 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    dispatch thunk of ShelfPresenter.contentType(for:)(v32, v33, v34);
    v35 = sub_100375634();
    ((void (*)(char *, uint64_t))v28)(v13, v29);
    v36 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v30);
    v38 = v69;
    v37 = v70;
    if (!v35)
    {
      v39 = v71;
      v40 = IndexPath.section.getter(v36);
      v41 = dispatch thunk of BaseShelfPresenter.doesShelfExist(for:)(v40);
      v42 = v68;
      if ((v41 & 1) != 0)
      {
        v43 = IndexPath.section.getter(v41);
        v44 = sub_100294B94(v43);
      }
      else
      {
        v44 = 0;
      }
      v47.n128_f64[0] = sub_100296870(v38, 0, v44, v37, v67);
      v48 = v47.n128_u64[0];
      dispatch thunk of BaseShelfPresenter.model(at:)(&v77, v39, v47);
      swift_getObjectType();
      v49 = objc_msgSend(v37, "traitCollection");
      v50 = UITraitCollection.isSizeClassRegular.getter(v49);
      if ((v50 & 1) != 0)
      {
        v51 = UITraitCollection.prefersAccessibilityLayouts.getter(v50);

        if ((v51 & 1) == 0)
        {
          if (qword_1008045D8 != -1)
            swift_once(&qword_1008045D8, sub_100033CE8);
          v52 = qword_100808A70;
          type metadata accessor for ProductReviewView();
          v53.n128_u64[0] = v48;
          v45 = sub_1002FE98C(v52, 0, 0, v37, v53);
LABEL_26:
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v77);
          goto LABEL_11;
        }
      }
      else
      {

      }
      sub_10000EF80((uint64_t)&v77, (uint64_t)&v75);
      v54 = sub_10000DAF8(&qword_10080E910);
      v55 = type metadata accessor for Review(0);
      swift_dynamicCast(&v74, &v75, v54, v55, 7);
      v56 = v74;
      swift_beginAccess(v42 + 136, v73, 0, 0);
      v57 = *(_QWORD *)(v42 + 136);
      if (*(_QWORD *)(v57 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v42 + 136));
        v58 = sub_10057EAF8(v39);
        if ((v59 & 1) != 0)
        {
          v60 = (unsigned __int8 *)(*(_QWORD *)(v57 + 56) + 2 * v58);
          v61 = *v60;
          v62 = v60[1];
        }
        else
        {
          v61 = 0;
          v62 = 0;
        }
        swift_bridgeObjectRelease(v57);
      }
      else
      {
        v61 = 0;
        v62 = 0;
      }
      type metadata accessor for ProductReviewView();
      v63.n128_u64[0] = v48;
      v45 = sub_1002FE98C(v56, v61, v62, v37, v63);
      swift_release(v56);
      goto LABEL_26;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v30);
    v38 = v69;
    v37 = v70;
  }
  v45 = sub_100292028(v71, v65, v37, v67);
LABEL_11:
  ((void (*)(char *, uint64_t))v28)(v38, v72);
  return v45;
}

double sub_100031434(uint64_t a1, void *a2, __n128 a3)
{
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(a3) <= a1
    || dispatch thunk of BaseShelfPresenter.numberOfRows(for:)(a1))
  {
    return sub_1000314A0(a1, a2);
  }
  else
  {
    return UIEdgeInsetsZero.top;
  }
}

double sub_1000314A0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double top;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  char v41;
  uint64_t v42;
  char *v43;
  int v44;
  char v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;

  v52 = a2;
  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v50 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  __chkstk_darwin(v11);
  v51 = (char *)&v47 - v12;
  v13 = type metadata accessor for FloatingPointRoundingRule(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v2;
  v17 = type metadata accessor for ReviewsPagePresenter(0);
  v18 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v17, v18) > a1)
  {
    v47 = v7;
    if (qword_100806820 != -1)
      swift_once(&qword_100806820, sub_1004D5264);
    v20 = type metadata accessor for EdgeInsetsDimension(0, v19);
    v21 = sub_10000EFC4(v20, (uint64_t)qword_10086A890);
    static Dimensions.defaultRoundingRule.getter(v21);
    v22 = v52;
    EdgeInsetsDimension.value(in:rounded:)(v52, v16);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    dispatch thunk of ShelfPresenter.title(for:)(a1, v17, v18);
    v24 = v23;
    swift_bridgeObjectRelease(v23);
    top = 0.0;
    if (!v24)
    {
      if (a1 >= 1)
        v26 = a1 - 1;
      else
        v26 = 0;
      top = sub_100292D28(a1, v26, a1 < 1, (uint64_t)v22);
    }
    v27 = dispatch thunk of ShelfPresenter.sectionCount.getter(v17, v18);
    if (a1 + 1 < v27)
      v28 = a1 + 1;
    else
      v28 = 0;
    sub_1003AA0F8(a1, v28, a1 + 1 >= v27, v22);
    v29 = v51;
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v17, v18);
    dispatch thunk of ShelfPresenter.contentType(for:)(a1, v17, v18);
    v30 = sub_100375634();
    v31 = v49;
    v32 = *(void (**)(char *, uint64_t))(v50 + 8);
    v32(v10, v49);
    if (v30)
    {
      v33 = v29;
LABEL_46:
      v32(v33, v31);
      return top;
    }
    v34 = sub_100374CAC();
    v36 = v29;
    if (!v34)
    {
      top = UIEdgeInsetsZero.top;
      v33 = v29;
      goto LABEL_46;
    }
    v37 = v34;
    v38 = v35;
    objc_msgSend(v52, "pageMarginInsets");
    v40 = v39;
    v41 = dispatch thunk of ShelfPresenter.prefersHorizontalShelf(for:)(a1, v17, v18);
    v42 = v50;
    v43 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v36, v31);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v43, v31);
    if (v44 != enum case for Shelf.ContentType.smallLockup(_:)
      && v44 != enum case for Shelf.ContentType.mediumLockup(_:))
    {
      if (v44 == enum case for Shelf.ContentType.largeLockup(_:))
      {
LABEL_23:
        v45 = 1;
LABEL_45:
        (*(void (**)(_QWORD, id, uint64_t, uint64_t, double, double))(v38 + 32))(v45 & 1, v52, v37, v38, v40, v40);
        v33 = v51;
        goto LABEL_46;
      }
      if (v44 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        && v44 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        && v44 != enum case for Shelf.ContentType.action(_:))
      {
        if (v44 == enum case for Shelf.ContentType.ribbonBar(_:))
          goto LABEL_23;
        if (v44 != enum case for Shelf.ContentType.editorialCard(_:)
          && v44 != enum case for Shelf.ContentType.videoCard(_:))
        {
          v45 = 1;
          if (v44 == enum case for Shelf.ContentType.brick(_:)
            || v44 == enum case for Shelf.ContentType.categoryBrick(_:))
          {
            goto LABEL_45;
          }
          if (v44 != enum case for Shelf.ContentType.reviews(_:)
            && v44 != enum case for Shelf.ContentType.appTrailerLockup(_:)
            && v44 != enum case for Shelf.ContentType.framedVideo(_:)
            && v44 != enum case for Shelf.ContentType.screenshotsLockup(_:)
            && v44 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
            && v44 != enum case for Shelf.ContentType.smallBreakout(_:))
          {
            if (v44 == enum case for Shelf.ContentType.editorialStoryCard(_:))
              goto LABEL_23;
            if (v44 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
              && v44 != enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
              && v44 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
              && v44 != enum case for Shelf.ContentType.posterLockup(_:)
              && v44 != enum case for Shelf.ContentType.smallContactCard(_:))
            {
              if (v44 != enum case for Shelf.ContentType.informationRibbon(_:))
              {
                v45 = v41;
                if (v44 != enum case for Shelf.ContentType.appPromotion(_:))
                {
                  v32(v47, v31);
                  v45 = 0;
                }
                goto LABEL_45;
              }
              goto LABEL_23;
            }
          }
        }
      }
    }
    v45 = v41;
    goto LABEL_45;
  }
  return UIEdgeInsetsZero.top;
}

id sub_100031A40(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  double v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  int *v36;
  void (*v37)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v38)(_QWORD, _QWORD, _QWORD, _QWORD);
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;

  v8 = type metadata accessor for TitleHeaderView.Style(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v9) > a1)
  {
    v13 = dispatch thunk of ReviewsPagePresenter.sortActionTitle(for:)(a1);
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      v54 = dispatch thunk of BaseShelfPresenter.title(for:)(a1);
      v55 = v17;
      v18 = sub_1000300C0();
      if (qword_100804BB8 != -1)
        swift_once(&qword_100804BB8, sub_10016F2B8);
      v19 = *(double *)&qword_100865738;
      v20 = sub_1000300C0();
      objc_msgSend(v20, "contentInsets");
      v22 = v21;

      v53[1] = swift_getObjectType();
      v23 = objc_msgSend(a2, "traitCollection");
      v24 = sub_10016F89C(a3, a4, v19 - v22, v15, v16, (uint64_t)v18, 0, (uint64_t)v23);
      v26 = v25;

      objc_msgSend(a2, "pageMarginInsets", swift_bridgeObjectRelease(v16).n128_f64[0]);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      if (a1 >= 1)
        v34 = a1 - 1;
      else
        v34 = 0;
      v35 = v27 + sub_100292D28(a1, v34, a1 < 1, (uint64_t)a2);
      type metadata accessor for TitleHeaderView(0);
      v36 = (int *)dispatch thunk of BaseShelfPresenter.eyebrow(for:)(a1);
      v38 = v37;
      v39 = (_OWORD *)dispatch thunk of BaseShelfPresenter.eyebrowArtwork(for:)(a1);
      v40 = dispatch thunk of BaseShelfPresenter.titleArtwork(for:)(a1);
      sub_10051F054(a1, a2, (uint64_t)v11);
      v41 = v55;
      v42 = sub_10015764C(v36, v38, v39, v54, v55, v40, 0, 0, a3, a4, v24, v26, v35, v29, v31, v33, 0, 0, 2,
              (uint64_t)v11,
              1,
              a2);
      v44 = v43;
      swift_release(v40);
      swift_release(v39);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v41);
      sub_1000340D8((uint64_t)v11, type metadata accessor for TitleHeaderView.Style);
      v45 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v46 = objc_msgSend(v45, "absoluteDimension:", v42);
      v47 = objc_msgSend(v45, "absoluteDimension:", v44);
      v48 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v46, v47);

      static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      v50 = v49;
      v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v50);
      v12 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v48, v51, 1);

    }
    else
    {
      return 0;
    }
  }
  return v12;
}

_QWORD *sub_100031DFC(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v6;
  double v7;
  double v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v15;

  v6 = sub_100031ED0(a1, a2, a3);
  v15 = (unint64_t)v6;
  objc_msgSend(a3, "bounds");
  v9 = sub_100031A40(a1, a2, v7, v8);
  if (v9)
  {
    v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
    specialized Array._endMutation()(v13);

    return (_QWORD *)v15;
  }
  return v6;
}

_QWORD *sub_100031ED0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v6 = type metadata accessor for ReviewsPagePresenter(0);
  v7 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  dispatch thunk of ShelfPresenter.title(for:)(a1, v6, v7);
  v9 = v8;
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (!v9)
    return _swiftEmptyArrayStorage;
  objc_msgSend(a3, "bounds", v10);
  v12 = v11;
  sub_1002930CC(a1, a2, a3);
  v14 = v13;
  v15 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v16 = objc_msgSend(v15, "absoluteDimension:", v12);
  v17 = objc_msgSend(v15, "absoluteDimension:", v14);
  v18 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v16, v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v20 = v19;
  v21 = v18;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v21, v22, 1);

  v24 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v25 + 32) = v23;
  v28 = v25;
  specialized Array._endMutation()(v25);
  v26 = v28;

  return (_QWORD *)v26;
}

void sub_1000320C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  double v40;
  double *v41;
  uint64_t (**v42)();
  uint64_t v43;
  void *v44;
  uint64_t (*v45)();
  uint64_t (*v46)();
  __n128 v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  NSString v53;
  uint64_t v54;
  double v55;
  id v56;
  double v57;
  double v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t (**v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void *v86;

  v7 = v6;
  v86 = a5;
  v13 = sub_10000DAF8(&qword_1008119D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v16);
  v85 = (uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (dispatch thunk of BaseShelfPresenter.sectionCount.getter(v19) <= a4)
    goto LABEL_9;
  v22 = dispatch thunk of ReviewsPagePresenter.sortActionTitle(for:)(a4);
  if (!v23)
    goto LABEL_9;
  v82 = v22;
  v83 = v23;
  v84 = v15;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v24 == a2 && v25 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v27 = v25;
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v24, v25, 0);
    swift_bridgeObjectRelease(v27);
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease(v83);
LABEL_9:
      sub_10003270C(a1, a2, a3, a4, v86, a6);
      return;
    }
  }
  v29 = type metadata accessor for TitleHeaderView(0);
  v30 = (_QWORD *)swift_dynamicCastClassUnconditional(a1, v29, 0, 0, 0);
  v81 = a1;
  v31 = (uint64_t)v86;
  objc_msgSend(v86, "pageMarginInsets");
  v34 = v33;
  v36 = v35;
  v38 = v37;
  if (a4 >= 1)
    v39 = a4 - 1;
  else
    v39 = 0;
  v40 = v32 + sub_100292D28(a4, v39, a4 < 1, v31);
  objc_msgSend(v30, "setLayoutMargins:", v40, v34, v36, v38);
  v41 = (double *)((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_separatorInset);
  *v41 = v40;
  v41[1] = v34;
  v41[2] = v36;
  v41[3] = v38;
  objc_msgSend(v30, "setNeedsLayout");
  v42 = (uint64_t (**)())((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabelNumberOfLines);
  v43 = *(_QWORD *)((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabelNumberOfLines + 8);
  *v42 = sub_100034018;
  v42[1] = 0;
  swift_release(v43);
  v44 = *(void **)((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel);
  v46 = *v42;
  v45 = v42[1];
  v47 = swift_retain(v45);
  v48 = ((uint64_t (*)(_QWORD *, __n128))v46)(v30, v47);
  objc_msgSend(v44, "setNumberOfLines:", v48, swift_release(v45).n128_f64[0]);
  v49 = v44;
  dispatch thunk of BaseShelfPresenter.title(for:)(a4);
  if (v50)
  {
    v52 = v50;
    v53 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v52).n128_u64[0];
  }
  else
  {
    v53 = 0;
  }
  v54 = (uint64_t)v84;
  objc_msgSend(v49, "setText:", v53, v51);

  if (qword_100804BB8 != -1)
    swift_once(&qword_100804BB8, sub_10016F2B8);
  v55 = *(double *)&qword_100865738;
  v56 = sub_1000300C0();
  objc_msgSend(v56, "contentInsets");
  v58 = v57;

  v59 = sub_1000300C0();
  v60 = v83;
  *(_QWORD *)v21 = v82;
  *((_QWORD *)v21 + 1) = v60;
  *((_QWORD *)v21 + 2) = v59;
  *((double *)v21 + 3) = v55 - v58;
  v61 = type metadata accessor for Accessory(0);
  swift_storeEnumTagMultiPayload(v21, v61, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v21, 0, 1, v61);
  (*(void (**)(char *, uint64_t))((swift_isaMask & *v30) + 0x268))(v21, a6);
  sub_100010F2C((uint64_t)v21, (uint64_t *)&unk_100808F40);
  v62 = *(void **)((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryView);
  if (v62)
  {
    v63 = type metadata accessor for HeaderButton(0);
    v64 = swift_dynamicCastClass(v62, v63);
    if (v64)
    {
      v65 = (void *)v64;
      sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
      v66 = qword_100805FF0;
      v67 = v62;
      if (v66 != -1)
        swift_once(&qword_100805FF0, sub_1004C5DE0);
      v68 = type metadata accessor for FontUseCase(0);
      v69 = sub_10000EFC4(v68, (uint64_t)qword_1008690C0);
      v70 = objc_msgSend(v86, "traitCollection");
      v71 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v69, v70);

      v72 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithFont:", v71);
      objc_msgSend(v65, "setPreferredSymbolConfiguration:forImageInState:", v72, 0);

      v54 = (uint64_t)v84;
    }
  }
  v73 = swift_allocObject(&unk_1007375D8, 24, 7);
  swift_weakInit(v73 + 16, v7);
  v74 = (uint64_t (**)(uint64_t))((char *)v30
                                         + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction);
  v75 = *(_QWORD *)((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction);
  v76 = *(_QWORD *)((char *)v30 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction + 8);
  *v74 = sub_100034044;
  v74[1] = (uint64_t (*)(uint64_t))v73;
  sub_100018908(v75, v76);
  objc_msgSend(v30, "setBackgroundColor:", 0);
  v77 = type metadata accessor for ShelfHeader.Configuration(0);
  v78.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v54, 1, 1, v77);
  v79 = v85;
  sub_1004866D8(0, 0, 0, 0, 0, v54, v85, v78);
  sub_100010F2C(v54, &qword_1008119D0);
  (*(void (**)(uint64_t))((swift_isaMask & *v30) + 0x1C8))(v79);
  v80 = objc_msgSend(v30, "layer");
  objc_msgSend(v80, "setZPosition:", 0.0);

}

void sub_10003270C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  double v65;
  double v66;
  double v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  NSString v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  double v96;
  double v97;
  double v98;
  char *v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t (**v108)(void *);
  uint64_t v109;
  void *v110;
  uint64_t (*v111)(void *);
  uint64_t (*v112)(void *);
  __n128 v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  __n128 v121;
  __n128 v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  void (*v127)(char *, uint64_t);
  _QWORD *v128;
  void *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(_QWORD *, uint64_t);
  id v140;
  uint64_t v141;
  uint64_t v142;
  double (**v143)(uint64_t);
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  uint64_t v148;
  void *v149;
  id v150;
  id v151;
  __n128 v152;
  uint64_t v153;
  double v154;
  uint64_t v155;
  NSString v156;
  double v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  uint64_t v161;
  char *v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  uint64_t v170;
  double v171;
  double *v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  id v179;
  uint64_t ObjectType;
  uint64_t v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  char *v216;
  __n128 v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  BOOL v221;
  __n128 v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  void *v237;
  void *v238;
  _QWORD *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  id v251;
  _QWORD v252[3];
  uint64_t v253;
  _UNKNOWN **v254;
  char v255[8];

  v7 = v6;
  v248 = a6;
  v249 = a4;
  v251 = a1;
  v244 = *v6;
  v231 = type metadata accessor for ShelfBackground(0);
  v230 = *(_QWORD *)(v231 - 8);
  __chkstk_darwin(v231);
  v12 = (void **)((char *)&v225 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (void **)((char *)&v225 - v14);
  __chkstk_darwin(v16);
  v229 = (char *)&v225 - v17;
  v18 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  __chkstk_darwin(v18);
  v20 = (char *)&v225 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Shelf.PresentationHints(0);
  v234 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v233 = (char *)&v225 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v232 = (char *)&v225 - v25;
  v243 = type metadata accessor for Artwork.Crop(0, v24);
  v242 = *(_QWORD *)(v243 - 8);
  __chkstk_darwin(v243);
  v241 = (char *)&v225 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  __chkstk_darwin(v27);
  v240 = (uint64_t)&v225 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v228);
  v247 = (uint64_t)&v225 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v32 = v31;
  if (v30 == a2 && v31 == a3)
  {
    swift_bridgeObjectRelease(a3);
    goto LABEL_5;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, a2, a3, 0);
  swift_bridgeObjectRelease(v32);
  if ((v33 & 1) != 0)
  {
LABEL_5:
    v34 = type metadata accessor for InteractiveTitleHeaderView(0);
    v35 = v251;
    v36 = swift_dynamicCastClass(v251, v34);
    v226 = v34;
    if (v36)
    {
      v237 = (void *)v36;
      v37 = *(void **)(v36 + OBJC_IVAR____TtC20ProductPageExtension26InteractiveTitleHeaderView_titleView);
      v38 = v35;
    }
    else
    {
      v39 = type metadata accessor for TitleHeaderView(0);
      v37 = (void *)swift_dynamicCastClassUnconditional(v35, v39, 0, 0, 0);
      v237 = 0;
    }
    v40 = v249;
    v238 = a5;
    v41 = type metadata accessor for ArtworkLoader(0);
    v42 = *(_QWORD *)(v248 + qword_10086B3B8);
    if (v42)
    {
      v227 = v21;
      v236 = v20;
      v239 = v7;
      v43 = v7[2];
      v44 = (void *)type metadata accessor for ReviewsPagePresenter(0);
      v45 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      v46 = v37;
      v245 = v42;
      swift_retain(v42);
      v47 = dispatch thunk of ShelfPresenter.eyebrowArtwork(for:)(v40, v44, v45);
      v48 = OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_eyebrowArtwork;
      v49 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_eyebrowArtwork);
      swift_retain(v49);
      sub_100150D8C(v47);
      v50 = *(_QWORD *)((char *)v46 + v48);
      *(_QWORD *)((char *)v46 + v48) = v47;
      swift_retain(v47);
      swift_release(v50);
      sub_100150DA0(v49, v51);
      swift_release(v49);
      swift_release(v47);
      v246 = v43;
      v250 = v45;
      v251 = v44;
      v52 = dispatch thunk of ShelfPresenter.eyebrow(for:)(v40, v44, v45);
      v54 = v53;
      v55 = (_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_eyebrowText);
      v56 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_eyebrowText);
      v57 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_eyebrowText + 8);
      swift_bridgeObjectRetain(v57);
      sub_1001508B8(v52, v54);
      v58 = v55[1];
      *v55 = v52;
      v55[1] = v54;
      swift_bridgeObjectRelease(v58);
      sub_100150938(v56, v57);
      v59 = swift_bridgeObjectRelease(v57);
      v60 = *(_QWORD *)((char *)v46 + v48);
      if (v60)
      {
        v61 = *(void **)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_eyebrowArtworkView);
        if (v61)
        {
          v62 = v247;
          (*(void (**)(__n128))((swift_isaMask & *v46) + 0x1C0))(v59);
          v63 = v240;
          sub_100034094(v62, v240);
          swift_retain(v60);
          v64 = v61;
          sub_1000340D8(v62, type metadata accessor for TitleHeaderView.Style);
          v65 = sub_1005988C4(v60, v63, (uint64_t)v46);
          v67 = v66;
          sub_1000340D8(v63, type metadata accessor for TitleHeaderView.TextConfiguration);
          v68 = v241;
          v70 = Artwork.crop.getter(v69);
          v71 = Artwork.Crop.preferredContentMode.getter(v70);
          (*(void (**)(char *, uint64_t))(v242 + 8))(v68, v243);
          v72 = Artwork.config(_:mode:prefersLayeredImage:)(v71, 0, v65, v67);
          v73 = type metadata accessor for ArtworkView(0);
          v74 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v72, 2, 1, v64, v73, v74);
          swift_release(v60);

          swift_release(v72);
        }
      }
      v76 = v249;
      v75 = v250;
      v77 = v251;
      v78 = dispatch thunk of ShelfPresenter.titleArtwork(for:)(v249, v251, v250);
      v79 = OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleArtwork;
      v80 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleArtwork);
      swift_retain(v80);
      sub_100150F0C(v78);
      v81 = *(_QWORD *)((char *)v46 + v79);
      *(_QWORD *)((char *)v46 + v79) = v78;
      swift_retain(v78);
      swift_release(v81);
      sub_100151010(v80, v82);
      swift_release(v80);
      swift_release(v78);
      v235 = *(_QWORD *)((char *)v46 + v79);
      v83 = OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel;
      v84 = *(id *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel);
      dispatch thunk of ShelfPresenter.title(for:)(v76, v77, v75);
      if (v85)
      {
        v87 = v85;
        v88 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v86 = swift_bridgeObjectRelease(v87).n128_u64[0];
      }
      else
      {
        v88 = 0;
      }
      v89 = v236;
      v90 = v244;
      objc_msgSend(v84, "setText:", v88, v86);

      v91 = *(_QWORD *)((char *)v46 + v79);
      if (v91)
      {
        v92 = *(void **)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleArtworkView);
        if (v92)
        {
          v93 = v247;
          (*(void (**)(void))((swift_isaMask & *v46) + 0x1C0))();
          v94 = v240;
          sub_100034094(v93 + *(int *)(v228 + 20), v240);
          swift_retain(v91);
          v95 = v92;
          sub_1000340D8(v93, type metadata accessor for TitleHeaderView.Style);
          v96 = sub_1005988C4(v91, v94, (uint64_t)v46);
          v98 = v97;
          sub_1000340D8(v94, type metadata accessor for TitleHeaderView.TextConfiguration);
          v99 = v241;
          v101 = Artwork.crop.getter(v100);
          v102 = Artwork.Crop.preferredContentMode.getter(v101);
          (*(void (**)(char *, uint64_t))(v242 + 8))(v99, v243);
          v103 = Artwork.config(_:mode:prefersLayeredImage:)(v102, 0, v96, v98);
          v104 = type metadata accessor for ArtworkView(0);
          v105 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v103, 2, 1, v95, v104, v105);
          swift_release(v91);

          swift_release(v103);
        }
      }
      v106 = v235 != 0;
      v107 = swift_allocObject(&unk_100737600, 32, 7);
      *(_BYTE *)(v107 + 16) = v106;
      *(_QWORD *)(v107 + 24) = v90;
      v108 = (uint64_t (**)(void *))((char *)v46
                                             + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabelNumberOfLines);
      v109 = *(_QWORD *)((char *)v46
                       + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabelNumberOfLines
                       + 8);
      *v108 = sub_10003405C;
      v108[1] = (uint64_t (*)(void *))v107;
      swift_retain(v107);
      swift_release(v109);
      v110 = *(void **)((char *)v46 + v83);
      v112 = *v108;
      v111 = v108[1];
      v113 = swift_retain(v111);
      v114 = ((uint64_t (*)(_QWORD *, __n128))v112)(v46, v113);
      objc_msgSend(v110, "setNumberOfLines:", v114, swift_release(v111).n128_f64[0]);
      swift_release(v107);
      v116 = v250;
      v115 = v251;
      v117 = dispatch thunk of ShelfPresenter.seeAllAction(for:)(v76, v251, v250);
      if (v117)
      {
        v118 = v117;
        v119 = dispatch thunk of ShelfPresenter.shelf(for:)(v76, v115, v116);
        v120 = v232;
        Shelf.presentationHints.getter(v121);
        v122 = swift_release(v119);
        v123 = v233;
        static Shelf.PresentationHints.accessoriesFollowBackground.getter(v122);
        v124 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
        v125 = v227;
        v126 = dispatch thunk of SetAlgebra.isSuperset(of:)(v123, v227, v124);
        v127 = *(void (**)(char *, uint64_t))(v234 + 8);
        v127(v123, v125);
        v127(v120, v125);
        v128 = v239;
        if ((v126 & 1) != 0)
        {
          sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
          v129 = (void *)static UIColor.primaryText.getter();
        }
        else
        {
          v129 = 0;
        }
        *v89 = Action.title.getter();
        v89[1] = v137;
        v89[2] = v129;
        v138 = type metadata accessor for Accessory(0);
        v89[3] = 0;
        v89[4] = 0;
        swift_storeEnumTagMultiPayload(v89, v138, 0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v89, 0, 1, v138);
        v139 = *(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v46) + 0x268);
        v140 = v129;
        v139(v89, v248);
        sub_100010F2C((uint64_t)v89, (uint64_t *)&unk_100808F40);
        v141 = swift_allocObject(&unk_100737628, 24, 7);
        swift_weakInit(v141 + 16, v128);
        v142 = swift_allocObject(&unk_100737650, 32, 7);
        *(_QWORD *)(v142 + 16) = v141;
        *(_QWORD *)(v142 + 24) = v76;
        v143 = (double (**)(uint64_t))((char *)v46
                                               + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction);
        v144 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction);
        v145 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction + 8);
        *v143 = sub_10003408C;
        v143[1] = (double (*)(uint64_t))v142;
        swift_retain(v141);
        sub_100018908(v144, v145);
        swift_release(v141);
        swift_release(v118);

      }
      else
      {
        v130 = type metadata accessor for Accessory(0);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v89, 1, 1, v130);
        (*(void (**)(_QWORD *, uint64_t))((swift_isaMask & *v46) + 0x268))(v89, v248);
        sub_100010F2C((uint64_t)v89, (uint64_t *)&unk_100808F40);
        v131 = (_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction);
        v132 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction);
        v133 = *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryAction + 8);
        *v131 = 0;
        v131[1] = 0;
        sub_100018908(v132, v133);
        v128 = v239;
      }
      v146 = v238;
      v147 = v237;
      v148 = v247;
      sub_10051F054(v76, v238, v247);
      (*(void (**)(uint64_t))((swift_isaMask & *v46) + 0x1C8))(v148);
      v149 = *(void **)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_detailLabel);
      v150 = v251;
      if (v149)
      {
        v151 = v149;
        dispatch thunk of ShelfPresenter.subtitle(for:)(v76, v150, v250, v152);
        if (v153)
        {
          v155 = v153;
          v156 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v154 = swift_bridgeObjectRelease(v155).n128_u64[0];
        }
        else
        {
          v156 = 0;
        }
        objc_msgSend(v151, "setText:", v156, v154);

      }
      if (v147)
      {
        *(_QWORD *)&v157 = swift_beginAccess(v128 + 8, v255, 0, 0).n128_u64[0];
        v158 = v128[8];
        if (*(_QWORD *)(v158 + 16))
        {
          v159 = sub_10057E820(v76);
          if ((v160 & 1) != 0)
          {
            v161 = *(_QWORD *)(*(_QWORD *)(v158 + 56) + 8 * v159);
            v253 = v226;
            v254 = &off_100761D18;
            v252[0] = v147;
            v147 = v147;
            swift_retain(v161);
            sub_1004AB0B4((uint64_t)v252);
            swift_release(v161);
            sub_100010F2C((uint64_t)v252, (uint64_t *)&unk_100826520);
          }
        }
      }
      else
      {
        v162 = v229;
        dispatch thunk of ShelfPresenter.background(for:)(v76, v150, v250);
        objc_msgSend(v46, "setOverrideUserInterfaceStyle:", sub_1003C262C());
        (*(void (**)(char *, uint64_t))(v230 + 8))(v162, v231);
      }
      objc_msgSend(v146, "pageMarginInsets", v157);
      v165 = v164;
      v167 = v166;
      v169 = v168;
      if (v76 >= 1)
        v170 = v76 - 1;
      else
        v170 = 0;
      v171 = v163 + sub_100292D28(v76, v170, v76 < 1, (uint64_t)v146);
      objc_msgSend(v46, "setLayoutMargins:", v171, v165, v167, v169);
      v172 = (double *)((char *)v46 + OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_separatorInset);
      *v172 = v171;
      v172[1] = v165;
      v172[2] = v167;
      v172[3] = v169;
      objc_msgSend(v46, "setNeedsLayout");
      objc_msgSend(v46, "setNeedsLayout");
      swift_release(v245);

      return;
    }
LABEL_86:
    v223 = v41;
    v224 = v37;
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v223, v223);
    __break(1u);
    return;
  }
  v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v136 = v135;
  if (v134 == a2 && v135 == a3)
  {
    swift_bridgeObjectRelease(a3);
LABEL_43:
    v174 = type metadata accessor for InfiniteScrollFooterView();
    objc_msgSend(*(id *)(swift_dynamicCastClassUnconditional(v251, v174, 0, 0, 0)+ OBJC_IVAR____TtC20ProductPageExtension24InfiniteScrollFooterView_activityIndicator), "startAnimating");
    return;
  }
  v173 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v135, a2, a3, 0);
  swift_bridgeObjectRelease(v136);
  if ((v173 & 1) != 0)
    goto LABEL_43;
  type metadata accessor for MaterialGradientSectionBackgroundView();
  v175 = static UICollectionReusableView.elementKind.getter();
  v177 = v176;
  if (v175 == a2 && v176 == a3)
    goto LABEL_46;
  v178 = _stringCompareWithSmolCheck(_:_:expecting:)(v175, v176, a2, a3, 0);
  swift_bridgeObjectRelease(v177);
  if ((v178 & 1) != 0)
    goto LABEL_48;
  type metadata accessor for GradientSectionBackgroundView();
  v189 = static UICollectionReusableView.elementKind.getter();
  v191 = v190;
  if (v189 == a2 && v190 == a3)
    goto LABEL_46;
  v192 = _stringCompareWithSmolCheck(_:_:expecting:)(v189, v190, a2, a3, 0);
  swift_bridgeObjectRelease(v191);
  if ((v192 & 1) != 0)
    goto LABEL_48;
  type metadata accessor for ArtworkSectionBackgroundView();
  v193 = static UICollectionReusableView.elementKind.getter();
  v195 = v194;
  if (v193 == a2 && v194 == a3)
  {
LABEL_46:
    swift_bridgeObjectRelease(a3);
    goto LABEL_48;
  }
  v196 = _stringCompareWithSmolCheck(_:_:expecting:)(v193, v194, a2, a3, 0);
  swift_bridgeObjectRelease(v195);
  if ((v196 & 1) != 0)
  {
LABEL_48:
    v179 = v251;
    ObjectType = swift_getObjectType();
    v181 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SectionBackgroundView);
    if (v181)
      v182 = v181;
    else
      v182 = 0;
    if (v181)
      v183 = v179;
    else
      v183 = 0;
    if (v183)
    {
      v184 = swift_getObjectType();
      v185 = type metadata accessor for ReviewsPagePresenter(0);
      v186 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
      v187 = v179;
      v188 = v229;
      dispatch thunk of ShelfPresenter.background(for:)(v249, v185, v186);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, CGFloat, CGFloat, CGFloat, CGFloat))(v182 + 8))(v188, v248, v184, v182, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

      (*(void (**)(char *, uint64_t))(v230 + 8))(v188, v231);
    }
    return;
  }
  v197 = type metadata accessor for InteractiveSectionBackgroundView(0);
  v198 = static UICollectionReusableView.elementKind.getter();
  v200 = v199;
  if (v198 == a2 && v199 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v201 = _stringCompareWithSmolCheck(_:_:expecting:)(v198, v199, a2, a3, 0);
    swift_bridgeObjectRelease(v200);
    if ((v201 & 1) == 0)
    {
      if (a2 == 0x676B636142706F74 && a3 == 0xED0000646E756F72
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x676B636142706F74, 0xED0000646E756F72, a2, a3, 0) & 1) != 0)
      {
        v210 = type metadata accessor for ReviewsPagePresenter(0);
        v211 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
        v212 = dispatch thunk of ShelfPresenter.background(for:)(0, v210, v211);
        v213 = v230;
        v214 = v231;
        if ((*(unsigned int (**)(void **, uint64_t, __n128))(v230 + 88))(v15, v231, v212) != enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v213 + 8))(v15, v214);
          return;
        }
        (*(void (**)(void **, uint64_t))(v213 + 96))(v15, v214);
        v215 = *v15;
        v216 = (char *)v15 + *(int *)(sub_10000DAF8(&qword_100808E30) + 48);
      }
      else
      {
        if ((a2 != 0xD000000000000010 || a3 != 0x80000001006867A0)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001006867A0, a2, a3, 0) & 1) == 0)
        {
          return;
        }
        v37 = (void *)type metadata accessor for ReviewsPagePresenter(0);
        v219 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
        if (dispatch thunk of ShelfPresenter.sectionCount.getter(v37, v219) < 1)
          return;
        v220 = dispatch thunk of ShelfPresenter.sectionCount.getter(v37, v219);
        v221 = __OFSUB__(v220, 1);
        v41 = v220 - 1;
        if (v221)
        {
          __break(1u);
          goto LABEL_86;
        }
        v222 = dispatch thunk of ShelfPresenter.background(for:)(v41, v37, v219);
        if ((*(unsigned int (**)(void **, uint64_t, __n128))(v230 + 88))(v12, v231, v222) != enum case for ShelfBackground.color(_:))
        {
          (*(void (**)(void **, uint64_t))(v230 + 8))(v12, v231);
          return;
        }
        (*(void (**)(void **, uint64_t))(v230 + 96))(v12, v231);
        v215 = *v12;
        v216 = (char *)v12 + *(int *)(sub_10000DAF8(&qword_100808E30) + 48);
      }
      v218 = type metadata accessor for ShelfBackgroundStyle(0, v217);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v218 - 8) + 8))(v216, v218);
      objc_msgSend(v251, "setBackgroundColor:", v215);

      return;
    }
  }
  v202 = v251;
  v203 = swift_dynamicCastClass(v251, v197);
  if (v203)
  {
    v204 = v203;
    swift_beginAccess(v7 + 8, v255, 0, 0);
    v205 = v7[8];
    if (*(_QWORD *)(v205 + 16))
    {
      v206 = sub_10057E820(v249);
      if ((v207 & 1) != 0)
      {
        v208 = *(_QWORD *)(*(_QWORD *)(v205 + 56) + 8 * v206);
        v253 = v197;
        v254 = &off_1007441B8;
        v252[0] = v204;
        v209 = v202;
        swift_retain(v208);
        sub_1004AB0B4((uint64_t)v252);
        swift_release(v208);
        sub_100010F2C((uint64_t)v252, (uint64_t *)&unk_100826520);
      }
    }
  }
}

uint64_t sub_100033A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 16);
    swift_retain(v6);
    swift_release(v5);
    dispatch thunk of ReviewsPagePresenter.performSortAction(sender:)(a1);
    return swift_release(v6);
  }
  return result;
}

id sub_100033B08(int a1, int a2, id a3)
{
  uint64_t v3;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  if (a3)
  {
    v11 = *(_QWORD *)(v3 + 24);
    v5 = a3;
    swift_retain(v11);
    v6 = sub_10000DAF8((uint64_t *)&unk_100819210);
    v7 = sub_100033EC4();
    StateStore.performTransaction<A>(_:)(sub_100033EAC, &v10, v6, (char *)&type metadata for () + 8, v7);
    v8 = v11;

    swift_release(v8);
  }
  return objc_msgSend(a3, "reloadData");
}

void sub_100033BE0()
{
  uint64_t v0;

  sub_100018908(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));

}

uint64_t sub_100033C04()
{
  uint64_t v0;

  v0 = sub_10051E714();
  sub_100018908(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));

  return swift_deallocClassInstance(v0, 153, 7);
}

uint64_t type metadata accessor for ReviewsPageDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100808AA0;
  if (!qword_100808AA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReviewsPageDataSource);
  return result;
}

uint64_t sub_100033C88(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_100641768;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = &unk_100641780;
  v2[3] = &unk_100641798;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 728);
}

uint64_t sub_100033CE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];
  uint64_t v11;
  _BYTE v12[40];

  v0 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = 1;
  AnyHashable.init<A>(_:)(&v11, &type metadata for Int, &protocol witness table for Int);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  v8 = type metadata accessor for Review(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  HIWORD(v10[1]) = -4864;
  strcpy((char *)v10, "Date - Author");
  result = Review.init(id:title:date:dateText:badge:contents:rating:reviewerName:dateAuthorText:response:moreAction:flowPreviewActionsConfiguration:impressionMetrics:voteActions:)(v12, 0x656C746954, 0xE500000000000000, v5, 1702125892, 0xE400000000000000, 0, 0, 0xD00000000000032ELL, 0x80000001006867C0, 5, 0x726F68747541, 0xE600000000000000, v10[0], v10[1], 0, 0, 0, v2,
             _swiftEmptyArrayStorage);
  qword_100808A70 = result;
  return result;
}

void sub_100033EAC()
{
  uint64_t v0;

  sub_100391148(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100033EC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100812E60;
  if (!qword_100812E60)
  {
    v1 = sub_100010DE0((uint64_t *)&unk_100819210);
    result = swift_getWitnessTable(&protocol conformance descriptor for TransientStateStore<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100812E60);
  }
  return result;
}

uint64_t sub_100033F10(void *a1, char a2)
{
  id v3;
  char v4;
  uint64_t v5;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

  v5 = 1;
  if ((a2 & 1) == 0)
    v5 = 2;
  if ((v4 & 1) != 0)
    return 0;
  else
    return v5;
}

double sub_100033F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(Strong + 16);
    swift_retain(v8);
    swift_release(v7);
    v9 = type metadata accessor for ReviewsPagePresenter(0);
    v10 = sub_10000E720(&qword_100819290, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    dispatch thunk of ShelfPresenter.didSelectSeeAll(for:)(a3, v9, v10);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_100034018()
{
  return 2;
}

uint64_t sub_100034020()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100034044(uint64_t a1)
{
  uint64_t v1;

  return sub_100033A8C(a1, v1);
}

uint64_t sub_10003404C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003405C(void *a1)
{
  uint64_t v1;

  return sub_100033F10(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_100034068()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10003408C(uint64_t a1)
{
  uint64_t v1;

  return sub_100033F6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100034094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TitleHeaderView.TextConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000340D8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100034118()
{
  return sub_1000341C4((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_10003092C);
}

uint64_t sub_100034128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1000341B8()
{
  return sub_1000341C4((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_100030BB8);
}

uint64_t sub_1000341C4(uint64_t (*a1)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100034218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10003428C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_10003080C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1000342C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v30 = a3;
  v27 = a5;
  v25 = a2;
  v31 = type metadata accessor for Shelf.PresentationHints(0);
  v29 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_100816170);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v15);
  ReadOnlyLens.value.getter(v32, v13);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  ItemLayoutContext.mutableState.getter(v18);
  v19 = type metadata accessor for ObjectGraph(0);
  v20 = swift_dynamicCastClassUnconditional(v25, v19, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  swift_getKeyPath(&unk_1006417B0);
  ItemLayoutContext.subscript.getter(v6);
  swift_release();
  v21 = sub_10052A948();
  (*(void (**)(_QWORD *, char *, uint64_t, char *, _QWORD *, id, uint64_t))(*(_QWORD *)(v27 + 8) + 80))(v32, v12, v20, v8, v6, v21, v30);
  v22 = swift_unknownObjectRelease();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v29 + 8))(v6, v31, v22);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v32);
}

void sub_100034508(double a1, double a2, double a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t inited;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  __n128 v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  unint64_t v62;
  void *v63;
  char *v64;
  void *v65;
  id v66;
  id v67;
  unint64_t v68;
  void *v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  uint64_t v76;
  void *v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t ObjectType;
  char v96[56];
  __int128 v97;
  __int128 v98;
  void *v99;

  v8 = v7;
  ObjectType = swift_getObjectType();
  v14 = type metadata accessor for BannerMetrics(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for Separator.Position(0, v15);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v91 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Separator(0);
  v93 = *(_QWORD *)(v19 - 8);
  v94 = v19;
  *(_QWORD *)&v20 = __chkstk_darwin(v19).n128_u64[0];
  v92 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = objc_msgSend(v8, "contentView", v20);
  objc_msgSend(a6, "pageMarginInsets");
  v24 = v23;
  objc_msgSend(a6, "pageMarginInsets");
  objc_msgSend(v22, "setLayoutMargins:", a1, v24, a3);

  v25 = Banner.action.getter();
  if (!v25)
  {
LABEL_7:
    v43 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_messageTextView];
    v48 = Banner.message.getter(v26);
    v50 = v49;
    sub_1001EF110(v48, v49, (uint64_t)_swiftEmptyArrayStorage);
    v44 = swift_bridgeObjectRelease(v50);
    if ((a5 & 1) == 0)
      goto LABEL_4;
    goto LABEL_8;
  }
  v27 = v25;
  v28 = Action.title.getter();
  if (!v29)
  {
    v26 = swift_release(v27);
    goto LABEL_7;
  }
  v30 = v28;
  v31 = v29;
  v32 = type metadata accessor for LinkableText(0);
  v88 = v17;
  v87 = v32;
  v99 = 0;
  v97 = 0u;
  v98 = 0u;
  v33 = Banner.message.getter((__n128)0);
  v34 = a5;
  v35 = a7;
  v37 = v36;
  v38 = sub_10000DAF8(&qword_100808E88);
  inited = swift_initStackObject(v38, v96);
  *(_OWORD *)(inited + 16) = xmmword_100640720;
  *(_QWORD *)(inited + 32) = v30;
  *(_QWORD *)(inited + 40) = v31;
  *(_QWORD *)(inited + 48) = v27;
  swift_retain(v27);
  v40 = sub_100509750(inited);
  v41 = v37;
  a7 = v35;
  a5 = v34;
  v17 = v88;
  v42 = LinkableText.__allocating_init(id:text:linkedSubstrings:)(&v97, v33, v41, v40);
  v43 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_messageTextView];
  sub_1001EF018();
  swift_release(v27);
  v44 = swift_release(v42);
  if ((a5 & 1) == 0)
  {
LABEL_4:
    v45 = OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_bottomSeparatorView;
    v46 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_bottomSeparatorView];
    if (v46)
    {
      objc_msgSend(v46, "removeFromSuperview", v44.n128_f64[0]);
      v47 = *(void **)&v8[v45];
    }
    else
    {
      v47 = 0;
    }
    *(_QWORD *)&v8[v45] = 0;

    v59 = *(void **)&v8[v45];
    if (v59)
    {
      v60 = v59;
      v61 = objc_msgSend(v8, "contentView");
      objc_msgSend(v61, "addSubview:", v60);

    }
    v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_includeBackgroundBorder] = Banner.includeBackgroundBorder.getter(objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_roundedBackgroundView], "setHidden:", 0)) & 1;
    sub_1000EBB4C();
    v62 = sub_100035178();
    v63 = (void *)static UIColor.secondaryText.getter(v62);
    goto LABEL_18;
  }
LABEL_8:
  v51 = v91;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v89 + 104))(v91, enum case for Separator.Position.bottom(_:), v90, v44);
  *((_QWORD *)&v98 + 1) = type metadata accessor for ZeroDimension(0);
  v99 = &protocol witness table for ZeroDimension;
  sub_1000119C0(&v97);
  static ZeroDimension.zero.getter();
  v52 = v92;
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v51, &v97, 0.0, 0.0);
  v53 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v54 = &v53[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
  v55 = swift_beginAccess(&v53[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], &v97, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v93 + 40))(v54, v52, v94, v55);
  swift_endAccess(&v97);
  v56 = OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_bottomSeparatorView;
  v57 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_bottomSeparatorView];
  if (v57)
  {
    objc_msgSend(v57, "removeFromSuperview");
    v58 = *(void **)&v8[v56];
  }
  else
  {
    v58 = 0;
  }
  *(_QWORD *)&v8[v56] = v53;
  v64 = v53;

  v65 = *(void **)&v8[v56];
  if (v65)
  {
    v66 = v65;
    v67 = objc_msgSend(v8, "contentView");
    objc_msgSend(v67, "addSubview:", v66);

    v64 = (char *)v67;
  }

  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_roundedBackgroundView], "setHidden:", 1);
  v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_includeBackgroundBorder] = 0;
  sub_1000EBB4C();
  sub_100035178();
  v63 = (void *)static UIColor.primaryText.getter();
LABEL_18:
  sub_1001EF254(v63);
  v68 = sub_100035178();
  v69 = (void *)static UIColor.appTint.getter(v68);
  objc_msgSend(v43, "setTintColor:", v69);

  v71 = Banner.leadingArtwork.getter(v70);
  v72 = OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtwork;
  v73 = *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtwork];
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtwork] = v71;
  swift_retain(v71);
  swift_release(v73);
  sub_1000EB854();
  v74 = swift_release(v71);
  v75 = (void *)Banner.leadingArtworkTintColor.getter(v74);
  v76 = OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtworkTintColor;
  v77 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtworkTintColor];
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtworkTintColor] = v75;
  v78 = v75;

  v79 = *(void **)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtworkView];
  if (v79)
  {
    v80 = *(void **)&v8[v76];
    v81 = v80;
    v82 = v79;
    ArtworkView.artworkTintColor.setter(v80);

    v78 = v82;
  }

  sub_1000EAEB8(a5 & 1, *(_QWORD *)&v8[v72] != 0, (uint64_t)v17, v83);
  v84 = (uint64_t)&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_configuredMetrics];
  swift_beginAccess(&v8[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_configuredMetrics], &v97, 33, 0);
  sub_1000351B4((uint64_t)v17, v84);
  swift_endAccess(&v97);
  objc_msgSend(v8, "setNeedsLayout");
  sub_1000351F8((uint64_t)v17);
  v85 = type metadata accessor for ArtworkLoader(0);
  v86 = *(_QWORD *)(a7 + qword_10086B3B8);
  if (v86)
  {
    swift_retain(*(_QWORD *)(a7 + qword_10086B3B8));
    sub_100034BF8();
    objc_msgSend(v8, "setNeedsLayout");
    swift_release(v86);
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v85, v85);
    __break(1u);
  }
}

void sub_100034BF8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  double v6;
  double v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtwork];
  if (v1)
  {
    v2 = v0;
    v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtworkView];
    if (v3)
    {
      swift_retain_n(v1, 2);
      v13 = v3;
      v4 = objc_msgSend(v2, "traitCollection");
      v5 = sub_1000ECCD0(v1, (uint64_t)v4);
      v7 = v6;
      v9 = v8;
      swift_release(v1);

      if ((v9 & 1) != 0)
      {
        swift_release(v1);

      }
      else
      {
        v10 = Artwork.config(using:)(*(double *)&v5, v7);
        type metadata accessor for ArtworkLoader(0);
        v11 = type metadata accessor for ArtworkView(0);
        static ArtworkLoader.handlerKey<A>(for:)(v14, v13, v11);
        v12 = swift_allocObject(&unk_1007377B0, 24, 7);
        swift_unknownObjectWeakInit(v12 + 16, v2);
        swift_retain(v12);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v10, 2, 0, v14, sub_100035258, v12);
        swift_release(v1);
        swift_release(v10);
        swift_release(v12);

        sub_100010F2C((uint64_t)v14, &qword_100809010);
        swift_release(v12);
      }
    }
  }
}

void sub_100034DA0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  void (*v30)(_BYTE *, uint64_t);
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  Swift::Bool v35;
  _BYTE v36[24];
  _BYTE v37[24];
  UIImage_optional v38;

  v8 = sub_10000DAF8(&qword_100808E90);
  __chkstk_darwin(v8);
  v10 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for Artwork.URLTemplate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v36[-v16];
  __chkstk_darwin(v18);
  v20 = &v36[-v19];
  v21 = a5 + 16;
  sub_100035260(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010F2C((uint64_t)v10, &qword_100808E90);
  }
  else
  {
    v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32);
    v22(v20, v10, v11);
    swift_beginAccess(v21, v36, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v21);
    if (Strong
      && (v24 = (void *)Strong,
          v25 = *(_QWORD *)(Strong + OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtwork),
          swift_retain(v25),
          v24,
          v25))
    {
      Artwork.template.getter(v26);
      v27 = swift_release(v25);
      ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v22)(v17, v14, v11, v27);
      v28 = sub_10000E720(&qword_100808E98, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.URLTemplate, (uint64_t)&protocol conformance descriptor for Artwork.URLTemplate);
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v17, v11, v28);
      v30 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
      v30(v17, v11);
      v30(v20, v11);
      if ((v29 & 1) == 0)
        return;
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v20, v11);
    }
  }
  if (a1)
    a1 = objc_msgSend(a1, "imageWithRenderingMode:", 2);
  swift_beginAccess(v21, v37, 0, 0);
  v31 = swift_unknownObjectWeakLoadStrong(v21);
  if (v31)
  {
    v32 = (void *)v31;
    v33 = *(void **)(v31 + OBJC_IVAR____TtC20ProductPageExtension24BannerCollectionViewCell_leadingArtworkView);
    v34 = v33;

    if (v33)
    {
      v38.value.super.isa = (Class)a1;
      v38.is_nil = 0;
      ArtworkView.setImage(image:animated:)(v38, v35);

    }
  }

}

double sub_100035034(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  double v20;
  double v21;
  uint64_t v23;

  v12 = type metadata accessor for BannerMetrics(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = Banner.leadingArtwork.getter(v13);
  v18 = v17;
  if (v17)
    swift_release(v17);
  type metadata accessor for BannerCollectionViewCell(0);
  sub_1000EAEB8(0, v18 != 0, (uint64_t)v15, v19);
  sub_1000ECE8C(UIEdgeInsetsZero.top, UIEdgeInsetsZero.bottom, a2, a3, v16, (uint64_t)v15, a8);
  v21 = v20;
  sub_1000351F8((uint64_t)v15);
  return v21;
}

void sub_100035128(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  sub_100034508(UIEdgeInsetsZero.top, a3, UIEdgeInsetsZero.bottom, *a1, 0, a8, a5);
}

uint64_t sub_10003514C()
{
  return sub_10000E720(&qword_100808E38, (uint64_t (*)(uint64_t))&type metadata accessor for Banner, (uint64_t)&protocol conformance descriptor for Banner);
}

unint64_t sub_100035178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808850;
  if (!qword_100808850)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100808850);
  }
  return result;
}

uint64_t sub_1000351B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BannerMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000351F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BannerMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100035234()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100035258(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100034DA0(a1, a2, a3, a4, v4);
}

uint64_t sub_100035260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100808E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000352A8()
{
  qword_100808EA0 = 0x4041800000000000;
}

int64x2_t sub_1000352BC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_100808EA8 = (__int128)result;
  return result;
}

void sub_1000352D4()
{
  qword_100808EB8 = 0x4030000000000000;
}

uint64_t sub_1000352E4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100011980(v5, qword_100808EC0);
  sub_10000EFC4(v5, (uint64_t)qword_100808EC0);
  if (qword_100805FE0 != -1)
    swift_once(&qword_100805FE0, sub_1004C5DB0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_100869090);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 10.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

_QWORD *sub_100035430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void (*v15)(void);
  _QWORD *v16;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29FamilyPurchasesViewController_presenter) = a1;
  v5 = objc_allocWithZone((Class)type metadata accessor for CollectionViewTableFlowLayout());
  v6 = objc_msgSend(v5, "init", swift_retain(a1).n128_f64[0]);
  swift_retain(a2);
  v7 = sub_100074B2C((uint64_t)v6, a2);

  v9 = sub_100020248(&qword_100808F28, v8, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_1006418D8);
  v10 = v7;
  dispatch thunk of FamilyPurchasesPresenter.view.setter(v7, v9);
  v11 = v10;
  dispatch thunk of FamilyPurchasesPresenter.pageTitle.getter();
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setTitle:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  *((_BYTE *)v11 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle) = 0;
  v15 = *(void (**)(void))((swift_isaMask & *v11) + 0x1F0);
  v16 = v11;
  v15();

  swift_release();
  swift_release();
  return v16;
}

void sub_100035680()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  NSString *v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for FamilyPurchasesViewController();
  objc_msgSendSuper2(&v24, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v3 = (void *)static UIColor.tableViewBackground.getter();
    objc_msgSend(v2, "setBackgroundColor:", v3);

    v4 = objc_msgSend(v0, "collectionView");
    if (v4)
    {
      v5 = v4;
      v6 = (void *)static UIColor.tableViewBackground.getter();
      objc_msgSend(v5, "setBackgroundColor:", v6);

      objc_msgSend(v5, "setAlwaysBounceVertical:", 1);
      v7 = type metadata accessor for LinkableHeaderCollectionViewCell();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
      static UICollectionReusableView.defaultReuseIdentifier.getter(ObjCClassFromMetadata);
      v10 = v9;
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

      v12 = type metadata accessor for AccountDetailCollectionViewCell(0);
      v13 = swift_getObjCClassFromMetadata(v12);
      static UICollectionReusableView.defaultReuseIdentifier.getter(v13);
      v15 = v14;
      v16 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "registerClass:forCellWithReuseIdentifier:", v13, v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

      v17 = type metadata accessor for DetailCollectionViewCell(0);
      v18 = swift_getObjCClassFromMetadata(v17);
      v19 = UICollectionElementKindSectionHeader;
      static UICollectionReusableView.defaultReuseIdentifier.getter(v19);
      v21 = v20;
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v18, v19, v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

      dispatch thunk of BasePresenter.didLoad()(v23);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100035970(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  NSIndexPath v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  Class isa;
  id v24;
  uint64_t v26;

  v2 = type metadata accessor for FamilyPurchasesSection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = IndexPath.section.getter(v6);
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(v7);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v8 == enum case for FamilyPurchasesSection.errorBanner(_:))
  {
    v9 = type metadata accessor for LinkableHeaderCollectionViewCell();
    static UICollectionReusableView.defaultReuseIdentifier.getter(v9);
    v11 = v10;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v13.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v12, v13.super.isa);
LABEL_9:
    v24 = v14;

    return v24;
  }
  if (v8 == enum case for FamilyPurchasesSection.loggedInUser(_:)
    || v8 == enum case for FamilyPurchasesSection.familyMembers(_:))
  {
    v16 = type metadata accessor for AccountDetailCollectionViewCell(0);
    static UICollectionReusableView.defaultReuseIdentifier.getter(v16);
    v18 = v17;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    v13.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v12, v13.super.isa);
    goto LABEL_9;
  }
  v19 = type metadata accessor for LinkableHeaderCollectionViewCell();
  static UICollectionReusableView.defaultReuseIdentifier.getter(v19);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v22, isa);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v24;
}

void sub_100036240(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = objc_msgSend(v1, "collectionView", __chkstk_darwin(v3).n128_f64[0]);
  if (v6)
  {
    v16 = v6;
    if (IndexSet.count.getter() < 1)
    {

    }
    else
    {
      v7 = objc_opt_self(UIView);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
      v8 = *(unsigned __int8 *)(v4 + 80);
      v9 = (v8 + 24) & ~v8;
      v10 = swift_allocObject(&unk_1007377E8, v9 + v5, v8 | 7);
      *(_QWORD *)(v10 + 16) = v16;
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
      v11 = swift_allocObject(&unk_100737810, 32, 7);
      *(_QWORD *)(v11 + 16) = sub_100036D5C;
      *(_QWORD *)(v11 + 24) = v10;
      aBlock[4] = sub_100036D9C;
      v18 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100184A1C;
      aBlock[3] = &unk_100737828;
      v12 = _Block_copy(aBlock);
      v13 = v18;
      v14 = v16;
      swift_retain(v11);
      objc_msgSend((id)v7, "performWithoutAnimation:", v12, swift_release(v13).n128_f64[0]);

      _Block_release(v12);
      LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v11, "", 112, 293, 40, 1);
      swift_release(v10);
      swift_release(v11);
      if ((v7 & 1) != 0)
        __break(1u);
    }
  }
}

void sub_10003644C(void *a1)
{
  id v2;
  NSIndexSet *v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(a1, "collectionViewLayout");
  objc_msgSend(v2, "invalidateLayout");

  IndexSet._bridgeToObjectiveC()(v3);
  v5 = v4;
  objc_msgSend(a1, "reloadSections:", v4);

}

uint64_t sub_1000364C4()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29FamilyPurchasesViewController_presenter));
}

id sub_1000364D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyPurchasesViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FamilyPurchasesViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension29FamilyPurchasesViewController);
}

void sub_100036538()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  objc_msgSend(v1, "reloadData");

}

uint64_t sub_10003657C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _OWORD v11[2];

  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v8 = result;
    memset(v11, 0, sizeof(v11));
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ActionRunner.Origin.userInitiated(_:), v3);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v11, v6, v9);
    v10 = swift_release(v8);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v10);
    return sub_100010F2C((uint64_t)v11, &qword_100808F20);
  }
  return result;
}

uint64_t sub_100036668(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100808F08, a2, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_100641850);
}

uint64_t sub_100036694(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100808F10, a2, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_100641878);
}

uint64_t sub_1000366C0(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_100808F18, a2, (uint64_t (*)(uint64_t))type metadata accessor for FamilyPurchasesViewController, (uint64_t)&unk_1006418A0);
}

double sub_1000366EC(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[3];
  v13 = a2[4];
  sub_100010F08(a2, v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  v14 = AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v16 = a2[28];
  v17 = a2[29];
  sub_100010F08(a2 + 25, v16);
  v18 = dispatch thunk of Measurable.measurements(fitting:in:)(a1, v16, *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8), a3 - (v14 + v14), a4);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_100037F34((uint64_t)(a2 + 15), (uint64_t)v38);
  v25 = v39;
  if (v39)
  {
    v26 = v40;
    sub_100010F08(v38, v39);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v25);
    AnyDimension.value(in:rounded:)(a1, v11, v25, v26);
    v15(v11, v8);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v38);
  }
  else
  {
    sub_100010F2C((uint64_t)v38, &qword_100814FB0);
  }
  v27 = a2[33];
  v28 = a2[34];
  sub_100010F08(a2 + 30, v27);
  Measurable.measuredSize(fitting:in:)(a1, v27, *(_QWORD *)(v28 + 8), a3, a4);
  v29 = a2[23];
  v30 = a2[24];
  sub_100010F08(a2 + 20, v29);
  Measurable.measuredSize(fitting:in:)(a1, v29, *(_QWORD *)(v30 + 8), a3, a4);
  v31 = a2[8];
  v32 = a2[9];
  sub_100010F08(a2 + 5, v31);
  AnyDimension.topMargin(from:in:)(a1, v31, v32, v18, v20, v22, v24);
  v33 = a2 + 10;
  v34 = a2[13];
  v35 = a2[14];
  sub_100010F08(v33, v34);
  AnyDimension.bottomMargin(from:in:)(a1, v34, v35, v18, v20, v22, v24);
  return a3;
}

double sub_100036998(uint64_t a1, uint64_t a2, char a3, void *a4, __n128 a5, double a6)
{
  double v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[2];
  __int128 v34;
  uint64_t v35;
  void *v36;
  _OWORD v37[10];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[11];
  _QWORD v50[15];
  _BYTE v51[32];
  uint64_t v52;

  v7 = a5.n128_f64[0];
  v32 = a1;
  v11 = type metadata accessor for LabelPlaceholderCompatibility(0, a5);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100804D48 != -1)
    swift_once(&qword_100804D48, sub_1001BFC60);
  sub_100037E90((uint64_t)&xmmword_1008144D0, (uint64_t)v50);
  if ((a3 & 1) == 0)
  {
    sub_100010F2C((uint64_t)v51, &qword_100814FB0);
    memset(v51, 0, sizeof(v51));
    v52 = 0;
  }
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_100806168 != -1)
    swift_once(&qword_100806168, sub_1004C6D9C);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_10000EFC4(v15, (uint64_t)qword_100869510);
  v17 = objc_msgSend(a4, "traitCollection");
  v18 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v16, v17);
  v31 = (uint64_t)a4;
  v19 = (void *)v18;

  sub_100037E90((uint64_t)v50, (uint64_t)v37);
  v20 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v22 = LayoutViewPlaceholder.init(measureWith:)(sub_1001C0704, 0, v21);
  v35 = v20;
  v36 = &protocol witness table for LayoutViewPlaceholder;
  *(_QWORD *)&v34 = v22;
  v23 = type metadata accessor for Feature(0);
  *((_QWORD *)&v39 + 1) = v23;
  *(_QWORD *)&v40 = sub_100020248((unint64_t *)&qword_10080CED0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v24 = sub_1000119C0(&v38);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v24, enum case for Feature.measurement_with_labelplaceholder(_:), v23);
  v25 = v19;
  LOBYTE(v23) = isFeatureEnabled(_:)(&v38);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v38);
  swift_bridgeObjectRetain(a2);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v32, a2, v25, 4, 0, 0, 0, 0, v23 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v33, v26);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v28 = LayoutViewPlaceholder.init(measureWith:)(sub_1001C0704, 0, v27);
  v49[9] = &protocol witness table for LayoutViewPlaceholder;
  v49[8] = v20;
  v49[5] = v28;
  v44 = v37[6];
  v45 = v37[7];
  v46 = v37[8];
  v47 = v37[9];
  v40 = v37[2];
  v41 = v37[3];
  v42 = v37[4];
  v43 = v37[5];
  v38 = v37[0];
  v39 = v37[1];
  sub_100010E24(&v34, (uint64_t)&v48);
  sub_100010E24(v33, (uint64_t)v49);
  v29 = sub_1000366EC(v31, &v38, v7, a6);

  sub_100037ECC(&v38);
  sub_100037F00(v50);
  return v29;
}

uint64_t sub_100036CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100036D5C()
{
  uint64_t v0;

  type metadata accessor for IndexSet(0);
  sub_10003644C(*(void **)(v0 + 16));
}

uint64_t sub_100036D8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100036D9C()
{
  uint64_t v0;

  return sub_1000E4108(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100036DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100036DB4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100036DBC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  Class isa;
  id v18;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v6 == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v6, v7, 0);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) == 0)
      return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  }
  v12 = String._bridgeToObjectiveC()();
  v13 = type metadata accessor for DetailCollectionViewCell(0);
  static UICollectionReusableView.defaultReuseIdentifier.getter(v13);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v12, v16, isa);

  return v18;
}

void sub_100036EE4(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  char **v36;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double left;
  CGFloat bottom;
  CGFloat right;
  uint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  int v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  NSString v53;
  CGFloat top;
  double v55;
  CGFloat v56;
  CGFloat v57;
  double *v58;
  double *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void *v63;
  CGSize v64;
  id v65;
  double v66;
  CGFloat v67;
  UIImage *v68;
  UIImage *v69;
  _BYTE v70[12];
  int v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  v74 = *(_QWORD *)(v6 - 8);
  v75 = v6;
  __chkstk_darwin(v6);
  v8 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  __chkstk_darwin(v9);
  v11 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for FamilyPurchasesSection(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = IndexPath.section.getter(v16);
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(v17);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88))(v15, v12);
  if (v18 == enum case for FamilyPurchasesSection.errorBanner(_:))
  {
    v19 = type metadata accessor for LinkableHeaderCollectionViewCell();
    v20 = swift_dynamicCastClass(a1, v19);
    if (v20)
    {
      v21 = (char *)v20;
      v22 = a1;
      v23 = dispatch thunk of FamilyPurchasesPresenter.errorBannerLinkableText.getter();
      if (v23)
      {
        v24 = v23;
        v25 = objc_retain(*(id *)(*(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension32LinkableHeaderCollectionViewCell_headerView]
                                + OBJC_IVAR____TtC20ProductPageExtension18LinkableHeaderView_label));
        v26 = LinkableText.linkedSubstrings.getter();
        sub_1005B4244(v26, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100037F7C);
        v28 = v27;
        v29 = swift_bridgeObjectRelease(v26);
        v30 = LinkableText.styledText.getter(v29);
        sub_10043DA0C(v30, 0, v28);

        swift_bridgeObjectRelease(v28);
        objc_msgSend(v21, "setNeedsLayout", swift_release(v30).n128_f64[0]);

        swift_release(v24);
      }
      else
      {

      }
    }
    return;
  }
  v31 = v18 == enum case for FamilyPurchasesSection.loggedInUser(_:)
     || v18 == enum case for FamilyPurchasesSection.familyMembers(_:);
  if (!v31)
  {
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    return;
  }
  v32 = type metadata accessor for AccountDetailCollectionViewCell(0);
  v33 = swift_dynamicCastClass(a1, v32);
  if (v33)
  {
    v34 = (char *)v33;
    v35 = a1;
    v36 = &selRef_startInteractiveTransition_;
    v37 = objc_msgSend(v2, "pageMarginInsets");
    v39 = v38;
    v73 = IndexPath.item.getter(v37);
    v40 = IndexPath.item.getter(v73);
    v41 = v40 + 1;
    if (__OFADD__(v40, 1))
    {
      __break(1u);
    }
    else
    {
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v45 = IndexPath.section.getter(v40);
      v46 = dispatch thunk of FamilyPurchasesPresenter.numberOfRows(in:)(v45);
      v31 = v41 == v46;
      v47 = v41 != v46;
      v48 = v31;
      v71 = v48;
      v49 = v35;
      objc_msgSend(v3, "pageMarginInsets");
      objc_msgSend(v34, "setLayoutMargins:");
      v72 = v49;

      dispatch thunk of FamilyPurchasesPresenter.title(forItemAt:)(a2);
      v51 = v50;
      v52 = *(void **)&v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_titleLabel];
      v53 = String._bridgeToObjectiveC()();
      objc_msgSend(v52, "setText:", v53, swift_bridgeObjectRelease(v51).n128_f64[0]);

      v36 = &selRef_fileURLWithPath_;
      objc_msgSend(v34, "setNeedsLayout");
      v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_showTopSeparatorView] = 1;
      objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_topSeparatorView], "setHidden:", 0);
      top = UIEdgeInsetsZero.top;
      if (v73)
        v55 = v39;
      else
        v55 = left;
      v56 = bottom;
      v57 = right;
      if (v73)
      {
        top = 0.0;
        v56 = 0.0;
        v57 = 0.0;
      }
      v58 = (double *)&v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_topSeparatorViewInsets];
      *v58 = top;
      v58[1] = v55;
      v58[2] = v56;
      v58[3] = v57;
      *((_BYTE *)v58 + 32) = 0;
      v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_showBottomSeparatorView] = v71;
      objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_bottomSeparatorView], "setHidden:", v47);
      v59 = (double *)&v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_bottomSeparatorViewInsets];
      *v59 = UIEdgeInsetsZero.top;
      v59[1] = left;
      v59[2] = bottom;
      v59[3] = right;
      *((_BYTE *)v59 + 32) = 0;
      v60 = type metadata accessor for Accessory(0);
      swift_storeEnumTagMultiPayload(v11, v60, 10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v11, 0, 1, v60);
      sub_10034F0CC((uint64_t)v11, *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]);
      sub_100010F2C((uint64_t)v11, (uint64_t *)&unk_100808F40);
      objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_accessoryView], "setHidden:", 0);
      if (qword_1008045F0 == -1)
        goto LABEL_21;
    }
    swift_once(&qword_1008045F0, sub_1000352D4);
LABEL_21:
    v61 = &v34[OBJC_IVAR____TtC20ProductPageExtension31AccountDetailCollectionViewCell_imageMarginRight];
    *(_QWORD *)v61 = qword_100808EB8;
    v61[8] = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v74 + 104))(v8, enum case for Artwork.Style.round(_:), v75);
    ArtworkView.style.setter(v8);
    v62 = dispatch thunk of FamilyPurchasesPresenter.imageForFamilyMember(at:)(a2);
    if (v62)
    {
      v63 = (void *)v62;
      if (qword_1008045E8 != -1)
        swift_once(&qword_1008045E8, sub_1000352BC);
      v64 = (CGSize)xmmword_100808EA8;
      v65 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v65, "scale");
      v67 = v66;

      UIGraphicsBeginImageContextWithOptions(v64, 0, v67);
      objc_msgSend(v63, "drawInRect:", 0.0, 0.0, xmmword_100808EA8);
      v68 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();

    }
    else
    {
      v68 = 0;
    }
    v69 = v68;
    ArtworkView.image.setter(v68);
    objc_msgSend(v34, v36[151]);

  }
}

void sub_100037528(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void *v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  id v41;

  v4 = v3;
  v8 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DetailCollectionViewCell(0);
  v12 = swift_dynamicCastClass(a1, v11);
  if (v12)
  {
    v13 = (char *)v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v14 == a2 && v15 == a3)
    {
      v20 = a1;
      v19 = swift_bridgeObjectRelease(a3).n128_u64[0];
    }
    else
    {
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v14, v15, 0);
      v41 = a1;
      v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
      if ((v18 & 1) == 0)
      {

        return;
      }
    }
    v21 = objc_msgSend(v13, "contentView", *(double *)&v19);
    v22 = (void *)objc_opt_self(UIColor);
    v23 = objc_msgSend(v22, "clearColor");
    objc_msgSend(v21, "setBackgroundColor:", v23);

    v24 = a1;
    v25 = objc_msgSend(v22, "clearColor");
    objc_msgSend(v13, "setBackgroundColor:", v25);

    v13[OBJC_IVAR____TtC20ProductPageExtension24DetailCollectionViewCell_isSelectable] = 0;
    v26 = IndexPath.section.getter(objc_msgSend(v13, "setSelectedBackgroundView:", 0));
    dispatch thunk of FamilyPurchasesPresenter.title(forSection:)(v26);
    v29 = *(void **)&v13[OBJC_IVAR____TtC20ProductPageExtension24DetailCollectionViewCell_titleLabel];
    if (v27)
    {
      v30 = v27;
      v31 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v28 = swift_bridgeObjectRelease(v30).n128_u64[0];
    }
    else
    {
      v31 = 0;
    }
    objc_msgSend(v29, "setText:", v31, v28);

    if (qword_100805FE0 != -1)
      swift_once(&qword_100805FE0, sub_1004C5DB0);
    v32 = type metadata accessor for FontUseCase(0);
    v33 = sub_10000EFC4(v32, (uint64_t)qword_100869090);
    v34 = *(_QWORD *)(v32 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v10, v33, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v32);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v10);
    v35 = v29;
    v36 = objc_msgSend(v22, "systemGrayColor");
    objc_msgSend(v35, "setTextColor:", v36);

    v37 = v24;
    objc_msgSend(v4, "pageMarginInsets");
    v39 = v38;
    objc_msgSend(v4, "pageMarginInsets");
    objc_msgSend(v13, "setLayoutMargins:", 0.0, v39, 0.0);

  }
}

void sub_10003787C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  double v23;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  double left;
  double bottom;
  double right;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;

  v3 = v2;
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FamilyPurchasesSection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = IndexPath.section.getter(v13);
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(v14);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v15 == enum case for FamilyPurchasesSection.errorBanner(_:))
  {
    v16 = dispatch thunk of FamilyPurchasesPresenter.errorBannerLinkableText.getter();
    if (v16)
    {
      v17 = v16;
      v18 = LinkableText.plainText.getter();
      v20 = v19;
      objc_msgSend(a1, "bounds");
      v22.n128_u64[0] = v21;
      sub_100036998(v18, v20, 0, v3, v22, v23);
      swift_release(v17);
      swift_bridgeObjectRelease(v20);
    }
  }
  else
  {
    if (v15 != enum case for FamilyPurchasesSection.loggedInUser(_:)
      && v15 != enum case for FamilyPurchasesSection.familyMembers(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return;
    }
    if (qword_1008045E8 != -1)
      swift_once(&qword_1008045E8, sub_1000352BC);
    v25 = xmmword_100808EA8;
    v26 = dispatch thunk of FamilyPurchasesPresenter.title(forItemAt:)(a2);
    v28 = v27;
    v29 = type metadata accessor for Accessory(0);
    swift_storeEnumTagMultiPayload(v8, v29, 10);
    v30 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v8, 0, 1, v29);
    v31 = IndexPath.item.getter(v30);
    v32 = IndexPath.section.getter(v31);
    v33 = dispatch thunk of FamilyPurchasesPresenter.numberOfRows(in:)(v32);
    v34 = v33 - 1;
    if (__OFSUB__(v33, 1))
    {
      __break(1u);
    }
    else
    {
      v35 = objc_msgSend(v3, "view");
      if (v35)
      {
        v36 = v35;
        left = UIEdgeInsetsZero.left;
        bottom = UIEdgeInsetsZero.bottom;
        right = UIEdgeInsetsZero.right;
        objc_msgSend(v35, "bounds");
        v41 = v40;

        sub_10034FAB8(0, v25, *((void **)&v25 + 1), 0, v26, v28, 0, 0, UIEdgeInsetsZero.top, left, bottom, right, v41, v42, v43, v44, 0, 0, (uint64_t)v8,
          0.0,
          1,
          1,
          v31 == v34,
          v3);
        swift_bridgeObjectRelease(v28);
        sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_100808F40);
        return;
      }
    }
    __break(1u);
  }
}

id sub_100037BA4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  id result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double left;
  double bottom;
  double right;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v4 = sub_10000DAF8(&qword_100808F30);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FamilyPurchasesSection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  dispatch thunk of FamilyPurchasesPresenter.familyPurchasesSection(for:)(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FamilyPurchasesSection.familyMembers(_:), v7);
  v14 = sub_100020248(&qword_100808F38, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FamilyPurchasesSection, (uint64_t)&protocol conformance descriptor for FamilyPurchasesSection);
  dispatch thunk of RawRepresentable.rawValue.getter(&v34, v7, v14);
  dispatch thunk of RawRepresentable.rawValue.getter(&v33, v7, v14);
  v16 = v33;
  v15 = v34;
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  result = (id)((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
  if (v15 == v16)
  {
    v19 = dispatch thunk of FamilyPurchasesPresenter.title(forSection:)(a1);
    v21 = v20;
    if (qword_1008045F8 != -1)
      swift_once(&qword_1008045F8, sub_1000352E4);
    v22 = type metadata accessor for StaticDimension(0);
    v23 = sub_10000EFC4(v22, (uint64_t)qword_100808EC0);
    v24 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v23, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v6, 0, 1, v22);
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v25 = result;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      objc_msgSend(result, "bounds");
      v30 = v29;
      v32 = v31;

      sub_1003304B4(0, v19, v21, 0, 1, (uint64_t)v6, 0, UIEdgeInsetsZero.top, left, bottom, right, v30, v32, 0, 0, 0, 0, v2);
      swift_bridgeObjectRelease(v21);
      return (id)sub_100010F2C((uint64_t)v6, &qword_100808F30);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100037E90(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LinkableHeaderViewLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_100037ECC(_QWORD *a1)
{
  destroy for LinkableHeaderViewLayout(a1);
  return a1;
}

_QWORD *sub_100037F00(_QWORD *a1)
{
  destroy for LinkableHeaderViewLayout.Metrics(a1);
  return a1;
}

uint64_t sub_100037F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100814FB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100445EC8(a1, a2, a3, v3);
}

uint64_t MetadataRibbonHighlightedTextViewLayout.Metrics.standard.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_100804600 != -1)
    swift_once(&qword_100804600, sub_10003901C);
  v0 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  return sub_10000EFC4(v0, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
}

char *sub_100037FCC(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  double left;
  double bottom;
  double right;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v41[5];
  objc_super v42;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v4[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_metrics];
  v16 = qword_100804600;
  v17 = v5;
  if (v16 != -1)
    swift_once(&qword_100804600, sub_10003901C);
  v18 = sub_10000EFC4(v11, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v15, v18, v11);
  v20 = &v17[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_id];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = &v17[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_itemType];
  v22 = type metadata accessor for MetadataRibbonItemType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = &v17[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_descriptionLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);

  v42.receiver = v17;
  v42.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v42, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v28 = (char *)v24;
  objc_msgSend(v28, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v29 = OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_descriptionLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_descriptionLabel];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v31 = v30;
  v32 = (void *)static UIColor.secondaryText.getter(v31);
  objc_msgSend(v31, "setTextColor:", v32);

  v33 = *(void **)&v28[v29];
  v34 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v14, &v28[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_metrics], v11);
  v35 = MetadataRibbonHighlightedTextViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v34);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static CustomTextStyle<>.metadataRibbon.getter(objc_msgSend(v33, "setNumberOfLines:", v35));
  if (qword_100804810 != -1)
    swift_once(&qword_100804810, sub_1000BFD38);
  v36 = type metadata accessor for MetadataRibbonTextStyle(0);
  v37 = sub_10000EFC4(v36, (uint64_t)qword_100864DC0);
  v41[3] = v36;
  v41[4] = sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
  v38 = sub_1000119C0(v41);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v38, v37, v36);
  dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v41);
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v28[v29]);

  return v28;
}

uint64_t sub_100038458(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for LayoutRect(0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  __chkstk_darwin();
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.receiver = v2;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "layoutSubviews");
  v15 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_descriptionLabel];
  v21[3] = type metadata accessor for DynamicTypeLabel(0);
  v21[4] = &protocol witness table for UILabel;
  v21[0] = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v2[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_metrics], v7);
  v16 = v15;
  MetadataRibbonHighlightedTextViewLayout.init(descriptionLabelTextView:metrics:)(v21, v10);
  LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  MetadataRibbonHighlightedTextViewLayout.placeChildren(relativeTo:in:)(v2);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_1000387A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  id v6;

  if (a2)
  {
    v5 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_descriptionLabel];
    if (a4)
    {
      v6 = sub_100038820(a1, a2);
      objc_msgSend(v5, "setAttributedText:", v6);
    }
    else
    {
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setText:", v6);
    }

  }
  return objc_msgSend(v4, "setNeedsLayout");
}

id sub_100038820(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  Class isa;
  uint64_t inited;
  uint64_t v8;
  objc_class *v9;
  unint64_t v10;
  id v11;
  NSString v12;
  Class v13;
  id v14;
  uint64_t v15;
  objc_class *v16;
  NSString *v17;
  objc_class *v18;
  NSString *v19;
  unint64_t v20;
  NSDictionary v21;
  id result;
  void *v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;
  Class v30;
  uint64_t v31;
  char v32[112];
  char v33[80];

  static CustomTextStyle<>.metadataRibbon.getter(a1);
  if (qword_100804810 != -1)
    swift_once(&qword_100804810, sub_1000BFD38);
  v4 = type metadata accessor for MetadataRibbonTextStyle(0);
  sub_10000EFC4(v4, (uint64_t)qword_100864DC0);
  v5 = objc_msgSend(v2, "traitCollection");
  isa = MetadataRibbonTextStyle.font(compatibleWith:)((UITraitCollection)v5).super.isa;

  v31 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v30 = UIColor.init(light:dark:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.450980392, 0.450980392, 0.494117647, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.682352941, 0.682352941, 0.698039216, 1.0)).super.isa;
  v29 = sub_10000DAF8(&qword_100815380);
  inited = swift_initStackObject(v29, v33);
  *(_OWORD *)(inited + 16) = xmmword_100640720;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v8 = sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 40) = isa;
  swift_bridgeObjectRetain(a2);
  v28 = NSFontAttributeName;
  v9 = isa;
  v10 = sub_100509728(inited);
  v11 = objc_allocWithZone((Class)NSMutableAttributedString);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  type metadata accessor for Key(0);
  sub_10000E720((unint64_t *)&qword_100807520, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10064059C);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "initWithString:attributes:", v12, v13, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v15 = swift_initStackObject(v29, v32);
  *(_OWORD *)(v15 + 16) = xmmword_100640600;
  *(_QWORD *)(v15 + 32) = NSForegroundColorAttributeName;
  *(_QWORD *)(v15 + 40) = v30;
  *(_QWORD *)(v15 + 64) = v31;
  *(_QWORD *)(v15 + 72) = v28;
  *(_QWORD *)(v15 + 104) = v8;
  *(_QWORD *)(v15 + 80) = v9;
  v16 = v9;
  v17 = NSForegroundColorAttributeName;
  v18 = v30;
  v19 = v28;
  v20 = sub_100509728(v15);
  v21.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  result = objc_msgSend(v14, "string", swift_bridgeObjectRelease(v20).n128_f64[0]);
  if (result)
  {
    v23 = result;
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v23, "rangeOfString:options:", v24, 1);
    v27 = v26;

    objc_msgSend(v14, "addAttributes:range:", v21.super.isa, v25, v27);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100038C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v0 = MetadataRibbonItem.labelText.getter();
  v2 = v1;
  v3 = MetadataRibbonItem.highlightedText.getter();
  v5 = v4;
  sub_1000387A4(v0, v2, v3, v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_100038C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return MetadataRibbonItemView.layoutContext.getter(ObjectType, a2);
}

uint64_t sub_100038CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return MetadataRibbonItemView.searchLayoutContext.getter(ObjectType, a2);
}

uint64_t sub_100038D04()
{
  uint64_t v0;

  return static MetadataRibbonItemView.isBaselineAligned.getter(v0);
}

uint64_t sub_100038D0C()
{
  uint64_t v0;

  return static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v0);
}

uint64_t sub_100038D14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_itemType;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, &qword_100809018);
}

uint64_t sub_100038D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_itemType;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000393D8(a1, v3, &qword_100809018);
  return swift_endAccess(v5);
}

void *sub_100038DCC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_itemType, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_100038E10()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_100038E58(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

void *sub_100038EB4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_labelMaxWidth, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_100038EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return MetadataRibbonItemView.labelText.getter(ObjectType, a2);
}

uint64_t sub_100038F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_id;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100018ADC(v3, a1, &qword_100809010);
}

uint64_t sub_100038F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_id;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000393D8(a1, v3, &qword_100809010);
  return swift_endAccess(v5);
}

void *sub_100038FD8(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension33MetadataRibbonHighlightedTextView_id, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_10003901C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808020);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  sub_100011980(v4, static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  sub_10000EFC4(v4, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  v5 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  Conditional.init(_:)(sub_1000390F8, 0, v5, &type metadata for Double);
  MetadataRibbonHighlightedTextViewLayout.Metrics.init(maximumNumberofLinesForDescriptionLabel:)(1);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000390F8(id *a1@<X0>, double *a2@<X8>)
{
  id v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id v14;
  NSString *v15;
  id v16;
  NSString *v17;
  char v18;

  v3 = objc_msgSend(*a1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  if ((UIContentSizeCategory.isAccessibilityCategory.getter(v4) & 1) != 0)
  {

    v5 = 6.0;
    goto LABEL_12;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  if (v6 != v9 || v8 != v10)
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    v14 = v4;
    v15 = UIContentSizeCategoryLarge;
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) != 0)
      goto LABEL_10;
    __break(1u);
  }
  v16 = v4;
  v17 = UIContentSizeCategoryLarge;
  swift_bridgeObjectRelease_n(v8, 2);
LABEL_10:
  v18 = static UIContentSizeCategory.<= infix(_:_:)(UIContentSizeCategoryLarge, v4);

  v5 = 2.0;
  if ((v18 & 1) != 0)
    v5 = 4.0;
LABEL_12:
  *a2 = v5;
}

uint64_t static MetadataRibbonHighlightedTextViewLayout.Metrics.standard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100804600 != -1)
    swift_once(&qword_100804600, sub_10003901C);
  v2 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v3 = sub_10000EFC4(v2, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100039298()
{
  return type metadata accessor for MetadataRibbonHighlightedTextView(0);
}

uint64_t type metadata accessor for MetadataRibbonHighlightedTextView(uint64_t a1)
{
  uint64_t result;

  result = qword_100808FF8;
  if (!qword_100808FF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetadataRibbonHighlightedTextView);
  return result;
}

void sub_1000392DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "(";
    sub_100039384(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_1006419A0;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

void sub_100039384(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100809008)
  {
    v2 = type metadata accessor for MetadataRibbonItemType(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100809008);
  }
}

uint64_t sub_1000393D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000DAF8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

double sub_10003941C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  double v45;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[6];

  v56 = a2;
  v51 = a1;
  v57 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout(0);
  v55 = *(_QWORD *)(v57 - 8);
  v6 = __chkstk_darwin(v57);
  v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LabelPlaceholder(0, v6);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTextAppearance(0, v9);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - v19;
  v21 = type metadata accessor for MetadataRibbonHighlightedTextViewLayout.Metrics(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v50 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v47 - v25;
  if (qword_100804600 != -1)
    swift_once(&qword_100804600, sub_10003901C);
  v27 = sub_10000EFC4(v21, (uint64_t)static MetadataRibbonHighlightedTextViewLayout.Metrics.standard);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v28 = v47(v26, v27, v21);
  v29 = DynamicTextAppearance.init()(v28);
  static CustomTextStyle<>.metadataRibbon.getter(v29);
  v48 = v22;
  if (qword_100804810 != -1)
    swift_once(&qword_100804810, sub_1000BFD38);
  v30 = type metadata accessor for MetadataRibbonTextStyle(0);
  v31 = sub_10000EFC4(v30, (uint64_t)qword_100864DC0);
  v59[3] = v30;
  v59[4] = sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
  v32 = sub_1000119C0(v59);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v32, v31, v30);
  DynamicTextAppearance.withCustomTextStyle(_:)(v59);
  v33 = v49;
  v34 = *(void (**)(char *, uint64_t))(v49 + 8);
  v34(v14, v12);
  v35 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  v36 = MetadataRibbonHighlightedTextViewLayout.Metrics.maximumNumberofLinesForDescriptionLabel.getter(v35);
  DynamicTextAppearance.withNumberOfLines(_:)(v36);
  v37 = ((uint64_t (*)(char *, uint64_t))v34)(v17, v12);
  v38 = MetadataRibbonItem.labelText.getter(v37);
  v40 = v39;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v17, v20, v12);
  v41 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v38, v40, v17, v41);
  LabelPlaceholder.layoutTextView.getter(v59, v42);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  sub_10000EF80((uint64_t)v59, (uint64_t)v58);
  v43 = v50;
  v47(v50, (uint64_t)v26, v21);
  v44 = v54;
  MetadataRibbonHighlightedTextViewLayout.init(descriptionLabelTextView:metrics:)(v58, v43);
  v45 = MetadataRibbonHighlightedTextViewLayout.measurements(fitting:in:)(v56, a3, a4);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v57);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v59);
  v34(v20, v12);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v21);
  return v45;
}

uint64_t sub_100039814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  void (*v14)(_QWORD *, uint64_t, __n128);
  int v15;
  __n128 v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v24 - v9);
  KeyPath = swift_getKeyPath(&unk_100641AB0);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v12 = swift_getKeyPath(&unk_100641AE0);
  ReadOnlyLens.subscript.getter(v3, v12, v4);
  v13 = swift_release(v12);
  v14 = *(void (**)(_QWORD *, uint64_t, __n128))(v5 + 8);
  v14(v10, v4, v13);
  v15 = (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 88))(v3, v0);
  if (v15 == enum case for Shelf.ContentType.annotation(_:))
  {
    v17 = 1;
    return v17 & 1;
  }
  if (v15 != enum case for Shelf.ContentType.productBadge(_:))
  {
    v17 = sub_10039ED08();
    (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
    return v17 & 1;
  }
  result = ItemLayoutContext.index.getter(v16);
  v19 = result + 1;
  if (!__OFADD__(result, 1))
  {
    v20 = swift_getKeyPath(&unk_100641AB0);
    ItemLayoutContext.subscript.getter(v7);
    swift_release(v20);
    v21 = swift_getKeyPath(&unk_100641B10);
    ReadOnlyLens.subscript.getter(&v25, v21, v4);
    v22 = swift_release(v21);
    v14(v7, v4, v22);
    v23 = *(_QWORD *)(v25 + 16);
    swift_bridgeObjectRelease(v25);
    v17 = v19 < v23;
    return v17 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100039A28()
{
  uint64_t v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for ProductPageSeparatorItemSupplementaryProvider()
{
  return objc_opt_self(_TtC20ProductPageExtension45ProductPageSeparatorItemSupplementaryProvider);
}

uint64_t sub_100039A7C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = "\t";
  v2[3] = &unk_100641BA0;
  v2[4] = &unk_100641BB8;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 616);
}

char *sub_100039AE0(double a1, double a2, double a3, double a4)
{
  uint64_t *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  objc_class *v26;
  objc_class *v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  objc_super v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v48 = *v4;
  v47 = swift_isaMask;
  v50 = type metadata accessor for AutomationSemantics(0);
  v46 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (char *)v4 + qword_100864930;
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = (uint64_t *)((char *)v4 + qword_100864938);
  *v19 = 0;
  v19[1] = 0;
  swift_weakInit((char *)v4 + qword_100864940, 0);
  v20 = qword_1008064B8;
  v49 = v4;
  if (v20 != -1)
    swift_once(&qword_1008064B8, sub_1004C8F68);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_10000EFC4(v21, (uint64_t)qword_100869F00);
  v23 = *(_QWORD *)(v21 - 8);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v44(v17, v22, v21);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v45(v17, 0, 1, v21);
  v24 = enum case for DirectionalTextAlignment.none(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v25(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  v26 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v43 = v11;
  v27 = v26;
  v28 = objc_allocWithZone(v26);
  v29 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 4, 0, 0, v14, 0, 0);
  *(uint64_t *)((char *)v49 + qword_100864920) = v29;
  v54 = 0u;
  v55 = 0u;
  v52 = 0u;
  v53 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x676E6964616568, 0xE700000000000000, &v54, &v52);
  sub_100010F2C((uint64_t)&v52, &qword_100808F20);
  sub_100010F2C((uint64_t)&v54, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v10);
  v30 = *(void (**)(char *, uint64_t))(v46 + 8);
  v30(v10, v50);
  if (qword_1008064C0 != -1)
    swift_once(&qword_1008064C0, sub_1004C8FF8);
  v48 &= v47;
  v31 = sub_10000EFC4(v21, (uint64_t)qword_100869F18);
  v44(v17, v31, v21);
  v45(v17, 0, 1, v21);
  v25(v14, v24, v43);
  v32 = objc_allocWithZone(v27);
  v33 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 3, 0, 0, 0, v14, 0, 0);
  v34 = v49;
  *(uint64_t *)((char *)v49 + qword_100864928) = v33;
  v54 = 0u;
  v55 = 0u;
  v52 = 0u;
  v53 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974, 0xE500000000000000, &v54, &v52);
  sub_100010F2C((uint64_t)&v52, &qword_100808F20);
  sub_100010F2C((uint64_t)&v54, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v10);
  v30(v10, v50);

  v37 = (objc_class *)type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)(v48 + 608), v35, v36);
  v51.receiver = v34;
  v51.super_class = v37;
  v38 = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", a1, a2, a3, a4);
  v39 = objc_msgSend(v38, "contentView");
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v38[qword_100864920]);

  v40 = objc_msgSend(v38, "contentView");
  v41 = *(id *)&v38[qword_100864928];
  objc_msgSend(v40, "addSubview:", v41);

  return v38;
}

char *sub_100039F84(double a1, double a2, double a3, double a4)
{
  return sub_100039AE0(a1, a2, a3, a4);
}

uint64_t sub_100039FA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_100864930);
}

uint64_t sub_100039FBC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + qword_100864930;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t sub_100039FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + qword_100864938);
  v4 = *(_QWORD *)(v2 + qword_100864938);
  *v3 = a1;
  v3[1] = a2;
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100039FF4()
{
  uint64_t v0;

  return swift_weakLoadStrong(v0 + qword_100864940);
}

void sub_10003A004(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, "backgroundView");
  objc_msgSend(v3, "addSubview:", a1);

}

double sub_10003A058()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = __chkstk_darwin(v1).n128_u64[0];
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) == 1)
  {
    v6 = objc_msgSend(v0, "traitCollection", v3);
    v7 = sub_1004E00CC(v6, v0);

  }
  else
  {
    if (qword_100806898 != -1)
      swift_once(&qword_100806898, sub_1004DFE14);
    v8 = type metadata accessor for StaticDimension(0);
    v9 = sub_10000EFC4(v8, (uint64_t)qword_10086A938);
    static Dimensions.defaultRoundingRule.getter(v9);
    v7 = AnyDimension.value(in:rounded:)(v0, v5, v8, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v7;
}

double sub_10003A18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v9;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1008068A8 != -1)
    swift_once(&qword_1008068A8, sub_1004DFF6C);
  v5 = type metadata accessor for StaticDimension(0);
  v6 = sub_10000EFC4(v5, (uint64_t)qword_10086A968);
  static Dimensions.defaultRoundingRule.getter(v6);
  v7 = AnyDimension.value(in:rounded:)(v0, v4, v5, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

uint64_t sub_10003A278()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  char v39[24];
  CGFloat v40[2];
  double v41;
  uint64_t v42;
  objc_super v43;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v7);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (objc_class *)type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)(v2 + 608), v10, v11);
  v43.receiver = v1;
  v43.super_class = v12;
  objc_msgSendSuper2(&v43, "layoutSubviews");
  v13 = objc_msgSend(v1, "contentView");
  objc_msgSend(v13, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v40[0] = v15;
  v40[1] = v17;
  v41 = v19;
  v42 = v21;
  sub_10003A598(v40);
  v22 = objc_msgSend(v1, "contentView");
  objc_msgSend(v22, "layoutMargins");
  v24 = v23;
  v26 = v25;

  if (*((_BYTE *)v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) == 1)
  {
    v27 = (uint64_t)v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid;
    swift_beginAccess((char *)v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid, v39, 0, 0);
    sub_10003C2B0(v27, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
    {
      sub_100010F2C((uint64_t)v9, &qword_10082AF10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
      sub_100010F2C((uint64_t)v9, &qword_10082AF10);
      v28 = objc_msgSend(v1, "traitCollection");
      v29 = PageGrid.horizontalDirectionalMargins.getter(v28);
      v31 = 34.0;
      if (v30 <= 34.0)
        v32 = v30;
      else
        v32 = 34.0;
      PageGrid.horizontalDirectionalMargins.getter(v29);
      if (v33 <= 34.0)
        v31 = v33;
      NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v28, "layoutDirection"), 0.0, v32, 0.0, v31);
      v24 = v34;
      v26 = v35;

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  v40[0] = v24 + v40[0];
  v41 = v41 - (v26 + v24);
  (*(void (**)(CGFloat *))((swift_isaMask & *v1) + 0x310))(v40);
  v36 = (*(uint64_t (**)(CGFloat *))((swift_isaMask & *v1) + 0x318))(v40);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x188))(v36);
}

void sub_10003A564(void *a1)
{
  id v1;

  v1 = a1;
  sub_10003A278();

}

void sub_10003A598(CGFloat *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  id v29;
  char v30;
  double v31;
  double v32;
  double v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  double MinX;
  CGFloat v46;
  double Width;
  double Height;
  id v49;
  _BYTE v50[24];
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  v2 = v1;
  v4 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v4);
  v6 = &v50[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)&v1[qword_100864938];
  if (v7)
  {
    v8 = *(_QWORD *)&v1[qword_100864938 + 8];
    ObjectType = swift_getObjectType();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
    swift_unknownObjectRetain(v7);
    v49 = (id)v10(ObjectType, v8);
    v11 = (void *)v10(ObjectType, v8);
    LOBYTE(v10) = objc_msgSend(v11, "isHidden");

    if ((v10 & 1) != 0)
    {
      swift_unknownObjectRelease(v7);

    }
    else
    {
      if (v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1)
      {
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(ObjectType, v8) & 1) != 0)
        {
          v12 = sub_100355028();
          v14 = v13;
          v16 = v15;
        }
        else
        {
          v25 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid];
          swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid], v50, 0, 0);
          sub_10003C2B0(v25, (uint64_t)v6);
          v26 = objc_msgSend(v2, "traitCollection");
          sub_100358170((uint64_t)v6, v26);
          v14 = v27;
          v16 = v28;

          sub_100010F2C((uint64_t)v6, &qword_10082AF10);
        }
        v29 = objc_msgSend(v2, "traitCollection", v12);
        v30 = UITraitCollection.prefersRightToLeftLayouts.getter();

        objc_msgSend(v49, "layoutMargins");
        objc_msgSend(v49, "setLayoutMargins:");
        objc_msgSend(v49, "layoutMargins");
        v19 = v31;
        v21 = v32;
        v23 = v33;
        if ((v30 & 1) == 0)
          v14 = v16;
      }
      else
      {
        v17 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid];
        swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid], v50, 0, 0);
        sub_10003C2B0(v17, (uint64_t)v6);
        LOBYTE(v17) = v2[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
        v18 = objc_msgSend(v2, "traitCollection");
        v19 = sub_100358308((uint64_t)v6, v17, v18);
        v21 = v20;
        v23 = v22;
        v14 = v24;

        sub_100010F2C((uint64_t)v6, &qword_10082AF10);
      }
      objc_msgSend(v49, "setLayoutMargins:", v19, v21, v23, v14);
      v34 = objc_msgSend(v2, "contentView");
      objc_msgSend(v34, "bounds");
      v36 = v35;
      v38 = v37;

      objc_msgSend(v49, "sizeThatFits:", v36, v38);
      v40 = v39;
      v41 = *a1;
      v42 = a1[1];
      v43 = a1[2];
      v44 = a1[3];
      v51.origin.x = *a1;
      v51.origin.y = v42;
      v51.size.width = v43;
      v51.size.height = v44;
      MinX = CGRectGetMinX(v51);
      v52.origin.x = v41;
      v52.origin.y = v42;
      v52.size.width = v43;
      v52.size.height = v44;
      v46 = CGRectGetMaxY(v52) - v40;
      v53.origin.x = v41;
      v53.origin.y = v42;
      v53.size.width = v43;
      v53.size.height = v44;
      Width = CGRectGetWidth(v53);
      objc_msgSend(v49, "setFrame:", MinX, v46, Width, v40);
      v54.origin.x = MinX;
      v54.origin.y = v46;
      v54.size.width = Width;
      v54.size.height = v40;
      Height = CGRectGetHeight(v54);
      swift_unknownObjectRelease(v7);

      a1[3] = v44 - Height;
    }
  }
}

double sub_10003A9BC(CGFloat *a1)
{
  char *v1;
  double v3;
  double v4;
  CGFloat v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  CGFloat v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  double v18;
  CGFloat MinX;
  CGFloat v20;
  CGFloat Width;
  double v22;
  CGFloat v23;
  void *v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double result;
  double v36;
  double v37;
  double v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v3 = sub_10003A058();
  v38 = sub_10003A18C();
  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  if (v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1)
  {
    sub_100355028();
    v9 = v8;
  }
  else
  {
    v10 = objc_msgSend(v1, "contentView");
    objc_msgSend(v10, "layoutMargins");
    v9 = v11;

  }
  v12 = v7 - v9;
  v13 = *(void **)&v1[qword_100864920];
  objc_msgSend(v13, "measurementsWithFitting:in:", v1, v12, v6);
  v15 = v14;
  v17 = v16;
  v36 = v18;
  v39.origin.x = v5;
  v39.origin.y = v4;
  v39.size.width = v12;
  v39.size.height = v6;
  MinX = CGRectGetMinX(v39);
  v40.origin.x = v5;
  v40.origin.y = v4;
  v40.size.width = v12;
  v40.size.height = v6;
  v20 = CGRectGetMinY(v40) + v3 - v17;
  v41.origin.x = v5;
  v41.origin.y = v4;
  v41.size.width = v12;
  v41.size.height = v6;
  Width = CGRectGetWidth(v41);
  objc_msgSend(v1, "bounds");
  CGRect.withLayoutDirection(in:relativeTo:)(v1, v22);
  objc_msgSend(v13, "setFrame:");
  v42.origin.x = MinX;
  v42.origin.y = v20;
  v42.size.width = Width;
  v42.size.height = v15;
  v23 = CGRectGetMaxY(v42) - v36;
  v24 = *(void **)&v1[qword_100864928];
  v43.origin.x = v5;
  v43.origin.y = v4;
  v43.size.width = v12;
  v43.size.height = v6;
  v25 = CGRectGetWidth(v43);
  v44.origin.x = v5;
  v44.origin.y = v4;
  v44.size.width = v12;
  v44.size.height = v6;
  objc_msgSend(v24, "measurementsWithFitting:in:", v1, v25, CGRectGetHeight(v44) - v23);
  v27 = v26;
  v29 = v28;
  v37 = v30;
  v45.origin.x = v5;
  v45.origin.y = v4;
  v45.size.width = v12;
  v45.size.height = v6;
  v31 = CGRectGetMinX(v45);
  v46.origin.x = v5;
  v46.origin.y = v4;
  v46.size.width = v12;
  v46.size.height = v6;
  v32 = CGRectGetWidth(v46);
  objc_msgSend(v1, "bounds");
  CGRect.withLayoutDirection(in:relativeTo:)(v1, v33);
  objc_msgSend(v24, "setFrame:");
  v47.origin.x = v31;
  v47.origin.y = v23 + v38 - v29;
  v47.size.width = v32;
  v47.size.height = v27;
  v34 = CGRectGetMaxY(v47) - v37;
  a1[1] = v4 + v34;
  result = v6 - v34;
  a1[3] = result;
  return result;
}

uint64_t sub_10003AC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)((swift_isaMask & *v4) + 0x260), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  objc_msgSendSuper2(&v7, "prepareForReuse");
  return sub_1005A69F0((uint64_t)v5, (uint64_t)&off_100737A38);
}

void sub_10003ACB0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_10003AC48((uint64_t)v4, v1, v2, v3);

}

id sub_10003ACE8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __n128 v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  UIAccessibilityTraits v23;
  id v24;
  void *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unsigned int v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  double v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;

  v5 = v4;
  v61 = a4;
  v63 = *(_QWORD *)v4;
  v62 = swift_isaMask;
  v9 = type metadata accessor for TodayCard.Style(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003588F8(a1, a2, a3);
  v13 = *(void **)&v4[qword_100864920];
  TodayCard.heading.getter(v14);
  v65 = a3;
  v64 = a2;
  if (v15)
  {
    v17 = v15;
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v13, "setText:", v18, v16);

  v20 = TodayCard.style.getter(v19);
  v21 = (void *)TodayCard.Style.cardHeadingTextColor.getter(v20);
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v12, v9);
  objc_msgSend(v13, "setTextColor:", v21);

  v23 = UIAccessibilityTraitButton;
  v24 = objc_msgSend(v13, "setAccessibilityTraits:", UIAccessibilityTraitButton);
  v25 = *(void **)&v5[qword_100864928];
  TodayCard.title.getter(v24);
  if (v26)
  {
    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v29 = 0;
  }
  v30 = v61;
  objc_msgSend(v25, "setText:", v29, v27);

  v32 = TodayCard.style.getter(v31);
  v33 = (void *)TodayCard.Style.cardTitleTextColor.getter(v32);
  v22(v12, v9);
  objc_msgSend(v25, "setTextColor:", v33);

  objc_msgSend(v25, "setAccessibilityTraits:", v23);
  v34 = objc_msgSend(v5, "backgroundView");
  v35 = v65;
  v36 = v64;
  if (v34)
  {
    v37 = v34;
    v38 = TodayCard.backgroundColor.getter(v34);
    if (!v38)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v38 = static UIColor.todayCardDefaultBackground.getter();
    }
    v39 = (void *)v38;
    objc_msgSend(v37, "setBackgroundColor:", v38);

  }
  v40 = objc_msgSend(v5, "contentView");
  v41 = objc_msgSend(v5, "traitCollection");
  v42 = v41;
  v43 = 12.0;
  v44 = 12.0;
  if (v36 != 4)
  {
    v45 = PageGrid.horizontalDirectionalMargins.getter(v41);
    v44 = 20.0;
    if (v46 <= 20.0)
      v43 = v46;
    else
      v43 = 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v45);
    if (v47 <= 20.0)
      v44 = v47;
  }
  v48 = v62 & v63;
  v49 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v42, "layoutDirection"), 0.0, v43, 0.0, v44);
  v51 = v50;
  v53 = v52;
  v55 = v54;

  objc_msgSend(v40, "setLayoutMargins:", v49, v51, v53, v55);
  v58 = type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)(v48 + 608), v56, v57);
  sub_1005A6B0C(a1, v35, v36, v30, v58, (uint64_t)&off_100737A38);
  return objc_msgSend(v5, "setNeedsLayout");
}

void sub_10003B07C(void *a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  id v17;
  __n128 v18;
  double v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v8 = a3 & 1;
  sub_1003551F8((uint64_t)a1, a2, a3 & 1);
  v9 = swift_dynamicCastClass(a1, ObjectType);
  if (v9)
  {
    v10 = (char *)v9;
    v11 = *(_QWORD *)(v9 + qword_100864938);
    if (v11 && (v12 = *(_QWORD *)&v4[qword_100864938]) != 0)
    {
      v13 = *(_QWORD *)(v9 + qword_100864938 + 8);
      v14 = *(_QWORD *)&v4[qword_100864938 + 8];
      v15 = swift_getObjectType();
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 120);
      v17 = a1;
      swift_unknownObjectRetain(v11);
      v18 = swift_unknownObjectRetain(v12);
      v16(v11, v13, v8, v15, v14, v18);
      swift_unknownObjectRelease();
      *(_QWORD *)&v19 = swift_unknownObjectRelease().n128_u64[0];
      if ((_DWORD)v8)
        goto LABEL_11;
    }
    else
    {
      v20 = a1;
      if ((_DWORD)v8)
      {
LABEL_11:

        return;
      }
    }
    v21 = *(void **)&v4[qword_100864920];
    v22 = *(void **)&v10[qword_100864920];
    v23 = objc_msgSend(v22, "text", v19);
    objc_msgSend(v21, "setText:", v23);

    v24 = objc_msgSend(v22, "textColor");
    objc_msgSend(v21, "setTextColor:", v24);

    v25 = *(void **)&v4[qword_100864928];
    v26 = *(void **)&v10[qword_100864928];
    v27 = objc_msgSend(v26, "text");
    objc_msgSend(v25, "setText:", v27);

    v28 = objc_msgSend(v26, "textColor");
    objc_msgSend(v25, "setTextColor:", v28);

    v29 = objc_msgSend(v4, "backgroundView");
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v10, "backgroundView");
      v32 = objc_msgSend(v31, "backgroundColor");

      objc_msgSend(v30, "setBackgroundColor:", v32);
    }
    v33 = objc_msgSend(v4, "contentView");
    v34 = objc_msgSend(v10, "contentView");
    objc_msgSend(v34, "layoutMargins");
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v42 = v41;

    objc_msgSend(v33, "setLayoutMargins:", v36, v38, v40, v42);
    objc_msgSend(v4, "setNeedsLayout");
    goto LABEL_11;
  }
}

double sub_10003B3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD v15[5];

  v4 = v3;
  sub_10000EF80(a1, (uint64_t)v15);
  v7 = sub_10000DAF8((uint64_t *)&unk_100807FA0);
  v8 = type metadata accessor for TodayCard(0);
  v9 = swift_dynamicCast(v14, v15, v7, v8, 6);
  if ((v9 & 1) != 0)
  {
    v11 = TodayCard.overlay.getter(v9);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v4 + qword_100864938);
      if (v13)
      {
        v15[3] = type metadata accessor for TodayCardOverlay(0);
        v15[4] = sub_10003C268();
        v15[0] = v12;
        v14[3] = swift_getObjectType();
        v14[0] = v13;
        swift_unknownObjectRetain_n(v13, 2);
        swift_retain(v12);
        tryToFetch(artworkFor:into:on:asPartOf:)(v15, v14, a2, a3);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
        sub_100010F2C((uint64_t)v15, &qword_100819230);
        return result;
      }
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

id sub_10003B4DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v7;
  id v8;
  id v9;
  id result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  objc_super v14;

  v5 = v4;
  v7 = (objc_class *)type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)((swift_isaMask & *v5) + 0x260), a3, a4);
  v14.receiver = v5;
  v14.super_class = v7;
  objc_msgSendSuper2(&v14, "traitCollectionDidChange:", a1);
  v8 = objc_msgSend(v5, "traitCollection");
  v9 = objc_msgSend(v8, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v9 != result))
  {
    if (qword_1008068A0 != -1)
      swift_once(&qword_1008068A0, sub_1004DFF60);
    v11 = sub_10000DAF8((uint64_t *)&unk_100808820);
    sub_10000EFC4(v11, (uint64_t)qword_10086A950);
    v12 = v5;
    Conditional.evaluate(with:)(&v13, &v12, v11);
    UILabel.alignment.setter(v13);
    if (qword_1008068B0 != -1)
      swift_once(&qword_1008068B0, sub_1004E00C0);
    sub_10000EFC4(v11, (uint64_t)qword_10086A980);
    v12 = v5;
    Conditional.evaluate(with:)(&v13, &v12, v11);
    return (id)UILabel.alignment.setter(v13);
  }
  return result;
}

void sub_10003B670(void *a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = a3;
  v8 = a1;
  sub_10003B4DC(a3, (uint64_t)v8, v6, v7);

}

void sub_10003B6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  char **v8;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void *v22;
  void *v23;
  double v24;
  id v25;
  id v26;

  v5 = v4;
  v8 = &selRef_startInteractiveTransition_;
  if (a3)
  {
    ObjectType = swift_getObjectType(a3, a2);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
    v13 = (void *)v12(ObjectType, a4);
    objc_msgSend(v13, "removeFromSuperview");

    v15 = swift_getObjectType(a3, v14);
    v16 = (void *)v12(v15, a4);
    objc_msgSend(v16, "_setContinuousCornerRadius:", 0.0);

    v17 = (void *)v12(v15, a4);
    v8 = &selRef_startInteractiveTransition_;
    v18 = v17;
    v19 = objc_msgSend(v17, "layer");

    objc_msgSend(v19, "setMaskedCorners:", 15);
  }
  if (a1)
  {
    v20 = swift_getObjectType(a1, a2);
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    swift_unknownObjectRetain(a1);
    v22 = (void *)v21(v20, a2);
    v23 = v22;
    v24 = 14.0;
    if (v5[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v24 = 0.0;
    objc_msgSend(v22, "_setContinuousCornerRadius:", v24);
    v25 = objc_msgSend(v23, v8[113]);
    objc_msgSend(v25, "setMaskedCorners:", 12);

    v26 = objc_msgSend(v5, "contentView");
    objc_msgSend(v26, "addSubview:", v23);
    swift_unknownObjectRelease(a1);

  }
}

void sub_10003B898()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t);
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  char v45[80];

  sub_100355368();
  v1 = objc_msgSend(v0, "contentView");
  v2 = sub_10000DAF8((uint64_t *)&unk_100809170);
  inited = swift_initStackObject(v2, v45);
  *(_OWORD *)(inited + 16) = xmmword_1006405F0;
  v4 = objc_msgSend(*(id *)&v0[qword_100864920], "text");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  v9 = objc_msgSend(*(id *)&v0[qword_100864928], "text");
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v13;
  v14 = &v0[qword_100864938];
  v15 = *(_QWORD *)&v0[qword_100864938];
  if (!v15)
  {
    *(_QWORD *)(inited + 64) = 0;
    *(_QWORD *)(inited + 72) = 0;
    v24 = *(_QWORD *)(inited + 40);
    if (v24)
      goto LABEL_15;
LABEL_11:
    v25 = _swiftEmptyArrayStorage;
    v26 = *(_QWORD *)(inited + 56);
    if (!v26)
      goto LABEL_23;
    goto LABEL_18;
  }
  v16 = *((_QWORD *)v14 + 1);
  ObjectType = swift_getObjectType();
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
  swift_unknownObjectRetain(v15);
  v19 = (void *)v18(ObjectType, v16);
  v20 = objc_msgSend(v19, "accessibilityLabel", swift_unknownObjectRelease(v15).n128_f64[0]);

  if (v20)
  {
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 72) = v23;
  v24 = *(_QWORD *)(inited + 40);
  if (!v24)
    goto LABEL_11;
LABEL_15:
  v27 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain(v24);
  v25 = sub_1003D9EA4(0, 1, 1, _swiftEmptyArrayStorage);
  v29 = v25[2];
  v28 = v25[3];
  if (v29 >= v28 >> 1)
    v25 = sub_1003D9EA4((_QWORD *)(v28 > 1), v29 + 1, 1, v25);
  v25[2] = v29 + 1;
  v30 = &v25[2 * v29];
  v30[4] = v27;
  v30[5] = v24;
  v26 = *(_QWORD *)(inited + 56);
  if (v26)
  {
LABEL_18:
    v31 = *(_QWORD *)(inited + 48);
    swift_bridgeObjectRetain(v26);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = sub_1003D9EA4(0, v25[2] + 1, 1, v25);
    v33 = v25[2];
    v32 = v25[3];
    if (v33 >= v32 >> 1)
      v25 = sub_1003D9EA4((_QWORD *)(v32 > 1), v33 + 1, 1, v25);
    v25[2] = v33 + 1;
    v34 = &v25[2 * v33];
    v34[4] = v31;
    v34[5] = v26;
  }
LABEL_23:
  v35 = *(_QWORD *)(inited + 72);
  if (v35)
  {
    v36 = *(_QWORD *)(inited + 64);
    swift_bridgeObjectRetain(*(_QWORD *)(inited + 72));
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = sub_1003D9EA4(0, v25[2] + 1, 1, v25);
    v38 = v25[2];
    v37 = v25[3];
    if (v38 >= v37 >> 1)
      v25 = sub_1003D9EA4((_QWORD *)(v37 > 1), v38 + 1, 1, v25);
    v25[2] = v38 + 1;
    v39 = &v25[2 * v38];
    v39[4] = v36;
    v39[5] = v35;
  }
  swift_bridgeObjectRelease(inited);
  v40 = sub_10000DAF8((uint64_t *)&unk_100815880);
  v41 = sub_10003C21C();
  BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v40, v41);
  v43 = v42;
  swift_bridgeObjectRelease(v25);
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityLabel:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

}

Class sub_10003BC34(void *a1)
{
  id v1;
  uint64_t v2;
  NSArray v3;

  v1 = a1;
  v2 = sub_10003BC90();

  if (v2)
  {
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3.super.isa = 0;
  }
  return v3.super.isa;
}

uint64_t sub_10003BC90()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  _QWORD *v9;

  v1 = sub_10000DAF8(&qword_1008091A0);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100640720;
  v3 = objc_msgSend(v0, "contentView");
  *(_QWORD *)(v2 + 56) = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = &v0[qword_100864938];
  v5 = *(_QWORD *)&v0[qword_100864938];
  if (!v5
    || (v6 = *((_QWORD *)v4 + 1),
        ObjectType = swift_getObjectType(),
        v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 144),
        swift_unknownObjectRetain(v5),
        v9 = (_QWORD *)v8(ObjectType, v6),
        swift_unknownObjectRelease(v5),
        !v9))
  {
    swift_bridgeObjectRelease(0);
    v9 = _swiftEmptyArrayStorage;
  }
  sub_10001A62C((uint64_t)v9);
  return v2;
}

void sub_10003BD94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (a3)
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, (char *)&type metadata for Any + 8);
  else
    v4 = 0;
  v7 = a1;
  sub_10003BDF8(v4, (uint64_t)v7, v5, v6);

}

void sub_10003BDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSArray v8;
  objc_class *v9;
  objc_super v10;

  v5 = *v4;
  v6 = swift_isaMask;
  if (a1)
  {
    v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v8.super.isa = 0;
  }
  v9 = (objc_class *)type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)((v6 & v5) + 0x260), a3, a4);
  v10.receiver = v4;
  v10.super_class = v9;
  objc_msgSendSuper2(&v10, "setAccessibilityElements:", v8.super.isa);

}

uint64_t sub_10003BE90()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100864938));
  return swift_weakDestroy(v0 + qword_100864940);
}

id sub_10003BEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for LegacyTodayCardCollectionViewCell(0, *(_QWORD *)((swift_isaMask & *v4) + 0x260), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_10003BF28(uint64_t a1)
{

  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_100864938));
  return swift_weakDestroy(a1 + qword_100864940);
}

uint64_t type metadata accessor for LegacyTodayCardCollectionViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003C2F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LegacyTodayCardCollectionViewCell);
}

uint64_t sub_10003BF8C()
{
  return sub_100039FA4();
}

uint64_t sub_10003BFA4(uint64_t a1, char a2)
{
  return sub_100039FBC(a1, a2 & 1);
}

uint64_t sub_10003BFAC()
{
  uint64_t v0;

  v0 = sub_10003C008();
  return swift_unknownObjectRetain(v0);
}

double sub_10003BFDC(uint64_t a1)
{
  double result;

  sub_10003C01C(a1);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_10003C008()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_100864938);
}

uint64_t sub_10003C01C(uint64_t a1)
{
  uint64_t v1;

  return swift_weakAssign(v1 + qword_100864940, a1);
}

void sub_10003C030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  id v19;

  v1 = v0;
  sub_1003584B4();
  v2 = v0 + qword_100864938;
  v3 = *(_QWORD *)(v0 + qword_100864938);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 32);
    v8 = swift_unknownObjectRetain(v3);
    v7(v6, ObjectType, v4, v8);
    swift_unknownObjectRelease();
  }
  v9 = v1 + qword_100864938;
  v10 = *(_QWORD *)(v1 + qword_100864938);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) == 1)
  {
    if (!v10)
      return;
    v11 = *(_QWORD *)(v9 + 8);
    v12 = swift_getObjectType();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 16);
    v14 = swift_unknownObjectRetain(v10);
    v19 = (id)v13(v12, v11, v14);
    swift_unknownObjectRelease();
    objc_msgSend(v19, "_setContinuousCornerRadius:", 0.0);
  }
  else
  {
    if (!v10)
      return;
    v15 = *(_QWORD *)(v9 + 8);
    v16 = swift_getObjectType();
    v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 16);
    v18 = swift_unknownObjectRetain(v10);
    v19 = (id)v17(v16, v15, v18);
    swift_unknownObjectRelease();
    objc_msgSend(v19, "_setContinuousCornerRadius:", 14.0);
  }

}

uint64_t sub_10003C198(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v3 = v2 + qword_100864938;
  v4 = *(_QWORD *)(v2 + qword_100864938);
  if (v4)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(v4, a2);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 128);
    swift_unknownObjectRetain(v4);
    v8(v5, ObjectType, v6);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

unint64_t sub_10003C21C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809180;
  if (!qword_100809180)
  {
    v1 = sub_100010DE0((uint64_t *)&unk_100815880);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100809180);
  }
  return result;
}

unint64_t sub_10003C268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809190;
  if (!qword_100809190)
  {
    v1 = type metadata accessor for TodayCardOverlay(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCardOverlay, v1);
    atomic_store(result, (unint64_t *)&qword_100809190);
  }
  return result;
}

uint64_t sub_10003C2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10082AF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t destroy for SearchFocusPageGridProvider(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

uint64_t *_s20ProductPageExtension27SearchFocusPageGridProviderVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for SearchFocusPageGridProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

__n128 initializeWithTake for TodayCardOverlayReusePool.Scrap(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for SearchFocusPageGridProvider(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayCardOverlayReusePool.Scrap(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayCardOverlayReusePool.Scrap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchFocusPageGridProvider()
{
  return &type metadata for SearchFocusPageGridProvider;
}

uint64_t sub_10003C510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>, double a13@<D5>)
{
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t KeyPath;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, _QWORD, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, _QWORD, uint64_t);
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  char *v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[3];

  v104 = a6;
  v105 = a5;
  v112 = a4;
  v116 = a7;
  v106 = sub_10000DAF8(&qword_100808210);
  v103 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v102 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v101 = (char *)&v94 - v25;
  v100 = type metadata accessor for SearchFocusTwoColumnListDisplayOptions(0, v24);
  v99 = *(_QWORD *)(v100 - 8);
  v26 = __chkstk_darwin(v100);
  v98 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for Shelf.ContentsMetadata(0, v26);
  v107 = *(_QWORD *)(v109 - 8);
  v28 = __chkstk_darwin(v109);
  v108 = (uint64_t *)((char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v114 = type metadata accessor for PageGrid.Direction(0, v28);
  v30 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v97 = (char *)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v110 = (char *)&v94 - v33;
  __chkstk_darwin(v34);
  v113 = (char *)&v94 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v94 - v37;
  v39 = type metadata accessor for Shelf.ContentType(0);
  v40 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v42 = (uint64_t *)((char *)&v94 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v43);
  v95 = (uint64_t)&v94 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v48 = (char *)&v94 + *(int *)(v47 + 48) - v46;
  v115 = (uint64_t)&v94 - v46;
  sub_10003CFE8(a2, (uint64_t)&v94 - v46);
  sub_10003CFE8(a3, (uint64_t)v48);
  KeyPath = swift_getKeyPath(&unk_100641CC0);
  v50 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v111 = a1;
  ReadOnlyLens.subscript.getter(v42, KeyPath, v50);
  v51 = swift_release(KeyPath);
  v96 = v40;
  v52 = v39;
  v53 = (*(uint64_t (**)(_QWORD *, uint64_t, __n128))(v40 + 88))(v42, v39, v51);
  if (v53 == enum case for Shelf.ContentType.singleColumnList(_:))
  {
    v54 = v114;
    v55 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v30 + 104))(v38, enum case for PageGrid.Direction.vertical(_:), v114);
    v56 = UITraitCollection.prefersAccessibilityLayouts.getter(v55);
    if ((v56 & 1) != 0)
      UITraitCollection.isSizeClassCompact.getter(v56);
    v57 = v113;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v113, v38, v54);
    v58 = sub_1003493D4(1);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000015, 0x8000000100686DD0, v57, 0, v58, a8, a9, a10, a11, a12, a13);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v38, v54);
    return sub_100010F2C(v115, &qword_100808540);
  }
  if (v53 == enum case for Shelf.ContentType.twoColumnList(_:))
  {
    v59 = v30;
    v60 = *(void (**)(char *, _QWORD, uint64_t))(v30 + 104);
    v61 = v110;
    v62 = v114;
    v60(v110, enum case for PageGrid.Direction.vertical(_:), v114);
    v63 = swift_getKeyPath(&unk_100641CF0);
    v64 = v108;
    ReadOnlyLens.subscript.getter(v108, v63, v50);
    v65 = swift_release(v63);
    v66 = v107;
    v67 = v109;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, __n128))(v107 + 88))(v64, v109, v65) == enum case for Shelf.ContentsMetadata.searchFocusTwoColumnList(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v66 + 96))(v64, v67);
      v68 = v99;
      v69 = v98;
      v70 = v100;
      v71 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v99 + 32))(v98, v64, v100);
      v72 = SearchFocusTwoColumnListDisplayOptions.numberOfColumns.getter(v71);
      v73 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    }
    else
    {
      v73 = (*(uint64_t (**)(_QWORD *, uint64_t))(v66 + 8))(v64, v67);
      v72 = 1;
    }
    v83 = UITraitCollection.prefersAccessibilityLayouts.getter(v73);
    if ((v83 & 1) != 0 && (UITraitCollection.isSizeClassCompact.getter(v83) & 1) != 0)
      v72 = 1;
    v84 = v113;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v113, v61, v62);
    v85 = sub_1003493D4(v72);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000015, 0x8000000100686DD0, v84, 0, v85, a8, a9, a10, a11, a12, a13);
    goto LABEL_15;
  }
  if (v53 == enum case for Shelf.ContentType.scrollablePill(_:))
  {
    v59 = v30;
    v74 = *(void (**)(char *, _QWORD, uint64_t))(v30 + 104);
    v61 = v113;
    v62 = v114;
    v74(v113, enum case for PageGrid.Direction.horizontal(_:), v114);
    v117[0] = 0x4020000000000000;
    v75 = sub_10002128C();
    v76 = (uint64_t)v101;
    PageGrid.DirectionalValue.init(_:)(v117, &type metadata for CGFloat, v75);
    v117[0] = 0x4020000000000000;
    v77 = (uint64_t)v102;
    v78 = PageGrid.DirectionalValue.init(_:)(v117, &type metadata for CGFloat, v75);
    v79 = v97;
    (*(void (**)(char *, char *, uint64_t, __n128))(v59 + 16))(v97, v61, v62, v78);
    v80 = sub_1004006BC(v76, v77);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6D6F74737563, 0xE600000000000000, v79, 0, v80, a8, a9, a10, a11, a12, a13);
    v81 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v82 = v106;
    v81(v77, v106);
    v81(v76, v82);
LABEL_15:
    (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v62);
    return sub_100010F2C(v115, &qword_100808540);
  }
  v87 = v104;
  v88 = v105;
  v117[0] = v105;
  v117[1] = v104;
  v89 = *(int *)(v43 + 48);
  v90 = v95;
  v91 = v95 + v89;
  v92 = v115;
  sub_10003CFE8(v115, v95);
  sub_10003CFE8((uint64_t)v48, v91);
  v93 = sub_10003D034();
  swift_retain(v88);
  swift_retain(v87);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v111, v90, v91, v112, &type metadata for SearchLandingPageGridProvider, v93, a8, a9, a10, a11, a12, a13);
  swift_release(v87);
  swift_release(v88);
  sub_100010F2C(v92, &qword_100808540);
  sub_100010F2C(v91, &qword_100808548);
  sub_100010F2C(v90, &qword_100808548);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v96 + 8))(v42, v52);
}

uint64_t sub_10003CC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_10003CFA4();
  return PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_10003CD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_10003CFA4();
  return PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_10003CDF8()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t sub_10003CE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t v11;

  return sub_10003C510(a1, a2, a3, a4, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_10003CE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  __int128 *v12;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v35 = a5;
  v36 = a6;
  v34 = a4;
  v22 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v22);
  v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v33 - v26;
  v28 = *((_QWORD *)v12 + 2);
  v30 = (char *)&v33 + *(int *)(v29 + 48) - v26;
  sub_10003CFE8(a2, (uint64_t)&v33 - v26);
  sub_10003CFE8(a3, (uint64_t)v30);
  v37 = *v12;
  v38 = v28;
  v31 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_10003CFE8((uint64_t)v27, (uint64_t)v24);
  sub_10003CFE8((uint64_t)v30, v31);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, v24, v31, v34, v35, v36, a7, a8, a9, a10, a11, a12);
  sub_100010F2C((uint64_t)v27, &qword_100808540);
  sub_100010F2C(v31, &qword_100808548);
  return sub_100010F2C((uint64_t)v24, &qword_100808548);
}

unint64_t sub_10003CFA4()
{
  unint64_t result;

  result = qword_1008091A8;
  if (!qword_1008091A8)
  {
    result = swift_getWitnessTable(&unk_100641C4C, &type metadata for SearchFocusPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1008091A8);
  }
  return result;
}

uint64_t sub_10003CFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100808548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003D034()
{
  unint64_t result;

  result = qword_1008091B0;
  if (!qword_1008091B0)
  {
    result = swift_getWitnessTable(&unk_100642EF8, &type metadata for SearchLandingPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1008091B0);
  }
  return result;
}

id sub_10003D0D4()
{
  void *v0;

  return objc_msgSend(v0, "setDelegate:", v0);
}

uint64_t sub_10003D0E8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[2];
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v73._countAndFlagsBits = a1;
  v73._object = a2;
  v62 = sub_10000DAF8((uint64_t *)&unk_100820670);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8((uint64_t *)&unk_100809290);
  v5 = __chkstk_darwin(v4);
  v72 = (char **)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = type metadata accessor for FlowOrigin(0, v5);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v71 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowAnimationBehavior(0);
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  __chkstk_darwin(v8);
  v69 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for FlowPresentationContext(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetrics(0, v11);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FlowPage(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v22);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v59 - v26;
  v75 = type metadata accessor for URL(0, v28);
  v29 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension25StoreNavigationController_objectGraph);
  if (result)
  {
    *(_QWORD *)&v77 = 0;
    *((_QWORD *)&v77 + 1) = 0xE000000000000000;
    v74 = result;
    swift_retain(result);
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease(*((_QWORD *)&v77 + 1));
    *(_QWORD *)&v77 = 0xD00000000000001BLL;
    *((_QWORD *)&v77 + 1) = 0x8000000100686EA0;
    String.append(_:)(v73);
    v33 = *((_QWORD *)&v77 + 1);
    URL.init(string:)(v77, *((_QWORD *)&v77 + 1));
    v34 = swift_bridgeObjectRelease(v33);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48))(v27, 1, v75, v34);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v35 = v75;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v75);
      v79 = 0;
      v77 = 0u;
      v78 = 0u;
      v36 = *(void (**)(char *, _QWORD, uint64_t))(v19 + 104);
      v59 = v21;
      v36(v21, enum case for FlowPage.product(_:), v18);
      v37 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
      v73._object = v31;
      v37(v24, v31, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v35);
      v38 = type metadata accessor for ReferrerData(0);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v17, 1, 1, v38);
      memset(v76, 0, sizeof(v76));
      static ActionMetrics.notInstrumented.getter(v39);
      v40 = v65;
      (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v65, enum case for FlowPresentationContext.infer(_:), v64);
      v41 = v69;
      (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v69, enum case for FlowAnimationBehavior.infer(_:), v67);
      v42 = v71;
      v43 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v68 + 104))(v71, enum case for FlowOrigin.inapp(_:), v70);
      v44 = static FlowActionPresentation.stackPush.getter(v43);
      v46 = v45;
      v47 = type metadata accessor for FlowAction(0);
      swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
      v48 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v77, 0, 0, 0, v59, v24, 0, 0, v17, v76, v14, v40, v41, v42, 0, v44, v46);
      v49 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
      v50 = v72;
      BaseObjectGraph.optional<A>(_:)(v72, v49, v49);
      v51 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v51 + 48))(v50, 1, v49) == 1)
      {
        (*(void (**)(void *, uint64_t))(v29 + 8))(v73._object, v75);
        swift_release(v74);
        swift_release(v48);
        return sub_10003DAAC((uint64_t)v50);
      }
      else
      {
        *((_QWORD *)&v78 + 1) = v47;
        v79 = sub_100020248((unint64_t *)&qword_1008092B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
        *(_QWORD *)&v77 = v48;
        v52 = v60;
        v53 = v61;
        v54 = v62;
        (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v62);
        v55 = swift_retain(v48);
        v56 = v74;
        v57 = ActionDispatcher.perform(_:withMetrics:asPartOf:)(&v77, v52, v74, v49, v55);
        swift_release(v48);
        swift_release(v56);
        v58 = swift_release(v57);
        (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v52, v54, v58);
        (*(void (**)(void *, uint64_t))(v29 + 8))(v73._object, v75);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v77);
        return (*(uint64_t (**)(_QWORD *, uint64_t))(v51 + 8))(v50, v49);
      }
    }
  }
  return result;
}

id sub_10003D7AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StoreNavigationController()
{
  return objc_opt_self(_TtC20ProductPageExtension25StoreNavigationController);
}

uint64_t sub_10003D80C()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x68))();
}

id sub_10003D844(uint64_t a1, char a2)
{
  id *v2;

  return objc_msgSend(*v2, "pushViewController:animated:", a1, a2 & 1);
}

id sub_10003D860(char a1)
{
  id *v1;

  return objc_msgSend(*v1, "popViewControllerAnimated:", a1 & 1);
}

id sub_10003D88C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char v9;
  id result;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = &v2[OBJC_IVAR____TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins];
  v5 = *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins];
  v6 = *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
                    + 8];
  v7 = *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
                    + 16];
  v8 = *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
                    + 24];
  v9 = v2[OBJC_IVAR____TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins + 32];
  result = objc_msgSend(v2, "layoutMargins");
  if ((v9 & 1) != 0
    || (v5 == v11 ? (v15 = v6 == v12) : (v15 = 0),
        v15 ? (v16 = v7 == v13) : (v16 = 0),
        v16 ? (v17 = v8 == v14) : (v17 = 0),
        !v17))
  {
    objc_msgSend(v2, "layoutMargins");
    *(_QWORD *)v4 = v18;
    *((_QWORD *)v4 + 1) = v19;
    *((_QWORD *)v4 + 2) = v20;
    *((_QWORD *)v4 + 3) = v21;
    v4[32] = 0;
    v22.receiver = v2;
    v22.super_class = ObjectType;
    return objc_msgSendSuper2(&v22, "layoutMarginsDidChange");
  }
  return result;
}

uint64_t type metadata accessor for NavigationBarManualCheckLayoutMarginsChange()
{
  return objc_opt_self(_TtC20ProductPageExtension43NavigationBarManualCheckLayoutMarginsChange);
}

uint64_t sub_10003DA80(uint64_t a1, uint64_t a2)
{
  return sub_100020248((unint64_t *)&unk_100809280, a2, (uint64_t (*)(uint64_t))type metadata accessor for StoreNavigationController, (uint64_t)&unk_100641DCC);
}

uint64_t sub_10003DAAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_100809290);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003DAEC(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  void (*v34)(_QWORD);
  double left;
  double right;
  double bottom;
  __int128 v38;
  __int128 v40;
  __int128 v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  __int128 v49;
  double v50;
  double v51;
  double v52;
  __int128 v53;
  int64x2_t v55;
  double v56;
  double v57;
  double top;
  uint64_t v59;
  void (*v60)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65[2];

  v2 = sub_10000DAF8(&qword_100808208);
  v3 = __chkstk_darwin(v2);
  v5 = &v55.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v64 = type metadata accessor for PageGrid.HorizontalMargins(0, v3);
  v6 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v8 = (int64x2_t *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v9);
  v11 = &v55.i8[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v55.i8[-v13];
  __chkstk_darwin(v15);
  v17 = &v55.i8[-v16];
  __chkstk_darwin(v18);
  v20 = &v55.i8[-v19];
  v21 = sub_10000DAF8(&qword_100808218);
  v22 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v23 = *(_QWORD *)(v22 + 72);
  v24 = *(unsigned __int8 *)(v22 + 80);
  v25 = (v24 + 32) & ~v24;
  v63 = v23;
  v26 = swift_allocObject(v21, v25 + 6 * v23, v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100640730;
  v59 = v26;
  v62 = v26 + v25;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v27 = xmmword_100868E30;
  v65[0] = (double)a1;
  v28 = sub_10002128C();
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 11.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 12.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  __asm { FMOV            V0.2D, #16.0 }
  *v8 = _Q0;
  v34 = *(void (**)(_QWORD))(v6 + 104);
  v61 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v60 = (void (*)(int64x2_t *, _QWORD, uint64_t))v34;
  v34(v8);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v27, *((double *)&v27 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v38 = xmmword_100868E40;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  __asm { FMOV            V0.2D, #20.0 }
  *v8 = _Q0;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v38, *((double *)&v38 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v40 = xmmword_100868E50;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v55 = vdupq_n_s64(0x4041000000000000uLL);
  *v8 = v55;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v57 = left;
  top = UIEdgeInsetsZero.top;
  v56 = bottom;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v41 = xmmword_100868E90;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  *v8 = v55;
  v60(v8, v61, v64);
  v42 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v41, *((double *)&v41 + 1), v42, v44, v46, v48);
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v49 = xmmword_100868EA0;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v55 = vdupq_n_s64(0x404A000000000000uLL);
  *v8 = v55;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v51 = v57;
  v50 = top;
  v52 = v56;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v49, *((double *)&v49 + 1), top, v57, v56, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v53 = xmmword_100868EB0;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  *v8 = v55;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v53, *((double *)&v53 + 1), v50, v51, v52, right);
  return v59;
}

uint64_t sub_10003E394()
{
  return sub_10000E720(&qword_1008092C0, type metadata accessor for GenericProductReviewActionCollectionViewCell, (uint64_t)&unk_100641E30);
}

double sub_10003E3C4(__n128 a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  uint64_t v24;
  uint64_t KeyPath;
  double v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  double v62;
  id v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  double v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[11];
  _QWORD v90[5];
  uint64_t v91;

  v82 = type metadata accessor for DynamicTextAppearance(0, a1);
  v79 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v2 = (char *)&v75 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v78 = (char *)&v75 - v4;
  __chkstk_darwin(v5);
  v80 = (char *)&v75 - v6;
  v8 = __chkstk_darwin(v7);
  v81 = (char *)&v75 - v9;
  v85 = type metadata accessor for LabelPlaceholder(0, v8);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageGrid(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for ProductReviewAction.ReviewAction(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for ProductReviewAction(0);
  v21 = sub_10000E720((unint64_t *)&qword_1008092C8, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReviewAction, (uint64_t)&protocol conformance descriptor for ProductReviewAction);
  v22 = ItemLayoutContext.typedModel<A>(as:)(v89, v20, v20, v21);
  if (v89[0])
  {
    v77 = v89[0];
    ProductReviewAction.action.getter(v22);
    v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 88))(v19, v16);
    if (v23 == enum case for ProductReviewAction.ReviewAction.tapToRate(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v19, v16);
      v24 = *v19;
      KeyPath = swift_getKeyPath(&unk_100641E80);
      ItemLayoutContext.subscript.getter(v15);
      swift_release(KeyPath);
      v26 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v28 = v27;
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
      v29 = sub_10052A948();
      v76 = v24;
      v30 = TapToRate.title.getter();
      v32 = v31;
      DynamicTextAppearance.init()(v30);
      if (qword_1008062A0 != -1)
        swift_once(&qword_1008062A0, sub_1004C7400);
      v33 = type metadata accessor for FontUseCase(0);
      v34 = sub_10000EFC4(v33, (uint64_t)qword_1008698B8);
      v35 = v78;
      DynamicTextAppearance.withFontUseCase(_:)(v34);
      v36 = *(void (**)(char *, uint64_t))(v79 + 8);
      v37 = v2;
      v38 = v82;
      v36(v37, v82);
      v39 = v80;
      DynamicTextAppearance.withNumberOfLines(_:)(1);
      v36(v35, v38);
      v40 = v81;
      DynamicTextAppearance.withLineBreakMode(_:)(4);
      v36(v39, v38);
      v41 = LabelPlaceholder.Options.init(rawValue:)(0);
      v42 = v83;
      LabelPlaceholder.init(_:with:where:)(v30, v32, v40, v41);
      v43 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
      v45 = LayoutViewPlaceholder.init(measureWith:)(sub_1000A5170, 0, v44);
      if (qword_100805A70 != -1)
        swift_once(&qword_100805A70, sub_1003B841C);
      v46 = v85;
      v90[3] = v85;
      v90[4] = &protocol witness table for LabelPlaceholder;
      v47 = sub_1000119C0(v90);
      v48 = v84;
      (*(void (**)(_QWORD *, char *, uint64_t))(v84 + 16))(v47, v42, v46);
      v86[0] = v45;
      Measurable.placeable.getter(&v91, v43, &protocol witness table for LayoutViewPlaceholder);
      sub_10003EA88((uint64_t)&qword_100867E48, (uint64_t)v89);
      v49 = objc_msgSend(v29, "traitCollection");
      v50 = sub_10008A77C((uint64_t)v49, v26, v28);
      sub_10008A8D8(v50, v86);
      v51 = v87;
      v52 = v88;
      sub_100010F08(v86, v87);
      dispatch thunk of Placeable.measure(toFit:with:)(v49, v51, v52, v26, v28);
      v54 = v53;
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v86);
      swift_release(v45);

      sub_10003EAC4(v89);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v46);
      swift_unknownObjectRelease(v29);
      swift_release(v77);
      v55 = v76;
      goto LABEL_17;
    }
    if (v23 == enum case for ProductReviewAction.ReviewAction.writeAReview(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v19, v16);
      v56 = *v19;
      v85 = type metadata accessor for ProductReviewActionsView(0);
      v57 = ProductWriteAReview.writeReviewAction.getter();
      v58 = ProductWriteAReview.supportAction.getter();
      v59 = swift_getKeyPath(&unk_100641E80);
      ItemLayoutContext.subscript.getter(v15);
      swift_release(v59);
      v60 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      v62 = v61;
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
      v63 = sub_10052A948();
      if (v57)
      {
        v64 = swift_retain(v57);
        v65 = Action.title.getter(v64);
        v67 = v66;
        swift_release(v57);
        if (v58)
        {
LABEL_11:
          v68 = swift_retain(v58);
          v69 = Action.title.getter(v68);
          v71 = v70;
          swift_release(v58);
LABEL_16:
          swift_getObjectType();
          sub_10060D13C(v65, v67, v69, v71, v63, v60, v62);
          v54 = v73;
          swift_release(v58);
          swift_unknownObjectRelease(v63);
          swift_release(v56);
          swift_release(v77);
          swift_bridgeObjectRelease(v71);
          swift_bridgeObjectRelease(v67);
          v55 = v57;
LABEL_17:
          swift_release(v55);
          return v54;
        }
      }
      else
      {
        v65 = 0;
        v67 = 0;
        if (v58)
          goto LABEL_11;
      }
      v69 = 0;
      v71 = 0;
      goto LABEL_16;
    }
    v72 = swift_release(v77);
    (*(void (**)(uint64_t *, uint64_t, __n128))(v17 + 8))(v19, v16, v72);
  }
  return 0.0;
}

uint64_t sub_10003EA88(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductTapToRateLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_10003EAC4(_QWORD *a1)
{
  destroy for ProductTapToRateLayout(a1);
  return a1;
}

void sub_10003EAF8(uint64_t a1)
{
  sub_10003EB58(a1, &qword_1008092D0);
}

void sub_10003EB04(uint64_t a1)
{
  sub_10003EB58(a1, &qword_1008092D8);
}

id sub_10003EB10()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 12.0);
  qword_1008092E0 = (uint64_t)result;
  return result;
}

void sub_10003EB4C(uint64_t a1)
{
  sub_10003EB58(a1, &qword_1008092E8);
}

void sub_10003EB58(uint64_t a1, _QWORD *a2)
{
  void *v3;
  NSString *v4;
  id v5;

  v3 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v4 = UIFontTextStyleTitle3;
  v5 = objc_msgSend(v3, "configurationWithTextStyle:", v4);

  *a2 = v5;
}

void sub_10003EBC8(char a1)
{
  sub_10003EC18(a1);
}

void sub_10003EBF4(char a1)
{
  sub_10003EC18(a1);
}

void sub_10003EC18(char a1)
{
  type metadata accessor for SystemImage(0);
  __chkstk_darwin();
  __asm { BR              X10 }
}

uint64_t sub_10003EC94()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *v2, v0);
  if (qword_100804608 != -1)
    swift_once(&qword_100804608, sub_10003EAF8);
  v4 = static SystemImage.load(_:with:)(v1, qword_1008092D0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v4;
}

BOOL sub_10003EE3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10003EE50()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10003EE94()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10003EEBC(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_10003EEFC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100041670(*a1);
  *a2 = result;
  return result;
}

void sub_10003EF24(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

BOOL sub_10003EF30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10003EF48()
{
  unsigned __int8 *v0;
  int v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 2;
  else
    v2 = 1;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10003EF94()
{
  _BYTE *v0;
  Swift::UInt v1;

  if (*v0)
    v1 = 2;
  else
    v1 = 1;
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10003EFC8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 2;
  else
    v3 = 1;
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

_QWORD *sub_10003F010@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_10003F030(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

void sub_10003F048(char a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FontUseCase(0);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_10003F0C4()
{
  objc_class *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1008062E0 != -1)
    swift_once(&qword_1008062E0, sub_1004C74C0);
  v6 = sub_10000EFC4(v1, (uint64_t)qword_100869978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v6, v1);
  sub_10003F25C(v2, v0, v4, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
}

uint64_t sub_10003F25C@<X0>(char a1@<W0>, objc_class *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  Class isa;
  Class v23;
  double v24;
  double v25;
  Class v26;
  double v27;
  double v28;
  UITraitCollection v29;
  uint64_t v30;

  v29.super.isa = a2;
  v30 = a3;
  v6 = type metadata accessor for Locale(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter(v15);
  sub_10003F454(a1, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100041630((uint64_t)v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, v30, v13);
  }
  else
  {
    v19 = a4;
    v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v20(v17, v12, v13);
    isa = v29.super.isa;
    v21 = v30;
    v23 = FontUseCase.makeFontDescriptor(compatibleWith:)(v29).super.isa;
    -[objc_class pointSize](v23, "pointSize");
    v25 = v24;
    v26 = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)isa).super.isa;
    -[objc_class pointSize](v26, "pointSize");
    v28 = v27;

    if (v28 >= v25)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v21, v13);
    }
    else
    {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v19, v17, v13);
    }
  }
}

uint64_t sub_10003F454@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 == 2)
  {
    if ((Locale.isChinese.getter() & 1) != 0)
    {
      if (qword_100806320 != -1)
        swift_once(&qword_100806320, sub_1004C7B5C);
      v3 = type metadata accessor for FontUseCase(0);
      v4 = v3;
      v5 = qword_100869A38;
      goto LABEL_27;
    }
    if ((Locale.isJapanese.getter() & 1) != 0)
    {
      if (qword_100806328 != -1)
        swift_once(&qword_100806328, sub_1004C7C10);
      v3 = type metadata accessor for FontUseCase(0);
      v4 = v3;
      v5 = qword_100869A50;
      goto LABEL_27;
    }
    if ((Locale.isKorean.getter() & 1) != 0)
    {
      if (qword_100806330 != -1)
        swift_once(&qword_100806330, sub_1004C7CC4);
      v3 = type metadata accessor for FontUseCase(0);
      v4 = v3;
      v5 = qword_100869A68;
      goto LABEL_27;
    }
    goto LABEL_28;
  }
  if (a1 != 1)
    goto LABEL_28;
  if ((Locale.isChinese.getter() & 1) == 0)
  {
    if ((Locale.isJapanese.getter() & 1) != 0)
    {
      if (qword_1008062F8 != -1)
        swift_once(&qword_1008062F8, sub_1004C7748);
      v3 = type metadata accessor for FontUseCase(0);
      v4 = v3;
      v5 = qword_1008699C0;
      goto LABEL_27;
    }
    if ((Locale.isKorean.getter() & 1) != 0)
    {
      if (qword_100806300 != -1)
        swift_once(&qword_100806300, sub_1004C7820);
      v3 = type metadata accessor for FontUseCase(0);
      v4 = v3;
      v5 = qword_1008699D8;
      goto LABEL_27;
    }
LABEL_28:
    v11 = type metadata accessor for FontUseCase(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v9 = a2;
    v10 = 1;
    return v8(v9, v10, 1, v11);
  }
  if (qword_1008062F0 != -1)
    swift_once(&qword_1008062F0, sub_1004C7670);
  v3 = type metadata accessor for FontUseCase(0);
  v4 = v3;
  v5 = qword_1008699A8;
LABEL_27:
  v6 = sub_10000EFC4(v3, (uint64_t)v5);
  v7 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6, v4);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v9 = a2;
  v10 = 0;
  v11 = v4;
  return v8(v9, v10, 1, v11);
}

char *sub_10003F690(char a1, char a2, int a3, int a4, unsigned __int8 a5)
{
  _BYTE *v5;
  _BYTE *v6;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  objc_class *v22;
  id v23;
  double left;
  double bottom;
  double right;
  id v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v58;
  int v59;
  int v60;
  __int128 v61;
  _QWORD v62[5];
  objc_super v63;

  v6 = v5;
  HIDWORD(v58) = a3;
  v59 = a4;
  v60 = a5;
  *(_QWORD *)&v61 = swift_getObjectType();
  v10 = a2 & 1;
  v11 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useAdsLocale;
  v5[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useAdsLocale] = 0;
  v15 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel;
  v16 = type metadata accessor for DynamicTypeLabel(0);
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16));
  v18 = v5;
  *(_QWORD *)&v5[v15] = objc_msgSend(v17, "init");
  v19 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView;
  *(_QWORD *)&v18[v19] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v20 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView;
  v21 = a1;
  *(_QWORD *)&v18[v20] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v18[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_size] = a1;
  v18[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_preferredLineCount] = v10;
  v18[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_shouldCapWidthByAvailableWidth] = BYTE4(v58);
  v6[v14] = v59;
  v18[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useCase] = a5;

  v22 = (objc_class *)type metadata accessor for EditorsChoiceView();
  v63.receiver = v18;
  v63.super_class = v22;
  v23 = objc_msgSendSuper2(&v63, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v27 = v23;
  objc_msgSend(v27, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = (char *)v27;
  v30 = objc_msgSend(v28, "clearColor");
  objc_msgSend(v29, "setBackgroundColor:", v30);

  v31 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel;
  v32 = *(id *)&v29[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel];
  v33 = objc_msgSend(v29, "tintColor");
  objc_msgSend(v32, "setTextColor:", v33);

  v34 = objc_msgSend(*(id *)&v29[v31], "setLineBreakMode:", 4);
  if (v60)
  {
    v35 = objc_msgSend(v29, "traitCollection");
    v36 = v61;
    sub_10003F048(v21);

    v37 = type metadata accessor for FontUseCase(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v13, 0, 1, v37);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);
  }
  else
  {
    v36 = v61;
    static CustomTextStyle<>.metadataRibbon.getter(v34);
    if (qword_100804820 != -1)
      swift_once(&qword_100804820, sub_1000BFDD4);
    v38 = type metadata accessor for MetadataRibbonTextStyle(0);
    v39 = sub_10000EFC4(v38, (uint64_t)qword_100864DF0);
    v62[3] = v38;
    v62[4] = sub_10000E720((unint64_t *)&qword_100809020, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
    v40 = sub_1000119C0(v62);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v40, v39, v38);
    dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v62);
  }
  v41 = *(void **)&v29[v31];
  objc_msgSend(v41, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v29, "addSubview:", v41);
  if (v29[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_size] == 4)
  {
    objc_msgSend(v29, "setContentMode:", 3);
  }
  else
  {
    v42 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView;
    v43 = *(id *)&v29[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView];
    v44 = objc_msgSend(v29, "tintColor");
    objc_msgSend(v43, "setTintColor:", v44);

    v45 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView;
    v46 = *(id *)&v29[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView];
    v47 = objc_msgSend(v29, "tintColor");
    objc_msgSend(v46, "setTintColor:", v47);

    v48 = *(void **)&v29[v42];
    objc_msgSend(v48, "setSemanticContentAttribute:", 3);
    v49 = *(void **)&v29[v45];
    objc_msgSend(v49, "setSemanticContentAttribute:", 3);
    objc_msgSend(v29, "addSubview:", v49);
    objc_msgSend(v29, "addSubview:", v48);
  }
  sub_100040758();
  sub_1000408B0();
  v50 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v51 = swift_allocObject(v50, 48, 7);
  v61 = xmmword_100640720;
  *(_OWORD *)(v51 + 16) = xmmword_100640720;
  *(_QWORD *)(v51 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v51 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v52 = v29;
  v53 = UIView.registerForTraitChanges<A>(_:handler:)(v51, sub_100041414, 0, v36);
  swift_unknownObjectRelease(v53);

  swift_bridgeObjectRelease(v51);
  v54 = swift_allocObject(v50, 48, 7);
  *(_OWORD *)(v54 + 16) = v61;
  *(_QWORD *)(v54 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v54 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v55 = v52;
  v56 = UIView.registerForTraitChanges<A>(_:handler:)(v54, sub_100041434, 0, v36);
  swift_unknownObjectRelease(v56);
  swift_bridgeObjectRelease(v54);

  return v55;
}

void sub_10003FDC8()
{
  unsigned __int8 *v0;
  objc_class *v1;
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  int v6;
  double Width;
  double v8;
  char v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  double v30;
  double Height;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double MinX;
  CGFloat v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  CGFloat v46;
  CGFloat v47;
  void *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  objc_super v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;

  swift_getObjectType();
  v1 = (objc_class *)type metadata accessor for EditorsChoiceView();
  v58.receiver = v0;
  v58.super_class = v1;
  objc_msgSendSuper2(&v58, "layoutSubviews");
  v2 = v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_preferredLineCount];
  v3 = v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_size];
  v4 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useAdsLocale;
  v5 = v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useAdsLocale];
  v6 = v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useCase];
  v59.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  Width = CGRectGetWidth(v59);
  v8 = sub_100192294(v2, v3, v5, v6, v0, Width);
  v10 = v9 & 1;
  v11 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel];
  objc_msgSend(v11, "setNumberOfLines:", (v9 & 1u) + 1, v8);
  sub_100041680(v10, v0[v4]);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setText:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v15 = objc_msgSend(v0, "traitCollection");
  v16 = v15;
  if (v6 == 1)
  {
    v17 = objc_msgSend(v15, "preferredContentSizeCategory");
    v18 = UIContentSizeCategory.isAccessibilityCategory.getter(v17);

    if ((v18 & 1) != 0)
    {
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView], "setHidden:", 1);
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView], "setHidden:", 1);
      v60.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
      v19 = CGRectGetWidth(v60);
      v61.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
      objc_msgSend(v11, "sizeThatFits:", v19, CGRectGetHeight(v61));
      v21 = v20;
      v23 = v22;
      v62.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
      v24 = CGRectGetMidX(v62) - v21 * 0.5;
      v63.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
      objc_msgSend(v11, "setFrame:", v24, CGRectGetMidY(v63) - v23 * 0.5, v19, v23);
      return;
    }
  }
  else
  {

  }
  v25 = v3;
  sub_10003EC18(v3);
  v27 = v26;
  sub_10003EC18(v25);
  v29 = v28;
  v30 = 12.0;
  if ((_DWORD)v25 != 4)
  {
    objc_msgSend(v0, "bounds");
    Height = CGRectGetHeight(v64);
    objc_msgSend(v27, "size");
    if (v32 < Height)
      Height = v32;
    objc_msgSend(v27, "size");
    v34 = Height * v33;
    objc_msgSend(v27, "size");
    v36 = v34 / v35;
    objc_msgSend(v0, "bounds");
    MinX = CGRectGetMinX(v65);
    objc_msgSend(v0, "bounds");
    v38 = CGRectGetMidY(v66) - Height * 0.5;
    v39 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView];
    objc_msgSend(v39, "setHidden:", 0);
    objc_msgSend(v39, "setImage:", v27);
    objc_msgSend(v39, "setFrame:", MinX, v38, v36, Height);
    objc_msgSend(v0, "bounds");
    v40 = CGRectGetHeight(v67);
    objc_msgSend(v29, "size");
    if (v41 < v40)
      v40 = v41;
    objc_msgSend(v29, "size");
    v43 = v40 * v42;
    objc_msgSend(v29, "size");
    v45 = v43 / v44;
    objc_msgSend(v0, "bounds");
    v46 = CGRectGetMaxX(v68) - v45;
    objc_msgSend(v0, "bounds");
    v47 = CGRectGetMidY(v69) - v40 * 0.5;
    v48 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView];
    objc_msgSend(v48, "setHidden:", 0);
    objc_msgSend(v48, "setImage:", v29);
    objc_msgSend(v48, "setFrame:", v46, v47, v45, v40);
    v30 = dbl_100642128[v25];
  }
  v70.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  v49 = CGRectGetWidth(v70);
  objc_msgSend(v27, "size");
  v51 = v30 + v30 + v50;
  objc_msgSend(v29, "size");
  v53 = v49 - (v51 + v52);
  v71.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  objc_msgSend(v11, "sizeThatFits:", v53, CGRectGetHeight(v71));
  v55 = v54;
  objc_msgSend(v27, "size");
  v57 = v30 + v56;
  v72.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  objc_msgSend(v11, "setFrame:", v57, CGRectGetMidY(v72) + v55 * -0.5, v53, v55);

}

void sub_100040300(double a1, double a2, double a3, double a4)
{
  void *v4;
  CGContext *v5;
  CGContext *v6;
  CGContext *v7;
  id v8;
  void *v9;
  CGColor *v10;
  void *v11;
  void *v12;
  double Height;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double MinX;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  id v32;
  objc_super v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  if (*((_BYTE *)v4 + OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_size) != 4)
  {
    v33.receiver = v4;
    v33.super_class = (Class)type metadata accessor for EditorsChoiceView();
    objc_msgSendSuper2(&v33, "drawRect:", a1, a2, a3, a4);
    return;
  }
  v5 = UIGraphicsGetCurrentContext();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    v8 = objc_msgSend(v4, "tintColor");
    if (!v8)
    {
      __break(1u);
      return;
    }
    v9 = v8;
    v10 = (CGColor *)objc_msgSend(v8, "CGColor");

    CGContextSetFillColorWithColor(v7, v10);
  }
  sub_10003EC18(4);
  v12 = v11;
  objc_msgSend(v4, "bounds");
  Height = CGRectGetHeight(v34);
  objc_msgSend(v12, "size");
  if (v14 < Height)
    Height = v14;
  objc_msgSend(v12, "size");
  v16 = Height * v15;
  objc_msgSend(v12, "size");
  v18 = v16 / v17;
  objc_msgSend(v4, "bounds");
  MinX = CGRectGetMinX(v35);
  objc_msgSend(v4, "bounds");
  objc_msgSend(v12, "drawInRect:", MinX, CGRectGetMidY(v36) - Height * 0.5, v18, Height);
  sub_10003EC18(4);
  v32 = v20;
  objc_msgSend(v4, "bounds");
  v21 = CGRectGetHeight(v37);
  objc_msgSend(v32, "size");
  if (v22 < v21)
    v21 = v22;
  objc_msgSend(v32, "size");
  v24 = v21 * v23;
  objc_msgSend(v32, "size");
  v26 = v24 / v25;
  objc_msgSend(v4, "bounds");
  v27 = CGRectGetMaxX(v38) - v26;
  objc_msgSend(v4, "bounds");
  objc_msgSend(v32, "drawInRect:", v27, CGRectGetMidY(v39) - v21 * 0.5, v26, v21);

}

void sub_100040614()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel];
  v2 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v1, "setTextColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView];
  v4 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v3, "setTintColor:", v4);

  v5 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView];
  v6 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v5, "setTintColor:", v6);

  if (v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_size] == 4)
    objc_msgSend(v0, "setNeedsDisplay");
}

void sub_100040758()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;

  if (v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useCase] == 1)
  {
    v1 = objc_msgSend(v0, "layer");
    objc_msgSend(v1, "setAllowsGroupBlending:", 0);

    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "userInterfaceStyle");

    v4 = &kCAFilterPlusD;
    if (v3 != (id)1)
      v4 = &kCAFilterPlusL;
    static String._unconditionallyBridgeFromObjectiveC(_:)(*v4);
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v8 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView], "layer");
    objc_msgSend(v8, "setCompositingFilter:", v7);

    v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView], "layer");
    objc_msgSend(v9, "setCompositingFilter:", v7);

  }
}

id sub_1000408B0()
{
  unsigned __int8 *v0;
  int v1;
  id v2;
  void *v3;
  id v4;
  char v5;
  uint64_t v6;

  v1 = v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useCase];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = v2;
  if (v1 != 1)
  {

    goto LABEL_5;
  }
  v4 = objc_msgSend(v2, "preferredContentSizeCategory");
  v5 = UIContentSizeCategory.isAccessibilityCategory.getter(v4);

  if ((v5 & 1) == 0)
  {
LABEL_5:
    v6 = 1;
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel], "setTextAlignment:", v6);
  }
  v6 = 4;
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel], "setTextAlignment:", v6);
}

id sub_1000409B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorsChoiceView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EditorsChoiceView()
{
  return objc_opt_self(_TtC20ProductPageExtension17EditorsChoiceView);
}

_BYTE *initializeBufferWithCopyOfBuffer for InAppPurchaseIconType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for InAppPurchaseIconType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorsChoiceUseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100040B30 + 4 * byte_100641EBA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100040B64 + 4 * byte_100641EB5[v4]))();
}

uint64_t sub_100040B64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040B6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100040B74);
  return result;
}

uint64_t sub_100040B80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100040B88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100040B8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040B94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorsChoiceUseCase()
{
  return &type metadata for EditorsChoiceUseCase;
}

uint64_t getEnumTagSinglePayload for RatingView.StarSize(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorsChoiceSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100040C8C + 4 * byte_100641EC4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100040CC0 + 4 * byte_100641EBF[v4]))();
}

uint64_t sub_100040CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100040CD0);
  return result;
}

uint64_t sub_100040CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100040CE4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100040CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040CFC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100040D04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EditorsChoiceSize()
{
  return &type metadata for EditorsChoiceSize;
}

uint64_t getEnumTagSinglePayload for RatingView.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorsChoiceLineCount(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100040DF8 + 4 * byte_100641ECE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100040E2C + 4 * byte_100641EC9[v4]))();
}

uint64_t sub_100040E2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040E34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100040E3CLL);
  return result;
}

uint64_t sub_100040E48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100040E50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100040E54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100040E5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100040E68(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EditorsChoiceLineCount()
{
  return &type metadata for EditorsChoiceLineCount;
}

unint64_t sub_100040E88()
{
  unint64_t result;

  result = qword_100809358;
  if (!qword_100809358)
  {
    result = swift_getWitnessTable(&unk_100641FF0, &type metadata for EditorsChoiceLineCount);
    atomic_store(result, (unint64_t *)&qword_100809358);
  }
  return result;
}

unint64_t sub_100040ED0()
{
  unint64_t result;

  result = qword_100809360;
  if (!qword_100809360)
  {
    result = swift_getWitnessTable(&unk_100642090, &type metadata for EditorsChoiceSize);
    atomic_store(result, (unint64_t *)&qword_100809360);
  }
  return result;
}

unint64_t sub_100040F18()
{
  unint64_t result;

  result = qword_100809368;
  if (!qword_100809368)
  {
    result = swift_getWitnessTable(&unk_1006420F8, &type metadata for EditorsChoiceUseCase);
    atomic_store(result, (unint64_t *)&qword_100809368);
  }
  return result;
}

double sub_100040F5C(char a1, char a2, char a3, unsigned __int8 a4, id a5, double a6)
{
  int v11;
  id v13;
  void *v14;
  id v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  double v34;
  double v35;
  char v36;
  Swift::String v37;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  double v45;

  v11 = a4;
  v13 = objc_msgSend(a5, "traitCollection");
  v14 = v13;
  if (v11 == 1)
  {
    v15 = objc_msgSend(v13, "preferredContentSizeCategory");
    v16 = UIContentSizeCategory.isAccessibilityCategory.getter(v15);

    if ((v16 & 1) != 0)
    {
      if ((a1 & 1) != 0)
        goto LABEL_12;
      goto LABEL_7;
    }
  }
  else
  {

  }
  sub_10003EC18(a2);
  v18 = v17;
  sub_10003EC18(a2);
  v20 = v19;
  v21 = dbl_100642148[a2];
  objc_msgSend(v18, "size");
  v23 = v22;
  objc_msgSend(v20, "size");
  v25 = v24;

  a6 = a6 - (v21 + v23 + v25);
  if ((a1 & 1) != 0)
  {
LABEL_12:
    if ((a3 & 1) != 0)
    {
      v37._object = (void *)0x80000001006870A0;
      v37._countAndFlagsBits = 0xD000000000000017;
      v40 = localizedStringForAdsLanguage(_:)(v37);
      object = v40._object;
      countAndFlagsBits = v40._countAndFlagsBits;
    }
    else
    {
      v41._countAndFlagsBits = 0xD000000000000050;
      v42._object = (void *)0x80000001006870A0;
      v41._object = (void *)0x80000001006870C0;
      v42._countAndFlagsBits = 0xD000000000000017;
      v43 = localizedString(_:comment:)(v42, v41);
      object = v43._object;
      countAndFlagsBits = v43._countAndFlagsBits;
    }
    v44 = object;
    sub_100041208(countAndFlagsBits, (uint64_t)object, 2, a2, a4, a5, a6);
    v35 = v45;
    swift_bridgeObjectRelease(v44);
    return v35;
  }
LABEL_7:
  v26 = 0xD00000000000001ALL;
  v27 = 0x8000000100687120;
  if ((a3 & 1) != 0)
  {
    v30 = localizedStringForAdsLanguage(_:)(*(Swift::String *)&v26);
    v29 = v30._object;
    v28 = v30._countAndFlagsBits;
  }
  else
  {
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v32 = localizedString(_:comment:)(*(Swift::String *)&v26, v31);
    v29 = v32._object;
    v28 = v32._countAndFlagsBits;
  }
  v33 = v29;
  sub_100041208(v28, (uint64_t)v29, 1, a2, a4, a5, 1.79769313e308);
  v35 = v34;
  swift_bridgeObjectRelease(v33);
  v36 = CGFloat.isLessThanOrEffectivelyEqualTo(_:accuracy:)(a6, 0.0001, v35);
  if (a4 && (v36 & 1) == 0)
    goto LABEL_12;
  return v35;
}

void sub_100041208(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned __int8 a5, void *a6, double a7)
{
  int v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];

  v24 = a1;
  v25 = a2;
  v11 = a5;
  v26 = type metadata accessor for FontUseCase(0);
  v12 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v26).n128_u64[0];
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a6, "traitCollection", v13);
  sub_10003F048(a4);

  v17 = objc_msgSend(a6, "traitCollection");
  v18 = v17;
  if (v11 == 1)
  {
    v19 = objc_msgSend(v17, "preferredContentSizeCategory", v24, v25);
    v20 = UIContentSizeCategory.isAccessibilityCategory.getter(v19);

    if ((v20 & 1) != 0)
    {
      v21 = 4;
      goto LABEL_6;
    }
  }
  else
  {

  }
  v21 = 1;
LABEL_6:
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    v22 = type metadata accessor for Feature(0);
    v27[3] = v22;
    v27[4] = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v23 = sub_1000119C0(v27);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v23, enum case for Feature.measurement_with_labelplaceholder(_:), v22);
    LOBYTE(v22) = isFeatureEnabled(_:)(v27);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
    static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v24, v25, v15, v21, 4, 0, a3, 0, a7 + 1.0, 1.79769313e308, a6, v22 & 1);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v26);
  }
}

void sub_100041414()
{
  sub_100040758();
}

id sub_100041434()
{
  return sub_1000408B0();
}

void sub_100041454(char a1, char a2, int a3, id a4, double a5, char a6, unsigned __int8 a7)
{
  int v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v13 = a7;
  v14 = objc_msgSend(a4, "traitCollection");
  v15 = v14;
  if (v13 == 1)
  {
    v16 = objc_msgSend(v14, "preferredContentSizeCategory");
    v17 = UIContentSizeCategory.isAccessibilityCategory.getter(v16);

    if ((v17 & 1) != 0)
      goto LABEL_6;
  }
  else
  {

  }
  sub_10003EC18(a1);
  v19 = v18;
  sub_10003EC18(a1);
  v21 = v20;
  objc_msgSend(v19, "size");
  objc_msgSend(v21, "size");

LABEL_6:
  sub_100040F5C(a2 & 1, a1, a6 & 1, a7, a4, a5);
}

uint64_t sub_100041630(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100041670(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_100041680(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  if ((a1 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      v4._object = (void *)0x80000001006870A0;
      v4._countAndFlagsBits = 0xD000000000000017;
      return localizedStringForAdsLanguage(_:)(v4)._countAndFlagsBits;
    }
    else
    {
      v8._countAndFlagsBits = 0xD000000000000050;
      v9._object = (void *)0x80000001006870A0;
      v8._object = (void *)0x80000001006870C0;
      v9._countAndFlagsBits = 0xD000000000000017;
      return localizedString(_:comment:)(v9, v8)._countAndFlagsBits;
    }
  }
  else
  {
    v2 = 0xD00000000000001ALL;
    if ((a2 & 1) != 0)
    {
      v3 = 0x8000000100687120;
      return localizedStringForAdsLanguage(_:)(*(Swift::String *)&v2)._countAndFlagsBits;
    }
    else
    {
      v6 = 0x8000000100687120;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      return localizedString(_:comment:)(*(Swift::String *)&v2, v7)._countAndFlagsBits;
    }
  }
}

void sub_100041708()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_useAdsLocale] = 0;
  v1 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_titleLabel;
  v2 = type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_leftLaurelView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC20ProductPageExtension17EditorsChoiceView_rightLaurelView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/EditorsChoiceView.swift", 44, 2, 329, 0);
  __break(1u);
}

double sub_1000417E4(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v10;
  void *ObjectType;
  double v12;

  v10 = *a1;
  ObjectType = (void *)swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  return sub_10028D3C0(v10, a8, ObjectType, v12, a3);
}

id sub_100041838(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;

  v5 = *a1;
  v6 = type metadata accessor for ContingentOffer(0);
  v7 = swift_dynamicCastClass(v5, v6);
  if (v7)
  {
    v8 = v7;
    swift_retain(v5);
    sub_10028D63C(v8, a3);
LABEL_5:
    *(_QWORD *)&v11 = swift_release(v5).n128_u64[0];
    return objc_msgSend(v3, "setNeedsLayout", v11);
  }
  v9 = type metadata accessor for OfferItem();
  v10 = swift_dynamicCastClass(v5, v9);
  if (v10)
  {
    v12 = v10;
    swift_retain(v5);
    sub_10028D904(v12, a3);
    goto LABEL_5;
  }
  return objc_msgSend(v3, "setNeedsLayout", v11);
}

void sub_100041900(_QWORD *a1, uint64_t a2)
{
  void *v2;
  double v5;
  double v6;

  objc_msgSend(v2, "bounds");
  sub_1002D713C(a1, a2, v5, v6);
}

double sub_100041970(char a1)
{
  double result;

  if ((a1 & 1) == 0)
    return 0.0;
  return result;
}

void sub_100041984(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, void *a7)
{
  sub_1000419BC(a1, a5, a2, a3, a7);
}

uint64_t sub_100041990()
{
  return sub_10000E720(&qword_100809370, (uint64_t (*)(uint64_t))&type metadata accessor for AppPromotion, (uint64_t)&protocol conformance descriptor for AppPromotion);
}

void sub_1000419BC(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *ObjectType;
  double v9;
  double v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  id v37;
  _BYTE v38[40];
  uint64_t v39;
  _QWORD v40[5];
  uint64_t v41;

  ObjectType = (void *)swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v10 = v9;
  v11 = objc_msgSend(a5, "traitCollection");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");
  v13 = static UIContentSizeCategory.>= infix(_:_:)(v12, UIContentSizeCategoryExtraExtraExtraLarge);

  if ((v13 & 1) == 0)
  {
    if (qword_100805B48 != -1)
      swift_once(&qword_100805B48, sub_1003EDD48);
    sub_1001EDE68((uint64_t)&unk_1008680E8, (uint64_t)a5, v10, a2);
    v25 = v24;
    if (qword_1008047A0 != -1)
      swift_once(&qword_1008047A0, sub_1000A0ECC);
    v26 = type metadata accessor for AppPromotionCardLayout.Metrics(0);
    v27 = sub_10000EFC4(v26, (uint64_t)qword_100864C50);
    sub_1000D6240(v27, a5, v10, a2);
    v29 = v25 + v28;
    goto LABEL_33;
  }
  v14 = (uint64_t)_swiftEmptyArrayStorage;
  v41 = (uint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_10000EF80(v16, (uint64_t)v40);
      sub_10000EF80((uint64_t)v40, (uint64_t)v38);
      v18 = sub_10000DAF8(&qword_10080E910);
      v19 = type metadata accessor for AppPromotion(0);
      if ((swift_dynamicCast(&v39, v38, v18, v19, 6) & 1) == 0)
        v39 = 0;
      v20 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v40);
      v21 = v39;
      if (v39)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v23 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v22 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v23 >= v22 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized Array._endMutation()(v17);
      }
      v16 += 40;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(a1);
    v14 = v41;
  }
  if (!((unint64_t)v14 >> 62))
  {
    v30 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
      goto LABEL_19;
LABEL_32:
    swift_bridgeObjectRelease(v14);
    v29 = 0.0;
LABEL_33:
    v36 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    PageTraitEnvironment.pageColumnWidth.getter();
    v37 = objc_msgSend(v36, "absoluteDimension:");
    static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(0.0, v29);

    return;
  }
  if (v14 < 0)
    v35 = v14;
  else
    v35 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v30 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v14);
  if (!v30)
    goto LABEL_32;
LABEL_19:
  if (v30 >= 1)
  {
    v31 = 0;
    v29 = 0.0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v14);
      }
      else
      {
        v32 = *(_QWORD *)(v14 + 8 * v31 + 32);
        swift_retain(v32);
      }
      ++v31;
      sub_10028D3C0(v32, a5, ObjectType, v10, a2);
      v34 = v33;
      swift_release(v32);
      if (v29 <= v34)
        v29 = v34;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease(v14);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_100041D40(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  UIImage_optional v15;

  v4 = *(_QWORD *)(*(_QWORD *)(v3
                             + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView)
                 + OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_appPromotionCardView);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension20AppPromotionCardView_artworkView);
  v15.value.super.isa = 0;
  v15.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v15, a3);
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension20AppPromotionCardView_subtitleView)
                 + qword_1008203F8);
  v7 = type metadata accessor for ArtworkView(0);
  v8 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v6, 1, v7, v8);
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, 1, v7, v8);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC20ProductPageExtension20AppPromotionCardView_videoView);
  if (Strong)
  {
    v10 = *(void **)(Strong + qword_100828468);
    v14 = (id)Strong;
    v11 = objc_msgSend(v10, "layer");
    objc_msgSend(v11, "removeAllAnimations");

    objc_msgSend(v10, "setImage:", 0);
    v12 = type metadata accessor for VideoView(0);
    v13 = sub_10000E720((unint64_t *)&unk_100807FB0, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v14, 1, v12, v13);

  }
}

uint64_t LinkPresentationProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for Theme()
{
  return objc_opt_self(_TtC20ProductPageExtension5Theme);
}

uint64_t type metadata accessor for RootActionRunner(uint64_t a1)
{
  uint64_t result;

  result = qword_100809468;
  if (!qword_100809468)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootActionRunner);
  return result;
}

uint64_t sub_100041F5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[7];

  v2 = qword_100864978;
  result = type metadata accessor for MetricsPipeline(319);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100642248;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[6] = &unk_100642260;
    result = swift_initClassMetadata2(a1, 0, 7, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100042004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  void *v60;
  _QWORD v61[5];
  _QWORD v62[3];

  v2 = v1;
  v4 = sub_10000DAF8(&qword_1008095C8);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  __chkstk_darwin(v4);
  v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for MetricsData(0);
  v56 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetricsFieldsContext(0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v57 = (char *)&v48 - v12;
  v13 = sub_10000DAF8(&qword_1008095D0);
  BaseObjectGraph.optional<A>(_:)(v62, v13, v13);
  v14 = v62[0];
  v54 = v62[1];
  type metadata accessor for MetricsActivity(0);
  v15 = ((uint64_t (*)(void))static MetricsActivity.current.getter)();
  v16 = dispatch thunk of MetricsActivity.currentPageFields.getter();
  v17 = swift_release(v15);
  v18 = static MetricsActivity.current.getter(v17);
  v19 = dispatch thunk of MetricsActivity.preloaded.getter();
  v20 = swift_release(v18);
  v21 = static MetricsActivity.current.getter(v20);
  dispatch thunk of MetricsActivity.currentSearchAdRotationDataProvider.getter(v61);
  v22 = swift_release(v21);
  v23 = *(_QWORD *)(v2 + qword_100809460);
  if (v23)
  {
    *((_QWORD *)&v59 + 1) = type metadata accessor for SearchGhostHintMetricsTracker(0, v22);
    v60 = &protocol witness table for SearchGhostHintMetricsTracker;
    *(_QWORD *)&v58 = v23;
  }
  else
  {
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
  }
  v24 = swift_retain(v23);
  v25 = static MetricsActivity.current.getter(v24);
  v26 = dispatch thunk of MetricsActivity.contextualAction.getter();
  v27 = swift_release(v25);
  static MetricsFieldsContext.createFieldsContext(impressionsTracker:adamIdString:pageContextOverride:referrer:participatingInCrossfireReferral:pageFields:preloaded:advertRotationData:searchGhostHintData:contextualAction:impressionsAppendixData:)(v14, v54, 0, 0, 0, 0, 0, 0, v27, 0, v16, v19, v61, &v58, v26, 0, 0);
  swift_release(v26);
  swift_bridgeObjectRelease(v16);
  swift_unknownObjectRelease(v14);
  sub_100010F2C((uint64_t)v61, &qword_1008095D8);
  sub_100010F2C((uint64_t)&v58, (uint64_t *)&unk_1008095E0);
  v29 = *(_QWORD *)(a1 + 16);
  if (v29)
  {
    v54 = v2 + qword_100864948;
    v30 = a1 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    v31 = *(_QWORD *)(v56 + 72);
    v32 = a1;
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v56 + 16);
    v49 = v32;
    v34 = swift_bridgeObjectRetain(v32);
    v35 = v53;
    do
    {
      v40 = v33(v7, v30, v35, v34);
      v41 = MetricsData.contextualAdamId.getter(v40);
      if (v42)
      {
        v43 = v42;
        v61[0] = v41;
        v61[1] = v42;
        v44 = v8;
        v45 = v50;
        static MetricsFieldsContext.adamIdStringKey.getter();
        MetricsFieldsContext.addingValue<A>(_:forProperty:)(v61, v45, &type metadata for String);
        v46 = v45;
        v8 = v44;
        v35 = v53;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v52);
        swift_bridgeObjectRelease(v43);
        v36 = v55;
      }
      else
      {
        v36 = v55;
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v10, v57, v8);
      }
      v37 = MetricsPipeline.process(_:using:)(v7, v10);
      v38 = swift_release(v37);
      v39 = *(void (**)(char *, uint64_t, __n128))(v36 + 8);
      v39(v10, v8, v38);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v35);
      v30 += v31;
      --v29;
    }
    while (v29);
    v28 = swift_bridgeObjectRelease(v49);
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t, __n128))(v55 + 8);
  }
  return ((uint64_t (*)(char *, uint64_t, __n128))v39)(v57, v8, v28);
}

double sub_1000423D0(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  void *v43;
  void *v44;
  Swift::Bool v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  _QWORD *v62;
  void *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id aBlock[6];

  v4 = v3;
  type metadata accessor for ExternalUrlAction(0);
  v8 = swift_dynamicCastClass(a1);
  if (v8)
  {
    v9 = v8;
    swift_retain(a1);
    sub_10004DC18(v9, (uint64_t)a2);
LABEL_25:
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  type metadata accessor for HttpAction(0);
  v10 = swift_dynamicCastClass(a1);
  if (v10)
  {
    v11 = v10;
    swift_retain(a1);
    sub_100042EEC(v11, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for RateAction(0);
  v12 = swift_dynamicCastClass(a1);
  if (v12)
  {
    v13 = v12;
    v14 = swift_retain(a1);
    sub_100043288(v13, a2, a3, v14);
    goto LABEL_25;
  }
  type metadata accessor for HttpTemplateAction(0);
  v15 = swift_dynamicCastClass(a1);
  if (v15)
  {
    v16 = v15;
    swift_retain(a1);
    sub_100045200(v16, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for LocalAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    LocalAction.perform()();
    goto LABEL_25;
  }
  type metadata accessor for OfferStateAction(0);
  v17 = swift_dynamicCastClass(a1);
  if (v17)
  {
    v18 = v17;
    swift_retain(a1);
    sub_100045388(v18, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for OfferAction(0);
  v19 = swift_dynamicCastClass(a1);
  if (v19)
  {
    v20 = v19;
    swift_retain(a1);
    sub_100045580(v20, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for InAppPurchaseAction(0);
  v21 = swift_dynamicCastClass(a1);
  if (v21)
  {
    v22 = v21;
    swift_retain(a1);
    sub_100045CF4(v22, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for UpdateAllAction(0);
  v23 = swift_dynamicCastClass(a1);
  if (v23)
  {
    v24 = v23;
    swift_retain(a1);
    sub_100046458(v24, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for OpenAppAction(0);
  v25 = swift_dynamicCastClass(a1);
  if (v25)
  {
    v26 = v25;
    swift_retain(a1);
    sub_100049538(v26, 1, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for ArcadeAction();
  v27 = swift_dynamicCastClass(a1);
  if (v27)
  {
    v28 = v27;
    swift_retain(a1);
    sub_100046DFC(v28, a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for FamilyCircleAction(0);
  v29 = swift_dynamicCastClass(a1);
  if (v29)
  {
    v30 = v29;
    swift_retain(a1);
    sub_10004DD48(v30, (uint64_t)a2);
    goto LABEL_25;
  }
  type metadata accessor for SearchAdAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v32 = swift_retain(a1);
    v33 = SearchAdAction.action.getter(v32);
    sub_1000423D0(v33, a2, a3);
    swift_release();
    goto LABEL_25;
  }
  type metadata accessor for RateLimitedAction(0);
  v34 = swift_dynamicCastClass(a1);
  if (v34)
  {
    v35 = v34;
    swift_retain(a1);
    sub_100047294(v35, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for ArcadeSubscriptionStateAction(0);
  v36 = swift_dynamicCastClass(a1);
  if (v36)
  {
    v37 = v36;
    swift_retain(a1);
    sub_10004775C(v37, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for TabBadgeAction();
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    sub_10004E03C();
    goto LABEL_25;
  }
  type metadata accessor for EngagementToggleAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v39 = type metadata accessor for AppStoreEngagementManager(0, v38);
    v40 = type metadata accessor for BaseObjectGraph(0);
    swift_retain(a1);
    inject<A, B>(_:from:)(v39, a3, v39, v40);
    v42 = EngagementToggleAction.identifier.getter(v41);
    v44 = v43;
    v45 = EngagementToggleAction.value.getter() & 1;
    v46._countAndFlagsBits = v42;
    v46._object = v44;
    AppStoreEngagementManager.setIdentifier(_:isEnabled:)(v46, v45);
    swift_release();
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease(v44).n128_u64[0];
    return result;
  }
  type metadata accessor for InvalidateAllWidgetsAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    InvalidateAllWidgetsAction.run()();
    goto LABEL_25;
  }
  type metadata accessor for CancelPreorderAction(0);
  if (swift_dynamicCastClass(a1))
  {
    swift_retain(a1);
    sub_10004E164();
    goto LABEL_25;
  }
  type metadata accessor for AppLaunchTrampolineAction(0);
  v47 = swift_dynamicCastClass(a1);
  if (v47)
  {
    v48 = v47;
    swift_retain(a1);
    sub_100047940(v48, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for CreateCalendarEventAction(0);
  v49 = swift_dynamicCastClass(a1);
  if (v49)
  {
    v50 = v49;
    swift_retain(a1);
    sub_100047B74(v50, (uint64_t)a2, a3);
    goto LABEL_25;
  }
  type metadata accessor for CopyTextAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v51 = (void *)objc_opt_self(UIPasteboard);
    v52 = objc_msgSend(v51, "generalPasteboard", swift_retain(a1).n128_f64[0]);
    CopyTextAction.text.getter();
    v54 = v53;
    v94 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "setString:", v94, swift_bridgeObjectRelease(v54).n128_f64[0]);
    swift_release();

    return result;
  }
  type metadata accessor for LocalAskToBuyAction();
  v55 = swift_dynamicCastClass(a1);
  if (v55)
  {
    v56 = v55;
    v57 = (void *)objc_opt_self(APRequestHandler);
    v58 = swift_retain(a1);
    LocalAskToBuyAction.adamIdString.getter(v58);
    v60 = v59;
    v61 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v60);
    v62 = (_QWORD *)swift_allocObject(&unk_100737EC8, 32, 7);
    v62[2] = v4;
    v62[3] = v56;
    aBlock[4] = sub_10004E300;
    aBlock[5] = v62;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1000712F8;
    aBlock[3] = &unk_100737EE0;
    v63 = _Block_copy(aBlock);
    swift_retain(a1);
    swift_retain(v4);
    objc_msgSend(v57, "localApproveRequestWithItemIdentifier:completion:", v61, v63, swift_release().n128_f64[0]);
    _Block_release(v63);
LABEL_48:
    swift_release();

    return result;
  }
  type metadata accessor for ClearAppUsageDataAction(0);
  if (swift_dynamicCastClass(a1))
  {
    v65 = type metadata accessor for OnDevicePersonalizationDataManager(0, v64);
    v66 = type metadata accessor for BaseObjectGraph(0);
    swift_retain(a1);
    inject<A, B>(_:from:)(v65, a3, v65, v66);
    OnDevicePersonalizationDataManager.clearData()();
    v67 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
    v68 = inject<A, B>(_:from:)(v67, a3, v67, v66);
    dispatch thunk of AppStoreOnDeviceRecommendationsManager.clearData()(v68);
    swift_release();

    return result;
  }
  type metadata accessor for ClearSearchHistoryAction();
  if (swift_dynamicCastClass(a1))
  {
    v69 = type metadata accessor for OnDeviceSearchHistoryManager(0);
    swift_retain(a1);
    BaseObjectGraph.inject<A>(_:)(aBlock, v69, v69);
    v61 = aBlock[0];
    OnDeviceSearchHistoryManager.clearData()();
    goto LABEL_48;
  }
  type metadata accessor for UserNotificationsAuthorizationAction(0);
  if (swift_dynamicCastClass(a1))
  {
    type metadata accessor for ObjectGraph(0);
    if (swift_dynamicCastClass(a3))
    {
      swift_retain(a1);
      swift_retain(a3);
      sub_1001B67B8();
LABEL_65:
      swift_release();
      swift_release();
      goto LABEL_25;
    }
    v72 = qword_100806968;
    v73 = swift_retain(a1);
    if (v72 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v74 = type metadata accessor for OSLogger(0, v73);
    sub_10000EFC4(v74, (uint64_t)qword_10086AB38);
    v75 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v76 = type metadata accessor for LogMessage(0);
    v77 = swift_allocObject(v75, ((*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v76 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) | 7);
    *(_OWORD *)(v77 + 16) = xmmword_100640720;
    v78 = 0x8000000100687380;
    v79 = 0xD000000000000060;
  }
  else
  {
    type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction();
    if (swift_dynamicCastClass(a1))
    {
      type metadata accessor for ObjectGraph(0);
      v70 = swift_dynamicCastClass(a3);
      if (v70)
      {
        v71 = v70;
        swift_retain(a1);
        swift_retain(a3);
        sub_1001D66F4(v71);
        goto LABEL_65;
      }
      v85 = qword_100806968;
      v86 = swift_retain(a1);
      if (v85 != -1)
        swift_once(&qword_100806968, sub_10050332C);
      v74 = type metadata accessor for OSLogger(0, v86);
      sub_10000EFC4(v74, (uint64_t)qword_10086AB38);
      v87 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v88 = type metadata accessor for LogMessage(0);
      v77 = swift_allocObject(v87, ((*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v88 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) | 7);
      *(_OWORD *)(v77 + 16) = xmmword_100640720;
      v79 = 0xD00000000000006BLL;
      v89 = "Provided BaseObjectGraph is not an ObjectGraph, not running UserNotificationsAuthorizationWithPrewarmAction";
    }
    else
    {
      type metadata accessor for UpdateGranularNotificationSettingsAction(0);
      v80 = swift_dynamicCastClass(a1);
      if (!v80)
      {
        sub_10052299C(a1, (uint64_t)a2, a3);
        return result;
      }
      v81 = v80;
      type metadata accessor for ObjectGraph(0);
      v82 = swift_dynamicCastClass(a3);
      if (v82)
      {
        v83 = v82;
        swift_retain(a1);
        v84 = swift_retain(a3);
        sub_10047FC60(v81, v83, v84);
        goto LABEL_65;
      }
      v90 = qword_100806968;
      v91 = swift_retain(a1);
      if (v90 != -1)
        swift_once(&qword_100806968, sub_10050332C);
      v74 = type metadata accessor for OSLogger(0, v91);
      sub_10000EFC4(v74, (uint64_t)qword_10086AB38);
      v92 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v93 = type metadata accessor for LogMessage(0);
      v77 = swift_allocObject(v92, ((*(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v93 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80) | 7);
      *(_OWORD *)(v77 + 16) = xmmword_100640720;
      v79 = 0xD000000000000064;
      v89 = "Provided BaseObjectGraph is not an ObjectGraph, not running UpdateGranularNotificationSettingsAction";
    }
    v78 = (unint64_t)(v89 - 32) | 0x8000000000000000;
  }
  LogMessage.init(stringLiteral:)(v79, v78);
  Logger.info(_:)(v77, v74, &protocol witness table for OSLogger);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v77).n128_u64[0];
  return result;
}

uint64_t sub_100042EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD v53[5];
  _BYTE v54[40];

  v47 = a2;
  v43 = a1;
  v4 = type metadata accessor for Bag(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  v10 = sub_100018B6C(0, (unint64_t *)&unk_1008094D0, AMSURLSession_ptr);
  v11 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v10, a3, v10, v11);
  v12 = v53[0];
  v48 = (id)v53[0];
  v41 = a3;
  inject<A, B>(_:from:)(v4, a3, v4, v11);
  v13 = sub_100018B6C(0, (unint64_t *)&qword_100808580, AMSProcessInfo_ptr);
  inject<A, B>(_:from:)(v13, a3, v13, v11);
  v14 = v53[0];
  v49 = (id)v53[0];
  v15 = type metadata accessor for ASKBagContract(0);
  inject<A, B>(_:from:)(v15, a3, v15, v11);
  v16 = v53[0];
  v50 = v53[0];
  v17 = sub_10000DAF8((uint64_t *)&unk_1008094E0);
  inject<A, B>(_:from:)(v17, a3, v17, v11);
  v18 = v53[0];
  v46 = v53[0];
  v19 = swift_unknownObjectRetain(v53[0]);
  v51 = v9;
  v20 = v14;
  v21 = v43;
  v45 = HttpAction.start(urlSession:bag:process:bagContract:mediaTokenService:)(v12, v9, v20, v16, v18, v19);
  v22 = swift_unknownObjectRelease();
  v23 = v42;
  (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v42, v9, v4, v22);
  v24 = v47;
  sub_100018ADC(v47, (uint64_t)v53, &qword_100808F20);
  v25 = *(unsigned __int8 *)(v5 + 80);
  v44 = v5;
  v26 = (v25 + 24) & ~v25;
  v27 = (v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_100737F18, v29 + 8, v25 | 7);
  *(_QWORD *)(v30 + 16) = v21;
  v31 = v23;
  v32 = v4;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v30 + v26, v31, v4);
  v33 = v52;
  *(_QWORD *)(v30 + v27) = v52;
  sub_10002548C((uint64_t)v53, v30 + v28, &qword_100808F20);
  v34 = v41;
  *(_QWORD *)(v30 + v29) = v41;
  sub_100018ADC(v24, (uint64_t)v54, &qword_100808F20);
  v35 = (_QWORD *)swift_allocObject(&unk_100737F40, 72, 7);
  v36 = v21;
  v35[2] = v21;
  v35[3] = v33;
  sub_10002548C((uint64_t)v54, (uint64_t)(v35 + 4), &qword_100808F20);
  v35[8] = v34;
  v37 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  swift_retain_n(v36, 2);
  swift_retain_n(v33, 2);
  swift_retain_n(v34, 2);
  v39 = static OS_dispatch_queue.main.getter(v38);
  v53[3] = v37;
  v53[4] = &protocol witness table for OS_dispatch_queue;
  v53[0] = v39;
  Promise.then(perform:orCatchError:on:)(sub_10004E3D8, v30, sub_10004E448, v35, v53);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v53);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v51, v32);
}

uint64_t sub_100043288(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  char v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int v73;
  void *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  char v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  void *v133;
  void *v134;
  Swift::Bool v135;
  Swift::String v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  NSString v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  NSString v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  __n128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void **v160;
  uint64_t v161;
  uint64_t v162;
  void **v163;
  uint64_t v164;
  void **v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  const char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __n128 v185;
  void (*v186)(char *, _QWORD, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __n128 v197;
  void (*v198)(char *, uint64_t, __n128);
  uint64_t v199;
  __n128 v200;
  __n128 v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __n128 v205;
  uint64_t v206;
  char v207;
  __n128 v208;
  uint64_t v209;
  __n128 v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  __n128 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  __n128 v234;
  __n128 v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  __n128 v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  __n128 v243;
  void *v244;
  unint64_t v245;
  uint64_t v246;
  __n128 v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __n128 v255;
  uint64_t v256;
  __n128 v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  __n128 v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t (*v277)(char *, uint64_t, uint64_t, uint64_t);
  char *v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unsigned int v286;
  char *v287;
  unsigned int v288;
  char *v289;
  int v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t (*v298)(uint64_t, unint64_t, uint64_t);
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void **aBlock;
  uint64_t v305;
  void (*v306)(uint64_t, void *);
  void *v307;
  uint64_t (*v308)();
  uint64_t v309;
  void **v310;
  uint64_t v311;

  v273 = a3;
  v277 = a2;
  v301 = a1;
  v280 = type metadata accessor for OSLogger(0, a4);
  v279 = *(_QWORD *)(v280 - 8);
  __chkstk_darwin(v280);
  v278 = (char *)&v264 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = type metadata accessor for ActionRunner.Origin(0);
  v271 = *(_QWORD *)(v272 - 8);
  __chkstk_darwin(v272);
  v270 = (char *)&v264 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = type metadata accessor for FlowPage(0);
  v266 = *(_QWORD *)(v269 - 8);
  __chkstk_darwin(v269);
  v267 = (char *)&v264 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v268 = (char *)&v264 - v9;
  __chkstk_darwin(v10);
  v265 = (char *)&v264 - v11;
  __chkstk_darwin(v12);
  v264 = (char *)&v264 - v13;
  v283 = type metadata accessor for ActionMetrics(0, v14);
  v282 = *(_QWORD *)(v283 - 8);
  v15 = __chkstk_darwin(v283);
  v281 = (char *)&v264 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RateAction.Parameter(0, v15);
  v296 = *(_QWORD *)(v17 - 8);
  v297 = v17;
  __chkstk_darwin(v17);
  v287 = (char *)&v264 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v289 = (char *)&v264 - v20;
  v302 = type metadata accessor for HttpTemplateParameter(0);
  v21 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin(v302);
  v303 = (uint64_t)&v264 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = type metadata accessor for LegacyAppState(0);
  v293 = *(_QWORD *)(v294 - 8);
  __chkstk_darwin(v294);
  v291 = (char *)&v264 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v264 - v25;
  v300 = type metadata accessor for AdamId(0);
  v27 = *(_QWORD *)(v300 - 8);
  v28 = __chkstk_darwin(v300);
  v30 = (char *)&v264 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = type metadata accessor for HttpTemplateSubstitutions(0, v28);
  v284 = *(_QWORD *)(v285 - 8);
  __chkstk_darwin(v285);
  v32 = (char *)&v264 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v34 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v35 = sub_100479614((uint64_t)_swiftEmptyArrayStorage);
  v36 = sub_1004794F4((uint64_t)_swiftEmptyArrayStorage);
  v295 = v32;
  HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:formBody:)(v33, v34, v35, v36);
  v274 = v4;
  v37 = *(_QWORD *)(v4 + qword_100864950 + 8);
  ObjectType = swift_getObjectType();
  RateAction.adamId.getter(v39);
  v40 = dispatch thunk of AppStateController.stateMachine(forApp:)(v30, ObjectType, v37);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v300);
  v43 = swift_getObjectType();
  v292 = v26;
  dispatch thunk of AppStateMachine.currentState.getter(v43, v42);
  v45 = HttpTemplateAction.parameters.getter(v44);
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v276 = v40;
    v47 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v275 = v45;
    v48 = v45 + v47;
    v299 = *(_QWORD *)(v21 + 72);
    v300 = v21;
    v298 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v21 + 16);
    v288 = enum case for RateAction.Parameter.rating(_:);
    v290 = enum case for LegacyAppState.openable(_:);
    v286 = enum case for RateAction.Parameter.version(_:);
    while (1)
    {
      v49 = v298(v303, v48, v302);
      v50 = dispatch thunk of RateAction.rating.getter(v49);
      if ((v52 & 1) == 0)
      {
        v53 = (void **)v50;
        v54 = HttpTemplateParameter.key.getter(v51);
        v56 = v55;
        v57 = v296;
        v58 = v297;
        v59 = v289;
        v60 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v296 + 104))(v289, v288, v297);
        v61 = RateAction.Parameter.rawValue.getter(v60);
        v63 = v62;
        (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
        if (v54 == v61 && v56 == v63)
        {
          swift_bridgeObjectRelease_n(v56, 2);
LABEL_8:
          aBlock = v53;
          v65 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
          v67 = v66;
          v68 = v303;
          HttpTemplateSubstitutions.setParameter(value:for:)(v65, v66, v303, v69);
          swift_bridgeObjectRelease(v67);
          (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v68, v302);
          goto LABEL_16;
        }
        v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v61, v63, 0);
        swift_bridgeObjectRelease(v63);
        swift_bridgeObjectRelease(v56);
        if ((v64 & 1) != 0)
          goto LABEL_8;
      }
      v70 = v293;
      v71 = v291;
      v72 = v294;
      (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v291, v292, v294);
      v73 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v71, v72);
      if (v73 == v290)
      {
        (*(void (**)(char *, uint64_t))(v70 + 96))(v71, v72);
        v74 = *(void **)&v71[*(int *)(sub_10000DAF8(&qword_100808600) + 48)];
        v75 = type metadata accessor for OpenableDestination(0);
        v76.n128_f64[0] = (*(double (**)(char *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v71, v75);
        v77 = HttpTemplateParameter.key.getter(v76);
        v79 = v78;
        v80 = v296;
        v81 = v297;
        v82 = v287;
        v83 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v296 + 104))(v287, v286, v297);
        v84 = RateAction.Parameter.rawValue.getter(v83);
        v86 = v85;
        (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v81);
        if (v77 == v84 && v79 == v86)
        {
          v87.n128_u64[0] = swift_bridgeObjectRelease_n(v79, 2).n128_u64[0];
        }
        else
        {
          v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v79, v84, v86, 0);
          swift_bridgeObjectRelease(v86);
          v87 = swift_bridgeObjectRelease(v79);
          if ((v88 & 1) == 0)
          {
            (*(void (**)(uint64_t, uint64_t, __n128))(v300 + 8))(v303, v302, v87);

            goto LABEL_16;
          }
        }
        v89 = objc_msgSend(v74, "stringValue", v87.n128_f64[0]);
        v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
        v92 = v91;

        v93 = v303;
        HttpTemplateSubstitutions.setParameter(value:for:)(v90, v92, v303, v94);

        swift_bridgeObjectRelease(v92);
        (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v93, v302);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v303, v302);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
      }
LABEL_16:
      v48 += v299;
      if (!--v46)
      {
        swift_bridgeObjectRelease(v275);
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease(v45);
LABEL_20:
  v96 = v281;
  static ActionMetrics.notInstrumented.getter(v95);
  v97 = dispatch thunk of HttpTemplateAction.makeAction(with:body:actionMetrics:)(v295, 0, 0, v96);
  (*(void (**)(char *, uint64_t))(v282 + 8))(v96, v283);
  type metadata accessor for ExternalUrlAction(0);
  v98 = swift_dynamicCastClass(v97);
  if (!v98)
  {
    type metadata accessor for HttpAction(0);
    v100 = swift_dynamicCastClass(v97);
    if (v100)
    {
      v101 = v100;
      swift_retain(v97);
      sub_100042EEC(v101, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for RateAction(0);
    v102 = swift_dynamicCastClass(v97);
    if (v102)
    {
      v103 = v102;
      v104 = swift_retain(v97);
      sub_100043288(v103, v277, v273, v104);
      goto LABEL_38;
    }
    type metadata accessor for HttpTemplateAction(0);
    v105 = swift_dynamicCastClass(v97);
    if (v105)
    {
      v106 = v105;
      swift_retain(v97);
      sub_100045200(v106, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for LocalAction(0);
    if (swift_dynamicCastClass(v97))
    {
      swift_retain(v97);
      LocalAction.perform()();
      goto LABEL_38;
    }
    type metadata accessor for OfferStateAction(0);
    v107 = swift_dynamicCastClass(v97);
    if (v107)
    {
      v108 = v107;
      swift_retain(v97);
      sub_100045388(v108, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for OfferAction(0);
    v109 = swift_dynamicCastClass(v97);
    if (v109)
    {
      v110 = v109;
      swift_retain(v97);
      sub_100045580(v110, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for InAppPurchaseAction(0);
    v111 = swift_dynamicCastClass(v97);
    if (v111)
    {
      v112 = v111;
      swift_retain(v97);
      sub_100045CF4(v112, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for UpdateAllAction(0);
    v113 = swift_dynamicCastClass(v97);
    if (v113)
    {
      v114 = v113;
      swift_retain(v97);
      sub_100046458(v114, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for OpenAppAction(0);
    v116 = swift_dynamicCastClass(v97);
    if (v116)
    {
      v117 = v116;
      swift_retain(v97);
      sub_100049538(v117, 1, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for ArcadeAction();
    v118 = swift_dynamicCastClass(v97);
    if (v118)
    {
      v119 = v118;
      swift_retain(v97);
      sub_100046DFC(v119, v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for FamilyCircleAction(0);
    v120 = swift_dynamicCastClass(v97);
    if (v120)
    {
      v121 = v120;
      swift_retain(v97);
      sub_10004DD48(v121, (uint64_t)v277);
      goto LABEL_38;
    }
    type metadata accessor for SearchAdAction(0);
    if (swift_dynamicCastClass(v97))
    {
      v122 = swift_retain(v97);
      v123 = SearchAdAction.action.getter(v122);
      sub_1000423D0(v123, v277, v273);
      swift_unknownObjectRelease();
      swift_release_n(v97, 2);
LABEL_48:
      swift_release();
      goto LABEL_39;
    }
    type metadata accessor for RateLimitedAction(0);
    v124 = swift_dynamicCastClass(v97);
    if (v124)
    {
      v125 = v124;
      swift_retain(v97);
      sub_100047294(v125, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for ArcadeSubscriptionStateAction(0);
    v126 = swift_dynamicCastClass(v97);
    if (v126)
    {
      v127 = v126;
      swift_retain(v97);
      sub_10004775C(v127, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for TabBadgeAction();
    if (swift_dynamicCastClass(v97))
    {
      swift_retain(v97);
      sub_10004E03C();
      goto LABEL_38;
    }
    type metadata accessor for EngagementToggleAction(0);
    if (swift_dynamicCastClass(v97))
    {
      v129 = type metadata accessor for AppStoreEngagementManager(0, v128);
      v130 = type metadata accessor for BaseObjectGraph(0);
      swift_retain(v97);
      inject<A, B>(_:from:)(v129, v273, v129, v130);
      v132 = EngagementToggleAction.identifier.getter(v131);
      v134 = v133;
      v135 = EngagementToggleAction.value.getter() & 1;
      v136._countAndFlagsBits = v132;
      v136._object = v134;
      AppStoreEngagementManager.setIdentifier(_:isEnabled:)(v136, v135);
      swift_unknownObjectRelease();
      swift_release_n(v97, 2);
      swift_release();
      swift_bridgeObjectRelease(v134);
      goto LABEL_39;
    }
    type metadata accessor for InvalidateAllWidgetsAction(0);
    if (swift_dynamicCastClass(v97))
    {
      swift_retain(v97);
      InvalidateAllWidgetsAction.run()();
      goto LABEL_38;
    }
    type metadata accessor for CancelPreorderAction(0);
    if (swift_dynamicCastClass(v97))
    {
      swift_retain(v97);
      sub_10004E164();
      goto LABEL_38;
    }
    type metadata accessor for AppLaunchTrampolineAction(0);
    v137 = swift_dynamicCastClass(v97);
    if (v137)
    {
      v138 = v137;
      swift_retain(v97);
      sub_100047940(v138, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for CreateCalendarEventAction(0);
    v139 = swift_dynamicCastClass(v97);
    if (v139)
    {
      v140 = v139;
      swift_retain(v97);
      sub_100047B74(v140, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for CopyTextAction(0);
    if (swift_dynamicCastClass(v97))
    {
      v141 = (void *)objc_opt_self(UIPasteboard);
      v142 = objc_msgSend(v141, "generalPasteboard", swift_retain(v97).n128_f64[0]);
      CopyTextAction.text.getter();
      v144 = v143;
      v145 = String._bridgeToObjectiveC()();
      objc_msgSend(v142, "setString:", v145, swift_bridgeObjectRelease(v144).n128_f64[0]);
      swift_unknownObjectRelease();
      swift_release_n(v97, 2);

      goto LABEL_39;
    }
    type metadata accessor for LocalAskToBuyAction();
    v146 = swift_dynamicCastClass(v97);
    if (v146)
    {
      v147 = v146;
      v148 = (void *)objc_opt_self(APRequestHandler);
      v149 = swift_retain(v97);
      LocalAskToBuyAction.adamIdString.getter(v149);
      v151 = v150;
      v152 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v151);
      v153 = swift_allocObject(&unk_100737FE0, 32, 7);
      v154 = v274;
      *(_QWORD *)(v153 + 16) = v274;
      *(_QWORD *)(v153 + 24) = v147;
      v308 = sub_10004ED08;
      v309 = v153;
      aBlock = _NSConcreteStackBlock;
      v305 = 1107296256;
      v306 = sub_1000712F8;
      v307 = &unk_100737FF8;
      v155 = _Block_copy(&aBlock);
      swift_retain(v97);
      swift_retain(v154);
      objc_msgSend(v148, "localApproveRequestWithItemIdentifier:completion:", v152, v155, swift_release().n128_f64[0]);
      _Block_release(v155);
      swift_unknownObjectRelease();
      swift_release_n(v97, 2);

      goto LABEL_39;
    }
    type metadata accessor for ClearAppUsageDataAction(0);
    if (swift_dynamicCastClass(v97))
    {
      v157 = type metadata accessor for OnDevicePersonalizationDataManager(0, v156);
      v158 = type metadata accessor for BaseObjectGraph(0);
      swift_retain(v97);
      v159 = v273;
      inject<A, B>(_:from:)(v157, v273, v157, v158);
      v160 = aBlock;
      OnDevicePersonalizationDataManager.clearData()();
      v161 = type metadata accessor for AppStoreOnDeviceRecommendationsManager(0);
      v162 = inject<A, B>(_:from:)(v161, v159, v161, v158);
      v163 = aBlock;
      dispatch thunk of AppStoreOnDeviceRecommendationsManager.clearData()(v162);
      swift_unknownObjectRelease();
      swift_release_n(v97, 2);

      goto LABEL_39;
    }
    type metadata accessor for ClearSearchHistoryAction();
    if (swift_dynamicCastClass(v97))
    {
      v164 = type metadata accessor for OnDeviceSearchHistoryManager(0);
      swift_retain(v97);
      BaseObjectGraph.inject<A>(_:)(&aBlock, v164, v164);
      v165 = aBlock;
      OnDeviceSearchHistoryManager.clearData()();
      swift_unknownObjectRelease();
      swift_release_n(v97, 2);

      goto LABEL_39;
    }
    type metadata accessor for UserNotificationsAuthorizationAction(0);
    if (swift_dynamicCastClass(v97))
    {
      type metadata accessor for ObjectGraph(0);
      if (swift_dynamicCastClass(v273))
      {
        swift_retain(v97);
        swift_retain(v273);
        sub_1001B67B8();
LABEL_79:
        swift_release_n(v97, 2);
LABEL_80:
        swift_release();
        swift_release();
LABEL_98:
        swift_unknownObjectRelease();
        goto LABEL_39;
      }
      v168 = qword_100806968;
      swift_retain(v97);
      if (v168 != -1)
        swift_once(&qword_100806968, sub_10050332C);
      v169 = v280;
      sub_10000EFC4(v280, (uint64_t)qword_10086AB38);
      v170 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v171 = type metadata accessor for LogMessage(0);
      v172 = swift_allocObject(v170, ((*(unsigned __int8 *)(*(_QWORD *)(v171 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v171 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v171 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v171 - 8) + 80) | 7);
      *(_OWORD *)(v172 + 16) = xmmword_100640720;
      v173 = 0xD000000000000060;
      v174 = "Provided BaseObjectGraph is not an ObjectGraph, not running UserNotificationsAuthorizationAction";
      goto LABEL_97;
    }
    type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction();
    if (swift_dynamicCastClass(v97))
    {
      type metadata accessor for ObjectGraph(0);
      v166 = swift_dynamicCastClass(v273);
      if (v166)
      {
        v167 = v166;
        swift_retain(v97);
        swift_retain(v273);
        sub_1001D66F4(v167);
        goto LABEL_79;
      }
      v180 = qword_100806968;
      swift_retain(v97);
      if (v180 != -1)
        swift_once(&qword_100806968, sub_10050332C);
      v169 = v280;
      sub_10000EFC4(v280, (uint64_t)qword_10086AB38);
      v181 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v182 = type metadata accessor for LogMessage(0);
      v172 = swift_allocObject(v181, ((*(unsigned __int8 *)(*(_QWORD *)(v182 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v182 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v182 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v182 - 8) + 80) | 7);
      *(_OWORD *)(v172 + 16) = xmmword_100640720;
      v173 = 0xD00000000000006BLL;
      v174 = "Provided BaseObjectGraph is not an ObjectGraph, not running UserNotificationsAuthorizationWithPrewarmAction";
LABEL_97:
      LogMessage.init(stringLiteral:)(v173, (unint64_t)(v174 - 32) | 0x8000000000000000);
      Logger.info(_:)(v172, v169, &protocol witness table for OSLogger);
      swift_release_n(v97, 2);
      swift_bridgeObjectRelease(v172);
      goto LABEL_98;
    }
    type metadata accessor for UpdateGranularNotificationSettingsAction(0);
    v175 = swift_dynamicCastClass(v97);
    if (v175)
    {
      v176 = v175;
      type metadata accessor for ObjectGraph(0);
      v177 = swift_dynamicCastClass(v273);
      if (v177)
      {
        v178 = v177;
        swift_retain(v97);
        v179 = swift_retain(v273);
        sub_10047FC60(v176, v178, v179);
        swift_release_n(v97, 2);
        goto LABEL_80;
      }
      v192 = qword_100806968;
      swift_retain(v97);
      if (v192 != -1)
        swift_once(&qword_100806968, sub_10050332C);
      v169 = v280;
      sub_10000EFC4(v280, (uint64_t)qword_10086AB38);
      v193 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v194 = type metadata accessor for LogMessage(0);
      v172 = swift_allocObject(v193, ((*(unsigned __int8 *)(*(_QWORD *)(v194 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v194 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v194 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v194 - 8) + 80) | 7);
      *(_OWORD *)(v172 + 16) = xmmword_100640720;
      v173 = 0xD000000000000064;
      v174 = "Provided BaseObjectGraph is not an ObjectGraph, not running UpdateGranularNotificationSettingsAction";
      goto LABEL_97;
    }
    type metadata accessor for FlowAction(0);
    v183 = swift_dynamicCastClass(v97);
    if (v183)
    {
      v184 = v183;
      swift_retain_n(v97, 2);
      FlowAction.page.getter(v185);
      v186 = *(void (**)(char *, _QWORD, uint64_t))(v266 + 104);
      v187 = v269;
      v186(v265, enum case for FlowPage.arcadeWelcome(_:), v269);
      v188 = sub_10000E720((unint64_t *)&qword_100809500, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPage, (uint64_t)&protocol conformance descriptor for FlowPage);
      dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v187, v188);
      dispatch thunk of RawRepresentable.rawValue.getter(&v310, v187, v188);
      v189 = v305;
      v190 = v311;
      if (aBlock == v310 && v305 == v311)
      {
        v191 = 1;
        v190 = v305;
      }
      else
      {
        v191 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v305, v310, v311, 0);
      }
      swift_bridgeObjectRelease(v189);
      v197 = swift_bridgeObjectRelease(v190);
      v198 = *(void (**)(char *, uint64_t, __n128))(v266 + 8);
      v199 = v269;
      v198(v265, v269, v197);
      ((void (*)(char *, uint64_t))v198)(v264, v199);
      if ((v191 & 1) != 0)
      {
        v201 = swift_release();
        sub_100527BF0(v184, (uint64_t)v277, v201);
        goto LABEL_38;
      }
      FlowAction.page.getter(v200);
      v202 = v269;
      v186(v267, enum case for FlowPage.gameCenterDashboard(_:), v269);
      dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v202, v188);
      dispatch thunk of RawRepresentable.rawValue.getter(&v310, v202, v188);
      v203 = v305;
      v204 = v311;
      if (aBlock == v310 && v305 == v311)
      {
        v205 = swift_bridgeObjectRelease_n(v305, 2);
        v206 = v269;
        v198(v267, v269, v205);
        ((void (*)(char *, uint64_t))v198)(v268, v206);
        swift_release();
      }
      else
      {
        v207 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v305, v310, v311, 0);
        swift_bridgeObjectRelease(v203);
        v208 = swift_bridgeObjectRelease(v204);
        v209 = v269;
        v198(v267, v269, v208);
        ((void (*)(char *, uint64_t))v198)(v268, v209);
        v210 = swift_release();
        if ((v207 & 1) == 0)
        {
          sub_10052811C(v184, (uint64_t)v277, v210);
          goto LABEL_38;
        }
      }
      type metadata accessor for GameCenter(0);
      v211 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
      v213 = static OS_dispatch_queue.main.getter(v212);
      v307 = (void *)v211;
      v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
      aBlock = (void **)v213;
      static GameCenter.withLocalPlayer(on:_:)(&aBlock, sub_1005266C8, 0, v214);
LABEL_109:
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&aBlock);
      goto LABEL_38;
    }
    type metadata accessor for TabChangeAction(0);
    v195 = swift_dynamicCastClass(v97);
    if (v195)
    {
      v196 = v195;
      swift_retain(v97);
      sub_100523548(v196, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for SheetAction(0);
    v215 = swift_dynamicCastClass(v97);
    if (v215)
    {
      v216 = v215;
      swift_retain(v97);
      sub_100523678(v216, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for AlertAction(0);
    v217 = swift_dynamicCastClass(v97);
    if (v217)
    {
      v218 = v217;
      swift_retain(v97);
      sub_100524294(v218, (uint64_t)v277, v273);
      goto LABEL_38;
    }
    type metadata accessor for AdTransparencyAction(0);
    if (swift_dynamicCastClass(v97))
    {
      swift_retain(v97);
      sub_100528530();
      goto LABEL_38;
    }
    type metadata accessor for ShareSheetAction(0);
    v219 = swift_dynamicCastClass(v97);
    if (v219)
    {
      v220 = v219;
      swift_retain(v97);
      sub_1005287C4(v220, (uint64_t)v277);
      goto LABEL_38;
    }
    type metadata accessor for ReportConcernAction(0);
    v221 = swift_dynamicCastClass(v97);
    if (v221)
    {
      v222 = v221;
      swift_retain(v97);
      sub_100528AD0(v222, (uint64_t)v277);
      goto LABEL_38;
    }
    type metadata accessor for ReviewSummaryReportConcernAction(0);
    v223 = swift_dynamicCastClass(v97);
    if (v223)
    {
      v224 = v223;
      swift_retain(v97);
      sub_100528AF0(v224, (uint64_t)v277);
      goto LABEL_38;
    }
    type metadata accessor for CompoundAction(0);
    if (!swift_dynamicCastClass(v97))
    {
      type metadata accessor for GameCenterDashboardAction();
      if (swift_dynamicCastClass(v97))
      {
        swift_retain(v97);
        sub_100528D7C();
        goto LABEL_38;
      }
      type metadata accessor for GameCenterPlayerProfileAction(0);
      if (swift_dynamicCastClass(v97))
      {
        swift_retain(v97);
        sub_100528F9C();
        goto LABEL_38;
      }
      type metadata accessor for GameCenterAchievementsAction(0);
      v236 = swift_dynamicCastClass(v97);
      if (v236)
      {
        v237 = v236;
        type metadata accessor for GameCenter(0);
        v238 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
        v239 = swift_retain(v97);
        v240 = static OS_dispatch_queue.main.getter(v239);
        v307 = (void *)v238;
        v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
        aBlock = (void **)v240;
        v241 = (_QWORD *)swift_allocObject(&unk_100737FB8, 32, 7);
        v241[2] = v237;
        v242 = v274;
        v241[3] = v274;
        swift_retain(v97);
        v243 = swift_retain(v242);
        v244 = sub_10004E4A0;
        goto LABEL_150;
      }
      type metadata accessor for GameCenterInvitePlayerAction(0);
      v226 = swift_dynamicCastClass(v97);
      if (v226)
      {
        v245 = v226;
        type metadata accessor for GameCenter(0);
        v246 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
        v247 = swift_retain(v97);
        v248 = static OS_dispatch_queue.main.getter(v247);
        v307 = (void *)v246;
        v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
        aBlock = (void **)v248;
        v241 = (_QWORD *)swift_allocObject(&unk_100737F90, 40, 7);
        v249 = v273;
        v241[2] = v273;
        v241[3] = v245;
        v250 = v274;
        v241[4] = v274;
        swift_retain(v97);
        swift_retain(v250);
        v243 = swift_retain(v249);
        v244 = sub_10004E488;
        goto LABEL_150;
      }
LABEL_146:
      type metadata accessor for GameCenterDenylistPlayerAction(v226);
      v252 = swift_dynamicCastClass(v97);
      if (v252)
      {
        v253 = v252;
        type metadata accessor for GameCenter(0);
        v254 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
        v255 = swift_retain(v97);
        v256 = static OS_dispatch_queue.main.getter(v255);
        v307 = (void *)v254;
        v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
        aBlock = (void **)v256;
        v257 = swift_retain(v97);
        static GameCenter.withLocalPlayer(on:_:)(&aBlock, sub_10004E46C, v253, v257);
LABEL_151:
        swift_release();
        goto LABEL_109;
      }
      type metadata accessor for GameCenterLeaderboardsAction(0);
      v258 = swift_dynamicCastClass(v97);
      if (!v258)
      {
        if (sub_100523398())
        {
          dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(v97, v277, v273);
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        goto LABEL_48;
      }
      v259 = v258;
      type metadata accessor for GameCenter(0);
      v260 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
      v261 = swift_retain(v97);
      v262 = static OS_dispatch_queue.main.getter(v261);
      v307 = (void *)v260;
      v308 = (uint64_t (*)())&protocol witness table for OS_dispatch_queue;
      aBlock = (void **)v262;
      v241 = (_QWORD *)swift_allocObject(&unk_100737F68, 32, 7);
      v241[2] = v259;
      v263 = v274;
      v241[3] = v274;
      swift_retain(v97);
      v243 = swift_retain(v263);
      v244 = sub_10004E464;
LABEL_150:
      static GameCenter.withLocalPlayer(on:_:)(&aBlock, v244, v241, v243);
      goto LABEL_151;
    }
    swift_retain(v97);
    v226 = CompoundAction.actions.getter(v225);
    v303 = v226;
    if (v226 >> 62)
    {
      if (v303 < 0)
        v251 = v303;
      else
        v251 = v303 & 0xFFFFFFFFFFFFFF8;
      v226 = _CocoaArrayWrapper.endIndex.getter(v251);
      v302 = v226;
      if (v226)
        goto LABEL_126;
    }
    else
    {
      v302 = *(_QWORD *)((v303 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v302)
      {
LABEL_126:
        if (v302 >= 1)
        {
          v227 = 0;
          v228 = v303 & 0xC000000000000001;
          v229 = enum case for ActionRunner.Origin.userInitiated(_:);
          v230 = v271;
          v231 = (uint64_t)v270;
          v232 = v272;
          do
          {
            if (v228)
            {
              v233 = specialized _ArrayBuffer._getElementSlowPath(_:)(v227, v303);
            }
            else
            {
              v233 = *(_QWORD *)(v303 + 8 * v227 + 32);
              v234 = swift_retain(v233);
            }
            ++v227;
            (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v230 + 104))(v231, v229, v232, v234);
            sub_100434620(v233, (uint64_t)v277, v231, v273);
            v235 = swift_release();
            (*(void (**)(uint64_t, uint64_t, __n128))(v230 + 8))(v231, v232, v235);
          }
          while (v302 != v227);
          goto LABEL_144;
        }
        __break(1u);
        goto LABEL_146;
      }
    }
LABEL_144:
    swift_bridgeObjectRelease(v303);
    goto LABEL_38;
  }
  v99 = v98;
  swift_retain(v97);
  sub_10004DC18(v99, (uint64_t)v277);
LABEL_38:
  swift_unknownObjectRelease();
  swift_release_n(v97, 2);
LABEL_39:
  (*(void (**)(char *, uint64_t))(v293 + 8))(v292, v294);
  return (*(uint64_t (**)(char *, uint64_t))(v284 + 8))(v295, v285);
}

uint64_t sub_100045200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  objc_class *v9;
  _BYTE *v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[5];

  v4 = v3;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_10082A290);
  sub_1000E1E3C((uint64_t)&v17);

  if (!v18)
    return sub_100010F2C((uint64_t)&v17, (uint64_t *)&unk_100809510);
  sub_100010E24(&v17, (uint64_t)v19);
  sub_100018ADC(a2, (uint64_t)&v17, &qword_100808F20);
  v9 = (objc_class *)type metadata accessor for HttpTemplateController();
  v10 = objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_okAction] = 0;
  v10[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_hasRequiredParameters] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_actionRunner] = v4;
  *(_QWORD *)&v10[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_templateAction] = a1;
  sub_100018ADC((uint64_t)&v17, (uint64_t)&v10[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_actionSender], &qword_100808F20);
  v16.receiver = v10;
  v16.super_class = v9;
  swift_retain(a1);
  *(_QWORD *)&v11 = swift_retain(v4).n128_u64[0];
  v12 = objc_msgSendSuper2(&v16, "init", v11);
  sub_100010F2C((uint64_t)&v17, &qword_100808F20);
  v13 = type metadata accessor for ObjectGraph(0);
  v14 = swift_dynamicCastClassUnconditional(a3, v13, 0, 0, 0);
  sub_100571B10(v19, v14);

  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
}

uint64_t sub_100045388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _BYTE v29[24];
  uint64_t v30;

  v4 = v3;
  v27 = a3;
  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AdamId(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2;
  sub_100018ADC(a2, (uint64_t)v29, &qword_100808F20);
  if (!v30)
  {
    v24 = v7;
    v25 = v6;
    sub_100010F2C((uint64_t)v29, &qword_100808F20);
LABEL_6:
    v17 = *(_QWORD *)(v4 + qword_100864950 + 8);
    ObjectType = swift_getObjectType();
    OfferStateAction.adamId.getter(v19);
    v16 = dispatch thunk of AppStateController.stateMachine(forApp:)(v13, ObjectType, v17);
    v15 = v20;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v7 = v24;
    v6 = v25;
    goto LABEL_7;
  }
  v14 = sub_10000DAF8(&qword_100815430);
  if (!swift_dynamicCast(v28, v29, (char *)&type metadata for Any + 8, v14, 6))
  {
    v24 = v7;
    v25 = v6;
    goto LABEL_6;
  }
  v16 = v28[0];
  v15 = v28[1];
LABEL_7:
  v21 = OfferStateAction.preferredActionFor(stateMachine:)(v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
  sub_100434620(v21, v26, (uint64_t)v9, v27);
  swift_unknownObjectRelease();
  v22 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v22);
}

uint64_t sub_100045580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  char v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  int v50;
  __n128 v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, __n128);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  void (*v62)(char *, uint64_t);
  __n128 v64;
  char *v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  __n128 v75;
  uint64_t (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD v106[2];
  _BYTE v107[24];
  uint64_t v108;

  v100 = a3;
  v6 = type metadata accessor for ActionRunner.Origin(0);
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  __chkstk_darwin(v6);
  v90 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionMetrics(0, v8);
  __chkstk_darwin(v9);
  v89 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OpenableDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  v98 = v12;
  __chkstk_darwin(v11);
  v88 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - v15;
  v17 = type metadata accessor for LegacyAppState(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v95 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v99 = (char *)&v87 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v87 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v87 - v26;
  __chkstk_darwin(v28);
  v105 = (char *)&v87 - v29;
  v30 = (_QWORD *)type metadata accessor for AdamId(0);
  v101 = *(v30 - 1);
  v102 = v30;
  __chkstk_darwin(v30);
  v94 = (char *)&v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v87 - v33;
  v91 = a2;
  sub_100018ADC(a2, (uint64_t)v107, &qword_100808F20);
  v103 = v3;
  v96 = v16;
  if (v108)
  {
    v35 = sub_10000DAF8(&qword_100815430);
    v36 = v18;
    if (swift_dynamicCast(v106, v107, (char *)&type metadata for Any + 8, v35, 6))
    {
      v38 = v106[0];
      v37 = v106[1];
      goto LABEL_6;
    }
  }
  else
  {
    v36 = v18;
    sub_100010F2C((uint64_t)v107, &qword_100808F20);
  }
  v39 = *(_QWORD *)(v3 + qword_100864950 + 8);
  ObjectType = swift_getObjectType();
  OfferAction.adamId.getter(v41);
  v38 = dispatch thunk of AppStateController.stateMachine(forApp:)(v34, ObjectType, v39);
  v37 = v42;
  (*(void (**)(char *, id))(v101 + 8))(v34, v102);
LABEL_6:
  v43 = swift_getObjectType();
  v104 = a1;
  v44.n128_f64[0] = OfferAction.includeBetaApps.getter();
  v46 = v105;
  dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)(v45 & 1, v43, v37, v44);
  v47 = v36;
  v48 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v49 = v27;
  v48(v27, v46, v17);
  v50 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v27, v17);
  if (v50 != enum case for LegacyAppState.waiting(_:))
  {
    if (v50 == enum case for LegacyAppState.purchased(_:))
    {
      v54 = v99;
      v48(v99, v49, v17);
      (*(void (**)(char *, uint64_t))(v47 + 96))(v54, v17);
      v55 = type metadata accessor for PurchaseType(0);
      v56 = v47;
      v57 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v57 + 88))(v54, v55) != enum case for PurchaseType.preorder(_:))
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v55);
        goto LABEL_12;
      }
    }
    else if (v50 == enum case for LegacyAppState.updatable(_:) || v50 == enum case for LegacyAppState.downloadable(_:))
    {
      v48(v24, v27, v17);
      (*(void (**)(char *, uint64_t))(v47 + 96))(v24, v17);
      v51 = swift_bridgeObjectRelease(*((_QWORD *)v24 + 1));
      v56 = v47;
    }
    else
    {
      if (v50 == enum case for LegacyAppState.downloading(_:))
      {
        v48(v24, v27, v17);
        (*(void (**)(char *, uint64_t))(v47 + 96))(v24, v17);
        v52 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
        goto LABEL_8;
      }
      if (v50 == enum case for LegacyAppState.openable(_:))
      {
        v65 = v95;
        v48(v95, v27, v17);
        (*(void (**)(char *, uint64_t))(v47 + 96))(v65, v17);

        v66 = v97;
        v67 = v96;
        v68.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v98 + 32))(v96, v65, v97);
        v69 = v94;
        v70 = OfferAction.adamId.getter(v68);
        v71 = (void *)AdamId.numberValue.getter(v70);
        v72 = v69;
        v73 = v67;
        v74 = v98;
        (*(void (**)(char *, id))(v101 + 8))(v72, v102);
        if (v71)
        {
          v102 = v71;
          OfferAction.adamId.getter(v75);
          v76 = *(uint64_t (**)(char *, char *, uint64_t))(v74 + 16);
          v77 = v88;
          v78 = v76(v88, v73, v66);
          v79 = v89;
          static ActionMetrics.notInstrumented.getter(v78);
          v80 = type metadata accessor for OpenAppAction(0);
          swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
          v81 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(0, 0, v34, 1, v77, 0, v79);
          v83 = v92;
          v82 = v93;
          v84 = (uint64_t)v90;
          (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v90, enum case for ActionRunner.Origin.userInitiated(_:), v93);
          sub_100434620(v81, v91, v84, v100);
          v66 = v97;
          swift_release();

          v85 = v84;
          v74 = v98;
          (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v85, v82);
        }
        v86 = swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v73, v66, v86);
        v62 = *(void (**)(char *, uint64_t))(v47 + 8);
        v62(v105, v17);
        return ((uint64_t (*)(char *, uint64_t))v62)(v49, v17);
      }
      v56 = v47;
      if (v50 != enum case for LegacyAppState.buyable(_:) && v50 != enum case for LegacyAppState.unknown(_:))
      {
LABEL_12:
        v58 = *(_QWORD *)(v103 + qword_100864950 + 8);
        v59 = swift_getObjectType();
        OfferAction.adamId.getter(v60);
        dispatch thunk of AppStateController.refreshState(for:)(v34, v59, v58);
        v61 = swift_unknownObjectRelease();
        (*(void (**)(char *, id, __n128))(v101 + 8))(v34, v102, v61);
        v62 = *(void (**)(char *, uint64_t))(v56 + 8);
        v62(v105, v17);
        return ((uint64_t (*)(char *, uint64_t))v62)(v49, v17);
      }
    }
    v53 = *(void (**)(char *, uint64_t, __n128))(v56 + 8);
    v53(v49, v17, v51);
    sub_100048338(v104, v38, v37, v100);
    goto LABEL_20;
  }
  v48(v24, v27, v17);
  (*(void (**)(char *, uint64_t))(v47 + 96))(v24, v17);
  v52 = type metadata accessor for InstallationType(0);
LABEL_8:
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v24, v52);
  v53 = *(void (**)(char *, uint64_t, __n128))(v47 + 8);
  ((void (*)(char *, uint64_t))v53)(v27, v17);
  sub_10004BFE4(v104, 1, v38, v37);
LABEL_20:
  v64 = swift_unknownObjectRelease();
  return ((uint64_t (*)(char *, uint64_t, __n128))v53)(v105, v17, v64);
}

void sub_100045CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __n128 v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  _QWORD *v45;
  void *v46;
  void **v47;
  uint64_t v48;
  uint64_t ObjectType;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void **v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void **v104;
  void **aBlock;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  _QWORD *v108;
  uint64_t (*v109)(__n128);
  _QWORD *v110;

  v91 = a3;
  v87 = a2;
  v92 = (_QWORD *)*v3;
  v90 = type metadata accessor for ActionRunner.Origin(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetrics(0, v6);
  __chkstk_darwin(v7);
  v86 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for OpenableDestination(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v85 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LegacyAppState(0);
  v101 = *(_QWORD *)(v10 - 8);
  v102 = v10;
  __chkstk_darwin(v10);
  v100 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdamId(0);
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  v13 = __chkstk_darwin(v12);
  v99 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSLogger(0, v13);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = InAppPurchaseAction.appBundleId.getter(v17);
  v22 = v21;
  v103 = a1;
  v23 = InAppPurchaseAction.productIdentifier.getter();
  v95 = v24;
  v96 = (void **)v23;
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v25 = sub_10000EFC4(v15, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v25, v15);
  v26 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v27 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v28 = *(_QWORD *)(v27 + 72);
  v29 = *(unsigned __int8 *)(v27 + 80);
  v94 = v16;
  v30 = swift_allocObject(v26, ((v29 + 32) & ~v29) + 5 * v28, v29 | 7);
  v93 = v19;
  v31 = v30;
  *(_OWORD *)(v30 + 16) = xmmword_100642200;
  LogMessage.init(stringLiteral:)(0xD000000000000029, 0x80000001006875F0);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100687620);
  v108 = &type metadata for String;
  aBlock = (void **)v20;
  v106 = v22;
  swift_bridgeObjectRetain(v22);
  static LogMessage.traceableSensitive(_:)(&aBlock);
  sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x6D61644120504169, 0xEB000000003A4449);
  v108 = &type metadata for String;
  v33 = v95;
  v32 = (uint64_t)v96;
  aBlock = v96;
  v106 = v95;
  swift_bridgeObjectRetain(v95);
  static LogMessage.traceableSensitive(_:)(&aBlock);
  sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
  v34 = v93;
  Logger.debug(_:)(v31, v15, &protocol witness table for OSLogger);
  v35 = swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t, __n128))(v94 + 8))(v34, v15, v35);
  swift_bridgeObjectRetain(v22);
  v36 = swift_bridgeObjectRetain(v33);
  v37 = InAppPurchaseAction.appTitle.getter(v36);
  v39 = v38;
  v40 = InAppPurchaseAction.productTitle.getter();
  v42 = v41;
  v43 = objc_allocWithZone((Class)SKPurchaseIntent);
  v44 = sub_10004CB90(v20, v22, v32, v33, v37, v39, v40, v42);
  v45 = (_QWORD *)swift_allocObject(&unk_100738148, 48, 7);
  v45[2] = v20;
  v45[3] = v22;
  v45[4] = v32;
  v45[5] = v33;
  v109 = sub_10004E6CC;
  v110 = v45;
  aBlock = _NSConcreteStackBlock;
  v106 = 1107296256;
  v107 = sub_1000924A0;
  v108 = &unk_100738160;
  v46 = _Block_copy(&aBlock);
  objc_msgSend(v44, "send:", v46, swift_release().n128_f64[0]);
  _Block_release(v46);
  v47 = v104;
  v48 = *(uint64_t *)((char *)v104 + qword_100864950 + 8);
  ObjectType = swift_getObjectType();
  v50 = v99;
  InAppPurchaseAction.appAdamId.getter(ObjectType);
  dispatch thunk of AppStateController.stateMachine(forApp:)(v50, ObjectType, v48);
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v98);
  v53 = swift_getObjectType();
  v54 = v100;
  v55 = dispatch thunk of AppStateMachine.currentState.getter(v53, v52);
  LOBYTE(v52) = LegacyAppState.isLocalApplication.getter(v55);
  v56 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v54, v102);
  if ((v52 & 1) != 0)
  {
    v57 = InAppPurchaseAction.minimumShortVersionSupportingInAppPurchaseFlow.getter(v56);
    if (v58)
    {
      v60 = v57;
      v61 = v58;
      InAppPurchaseAction.appBundleId.getter(v59);
      v63 = v62;
      v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v63);
      v65 = objc_msgSend((id)objc_opt_self(LSApplicationProxy), "applicationProxyForIdentifier:", v64);

      if (!v65)
      {
        __break(1u);
        return;
      }
      v66 = objc_msgSend(v65, "shortVersionString");

      if (v66)
      {
        v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
        v69 = v68;

        v70 = static VersionStringUtil.isShortVersionString(_:atLeast:)(v67, v69, v60, v61);
        swift_bridgeObjectRelease(v69);
        swift_bridgeObjectRelease(v61);
        if ((v70 & 1) != 0)
        {
          InAppPurchaseAction.appAdamId.getter(v71);
          v72 = v85;
          v73 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v83 + 104))(v85, enum case for OpenableDestination.app(_:), v84);
          v74 = v86;
          static ActionMetrics.notInstrumented.getter(v73);
          v75 = type metadata accessor for OpenAppAction(0);
          swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
          v76 = OpenAppAction.init(title:adamId:allowBetaApps:destination:presentationStyle:actionMetrics:)(0, 0, v50, 1, v72, 0, v74);
          v77 = v89;
          v78 = (uint64_t)v88;
          v79 = v90;
          (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v88, enum case for ActionRunner.Origin.userInitiated(_:), v90);
          sub_100434620(v76, v87, v78, v91);
          swift_unknownObjectRelease();
          swift_release();

          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v79);
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v61);
      }
    }
  }
  v108 = v92;
  aBlock = v47;
  v80 = swift_retain(v47);
  v81 = InAppPurchaseAction.installRequiredAction.getter(v80);
  if (v81)
  {
    sub_10052299C(v81, (uint64_t)&aBlock, v91);
    swift_unknownObjectRelease();

    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();

  }
  sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
}

void sub_100046458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t updated;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  void (*v41)(void);
  double *v42;
  unint64_t v43;
  unint64_t v44;
  double *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  unint64_t v55;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  char *v65;
  void **v66;
  uint64_t *v67;
  char *v68;
  BOOL v69;
  void *v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  char *v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t ObjectType;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  double *v94;
  unint64_t v95;
  int64_t v96;
  char *v97;
  void *v98;
  Class isa;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  int64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  double *v122;
  uint64_t v123;
  void (*v124)(void);
  __int128 v125;
  _QWORD *v126;
  void **aBlock;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  uint64_t v132;

  v4 = v3;
  v6 = type metadata accessor for InstallationType(0);
  v118 = *(_QWORD *)(v6 - 8);
  v119 = v6;
  __chkstk_darwin(v6);
  v117 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AdamId(0);
  *(_QWORD *)&v125 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v116 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v103 - v11;
  __chkstk_darwin(v13);
  v123 = (uint64_t)&v103 - v14;
  v15 = sub_10000DAF8(&qword_100809550);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v110 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v115 = (char *)&v103 - v19;
  __chkstk_darwin(v20);
  v109 = (char *)&v103 - v21;
  __chkstk_darwin(v22);
  v120 = (char *)&v103 - v23;
  __chkstk_darwin(v24);
  v121 = (char *)&v103 - v25;
  v27 = __chkstk_darwin(v26);
  v111 = (uint64_t)&v103 - v28;
  updated = UpdateAllAction.ordering.getter(v27);
  if (!updated)
  {
    v72 = *(void **)(v3 + qword_100864970);
    v73 = swift_allocObject(&unk_100738198, 32, 7);
    *(_QWORD *)(v73 + 16) = v3;
    *(_QWORD *)(v73 + 24) = a3;
    v131 = sub_10004E6E4;
    v132 = v73;
    aBlock = _NSConcreteStackBlock;
    v128 = 1107296256;
    v129 = sub_10006E7CC;
    v130 = &unk_1007381B0;
    v74 = _Block_copy(&aBlock);
    swift_retain(v4);
    swift_retain(a3);
    objc_msgSend(v72, "getUpdatesWithCompletionBlock:", v74, swift_release().n128_f64[0]);
    _Block_release(v74);
    return;
  }
  v30 = updated;
  v126 = &_swiftEmptySetSingleton;
  v114 = sub_100509E60((uint64_t)_swiftEmptyArrayStorage);
  v31 = *(_QWORD *)(v30 + 16);
  v105 = v4;
  if (v31)
  {
    v107 = (uint64_t *)(v111 + *(int *)(v15 + 48));
    v32 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v104 = v30;
    v33 = v30 + v32;
    v106 = *(_QWORD *)(v16 + 72);
    v122 = _swiftEmptyArrayStorage;
    v34 = (uint64_t)v121;
    v108 = v12;
    do
    {
      v113 = v31;
      v112 = (char *)v33;
      v35 = v111;
      sub_100018ADC(v33, v111, &qword_100809550);
      v36 = *v107;
      v37 = v107[1];
      v38 = (uint64_t *)(v34 + *(int *)(v15 + 48));
      v39 = v125;
      v124 = *(void (**)(void))(v125 + 32);
      ((void (*)(uint64_t, uint64_t, uint64_t))v124)(v34, v35, v8);
      *v38 = v36;
      v38[1] = v37;
      v40 = (uint64_t *)&v120[*(int *)(v15 + 48)];
      v41 = *(void (**)(void))(v39 + 16);
      v41();
      *v40 = v36;
      v40[1] = v37;
      swift_bridgeObjectRetain_n(v37, 2);
      v42 = v122;
      if ((swift_isUniquelyReferenced_nonNull_native(v122) & 1) == 0)
        v42 = (double *)sub_1003D9EA4(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
      v44 = *((_QWORD *)v42 + 2);
      v43 = *((_QWORD *)v42 + 3);
      if (v44 >= v43 >> 1)
        v42 = (double *)sub_1003D9EA4((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
      *((_QWORD *)v42 + 2) = v44 + 1;
      v122 = v42;
      v45 = &v42[2 * v44];
      *((_QWORD *)v45 + 4) = v36;
      *((_QWORD *)v45 + 5) = v37;
      v46 = *(void (**)(char *, uint64_t))(v125 + 8);
      v46(v120, v8);
      v47 = (uint64_t)v109;
      v48 = (uint64_t *)&v109[*(int *)(v15 + 48)];
      v49 = v121;
      ((void (*)(char *, char *, uint64_t))v41)(v109, v121, v8);
      *v48 = v36;
      v48[1] = v37;
      v50 = v123;
      sub_100138E2C(v123, v47);
      v46((char *)v50, v8);
      v51 = (uint64_t *)&v115[*(int *)(v15 + 48)];
      v41();
      *v51 = v36;
      v51[1] = v37;
      v52 = v15;
      v53 = (uint64_t *)&v110[*(int *)(v15 + 48)];
      ((void (*)(char *, char *, uint64_t))v41)(v110, v49, v8);
      *v53 = v36;
      v53[1] = v37;
      v54 = v108;
      v124();
      v55 = v114;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v114);
      aBlock = (void **)v55;
      v58 = sub_10057E9FC(v36, v37);
      v59 = *(_QWORD *)(v55 + 16);
      v60 = (v57 & 1) == 0;
      v61 = v59 + v60;
      if (__OFADD__(v59, v60))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v62 = v57;
      if (*(_QWORD *)(v55 + 24) >= v61)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1001FBB38();
      }
      else
      {
        sub_1001F5168(v61, isUniquelyReferenced_nonNull_native);
        v63 = sub_10057E9FC(v36, v37);
        if ((v62 & 1) != (v64 & 1))
          goto LABEL_47;
        v58 = v63;
      }
      v65 = v54;
      v66 = aBlock;
      v15 = v52;
      if ((v62 & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 40))((char *)aBlock[7] + *(_QWORD *)(v125 + 72) * v58, v65, v8);
        v34 = (uint64_t)v121;
      }
      else
      {
        aBlock[(v58 >> 6) + 8] = (void *)((unint64_t)aBlock[(v58 >> 6) + 8] | (1 << v58));
        v67 = (uint64_t *)((char *)v66[6] + 16 * v58);
        *v67 = v36;
        v67[1] = v37;
        ((void (*)(char *, char *, uint64_t))v124)((char *)v66[7] + *(_QWORD *)(v125 + 72) * v58, v65, v8);
        v68 = (char *)v66[2];
        v69 = __OFADD__(v68, 1);
        v70 = v68 + 1;
        v34 = (uint64_t)v121;
        if (v69)
          goto LABEL_45;
        v66[2] = v70;
        swift_bridgeObjectRetain(v37);
      }
      v114 = (unint64_t)aBlock;
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_100010F2C(v34, &qword_100809550);
      v46(v115, v8);
      v33 = (uint64_t)&v112[v106];
      v31 = v113 - 1;
    }
    while (v113 != 1);
    swift_bridgeObjectRelease(v104);
    v71 = v126;
    v4 = v105;
  }
  else
  {
    swift_bridgeObjectRelease(v30);
    v122 = _swiftEmptyArrayStorage;
    v71 = &_swiftEmptySetSingleton;
  }
  v75 = v71[7];
  v112 = (char *)(v71 + 7);
  v76 = 1 << *((_BYTE *)v71 + 32);
  v77 = -1;
  if (v76 < 64)
    v77 = ~(-1 << v76);
  v78 = v77 & v75;
  v120 = (char *)(v4 + qword_100864950);
  v113 = (unint64_t)(v76 + 63) >> 6;
  LODWORD(v115) = enum case for InstallationType.update(_:);
  v121 = (char *)v71;
  swift_bridgeObjectRetain(v71);
  v79 = 0;
  v80 = v125;
  v81 = v117;
  while (1)
  {
    if (v78)
    {
      v82 = __clz(__rbit64(v78));
      v78 &= v78 - 1;
      v124 = v79;
      v83 = v82 | ((_QWORD)v79 << 6);
      v84 = v121;
      goto LABEL_26;
    }
    v93 = (int64_t)v79 + 1;
    v84 = v121;
    v94 = v122;
    if (__OFADD__(v79, 1))
      goto LABEL_44;
    if (v93 >= v113)
    {
LABEL_42:
      swift_release();
      v98 = *(void **)(v105 + qword_100864970);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v94);
      v100 = v126;
      v101 = swift_allocObject(&unk_1007381E8, 48, 7);
      *(_QWORD *)(v101 + 16) = v114;
      *(_QWORD *)(v101 + 24) = v100;
      v125 = *(_OWORD *)v120;
      *(_OWORD *)(v101 + 32) = v125;
      v131 = sub_10004E754;
      v132 = v101;
      aBlock = _NSConcreteStackBlock;
      v128 = 1107296256;
      v129 = sub_100048FDC;
      v130 = &unk_100738200;
      v102 = _Block_copy(&aBlock);
      swift_unknownObjectRetain(v125);
      objc_msgSend(v98, "updateAllWithOrder:completionBlock:", isa, v102, swift_release().n128_f64[0]);
      _Block_release(v102);

      return;
    }
    v95 = *(_QWORD *)&v112[8 * v93];
    v96 = (int64_t)v79 + 1;
    if (!v95)
    {
      v96 = (int64_t)v79 + 2;
      if ((uint64_t)v79 + 2 >= v113)
        goto LABEL_42;
      v95 = *(_QWORD *)&v112[8 * v96];
      if (!v95)
      {
        v96 = (int64_t)v79 + 3;
        if ((uint64_t)v79 + 3 >= v113)
          goto LABEL_42;
        v95 = *(_QWORD *)&v112[8 * v96];
        if (!v95)
          break;
      }
    }
LABEL_41:
    v78 = (v95 - 1) & v95;
    v124 = (void (*)(void))v96;
    v83 = __clz(__rbit64(v95)) + (v96 << 6);
LABEL_26:
    v85 = v116;
    (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v116, *((_QWORD *)v84 + 6) + *(_QWORD *)(v80 + 72) * v83, v8);
    v86 = v8;
    v87 = v123;
    (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v123, v85, v86);
    v88 = *((_QWORD *)v120 + 1);
    ObjectType = swift_getObjectType();
    v91 = v118;
    v90 = v119;
    (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v81, v115, v119);
    dispatch thunk of AppStateController.setWaiting(for:installationType:)(v87, v81, ObjectType, v88);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v81, v90);
    v92 = v87;
    v8 = v86;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v92, v86);
    v79 = v124;
  }
  v97 = (char *)v79 + 4;
  if ((uint64_t)v79 + 4 >= v113)
    goto LABEL_42;
  v95 = *(_QWORD *)&v112[8 * (_QWORD)v97];
  if (v95)
  {
    v96 = (int64_t)v79 + 4;
    goto LABEL_41;
  }
  while (1)
  {
    v96 = (int64_t)(v97 + 1);
    if (__OFADD__(v97, 1))
      break;
    if (v96 >= v113)
      goto LABEL_42;
    v95 = *(_QWORD *)&v112[8 * v96];
    ++v97;
    if (v95)
      goto LABEL_41;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_100046DFC(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _OWORD v62[2];

  v59 = a3;
  v56 = a2;
  v4 = sub_10000DAF8(&qword_100809588);
  __chkstk_darwin(v4);
  v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - v7;
  v9 = sub_10000DAF8(&qword_100809590);
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v58 = (uint64_t)&v52 - v13;
  v14 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AdamId(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v52 - v23;
  result = ArcadeAction.productId.getter(v22);
  if (v26)
  {
    v27 = v26;
    v55 = result;
    ArcadeAction.appAdamId.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      swift_bridgeObjectRelease(v27);
      return sub_100010F2C((uint64_t)v16, &qword_100808390);
    }
    else
    {
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v24, v16, v17);
      v29 = ArcadeAction.postSubscribeAction.getter(v28);
      v54 = v3;
      if (v29)
      {
        v30 = v29;
        v31 = swift_allocObject(&unk_100738030, 24, 7);
        v53 = v8;
        v32 = v31;
        swift_weakInit(v31 + 16);
        sub_100018ADC((uint64_t)v56, (uint64_t)v62, &qword_100808F20);
        v33 = (_QWORD *)swift_allocObject(&unk_100738378, 72, 7);
        sub_10002548C((uint64_t)v62, (uint64_t)(v33 + 2), &qword_100808F20);
        v34 = v59;
        v33[6] = v30;
        v33[7] = v34;
        v33[8] = v32;
        v8 = v53;
        v35 = swift_retain(v34);
        ArcadeSubscriptionManager.PaymentCallbacks.init(success:failure:)(sub_10004EAA4, v33, 0, 0, v35);
        v36 = type metadata accessor for ArcadeSubscriptionManager.PaymentCallbacks(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 0, 1, v36);
        v37 = (uint64_t)v11;
        v38 = v58;
        sub_10002548C(v37, v58, &qword_100809590);
      }
      else
      {
        v40 = type metadata accessor for ArcadeSubscriptionManager.PaymentCallbacks(0);
        v38 = v58;
        v39.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v58, 1, 1, v40);
      }
      v41 = type metadata accessor for ArcadeSubscriptionDecorator(0, v39);
      v42 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
      v43 = v42(v8, 1, 1, v41);
      ArcadeAction.subscriptionToken.getter(&v60, v43);
      if (v61)
      {
        sub_10004EA50(&v60, v62);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v24, v17);
        sub_100010D84((uint64_t)v62, (uint64_t)&v60);
        v44 = v59;
        swift_retain(v59);
        v45 = swift_bridgeObjectRetain(v27);
        v46 = v57;
        v56 = v42;
        v47 = v55;
        ArcadeSubscriptionDecorator.init(objectGraph:product:appAdamId:subscriptionToken:)(v44, v55, v27, v20, &v60, v45);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v62);
        sub_100010F2C((uint64_t)v8, &qword_100809588);
        v56(v46, 0, 1, v41);
        v48 = (uint64_t)v46;
        v38 = v58;
        sub_10002548C(v48, (uint64_t)v8, &qword_100809588);
      }
      else
      {
        sub_100010F2C((uint64_t)&v60, &qword_100808F20);
        v44 = v59;
        v47 = v55;
      }
      v49 = type metadata accessor for CommerceDialogHandler(0);
      v50 = type metadata accessor for BaseObjectGraph(0);
      inject<A, B>(_:from:)(v49, v44, v49, v50);
      v51 = *(void **)&v62[0];
      ArcadeSubscriptionManager.purchaseSubscription(product:appAdamId:decorator:callbacks:dialogHandler:)(v47, v27, v24, v8, v38, *(_QWORD *)&v62[0]);
      swift_bridgeObjectRelease(v27);

      sub_100010F2C((uint64_t)v8, &qword_100809588);
      sub_100010F2C(v38, &qword_100809590);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v24, v17);
    }
  }
  return result;
}

uint64_t sub_100047294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  double v33;
  __n128 v34;
  uint64_t v35;
  double v36;
  __n128 v37;
  char v38;
  double v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  _QWORD *v53;
  void (*v54)(_QWORD *, _QWORD, __n128);
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, __n128);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[5];

  v77 = a3;
  v81 = a2;
  v82 = a1;
  v3 = type metadata accessor for ActionRunner.Origin(0);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  __chkstk_darwin(v3);
  v78 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  __chkstk_darwin(v5);
  v73 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_1008095A8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - v15;
  v17 = type metadata accessor for LocalPreferences(0);
  static LocalPreferences.currentApplication.getter(v18);
  type metadata accessor for RateLimitedAction(0);
  static RateLimitedAction.preferencesKey.getter();
  v19 = sub_10000DAF8(&qword_1008095B0);
  Preferences.subscript.getter(v84, v16, v17, v19, &protocol witness table for LocalPreferences);
  v20 = swift_release();
  v21 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
  v21(v16, v7, v20);
  v22 = v84[0];
  v23 = swift_bridgeObjectRelease(v84[0]);
  if (!v22)
  {
    static LocalPreferences.currentApplication.getter(v23);
    static RateLimitedAction.preferencesKey.getter();
    v84[0] = _swiftEmptyDictionarySingleton;
    Preferences.subscript.setter(v84, v16, v17, v19, &protocol witness table for LocalPreferences);
    v23 = swift_release();
  }
  static LocalPreferences.currentApplication.getter(v23);
  static RateLimitedAction.preferencesKey.getter();
  Preferences.subscript.getter(v84, v13, v17, v19, &protocol witness table for LocalPreferences);
  v24 = swift_release();
  v25 = ((uint64_t (*)(char *, uint64_t, __n128))v21)(v13, v7, v24);
  v27 = v84[0];
  if (!v84[0])
    goto LABEL_11;
  v28 = RateLimitedAction.actionKey.getter(v25);
  v30 = v29;
  if (!*(_QWORD *)(v27 + 16) || (v31 = sub_10057E9FC(v28, v29), (v32 & 1) == 0))
  {
    swift_bridgeObjectRelease(v27);
    v26 = swift_bridgeObjectRelease(v30);
LABEL_11:
    v37.n128_f64[0] = RateLimitedAction.rateLimit.getter(v25, v26);
    goto LABEL_12;
  }
  v33 = *(double *)(*(_QWORD *)(v27 + 56) + 8 * v31);
  swift_bridgeObjectRelease(v27);
  v34 = swift_bridgeObjectRelease(v30);
  v37.n128_f64[0] = RateLimitedAction.rateLimit.getter(v35, v34);
  if ((v38 & 1) == 0)
  {
    v39 = v36;
    v40 = v73;
    v41 = Date.init()(*(_QWORD *)&v36);
    v42 = Date.timeIntervalSince1970.getter(v41);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v40, v75);
    v37.n128_f64[0] = v42 - v33;
    if (v42 - v33 > v39)
    {
LABEL_12:
      static LocalPreferences.currentApplication.getter(v37);
      static RateLimitedAction.preferencesKey.getter();
      v52 = (void (*)(_QWORD, _QWORD))Preferences.subscript.modify(v84, v10, v17, v19, &protocol witness table for LocalPreferences);
      v54 = (void (*)(_QWORD *, _QWORD, __n128))v52;
      v55 = *v53;
      v76 = (uint64_t (*)(char *, uint64_t, __n128))v21;
      if (v55)
      {
        v56 = v53;
        v57 = v10;
        v58 = RateLimitedAction.actionKey.getter(v52);
        v60 = v59;
        v61 = v73;
        v62 = Date.init()(v58);
        v63 = Date.timeIntervalSince1970.getter(v62);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v61, v75);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v56);
        v83 = *v56;
        *v56 = 0x8000000000000000;
        sub_1001F9884(v58, v60, isUniquelyReferenced_nonNull_native, v63);
        v65 = *v56;
        *v56 = v83;
        swift_bridgeObjectRelease(v60);
        v66 = swift_bridgeObjectRelease(v65);
        v54(v84, 0, v66);
      }
      else
      {
        v57 = v10;
        v52(v84, 0);
      }
      v46 = v79;
      v45 = v80;
      v47 = v78;
      v67 = v77;
      v68 = swift_release();
      v69 = v76(v57, v7, v68);
      v70 = RateLimitedAction.primaryAction.getter(v69);
      (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v47, enum case for ActionRunner.Origin.userInitiated(_:), v45);
      v48 = v70;
      v49 = v81;
      v50 = (uint64_t)v47;
      v51 = v67;
      goto LABEL_16;
    }
  }
  result = RateLimitedAction.fallbackAction.getter(v37);
  if (!result)
    return result;
  v44 = result;
  v46 = v79;
  v45 = v80;
  v47 = v78;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for ActionRunner.Origin.userInitiated(_:), v80);
  v48 = v44;
  v49 = v81;
  v50 = (uint64_t)v47;
  v51 = v77;
LABEL_16:
  sub_100434620(v48, v49, v50, v51);
  v71 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v47, v45, v71);
}

uint64_t sub_10004775C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (**v6)(_QWORD, _QWORD);
  __n128 v7;
  uint64_t v8;
  id *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v5 = type metadata accessor for ArcadeState(0);
  v6 = *(uint64_t (***)(_QWORD, _QWORD))(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (id *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  ArcadeSubscriptionManager.subscriptionState.getter(v7);
  v10 = ((uint64_t (**)(id *, uint64_t))v6)[11](v9, v5);
  if (v10 == enum case for ArcadeState.notSubscribed(_:))
  {
    v11 = ((uint64_t (**)(id *, uint64_t))v6)[12](v9, v5);
    v12 = ArcadeSubscriptionStateAction.notSubscribedAction.getter(v11);
    v13 = type metadata accessor for ArcadeIntroOfferState(0);
LABEL_7:
    result = (*(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
    goto LABEL_8;
  }
  v14 = v10;
  if (v10 == enum case for ArcadeState.purchasing(_:))
  {
    ((uint64_t (**)(id *, uint64_t))v6)[12](v9, v5);
    v15 = swift_release();
    result = ArcadeSubscriptionStateAction.purchasingAction.getter(v15);
    v12 = result;
    goto LABEL_8;
  }
  if (v10 == enum case for ArcadeState.subscribed(_:))
  {
    ((uint64_t (**)(id *, uint64_t))v6)[12](v9, v5);

    v9 = (id *)((char *)v9 + *(int *)(sub_10000DAF8((uint64_t *)&unk_1008095B8) + 48));
    v12 = ArcadeSubscriptionStateAction.subscribedAction.getter();
    v13 = type metadata accessor for ArcadeTrialEnrolledState(0);
    goto LABEL_7;
  }
  v18 = enum case for ArcadeState.unknown(_:);
  result = ArcadeSubscriptionStateAction.unknownAction.getter();
  v12 = result;
  if (v14 != v18)
    result = ((uint64_t (**)(id *, uint64_t))v6)[1](v9, v5);
LABEL_8:
  if (v12)
  {
    swift_retain(v12);
    sub_1000423D0(v17, a2, a3);
    return swift_release_n(v12, 2);
  }
  return result;
}

void sub_100047940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSURL *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  _BYTE v26[32];

  v24 = a2;
  v5 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)ASCAppLaunchTrampoline), "init");
  AppLaunchTrampolineAction.bundleId.getter(v8);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  v12 = swift_bridgeObjectRelease(v10);
  AppLaunchTrampolineAction.payloadUrl.getter(v12);
  v14 = type metadata accessor for URL(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) != 1)
  {
    URL._bridgeToObjectiveC()(v16);
    v17 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
  }
  v19 = objc_msgSend(v8, "openApplicationWithBundleIdentifier:payloadURL:", v11, v17);

  v20 = swift_allocObject(&unk_100738030, 24, 7);
  swift_weakInit(v20 + 16);
  sub_100018ADC(v24, (uint64_t)v26, &qword_100808F20);
  v21 = (_QWORD *)swift_allocObject(&unk_1007383C8, 72, 7);
  v21[2] = a1;
  v21[3] = v20;
  sub_10002548C((uint64_t)v26, (uint64_t)(v21 + 4), &qword_100808F20);
  v21[8] = a3;
  aBlock[4] = sub_10004EBB0;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004AFAC;
  aBlock[3] = &unk_1007383E0;
  v22 = _Block_copy(aBlock);
  swift_retain(a1);
  swift_retain(a3);
  objc_msgSend(v19, "addErrorBlock:", v22, swift_release().n128_f64[0]);
  _Block_release(v22);

}

uint64_t sub_100047B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  _BYTE v18[32];
  __int128 v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[5];

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_10082A290);
  sub_1000E1E3C((uint64_t)&v19);

  if (!v20)
    return sub_100010F2C((uint64_t)&v19, (uint64_t *)&unk_100809510);
  sub_100010E24(&v19, (uint64_t)v22);
  v8 = type metadata accessor for EventStoreManager();
  v9 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v8, a3, v8, v9);
  v10 = (void *)v19;
  sub_10044C390();
  v11 = swift_allocObject(&unk_100738030, 24, 7);
  swift_weakInit(v11 + 16);
  sub_100018ADC(a2, (uint64_t)v18, &qword_100808F20);
  sub_10000EF80((uint64_t)v22, (uint64_t)&v19);
  v12 = (_QWORD *)swift_allocObject(&unk_100738418, 120, 7);
  v12[2] = a1;
  sub_10002548C((uint64_t)v18, (uint64_t)(v12 + 3), &qword_100808F20);
  v12[7] = a3;
  v12[8] = v11;
  v12[9] = v10;
  sub_100010E24(&v19, (uint64_t)(v12 + 10));
  v13 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  swift_retain(a1);
  swift_retain(a3);
  v14 = v10;
  v16 = static OS_dispatch_queue.main.getter(v15);
  v20 = v13;
  v21 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v19 = v16;
  Promise.then(perform:orCatchError:on:)(sub_10004EC14, v12, sub_10004B214, 0, &v19);

  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v19);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v22);
}

uint64_t sub_100047D5C(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD v37[3];
  uint64_t v38;

  v34 = a6;
  v35 = a3;
  v31 = a5;
  v32 = a4;
  v33 = type metadata accessor for ActionRunner.Origin(0);
  v30 = *(_QWORD *)(v33 - 8);
  v8 = __chkstk_darwin(v33);
  v29 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OSLogger(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a1;
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v14 = sub_10000EFC4(v10, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v16 = type metadata accessor for LogMessage(0);
  v17 = swift_allocObject(v15, ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))+ 6 * *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100640730;
  LogMessage.init(stringLiteral:)(0x6574656C706D6F43, 0xE900000000000064);
  v38 = type metadata accessor for HttpAction(0);
  v37[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v37);
  sub_100010F2C((uint64_t)v37, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x676E697375, 0xE500000000000000);
  v18 = type metadata accessor for Bag(0);
  v38 = v18;
  v19 = sub_1000119C0(v37);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v35, v18);
  static LogMessage.sensitive(_:)(v37);
  sub_100010F2C((uint64_t)v37, &qword_100808F20);
  LogMessage.init(stringLiteral:)(980709223, 0xE400000000000000);
  v38 = sub_100018B6C(0, &qword_100825810, AMSURLResult_ptr);
  v37[0] = v36;
  v20 = v36;
  static LogMessage.sensitive(_:)(v37);
  sub_100010F2C((uint64_t)v37, &qword_100808F20);
  Logger.debug(_:)(v17, v10, &protocol witness table for OSLogger);
  v21 = swift_bridgeObjectRelease(v17);
  v22 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v21);
  result = HttpAction.successAction.getter(v22);
  if (result)
  {
    v24 = result;
    v26 = (uint64_t)v29;
    v25 = v30;
    v27 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, enum case for ActionRunner.Origin.action(_:), v33);
    sub_100434620(v24, v31, v26, v34);
    v28 = swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 8))(v26, v27, v28);
  }
  return result;
}

uint64_t sub_10004807C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[8];
  _QWORD v36[3];
  uint64_t v37;

  v29 = a3;
  v30 = a5;
  v28 = a4;
  v32 = a1;
  v31 = type metadata accessor for ActionRunner.Origin(0);
  v27 = *(_QWORD *)(v31 - 8);
  v6 = __chkstk_darwin(v31);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v13 = sub_10000EFC4(v9, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ 4 * *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100640F90;
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x8000000100687410);
  v37 = type metadata accessor for HttpAction(0);
  v36[0] = a2;
  swift_retain(a2);
  static LogMessage.sensitive(_:)(v36);
  sub_100010F2C((uint64_t)v36, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x3A6E6F73616572, 0xE700000000000000);
  swift_getErrorValue(v32, v35, &v33);
  v18 = v33;
  v17 = v34;
  v37 = v34;
  v19 = sub_1000119C0(v36);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v19, v18, v17);
  static LogMessage.sensitive(_:)(v36);
  sub_100010F2C((uint64_t)v36, &qword_100808F20);
  Logger.error(_:)(v16, v9, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v16);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  result = HttpAction.failureAction.getter(v21);
  if (result)
  {
    v23 = result;
    v24 = v27;
    v25 = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v8, enum case for ActionRunner.Origin.action(_:), v31);
    sub_100434620(v23, v28, (uint64_t)v8, v30);
    v26 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v24 + 8))(v8, v25, v26);
  }
  return result;
}

uint64_t sub_100048338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];

  v8 = sub_10000DAF8(&qword_100809520);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PurchaseIntent(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AdHeaderProvider();
  BaseObjectGraph.optional<A>(_:)(v34, v16, v16);
  if (v34[0])
  {
    swift_retain(v34[0]);
    v17 = sub_10000DAF8(&qword_100809528);
    Box.read<A>(with:)(v34, sub_1002F97D0, 0, v17);
    swift_release();
  }
  swift_unknownObjectRetain(a2);
  v18 = swift_retain(a1);
  PurchaseIntent.init(from:stateMachine:additionalHeaders:presentingSceneIdentifier:)(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_release();
    return sub_100010F2C((uint64_t)v11, &qword_100809520);
  }
  else
  {
    v33 = a4;
    v20.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    OfferAction.bundleId.getter(v20);
    if (v21
      && (v22 = v21,
          v23 = String._bridgeToObjectiveC()(),
          v24 = objc_msgSend((id)objc_opt_self(LSApplicationProxy), "applicationProxyForSystemPlaceholder:", v23), v24, v23, swift_bridgeObjectRelease(v22), v24))
    {
      sub_10004B450(a1, a2, a3);
      v25 = swift_release();
    }
    else
    {
      dispatch thunk of Commerce.purchase(with:stateMachine:)(v15, a2, a3);
      v26 = swift_allocObject(&unk_100738030, 24, 7);
      swift_weakInit(v26 + 16);
      v27 = (_QWORD *)swift_allocObject(&unk_100738058, 40, 7);
      v27[2] = a1;
      v27[3] = v26;
      v28 = v33;
      v27[4] = v33;
      v29 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
      swift_retain(a1);
      v30 = swift_retain(v28);
      v31 = static OS_dispatch_queue.main.getter(v30);
      v34[3] = v29;
      v34[4] = &protocol witness table for OS_dispatch_queue;
      v34[0] = v31;
      Promise.then(perform:orCatchError:on:)(sub_10004E4EC, v27, sub_10004BCF4, 0, v34);
      swift_release();
      swift_release();
      swift_release();
      _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v34);
    }
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v25);
  }
}

uint64_t sub_100048650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v18 = a3;
  v19 = a4;
  v17 = a1;
  v6 = type metadata accessor for OSLogger(0, a5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v10 = sub_10000EFC4(v6, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v12 = type metadata accessor for LogMessage(0);
  v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ 5 * *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100642200;
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100687640);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100687620);
  v16 = v7;
  v22 = &type metadata for String;
  v20 = v17;
  v21 = a2;
  swift_bridgeObjectRetain(a2);
  static LogMessage.traceableSensitive(_:)(&v20);
  sub_100010F2C((uint64_t)&v20, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x6D61644120504169, 0xEB000000003A4449);
  v22 = &type metadata for String;
  v20 = v18;
  v21 = v19;
  swift_bridgeObjectRetain(v19);
  static LogMessage.traceableSensitive(_:)(&v20);
  sub_100010F2C((uint64_t)&v20, &qword_100808F20);
  Logger.debug(_:)(v13, v6, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v9, v6, v14);
}

void sub_100048888(char a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  char *v58;
  void (*v59)(uint64_t, char *, uint64_t);
  uint64_t v60;
  uint64_t ObjectType;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  int64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  int64_t v87;
  unint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _QWORD *v105;

  v102 = a6;
  v103 = a7;
  v100 = a4;
  v101 = a2;
  v9 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v9);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdamId(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v94 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v95 = (char *)&v90 - v16;
  __chkstk_darwin(v17);
  v99 = (char *)&v90 - v18;
  __chkstk_darwin(v19);
  v98 = (uint64_t)&v90 - v20;
  v96 = v21;
  __chkstk_darwin(v22);
  v93 = (char *)&v90 - v23;
  v105 = &_swiftEmptySetSingleton;
  v91 = (uint64_t)a5;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v101 >> 62)
      goto LABEL_24;
    v24 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v101);
    for (; v24; v24 = _CocoaArrayWrapper.endIndex.getter(v47))
    {
      v25 = v101 & 0xC000000000000001;
      v26 = 4;
      v92 = (char *)v24;
      v97 = v101 & 0xC000000000000001;
      while (1)
      {
        v27 = v25
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26 - 4, v101)
            : *(id *)(v101 + 8 * v26);
        v28 = v27;
        v29 = v26 - 3;
        if (__OFADD__(v26 - 4, 1))
          break;
        if (objc_msgSend(v27, "status") == (id)1)
        {
          v30 = objc_msgSend(v28, "bundleID");
          if (!v30)
            goto LABEL_77;
          v31 = v30;
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
          v34 = v33;

          if (*(_QWORD *)(v100 + 16) && (v35 = sub_10057E9FC(v32, v34), (v36 & 1) != 0))
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v100 + 56) + *(_QWORD *)(v13 + 72) * v35, v12);
            v37 = 0;
          }
          else
          {
            v37 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v37, 1, v12);
          v38 = swift_bridgeObjectRelease(v34);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v38) == 1)
          {

            sub_100010F2C((uint64_t)v11, &qword_100808390);
          }
          else
          {
            v39 = v93;
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v93, v11, v12);
            v40 = v11;
            v41 = v99;
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v99, v39, v12);
            v42 = v98;
            v43 = (uint64_t)v41;
            v11 = v40;
            sub_100138E2C(v98, v43);

            v44 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
            v44(v42, v12);
            v45 = v39;
            v24 = (uint64_t)v92;
            v44((uint64_t)v45, v12);
          }
          v25 = v97;
        }
        else
        {

        }
        ++v26;
        if (v29 == v24)
        {
          swift_bridgeObjectRelease(v101);
          v46 = v105;
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_24:
      if (v101 < 0)
        v47 = v101;
      else
        v47 = v101 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v101);
    }
    swift_bridgeObjectRelease(v101);
    v46 = &_swiftEmptySetSingleton;
  }
  else
  {
    v105 = a5;
    swift_bridgeObjectRetain(a5);
  }
LABEL_29:
  v48 = v46[7];
  v92 = (char *)(v46 + 7);
  v49 = 1 << *((_BYTE *)v46 + 32);
  v50 = -1;
  if (v49 < 64)
    v50 = ~(-1 << v49);
  v51 = v50 & v48;
  v93 = (char *)((unint64_t)(v49 + 63) >> 6);
  v97 = (unint64_t)v46;
  swift_bridgeObjectRetain(v46);
  v52 = 0;
  v53 = v98;
  v54 = v103;
  while (1)
  {
    if (v51)
    {
      v100 = (v51 - 1) & v51;
      v101 = v52;
      v55 = __clz(__rbit64(v51)) | (v52 << 6);
      v56 = v97;
      goto LABEL_33;
    }
    v70 = v52 + 1;
    v56 = v97;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    if (v70 >= (uint64_t)v93)
      goto LABEL_49;
    v71 = *(_QWORD *)&v92[8 * v70];
    v72 = v52 + 1;
    if (!v71)
    {
      v72 = v52 + 2;
      if (v52 + 2 >= (uint64_t)v93)
        goto LABEL_49;
      v71 = *(_QWORD *)&v92[8 * v72];
      if (!v71)
      {
        v72 = v52 + 3;
        if (v52 + 3 >= (uint64_t)v93)
          goto LABEL_49;
        v71 = *(_QWORD *)&v92[8 * v72];
        if (!v71)
          break;
      }
    }
LABEL_48:
    v100 = (v71 - 1) & v71;
    v101 = v72;
    v55 = __clz(__rbit64(v71)) + (v72 << 6);
LABEL_33:
    v57 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    v58 = v95;
    v57(v95, *(_QWORD *)(v56 + 48) + *(_QWORD *)(v13 + 72) * v55, v12);
    v59 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v59(v53, v58, v12);
    v60 = v102;
    ObjectType = swift_getObjectType();
    v62 = v13;
    v63 = v12;
    v64 = v99;
    v57(v99, v53, v63);
    v65 = *(unsigned __int8 *)(v62 + 80);
    v66 = (v65 + 32) & ~v65;
    v67 = swift_allocObject(&unk_100738238, v66 + v96, v65 | 7);
    *(_QWORD *)(v67 + 16) = v60;
    *(_QWORD *)(v67 + 24) = v54;
    v68 = v64;
    v12 = v63;
    v13 = v62;
    v59(v67 + v66, v68, v12);
    swift_unknownObjectRetain(v60);
    dispatch thunk of AppStateController.refreshDataSources(for:completion:)(v53, sub_10004E540, v67, ObjectType, v54);
    v69 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v53, v12, v69);
    v51 = v100;
    v52 = v101;
  }
  v73 = v52 + 4;
  if (v52 + 4 < (uint64_t)v93)
  {
    v71 = *(_QWORD *)&v92[8 * v73];
    if (!v71)
    {
      while (1)
      {
        v72 = v73 + 1;
        if (__OFADD__(v73, 1))
          break;
        if (v72 >= (uint64_t)v93)
          goto LABEL_49;
        v71 = *(_QWORD *)&v92[8 * v72];
        ++v73;
        if (v71)
          goto LABEL_48;
      }
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    v72 = v52 + 4;
    goto LABEL_48;
  }
LABEL_49:
  swift_release();
  v74 = (uint64_t)v105;
  v75 = v91;
  if (v105[2] <= *(_QWORD *)(v91 + 16) >> 3)
  {
    v104 = (_BYTE *)v91;
    swift_bridgeObjectRetain(v91);
    sub_10004CC8C(v74);
    swift_bridgeObjectRelease(v74);
    v76 = v104;
  }
  else
  {
    swift_bridgeObjectRetain(v91);
    v76 = sub_10004CEF0(v74, v75);
    swift_bridgeObjectRelease(v74);
  }
  v77 = 0;
  v78 = v76 + 56;
  v79 = 1 << v76[32];
  v80 = -1;
  if (v79 < 64)
    v80 = ~(-1 << v79);
  v81 = v80 & *((_QWORD *)v76 + 7);
  v82 = (unint64_t)(v79 + 63) >> 6;
  v83 = v94;
  while (2)
  {
    if (v81)
    {
      v84 = __clz(__rbit64(v81));
      v81 &= v81 - 1;
      v85 = v84 | (v77 << 6);
LABEL_56:
      (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v83, *((_QWORD *)v76 + 6) + *(_QWORD *)(v13 + 72) * v85, v12);
      v86 = swift_getObjectType();
      AppStateController.clearWaiting(for:)(v83, v86, v103);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v83, v12);
      continue;
    }
    break;
  }
  v87 = v77 + 1;
  if (__OFADD__(v77, 1))
    goto LABEL_74;
  if (v87 >= v82)
  {
LABEL_72:
    swift_release();
    return;
  }
  v88 = *(_QWORD *)&v78[8 * v87];
  ++v77;
  if (v88)
    goto LABEL_71;
  v77 = v87 + 1;
  if (v87 + 1 >= v82)
    goto LABEL_72;
  v88 = *(_QWORD *)&v78[8 * v77];
  if (v88)
    goto LABEL_71;
  v77 = v87 + 2;
  if (v87 + 2 >= v82)
    goto LABEL_72;
  v88 = *(_QWORD *)&v78[8 * v77];
  if (v88)
  {
LABEL_71:
    v81 = (v88 - 1) & v88;
    v85 = __clz(__rbit64(v88)) + (v77 << 6);
    goto LABEL_56;
  }
  v89 = v87 + 3;
  if (v89 >= v82)
    goto LABEL_72;
  v88 = *(_QWORD *)&v78[8 * v89];
  if (v88)
  {
    v77 = v89;
    goto LABEL_71;
  }
  while (1)
  {
    v77 = v89 + 1;
    if (__OFADD__(v89, 1))
      break;
    if (v77 >= v82)
      goto LABEL_72;
    v88 = *(_QWORD *)&v78[8 * v77];
    ++v89;
    if (v88)
      goto LABEL_71;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
}

void sub_100048FDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, void *);
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v9 = sub_100018B6C(0, &qword_100809558, ASDJobResult_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  swift_retain(v7);
  v11 = a4;
  v8(a2, v10, a4);
  swift_release();
  swift_bridgeObjectRelease(v10);

}

void sub_10004907C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  __n128 v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  double *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  double *v45;
  char *v46;
  uint64_t v47;
  uint64_t updated;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _OWORD v62[2];

  v53 = a3;
  v54 = a2;
  v4 = sub_10000DAF8(&qword_100809568);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  __chkstk_darwin(v4);
  v61 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetrics(0, v6);
  __chkstk_darwin(v7);
  v52 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AdamId(0);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UpdatesSorter.Ordering(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v62[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v17 = _CocoaArrayWrapper.endIndex.getter(v27);
    v60 = v12;
    if (v17)
      goto LABEL_3;
LABEL_20:
    v25 = swift_bridgeObjectRelease(a1);
    v26 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  v60 = v12;
  if (!v17)
    goto LABEL_20;
LABEL_3:
  if (v17 < 1)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }
  v51 = v16;
  v55 = v14;
  for (i = 0; i != v17; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v21 = *(id *)(a1 + 8 * i + 32);
    v22 = v21;
    v23 = (unint64_t)objc_msgSend(v21, "updateState");
    if (v23 > 4 || ((1 << v23) & 0x19) == 0)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v19 = *(_QWORD *)(*(_QWORD *)&v62[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v22);
      specialized ContiguousArray._endMutation()(v20);
    }
  }
  v25 = swift_bridgeObjectRelease(a1);
  v26 = *(double **)&v62[0];
  v14 = v55;
  v16 = v51;
LABEL_21:
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, enum case for UpdatesSorter.Ordering.pendingUpdates(_:), v13, v25);
  v28 = static UpdatesSorter.sorted(updates:ordering:)(v26, v16);
  v29 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v29);
  if ((unint64_t)v28 >> 62)
    goto LABEL_37;
  v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v31 = _swiftEmptyArrayStorage;
    if (!v30)
      break;
    v55 = v28 & 0xC000000000000001;
    v32 = 4;
    while (1)
    {
      v33 = v55
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v28)
          : *(id *)(v28 + 8 * v32);
      v34 = v33;
      v35 = v32 - 3;
      if (__OFADD__(v32 - 4, 1))
        break;
      v36 = v28;
      AdamId.init(value:)(objc_msgSend(v33, "storeItemIdentifier"));
      v37 = objc_msgSend(v34, "bundleIdentifier");
      if (!v37)
        goto LABEL_42;
      v38 = v37;
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v41 = v40;

      v42 = (uint64_t *)(v61 + *(int *)(v59 + 48));
      (*(void (**)(void))(v56 + 32))();
      *v42 = v39;
      v42[1] = v41;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
        v31 = (double *)sub_1003DB0BC(0, *((_QWORD *)v31 + 2) + 1, 1, (unint64_t)v31);
      v44 = *((_QWORD *)v31 + 2);
      v43 = *((_QWORD *)v31 + 3);
      v28 = v36;
      if (v44 >= v43 >> 1)
        v31 = (double *)sub_1003DB0BC(v43 > 1, v44 + 1, 1, (unint64_t)v31);
      *((_QWORD *)v31 + 2) = v44 + 1;
      sub_10002548C(v61, (uint64_t)v31+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v44, &qword_100809568);

      ++v32;
      if (v35 == v30)
        goto LABEL_35;
    }
    __break(1u);
LABEL_37:
    if (v28 < 0)
      v49 = v28;
    else
      v49 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    v30 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v28);
  }
LABEL_35:
  swift_bridgeObjectRelease(v28);
  v45 = sub_1003AF0DC((uint64_t)v31);
  swift_bridgeObjectRelease(v31);
  v46 = v52;
  static ActionMetrics.notInstrumented.getter(v47);
  updated = type metadata accessor for UpdateAllAction(0);
  swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
  UpdateAllAction.init(ordering:actionMetrics:)(v45, v46);
  memset(v62, 0, sizeof(v62));
  sub_100046458();
  swift_release();
  sub_100010F2C((uint64_t)v62, &qword_100808F20);
}

void sub_100049538(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t ObjectType;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  double v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD aBlock[6];
  _BYTE v90[40];

  v5 = v4;
  v85 = a3;
  v83 = a2;
  v8 = type metadata accessor for OSSignpostID(0);
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  __chkstk_darwin(v8);
  v86 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v74 - v11;
  v13 = type metadata accessor for AdamId(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v74 - v19;
  v21 = OpenAppAction.adamId.getter(v18);
  v22 = (void *)AdamId.numberValue.getter(v21);
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v20, v13);
  if (v22)
  {
    v82 = a4;
    v79 = v4;
    v25 = a1;
    v26 = *(_QWORD *)(v5 + qword_100864950 + 8);
    v27 = v12;
    ObjectType = swift_getObjectType();
    v81 = v25;
    OpenAppAction.adamId.getter(v29);
    v30 = ObjectType;
    v31 = (uint64_t)v27;
    v32 = dispatch thunk of AppStateController.stateMachine(forApp:)(v16, v30, v26);
    v34 = v33;
    v23(v16, v13);
    v35 = swift_getObjectType();
    v80 = v32;
    v36 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter(v35, v34);
    v37 = v36 & v83;
    if ((v36 & v83 & 1) != 0)
      v38 = "RootActionRunner[ASDAppQuery.BetaApps]:handleOpenAppAction";
    else
      v38 = "RootActionRunner[ASDAppQuery]:handleOpenAppAction";
    if ((v37 & 1) != 0)
      v39 = 58;
    else
      v39 = 49;
    type metadata accessor for SignpostAggregator(0);
    v40 = static SignpostAggregator.log.getter();
    v41 = OSSignpostID.init(log:)(v40);
    v42 = static os_signpost_type_t.begin.getter(v41);
    v43 = (void *)static SignpostAggregator.log.getter();
    v78 = v38;
    v77 = v39;
    os_signpost(_:dso:log:name:signpostID:)(v42, &_mh_execute_header, v43, v38, v39, 2, v31);

    v44 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v45 = swift_allocObject(v44, 40, 7);
    *(_OWORD *)(v45 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v45 + 32) = v22;
    v83 = v37;
    aBlock[0] = v45;
    specialized Array._endMutation()(v45);
    v46 = aBlock[0];
    if ((v37 & 1) != 0)
      v47 = &selRef_queryForBetaAppsWithStoreItemIDs_;
    else
      v47 = &selRef_queryForStoreItemIDs_;
    sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    v75 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v46);
    v76 = objc_msgSend((id)objc_opt_self(ASDAppQuery), *v47, isa);

    v74 = swift_allocObject(&unk_100738030, 24, 7);
    swift_weakInit(v74 + 16);
    v53 = v87;
    v54 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v31, v88);
    sub_100018ADC(v85, (uint64_t)v90, &qword_100808F20);
    v55 = *(unsigned __int8 *)(v53 + 80);
    v56 = (v55 + 33) & ~v55;
    v57 = v56 + v84;
    v58 = (v56 + v84) & 0xFFFFFFFFFFFFFFF8;
    v59 = (v58 + 23) & 0xFFFFFFFFFFFFFFF8;
    v60 = (v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    v61 = (v60 + 39) & 0xFFFFFFFFFFFFFFF8;
    v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
    v63 = swift_allocObject(&unk_100738260, v62 + 8, v55 | 7);
    v85 = v31;
    v64 = v63;
    v65 = v58 + v63;
    v66 = v77;
    *(_QWORD *)(v63 + 16) = v78;
    *(_QWORD *)(v63 + 24) = v66;
    *(_BYTE *)(v63 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v63 + v56, v86, v54);
    *(_BYTE *)(v64 + v57) = v83 & 1;
    *(_QWORD *)(v65 + 8) = v74;
    v67 = v81;
    *(_QWORD *)(v64 + v59) = v81;
    sub_10002548C((uint64_t)v90, v64 + v60, &qword_100808F20);
    v68 = v82;
    *(_QWORD *)(v64 + v61) = v82;
    v69 = v75;
    *(_QWORD *)(v64 + v62) = v75;
    aBlock[4] = sub_10004E900;
    aBlock[5] = v64;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A7B0;
    aBlock[3] = &unk_100738278;
    v70 = _Block_copy(aBlock);
    v71 = v69;
    swift_retain(v67);
    swift_retain(v68);
    *(_QWORD *)&v72 = swift_release().n128_u64[0];
    v73 = v76;
    objc_msgSend(v76, "executeQueryWithResultHandler:", v70, v72);
    _Block_release(v70);

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v85, v88);
  }
  else
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v48 = type metadata accessor for OSLogger(0, v24);
    sub_10000EFC4(v48, (uint64_t)qword_10086AB38);
    v49 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v50 = type metadata accessor for LogMessage(0);
    v51 = swift_allocObject(v49, ((*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v50 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) | 7);
    *(_OWORD *)(v51 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000036, 0x80000001006876C0);
    Logger.error(_:)(v51, v48, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v51);
  }
}

void sub_100049AD4(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  void **v33;
  uint64_t v34;
  void **v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void *v41;
  void *v42;
  void *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void **v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void **v61;
  void **aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  void *v65;
  void (*v66)(uint64_t);
  _QWORD *v67;
  char v68[32];

  v60 = a8;
  v61 = a13;
  v58 = a12;
  v59 = a10;
  v19 = type metadata accessor for OSLogger(0, a2);
  v55 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v54 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for OpenableDestination(0);
  v56 = *(_QWORD *)(v21 - 8);
  v57 = v21;
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a9 + 16;
  v26 = static os_signpost_type_t.end.getter(v22);
  type metadata accessor for SignpostAggregator(0);
  v27 = (void *)static SignpostAggregator.log.getter();
  os_signpost(_:dso:log:name:signpostID:)(v26, &_mh_execute_header, v27, a4, a5, a6, a7);

  if (!a1)
  {
LABEL_18:
    if ((v60 & 1) != 0)
    {
      swift_beginAccess(v25, &aBlock, 0, 0);
      if (swift_weakLoadStrong(v25))
      {
        sub_100049538(v59, 0, a11, v58);
        swift_release();
      }
      return;
    }
    if (qword_100806968 == -1)
    {
LABEL_22:
      v46 = sub_10000EFC4(v19, (uint64_t)qword_10086AB38);
      v48 = v54;
      v47 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v46, v19);
      v49 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v50 = type metadata accessor for LogMessage(0);
      v51 = swift_allocObject(v49, ((*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v50 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) | 7);
      *(_OWORD *)(v51 + 16) = xmmword_1006405F0;
      LogMessage.init(stringLiteral:)(0xD000000000000016, 0x8000000100687780);
      v65 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
      aBlock = v61;
      v52 = v61;
      static LogMessage.traceableSensitive(_:)(&aBlock);
      sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
      LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001006875A0);
      Logger.error(_:)(v51, v19, &protocol witness table for OSLogger);
      v53 = swift_bridgeObjectRelease(v51);
      (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v48, v19, v53);
      return;
    }
LABEL_26:
    swift_once(&qword_100806968, sub_10050332C);
    goto LABEL_22;
  }
  if (!((unint64_t)a1 >> 62))
  {
    v28 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v28)
      goto LABEL_4;
    goto LABEL_17;
  }
  if (a1 >= 0)
    v45 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v45 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v45))
  {
LABEL_17:
    swift_bridgeObjectRelease(a1);
    goto LABEL_18;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_26;
  }
  v29 = *(id *)(a1 + 32);
LABEL_7:
  v30 = v29;
  swift_bridgeObjectRelease(a1);
  v31 = swift_allocObject(&unk_100738030, 24, 7);
  swift_beginAccess(v25, v68, 0, 0);
  swift_weakLoadStrong(v25);
  swift_weakInit(v31 + 16);
  swift_release();
  v32 = (_QWORD *)swift_allocObject(&unk_1007382B0, 40, 7);
  v33 = v61;
  v32[2] = v61;
  v32[3] = v31;
  v34 = v58;
  v32[4] = v58;
  v35 = v33;
  swift_retain(v34);
  v37 = OpenAppAction.destination.getter(v36);
  v39 = v56;
  v38 = v57;
  v40 = (*(uint64_t (**)(char *, uint64_t, double))(v56 + 88))(v24, v57, v37);
  if (v40 == enum case for OpenableDestination.app(_:))
  {
    v41 = (void *)objc_opt_self(ASDAppLibrary);
    v66 = sub_10004E9E4;
    v67 = v32;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_10004A774;
    v65 = &unk_1007382F0;
    v42 = _Block_copy(&aBlock);
    swift_retain(v32);
    objc_msgSend(v41, "launchApp:withResultHandler:", v30, v42, swift_release().n128_f64[0]);
LABEL_11:

    swift_release();
    _Block_release(v42);
    return;
  }
  if (v40 == enum case for OpenableDestination.messages(_:))
  {
    v43 = (void *)objc_opt_self(ASDAppLibrary);
    v66 = sub_10004E9E4;
    v67 = v32;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_10004A774;
    v65 = &unk_1007382C8;
    v42 = _Block_copy(&aBlock);
    swift_retain(v32);
    objc_msgSend(v43, "launchMessagesExtensionForApp:withResultHandler:", v30, v42, swift_release().n128_f64[0]);
    goto LABEL_11;
  }

  v44 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v24, v38, v44);
}

void sub_10004A028(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  __n128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[3];
  void *v47;
  uint64_t (*v48)();
  uint64_t v49;

  v43 = a3;
  v44 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0, v8);
  v45 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSLogger(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v35 = sub_10000EFC4(v15, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v35, v15);
    v36 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v37 = type metadata accessor for LogMessage(0);
    v38 = swift_allocObject(v36, ((*(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80) | 7);
    *(_OWORD *)(v38 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000013, 0x80000001006877A0);
    v47 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    aBlock[0] = a2;
    v39 = a2;
    static LogMessage.traceableSensitive(_:)(aBlock);
    sub_100010F2C((uint64_t)aBlock, &qword_100808F20);
    Logger.error(_:)(v38, v15, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else if (a1 == 1)
  {
    v41 = v11;
    v42 = v7;
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v19 = sub_10000EFC4(v15, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
    v20 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v21 = type metadata accessor for LogMessage(0);
    v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
    *(_OWORD *)(v22 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000017, 0x80000001006877C0);
    v47 = (void *)sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    aBlock[0] = a2;
    v23 = a2;
    static LogMessage.traceableSensitive(_:)(aBlock);
    sub_100010F2C((uint64_t)aBlock, &qword_100808F20);
    Logger.error(_:)(v22, v15, &protocol witness table for OSLogger);
    v24 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v24);
    sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
    v26 = (void *)static OS_dispatch_queue.main.getter(v25);
    v27 = swift_allocObject(&unk_100738328, 32, 7);
    v29 = v43;
    v28 = v44;
    *(_QWORD *)(v27 + 16) = v43;
    *(_QWORD *)(v27 + 24) = v28;
    v48 = sub_10004E9FC;
    v49 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000924A0;
    v47 = &unk_100738340;
    v30 = _Block_copy(aBlock);
    swift_retain(v29);
    swift_retain(v28);
    v31 = swift_release();
    static DispatchQoS.unspecified.getter(v31);
    aBlock[0] = _swiftEmptyArrayStorage;
    v32 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
    v34 = sub_10004EA04();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v34, v6, v32);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v6);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v41);
  }
}

uint64_t sub_10004A4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  char v34[24];

  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AlertActionStyle(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0, v13);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v34, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v18 = result;
    v19._object = (void *)0x80000001006877E0;
    v31 = v4;
    v19._countAndFlagsBits = 0xD000000000000021;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v21 = localizedString(_:comment:)(v19, v20);
    v30 = v5;
    v32 = a2;
    v22._countAndFlagsBits = 0xD000000000000023;
    v22._object = (void *)0x8000000100687810;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v24 = localizedString(_:comment:)(v22, v23);
    static ActionMetrics.notInstrumented.getter(v24._countAndFlagsBits);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for AlertActionStyle.normal(_:), v9);
    v25 = type metadata accessor for AlertAction(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = AlertAction.init(title:message:isCancelable:cancelTitle:cancelAction:buttonActions:destructiveActionIndex:style:artwork:toastDuration:presentationStyle:actionMetrics:)(v21._countAndFlagsBits, v21._object, v24._countAndFlagsBits, v24._object, 1, 0, 0, 0, _swiftEmptyArrayStorage, 0, 1, v12, 0, 0, 1, 0, v16);
    v33[3] = type metadata accessor for RootActionRunner(0);
    v33[0] = v18;
    v28 = v30;
    v27 = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v31);
    swift_retain(v18);
    sub_100434620(v26, (uint64_t)v33, (uint64_t)v8, v32);
    swift_release();
    v29 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v8, v27, v29);
    return sub_100010F2C((uint64_t)v33, &qword_100808F20);
  }
  return result;
}

uint64_t sub_10004A774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

double sub_10004A7B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100018B6C(0, &qword_100809548, ASDApp_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release();

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_10004A83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  double result;
  void *v11;
  _BYTE v12[24];
  uint64_t v13;

  sub_100018ADC(a1, (uint64_t)v12, &qword_100808F20);
  if (v13)
  {
    v8 = sub_100018B6C(0, (unint64_t *)&qword_100809598, UIResponder_ptr);
    if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v11;
      if (UIResponder.nearestActionRunner.getter())
      {
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a2, a1, a3);

        goto LABEL_9;
      }

    }
  }
  else
  {
    sub_100010F2C((uint64_t)v12, &qword_100808F20);
  }
  swift_beginAccess(a4 + 16, v12, 0, 0);
  if (!swift_weakLoadStrong(a4 + 16))
    return result;
  sub_1000423D0(a2, a1, a3);
LABEL_9:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10004A954(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  Swift::String v19;
  __n128 v20;
  _QWORD v22[4];

  v3 = type metadata accessor for LogMessage.StringInterpolation(0, a2);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSLogger(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v11 = sub_10000EFC4(v7, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
  v15._object = (void *)0x8000000100687860;
  v15._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v16 = type metadata accessor for PreorderStatus(0);
  v22[3] = v16;
  v17 = sub_1000119C0(v22);
  v18.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v17, a1, v16);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v22, v18);
  sub_100010F2C((uint64_t)v22, &qword_100808F20);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  LogMessage.init(stringInterpolation:)(v6);
  Logger.info(_:)(v14, v7, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v20);
}

uint64_t sub_10004AB50(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  Swift::String v24;
  __n128 v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[8];
  _QWORD v32[4];

  v7 = type metadata accessor for LogMessage.StringInterpolation(0, a4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v15 = sub_10000EFC4(v11, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100640720;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1);
  v19._object = (void *)0x8000000100687840;
  v19._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  swift_getErrorValue(a1, v31, &v29);
  v20 = v29;
  v21 = v30;
  v32[3] = v30;
  v22 = sub_1000119C0(v32);
  v23.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, v20, v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v32, v23);
  sub_100010F2C((uint64_t)v32, &qword_100808F20);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v10);
  Logger.error(_:)(v18, v11, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
  v26 = *(_QWORD *)(a2 + qword_100864950 + 8);
  ObjectType = swift_getObjectType();
  return AppStateController.clearWaiting(for:)(a3, ObjectType, v26);
}

double sub_10004AD8C(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[8];
  _QWORD v30[4];

  v26 = a6;
  v9 = type metadata accessor for OSLogger(0, a2);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v13 = sub_10000EFC4(v9, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ 2 * *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100687880);
  swift_getErrorValue(a1, v29, &v27);
  v17 = v27;
  v18 = v28;
  v30[3] = v28;
  v19 = sub_1000119C0(v30);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
  static LogMessage.sensitive(_:)(v30);
  sub_100010F2C((uint64_t)v30, &qword_100808F20);
  Logger.error(_:)(v16, v9, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v16);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  v22 = AppLaunchTrampolineAction.fallbackAction.getter(v21);
  if (v22)
  {
    v24 = v22;
    swift_beginAccess(a4 + 16, v30, 0, 0);
    if (swift_weakLoadStrong(a4 + 16))
    {
      sub_1000423D0(v24, a5, v26);
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10004AFAC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

double sub_10004AFFC(_BYTE *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t CalendarEvent;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _BYTE v20[24];
  uint64_t v21;

  if (*a1 != 1)
  {
    CalendarEvent = CreateCalendarEventAction.notAuthorizedAction.getter(a2);
    if (!CalendarEvent)
      return result;
    v16 = CalendarEvent;
    sub_100018ADC(a4, (uint64_t)v20, &qword_100808F20);
    if (v21)
    {
      v17 = sub_100018B6C(0, (unint64_t *)&qword_100809598, UIResponder_ptr);
      if ((swift_dynamicCast(&v19, v20, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
      {
        v18 = v19;
        if (UIResponder.nearestActionRunner.getter())
        {
          dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(v16, a4, a5);

          goto LABEL_14;
        }

      }
    }
    else
    {
      sub_100010F2C((uint64_t)v20, &qword_100808F20);
    }
    swift_beginAccess(a6 + 16, v20, 0, 0);
    if (!swift_weakLoadStrong(a6 + 16))
    {
LABEL_15:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
    sub_1000423D0(v16, a4, a5);
LABEL_14:
    swift_release();
    goto LABEL_15;
  }
  if (qword_100805D28 != -1)
    swift_once(&qword_100805D28, sub_10044C4D0);
  v6 = qword_100824180;
  v7 = unk_100824188;
  sub_100010F08(qword_100824168, qword_100824180);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v9 = type metadata accessor for LogMessage(0);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100640720;
  LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x80000001006878F0);
  Logger.error(_:)(v10, v6, v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_10004B214(uint64_t a1, __n128 a2)
{
  return sub_10004BD10(a1, 0xD00000000000003ALL, 0x80000001006878B0, a2);
}

uint64_t sub_10004B230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  _BYTE v26[8];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0, v6);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_weakInit(v26);
  swift_weakDestroy(v14);
  v15 = swift_allocObject(&unk_100738440, 32, 7);
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_10004EC70;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100738458;
  v16 = _Block_copy(aBlock);
  swift_retain(a3);
  swift_errorRetain(a1);
  v17 = swift_release();
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10000E720((unint64_t *)&qword_100809570, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v20 = sub_10004EA04();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

void sub_10004B450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t ObjectType;
  int v28;
  __n128 v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  __n128 v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  double v47;
  id v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD aBlock[7];

  v4 = v3;
  v56 = a2;
  *(_QWORD *)&v57 = a3;
  v6 = type metadata accessor for LegacyAppState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for InstallationType(0);
  v59 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v60 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for AdamId(0);
  v11 = *(_QWORD *)(v58 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v58);
  v54 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v49 - v15;
  OfferAction.bundleId.getter(v14);
  if (v17)
  {
    v18 = v17;
    v52 = a1;
    v53 = v4;
    swift_bridgeObjectRetain(v17);
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend((id)objc_opt_self(LSApplicationProxy), "applicationProxyForSystemPlaceholder:", v19);

    swift_bridgeObjectRelease(v18);
    if (v20)
    {
      v21 = objc_allocWithZone((Class)ASDSystemAppRequest);
      v22 = String._bridgeToObjectiveC()();
      v23 = objc_msgSend(v21, "initWithBundleID:", v22, swift_bridgeObjectRelease(v18).n128_f64[0]);

      v25 = OfferAction.adamId.getter(v24);
      v26 = (void *)AdamId.numberValue.getter(v25);
      v50 = *(void (**)(char *, uint64_t))(v11 + 8);
      v50(v16, v58);
      objc_msgSend(v23, "setStoreItemID:", v26);

      v51 = v23;
      objc_msgSend(v23, "setUserInitiated:", 1);
      ObjectType = swift_getObjectType();
      dispatch thunk of AppStateMachine.currentState.getter(ObjectType, v57);
      v28 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      v49 = v11;
      if (v28 == enum case for LegacyAppState.downloadable(_:))
      {
        (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
        v29 = swift_bridgeObjectRelease(*((_QWORD *)v9 + 1));
        (*(void (**)(char *, _QWORD, uint64_t, __n128))(v59 + 104))(v60, enum case for InstallationType.redownload(_:), v55, v29);
        v30 = v53;
      }
      else
      {
        v31 = *(void (**)(char *, _QWORD, uint64_t))(v59 + 104);
        v30 = v53;
        if (v28 == enum case for LegacyAppState.buyable(_:) || v28 == enum case for LegacyAppState.unknown(_:))
        {
          v31(v60, enum case for InstallationType.purchase(_:), v55);
        }
        else
        {
          v31(v60, enum case for InstallationType.unknown(_:), v55);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
      }
      if (dispatch thunk of AppStateMachine.appStateController.getter(ObjectType, v57))
      {
        v33 = v32;
      }
      else
      {
        v33 = *(_QWORD *)(v30 + qword_100864950 + 8);
        swift_unknownObjectRetain(*(_QWORD *)(v30 + qword_100864950));
      }
      v34 = v30;
      v35 = swift_getObjectType();
      OfferAction.adamId.getter(v36);
      dispatch thunk of AppStateController.setWaiting(for:installationType:)(v16, v60, v35, v33);
      v37 = v58;
      v38 = v50;
      v39.n128_f64[0] = ((double (*)(char *, uint64_t))v50)(v16, v58);
      OfferAction.adamId.getter(v39);
      v40 = v49;
      v41 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      v57 = *(_OWORD *)(v34 + qword_100864950);
      v42 = v54;
      v41(v54, v16, v37);
      v43 = *(unsigned __int8 *)(v40 + 80);
      v44 = (v43 + 32) & ~v43;
      v45 = swift_allocObject(&unk_100738080, v44 + v12, v43 | 7);
      *(_OWORD *)(v45 + 16) = v57;
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v45 + v44, v42, v37);
      aBlock[4] = sub_10004E4FC;
      aBlock[5] = v45;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000712F8;
      aBlock[3] = &unk_100738098;
      v46 = _Block_copy(aBlock);
      swift_unknownObjectRetain(v57);
      *(_QWORD *)&v47 = swift_release().n128_u64[0];
      v48 = v51;
      objc_msgSend(v51, "startWithErrorHandler:", v46, v47);
      _Block_release(v46);
      swift_unknownObjectRelease();

      v38(v16, v37);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v55);
    }
    else
    {
      swift_bridgeObjectRelease(v18);
    }
  }
}

double sub_10004B92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  unint64_t v26;
  Class isa;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  NSString v37;
  id v38;
  _BYTE v41[104];
  _OWORD v42[2];
  _BYTE v43[32];

  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for PurchaseResult(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == enum case for PurchaseResult.askToBuy(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    v19 = *(_QWORD *)v16;
    v20 = *((_QWORD *)v16 + 1);
    v21 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v22 = (void *)static AskToBuyRequestNotificationDetails.notificationName.getter();
    v23 = sub_10000DAF8((uint64_t *)&unk_100809530);
    inited = swift_initStackObject(v23, v41);
    *(_OWORD *)(inited + 16) = xmmword_100640720;
    *(_QWORD *)&v42[0] = static AskToBuyRequestNotificationDetails.adamIdKey.getter();
    *((_QWORD *)&v42[0] + 1) = v25;
    AnyHashable.init<A>(_:)(v42, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = type metadata accessor for AdamId(0);
    sub_1000119C0((_QWORD *)(inited + 72));
    AdamId.init(value:)(v19, v20);
    v26 = sub_10050A000(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "postNotificationName:object:userInfo:", v22, 0, isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

    return result;
  }
  if (v17 != enum case for PurchaseResult.completed(_:))
  {
    if (v17 != enum case for PurchaseResult.canceled(_:) && v17 != enum case for PurchaseResult.unknown(_:))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return result;
  }
  v28 = (*(uint64_t (**)(char *, uint64_t))(v13 + 96))(v16, v12);
  v29 = v16[2];
  v30 = OfferAction.buyCompletedAction.getter(v28);
  if (v30)
  {
    v31 = v30;
    swift_beginAccess(a3 + 16, v43, 0, 0);
    if (!swift_weakLoadStrong(a3 + 16))
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
      if (v29)
        goto LABEL_8;
      return result;
    }
    memset(v42, 0, sizeof(v42));
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for ActionRunner.Origin.userInitiated(_:), v7);
    sub_100434620(v31, (uint64_t)v42, (uint64_t)v11, a4);
    swift_release();
    v32 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v32);
    sub_100010F2C((uint64_t)v42, &qword_100808F20);
  }
  if (v29)
  {
LABEL_8:
    v33 = type metadata accessor for InAppMessagesManager();
    v34 = type metadata accessor for BaseObjectGraph(0);
    inject<A, B>(_:from:)(v33, a4, v33, v34);
    v35 = *(void **)(*(_QWORD *)&v42[0] + 16);
    v36 = objc_allocWithZone((Class)IAMCountableEvent);
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v36, "initWithName:", v37);

    objc_msgSend(v35, "receiveEvent:", v38);
    sub_10022BA14();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10004BCF4(uint64_t a1, __n128 a2)
{
  return sub_10004BD10(a1, 0xD00000000000001BLL, 0x8000000100687470, a2);
}

uint64_t sub_10004BD10(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[8];
  _QWORD v23[4];

  v7 = type metadata accessor for OSLogger(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v11 = sub_10000EFC4(v7, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(a2, a3);
  swift_getErrorValue(a1, v22, &v20);
  v15 = v20;
  v16 = v21;
  v23[3] = v21;
  v17 = sub_1000119C0(v23);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v17, v15, v16);
  static LogMessage.sensitive(_:)(v23);
  sub_100010F2C((uint64_t)v23, &qword_100808F20);
  Logger.error(_:)(v14, v7, &protocol witness table for OSLogger);
  v18 = swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v18);
}

uint64_t sub_10004BEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = type metadata accessor for AdamId(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType(a2, v12);
  if (!a1)
    return AppStateController.clearWaiting(for:)(a4, ObjectType, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(&unk_1007380D0, v15 + v10, v14 | 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, v11, v8);
  swift_unknownObjectRetain(a2);
  dispatch thunk of AppStateController.refreshDataSources(for:completion:)(a4, sub_10004E540, v16, ObjectType, a3);
  return swift_release(v16);
}

void sub_10004BFE4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  __n128 v21;
  uint64_t ObjectType;
  int v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  double v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  const char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD aBlock[7];

  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  v72 = v9;
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v69 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - v12;
  v14 = type metadata accessor for AdamId(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a1;
  v19 = OfferAction.adamId.getter(v16);
  v20 = (void *)AdamId.numberValue.getter(v19);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v20)
  {
    ObjectType = swift_getObjectType();
    v23 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter(ObjectType, a4) & a2;
    if ((v23 & 1) != 0)
      v24 = "RootActionRunner[ASDAppQuery.BetaApps]:cancelAction";
    else
      v24 = "RootActionRunner[ASDAppQuery]:cancelAction";
    if ((v23 & 1) != 0)
      v25 = 51;
    else
      v25 = 42;
    type metadata accessor for SignpostAggregator(0);
    v26 = static SignpostAggregator.log.getter();
    v27 = OSSignpostID.init(log:)(v26);
    v28 = static os_signpost_type_t.begin.getter(v27);
    v29 = (void *)static SignpostAggregator.log.getter();
    v63 = v25;
    v64 = v24;
    os_signpost(_:dso:log:name:signpostID:)(v28, &_mh_execute_header, v29, v24, v25, 2, v13);

    v30 = sub_10000DAF8((uint64_t *)&unk_100808840);
    v31 = swift_allocObject(v30, 40, 7);
    *(_OWORD *)(v31 + 16) = xmmword_100640AE0;
    *(_QWORD *)(v31 + 32) = v20;
    v65 = v23;
    v66 = a4;
    v67 = a3;
    aBlock[0] = v31;
    specialized Array._endMutation()(v31);
    v32 = aBlock[0];
    if ((v23 & 1) != 0)
      v33 = &selRef_queryForBetaAppsWithStoreItemIDs_;
    else
      v33 = &selRef_queryForStoreItemIDs_;
    sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    v61 = v20;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    v62 = objc_msgSend((id)objc_opt_self(ASDAppQuery), *v33, isa);

    v60 = swift_allocObject(&unk_100738030, 24, 7);
    swift_weakInit(v60 + 16);
    v39 = v71;
    v40 = v72;
    v41 = v69;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v13, v71);
    v42 = *(unsigned __int8 *)(v40 + 80);
    v43 = (v42 + 33) & ~v42;
    v44 = v43 + v10;
    v45 = (v43 + v10) & 0xFFFFFFFFFFFFFFF8;
    v68 = v13;
    v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
    v49 = swift_allocObject(&unk_1007380F8, v48 + 8, v42 | 7);
    v50 = v63;
    *(_QWORD *)(v49 + 16) = v64;
    *(_QWORD *)(v49 + 24) = v50;
    *(_BYTE *)(v49 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v49 + v43, v41, v39);
    *(_BYTE *)(v49 + v44) = v65 & 1;
    v51 = v61;
    *(_QWORD *)(v45 + v49 + 8) = v60;
    v52 = v70;
    *(_QWORD *)(v49 + v46) = v70;
    v53 = (_QWORD *)(v49 + v47);
    v54 = v66;
    v55 = v67;
    *v53 = v67;
    v53[1] = v54;
    *(_QWORD *)(v49 + v48) = v51;
    aBlock[4] = sub_10004E5F8;
    aBlock[5] = v49;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A7B0;
    aBlock[3] = &unk_100738110;
    v56 = _Block_copy(aBlock);
    v57 = v51;
    swift_retain(v52);
    swift_unknownObjectRetain(v55);
    *(_QWORD *)&v58 = swift_release().n128_u64[0];
    v59 = v62;
    objc_msgSend(v62, "executeQueryWithResultHandler:", v56, v58);
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v68, v39);
  }
  else
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v34 = type metadata accessor for OSLogger(0, v21);
    sub_10000EFC4(v34, (uint64_t)qword_10086AB38);
    v35 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v36 = type metadata accessor for LogMessage(0);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD00000000000003ELL, 0x80000001006874B0);
    Logger.error(_:)(v37, v34, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v37);
  }
}

void sub_10004C4A4(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;

  v48 = a12;
  v49 = a13;
  v46 = a10;
  v47 = a11;
  v20 = type metadata accessor for OSLogger(0, a2);
  v51 = *(_QWORD *)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v50 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = static os_signpost_type_t.end.getter(v21);
  type metadata accessor for SignpostAggregator(0);
  v24 = (void *)static SignpostAggregator.log.getter();
  os_signpost(_:dso:log:name:signpostID:)(v23, &_mh_execute_header, v24, a4, a5, a6, a7);

  if (a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v37 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v37 = a1;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v37))
        goto LABEL_4;
    }
    else
    {
      v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v25)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_7:
          v27 = v26;
          v28 = objc_msgSend(v26, "progress", swift_bridgeObjectRelease(a1).n128_f64[0]);
          if (v28)
          {
            v48 = v28;
            objc_msgSend(v28, "cancel");

          }
          else
          {
            if (qword_100806968 != -1)
              swift_once(&qword_100806968, sub_10050332C);
            v29 = sub_10000EFC4(v20, (uint64_t)qword_10086AB38);
            v31 = v50;
            v30 = v51;
            (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v29, v20);
            v32 = sub_10000DAF8((uint64_t *)&unk_100808370);
            v33 = type metadata accessor for LogMessage(0);
            v34 = swift_allocObject(v32, ((*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) | 7);
            *(_OWORD *)(v34 + 16) = xmmword_1006405F0;
            LogMessage.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100687580);
            v53 = sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
            v52[0] = v49;
            v35 = v49;
            static LogMessage.traceableSensitive(_:)(v52);
            sub_100010F2C((uint64_t)v52, &qword_100808F20);
            LogMessage.init(stringLiteral:)(0xD00000000000002BLL, 0x80000001006875C0);
            Logger.error(_:)(v34, v20, &protocol witness table for OSLogger);

            v36 = swift_bridgeObjectRelease(v34);
            (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v31, v20, v36);
          }
          return;
        }
        if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v26 = *(id *)(a1 + 32);
          goto LABEL_7;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease(a1);
  }
  if ((a8 & 1) == 0)
  {
    if (qword_100806968 == -1)
    {
LABEL_21:
      v38 = sub_10000EFC4(v20, (uint64_t)qword_10086AB38);
      v40 = v50;
      v39 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v38, v20);
      v41 = sub_10000DAF8((uint64_t *)&unk_100808370);
      v42 = type metadata accessor for LogMessage(0);
      v43 = swift_allocObject(v41, ((*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v42 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) | 7);
      *(_OWORD *)(v43 + 16) = xmmword_1006405F0;
      LogMessage.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100687580);
      v53 = sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
      v52[0] = v49;
      v44 = v49;
      static LogMessage.traceableSensitive(_:)(v52);
      sub_100010F2C((uint64_t)v52, &qword_100808F20);
      LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001006875A0);
      Logger.error(_:)(v43, v20, &protocol witness table for OSLogger);
      v45 = swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v40, v20, v45);
      return;
    }
LABEL_25:
    swift_once(&qword_100806968, sub_10050332C);
    goto LABEL_21;
  }
  swift_beginAccess(a9 + 16, v52, 0, 0);
  if (swift_weakLoadStrong(a9 + 16))
  {
    sub_10004BFE4(v46, 0, v47, v48);
    swift_release();
  }
}

uint64_t sub_10004C980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_100864948;
  v2 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100864950));

  swift_release(*(_QWORD *)(v0 + qword_100864960));
  swift_release(*(_QWORD *)(v0 + qword_100864968));

  return swift_release(*(_QWORD *)(v0 + qword_100809460));
}

uint64_t sub_10004CA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = ActionRunner.deinit();
  swift_unknownObjectUnownedDestroy(v0 + qword_10082A290);
  v1 = v0 + qword_100864948;
  v2 = type metadata accessor for MetricsPipeline(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100864950));

  swift_release(*(_QWORD *)(v0 + qword_100864960));
  swift_release(*(_QWORD *)(v0 + qword_100864968));

  swift_release(*(_QWORD *)(v0 + qword_100809460));
  return v0;
}

uint64_t sub_10004CADC()
{
  uint64_t v0;

  v0 = sub_10004CA1C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10004CAFC()
{
  return type metadata accessor for RootActionRunner(0);
}

uint64_t sub_10004CB04()
{
  void *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for RootActionRunner(0);
    result = swift_dynamicCastClass(v2, v3);
    if (!result)
    {
      v4 = objc_msgSend(v0, "nextResponder");
      if (v4)
      {
        v5 = v4;
        v6 = sub_10004CB04();

        swift_release();
        return v6;
      }
      else
      {
        swift_release();
        return 0;
      }
    }
  }
  return result;
}

id sub_10004CB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  NSString v13;
  NSString v14;
  NSString v15;
  NSString v16;
  id v17;

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
  {
    v15 = 0;
    if (a8)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  if (!a8)
    goto LABEL_5;
LABEL_3:
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a8);
LABEL_6:
  v17 = objc_msgSend(v8, "initWithBundleId:productIdentifier:appName:productName:", v13, v14, v15, v16);

  return v17;
}

void sub_10004CC8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AdamId(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v13 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_24;
      v22 = *(_QWORD *)(v25 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_24;
        v22 = *(_QWORD *)(v25 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v17)
            goto LABEL_24;
          v22 = *(_QWORD *)(v25 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1003F44AC((uint64_t)v9, (uint64_t)v5);
    sub_100010F2C((uint64_t)v5, &qword_100808390);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release();
    return;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_10004CEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;

  v4 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AdamId(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v63 = (char *)&v57 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v64 = a1;
  v65 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v66 = v15;
  v67 = 0;
  v68 = v17 & v14;
  v62 = (char *)(a2 + 56);
  v22 = v18;
  v23 = swift_bridgeObjectRetain(v18);
  v24 = 0;
  v58 = v6;
  v61 = a2;
  v59 = v20;
  v60 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v25 = (v20 - 1) & v20;
  v26 = __clz(__rbit64(v20)) | (v24 << 6);
  v27 = v24;
  v28 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v26, v7, v23);
  v29 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v29, 1, v7);
    v64 = v22;
    v65 = v28;
    v66 = v21;
    v67 = v27;
    v68 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10004E834(v22);
      sub_100010F2C((uint64_t)v6, &qword_100808390);
      return (void *)v61;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v63, v6, v7);
    v33 = v61;
    v34 = *(_QWORD *)(v61 + 40);
    v35 = sub_10000E720(&qword_100815410, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v7, v35);
    v37 = -1 << *(_BYTE *)(v33 + 32);
    v38 = v36 & ~v37;
    if (((*(_QWORD *)&v62[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) != 0)
      break;
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v45(v63, v7);
    v24 = v67;
    v20 = v68;
    v22 = v64;
    v19 = v65;
    v21 = v66;
    v6 = v58;
    v59 = v68;
    v60 = v67;
    if (v68)
      goto LABEL_6;
LABEL_8:
    v27 = v24 + 1;
    if (__OFADD__(v24, 1))
      __break(1u);
    v28 = v19;
    v30 = (unint64_t)(v21 + 64) >> 6;
    if (v27 >= v30)
      goto LABEL_26;
    v31 = *(_QWORD *)(v19 + 8 * v27);
    if (v31)
      goto LABEL_11;
    v24 += 2;
    if (v27 + 1 >= v30)
      goto LABEL_36;
    v31 = *(_QWORD *)(v19 + 8 * v24);
    if (v31)
      goto LABEL_14;
    if (v27 + 2 >= v30)
    {
LABEL_26:
      v25 = 0;
      v29 = 1;
      v27 = v24;
    }
    else
    {
      v31 = *(_QWORD *)(v19 + 8 * (v27 + 2));
      if (v31)
      {
        v27 += 2;
        goto LABEL_11;
      }
      v24 = v27 + 3;
      if (v27 + 3 >= v30)
      {
        v25 = 0;
        v29 = 1;
        v27 += 2;
      }
      else
      {
        v31 = *(_QWORD *)(v19 + 8 * v24);
        if (v31)
        {
LABEL_14:
          v27 = v24;
LABEL_11:
          v25 = (v31 - 1) & v31;
          v26 = __clz(__rbit64(v31)) + (v27 << 6);
          goto LABEL_7;
        }
        v27 += 4;
        if (v27 >= v30)
          goto LABEL_26;
        v31 = *(_QWORD *)(v19 + 8 * v27);
        if (v31)
          goto LABEL_11;
        v27 = v30 - 1;
        v32 = v60 + 6;
        while (v30 != v32)
        {
          v31 = *(_QWORD *)(v19 + 8 * v32++);
          if (v31)
          {
            v27 = v32 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v25 = 0;
        v29 = 1;
      }
    }
  }
  v39 = v33;
  v40 = ~v37;
  v41 = *(_QWORD *)(v8 + 72);
  v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v42(v10, *(_QWORD *)(v39 + 48) + v41 * v38, v7);
    v43 = sub_10000E720(&qword_100809560, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v44 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v63, v7, v43);
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
    v45(v10, v7);
    if ((v44 & 1) != 0)
      break;
    v38 = (v38 + 1) & v40;
    if (((*(_QWORD *)&v62[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v45)(v63, v7);
  v47 = *(_BYTE *)(v39 + 32);
  v48 = v47 & 0x3F;
  v49 = (1 << v47) + 63;
  v50 = v49 >> 6;
  v51 = 8 * (v49 >> 6);
  if (v48 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v49 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v62, v51);
    sub_10004D4AC((unint64_t *)((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0)), v50, v39, v38, &v64);
    v53 = v52;
    swift_release();
    sub_10004E834(v64);
  }
  else
  {
    v55 = (void *)swift_slowAlloc(v51, -1);
    memcpy(v55, v62, v51);
    sub_10004D4AC((unint64_t *)v55, v50, v39, v38, &v64);
    v53 = v56;
    swift_release();
    sub_10004E834(v64);
    swift_slowDealloc(v55, -1, -1);
  }
  return (void *)v53;
}

void sub_10004D4AC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  char v42;
  int64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;

  v51 = a2;
  v9 = sub_10000DAF8(&qword_100808390);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdamId(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v59 = (char *)&v50 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v53 = a1;
  v54 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v57 = a3 + 56;
  v58 = a3;
  v55 = a5;
  while (2)
  {
    v52 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v56 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12, v17);
          v31 = 0;
          goto LABEL_8;
        }
        v43 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        v44 = (unint64_t)(v27 + 64) >> 6;
        if (v43 >= v44)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v45 = *(_QWORD *)(v25 + 8 * v43);
        if (v45)
          goto LABEL_17;
        if (v26 + 2 >= v44)
          goto LABEL_34;
        v45 = *(_QWORD *)(v25 + 8 * (v26 + 2));
        if (v45)
        {
          v43 = v26 + 2;
LABEL_17:
          v29 = (v45 - 1) & v45;
          v30 = __clz(__rbit64(v45)) + (v43 << 6);
          v26 = v43;
          goto LABEL_7;
        }
        if (v26 + 3 >= v44)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v45 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v45)
        {
          v43 = v26 + 3;
          goto LABEL_17;
        }
        v43 = v26 + 4;
        if (v26 + 4 < v44)
        {
          v45 = *(_QWORD *)(v25 + 8 * v43);
          if (v45)
            goto LABEL_17;
          v43 = v44 - 1;
          v48 = v26 + 5;
          while (v44 != v48)
          {
            v45 = *(_QWORD *)(v25 + 8 * v48++);
            if (v45)
            {
              v43 = v48 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v43;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v56;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_100010F2C((uint64_t)v11, &qword_100808390);
          v49 = v58;
          swift_retain(v58);
          sub_100339500(v53, v51, v52, v49);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v59, v11, v12);
        v32 = v58;
        v33 = *(_QWORD *)(v58 + 40);
        v34 = sub_10000E720(&qword_100815410, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
        v35 = dispatch thunk of Hashable._rawHashValue(seed:)(v33, v12, v34);
        v36 = -1 << *(_BYTE *)(v32 + 32);
        v37 = v35 & ~v36;
        if (((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
          break;
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        v23(v59, v12);
        v11 = v54;
        a5 = v55;
      }
      v38 = ~v36;
      v39 = *(_QWORD *)(v13 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v40(v15, *(_QWORD *)(v58 + 48) + v39 * v37, v12);
        v41 = sub_10000E720(&qword_100809560, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
        v42 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v59, v12, v41);
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
        v23(v15, v12);
        if ((v42 & 1) != 0)
          break;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_4;
      }
      v23(v59, v12);
      v46 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v54;
      v47 = *(unint64_t *)((char *)v53 + v46);
      *(unint64_t *)((char *)v53 + v46) = v47 & ~(1 << v37);
      a5 = v55;
    }
    while ((v47 & (1 << v37)) == 0);
    v22 = v52 - 1;
    if (__OFSUB__(v52, 1))
    {
LABEL_41:
      __break(1u);
      return;
    }
    if (v52 != 1)
      continue;
    break;
  }
}

uint64_t sub_10004D8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t updated;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char v33[24];

  v3 = v2;
  v6 = sub_10000DAF8(&qword_100828390);
  __chkstk_darwin(v6);
  v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for MetricsPipeline(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (void *)(a2 + qword_10086B3E0);
  swift_beginAccess(a2 + qword_10086B3E0, v33, 0, 0);
  sub_100018ADC((uint64_t)v13, (uint64_t)v8, &qword_100828390);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_retain(v3);
    sub_100010F2C((uint64_t)v8, &qword_100828390);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v9, v9);
    __break(1u);
    goto LABEL_7;
  }
  v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v14(v12, v8, v9);
  v14((char *)(v3 + qword_100864948), v12, v9);
  v9 = *(_QWORD *)(a2 + qword_10086B3C8);
  if (!v9)
  {
LABEL_7:
    v28 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
    swift_retain(v3);
    v17 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v28, v28);
    __break(1u);
    goto LABEL_8;
  }
  v15 = *(_QWORD *)(a2 + qword_10086B3C8 + 8);
  v16 = (uint64_t *)(v3 + qword_100864950);
  *v16 = v9;
  v16[1] = v15;
  v17 = type metadata accessor for ArcadeSubscriptionManager(0);
  v13 = *(void **)(a2 + qword_10086B3D0);
  if (!v13)
  {
LABEL_8:
    v29 = v17;
    swift_retain(v3);
    swift_unknownObjectRetain(v9);
    v18 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v29, v29);
    __break(1u);
    goto LABEL_9;
  }
  *(_QWORD *)(v3 + qword_100864958) = v13;
  v18 = type metadata accessor for ASKBagContract(0);
  v19 = *(_QWORD *)(a2 + qword_10086B3D8);
  if (v19)
  {
    *(_QWORD *)(v3 + qword_100864960) = v19;
    v20 = type metadata accessor for Commerce(0);
    v21 = type metadata accessor for ObjectGraph(0);
    swift_retain(v3);
    swift_unknownObjectRetain(v9);
    v22 = v13;
    swift_retain(v19);
    inject<A, B>(_:from:)(v20, a2, v20, v21);
    *(_QWORD *)(v3 + qword_100864968) = v32;
    updated = type metadata accessor for UpdateStore(0);
    inject<A, B>(_:from:)(updated, a2, updated, v21);
    *(_QWORD *)(v3 + qword_100864970) = v32;
    v25 = type metadata accessor for SearchGhostHintMetricsTracker(0, v24);
    BaseObjectGraph.optional<A>(_:)(&v32, v25, v25);
    *(_QWORD *)(v3 + qword_100809460) = v32;
    swift_release();
    v26 = swift_unknownObjectUnownedInit(v3 + qword_10082A290, a1);
    return ActionRunner.init()(v26);
  }
LABEL_9:
  v30 = v18;
  swift_retain(v3);
  swift_unknownObjectRetain(v9);
  v31 = v13;
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v30, v30);
  __break(1u);
  return result;
}

void sub_10004DC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  id v8;
  void *v9;
  NSURL *v10;
  void *v11;
  void *v12;
  NSURL *v13;
  void *v14;
  uint64_t v15;

  v2 = type metadata accessor for URL(0, a2);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ExternalUrlAction.isSensitive.getter(v4);
  v8 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  v9 = v8;
  if ((v7 & 1) != 0)
  {
    if (v8)
    {
      ExternalUrlAction.url.getter();
      URL._bridgeToObjectiveC()(v10);
      v12 = v11;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      objc_msgSend(v9, "openSensitiveURL:withOptions:", v12, 0);
LABEL_6:

      return;
    }
    __break(1u);
  }
  else if (v8)
  {
    ExternalUrlAction.url.getter();
    URL._bridgeToObjectiveC()(v13);
    v12 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    objc_msgSend(v9, "openURL:configuration:completionHandler:", v12, 0, 0);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_10004DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  int v12;
  id *v13;
  id v14;
  void (*v15)(char *, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  NSDictionary v25;
  id v26;
  uint64_t v27;
  void *v28;
  _BYTE v29[24];
  uint64_t v30;

  v3 = type metadata accessor for FamilyCircleAction.EventType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  sub_100018ADC(a2, (uint64_t)v29, &qword_100808F20);
  if (!v30)
  {
    sub_100010F2C((uint64_t)v29, &qword_100808F20);
    return;
  }
  v10 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
  if ((swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
    return;
  v11 = v28;
  FamilyCircleAction.eventType.getter();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v12 == enum case for FamilyCircleAction.EventType.initiate(_:))
  {
    v13 = (id *)&FACircleEventTypeInitiate;
  }
  else
  {
    if (v12 != enum case for FamilyCircleAction.EventType.addFamilyMember(_:))
    {
      v15 = *(void (**)(char *, uint64_t))(v4 + 8);
      v14 = FACircleEventTypeInitiate;
      v15(v6, v3);
      goto LABEL_10;
    }
    v13 = (id *)&FACircleEventTypeAddFamilyMemberV3;
  }
  v14 = *v13;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v16 = objc_msgSend(objc_allocWithZone((Class)FACircleContext), "initWithEventType:", v14);

  FamilyCircleAction.clientName.getter();
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setClientName:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21 = objc_msgSend(v20, "bundleIdentifier");

  objc_msgSend(v16, "setClientBundleID:", v21);
  v22 = FamilyCircleAction.additionalParameters.getter();
  if (v22)
  {
    v24 = v22;
    v25.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v25.super.isa = 0;
  }
  objc_msgSend(v16, "setAdditionalParameters:", v25.super.isa, v23);

  v26 = objc_msgSend(objc_allocWithZone((Class)FACircleStateController), "initWithPresenter:", v11);
  objc_msgSend(v26, "performWithContext:completion:", v16, 0);

}

uint64_t sub_10004E03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for NavigationTab(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + qword_10082A290);
  sub_1000E1E3C((uint64_t)v14);

  v6 = v15;
  if (!v15)
    return sub_100010F2C((uint64_t)v14, (uint64_t *)&unk_100809510);
  v7 = v16;
  sub_100010F08(v14, v15);
  v8 = TabBadgeAction.text.getter();
  v10 = v9;
  TabBadgeAction.navigationTab.getter();
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v7 + 40))(v8, v10, v4, v6, v7);
  v11 = swift_bridgeObjectRelease(v10);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v11);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
}

uint64_t sub_10004E164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD v21[5];

  v1 = v0;
  v2 = type metadata accessor for AdamId(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v21[-1] - v8;
  v10 = CancelPreorderAction.preorderAdamId.getter(v7);
  v11 = CancelPreorderAction.isArcade.getter(v10);
  dispatch thunk of Commerce.cancelPreorder(for:isArcade:)(v9, v11 & 1, v12);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1007383A0, v14 + v4, v13 | 7);
  *(_QWORD *)(v15 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, v5, v2);
  v16 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v17 = swift_retain(v1);
  v18 = static OS_dispatch_queue.main.getter(v17);
  v21[3] = v16;
  v21[4] = &protocol witness table for OS_dispatch_queue;
  v21[0] = v18;
  Promise.then(perform:orCatchError:on:)(sub_10004A954, 0, sub_10004EB28, v15, v21);
  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v21);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_10004E2F4()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10004E300(uint64_t a1)
{
  uint64_t v1;

  return sub_10004B230(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10004E308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004E318(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10004E320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for Bag(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v5));
  if (*(_QWORD *)(v0 + v6 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + v6));
  v8 = (v6 + 39) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_10004E3D8(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Bag(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100047D5C(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10004E448(uint64_t a1)
{
  uint64_t *v1;

  return sub_10004807C(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[8]);
}

uint64_t sub_10004E458()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_release);
}

double sub_10004E464(void *a1, __n128 a2)
{
  uint64_t v2;

  return sub_100525E0C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

double sub_10004E46C(void *a1, __n128 a2)
{
  return sub_100527988(a1, a2);
}

uint64_t sub_10004E474()
{
  return sub_10004E704((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 40);
}

void sub_10004E488(void *a1)
{
  uint64_t *v1;

  sub_1005268E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10004E494()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_release);
}

double sub_10004E4A0(void *a1, __n128 a2)
{
  uint64_t v2;

  return sub_100525A44(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10004E4A8()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10004E4B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004E4D8()
{
  return sub_10004E704((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 40);
}

double sub_10004E4EC(uint64_t a1)
{
  uint64_t *v1;

  return sub_10004B92C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10004E4FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  return sub_10004BEC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_10004E544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + v0;
  v8 = ((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v7 + 8));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v9));

  return swift_deallocObject(v0, v10 + 8, v6);
}

void sub_10004E5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v5 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = ((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_10004C4A4(a1, v9, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + v6, *(_BYTE *)(v2 + v7), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10004E6A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10004E6CC(__n128 a1)
{
  uint64_t *v1;

  return sub_100048650(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10004E6D8()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_release);
}

void sub_10004E6E4(uint64_t a1)
{
  uint64_t v1;

  sub_10004907C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10004E6EC()
{
  return sub_10004E704((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_unknownObjectRelease, 48);
}

uint64_t sub_10004E704(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t a3)
{
  _QWORD *v3;

  a1(v3[2]);
  a1(v3[3]);
  a2(v3[4]);
  return swift_deallocObject(v3, a3, 7);
}

void sub_10004E754(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100048888(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_10004E764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10004E7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = v0 + ((v1 + 32) & ~v1);
  ObjectType = swift_getObjectType(v2, v5);
  return AppStateController.clearWaiting(for:)(v4, ObjectType, v3);
}

uint64_t sub_10004E834(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10004E83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = (v4 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + v0;
  v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  if (*(_QWORD *)(v0 + v8 + 24))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + v8));
  v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v9));

  return swift_deallocObject(v0, v10 + 8, v3 | 7);
}

void sub_10004E900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v5 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = ((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_100049AD4(a1, v9, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + v6, *(unsigned __int8 *)(v2 + v7), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(v2 + v8), v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)), *(void ***)(v2 + ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10004E9B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10004E9E4(uint64_t a1)
{
  uint64_t v1;

  sub_10004A028(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10004E9F0()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10004E9FC()
{
  uint64_t v0;

  return sub_10004A4E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_10004EA04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809580;
  if (!qword_100809580)
  {
    v1 = sub_100010DE0((uint64_t *)&unk_10080CC10);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100809580);
  }
  return result;
}

_OWORD *sub_10004EA50(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10004EA60()
{
  _QWORD *v0;

  if (v0[5])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 2);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_10004EAA4()
{
  uint64_t *v0;

  return sub_10004A83C((uint64_t)(v0 + 2), v0[6], v0[7], v0[8]);
}

uint64_t sub_10004EAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10004EB28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AdamId(0) - 8) + 80);
  return sub_10004AB50(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), v4);
}

uint64_t sub_10004EB6C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  if (v0[7])
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 4);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_10004EBB0(uint64_t a1, __n128 a2)
{
  uint64_t *v2;

  return sub_10004AD8C(a1, a2, v2[2], v2[3], (uint64_t)(v2 + 4), v2[8]);
}

uint64_t sub_10004EBC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  if (*(_QWORD *)(v0 + 48))
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 120, 7);
}

double sub_10004EC14(_BYTE *a1, __n128 a2)
{
  uint64_t *v2;

  return sub_10004AFFC(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[7], v2[8]);
}

uint64_t sub_10004EC2C()
{
  return sub_10004EC38((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10004EC38(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10004EC70()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (void (*)(uint64_t))LocalAskToBuyAction.completion.getter();
  v4 = v3;
  v2(v1);
  return swift_release(v4);
}

char *sub_10004ED0C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[4];
  objc_super v35;

  v9 = OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_fontMetrics;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);

  v13 = (objc_class *)type metadata accessor for StorefrontAgeRatingView();
  v35.receiver = v11;
  v35.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_label;
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_label];
  v17 = v14;
  objc_msgSend(v17, "addSubview:", v16);
  v18 = (void *)objc_opt_self(UIColor);
  v19 = v17;
  v20 = objc_msgSend(v18, "tertiarySystemFillColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  v21 = objc_msgSend(v19, "layer");
  objc_msgSend(v21, "setCornerRadius:", 3.0);

  v22 = *(id *)&v14[v15];
  v23 = objc_msgSend(v18, "secondaryLabelColor");
  objc_msgSend(v22, "setTextColor:", v23);

  v24 = *(void **)&v14[v15];
  objc_msgSend(v24, "setTextAlignment:", 1);
  v25 = (void *)objc_opt_self(UIFont);
  v26 = *(void **)&v19[OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_fontMetrics];
  v27 = v24;
  objc_msgSend(v26, "scaledValueForValue:", 15.0);
  v28 = objc_msgSend(v25, "systemFontOfSize:weight:width:");
  objc_msgSend(v27, "setFont:", v28);

  objc_msgSend(*(id *)&v14[v15], "setAdjustsFontForContentSizeCategory:", 1);
  v29 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100640720;
  *(_QWORD *)(v30 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v30 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v34[3] = v13;
  v34[0] = v19;
  v31 = v19;
  v32 = UIView.registerForTraitChanges(_:target:action:)(v30, v34, "layoutSubviews");
  swift_unknownObjectRelease(v32);

  swift_bridgeObjectRelease(v30);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v34);
  return v31;
}

id sub_10004F184()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void (*v19)(char *, _QWORD, uint64_t);
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void (*v27)(char *, uint64_t);
  objc_super v29;
  CGRect v30;
  CGRect v31;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = (objc_class *)type metadata accessor for StorefrontAgeRatingView();
  v29.receiver = v1;
  v29.super_class = v9;
  objc_msgSendSuper2(&v29, "layoutSubviews");
  v10 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension23StorefrontAgeRatingView_label];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v10, "sizeThatFits:", v11, v12);
  v14 = v13;
  v16 = v15;
  objc_msgSend(v1, "bounds");
  v17 = (CGRectGetWidth(v30) - v14) * 0.5;
  objc_msgSend(v1, "bounds");
  v18 = (CGRectGetHeight(v31) - v16) * 0.5;
  v19 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v19(v8, enum case for FloatingPointRoundingRule.down(_:), v2);
  v19(v5, enum case for FloatingPointRoundingRule.up(_:), v2);
  v20 = CGRect.rounded(originRule:sizeRule:)(v8, v5, v17, v18, v14, v16);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v5, v2);
  v27(v8, v2);
  return objc_msgSend(v10, "setFrame:", v20, v22, v24, v26);
}

id sub_10004F37C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StorefrontAgeRatingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StorefrontAgeRatingView()
{
  return objc_opt_self(_TtC20ProductPageExtension23StorefrontAgeRatingView);
}

uint64_t sub_10004F404()
{
  _QWORD *v0;
  void *v1;
  uint64_t result;
  void *v3;
  id v4;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x178))();

  if (v1)
    return 0;
  result = (uint64_t)objc_msgSend(v0, "navigationController");
  if (result)
  {
    v3 = (void *)result;
    v4 = objc_msgSend((id)result, "navigationBar");

    if (v4)
    {

      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10004F494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = type metadata accessor for UberedPageScrollObserver();
  v7 = swift_allocObject(v6, 89, 7);
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit(v7 + 16, 0);
  *(_QWORD *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_BYTE *)(v7 + 88) = 1;
  *(_QWORD *)(v7 + 24) = a2;
  swift_unknownObjectWeakAssign((__n128)0);
  v8 = swift_allocObject(&unk_1007384B8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v3);
  v9 = (_QWORD *)swift_allocObject(&unk_1007384E0, 40, 7);
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v8;
  v11 = *(_QWORD *)(v7 + 40);
  v10 = *(_QWORD *)(v7 + 48);
  *(_QWORD *)(v7 + 40) = sub_10004F640;
  *(_QWORD *)(v7 + 48) = v9;
  sub_100018908(v11, v10);
  v12 = swift_allocObject(&unk_1007384B8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v3);
  v13 = (_QWORD *)swift_allocObject(&unk_100738508, 40, 7);
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v12;
  v15 = *(_QWORD *)(v7 + 56);
  v14 = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v7 + 56) = sub_10004F92C;
  *(_QWORD *)(v7 + 64) = v13;
  sub_100018908(v15, v14);
  v16 = swift_allocObject(&unk_1007384B8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v3);
  v17 = (_QWORD *)swift_allocObject(&unk_100738530, 40, 7);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = v16;
  v19 = *(_QWORD *)(v7 + 72);
  v18 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v7 + 72) = sub_10004FCCC;
  *(_QWORD *)(v7 + 80) = v17;
  sub_100018908(v19, v18);
  return v7;
}

uint64_t sub_10004F61C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10004F640(double a1, double a2)
{
  uint64_t *v2;

  sub_10004F8A4(v2[4], v2[2], v2[3], sub_10004F664, a1, a2);
}

void sub_10004F664(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD aBlock[6];
  uint64_t v29;

  v5 = v4;
  v10 = type metadata accessor for TimingCurve(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DAF8(&qword_100809628);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&aBlock[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 < 0.5;
  v27 = a2;
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(a1) != v18)
  {
    v19 = fabs(a4);
    if (v19 >= 5.0)
      v20 = 1.0;
    else
      v20 = v19 / 5.0;
    aBlock[0] = 0x3FC999999999999ALL;
    v29 = 0x3FA999999999999ALL;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for TimingCurve.linear(_:), v10);
    Interpolator.init(fromValue:toValue:curve:)(aBlock, &v29, v13, &type metadata for CGFloat, &protocol witness table for CGFloat);
    Interpolator.value(forInput:)(aBlock, v14, v20);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v21 = *(double *)aBlock;
    v22 = (void *)objc_opt_self(UIView);
    v23 = (_QWORD *)swift_allocObject(&unk_1007385F8, 48, 7);
    v24 = v27;
    v23[2] = a1;
    v23[3] = v24;
    v23[4] = v5;
    v23[5] = v18;
    aBlock[4] = sub_100050B88;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000924A0;
    aBlock[3] = &unk_100738610;
    v25 = _Block_copy(aBlock);
    v26 = v5;
    swift_release();
    objc_msgSend(v22, "animateWithDuration:animations:", v25, v21);
    _Block_release(v25);
  }
}

void sub_10004F8A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, double, double), double a5, double a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  _BYTE v14[24];

  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    a4(a2, a3, a5, a6);

  }
}

void sub_10004F92C(double a1, double a2)
{
  uint64_t *v2;

  sub_10004F8A4(v2[4], v2[2], v2[3], sub_10004F950, a1, a2);
}

void sub_10004F950(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v4;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v8 = a3 < 0.5;
  if ((*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 8))() != v8)
  {
    v9 = (void *)objc_opt_self(UIView);
    v10 = (_QWORD *)swift_allocObject(&unk_1007385A8, 48, 7);
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v4;
    v10[5] = v8;
    v13[4] = sub_100050B88;
    v13[5] = v10;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000924A0;
    v13[3] = &unk_1007385C0;
    v11 = _Block_copy(v13);
    v12 = v4;
    swift_release();
    objc_msgSend(v9, "animateWithDuration:animations:", v11, a4);
    _Block_release(v11);
  }
}

void sub_10004FA54(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *Strong;
  __n128 v18;
  void *v19;
  double v20;
  char v21;
  char v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  void (*v27)(char *, uint64_t);
  __n128 v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  _QWORD aBlock[6];
  _BYTE v39[24];

  v10 = type metadata accessor for TimingCurve(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&aBlock[-1] - v15;
  swift_beginAccess(a1 + 16, v39, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong
    || (v19 = Strong,
        v20 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1D0))()),
        v22 = v21,
        v19,
        (v22 & 1) != 0))
  {
    v18.n128_u64[0] = 0x7FEFFFFFFFFFFFFFLL;
    if (a4 == 1.79769313e308)
      return;
  }
  else
  {
    v18.n128_f64[0] = v20;
    if (v20 == a4)
      return;
  }
  v23 = static TimingCurve.easingCurve1.getter(v18);
  v24 = TimingCurve.controlPoint1.getter(v23);
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v16, v10);
  v29 = static TimingCurve.easingCurve1.getter(v28);
  v30 = TimingCurve.controlPoint2.getter(v29);
  v32 = v31;
  v27(v13, v10);
  v33 = swift_allocObject(&unk_100738558, 48, 7);
  *(_QWORD *)(v33 + 16) = a2;
  *(_QWORD *)(v33 + 24) = a3;
  *(_QWORD *)(v33 + 32) = a1;
  *(double *)(v33 + 40) = a4;
  v34 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  aBlock[4] = sub_10004FD78;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100738570;
  v35 = _Block_copy(aBlock);
  swift_retain(a1);
  swift_release();
  v36 = objc_msgSend(v34, "initWithDuration:controlPoint1:controlPoint2:animations:", v35, a5, v24, v26, v30, v32);
  _Block_release(v35);
  objc_msgSend(v36, "startAnimation");

}

uint64_t sub_10004FCA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10004FCCC(double a1, double a2)
{
  uint64_t *v2;

  sub_10004FA54(v2[4], v2[2], v2[3], a1, a2);
}

void sub_10004FCD8(uint64_t a1, double a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *Strong) + 0x1D8))(*(_QWORD *)&a2, 0);

  }
}

uint64_t sub_10004FD54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10004FD78()
{
  uint64_t v0;

  sub_10004FCD8(*(_QWORD *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10004FD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004FD98(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10004FDA0(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;

  v4 = v3;
  v8 = objc_msgSend(v3, "navigationItem");
  v26 = objc_msgSend(v8, "titleView");

  if (!v26)
    return;
  v9 = type metadata accessor for UberNavigationBarTitleView();
  if (!swift_dynamicCastClass(v26, v9))
  {
    v21 = v26;
LABEL_19:

    return;
  }
  v10 = objc_msgSend(v4, "navigationController");
  if (!v10)
  {
LABEL_17:
    v20 = 1;
    goto LABEL_18;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "viewControllers");

  v13 = sub_100050BB8();
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v22 = v14;
    else
      v22 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v14);
    if (v23)
      goto LABEL_6;
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    swift_bridgeObjectRelease(v14);
    goto LABEL_17;
  }
LABEL_6:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v14 + 32);
LABEL_9:
    v16 = v15;
    swift_bridgeObjectRelease(v14);
    v17 = v4;
    v18 = v16;
    v19 = static NSObject.== infix(_:_:)(v18, v17);

    v20 = v19 ^ 1;
LABEL_18:
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3) & v20;
    v25 = objc_msgSend(v4, "navigationController");
    sub_100178A5C(v25, v24 & 1, a1 & 1);

    v21 = v25;
    goto LABEL_19;
  }
  __break(1u);
}

void sub_10004FFD4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  id v9;

  v5 = (void *)(*(uint64_t (**)(void))(a2 + 32))();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v7 = sub_100050C30();
  CompoundScrollObserver.addChild(_:)(v6, v7);

  v8 = objc_msgSend(v2, "navigationItem", swift_release().n128_f64[0]);
  v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  objc_msgSend(v8, "setTitleView:", v9);

}

void sub_1000500A0(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  void **aBlock;
  uint64_t v21;
  double (*v22)(uint64_t, uint64_t);
  void *v23;
  void *v24;
  _QWORD *v25;

  if (((*(uint64_t (**)(void))(a2 + 72))() & 1) == 0)
  {
    v5 = objc_msgSend(v2, "navigationItem");
    v6 = objc_msgSend(v5, "titleView");

    if (v6)
    {
      v7 = type metadata accessor for UberNavigationBarTitleView();
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
        *(_BYTE *)(v8 + OBJC_IVAR____TtC20ProductPageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) = 0;

    }
  }
  sub_10004FDA0(0, a1, a2);
  if ((sub_10004F404() & 1) != 0)
  {
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 24);
    *(_BYTE *)(v9(a1, a2) + 88) = 1;
    v10 = objc_msgSend(v2, "transitionCoordinator", swift_release().n128_f64[0]);
    if (v10)
    {
      v11 = v10;
      v12 = swift_allocObject(&unk_1007384B8, 24, 7);
      swift_unknownObjectWeakInit(v12 + 16, v2);
      v13 = (_QWORD *)swift_allocObject(&unk_100738710, 40, 7);
      v13[2] = a1;
      v13[3] = a2;
      v13[4] = v12;
      v24 = sub_100050C08;
      v25 = v13;
      aBlock = _NSConcreteStackBlock;
      v21 = 1107296256;
      v22 = sub_1005F3AC0;
      v23 = &unk_100738728;
      v14 = _Block_copy(&aBlock);
      swift_release();
      v15 = swift_allocObject(&unk_1007384B8, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16, v2);
      v16 = (_QWORD *)swift_allocObject(&unk_100738760, 40, 7);
      v16[2] = a1;
      v16[3] = a2;
      v16[4] = v15;
      v24 = sub_100050C24;
      v25 = v16;
      aBlock = _NSConcreteStackBlock;
      v21 = 1107296256;
      v22 = sub_1005F3AC0;
      v23 = &unk_100738778;
      v17 = _Block_copy(&aBlock);
      objc_msgSend(v11, "animateAlongsideTransition:completion:", v14, v17, swift_release().n128_f64[0]);
      _Block_release(v17);
      _Block_release(v14);
      swift_unknownObjectRelease();
    }
    else
    {
      v9(a1, a2);
      v18 = objc_msgSend(v2, "collectionView");
      if (v18)
      {
        v19 = v18;
        sub_100428D38(v18);
        swift_release();

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100050348(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  _BYTE v14[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (v10)
    {
      v11 = v10;
      sub_100050BB8();
      v12 = v9;
      v13 = v11;
      LOBYTE(v11) = static NSObject.== infix(_:_:)(v13, v12);

      if ((v11 & 1) != 0)
      {
        if (objc_msgSend(a1, "isCancelled"))
        {
          (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
          sub_100429308();
          swift_release();
        }
      }
    }

  }
}

void sub_100050458(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend(v2, "navigationItem");
  v8 = objc_msgSend(v5, "titleView");

  if (v8)
  {
    v6 = type metadata accessor for UberNavigationBarTitleView();
    v7 = swift_dynamicCastClass(v8, v6);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC20ProductPageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) & 1) == 0)
      {
        *(_BYTE *)(v7 + OBJC_IVAR____TtC20ProductPageExtension26UberNavigationBarTitleView_canSetBackButtonStyle) = 1;
        sub_10004FDA0(1, a1, a2);
      }
    }

  }
}

double sub_100050524(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  double result;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  void **v13;
  uint64_t v14;
  double (*v15)(uint64_t, uint64_t);
  void *v16;
  void *v17;
  _QWORD *v18;

  sub_10004FDA0(0, a1, a2);
  v5 = objc_msgSend(v2, "presentedViewController");

  if (!v5)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2) & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      sub_100429308();
    }
    else
    {
      v7 = objc_msgSend(v2, "transitionCoordinator");
      v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      if (v7)
      {
        v17 = sub_100050BF4;
        v18 = (_QWORD *)v8;
        v13 = _NSConcreteStackBlock;
        v14 = 1107296256;
        v15 = sub_1005F3AC0;
        v16 = &unk_100738688;
        v9 = _Block_copy(&v13);
        swift_release();
        v10 = swift_allocObject(&unk_1007384B8, 24, 7);
        swift_unknownObjectWeakInit(v10 + 16, v2);
        v11 = (_QWORD *)swift_allocObject(&unk_1007386C0, 40, 7);
        v11[2] = a1;
        v11[3] = a2;
        v11[4] = v10;
        v17 = sub_100050BFC;
        v18 = v11;
        v13 = _NSConcreteStackBlock;
        v14 = 1107296256;
        v15 = sub_1005F3AC0;
        v16 = &unk_1007386D8;
        v12 = _Block_copy(&v13);
        objc_msgSend(v7, "animateAlongsideTransition:completion:", v9, v12, swift_release().n128_f64[0]);
        _Block_release(v12);
        _Block_release(v9);
        *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
        return result;
      }
      sub_100429308();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100050728(uint64_t a1, uint64_t a2)
{
  void (*v3)(double, double);
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;

  v3 = *(void (**)(double, double))(a2 + 40);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 48);
    swift_retain(v4);
    v3(1.0, 0.0);
    sub_100018908((uint64_t)v3, v4);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "navigationController");

    if (v7)
    {
      v8 = objc_msgSend(v7, "navigationBar");

      objc_msgSend(v8, "_setTitleOpacity:", 1.0);
    }
  }
  *(_BYTE *)(a2 + 88) = 0;
}

void sub_1000507E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  _BYTE v16[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    if (objc_msgSend(a1, "isCancelled"))
    {
      v10 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
      if (v10)
      {
        v11 = v10;
        sub_100050BB8();
        v12 = v9;
        v13 = v11;
        LOBYTE(v11) = static NSObject.== infix(_:_:)(v13, v12);

        if ((v11 & 1) != 0 && (sub_10004F404() & 1) != 0)
        {
          (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
          v14 = objc_msgSend(v12, "collectionView");
          if (!v14)
          {
            __break(1u);
            return;
          }
          v15 = v14;
          sub_100428D38(v14);
          swift_release();

        }
      }
    }

  }
}

void sub_100050928(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  sub_10004FDA0(0, a2, a3);
  v7 = swift_allocObject(&unk_1007384B8, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v3);
  v8 = (_QWORD *)swift_allocObject(&unk_100738648, 40, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  v10[4] = sub_100050C78;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1005F3AC0;
  v10[3] = &unk_100738660;
  v9 = _Block_copy(v10);
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v9, 0, swift_release().n128_f64[0]);
  _Block_release(v9);
}

void sub_100050A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  void *v10;
  _BYTE v11[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    v9 = objc_msgSend(v8, "collectionView");
    if (v9)
    {
      v10 = v9;
      sub_100428D38(v9);

      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100050AC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  char v4;
  uint64_t v5;
  char v6;

  v4 = a1;
  (*(void (**)(unint64_t))(a3 + 56))((a1 >> 5) & 1);
  v5 = (*(uint64_t (**)(BOOL))((swift_isaMask & *v3) + 0xC8))((v4 & 8) == 0);
  if ((v4 & 1) != 0
    || (v4 & 2) != 0 && (v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x168))(v5), (v5 & 1) != 0))
  {
    v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC0))(v5);
  }
  else
  {
    v6 = 0;
  }
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & *v3) + 0x1A0))(v6 & 1);
}

uint64_t sub_100050B64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100050B8C()
{
  uint64_t *v0;

  sub_1001DD3D8(v0[5], v0[2], *(_QWORD *)(v0[3] + 8));
}

unint64_t sub_100050BB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008081A0;
  if (!qword_1008081A0)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1008081A0);
  }
  return result;
}

void sub_100050BF4(uint64_t a1)
{
  uint64_t v1;

  sub_100050728(a1, v1);
}

void sub_100050BFC(void *a1)
{
  uint64_t *v1;

  sub_1000507E4(a1, v1[4], v1[2], v1[3]);
}

void sub_100050C08(uint64_t a1)
{
  uint64_t *v1;

  sub_100050A18(a1, v1[4], v1[2], v1[3]);
}

void sub_100050C24(void *a1)
{
  uint64_t *v1;

  sub_100050348(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_100050C30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809630;
  if (!qword_100809630)
  {
    v1 = type metadata accessor for UberedPageScrollObserver();
    result = swift_getWitnessTable(&unk_10066198C, v1);
    atomic_store(result, (unint64_t *)&qword_100809630);
  }
  return result;
}

uint64_t type metadata accessor for MSODiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100809660;
  if (!qword_100809660)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MSODiffablePageViewController);
  return result;
}

uint64_t sub_100050D0C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 1456);
}

uint64_t sub_100050D40()
{
  return type metadata accessor for MSODiffablePageViewController(0);
}

uint64_t sub_100050D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for OSLogger.Subsystem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CompoundLogger(0);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 24) = 0;
  v9 = swift_unknownObjectWeakInit(v0 + 16);
  v10 = OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingMetricsLogger;
  v11 = type metadata accessor for ReplayLogger(0, v9);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = ReplayLogger.init()();
  *(_QWORD *)(v0 + v10) = v12;
  v13 = OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_diagnosticsRecorder;
  v14 = type metadata accessor for RenderPipelineDiagnostics.Recorder(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)(v0 + v13) = RenderPipelineDiagnostics.Recorder.init()();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_inAppMessagesMetricsEventRecorder) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_isBootstrapping) = 0;
  v15 = sub_10000DAF8(&qword_100809E48);
  v16 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100640600;
  *(_QWORD *)(v16 + 56) = v11;
  *(_QWORD *)(v16 + 64) = &protocol witness table for ReplayLogger;
  *(_QWORD *)(v16 + 32) = v12;
  v17 = qword_100806950;
  swift_retain(v12);
  if (v17 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v18 = sub_10000EFC4(v2, (uint64_t)qword_10086AAF0);
  v19.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
  *(_QWORD *)(v16 + 96) = type metadata accessor for OSLogger(0, v19);
  *(_QWORD *)(v16 + 104) = &protocol witness table for OSLogger;
  sub_1000119C0((_QWORD *)(v16 + 72));
  OSLogger.init(subsystem:category:)(v5, 0x61727473746F6F42, 0xE900000000000070);
  CompoundLogger.init(loggers:)(v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_logger, v8, v22);
  return v1;
}

void sub_100050F8C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100687C10, "ProductPageExtension/BaseBootstrap.swift", 40, 2, 43, 0);
  __break(1u);
}

uint64_t sub_100050FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28[24];

  v27 = a1;
  v2 = type metadata accessor for MetricsFieldsContext(0);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  __chkstk_darwin();
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsData(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents, v28, 1, 0);
  v11 = *v9;
  if (!((unint64_t)*v9 >> 62))
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      return result;
LABEL_3:
    v12 = *v9;
    v13 = (unint64_t)*v9 >> 62;
    v24 = v9;
    if (v13)
    {
      if (v12 < 0)
        v21 = v12;
      else
        v21 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      result = _CocoaArrayWrapper.endIndex.getter(v21);
      v14 = result;
      if (result)
        goto LABEL_5;
    }
    else
    {
      v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v12);
      if (v14)
      {
LABEL_5:
        if (v14 < 1)
        {
          __break(1u);
          return result;
        }
        v15 = 0;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
          }
          else
          {
            v16 = *(_QWORD *)(v12 + 8 * v15 + 32);
            swift_retain(v16);
          }
          ++v15;
          v17 = dispatch thunk of MetricsEvent.metricsData.getter();
          static MetricsFieldsContext.emptyContext.getter(v17);
          v18 = MetricsPipeline.process(_:using:)(v8, v4);
          swift_release(v16);
          swift_release(v18);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
        while (v14 != v15);
      }
    }
    swift_bridgeObjectRelease(v12);
    v22 = *v24;
    *v24 = (uint64_t)&_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v22);
  }
  if (v11 < 0)
    v19 = *v9;
  else
    v19 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v9);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  result = swift_bridgeObjectRelease(v11);
  if (v20)
    goto LABEL_3;
  return result;
}

uint64_t sub_10005120C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for ASKBootstrap.TargetType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100805D20 != -1)
    swift_once(&qword_100805D20, sub_10044C32C);
  v7 = type metadata accessor for Bag.Profile(0);
  v8 = sub_10000EFC4(v7, (uint64_t)qword_100868A30);
  v14[3] = &type metadata for ModernAppStateControllerFactory;
  v14[4] = sub_1000530CC();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ASKBootstrap.TargetType.app(_:), v3);
  static ASKBootstrapFactory.make(bagProfile:appStateControllerFactory:targetType:)(v15, v8, v14, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v14);
  v9 = v16;
  v10 = v17;
  sub_100010F08(v15, v16);
  v11 = swift_allocObject(&unk_1007387C8, 24, 7);
  swift_weakInit(v11 + 16, v1);
  a1[3] = v9;
  a1[4] = v10;
  sub_1000119C0(a1);
  v12 = swift_retain(v11);
  dispatch thunk of ASKBootstrapProtocol.withMetricsEventRecorderProducer(_:)(sub_100053134, v11, v9, v10, v12);
  swift_release_n(v11, 2);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
}

uint64_t sub_100051398@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  _BYTE v17[24];

  v4 = type metadata accessor for Bag(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for MetricsTopicProvider(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  BaseObjectGraph.inject<A>(_:)(v6, v4, v4);
  MetricsTopicProvider.init(bag:)(v6);
  v11 = type metadata accessor for InAppMessagesMetricsEventRecorder();
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)(v12 + 32) = MetricsTopicProvider.createEventDecorator()();
  *(_QWORD *)(v12 + 40) = v13;
  sub_100018908(0, 0);
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    *(_QWORD *)(Strong + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_inAppMessagesMetricsEventRecorder) = v12;
    swift_retain(v12);
    swift_release();
    swift_release();
  }
  a2[3] = v11;
  a2[4] = sub_10000E720(&qword_100809EB8, (uint64_t (*)(uint64_t))type metadata accessor for InAppMessagesMetricsEventRecorder, (uint64_t)&protocol conformance descriptor for InAppMessagesMetricsEventRecorder);
  *a2 = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100051538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD v6[5];
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_isBootstrapping) & 1) == 0)
  {
    v1 = v0;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_isBootstrapping) = 1;
    (*(void (**)(void))(*(_QWORD *)v0 + 360))();
    sub_10005120C(v7);
    v2 = v8;
    v3 = v9;
    sub_100010F08(v7, v8);
    dispatch thunk of ASKBootstrapProtocol.start()(v2, v3);
    v4 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
    swift_retain_n(v1, 2);
    v6[3] = v4;
    v6[4] = &protocol witness table for OS_dispatch_queue;
    v6[0] = static OS_dispatch_queue.main.getter(v5);
    Promise.then(perform:orCatchError:on:)(sub_100053028, v1, sub_100053030, v1, v6);
    swift_release();
    swift_release_n(v1, 2);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v6);
    type metadata accessor for ASDInAppPurchaseDatabase(0);
    dispatch thunk of static ASDInAppPurchaseDatabase.refresh()();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v7);
  }
}

void sub_100051648(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  type metadata accessor for ClickMetricsEvent(0);
  v2 = static ClickMetricsEvent.makeErrorRetryEvent()();
  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents);
  swift_beginAccess(a1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents, v8, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v5 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v6 >= v5 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
  v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v2);
  specialized Array._endMutation()(v7);
  swift_endAccess(v8);
  sub_100051538();
}

double sub_1000516F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_1000517E4(*a1);
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 328))();
  dispatch thunk of BaseObjectGraph.name.setter(0x65726F7453707041, 0xE800000000000000, v4);
  v5 = type metadata accessor for NetworkActivity(0);
  v6 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v5, v3, v5, v6);
  sub_1000521D8(v3);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1000517C4(uint64_t a1)
{
  return sub_100052748(a1);
}

uint64_t sub_1000517E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  objc_class *v66;
  id v67;
  __n128 v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t updated;
  id v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  __n128 v81;
  objc_class *v82;
  id v83;
  char *v84;
  uint64_t v85;
  double (*v86)(char *, uint64_t);
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  id v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  __int128 v95;
  Class v96;
  char *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[5];
  id v118[3];
  uint64_t v119;
  void *v120;

  v105 = type metadata accessor for Dependency(0);
  v113 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_100828390);
  __chkstk_darwin(v4);
  v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for MetricsPipeline(0);
  v112 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v103 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v111 = (char *)&v95 - v10;
  v109 = type metadata accessor for ArcadeButtonNameFieldsProvider(0, v9);
  v115 = *(_QWORD *)(v109 - 8);
  v11 = __chkstk_darwin(v109);
  v108 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for ArcadeSubscriptionFieldsProvider(0, v11);
  v114 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MetricsLogger.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for ArtworkLoader(0);
  v19 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 176))();
  v110 = (void *)ArtworkLoader.__allocating_init(cacheLimit:renderIntent:)(v19, 0);
  v20 = sub_100018B6C(0, &qword_100809E68, ASKLoadAvatarResourceOperation_ptr);
  ArtworkLoader.register(resourceLoader:)(v20);
  v21 = sub_10000E720(&qword_100809E70, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsLogger.Configuration, (uint64_t)&protocol conformance descriptor for MetricsLogger.Configuration);
  inject<A>(_:from:)(v15, a1, v15, v21);
  v99 = type metadata accessor for DiagnosticsReporter(0);
  swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
  v106 = (void *)sub_1005EB1B0((uint64_t)v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, (uint64_t)v106 + OBJC_IVAR____TtC20ProductPageExtension19DiagnosticsReporter_configuration, v15);
  v22 = type metadata accessor for MetricsLogger(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = (void *)MetricsLogger.init(loggerName:configuration:)(0x61727473746F6F62, 0xE900000000000070, v18);
  v119 = v22;
  v120 = &protocol witness table for MetricsLogger;
  v118[0] = v23;
  v24 = swift_retain(v23);
  ReplayLogger.replay(last:messagesInto:)(20, v118, v24);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v118);
  sub_1005EAA04();
  v25 = type metadata accessor for ASKBagContract(0);
  v26 = type metadata accessor for BaseObjectGraph(0);
  v27 = inject<A, B>(_:from:)(v25, a1, v25, v26);
  v102 = v118[0];
  v28 = ASKBagContract.arcadeProductFamilyId.getter(v27);
  v30 = v29;
  v31 = sub_100018B6C(0, (unint64_t *)&qword_10080AC60, ACAccountStore_ptr);
  inject<A, B>(_:from:)(v31, a1, v31, v26);
  v32 = v118[0];
  v33 = objc_msgSend((id)objc_opt_self(ASDSubscriptionEntitlements), "sharedInstance");
  v119 = sub_100018B6C(0, &qword_100809E78, ASDSubscriptionEntitlements_ptr);
  v120 = &protocol witness table for ASDSubscriptionEntitlements;
  v118[0] = v33;
  v117[3] = v31;
  v117[4] = &protocol witness table for ACAccountStore;
  v117[0] = v32;
  v96 = (Class)type metadata accessor for ArcadeSubscriptionManager(0);
  v34 = objc_allocWithZone(v96);
  v101 = v32;
  v35 = (id)ArcadeSubscriptionManager.init(arcadeSubscriptionFamilyId:subscriptionEntitlements:activeStoreAccountProvider:)(v28, v30, v118, v117);
  v97 = v14;
  ArcadeSubscriptionFieldsProvider.init(arcadeSubscriptionManager:)();
  v36 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
  inject<A, B>(_:from:)(v36, a1, v36, v26);
  v38 = v118[0];
  v37 = v118[1];
  v98 = v118[0];
  v39 = v35;
  v40 = swift_unknownObjectRetain(v38);
  v41 = v108;
  ArcadeButtonNameFieldsProvider.init(arcadeSubscriptionManager:appStateController:)(v39, v38, v37, v40);
  v42 = sub_10000DAF8(&qword_100809E80);
  v43 = sub_10000DAF8(&qword_100809E88);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(_QWORD *)(v44 + 72);
  v46 = *(unsigned __int8 *)(v44 + 80);
  v47 = (v46 + 32) & ~v46;
  v48 = swift_allocObject(v42, v47 + v45, v46 | 7);
  v95 = xmmword_100640720;
  *(_OWORD *)(v48 + 16) = xmmword_100640720;
  v49 = (_QWORD *)(v48 + v47 + *(int *)(v43 + 48));
  static MetricsFieldInclusionRequest.arcadeButtonName.getter();
  v50 = v109;
  v49[3] = v109;
  v49[4] = sub_10000E720(&qword_100809E90, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeButtonNameFieldsProvider, (uint64_t)&protocol conformance descriptor for ArcadeButtonNameFieldsProvider);
  v51 = sub_1000119C0(v49);
  (*(void (**)(_QWORD *, char *, uint64_t))(v115 + 16))(v51, v41, v50);
  v52 = sub_10050A140(v48);
  v53 = sub_10000DAF8(&qword_100809E98);
  v54 = sub_10000DAF8(&qword_100809EA0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(_QWORD *)(v55 + 72);
  v57 = *(unsigned __int8 *)(v55 + 80);
  v58 = (v57 + 32) & ~v57;
  v59 = swift_allocObject(v53, v58 + v56, v57 | 7);
  *(_OWORD *)(v59 + 16) = v95;
  v60 = (_QWORD *)(v59 + v58 + *(int *)(v54 + 48));
  static MetricsFieldExclusionRequest.arcadeSubscription.getter();
  v61 = v107;
  v60[3] = v107;
  v60[4] = sub_10000E720(&qword_100809EA8, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSubscriptionFieldsProvider, (uint64_t)&protocol conformance descriptor for ArcadeSubscriptionFieldsProvider);
  v62 = sub_1000119C0(v60);
  (*(void (**)(_QWORD *, char *, uint64_t))(v114 + 16))(v62, v14, v61);
  v63 = sub_10050A164(v59);
  v64 = v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v6, 1, 1, v116);
  v65 = v111;
  static MetricsPipeline.newPipelineWithFieldsProviders(optInProviders:optOutProviders:fallbackTo:asPartOf:)(v52, v63, v6, a1);
  swift_bridgeObjectRelease(v52);
  swift_bridgeObjectRelease(v63);
  sub_100010F2C((uint64_t)v6, &qword_100828390);
  v66 = (objc_class *)type metadata accessor for EventStoreManager();
  v67 = objc_msgSend(objc_allocWithZone(v66), "init");
  type metadata accessor for ObjectGraph(0);
  v68 = swift_retain(a1);
  *(_QWORD *)&v95 = BaseObjectGraph.__allocating_init(_:)(v68);
  v69 = sub_10000DAF8(&qword_100810390);
  v70 = (_OWORD *)swift_allocObject(v69, ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ 6 * *(_QWORD *)(v113 + 72), *(unsigned __int8 *)(v113 + 80) | 7);
  v70[1] = xmmword_100640730;
  v118[0] = v110;
  swift_retain(v110);
  Dependency.init<A>(satisfying:with:)(v100, v118, v100);
  updated = type metadata accessor for UpdateStore(0);
  v118[0] = (id)static UpdateStore.shared.getter();
  Dependency.init<A>(satisfying:with:)(updated, v118, updated);
  v118[0] = v106;
  swift_retain(v106);
  Dependency.init<A>(satisfying:with:)(v99, v118, v99);
  v118[0] = v39;
  v72 = v39;
  Dependency.init<A>(satisfying:with:)(v96, v118, v96);
  v73 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v74 = v103;
  v75 = v65;
  v76 = v116;
  v73(v103, v75, v116);
  Dependency.init<A>(satisfying:with:)(v76, v74, v76);
  v118[0] = v67;
  v77 = v67;
  Dependency.init<A>(satisfying:with:)(v66, v118, v66);
  v118[0] = v70;
  v78 = sub_10000DAF8(&qword_100809E50);
  v79 = sub_100053034();
  v80 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v118, v78, v79);
  swift_bridgeObjectRelease(v70);
  swift_release();
  v81 = swift_retain(v80);
  dispatch thunk of BaseObjectGraph.name.setter(1701998403, 0xE400000000000000, v81);
  v82 = (objc_class *)type metadata accessor for UnifiedTabBadgingManager(0);
  v118[0] = objc_msgSend(objc_allocWithZone(v82), "init");
  v83 = v118[0];
  v84 = v104;
  Dependency.init<A>(satisfying:with:)(v82, v118, v82);
  v85 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v84);
  swift_release_n(v80, 2);
  v86 = *(double (**)(char *, uint64_t))(v113 + 8);
  v87 = v105;
  v88.n128_f64[0] = v86(v84, v105);
  v89 = type metadata accessor for AppStoreEngagementManager(0, v88);
  swift_allocObject(v89, *(unsigned int *)(v89 + 48), *(unsigned __int16 *)(v89 + 52));
  v90 = v72;
  v91 = swift_retain(v85);
  v118[0] = (id)AppStoreEngagementManager.init(objectGraph:subscriptionManager:)(v91);
  swift_retain(v118[0]);
  Dependency.init<A>(satisfying:with:)(v89, v118, v89);
  v92 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v84);

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  v93 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v86)(v84, v87, v93);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v116);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v108, v109);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v97, v107);
  return v92;
}

void sub_1000521D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t started;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  id v24;
  char v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD v66[5];
  char v67[32];

  v2 = v1;
  started = type metadata accessor for StartUpPerformanceEvent.Checkpoint(0);
  v57 = *(_QWORD *)(started - 8);
  v58 = started;
  __chkstk_darwin(started);
  v56 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for Bag(0);
  __chkstk_darwin(v61);
  v63 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_100828390);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricsPipeline(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v64 = (char *)&v55 - v16;
  v17 = type metadata accessor for ASKBagContract(0);
  v18 = *(_QWORD *)(a1 + qword_10086B3D8);
  if (!v18)
    goto LABEL_10;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = swift_retain(v18);
  NetworkActivity.delegate.setter(Strong, v20, v21);
  type metadata accessor for AutoPlayVideoSettingsManager(0);
  v22 = (void *)static AutoPlayVideoSettingsManager.shared.getter();
  v23 = ASKBagContract.defaultAutoPlayVideoSetting.getter();
  dispatch thunk of AutoPlayVideoSettingsManager.defaultAutoPlayVideoSetting.setter(v23);

  v24 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v62 = v18;
  v25 = ASKBagContract.isQRCodeBadgingEnabled.getter();
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setBool:forKey:", v25 & 1, v26);

  v27 = a1 + qword_10086B3E0;
  swift_beginAccess(a1 + qword_10086B3E0, v67, 0, 0);
  sub_100053080(v27, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100010F2C((uint64_t)v11, &qword_100828390);
    v17 = v12;
    v54 = v12;
    goto LABEL_12;
  }
  v28 = (uint64_t)v64;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v64, v11, v12);
  v29 = v2;
  sub_100050FE4(v28);
  v30 = type metadata accessor for PageRenderMetricsEvent(0);
  v31 = Date.init()(v30);
  v32 = Date.timeIntervalSince1970.getter(v31);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v8, v65);
  v34 = static PageRenderMetricsEvent.lastInteractionTime.setter(v33, v32);
  static PageRenderEvent.willPerformAction()(v34);
  v35 = v13;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v37 = v28;
  v38 = v59;
  v65 = v12;
  v36(v59, v28, v12);
  v39 = type metadata accessor for ArcadeAccountEventGenerator(0);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v40 = ArcadeAccountEventGenerator.init(metricsPipeline:)(v38);
  v17 = type metadata accessor for ArcadeSubscriptionManager(0);
  v41 = *(void **)(a1 + qword_10086B3D0);
  if (!v41)
  {
LABEL_10:
    v54 = v17;
LABEL_12:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v17, v54);
    __break(1u);
    return;
  }
  swift_retain_n(v40, 2);
  v42 = v41;
  ArcadeSubscriptionManager.addSubscriptionStateObserver(_:action:)(v40, &j___s19AppStoreKitInternal27ArcadeAccountEventGeneratorC20arcadeStateDidChangeyyFTj, v40, v43);
  swift_release_n(v40, 2);
  v44 = type metadata accessor for CommerceDialogHandler(0);
  BaseObjectGraph.optional<A>(_:)(v66, v44, v44);
  v45 = (void *)v66[0];
  if (v66[0])
  {
    CommerceDialogHandler.isActive.setter(1);

  }
  type metadata accessor for JSFreshnessWatchdog(0);
  v46 = type metadata accessor for ObjectGraph(0);
  v47 = v63;
  inject<A, B>(_:from:)(v61, a1, v61, v46);
  v48 = sub_10000DAF8(&qword_100809E60);
  inject<A, B>(_:from:)(v48, a1, v48, v46);
  v49 = JSFreshnessWatchdog.__allocating_init(bag:networkInquiry:)(v47, v66);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v29 + 368))(a1, v49);
  static PendingAppLaunch.didFinishLaunch(postEventUsing:)(v37);
  v50 = type metadata accessor for StartUpPerformanceEvent(0);
  BaseObjectGraph.optional<A>(_:)(v66, v50, v50);
  v51 = v66[0];
  if (v66[0])
  {
    v52 = swift_retain(v66[0]);
    v53 = v56;
    static StartUpPerformanceEvent.Checkpoint.bootstrapFinished.getter(v52);
    StartUpPerformanceEvent.record(checkpoint:)(v53);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n(v51, 2);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v58);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v65);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v65);
    swift_release();

    swift_release();
    swift_release();
  }
  *(_BYTE *)(v29 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_isBootstrapping) = 0;
}

uint64_t sub_100052748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[8];
  _QWORD v23[4];

  v2 = v1;
  v4 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v5 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 2 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD000000000000030, 0x8000000100687BB0);
  swift_getErrorValue(a1, v22, &v20);
  v7 = v20;
  v8 = v21;
  v23[3] = v21;
  v9 = sub_1000119C0(v23);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, v7, v8);
  static LogMessage.safe(_:)(v23);
  sub_100010F2C((uint64_t)v23, &qword_100808F20);
  v10 = type metadata accessor for CompoundLogger(0);
  Logger.error(_:)(v6, v10, &protocol witness table for CompoundLogger);
  swift_bridgeObjectRelease(v6);
  v11 = type metadata accessor for PageMetricsEvent(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  swift_errorRetain(a1);
  v12 = PageMetricsEvent.init(error:pageUrl:)(a1, 0, 0);
  v13 = (_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents);
  swift_beginAccess(v13, v23, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v12);
  specialized Array._endMutation()(v17);
  v18 = swift_endAccess(v23);
  static PendingAppLaunch.didFailToLaunch()(v18);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_isBootstrapping) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 376))(a1);
}

uint64_t sub_10005293C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(__n128);
  __n128 v17;
  void *v18;
  uint64_t v19;
  double *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for Bag(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for Dependency(0);
  v8 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v46 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v47 = (char *)&v45 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_inAppMessagesMetricsEventRecorder);
  v48 = a1;
  if (v15)
  {
    v45 = v5;
    v16 = *(uint64_t (**)(__n128))(*(_QWORD *)v1 + 144);
    swift_retain(v15);
    v17 = swift_retain(a1);
    v18 = (void *)v16(v17);
    v19 = type metadata accessor for InAppMessagesManager();
    swift_allocObject(v19, 56, 7);
    swift_retain(v15);
    v50 = sub_1002D4928(a1, v18, v15);
    swift_retain(v50);
    Dependency.init<A>(satisfying:with:)(v19, &v50, v19);
    v20 = (double *)sub_1003DAF88(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v22 = *((_QWORD *)v20 + 2);
    v21 = *((_QWORD *)v20 + 3);
    if (v22 >= v21 >> 1)
      v20 = (double *)sub_1003DAF88(v21 > 1, v22 + 1, 1, (unint64_t)v20);
    *((_QWORD *)v20 + 2) = v22 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v20+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v22, v14, v49);
    swift_release();
    swift_release();
    a1 = v48;
    v5 = v45;
  }
  else
  {
    v20 = _swiftEmptyArrayStorage;
  }
  v23 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v4, a1, v4, v23);
  v24 = (void *)(*(uint64_t (**)(char *))(*(_QWORD *)v2 + 272))(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v25 = v47;
  if (v24)
  {
    v26 = type metadata accessor for CommerceDialogHandler(0);
    v50 = (uint64_t)v24;
    v27 = v24;
    Dependency.init<A>(satisfying:with:)(v26, &v50, v26);
    if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      v20 = (double *)sub_1003DAF88(0, *((_QWORD *)v20 + 2) + 1, 1, (unint64_t)v20);
    v29 = *((_QWORD *)v20 + 2);
    v28 = *((_QWORD *)v20 + 3);
    if (v29 >= v28 >> 1)
      v20 = (double *)sub_1003DAF88(v28 > 1, v29 + 1, 1, (unint64_t)v20);
    *((_QWORD *)v20 + 2) = v29 + 1;
    v30 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v31 = *(_QWORD *)(v8 + 72);
    v32 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
    v33 = v32((char *)v20 + v30 + v31 * v29, v25, v49);
    v34 = CommerceDialogHandler.presentingViewController.getter(v33);
    if (v34)
    {
      v35 = (void *)v34;
      v36 = type metadata accessor for UserNotificationsManager(0);
      swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
      swift_retain(a1);
      v37 = v35;
      v50 = UserNotificationsManager.init(objectGraph:rootViewController:)(a1, v37);
      swift_retain(v50);
      v38 = v46;
      Dependency.init<A>(satisfying:with:)(v36, &v50, v36);
      v40 = *((_QWORD *)v20 + 2);
      v39 = *((_QWORD *)v20 + 3);
      if (v40 >= v39 >> 1)
        v20 = (double *)sub_1003DAF88(v39 > 1, v40 + 1, 1, (unint64_t)v20);
      *((_QWORD *)v20 + 2) = v40 + 1;
      v32((char *)v20 + v30 + v40 * v31, v38, v49);
      swift_release();

    }
  }
  v50 = (uint64_t)v20;
  v41 = sub_10000DAF8(&qword_100809E50);
  v42 = sub_100053034();
  v43 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(&v50, v41, v42);
  swift_bridgeObjectRelease(v20);
  return v43;
}

void sub_100052D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  Swift::String v11;
  void *v12;

  v7 = *v3;
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease(0xE000000000000000);
  v8._countAndFlagsBits = StaticString.description.getter(a1, a2, a3);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 0xD000000000000017;
  v10._object = (void *)0x8000000100687B90;
  String.append(_:)(v10);
  v11._countAndFlagsBits = _typeName(_:qualified:)(v7, 0);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x8000000100687B70, "ProductPageExtension/BaseBootstrap.swift", 40, 2, 414, 0);
  __break(1u);
}

void sub_100052E6C()
{
  sub_100052D74((uint64_t)"presentControllers(asPartOf:freshnessWatchdog:)", 47, 2);
}

void sub_100052E88()
{
  sub_100052D74((uint64_t)"present(bootstrapError:)", 24, 2);
}

uint64_t sub_100052EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100010D1C(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_logger;
  v2 = type metadata accessor for CompoundLogger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingMetricsLogger));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_diagnosticsRecorder));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_pendingEvents));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension13BaseBootstrap_inAppMessagesMetricsEventRecorder));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100052F3C()
{
  return type metadata accessor for BaseBootstrap(0);
}

uint64_t type metadata accessor for BaseBootstrap(uint64_t a1)
{
  uint64_t result;

  result = qword_100809C98;
  if (!qword_100809C98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BaseBootstrap);
  return result;
}

uint64_t sub_100052F80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100642398;
  result = type metadata accessor for CompoundLogger(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = &unk_1006423B0;
    v4[6] = &unk_1006423C8;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_100053028(uint64_t *a1)
{
  uint64_t v1;

  return sub_1000516F8(a1, v1);
}

unint64_t sub_100053034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809E58;
  if (!qword_100809E58)
  {
    v1 = sub_100010DE0(&qword_100809E50);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100809E58);
  }
  return result;
}

uint64_t sub_100053080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100828390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000530CC()
{
  unint64_t result;

  result = qword_100809EB0;
  if (!qword_100809EB0)
  {
    result = swift_getWitnessTable(&unk_100640780, &type metadata for ModernAppStateControllerFactory);
    atomic_store(result, (unint64_t *)&qword_100809EB0);
  }
  return result;
}

uint64_t sub_100053110()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100053134@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100051398(v1, a1);
}

int64x2_t sub_10005313C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4046000000000000uLL);
  xmmword_100809EC0 = (__int128)result;
  return result;
}

void sub_100053154()
{
  qword_100809ED0 = 0x4024000000000000;
}

void sub_100053164()
{
  qword_100809ED8 = 0x402C000000000000;
}

id sub_100053174()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 0.0, 1.0, 1.0);
  qword_100809EE0 = (uint64_t)result;
  return result;
}

id sub_1000531B4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 350.0, 38.0, 0.0, 0.0);
  qword_100809EE8 = (uint64_t)result;
  return result;
}

void sub_100053204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void *v52;
  id v53;
  void *v54;
  double v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  id v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t i;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  objc_class *ObjectType;
  uint64_t v90;
  uint64_t v91;
  _OWORD v92[2];
  _QWORD v93[3];
  objc_class *v94;
  objc_super v95;

  v4 = v3;
  v90 = a3;
  v81 = a2;
  v91 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v88 = type metadata accessor for CornerStyle(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v87 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v6);
  v85 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for AutomationSemantics(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel;
  *(_QWORD *)v15 = UIFontTextStyleSubheadline;
  *((UIFontWeight *)v15 + 1) = UIFontWeightSemibold;
  v17 = enum case for FontUseCase.preferredFontDerivative(_:);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v15, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v20 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v21 = v4;
  v22 = UIFontTextStyleSubheadline;
  *(_QWORD *)&v4[v16] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v12, 0, 0);
  v23 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_shadowView;
  v24 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v21[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");
  v25 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_artworkView;
  v26 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v21[v25] = static ArtworkView.iconArtworkView.getter(v26);
  v27 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_backgroundView;
  v28 = type metadata accessor for RoundedCornerView(0);
  *(_QWORD *)&v21[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v28)), "init");
  v29 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_selectedBackgroundView;
  *(_QWORD *)&v21[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v30 = &v21[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_action];
  v31 = v90;
  v32 = v91;
  *(_QWORD *)v30 = v81;
  *((_QWORD *)v30 + 1) = v31;
  *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_category] = v32;
  swift_retain(v31);
  swift_retain(v32);

  v95.receiver = v21;
  v95.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v95, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v34 = ArcadeDownloadPackCategory.id.getter();
  v94 = (objc_class *)&type metadata for String;
  v93[0] = v34;
  v93[1] = v35;
  memset(v92, 0, sizeof(v92));
  v36 = v82;
  static AutomationSemantics.shelfItem(itemKind:id:parentId:)(0xD00000000000001ALL, 0x8000000100687CB0, v93, v92);
  sub_10001282C((uint64_t)v92);
  sub_10001282C((uint64_t)v93);
  UIView.setAutomationSemantics(_:)(v36);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v36, v84);
  objc_msgSend(v33, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v33, "addSubview:", *(_QWORD *)((char *)v33 + OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_shadowView));
  v83 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_backgroundView;
  v37 = *(void **)((char *)v33 + OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_backgroundView);
  objc_msgSend(v33, "addSubview:", v37);
  v84 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_selectedBackgroundView;
  objc_msgSend(v37, "addSubview:", *(_QWORD *)((char *)v33+ OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_selectedBackgroundView));
  v38 = *(void **)((char *)v33 + OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_artworkView);
  objc_msgSend(v33, "addSubview:", v38);
  v39 = (void *)objc_opt_self(UIColor);
  v40 = v38;
  ArtworkView.placeholderColor.setter(objc_msgSend(v39, "clearColor"));

  v82 = (char *)OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel;
  objc_msgSend(v33, "addSubview:", *(_QWORD *)((char *)v33 + OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel));
  if (qword_100804B18 != -1)
    swift_once(&qword_100804B18, sub_100141538);
  v41 = type metadata accessor for Shadow(0);
  v42 = sub_10000EFC4(v41, (uint64_t)qword_1008655C8);
  v43 = *(_QWORD *)(v41 - 8);
  v44 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v85, v42, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v41);
  dispatch thunk of ShadowView.shadow.setter(v44);
  if (qword_100804638 != -1)
    swift_once(&qword_100804638, sub_100053164);
  v45 = *(double *)&qword_100809ED8;
  v46 = enum case for CornerStyle.continuous(_:);
  v47 = v86;
  v48 = v87;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 104);
  v50 = v88;
  v49(v87, enum case for CornerStyle.continuous(_:), v88);
  dispatch thunk of ShadowView.setCorner(radius:style:)(v48, v45);
  v51 = *(void (**)(char *, uint64_t))(v47 + 8);
  v51(v48, v50);
  v52 = *(void **)((char *)v33 + v83);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v53 = v52;
  v54 = (void *)static UIColor.placeholderBackgroundStandout.getter();
  objc_msgSend(v53, "setBackgroundColor:", v54);

  v55 = *(double *)&qword_100809ED8;
  v49(v48, v46, v50);
  dispatch thunk of RoundedCornerView.setCorner(radius:style:)(v48, v55);
  v51(v48, v50);
  v56 = v82;
  v57 = *(id *)&v82[(_QWORD)v33];
  ArcadeDownloadPackCategory.title.getter();
  v59 = v58;
  v60 = String._bridgeToObjectiveC()();
  objc_msgSend(v57, "setText:", v60, swift_bridgeObjectRelease(v59).n128_f64[0]);

  v61 = *(id *)&v56[(_QWORD)v33];
  v62 = (void *)static UIColor.primaryText.getter(v61);
  objc_msgSend(v61, "setTextColor:", v62);

  v63 = *(void **)((char *)v33 + v84);
  objc_msgSend(v63, "setHidden:", 1);
  v64 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v65 = swift_allocObject(v64, 48, 7);
  *(_OWORD *)(v65 + 16) = xmmword_1006423E0;
  v66 = v63;
  *(_QWORD *)(v65 + 32) = ArcadeDownloadPackCategory.gradientStartColor.getter();
  v67 = ArcadeDownloadPackCategory.gradientEndColor.getter();
  *(_QWORD *)(v65 + 40) = v67;
  v93[0] = v65;
  specialized Array._endMutation()(v67);
  v68 = *(_QWORD *)&v66[OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors];
  *(_QWORD *)&v66[OBJC_IVAR____TtC20ProductPageExtension12GradientView_colors] = v93[0];
  swift_bridgeObjectRelease(v68);
  sub_10017F014();

  v69 = objc_msgSend(v33, "subviews");
  v70 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, v70);

  if (!((unint64_t)v71 >> 62))
  {
    v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v71);
    if (v72)
      goto LABEL_7;
LABEL_17:
    objc_msgSend(v33, "addTarget:action:forControlEvents:", v33, "didTap", 64, swift_bridgeObjectRelease_n(v71, 2).n128_f64[0]);
    objc_msgSend(v33, "addTarget:action:forControlEvents:", v33, "didPress:", 1);
    objc_msgSend(v33, "addTarget:action:forControlEvents:", v33, "didRelease:", 480);
    v77 = sub_10000DAF8((uint64_t *)&unk_10080B800);
    v78 = swift_allocObject(v77, 48, 7);
    *(_OWORD *)(v78 + 16) = xmmword_100640720;
    *(_QWORD *)(v78 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v78 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v94 = ObjectType;
    v93[0] = v33;
    v79 = v33;
    UIView.registerForTraitChanges(_:target:action:)(v78, v93, "invalidateMeasurements");
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease(v78);
    swift_release();
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v93);
    return;
  }
  if (v71 < 0)
    v76 = v71;
  else
    v76 = v71 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v71);
  v72 = _CocoaArrayWrapper.endIndex.getter(v76);
  if (!v72)
    goto LABEL_17;
LABEL_7:
  if (v72 >= 1)
  {
    for (i = 0; i != v72; ++i)
    {
      if ((v71 & 0xC000000000000001) != 0)
        v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v71);
      else
        v74 = *(id *)(v71 + 8 * i + 32);
      v75 = v74;
      objc_msgSend(v74, "setUserInteractionEnabled:", 0);

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_100053BE4()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  objc_super v6;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_selectedBackgroundView];
  v7.receiver = v0;
  v7.super_class = ObjectType;
  objc_msgSend(v2, "setHidden:", objc_msgSendSuper2(&v7, "isSelected") ^ 1);
  v3 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel];
  v6.receiver = v0;
  v6.super_class = ObjectType;
  if (objc_msgSendSuper2(&v6, "isSelected"))
  {
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
  }
  else
  {
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v4 = (id)static UIColor.primaryText.getter();
  }
  v5 = v4;
  objc_msgSend(v3, "setTextColor:", v4);

}

id sub_100053CD8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_100053D54(char a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  void *v5;
  double v6;
  void *v7;
  double v8;
  objc_super v10;
  objc_super v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v12.receiver = v2;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, "setEnabled:", a1 & 1);
  v5 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel];
  v11.receiver = v2;
  v11.super_class = ObjectType;
  if (objc_msgSendSuper2(&v11, "isEnabled"))
    v6 = 1.0;
  else
    v6 = 0.4;
  objc_msgSend(v5, "setAlpha:", v6);
  v7 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_artworkView];
  v10.receiver = v2;
  v10.super_class = ObjectType;
  if (objc_msgSendSuper2(&v10, "isEnabled"))
    v8 = 1.0;
  else
    v8 = 0.4;
  return objc_msgSend(v7, "setAlpha:", v8);
}

uint64_t sub_100053E28@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];
  _QWORD v46[3];
  void *v47;
  void *v48;
  _QWORD v49[3];
  uint64_t v50;
  void *v51;

  v42 = a1;
  v2 = type metadata accessor for Resize.Rule(0);
  v36 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v38 = (char *)&v35 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v39 = type metadata accessor for HorizontalStack(0);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v35 - v16;
  HorizontalStack.init(with:)(sub_10005421C, 0, v15);
  v41 = v1;
  v18 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_artworkView);
  v47 = (void *)type metadata accessor for ArtworkView(0);
  v48 = (void *)sub_1000549D4();
  v46[0] = v18;
  v19 = qword_100804628;
  v20 = v18;
  if (v19 != -1)
    swift_once(&qword_100804628, sub_10005313C);
  v21 = xmmword_100809EC0;
  *((_QWORD *)v11 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v11 + 4) = &protocol witness table for CGFloat;
  *(_QWORD *)v11 = v21;
  v22 = enum case for Resize.Rule.replaced(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 104);
  v23(v11, enum case for Resize.Rule.replaced(_:), v2);
  v24 = *((_QWORD *)&xmmword_100809EC0 + 1);
  *((_QWORD *)v8 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v8 + 4) = &protocol witness table for CGFloat;
  *(_QWORD *)v8 = v24;
  v23(v8, v22, v2);
  v25 = enum case for Resize.Rule.unchanged(_:);
  v26 = v38;
  v23(v38, enum case for Resize.Rule.unchanged(_:), v2);
  v27 = v40;
  v23(v40, v25, v2);
  v50 = type metadata accessor for Resize(0);
  v51 = &protocol witness table for Resize;
  sub_1000119C0(v49);
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v46, v11, v8, v26, v27);
  HorizontalStack.adding(_:with:)(v49, sub_100054A1C, 0);
  v28 = *(void (**)(char *, uint64_t))(v37 + 8);
  v29 = v39;
  v28(v13, v39);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v49);
  v30 = *(void **)(v41 + OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel);
  v47 = (void *)type metadata accessor for DynamicTypeLabel(0);
  v48 = &protocol witness table for UILabel;
  v46[0] = v30;
  v50 = v29;
  v51 = &protocol witness table for HorizontalStack;
  sub_1000119C0(v49);
  v31 = v30;
  HorizontalStack.adding(_:with:)(v46, 0, 0);
  v28(v17, v29);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v46);
  if (qword_100804630 != -1)
    swift_once(&qword_100804630, sub_100053154);
  v47 = &type metadata for CGFloat;
  v48 = &protocol witness table for CGFloat;
  v46[0] = qword_100809ED0;
  v45[3] = &type metadata for CGFloat;
  v45[4] = &protocol witness table for CGFloat;
  v45[0] = qword_100809ED0;
  v44[3] = &type metadata for CGFloat;
  v44[4] = &protocol witness table for CGFloat;
  v44[0] = qword_100809ED0;
  v43[3] = &type metadata for CGFloat;
  v43[4] = &protocol witness table for CGFloat;
  v43[0] = qword_100809ED0;
  v32 = type metadata accessor for Margins(0);
  v33 = v42;
  v42[3] = v32;
  v33[4] = &protocol witness table for Margins;
  sub_1000119C0(v33);
  return Margins.init(_:top:leading:bottom:trailing:)(v49, v46, v45, v44, v43);
}

uint64_t sub_10005421C()
{
  return HorizontalStack.Properties.alignment.setter(1);
}

id sub_100054310()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v20.receiver = v0;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "layoutSubviews");
  sub_100053E28(v17);
  v3 = v18;
  v4 = v19;
  sub_100010F08(v17, v18);
  v5 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = objc_msgSend(v0, "traitCollection");
  dispatch thunk of Placeable.place(at:with:)(v12, v3, v4, v5, v7, v9, v11);

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  v13 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_shadowView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v13, "setFrame:");
  v14 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_backgroundView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v14, "setFrame:");
  v15 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_selectedBackgroundView];
  objc_msgSend(v14, "bounds");
  return objc_msgSend(v15, "setFrame:");
}

void sub_1000545E8(void *a1)
{
  uint64_t ObjectType;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  ObjectType = swift_getObjectType();
  if (qword_100804640 != -1)
    swift_once(&qword_100804640, sub_100053174);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_100809EE0, 0.08);
  v4 = swift_allocObject(&unk_100738840, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = ObjectType;
  v8[4] = sub_100054E84;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000924A0;
  v8[3] = &unk_100738858;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  objc_msgSend(v3, "addAnimations:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  objc_msgSend(v3, "startAnimation");

}

id sub_100054714(void *a1)
{
  CGAffineTransform v3;

  CGAffineTransformMakeScale(&v3, 0.9, 0.9);
  return objc_msgSend(a1, "setTransform:", &v3);
}

uint64_t type metadata accessor for ArcadeDownloadPackCategoryButton()
{
  return objc_opt_self(_TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton);
}

double sub_100054920(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_100053E28(v10);
  v6 = v11;
  v7 = v12;
  sub_100010F08(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v10);
  return v8;
}

id sub_1000549C4()
{
  id *v0;

  return objc_msgSend(*v0, "setFrame:");
}

unint64_t sub_1000549D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100810F20;
  if (!qword_100810F20)
  {
    v1 = type metadata accessor for ArtworkView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkView, v1);
    atomic_store(result, (unint64_t *)&qword_100810F20);
  }
  return result;
}

uint64_t sub_100054A1C()
{
  _QWORD v1[5];

  if (qword_100804630 != -1)
    swift_once(&qword_100804630, sub_100053154);
  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = qword_100809ED0;
  return HorizontalStack.Properties.trailingSpacing.setter(v1);
}

void sub_100054A90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_titleLabel;
  *(_QWORD *)v8 = UIFontTextStyleSubheadline;
  *((UIFontWeight *)v8 + 1) = UIFontWeightSemibold;
  v10 = enum case for FontUseCase.preferredFontDerivative(_:);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v13 = UIFontTextStyleSubheadline;
  *(_QWORD *)&v1[v9] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 2, 0, 1, 0, v5, 0, 0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_shadowView;
  v15 = type metadata accessor for ShadowView(0);
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  v16 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_artworkView;
  type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v1[v16] = static ArtworkView.iconArtworkView.getter();
  v17 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_backgroundView;
  v18 = type metadata accessor for RoundedCornerView(0);
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
  v19 = OBJC_IVAR____TtC20ProductPageExtension32ArcadeDownloadPackCategoryButton_selectedBackgroundView;
  *(_QWORD *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/ArcadeDownloadPackCategoryButton.swift", 59, 2, 94, 0);
  __break(1u);
}

void sub_100054CCC(void *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  if (qword_100804648 != -1)
    swift_once(&qword_100804648, sub_1000531B4);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_100809EE8, 0.5);
  v3 = swift_allocObject(&unk_1007387F0, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v7[4] = sub_100054E0C;
  v8 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000924A0;
  v7[3] = &unk_100738808;
  v4 = _Block_copy(v7);
  v5 = v8;
  v6 = a1;
  objc_msgSend(v2, "addAnimations:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  objc_msgSend(v2, "startAnimation");

}

uint64_t sub_100054DE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100054E0C()
{
  uint64_t v0;
  void *v1;
  _QWORD v3[6];

  v1 = *(void **)(v0 + 16);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return objc_msgSend(v1, "setTransform:", v3);
}

uint64_t sub_100054E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100054E58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100054E60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100054E84()
{
  uint64_t v0;

  return sub_100054714(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for ThemeDeprecated()
{
  return objc_opt_self(_TtC20ProductPageExtension15ThemeDeprecated);
}

double sub_100054EB4(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_10016B9EC(a2, a3, *a1, a8);
}

id sub_100054EC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _BYTE *v6;

  if (v6[OBJC_IVAR____TtC20ProductPageExtension32UpsellBreakoutCollectionViewCell_shouldApplyBreakoutData] == 1)
  {
    v6[OBJC_IVAR____TtC20ProductPageExtension32UpsellBreakoutCollectionViewCell_shouldApplyBreakoutData] = 0;
    sub_10016A234(*a1, a4, a3, a6);
  }
  return objc_msgSend(v6, "setNeedsLayout");
}

uint64_t sub_100054F24()
{
  uint64_t v0;

  v0 = dispatch thunk of UpsellBreakout.clickAction.getter();
  swift_release(v0);
  if (v0)
    return 3;
  else
    return 0;
}

void sub_100054F58(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v5;
  double v6;

  objc_msgSend(v2, "bounds");
  sub_100169D3C(a1, a2, v5, v6);
}

void sub_100054FB8(uint64_t a1, uint64_t a2, char a3)
{
  sub_100054FF8(a1, a3);
}

id sub_100054FC0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_10016C110(a1, a4, a6);
}

uint64_t sub_100054FCC()
{
  return sub_10000E720(&qword_100809FE8, (uint64_t (*)(uint64_t))&type metadata accessor for UpsellBreakout, (uint64_t)&protocol conformance descriptor for UpsellBreakout);
}

void sub_100054FF8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension32UpsellBreakoutCollectionViewCell_upsellBreakoutView);
  v5 = *(void **)(v4 + OBJC_IVAR____TtC20ProductPageExtension18UpsellBreakoutView_artworkView);
  v6 = type metadata accessor for ArtworkView(0);
  v7 = sub_10000E720((unint64_t *)&qword_100806FE0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v8 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v8, 1, v6, v7);

  v9 = *(void **)(*(_QWORD *)(*(_QWORD *)(v4
                                        + OBJC_IVAR____TtC20ProductPageExtension18UpsellBreakoutView_mediaViewContainer)
                            + OBJC_IVAR____TtC20ProductPageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC20ProductPageExtensionP33_FB55F4AFA9572A544272989A93E5CCC820UberContentContainer_contents);
  if (v9)
  {
    v10 = type metadata accessor for VideoView(0);
    v11 = swift_dynamicCastClass(v9, v10);
    if (v11)
    {
      v12 = v11;
      v13 = sub_10000E720((unint64_t *)&unk_100807FB0, type metadata accessor for VideoView, (uint64_t)&unk_10066C71C);
      v14 = v9;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v12, a2 & 1, v10, v13);

    }
  }
}

void sub_10005513C()
{
  qword_10080A038 = 0x4032000000000000;
}

void sub_10005514C()
{
  qword_100864998 = 0x404F000000000000;
}

char *sub_10005515C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_class *v23;
  id v24;
  double left;
  double bottom;
  double right;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  objc_super v34;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon;
  type metadata accessor for ArtworkView(0);
  v17 = v4;
  *(_QWORD *)&v4[v16] = static ArtworkView.iconArtworkView.getter();
  v18 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_titleLabel;
  if (qword_1008065A0 != -1)
    swift_once(&qword_1008065A0, sub_1004C95E8);
  v19 = type metadata accessor for FontUseCase(0);
  v20 = sub_10000EFC4(v19, (uint64_t)qword_10086A1B8);
  v21 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v15, v20, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v22 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v17[v18] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 1, 0, 1, 0, v12, 0, 0);

  v23 = (objc_class *)type metadata accessor for BundleChildView();
  v34.receiver = v17;
  v34.super_class = v23;
  v24 = objc_msgSendSuper2(&v34, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v28 = (char *)v24;
  objc_msgSend(v28, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v29 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_titleLabel;
  v30 = *(void **)&v28[OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_titleLabel];
  objc_msgSend(v30, "setTextAlignment:", 1);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v31 = v30;
  v32 = (void *)static UIColor.secondaryText.getter(v31);
  objc_msgSend(v31, "setTextColor:", v32);

  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon]);
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v28[v29]);

  return v28;
}

id sub_100055460(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  double v14;
  void (*v15)(char *, uint64_t);
  CGFloat v16;
  CGFloat MinX;
  CGFloat MinY;
  uint64_t v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  objc_super v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v3 = type metadata accessor for Artwork.Style(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  v13 = (objc_class *)type metadata accessor for BundleChildView();
  v31.receiver = v2;
  v31.super_class = v13;
  objc_msgSendSuper2(&v31, "layoutSubviews");
  if (qword_100804658 != -1)
    swift_once(&qword_100804658, sub_10005514C);
  v14 = *(double *)&qword_100864998;
  ArtworkView.style.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Artwork.Style.roundedRect(_:), v3);
  Artwork.Style.orIfUnspecified(_:)(v6);
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v6, v3);
  v15(v9, v3);
  v16 = Artwork.Style.iconHeight(fromWidth:)(v14);
  v15(v12, v3);
  v32.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v13);
  MinX = CGRectGetMinX(v32);
  v33.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v13);
  MinY = CGRectGetMinY(v33);
  ArtworkView.frame.setter(v19);
  if (qword_100804650 != -1)
    swift_once(&qword_100804650, sub_10005513C);
  v20 = *(double *)&qword_10080A038;
  v21 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_titleLabel];
  objc_msgSend(v21, "firstBaselineFromTop");
  v23 = v20 - v22;
  LayoutMarginsAware<>.layoutFrame.getter(v13);
  objc_msgSend(v21, "sizeThatFits:", v24, v25);
  v27 = v26;
  v34.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v13);
  v28 = CGRectGetMinX(v34);
  v35.origin.x = MinX;
  v35.origin.y = MinY;
  v35.size.width = v14;
  v35.size.height = v16;
  v29 = v23 + CGRectGetMaxY(v35);
  v36.origin.x = MinX;
  v36.origin.y = MinY;
  v36.size.width = v14;
  v36.size.height = v16;
  return objc_msgSend(v21, "setFrame:", v28, v29, CGRectGetWidth(v36), v27);
}

id sub_100055780()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BundleChildView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BundleChildView()
{
  return objc_opt_self(_TtC20ProductPageExtension15BundleChildView);
}

void sub_100055808()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_icon;
  type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v0[v9] = static ArtworkView.iconArtworkView.getter();
  v10 = OBJC_IVAR____TtC20ProductPageExtension15BundleChildView_titleLabel;
  if (qword_1008065A0 != -1)
    swift_once(&qword_1008065A0, sub_1004C95E8);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = sub_10000EFC4(v11, (uint64_t)qword_10086A1B8);
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v12, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v14 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v10] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 1, 0, 1, 0, v5, 0, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/BundleChildView.swift", 42, 2, 52, 0);
  __break(1u);
}

double sub_1000559D0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  void (*v14)(char *, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;

  v3 = type metadata accessor for Artwork.Style(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - v11;
  if (qword_100804658 != -1)
    swift_once(&qword_100804658, sub_10005514C);
  v13 = *(double *)&qword_100864998;
  ArtworkView.style.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Artwork.Style.roundedRect(_:), v3);
  Artwork.Style.orIfUnspecified(_:)(v6);
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v3);
  v14(v9, v3);
  v15 = objc_msgSend(v2, "traitCollection");
  Artwork.Style.iconHeight(fromWidth:)(v13);
  if (qword_100804650 != -1)
    swift_once(&qword_100804650, sub_10005513C);
  sub_100018B6C(0, (unint64_t *)&qword_100808830, UIFont_ptr);
  if (qword_1008065A0 != -1)
    swift_once(&qword_1008065A0, sub_1004C95E8);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = sub_10000EFC4(v16, (uint64_t)qword_10086A1B8);
  v18 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v17, v15);
  objc_msgSend(v18, "descender");

  v14(v12, v3);
  return v13;
}

char *sub_100055C08(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  char *v17;
  id v18;
  double left;
  double bottom;
  double right;
  uint64_t v22;
  void *v23;
  id v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  objc_super v47;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView;
  v15 = objc_allocWithZone((Class)type metadata accessor for TodayCardLockupView());
  v16 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v47.receiver = v16;
  v47.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  v18 = objc_msgSend(v17, "contentView");
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  objc_msgSend(v17, "setClipsToBounds:", 0);
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v22 = OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView;
  v23 = *(void **)(*(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView]
                 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_titleLabel);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v24 = v23;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974, 0xE500000000000000, &v45, &v43);
  sub_100010F2C((uint64_t)&v43, &qword_100808F20);
  sub_100010F2C((uint64_t)&v45, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);

  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v13, v10);
  v26 = *(void **)(*(_QWORD *)&v17[v22] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_subtitleLabel);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v27 = v26;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x656C746974627573, 0xE800000000000000, &v45, &v43);
  sub_100010F2C((uint64_t)&v43, &qword_100808F20);
  sub_100010F2C((uint64_t)&v45, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);

  v25(v13, v10);
  v28 = *(void **)(*(_QWORD *)&v17[v22] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v29 = v28;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6B726F77747261, 0xE700000000000000, &v45, &v43);
  sub_100010F2C((uint64_t)&v43, &qword_100808F20);
  sub_100010F2C((uint64_t)&v45, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);

  v25(v13, v10);
  v30 = *(void **)(*(_QWORD *)&v17[v22] + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_ordinalLabel);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v31 = v30;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x4C6C616E6964726FLL, 0xEC0000006C656261, &v45, &v43);
  sub_100010F2C((uint64_t)&v43, &qword_100808F20);
  sub_100010F2C((uint64_t)&v45, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);

  v25(v13, v10);
  v32 = *(_QWORD *)&v17[v22];
  v33 = *(void **)(v32 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_headingLabel);
  if (v33)
  {
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    v34 = v33;
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x4C676E6964616568, 0xEC0000006C656261, &v45, &v43);
    sub_100010F2C((uint64_t)&v43, &qword_100808F20);
    sub_100010F2C((uint64_t)&v45, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v13);

    v25(v13, v10);
    v32 = *(_QWORD *)&v17[v22];
  }
  v35 = *(void **)(v32 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_tertiaryTitleLabel);
  if (v35)
  {
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    v36 = v35;
    static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x7972616974726574, 0xED0000656C746954, &v45, &v43);
    sub_100010F2C((uint64_t)&v43, &qword_100808F20);
    sub_100010F2C((uint64_t)&v45, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v13);

    v25(v13, v10);
    v32 = *(_QWORD *)&v17[v22];
  }
  v37 = *(void **)(v32 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_offerLabel);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v38 = v37;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x62614C726566666FLL, 0xEA00000000006C65, &v45, &v43);
  sub_100010F2C((uint64_t)&v43, &qword_100808F20);
  sub_100010F2C((uint64_t)&v45, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);

  v25(v13, v10);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD000000000000014, 0x8000000100687EC0, &v45, &v43);
  sub_100010F2C((uint64_t)&v43, &qword_100808F20);
  sub_100010F2C((uint64_t)&v45, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v13);
  v25(v13, v10);
  v39 = objc_msgSend(v17, "contentView");
  objc_msgSend(v39, "setClipsToBounds:", 0);

  v40 = objc_msgSend(v17, "contentView");
  v41 = *(id *)&v17[v22];
  objc_msgSend(v40, "addSubview:", v41);

  return v17;
}

uint64_t type metadata accessor for TodayCardSmallLockupCollectionViewCell()
{
  return objc_opt_self(_TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell);
}

id sub_100056480()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView)
                           + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView));
}

double sub_1000564A0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView)
     + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics;
  swift_beginAccess(v1, v3, 0, 0);
  return *(double *)v1;
}

void sub_1000564F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _BYTE v31[24];

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView);
    v16 = (double *)(v15 + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics);
    swift_beginAccess(v15 + OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_metrics, v31, 0, 0);
    v17 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, *v16, v16[1]);
    v18 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
    v19 = *(id *)(v15 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    Artwork.style.getter(v19);
    v20 = ArtworkView.style.setter(v7);
    v21 = objc_msgSend(v19, "setContentMode:", Artwork.contentMode.getter(v20));
    v22 = ArtworkLoaderConfig.size.getter(v21);
    v24 = ArtworkView.imageSize.setter(v22, v23);
    v25 = Artwork.backgroundColor.getter(v24);
    if (!v25)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v25 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v25);

    v26 = *(void **)(v15 + v18);
    objc_msgSend(v26, "setContentMode:", v14);
    v27 = type metadata accessor for ArtworkView(0);
    v28 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v29 = v26;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v17, 2, 1, v29, v27, v28);
    swift_release(a1);
    swift_release(v17);

  }
}

void sub_100056738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _BYTE v43[24];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v42 = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v22 = v20;
    v21(v17, v14);
    v23 = OBJC_IVAR____TtC20ProductPageExtension35TodayCardMarketingLockupOverlayView_lockupView;
    v24 = *(_QWORD *)(*(_QWORD *)(v3
                                + OBJC_IVAR____TtC20ProductPageExtension35TodayCardMarketingLockupOverlayView_lockupView)
                    + OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
    v25 = swift_beginAccess(v24, v43, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = objc_retain(*(id *)(*(_QWORD *)(v3 + v23)
                            + OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_artworkView));
    Artwork.style.getter(v31);
    v32 = ArtworkView.style.setter(v8);
    v33 = objc_msgSend(v31, "setContentMode:", Artwork.contentMode.getter(v32));
    v34 = ArtworkLoaderConfig.size.getter(v33);
    v36 = ArtworkView.imageSize.setter(v34, v35);
    v37 = Artwork.backgroundColor.getter(v36);
    if (!v37)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v37 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v37);

    objc_msgSend(*(id *)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_artworkView), "setContentMode:", v22);
    v38 = *(void **)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_artworkView);
    v39 = type metadata accessor for ArtworkView(0);
    v40 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v41 = v38;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v41, v39, v40);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_100056A18(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD v46[2];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RibbonBarItemCellLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Artwork.Crop(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v46[1] = a2;
    v19 = swift_retain(a1);
    v20 = Artwork.crop.getter(v19);
    v46[0] = Artwork.Crop.preferredContentMode.getter(v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v21 = objc_msgSend(v3, "traitCollection");
    v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31RibbonBarItemCollectionViewCell_artworkSize];
    v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension31RibbonBarItemCollectionViewCell_artworkSize + 8];
    v24 = v3[OBJC_IVAR____TtC20ProductPageExtension31RibbonBarItemCollectionViewCell_artworkSize + 16];
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v21) & 1) != 0)
      sub_10017A89C((UITraitCollection)v21, (uint64_t)v14);
    else
      sub_10017AB10(v22, v23, v24, v25, v26, v27, v28);
    v29 = v46[0];

    v30 = RibbonBarItemCellLayout.Metrics.artworkSize.getter();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v33 = Artwork.config(_:mode:prefersLayeredImage:)(v29, 0, v30, v32);
    v34 = *(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension31RibbonBarItemCollectionViewCell_artworkView];
    Artwork.style.getter(v34);
    v35 = ArtworkView.style.setter(v9);
    *(_QWORD *)&v36 = Artwork.contentMode.getter(v35).n128_u64[0];
    v38 = ArtworkLoaderConfig.size.getter(objc_msgSend(v34, "setContentMode:", v37, v36));
    v40 = ArtworkView.imageSize.setter(v38, v39);
    v41 = Artwork.backgroundColor.getter(v40);
    if (!v41)
    {
      v42 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v41 = static UIColor.placeholderBackground.getter(v42);
    }
    ArtworkView.backgroundColor.setter(v41);

    objc_msgSend(v34, "setContentMode:", v29);
    v43 = type metadata accessor for ArtworkView(0);
    v44 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v45 = v34;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2, 1, v45, v43, v44);
    swift_release();
    swift_release();

  }
}

void sub_100056CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (qword_1008047E8 != -1)
      swift_once(&qword_1008047E8, sub_1000ADB38);
    v15 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
    sub_10000EFC4(v15, (uint64_t)qword_100864CF8);
    v16 = InAppPurchaseIconLayout.Metrics.mainIconDimension.getter();
    v17 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, v16, v16);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView);
    v19 = OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_iconView;
    v20 = objc_retain(*(id *)(*(_QWORD *)(v18 + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_iconView)
                            + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView));
    Artwork.style.getter(v20);
    v21 = ArtworkView.style.setter(v7);
    v22 = objc_msgSend(v20, "setContentMode:", Artwork.contentMode.getter(v21));
    v23 = ArtworkLoaderConfig.size.getter(v22);
    v25 = ArtworkView.imageSize.setter(v23, v24);
    v26 = Artwork.backgroundColor.getter(v25);
    if (!v26)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v26 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v26);

    v27 = *(void **)(*(_QWORD *)(v18 + v19) + OBJC_IVAR____TtC20ProductPageExtension17InAppPurchaseView_artworkView);
    objc_msgSend(v27, "setContentMode:", v14);
    v28 = type metadata accessor for ArtworkView(0);
    v29 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v30 = v27;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v17, 2, 1, v30, v28, v29);
    swift_release(a1);
    swift_release(v17);

  }
}

void sub_100056F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _BYTE v44[24];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v44[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v43 = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v22 = v20;
    v21(v17, v14);
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20ProductPageExtension29SmallLockupCollectionViewCell_lockupView);
    v24 = v23 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
    v25 = swift_beginAccess(v23 + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics, v44, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
    v32 = *(id *)(v23 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    v34 = objc_msgSend(v32, "setContentMode:", Artwork.contentMode.getter(v33));
    v35 = ArtworkLoaderConfig.size.getter(v34);
    v37 = ArtworkView.imageSize.setter(v35, v36);
    v38 = Artwork.backgroundColor.getter(v37);
    if (!v38)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v38 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v38);

    v39 = *(void **)(v23 + v31);
    objc_msgSend(v39, "setContentMode:", v22);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v39;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_100057230(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  __n128 v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  id v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  double v52[2];

  v3 = v2;
  v50 = v3;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for Artwork.Style(0, v6);
  __chkstk_darwin(v7);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v48 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MediumLockupLayout.Metrics(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Artwork.Crop(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v46 = a2;
    v22 = swift_retain(a1);
    v23 = Artwork.crop.getter(v22);
    v24 = Artwork.Crop.preferredContentMode.getter(v23);
    v45 = a1;
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v26 = v50;
    v27 = objc_msgSend(v50, "traitCollection");
    sub_10024BE4C((uint64_t)v17, v28);

    MediumLockupLayout.Metrics.artworkSize.getter();
    v29 = *(void (**)(char *, uint64_t))(v14 + 8);
    v30 = v25;
    v31 = v45;
    v29(v17, v13);
    v51 = v26;
    Conditional.evaluate(with:)(v52, &v51, v9);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
    v32 = Artwork.config(_:mode:prefersLayeredImage:)(v30, 0, v52[0], v52[1]);
    v33 = *(id *)&v26[OBJC_IVAR____TtC20ProductPageExtension30MediumLockupCollectionViewCell_artworkView];
    v34 = v49;
    Artwork.style.getter(v33);
    v35 = ArtworkView.style.setter(v34);
    v36 = objc_msgSend(v33, "setContentMode:", Artwork.contentMode.getter(v35));
    v37 = ArtworkLoaderConfig.size.getter(v36);
    v39 = ArtworkView.imageSize.setter(v37, v38);
    v40 = Artwork.backgroundColor.getter(v39);
    if (!v40)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v40 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v40);

    objc_msgSend(v33, "setContentMode:", v30);
    v41 = type metadata accessor for ArtworkView(0);
    v42 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v43 = v33;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v32, 2, 1, v43, v41, v42);
    swift_release(v31);
    swift_release(v32);

  }
}

void sub_100057558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v3 = v2;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.Crop(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  if (a1)
  {
    v16 = swift_retain(a1);
    v17 = Artwork.crop.getter(v16);
    static Artwork.Crop.boundingBox.getter(v17);
    v18 = sub_100020248((unint64_t *)&unk_10080A0C0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.Crop, (uint64_t)&protocol conformance descriptor for Artwork.Crop);
    v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v15, v9, v18);
    v20 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v21 = v20(v12, v9);
    if ((v19 & 1) != 0)
      v22 = 6;
    else
      v22 = Artwork.Crop.preferredContentMode.getter(v21);
    v20(v15, v9);
    v23 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, *(double *)(v3 + OBJC_IVAR____TtC20ProductPageExtension29LargeLockupCollectionViewCell_preferredArtworkSize), *(double *)(v3+ OBJC_IVAR____TtC20ProductPageExtension29LargeLockupCollectionViewCell_preferredArtworkSize+ 8));
    v24 = *(id *)(v3 + OBJC_IVAR____TtC20ProductPageExtension29LargeLockupCollectionViewCell_artworkView);
    Artwork.style.getter(v24);
    v25 = ArtworkView.style.setter(v8);
    v26 = objc_msgSend(v24, "setContentMode:", Artwork.contentMode.getter(v25));
    v27 = ArtworkLoaderConfig.size.getter(v26);
    v29 = ArtworkView.imageSize.setter(v27, v28);
    v30 = Artwork.backgroundColor.getter(v29);
    if (!v30)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v30 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v30);

    objc_msgSend(v24, "setContentMode:", v22);
    v31 = type metadata accessor for ArtworkView(0);
    v32 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v33 = v24;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v23, 2, 1, v33, v31, v32);
    swift_release(a1);
    swift_release(v23);

  }
}

void sub_1000577E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD v41[2];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AspectRatio(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v41[1] = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v41[0] = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (qword_1008057B0 != -1)
      swift_once(&qword_1008057B0, sub_10034B038);
    v20 = sub_10000EFC4(v9, (uint64_t)qword_100867970);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v9);
    v21 = objc_msgSend(v3, "contentView");
    v22 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v22);
    v24 = v23;

    v25 = AspectRatio.height(fromWidth:)(v24);
    v26 = objc_msgSend(v3, "contentView");
    LayoutMarginsAware<>.layoutFrame.getter(v22);
    v28 = v27;

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v29 = v41[0];
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v41[0], 0, v28, v25);
    v31 = *(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension23BrickCollectionViewCell_artworkView];
    Artwork.style.getter(v31);
    v32 = ArtworkView.style.setter(v8);
    v33 = objc_msgSend(v31, "setContentMode:", Artwork.contentMode.getter(v32));
    v34 = ArtworkLoaderConfig.size.getter(v33);
    v36 = ArtworkView.imageSize.setter(v34, v35);
    v37 = Artwork.backgroundColor.getter(v36);
    if (!v37)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v37 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v37);

    objc_msgSend(v31, "setContentMode:", v29);
    v38 = type metadata accessor for ArtworkView(0);
    v39 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v40 = v31;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v40, v38, v39);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_100057B18(uint64_t a1, uint64_t a2)
{
  sub_100057D60(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension26TodayCardLockupOverlayView_lockupView);
}

void sub_100057B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, *(double *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23QuoteCollectionViewCell_preferredArtworkSize), *(double *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23QuoteCollectionViewCell_preferredArtworkSize + 8));
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension23QuoteCollectionViewCell_quoteView);
    v17 = OBJC_IVAR____TtC20ProductPageExtension9QuoteView_artworkView;
    v18 = *(id *)(v16 + OBJC_IVAR____TtC20ProductPageExtension9QuoteView_artworkView);
    Artwork.style.getter(v18);
    v19 = ArtworkView.style.setter(v7);
    v20 = objc_msgSend(v18, "setContentMode:", Artwork.contentMode.getter(v19));
    v21 = ArtworkLoaderConfig.size.getter(v20);
    v23 = ArtworkView.imageSize.setter(v21, v22);
    v24 = Artwork.backgroundColor.getter(v23);
    if (!v24)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v24 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v24);

    objc_msgSend(*(id *)(v16 + v17), "setContentMode:", v14);
    v25 = *(void **)(v16 + v17);
    v26 = type metadata accessor for ArtworkView(0);
    v27 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v28 = v25;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2, 1, v28, v26, v27);
    swift_release(a1);
    swift_release(v15);

  }
}

void sub_100057D54(uint64_t a1, uint64_t a2)
{
  sub_100057D60(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension34TodayCardAppEventLockupOverlayView_lockupView);
}

void sub_100057D60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD v43[3];
  _BYTE v44[24];

  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43[1] = a2;
    v18 = swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v21 = *a3;
    v22 = v20;
    v23 = *(_QWORD *)(v43[2] + v21);
    v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC20ProductPageExtension15SmallLockupView_metrics;
    v25 = swift_beginAccess(v24, v44, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_artworkView;
    v32 = *(id *)(v23 + OBJC_IVAR____TtC20ProductPageExtension19CrossLinkLockupView_artworkView);
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    v34 = objc_msgSend(v32, "setContentMode:", Artwork.contentMode.getter(v33));
    v35 = ArtworkLoaderConfig.size.getter(v34);
    v37 = ArtworkView.imageSize.setter(v35, v36);
    v38 = Artwork.backgroundColor.getter(v37);
    if (!v38)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v38 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v38);

    v39 = *(void **)(v23 + v31);
    objc_msgSend(v39, "setContentMode:", v22);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v39;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_100058030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;

  v2 = v1;
  swift_getObjectType();
  v5 = type metadata accessor for Artwork.Style(0, v4);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.Crop(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = swift_retain(a1);
    v14 = Artwork.crop.getter(v13);
    v15 = Artwork.Crop.preferredContentMode.getter(v14);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31SmallBreakoutCollectionViewCell_pageTraits);
    if (v16)
    {
      swift_getObjectType();
      v17 = swift_unknownObjectRetain(v16);
      v19 = sub_100544538(v17, v18);
      v21 = v20;
      swift_unknownObjectRelease(v16);
    }
    else
    {
      v19 = 0.0;
      v21 = 0.0;
    }
    v22 = Artwork.config(_:mode:prefersLayeredImage:)(v15, 0, v19, v21);
    v23 = OBJC_IVAR____TtC20ProductPageExtension31SmallBreakoutCollectionViewCell_iconView;
    v24 = *(id *)(v2 + OBJC_IVAR____TtC20ProductPageExtension31SmallBreakoutCollectionViewCell_iconView);
    Artwork.style.getter(v24);
    v25 = ArtworkView.style.setter(v8);
    v26 = objc_msgSend(v24, "setContentMode:", Artwork.contentMode.getter(v25));
    v27 = ArtworkLoaderConfig.size.getter(v26);
    v29 = ArtworkView.imageSize.setter(v27, v28);
    v30 = Artwork.backgroundColor.getter(v29);
    if (!v30)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v30 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v30);

    objc_msgSend(*(id *)(v2 + v23), "setContentMode:", v15);
    v31 = *(void **)(v2 + v23);
    v32 = type metadata accessor for ArtworkView(0);
    v33 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v34 = v31;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v22, 2, 1, v34, v32, v33);
    swift_release(a1);
    swift_release(v22);

  }
}

void sub_1000582A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, *(double *)(v2 + qword_10086B898), *(double *)(v2 + qword_10086B898 + 8));
    v16 = *(id *)(v2 + qword_10086B890);
    Artwork.style.getter(v16);
    v17 = ArtworkView.style.setter(v7);
    v18 = objc_msgSend(v16, "setContentMode:", Artwork.contentMode.getter(v17));
    v19 = ArtworkLoaderConfig.size.getter(v18);
    v21 = ArtworkView.imageSize.setter(v19, v20);
    v22 = Artwork.backgroundColor.getter(v21);
    if (!v22)
    {
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v22 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v22);

    objc_msgSend(v16, "setContentMode:", v14);
    v23 = type metadata accessor for ArtworkView(0);
    v24 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v25 = v16;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2, 1, v25, v23, v24);
    swift_release(a1);
    swift_release(v15);

  }
}

void sub_1000584BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView);
  v5 = OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView;
  v6 = *(id *)(v4 + OBJC_IVAR____TtC20ProductPageExtension14BaseLockupView_artworkView);
  ArtworkView.isImageHidden.setter(1);

  v7 = *(void **)(v4 + v5);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_100020248((unint64_t *)&qword_100806FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v10 = v7;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, a2, v8, v9);

}

uint64_t sub_100058578(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_100020248((unint64_t *)&unk_10080A0B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for TodayCardSmallLockupCollectionViewCell, (uint64_t)&unk_100642588);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

id sub_1000585B4(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v3 = v2;
  v6 = sub_10000DAF8((uint64_t *)&unk_10080A0D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_100815D70);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_10080A0E0);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8(&qword_100815D80);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(char **)&v2[OBJC_IVAR____TtC20ProductPageExtension38TodayCardSmallLockupCollectionViewCell_lockupView];
  v22 = sub_10000DAF8(&qword_10080B190);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 1, 1, v22);
  v23 = type metadata accessor for OfferStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v17, 1, 1, v23);
  v24 = type metadata accessor for OfferEnvironment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
  v25 = type metadata accessor for OfferTint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
  v26 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
  sub_10040A58C(a1, v21, (uint64_t)v20, a2, 0, 0, (uint64_t)v17, (uint64_t)v14, (uint64_t)v11, (uint64_t)v8);
  v21[OBJC_IVAR____TtC20ProductPageExtension19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  sub_1005475A0();
  objc_msgSend(v21, "setNeedsLayout");
  sub_1005475A0();
  sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_10080A0D0);
  sub_100010F2C((uint64_t)v11, (uint64_t *)&unk_100815D70);
  sub_100010F2C((uint64_t)v14, (uint64_t *)&unk_10080A0E0);
  sub_100010F2C((uint64_t)v17, &qword_100815D80);
  sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_10080A0F0);
  return objc_msgSend(v3, "setNeedsLayout");
}

unint64_t sub_10005888C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  Class isa;
  __n128 v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  Swift::String v66;
  void *object;
  Swift::String v68;
  id v69;
  uint64_t v70;
  Swift::String v71;
  void *v72;
  Swift::String v73;
  id v74;
  uint64_t v75;
  Swift::String v76;
  void *v77;
  Swift::String v78;
  id v79;
  uint64_t v80;
  Swift::String v81;
  void *v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  id v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  id v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  id v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  id v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  char *v174;
  uint64_t v175;
  void (*v176)(char *, char *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;

  v0 = type metadata accessor for UUID(0);
  v181 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v180 = (char *)&v170 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v174 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v170 - v6;
  v179 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v8 = swift_allocObject(v179, 56, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1006415A0;
  v178 = type metadata accessor for BoolUserDefaultsDebugSetting();
  swift_allocObject(v178, 97, 7);
  *(_QWORD *)(v8 + 32) = sub_10060A264(0xD00000000000001ALL, 0x8000000100687F10, 0, 0xD000000000000019, 0x8000000100687F30, 0);
  if (qword_100806C58 != -1)
    swift_once(&qword_100806C58, sub_10059A724);
  v9 = sub_10000EFC4(v2, (uint64_t)qword_10086B520);
  v10 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v172 = v9;
  v175 = v3;
  v176 = v10;
  ((void (*)(char *))v10)(v7);
  v11 = type metadata accessor for LocalPreferences(0);
  v177 = static LocalPreferences.AppStoreKitInternal.getter();
  v12 = (id)((uint64_t (*)(void))ASKBuildTypeGetCurrent)();
  v13 = (void *)ASKBuildTypeDebug;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeDebug);
  v16 = v15;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v19 = v17;
  if (v14 == v18 && v16 == v17)
  {
    swift_bridgeObjectRelease_n(v16, 2);
LABEL_7:

    v21 = (void *)ASKBuildTypeConvergence;
    v22 = 1;
LABEL_13:
    v30 = v175;
    goto LABEL_14;
  }
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  if ((v20 & 1) != 0)
    goto LABEL_7;
  v171 = v0;
  v21 = (void *)ASKBuildTypeConvergence;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeConvergence);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {
    swift_bridgeObjectRelease_n(v25, 2);
LABEL_12:

    v22 = 1;
    v0 = v171;
    goto LABEL_13;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
    goto LABEL_12;
  v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeInternal);
  v163 = v162;
  v165 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v166 = v164;
  if (v161 == v165 && v163 == v164)
  {

    v167 = swift_bridgeObjectRelease_n(v163, 2);
    v0 = v171;
    v30 = v175;
LABEL_37:
    v169 = static LocalPreferences.currentApplication.getter(v167);
    Preferences.subscript.getter(&v183, v172, v11, &type metadata for Bool, &protocol witness table for LocalPreferences);
    swift_release(v169);
    v22 = v183 & 1;
    goto LABEL_14;
  }
  v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v161, v163, v165, v164, 0);

  swift_bridgeObjectRelease(v163);
  v167 = swift_bridgeObjectRelease(v166);
  v0 = v171;
  v30 = v175;
  if ((v168 & 1) != 0)
    goto LABEL_37;
  v22 = 0;
LABEL_14:
  v31 = (uint64_t)v174;
  v176(v174, v7, v2);
  v32 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v34 = v177;
  v35 = sub_1003FCD7C(0xD00000000000001BLL, 0x8000000100687F50, 0, 0, v22, v31, v177, v33);
  v36 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v7, v2, v36);
  *(_QWORD *)(v8 + 40) = v35;
  v37 = v178;
  swift_allocObject(v178, 97, 7);
  v38 = sub_10060A264(0xD000000000000025, 0x8000000100687F70, 0, 0xD000000000000021, 0x8000000100687FA0, 0);
  *(_QWORD *)(v8 + 48) = v38;
  v183 = v8;
  v39 = specialized Array._endMutation()(v38);
  v185 = v183;
  v40 = (id)ASKBuildTypeGetCurrent(v39);
  v41 = sub_10000DAF8((uint64_t *)&unk_10080A138);
  v42 = swift_allocObject(v41, 56, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1006405F0;
  *(_QWORD *)(v42 + 32) = v13;
  *(_QWORD *)(v42 + 40) = v21;
  v43 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(v42 + 48) = ASKBuildTypeInternal;
  type metadata accessor for BuildType(0);
  v44 = v13;
  v45 = v21;
  v46 = v43;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v48 = swift_bridgeObjectRelease(v42);
  LOBYTE(v42) = ASKBuildTypeIsAnyOf(v40, isa, v48);

  v49 = v180;
  if ((v42 & 1) != 0)
  {
    swift_allocObject(v37, 97, 7);
    v50 = sub_10060A264(0xD00000000000001ALL, 0x8000000100687FD0, 0, 0xD000000000000013, 0x8000000100687FF0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
    v52 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v51 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v52 >= v51 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
    v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
    specialized Array._endMutation()(v53);
    v54 = swift_allocObject(&unk_100738980, 24, 7);
    v55 = v173;
    *(_QWORD *)(v54 + 16) = v173;
    v56 = type metadata accessor for ActionDebugSetting();
    swift_allocObject(v56, 120, 7);
    v57 = v55;
    v58 = sub_1004A7A88(0xD000000000000013, 0x8000000100688010, 0, 0, 0, 0, (uint64_t)sub_100059900, v54);
    swift_release(v54);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
    v61 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v60 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v61 >= v60 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
    v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v58);
    specialized Array._endMutation()(v62);
    v183 = 0;
    v184 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease(v184);
    v183 = 0xD000000000000011;
    v184 = 0x8000000100688030;
    v63 = (void *)objc_opt_self(NSURLCache);
    v64 = objc_msgSend(v63, "sharedURLCache");
    v65 = (uint64_t)objc_msgSend(v64, "currentMemoryUsage");

    v182 = v65 / 0x100000;
    v66._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v66._object;
    String.append(_:)(v66);
    swift_bridgeObjectRelease(object);
    v68._countAndFlagsBits = 47;
    v68._object = (void *)0xE100000000000000;
    String.append(_:)(v68);
    v69 = objc_msgSend(v63, "sharedURLCache");
    v70 = (uint64_t)objc_msgSend(v69, "memoryCapacity");

    v182 = v70 / 0x100000;
    v71._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v72 = v71._object;
    String.append(_:)(v71);
    swift_bridgeObjectRelease(v72);
    v73._countAndFlagsBits = 0x203A44202C424DLL;
    v73._object = (void *)0xE700000000000000;
    String.append(_:)(v73);
    v74 = objc_msgSend(v63, "sharedURLCache");
    v75 = (uint64_t)objc_msgSend(v74, "currentDiskUsage");

    v182 = v75 / 0x100000;
    v76._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v77 = v76._object;
    String.append(_:)(v76);
    swift_bridgeObjectRelease(v77);
    v78._countAndFlagsBits = 47;
    v78._object = (void *)0xE100000000000000;
    String.append(_:)(v78);
    v79 = objc_msgSend(v63, "sharedURLCache");
    v80 = (uint64_t)objc_msgSend(v79, "diskCapacity");

    v182 = v80 / 0x100000;
    v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v82 = v81._object;
    String.append(_:)(v81);
    swift_bridgeObjectRelease(v82);
    v83._countAndFlagsBits = 2703949;
    v83._object = (void *)0xE300000000000000;
    String.append(_:)(v83);
    v84 = v183;
    v85 = v184;
    v86 = swift_allocObject(&unk_1007389A8, 24, 7);
    *(_QWORD *)(v86 + 16) = v57;
    swift_allocObject(v56, 120, 7);
    v87 = v57;
    v88 = sub_1004A7A88(v84, v85, 0, 0, 0, 0, (uint64_t)sub_100059920, v86);
    swift_release(v86);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
    v91 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v90 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v91 >= v90 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
    v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v88);
    specialized Array._endMutation()(v92);
    v93 = swift_allocObject(&unk_1007389D0, 24, 7);
    *(_QWORD *)(v93 + 16) = v87;
    swift_allocObject(v56, 120, 7);
    v94 = v87;
    v95 = sub_1004A7A88(0xD000000000000015, 0x8000000100688050, 0, 0, 0, 0, (uint64_t)sub_100059924, v93);
    swift_release(v93);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
    v98 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v97 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v49 = v180;
    if (v98 >= v97 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
    v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v95);
    specialized Array._endMutation()(v99);
    v100 = swift_allocObject(&unk_1007389F8, 24, 7);
    *(_QWORD *)(v100 + 16) = v94;
    v101 = type metadata accessor for ActionRunnerActionDebugSetting();
    v102 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v102[7] = 0xD000000000000028;
    v102[8] = 0x8000000100688070;
    v102[9] = sub_10005992C;
    v102[10] = v100;
    v103 = v94;
    v104 = swift_retain(v100);
    v105 = UUID.init()(v104);
    v106 = UUID.uuidString.getter(v105);
    v108 = v107;
    v109 = *(void (**)(char *, uint64_t))(v181 + 8);
    v109(v49, v0);
    v183 = v106;
    v184 = v108;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v100);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v110);
    v112 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v111 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v112 >= v111 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v111 > 1, v112 + 1, 1);
    v113 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v112, v102);
    specialized Array._endMutation()(v113);
    v114 = swift_allocObject(&unk_100738A20, 24, 7);
    *(_QWORD *)(v114 + 16) = v103;
    v115 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v115[7] = 0xD000000000000025;
    v115[8] = 0x80000001006880A0;
    v115[9] = sub_100059954;
    v115[10] = v114;
    v116 = v103;
    v117 = swift_retain(v114);
    v118 = UUID.init()(v117);
    v119 = UUID.uuidString.getter(v118);
    v121 = v120;
    v109(v49, v0);
    v183 = v119;
    v184 = v121;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v114);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v122);
    v124 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v123 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v124 >= v123 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v123 > 1, v124 + 1, 1);
    v125 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v124, v115);
    specialized Array._endMutation()(v125);
    v126 = swift_allocObject(&unk_100738A48, 24, 7);
    *(_QWORD *)(v126 + 16) = v116;
    v127 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v127[7] = 0xD000000000000029;
    v127[8] = 0x80000001006880D0;
    v127[9] = sub_10005997C;
    v127[10] = v126;
    v128 = v116;
    v129 = swift_retain(v126);
    v130 = UUID.init()(v129);
    v131 = UUID.uuidString.getter(v130);
    v133 = v132;
    v109(v49, v0);
    v183 = v131;
    v184 = v133;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v126);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
    v136 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v135 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v136 >= v135 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
    v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v127);
    specialized Array._endMutation()(v137);
    v138 = swift_allocObject(&unk_100738A70, 24, 7);
    *(_QWORD *)(v138 + 16) = v128;
    v139 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v139[7] = 0xD00000000000002DLL;
    v139[8] = 0x8000000100688100;
    v139[9] = sub_100059998;
    v139[10] = v138;
    v140 = v128;
    v141 = swift_retain(v138);
    v142 = UUID.init()(v141);
    v143 = UUID.uuidString.getter(v142);
    v145 = v144;
    v109(v49, v0);
    v183 = v143;
    v184 = v145;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v138);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
    v148 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v147 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v148 >= v147 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
    v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v139);
    specialized Array._endMutation()(v149);
  }
  v150 = swift_allocObject(v179, 40, 7);
  *(_OWORD *)(v150 + 16) = xmmword_100640AE0;
  v151 = v185;
  v152 = type metadata accessor for DebugSection();
  v153 = (_QWORD *)swift_allocObject(v152, 56, 7);
  v155 = UUID.init()(v154);
  v156 = UUID.uuidString.getter(v155);
  v158 = v157;
  v159 = (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v49, v0);
  v153[2] = v156;
  v153[3] = v158;
  v153[4] = 0x73676E6974746553;
  v153[5] = 0xE800000000000000;
  v153[6] = v151;
  *(_QWORD *)(v150 + 32) = v153;
  v183 = v150;
  specialized Array._endMutation()(v159);
  return v183;
}

void sub_100059774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008094E0);
  v3 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v2, a1, v2, v3);
  objc_msgSend(v5, "invalidateMediaToken");
  v4 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v4, "notify");
  swift_unknownObjectRelease();

}

uint64_t sub_100059818(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void))
{
  uint64_t v4;

  v4 = a2(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  return a3();
}

uint64_t sub_100059850(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for UpdateGranularNotificationSettingsAction(0);
  swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
  return UpdateGranularNotificationSettingsAction.init(settingIDs:)(a2);
}

id sub_10005988C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DefaultSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DefaultSettings()
{
  return objc_opt_self(_TtC20ProductPageExtension15DefaultSettings);
}

uint64_t sub_1000598DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100059900()
{
  sub_1000599B8();
}

void sub_100059924(uint64_t a1)
{
  sub_100059774(a1);
}

uint64_t sub_10005992C()
{
  uint64_t v0;

  return sub_100059818(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))&type metadata accessor for UserNotificationsAuthorizationAction, (uint64_t (*)(void))&UserNotificationsAuthorizationAction.init());
}

uint64_t sub_100059954()
{
  uint64_t v0;

  return sub_100059818(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))&type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction, (uint64_t (*)(void))&UserNotificationsAuthorizationWithPrewarmAction.init());
}

uint64_t sub_10005997C()
{
  uint64_t v0;

  return sub_100059850(*(_QWORD *)(v0 + 16), 0);
}

uint64_t sub_100059998()
{
  uint64_t v0;

  return sub_100059850(*(_QWORD *)(v0 + 16), (uint64_t)&off_100735330);
}

void sub_1000599B8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  __int128 *p_aBlock;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 aBlock;
  __int128 v36;
  uint64_t (*v37)();
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  _BYTE v43[40];

  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension21DebugSettingsProvider_debugSettingsViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20ProductPageExtension21DebugSettingsProvider_debugSettingsViewController);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "presentingViewController");

  if (!v4)
    goto LABEL_7;
  v5 = objc_opt_self(UITabBarController);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
    goto LABEL_6;
  v7 = objc_msgSend(v6, "selectedViewController");

  if (v7)
  {
    v8 = objc_opt_self(UINavigationController);
    v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
    v4 = v7;
    if (v9)
      goto LABEL_10;
LABEL_6:

  }
LABEL_7:
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  v9 = v10;
  if (!v10)
  {
LABEL_37:
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    sub_100059F68((uint64_t)&v39);
    v16 = 0;
    goto LABEL_38;
  }
  v11 = objc_msgSend(v10, "presentingViewController");

  if (!v11)
  {
    v9 = 0;
    goto LABEL_37;
  }
  v12 = objc_opt_self(UINavigationController);
  v9 = (void *)swift_dynamicCastObjCClass(v11, v12);
  if (!v9)
  {

    goto LABEL_37;
  }
LABEL_10:
  v13 = objc_msgSend(v9, "viewControllers");
  v14 = sub_100050BB8();
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(char **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_12;
LABEL_36:
    swift_bridgeObjectRelease(v15);
    goto LABEL_37;
  }
  if (v15 < 0)
    v25 = v15;
  else
    v25 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v15);
  v16 = (char *)_CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v15);
  if (!v16)
    goto LABEL_36;
LABEL_12:
  v17 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
  }
  else if ((v15 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v17 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = (char *)*(id *)(v15 + 8 * (_QWORD)v17 + 32);
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_52;
  }
  v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
LABEL_17:
  v16 = v18;
  swift_bridgeObjectRelease(v15);
  if (!v16)
    goto LABEL_37;
  v34 = v16;
  v19 = v16;
  v20 = sub_10000DAF8(&qword_10080A158);
  if ((swift_dynamicCast(&v39, &v34, v14, v20, 6) & 1) == 0)
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    goto LABEL_24;
  }
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_24:
    sub_100059F68((uint64_t)&v39);
    v21 = objc_msgSend(v19, "childViewControllers");
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v14);

    if (!((unint64_t)v15 >> 62))
    {
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_26;
      goto LABEL_56;
    }
LABEL_52:
    if (v15 < 0)
      v32 = v15;
    else
      v32 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v15);
    if (v33)
    {
LABEL_26:
      if ((v15 & 0xC000000000000001) != 0)
      {
        v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
      }
      else
      {
        if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v22 = (char *)*(id *)(v15 + 32);
      }
      v23 = v22;
      swift_bridgeObjectRelease(v15);
      v34 = v23;
      v24 = sub_10000DAF8(&qword_10080A158);
      if ((swift_dynamicCast(&v39, &v34, v14, v24, 6) & 1) != 0)
      {
        if (*((_QWORD *)&v40 + 1))
          goto LABEL_31;
LABEL_39:
        sub_100059F68((uint64_t)&v39);
        aBlock = 0u;
        v36 = 0u;
        v37 = 0;
        goto LABEL_40;
      }
LABEL_38:
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
      goto LABEL_39;
    }
LABEL_56:
    swift_bridgeObjectRelease(v15);
    goto LABEL_38;
  }
LABEL_31:
  sub_100010E24(&v39, (uint64_t)v42);
  sub_100010E24(v42, (uint64_t)&aBlock);
LABEL_40:
  sub_100059FA8((uint64_t)&aBlock, (uint64_t)v43);
  sub_100059FF0((uint64_t)v43, (uint64_t)&aBlock);
  if (*((_QWORD *)&v36 + 1))
  {
    sub_100010E24(&aBlock, (uint64_t)v42);
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    if (v26
      && (v27 = v26,
          v28 = objc_msgSend(v26, "presentingViewController"),
          v27,
          v28))
    {
      sub_10000EF80((uint64_t)v42, (uint64_t)&v39);
      v29 = swift_allocObject(&unk_100738A98, 56, 7);
      sub_100010E24(&v39, v29 + 16);
      v37 = sub_10005A05C;
      v38 = v29;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v36 = sub_1000924A0;
      *((_QWORD *)&v36 + 1) = &unk_100738AB0;
      v30 = _Block_copy(&aBlock);
      objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, v30, swift_release(v38).n128_f64[0]);
      _Block_release(v30);

    }
    else
    {

    }
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v42);
    p_aBlock = (__int128 *)v43;
  }
  else
  {
    sub_100059F68((uint64_t)v43);

    p_aBlock = &aBlock;
  }
  sub_100059F68((uint64_t)p_aBlock);
}

void sub_100059E90()
{
  id v0;
  __CFNotificationCenter *v1;
  __CFString *v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(NSURLCache), "sharedURLCache");
  objc_msgSend(v0, "removeAllCachedResponses");

  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  v2 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterPostNotification(v1, v2, 0, 0, 1u);

  v3 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v3, "notify");

}

uint64_t sub_100059F68(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8((uint64_t *)&unk_10080A148);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100059FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_10080A148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100059FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_10080A148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005A038()
{
  uint64_t v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10005A05C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  sub_100010F08(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_10005A0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005A0B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

ValueMetadata *type metadata accessor for AppLaunchTrampolineActionImplementation()
{
  return &type metadata for AppLaunchTrampolineActionImplementation;
}

unint64_t sub_10005A0E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080A160;
  if (!qword_10080A160)
  {
    v1 = type metadata accessor for AppLaunchTrampolineAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080A160);
  }
  return result;
}

uint64_t sub_10005A12C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  NSURL *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[5];
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  void **aBlock;
  uint64_t v58;
  void (*v59)(uint64_t, void *);
  void *v60;
  void *v61;
  _QWORD *v62;

  v5 = type metadata accessor for OSLogger(0, a3);
  v53[4] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v53[3] = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v12);
  v14 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v53 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)v53 - v19;
  v22 = __chkstk_darwin(v21);
  v54 = (uint64_t)v53 - v23;
  AppLaunchTrampolineAction.payloadUrl.getter(v22);
  AppLaunchTrampolineAction.payloadUrl.getter(v24);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v25 = v55(v20, 1, v8);
  v56 = a2;
  if (v25 == 1)
  {
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v20, v8);
    v26 = type metadata accessor for AdAttributionManager(0);
    v27 = BaseObjectGraph.optional<A>(_:)(&aBlock, v26, v26);
    v28 = aBlock;
    if (aBlock)
    {
      v53[2] = v5;
      v29 = AppLaunchTrampolineAction.bundleId.getter(v27);
      v31 = v30;
      dispatch thunk of AdAttributionManager.processReengagement(forBundleID:payloadURL:)(v29);
      swift_release(v28);
      v48 = swift_bridgeObjectRelease(v31);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v48);
      v49 = v54;
      sub_100010F2C(v54, (uint64_t *)&unk_1008092A0);
      v50 = 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
      v51 = (uint64_t)v17;
      v52 = v49;
      sub_10005AB74(v51, v49);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v50 = 0;
  v52 = v54;
LABEL_7:
  sub_10000DAF8(&qword_100808570);
  v32 = Promise.__allocating_init()();
  v33 = objc_msgSend(objc_allocWithZone((Class)ASCAppLaunchTrampoline), "init");
  AppLaunchTrampolineAction.bundleId.getter(v33);
  v35 = v34;
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  sub_10005AACC(v52, (uint64_t)v14);
  if (v55(v14, 1, v8) == 1)
  {
    v38 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v37);
    v38 = v39;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  v40 = objc_msgSend(v33, "openApplicationWithBundleIdentifier:payloadURL:universalLinkRequired:", v36, v38, v50, v53[0]);

  v61 = sub_10005AB14;
  v62 = (_QWORD *)v32;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_10004AFAC;
  v60 = &unk_100738B10;
  v41 = _Block_copy(&aBlock);
  v42 = v62;
  swift_retain(v32);
  objc_msgSend(v40, "addSuccessBlock:", v41, swift_release(v42).n128_f64[0]);
  _Block_release(v41);
  v43 = (_QWORD *)swift_allocObject(&unk_100738B48, 40, 7);
  v44 = v56;
  v43[2] = a1;
  v43[3] = v44;
  v43[4] = v32;
  v61 = sub_10005AB68;
  v62 = v43;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_10004AFAC;
  v60 = &unk_100738B60;
  v45 = _Block_copy(&aBlock);
  v46 = v62;
  swift_retain(v32);
  swift_retain(a1);
  swift_retain(v44);
  objc_msgSend(v40, "addErrorBlock:", v45, swift_release(v46).n128_f64[0]);
  _Block_release(v45);

  sub_100010F2C(v52, (uint64_t *)&unk_1008092A0);
  return v32;
}

uint64_t sub_10005A700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  Promise.resolve(_:)(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_10005A794(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  __n128 v32;
  double result;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42[8];
  _QWORD v43[4];

  v37 = a3;
  v38 = a2;
  v39 = a4;
  v35[1] = *a4;
  v5 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v36 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v35[0] = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v15 = sub_10000EFC4(v11, (uint64_t)qword_10086AB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v17 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ 2 * *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100687880);
  swift_getErrorValue(a1, v42, &v40);
  v20 = v40;
  v19 = v41;
  v43[3] = v41;
  v21 = sub_1000119C0(v43);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v20, v19);
  static LogMessage.sensitive(_:)(v43);
  sub_100010F2C((uint64_t)v43, &qword_100808F20);
  Logger.error(_:)(v18, v11, &protocol witness table for OSLogger);
  v22 = swift_bridgeObjectRelease(v18);
  v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v22);
  v24 = AppLaunchTrampolineAction.fallbackAction.getter(v23);
  if (v24)
  {
    v25 = v24;
    v26 = v37;
    BaseObjectGraph.optional<A>(_:)(v7, v8, v8);
    v27 = v36;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v7, 1, v8) == 1)
    {
      sub_100010F2C((uint64_t)v7, (uint64_t *)&unk_100809290);
      v28 = sub_10005ABBC();
      v29 = swift_allocError(&type metadata for GeneralActionImplementationError, v28, 0, 0);
      *v30 = 1;
      v31 = Promise.__allocating_init(error:)(v29);
    }
    else
    {
      v34 = v35[0];
      (*(void (**)(_QWORD, _QWORD *, uint64_t))(v27 + 32))(v35[0], v7, v8);
      v31 = sub_10032D5C0(v25, v26, v34);
      v32.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v27 + 8))(v34, v8);
    }
    Promise.pipe(to:)(v39, v32);
    swift_release(v25);
    *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  }
  else
  {
    Promise.reject(_:)(a1);
  }
  return result;
}

uint64_t sub_10005AAC4(uint64_t *a1, uint64_t a2, __n128 a3)
{
  return sub_10005A12C(*a1, a2, a3);
}

uint64_t sub_10005AACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005AB14()
{
  return sub_10005A700();
}

uint64_t sub_10005AB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005AB2C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005AB34()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_10005AB68(uint64_t a1)
{
  uint64_t v1;

  return sub_10005A794(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_10005AB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005ABBC()
{
  unint64_t result;

  result = qword_100825640;
  if (!qword_100825640)
  {
    result = swift_getWitnessTable(&unk_10064CADC, &type metadata for GeneralActionImplementationError);
    atomic_store(result, (unint64_t *)&qword_100825640);
  }
  return result;
}

id sub_10005AD08()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  id v4;
  id v5;

  v0 = ShareSheetAction.Activity.action.getter();
  v1 = Action.artwork.getter(v0);
  v2 = swift_release(v0);
  if (!v1)
    return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v3 = dispatch thunk of Artwork.isLocalImage.getter(v2);
  if ((v3 & 1) == 0)
    goto LABEL_9;
  if ((dispatch thunk of Artwork.isSystemImage.getter(v3) & 1) != 0)
  {
    v4 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v1, 0, 1);
    goto LABEL_7;
  }
  if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) == 0)
  {
LABEL_9:
    swift_release(v1);
    return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v4 = sub_1004AF5F4(v1, 0);
LABEL_7:
  v5 = v4;
  swift_release(v1);
  if (v5)
    return v5;
  return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
}

id sub_10005AE70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = type metadata accessor for ActionRunner.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_FDFF98F3DEFBD62812CE468C53A31FA514ActionActivity_responder]);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = UIResponder.nearestActionRunner.getter();

    if (v8)
    {
      v9 = ShareSheetAction.Activity.action.getter();
      v14[3] = type metadata accessor for ActionActivity(0);
      v14[0] = v1;
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_FDFF98F3DEFBD62812CE468C53A31FA514ActionActivity_objectGraph];
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionRunner.Origin.userInitiated(_:), v2);
      v11 = v1;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v9, v14, v5, v10);
      swift_release(v8);
      v12 = swift_release(v9);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);
      sub_10001282C((uint64_t)v14);
    }
  }
  return objc_msgSend(v1, "activityDidFinish:", 1);
}

id sub_10005B018()
{
  return sub_10005B598(0, (uint64_t (*)(void))type metadata accessor for ActionActivity);
}

uint64_t sub_10005B088()
{
  return type metadata accessor for ActionActivity(0);
}

uint64_t type metadata accessor for ActionActivity(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A1A8;
  if (!qword_10080A1A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActionActivity);
  return result;
}

uint64_t sub_10005B0CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for ShareSheetAction.Activity(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "\b";
    v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10005B150(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  char *v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  objc_class *v25;
  char *v26;
  __n128 v27;
  __n128 v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  Class v37;
  objc_class *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString *v44;
  NSString *v45;
  NSString *v46;
  NSString *v47;
  NSString *v48;
  NSString *v49;
  Class v50;
  uint64_t result;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  objc_super v65;
  objc_super v66;
  _QWORD *v67;

  v60 = a3;
  v8 = a2;
  v10 = type metadata accessor for ShareSheetAction.Activity(0, a2);
  v58 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkLoader(0);
  v14 = a5;
  v15 = *(_QWORD *)(a5 + qword_10086B3B8);
  if (v15)
  {
    *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension22ActivityViewController_artworkLoader] = v15;
    swift_retain_n(v15, 2);
    v16 = v5;
    v61 = a1;
    v17 = sub_10060A538(v15);
    swift_release();

    v18 = *(_QWORD *)(v8 + 16);
    v19 = _swiftEmptyArrayStorage;
    v62 = a4;
    v59 = v14;
    if (v18)
    {
      v55 = v17;
      v57 = v16;
      v67 = _swiftEmptyArrayStorage;
      v64 = a4;
      swift_retain(v14);
      specialized ContiguousArray.reserveCapacity(_:)(v18);
      v20 = v58;
      v21 = *(unsigned __int8 *)(v58 + 80);
      v56 = v8;
      v22 = v8 + ((v21 + 32) & ~v21);
      v63 = *(_QWORD *)(v58 + 72);
      v23 = v14;
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
      do
      {
        v24(v12, v22, v10);
        v25 = (objc_class *)type metadata accessor for ActionActivity(0);
        v26 = (char *)objc_allocWithZone(v25);
        v27 = swift_unknownObjectWeakInit(&v26[OBJC_IVAR____TtC20ProductPageExtensionP33_FDFF98F3DEFBD62812CE468C53A31FA514ActionActivity_responder], 0);
        v28.n128_f64[0] = ((double (*)(char *, char *, uint64_t, __n128))v24)(&v26[OBJC_IVAR____TtC20ProductPageExtensionP33_FDFF98F3DEFBD62812CE468C53A31FA514ActionActivity_activity], v12, v10, v27);
        swift_unknownObjectWeakAssign(v28);
        *(_QWORD *)&v26[OBJC_IVAR____TtC20ProductPageExtensionP33_FDFF98F3DEFBD62812CE468C53A31FA514ActionActivity_objectGraph] = v23;
        v66.receiver = v26;
        v66.super_class = v25;
        *(_QWORD *)&v29 = swift_retain(v23).n128_u64[0];
        v30 = objc_msgSendSuper2(&v66, "init", v29);
        v31 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v10);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v32 = v67[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
        specialized ContiguousArray._endMutation()(v33);
        v22 += v63;
        --v18;
      }
      while (v18);
      v19 = v67;

      swift_release();
      v34 = v60;
      v8 = v56;
      v16 = v57;
      v17 = v55;
    }
    else
    {
      v34 = v60;
    }
    swift_bridgeObjectRelease(v8);
    v35 = sub_1003AEE78(v17);
    swift_bridgeObjectRelease(v17);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v35);
    sub_10005B5F8();
    v37 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    v38 = (objc_class *)type metadata accessor for ActivityViewController();
    v65.receiver = v16;
    v65.super_class = v38;
    v39 = objc_msgSendSuper2(&v65, "initWithActivityItems:applicationActivities:", isa, v37);

    v40 = v39;
    objc_msgSend(v40, "setSharingStyle:", v34);
    v41 = sub_10000DAF8((uint64_t *)&unk_100828C50);
    v42 = swift_allocObject(v41, 80, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100640730;
    *(_QWORD *)(v42 + 32) = UIActivityTypeAddToReadingList;
    *(_QWORD *)(v42 + 40) = UIActivityTypeAssignToContact;
    *(_QWORD *)(v42 + 48) = UIActivityTypePostToFlickr;
    *(_QWORD *)(v42 + 56) = UIActivityTypePrint;
    *(_QWORD *)(v42 + 64) = UIActivityTypeSaveToCameraRoll;
    *(_QWORD *)(v42 + 72) = UIActivityTypeCopyToPasteboard;
    type metadata accessor for ActivityType(0);
    v43 = v40;
    v44 = UIActivityTypeAddToReadingList;
    v45 = UIActivityTypeAssignToContact;
    v46 = UIActivityTypePostToFlickr;
    v47 = UIActivityTypePrint;
    v48 = UIActivityTypeSaveToCameraRoll;
    v49 = UIActivityTypeCopyToPasteboard;
    v50 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "setExcludedActivityTypes:", v50, swift_bridgeObjectRelease(v42).n128_f64[0]);

    swift_release();
    swift_release();
    return (uint64_t)v43;
  }
  else
  {
    v52 = v13;
    v53 = v5;
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v52, v52);
    __break(1u);
  }
  return result;
}

id sub_10005B58C(uint64_t a1)
{
  return sub_10005B598(a1, type metadata accessor for ActivityViewController);
}

id sub_10005B598(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for ActivityViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension22ActivityViewController);
}

unint64_t sub_10005B5F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080A1E8;
  if (!qword_10080A1E8)
  {
    v1 = objc_opt_self(UIActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080A1E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossfireReferralActionImplementation()
{
  return &type metadata for CrossfireReferralActionImplementation;
}

unint64_t sub_10005B648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080A1F0;
  if (!qword_10080A1F0)
  {
    v1 = type metadata accessor for CrossfireReferralAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080A1F0);
  }
  return result;
}

uint64_t sub_10005B690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ReferrerData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetricsActivity(0);
  v9 = static MetricsActivity.current.getter(v8);
  CrossfireReferralAction.referrerData.getter();
  dispatch thunk of MetricsActivity.setReferrerData(_:)(v7);
  v10 = swift_release(v9);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v10);
  sub_10000DAF8(&qword_100808570);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  return Promise.__allocating_init(value:)(v3);
}

uint64_t sub_10005B7BC()
{
  return sub_10000E720(&qword_10080A200, type metadata accessor for PrivacyFooterCollectionViewCell, (uint64_t)&unk_1006427C8);
}

uint64_t sub_10005B7E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

double sub_10005B814()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  __n128 v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD v66[5];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v0 = type metadata accessor for PageGrid(0);
  v63 = *(_QWORD *)(v0 - 8);
  v64 = v0;
  v1 = __chkstk_darwin(v0);
  v62 = (uint64_t *)((char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for PrivacyFooterLayout.Metrics(0, v1);
  v60 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v61 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PrivacyFooterLayout(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v65 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LabelPlaceholderCompatibility(0, v8);
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PrivacyFooter(0, v15);
  v19 = sub_10000E720(&qword_10080A208, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyFooter, (uint64_t)&protocol conformance descriptor for PrivacyFooter);
  ItemLayoutContext.typedModel<A>(as:)(v67, v18, v18, v19);
  v20 = v67[0];
  if (!v67[0])
    return 0.0;
  v56 = v7;
  v57 = v6;
  sub_10005BD18();
  if (qword_100806390 != -1)
    swift_once(&qword_100806390, sub_1004C7E88);
  v21 = sub_10000EFC4(v13, (uint64_t)qword_100869B88);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
  KeyPath = swift_getKeyPath(&unk_100642818);
  ItemLayoutContext.subscript.getter(v67);
  swift_release(KeyPath);
  v23 = (void *)v67[0];
  v24 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v17, v67[0]);

  v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v26 = PrivacyFooter.bodyText.getter(v25);
  v28 = LinkableText.styledText.getter(v27);
  swift_release(v26);
  v29 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(v24);
  swift_release(v28);
  v30 = type metadata accessor for Feature(0);
  v68 = v30;
  v69 = sub_10000E720((unint64_t *)&qword_10080CED0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v31 = sub_1000119C0(v67);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v31, enum case for Feature.measurement_with_labelplaceholder(_:), v30);
  v32 = v29;
  v33 = (id)v24;
  LOBYTE(v24) = isFeatureEnabled(_:)(v67);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v67);
  v34 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v29, v33, 4, 0, 0, 0, 0, v24 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v67, v34);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v59);
  if (qword_100806CE0 != -1)
    swift_once(&qword_100806CE0, sub_1005B3A7C);
  v35 = sub_10000EFC4(v3, (uint64_t)qword_10086B620);
  v36 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v35, v3);
  v37 = v68;
  v38 = v69;
  v39 = sub_100010F08(v67, v68);
  v66[3] = v37;
  v66[4] = *(_QWORD *)(v38 + 8);
  v40 = sub_1000119C0(v66);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v40, v39, v37);
  v41 = v65;
  PrivacyFooterLayout.init(metrics:bodyLabel:actionButtons:)(v36, v66, _swiftEmptyArrayStorage);
  v42 = swift_getKeyPath(&unk_100642848);
  v43 = v62;
  ItemLayoutContext.subscript.getter(v62);
  swift_release(v42);
  v44 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v46 = v45;
  (*(void (**)(_QWORD *, uint64_t))(v63 + 8))(v43, v64);
  v47 = swift_getKeyPath(&unk_100642878);
  ItemLayoutContext.subscript.getter(v66);
  swift_release(v47);
  v48 = v66[0];
  v49 = sub_10000E720((unint64_t *)&unk_10080A210, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyFooterLayout, (uint64_t)&protocol conformance descriptor for PrivacyFooterLayout);
  v50 = v57;
  dispatch thunk of Measurable.measurements(fitting:in:)(v48, v57, v49, v44, v46);
  v52 = v51;

  swift_release(v20);
  v53 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v41, v50, v53);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v67);
  return v52;
}

unint64_t sub_10005BD18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100808830;
  if (!qword_100808830)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100808830);
  }
  return result;
}

uint64_t sub_10005BD5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

char *sub_10005BD84(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  CGFloat *v12;
  double left;
  double bottom;
  double right;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = (CGFloat *)&v6[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_separatorInsets];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v12 = UIEdgeInsetsZero.top;
  v12[1] = left;
  v12[2] = bottom;
  v12[3] = right;
  v16 = OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_lineView;
  v17 = objc_allocWithZone((Class)UIView);
  v18 = v6;
  *(_QWORD *)&v6[v16] = objc_msgSend(v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v26.receiver = v18;
  v26.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v19, "setUserInteractionEnabled:", 0);
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v20 = OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_lineView;
  v21 = *(void **)&v19[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_lineView];
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v21;
  v24 = objc_msgSend(v22, "separatorColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[v20]);
  return v19;
}

void sub_10005C018(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  double v4;
  double v5;
  double v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  id v15;
  id v16;
  double v17;
  objc_super v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v18.receiver = v2;
  v18.super_class = ObjectType;
  objc_msgSendSuper2(&v18, "layoutSubviews");
  v4 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v8 = CGRect.subtracting(insets:)(*(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_separatorInsets], *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_separatorInsets + 8], *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_separatorInsets + 16], *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_separatorInsets + 24], v4, v5, v6, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = objc_msgSend(v2, "traitCollection");
  static Separator.thickness(compatibleWith:)();

  v19.origin.x = v8;
  v19.origin.y = v10;
  v19.size.width = v12;
  v19.size.height = v14;
  CGRectGetMinX(v19);
  v20.origin.x = v8;
  v20.origin.y = v10;
  v20.size.width = v12;
  v20.size.height = v14;
  CGRectGetMidY(v20);
  v21.origin.x = v8;
  v21.origin.y = v10;
  v21.size.width = v12;
  v21.size.height = v14;
  CGRectGetWidth(v21);
  v16 = *(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension27SeparatorSpacerReusableView_lineView];
  v17 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  CGRect.withLayoutDirection(in:relativeTo:)(v2, v17);
  objc_msgSend(v16, "setFrame:");

}

uint64_t type metadata accessor for SeparatorSpacerReusableView()
{
  return objc_opt_self(_TtC20ProductPageExtension27SeparatorSpacerReusableView);
}

void sub_10005C1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;

  v1 = type metadata accessor for SystemImage(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v16 - v6;
  v8 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *(unsigned int *)*(&off_100738CC0+ *(char *)(v0 + OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronDirection)), v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v5, v1);
  v10 = v9;
  v11 = (void *)static SystemImage.load(_:with:)(v7, 0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  objc_msgSend(v10, "setImage:", v11);

  v12 = *(void **)(v0 + v8);
  v13 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v14 = v12;
  v15 = objc_msgSend(v13, "configurationWithPointSize:weight:", 6, 15.0);
  objc_msgSend(v14, "setPreferredSymbolConfiguration:", v15);

}

char *sub_10005C350()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  double *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  objc_super v30;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_contentView;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v0;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurEffect;
  v7 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 9);
  *(_QWORD *)&v5[v6] = v7;
  v8 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  __asm { FMOV            V0.2D, #28.0 }
  *(_OWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_visibleSize] = _Q0;
  v14 = (double *)&v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_tapSize];
  *(_OWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_tapSize] = xmmword_1006428F0;
  v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronDirection] = 1;
  v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_shouldUseDirectionalChevron] = 1;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurView] = v15;
  v16 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v7, 4);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v16);

  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_vibrancyView] = v17;
  v18 = *v14;
  v19 = v14[1];
  v30.receiver = v5;
  v30.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, v18, v19);
  v21 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_contentView;
  v22 = *(void **)&v20[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_contentView];
  v23 = v20;
  objc_msgSend(v22, "setUserInteractionEnabled:", 0);
  v23[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronDirection] = 1;
  v24 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView;
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView], "setContentMode:", 4);
  sub_10005C1DC();
  v25 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurView;
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurView]);
  v26 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_vibrancyView;
  v27 = objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_vibrancyView], "contentView");
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v23[v24]);

  v28 = objc_msgSend(*(id *)&v23[v25], "contentView");
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v23[v26]);

  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v20[v21]);
  objc_msgSend(v23, "setOverrideUserInterfaceStyle:", 1);

  return v23;
}

void sub_10005C65C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  CGFloat Width;
  double *v5;
  double v6;
  double v7;
  CGFloat Height;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  char v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  id v29;
  objc_super v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  v3 = v2;
  v30.receiver = v2;
  v30.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v30, "layoutSubviews");
  objc_msgSend(v2, "bounds");
  Width = CGRectGetWidth(v31);
  v5 = (double *)&v2[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_visibleSize];
  v6 = *(double *)&v2[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_visibleSize];
  v7 = (Width - v6) * 0.5;
  objc_msgSend(v2, "bounds");
  Height = CGRectGetHeight(v32);
  v9 = v5[1];
  v10 = (Height - v9) * 0.5;
  v11 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_contentView];
  objc_msgSend(v11, "setFrame:", v7, v10, v6, v9);
  v12 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView;
  v13 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView], "image");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(*(id *)&v2[v12], "setContentMode:", 1);
    v15 = objc_msgSend(v2, "traitCollection");
    v16 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v16 & 1) != 0)
      v17 = 1.0;
    else
      v17 = 0.0;
    v18 = *(id *)&v3[v12];
    objc_msgSend(v11, "frame");
    v19 = CGRectGetWidth(v33);
    objc_msgSend(v14, "size");
    v21 = floor(v17 + (v19 - v20) * 0.5);
    objc_msgSend(v11, "frame");
    v22 = CGRectGetHeight(v34);
    objc_msgSend(v14, "size");
    v24 = floor((v22 - v23) * 0.5);
    objc_msgSend(v14, "size");
    v26 = v25;
    objc_msgSend(v14, "size");
    objc_msgSend(v18, "setFrame:", v21, v24, v26, v27);

  }
  v28 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurView;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurView], "setFrame:", 0.0, 0.0, v6, v9);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_vibrancyView], "setFrame:", 0.0, 0.0, v6, v9);
  v29 = *(id *)&v3[v28];
  v35.origin.x = v7;
  v35.origin.y = v10;
  v35.size.width = v6;
  v35.size.height = v9;
  objc_msgSend(v29, "_setCornerRadius:", CGRectGetHeight(v35) * 0.5);

}

uint64_t type metadata accessor for RoundChevronButton()
{
  return objc_opt_self(_TtC20ProductPageExtension18RoundChevronButton);
}

uint64_t storeEnumTagSinglePayload for RoundChevronButton.ChevronDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10005CA24 + 4 * byte_100642905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10005CA58 + 4 * byte_100642900[v4]))();
}

uint64_t sub_10005CA58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005CA60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005CA68);
  return result;
}

uint64_t sub_10005CA74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005CA7CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10005CA80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005CA88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoundChevronButton.ChevronDirection()
{
  return &type metadata for RoundChevronButton.ChevronDirection;
}

unint64_t sub_10005CAA8()
{
  unint64_t result;

  result = qword_10080A2C8;
  if (!qword_10080A2C8)
  {
    result = swift_getWitnessTable(&unk_1006429A4, &type metadata for RoundChevronButton.ChevronDirection);
    atomic_store(result, (unint64_t *)&qword_10080A2C8);
  }
  return result;
}

void sub_10005CAEC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_contentView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_blurEffect;
  *(_QWORD *)&v0[v2] = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 9);
  v3 = OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronImageView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  __asm { FMOV            V0.2D, #28.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_visibleSize] = _Q0;
  *(_OWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_tapSize] = xmmword_1006428F0;
  v0[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_chevronDirection] = 1;
  v0[OBJC_IVAR____TtC20ProductPageExtension18RoundChevronButton_shouldUseDirectionalChevron] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/RoundChevronButton.swift", 45, 2, 80, 0);
  __break(1u);
}

uint64_t sub_10005CC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100640AE0;
  v10 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1006423E0;
  v11 = type metadata accessor for ActionDebugSetting();
  swift_allocObject(v11, 120, 7);
  *(_QWORD *)(v10 + 32) = sub_1004A7A88(0x6574616C756D6953, 0xEF65676E61684320, 0, 0, 0, 0, (uint64_t)sub_10005CE68, 0);
  v12 = swift_allocObject(&unk_100738D20, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  v13 = swift_allocObject(&unk_100738D48, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  v14 = type metadata accessor for NavigationActionDebugSetting();
  swift_allocObject(v14, 104, 7);
  swift_retain(a1);
  v15 = sub_1004C5AA4(0x6C6C412077656956, 0xE800000000000000, 0, 0, (uint64_t)sub_10005DE8C, v13);
  swift_release(v13);
  *(_QWORD *)(v10 + 40) = v15;
  v28 = v10;
  specialized Array._endMutation()(v16);
  v17 = v28;
  v18 = type metadata accessor for DebugSection();
  v19 = (_QWORD *)swift_allocObject(v18, 56, 7);
  v21 = UUID.init()(v20);
  v22 = UUID.uuidString.getter(v21);
  v24 = v23;
  v25 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19[2] = v22;
  v19[3] = v24;
  v19[4] = 0xD000000000000010;
  v19[5] = 0x8000000100688530;
  v19[6] = v17;
  *(_QWORD *)(v9 + 32) = v19;
  v28 = v9;
  specialized Array._endMutation()(v25);
  return v28;
}

void sub_10005CE68()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v0, "postNotificationName:object:", ASDAppCapabilitiesDidChangeNotification, 0);

}

void sub_10005CEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10005DE94(a3);

  }
}

uint64_t sub_10005CF1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  void *v45;
  NSString v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSString v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  NSString v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;
  __n128 v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  __int128 v94;
  __n128 v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  char *v110;
  char *v111;
  uint64_t v112;
  __n128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t result;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t Strategy;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t *v157;
  char *v158;
  char *v159;
  char *v160;
  void (*v161)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  _OWORD v176[2];
  uint64_t v177;
  _QWORD *v178;

  v157 = a3;
  v4 = type metadata accessor for ActionMetrics(0, a2);
  __chkstk_darwin(v4);
  v165 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for UUID(0);
  v162 = *(_QWORD *)(v164 - 8);
  v6 = __chkstk_darwin(v164);
  v163 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Shelf.ContentsMetadata(0, v6);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v156 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for Shelf.PresentationHints(0);
  __chkstk_darwin(v150);
  v155 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for ShelfBackground(0);
  v148 = *(_QWORD *)(v149 - 8);
  v10 = __chkstk_darwin(v149);
  v152 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for ShelfHorizontalScrollTargetBehavior(0, v10);
  v145 = *(_QWORD *)(v146 - 8);
  v12 = __chkstk_darwin(v146);
  v151 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strategy = type metadata accessor for IncompleteShelfFetchStrategy(0, v12);
  v142 = *(_QWORD *)(Strategy - 8);
  __chkstk_darwin(Strategy);
  v160 = (char *)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v15);
  v166 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_100816850);
  __chkstk_darwin(v17);
  v159 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v19);
  v147 = (char *)&v133 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v158 = (char *)&v133 - v22;
  v23 = type metadata accessor for ShelfHeader.Configuration(0);
  __chkstk_darwin(v23);
  v139 = (char *)&v133 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DAF8(&qword_10080A300);
  __chkstk_darwin(v25);
  v138 = (char *)&v133 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v137 = (char *)&v133 - v28;
  v29 = sub_10000DAF8(&qword_10080A308);
  __chkstk_darwin(v29);
  v31 = (char *)&v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DAF8((uint64_t *)&unk_10080F0B0);
  __chkstk_darwin(v32);
  v34 = (char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Shelf.ContentType(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v133 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *a1;
  v40 = a1[1];
  v177 = 0;
  memset(v176, 0, sizeof(v176));
  v41 = *(void (**)(void))(v36 + 104);
  v140 = v38;
  v41();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v141 = v34;
  v42(v34, 1, 1, v35);
  v43 = type metadata accessor for ShelfMarker(0);
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v144 = v31;
  v44(v31, 1, 1, v43);
  v172 = xmmword_1006405F0;
  *(_QWORD *)&v169 = 0;
  *((_QWORD *)&v169 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(*((_QWORD *)&v169 + 1));
  *(_QWORD *)&v169 = 0xD000000000000018;
  *((_QWORD *)&v169 + 1) = 0x8000000100688550;
  v45 = (void *)objc_opt_self(ASDAppCapabilities);
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v45, "isCapableOfAction:capability:", 0, v46);

  if (v47)
    v48 = 7562585;
  else
    v48 = 28494;
  if (v47)
    v49 = 0xE300000000000000;
  else
    v49 = 0xE200000000000000;
  v50 = v49;
  String.append(_:)(*(Swift::String *)&v48);
  swift_bridgeObjectRelease(v49);
  v51 = *((_QWORD *)&v169 + 1);
  v134 = v169;
  v173 = v169;
  *(_QWORD *)&v169 = 0x203A6E65704FLL;
  *((_QWORD *)&v169 + 1) = 0xE600000000000000;
  v52 = String._bridgeToObjectiveC()();
  v53 = objc_msgSend(v45, "isCapableOfAction:capability:", 3, v52);

  if (v53)
    v54 = 7562585;
  else
    v54 = 28494;
  if (v53)
    v55 = 0xE300000000000000;
  else
    v55 = 0xE200000000000000;
  v56 = v55;
  String.append(_:)(*(Swift::String *)&v54);
  swift_bridgeObjectRelease(v55);
  v174 = v169;
  *(_QWORD *)&v169 = 0x203A657461647055;
  *((_QWORD *)&v169 + 1) = 0xE800000000000000;
  v136 = v39;
  v135 = v40;
  v57 = String._bridgeToObjectiveC()();
  v58 = objc_msgSend(v45, "isCapableOfAction:capability:", 1, v57);

  if (v58)
    v59 = 7562585;
  else
    v59 = 28494;
  if (v58)
    v60 = 0xE300000000000000;
  else
    v60 = 0xE200000000000000;
  v61 = v60;
  String.append(_:)(*(Swift::String *)&v59);
  swift_bridgeObjectRelease(v60);
  v175 = v169;
  v178 = _swiftEmptyArrayStorage;
  sub_1001F14F0(0, 3, 0);
  v62 = swift_bridgeObjectRetain(v51);
  v63 = v163;
  v64 = UUID.init()(v62);
  v65 = UUID.uuidString.getter(v64);
  v67 = v66;
  v68 = *(void (**)(char *, uint64_t))(v162 + 8);
  v68(v63, v164);
  v167 = v65;
  v168 = v67;
  v69 = AnyHashable.init<A>(_:)(&v167, &type metadata for String, &protocol witness table for String);
  v70 = v165;
  static ActionMetrics.notInstrumented.getter(v69);
  v71 = type metadata accessor for ImpressionMetrics(0);
  v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v73 = v166;
  v162 = v71;
  v161 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v166, 1, 1);
  v74 = type metadata accessor for Action(0);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v75 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v169, v134, v51, 0, 0, v70, v73);
  v76 = v178;
  if ((swift_isUniquelyReferenced_nonNull_native(v178) & 1) == 0)
  {
    sub_1001F14F0(0, v76[2] + 1, 1);
    v76 = v178;
  }
  v78 = v76[2];
  v77 = v76[3];
  if (v78 >= v77 >> 1)
  {
    sub_1001F14F0(v77 > 1, v78 + 1, 1);
    v76 = v178;
  }
  v170 = v74;
  v79 = sub_10000E720(&qword_10080A310, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  v171 = v79;
  *(_QWORD *)&v169 = v75;
  v76[2] = v78 + 1;
  sub_100010E24(&v169, (uint64_t)&v76[5 * v78 + 4]);
  v80 = v174;
  v81 = swift_bridgeObjectRetain(*((_QWORD *)&v174 + 1));
  v82 = v163;
  v83 = UUID.init()(v81);
  v84 = UUID.uuidString.getter(v83);
  v86 = v85;
  v68(v82, v164);
  v167 = v84;
  v168 = v86;
  v87 = AnyHashable.init<A>(_:)(&v167, &type metadata for String, &protocol witness table for String);
  v88 = v165;
  static ActionMetrics.notInstrumented.getter(v87);
  v89 = v166;
  v161(v166, 1, 1, v162);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v90 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v169, v80, *((_QWORD *)&v80 + 1), 0, 0, v88, v89);
  v91 = v178;
  if ((swift_isUniquelyReferenced_nonNull_native(v178) & 1) == 0)
  {
    sub_1001F14F0(0, v91[2] + 1, 1);
    v91 = v178;
  }
  v93 = v91[2];
  v92 = v91[3];
  if (v93 >= v92 >> 1)
  {
    sub_1001F14F0(v92 > 1, v93 + 1, 1);
    v91 = v178;
  }
  v170 = v74;
  v171 = v79;
  *(_QWORD *)&v169 = v90;
  v91[2] = v93 + 1;
  sub_100010E24(&v169, (uint64_t)&v91[5 * v93 + 4]);
  v94 = v175;
  v95 = swift_bridgeObjectRetain(*((_QWORD *)&v175 + 1));
  v96 = v163;
  v97 = UUID.init()(v95);
  v98 = UUID.uuidString.getter(v97);
  v100 = v99;
  v68(v96, v164);
  v167 = v98;
  v168 = v100;
  v101 = AnyHashable.init<A>(_:)(&v167, &type metadata for String, &protocol witness table for String);
  v102 = v165;
  static ActionMetrics.notInstrumented.getter(v101);
  v103 = v166;
  v161(v166, 1, 1, v162);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v104 = Action.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v169, v94, *((_QWORD *)&v94 + 1), 0, 0, v102, v103);
  v105 = v178;
  if ((swift_isUniquelyReferenced_nonNull_native(v178) & 1) == 0)
  {
    sub_1001F14F0(0, v105[2] + 1, 1);
    v105 = v178;
  }
  v107 = v105[2];
  v106 = v105[3];
  if (v107 >= v106 >> 1)
  {
    sub_1001F14F0(v106 > 1, v107 + 1, 1);
    v105 = v178;
  }
  v170 = v74;
  v171 = v79;
  *(_QWORD *)&v169 = v104;
  v105[2] = v107 + 1;
  sub_100010E24(&v169, (uint64_t)&v105[5 * v107 + 4]);
  swift_arrayDestroy(&v173, v172, &type metadata for String);
  v108 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56);
  v110 = v137;
  v109(v137, 1, 1, v108);
  v111 = v138;
  v109(v138, 1, 1, v108);
  v112 = v135;
  v113 = swift_bridgeObjectRetain(v135);
  v114 = v139;
  ShelfHeader.Configuration.init(eyebrowColor:eyebrowImageColor:titleColor:titleImageColor:subtitleColor:accessoryColor:includeSeparator:includeTrailingArtwork:prefersShelfHeader:)(0, 0, 0, 0, 0, 0, 2, 2, v113, 2);
  v115 = type metadata accessor for ShelfHeader(0);
  swift_allocObject(v115, *(unsigned int *)(v115 + 48), *(unsigned __int16 *)(v115 + 52));
  v165 = (char *)ShelfHeader.init(eyebrow:eyebrowArtwork:eyebrowArtworkType:eyebrowAction:eyebrowTrailingArtwork:title:titleArtwork:titleArtworkType:titleAction:subtitle:trailingArtwork:accessoryAction:configuration:)(0, 0, 0, v110, 0, 0, v136, v112, 0, v111, 0, 0, 0, 0, 0, v114);
  v117 = type metadata accessor for URL(0, v116);
  v118 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56);
  v118(v158, 1, 1, v117);
  v119 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v159, 1, 1, v119);
  v120 = v166;
  v161(v166, 1, 1, v162);
  v121 = v147;
  v118(v147, 1, 1, v117);
  (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v160, enum case for IncompleteShelfFetchStrategy.onPageLoad(_:), Strategy);
  v122 = v151;
  (*(void (**)(char *, _QWORD, uint64_t))(v145 + 104))(v151, enum case for ShelfHorizontalScrollTargetBehavior.viewAligned(_:), v146);
  v123 = v152;
  (*(void (**)(char *, _QWORD, uint64_t))(v148 + 104))(v152, enum case for ShelfBackground.none(_:), v149);
  v124 = sub_10000DAF8(&qword_10080A318);
  swift_allocObject(v124, *(unsigned int *)(v124 + 48), *(unsigned __int16 *)(v124 + 52));
  v125 = AsyncEvent.init()();
  *(_QWORD *)&v169 = _swiftEmptyArrayStorage;
  v126 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v127 = sub_10000DAF8(&qword_10080A320);
  v128 = sub_10005E5D0();
  v129 = v155;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v169, v127, v128, v150, v126);
  v130 = v156;
  (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v156, enum case for Shelf.ContentsMetadata.none(_:), v154);
  v131 = type metadata accessor for Shelf(0);
  swift_allocObject(v131, *(unsigned int *)(v131 + 48), *(unsigned __int16 *)(v131 + 52));
  result = Shelf.init(id:contentType:placeholderContentType:marker:items:header:url:mergeWhenFetched:batchGroup:fetchStrategy:footerTitle:footerAction:isHidden:isHorizontal:horizontalScrollTargetBehavior:isPersonalized:rowsPerColumn:background:onShouldRemoveModel:removeModelEvents:presentationHints:contentsMetadata:nextPreferredContentRefreshDate:impressionMetrics:refreshUrl:pageChangeMetrics:adIncidents:)(v176, v140, v141, v144, v105, v165, v158, 0, 0, 0, v160, 0, 0, 0, 0, v122, 0, 0, v123,
             v125,
             _swiftEmptyArrayStorage,
             v129,
             v130,
             v159,
             v120,
             v121,
             0,
             0);
  *v157 = result;
  return result;
}

id sub_10005DDEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppCapabilitiesSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppCapabilitiesSettings()
{
  return objc_opt_self(_TtC20ProductPageExtension23AppCapabilitiesSettings);
}

uint64_t sub_10005DE3C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005DE60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10005DE8C(uint64_t a1)
{
  uint64_t v1;

  sub_10005CEC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10005DE94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD v83[2];
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87[2];

  v82 = a1;
  v1 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v1);
  v78 = (uint64_t)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  __chkstk_darwin(v3);
  v79 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_10080A2F8);
  v6 = __chkstk_darwin(v5);
  v77 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageMetrics(0, v6);
  v9 = __chkstk_darwin(v8);
  v76 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for FlowOrigin(0, v9);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v75 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for FlowAnimationBehavior(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v74 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for FlowPresentationContext(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v72 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ActionMetrics(0, v14);
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v18);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v21);
  v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FlowPage(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v83[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(2);
  *(_QWORD *)&v84 = 0xD00000000000001ELL;
  *((_QWORD *)&v84 + 1) = "com.apple.AppStore.newFeatures";
  swift_bridgeObjectRetain("com.apple.AppStore.newFeatures");
  sub_10005CF1C((uint64_t *)&v84, v28, v87);
  swift_bridgeObjectRelease("com.apple.AppStore.newFeatures");
  v29 = v87[0];
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
  v31 = *(_QWORD *)(*(_QWORD *)&v83[0] + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
  v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
  specialized ContiguousArray._endMutation()(v32);
  *(_QWORD *)&v84 = 0xD00000000000001CLL;
  *((_QWORD *)&v84 + 1) = "uses-non-webkit-browser-engine";
  swift_bridgeObjectRetain("uses-non-webkit-browser-engine");
  sub_10005CF1C((uint64_t *)&v84, v33, v87);
  swift_bridgeObjectRelease("uses-non-webkit-browser-engine");
  v34 = v87[0];
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v36 = *(_QWORD *)(*(_QWORD *)&v83[0] + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v36);
  v37 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
  specialized ContiguousArray._endMutation()(v37);
  v38 = *(_QWORD *)&v83[0];
  swift_arrayDestroy(&qword_100735380, 2, &type metadata for String);
  v86 = 0;
  v84 = 0u;
  v85 = 0u;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, enum case for FlowPage.page(_:), v24);
  v40 = type metadata accessor for URL(0, v39);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 1, 1, v40);
  v41 = type metadata accessor for ReferrerData(0);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v20, 1, 1, v41);
  memset(v83, 0, sizeof(v83));
  static ActionMetrics.notInstrumented.getter(v42);
  v43 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v72, enum case for FlowPresentationContext.infer(_:), v68);
  v44 = v74;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v74, enum case for FlowAnimationBehavior.infer(_:), v70);
  v45 = v75;
  v46 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v71 + 104))(v75, enum case for FlowOrigin.inapp(_:), v73);
  v47 = static FlowActionPresentation.stackPush.getter(v46);
  v49 = v48;
  v50 = type metadata accessor for FlowAction(0);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v84, 0, 0, 0, v27, v23, 0, 0, v20, v83, v17, v43, v44, v45, 0, v47, v49);
  v84 = 0u;
  v85 = 0u;
  v52 = v76;
  static PageMetrics.notInstrumented.getter();
  v53 = type metadata accessor for JSONContext(0);
  v54 = v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v77, 1, 1, v53);
  v55 = type metadata accessor for GenericPage(0);
  swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
  v56 = GenericPage.init(shelves:title:shareAction:presentationOptions:nextPage:isIncomplete:uber:loadCompletedAction:pageRefreshPolicy:pageMetrics:pageRenderEvent:context:)(v38, 0xD000000000000010, 0x8000000100688530, 0, 0, &v84, 0, 0, 0, 0, v52, 0, v54);
  *((_QWORD *)&v85 + 1) = v55;
  *(_QWORD *)&v84 = v56;
  FlowAction.setPageData(_:)(&v84);
  sub_100010F2C((uint64_t)&v84, &qword_100808F20);
  v57 = v82;
  v58 = v82 + qword_10086B3B0;
  swift_beginAccess(v82 + qword_10086B3B0, &v84, 0, 0);
  v59 = v58;
  v60 = v78;
  sub_10005E588(v59, v78);
  v62 = v80;
  v61 = v81;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v60, 1, v81) == 1)
  {
    sub_100010F2C(v60, (uint64_t *)&unk_100809290);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v61, v61);
    __break(1u);
  }
  else
  {
    v63 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v79, v60, v61);
    swift_retain(v51);
    v65 = sub_10032D5D4(v64, v57, v63);
    swift_release(v51);
    v66 = swift_release(v65);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v63, v61, v66);
    swift_release(v51);
  }
}

uint64_t sub_10005E588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100809290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005E5D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081DB50;
  if (!qword_10081DB50)
  {
    v1 = sub_100010DE0(&qword_10080A320);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10081DB50);
  }
  return result;
}

id sub_10005E61C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  objc_super v18;

  v3 = v2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_artworkLoader] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_maxPlayersToShow] = a1;
  v6 = &v3[OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_layoutConfiguration];
  v7 = type metadata accessor for AvatarShowcaseLayoutConfiguration(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v10 = AvatarShowcaseLayoutConfiguration.visibleWidth.getter(v9) * (double)a1;
  v11 = v10 + AvatarShowcaseLayoutConfiguration.overlappedWidth.getter();
  v12 = AvatarShowcaseLayoutConfiguration.width.getter();
  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for AvatarShowcaseView(0);
  v13 = objc_msgSendSuper2(&v18, "initWithFrame:", 0.0, 0.0, v11, v12);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v13;
  v16 = objc_msgSend(v14, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v15;
}

void sub_10005E7CC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  objc_class *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;

  v3 = v2;
  v6 = sub_10000DAF8(&qword_10080CE10);
  __chkstk_darwin(v6);
  v69 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CornerStyle(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005ED9C();
  swift_retain(a2);
  sub_10005F070(v11);
  v66 = a2;
  swift_release();
  if ((unint64_t)a1 >> 62)
    goto LABEL_52;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_maxPlayersToShow] >= v13)
    v14 = v13;
  else
    v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_maxPlayersToShow];
  v15 = AvatarShowcaseLayoutConfiguration.visibleWidth.getter(v12) * (double)v14;
  v16 = v15 + AvatarShowcaseLayoutConfiguration.overlappedWidth.getter();
  objc_msgSend(v3, "frame");
  v18 = v17;
  v20 = v19;
  objc_msgSend(v3, "frame");
  objc_msgSend(v3, "setFrame:", v18, v20, v16);
  if (v14 < 0)
  {
    __break(1u);
LABEL_57:
    __break(1u);
    return;
  }
  if (v14)
  {
    v63 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0 || (unint64_t)(v14 - 1) < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v65 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v21 = 0;
      v64 = enum case for CornerStyle.arc(_:);
      v61 = v14;
      v62 = a1;
      while (1)
      {
        v29 = ((double (*)(void))AvatarShowcaseLayoutConfiguration.width.getter)();
        v30 = (v29 - AvatarShowcaseLayoutConfiguration.overlappedWidth.getter()) * (double)v21;
        v31 = ((double (*)(void))AvatarShowcaseLayoutConfiguration.width.getter)();
        v32 = ((double (*)(void))AvatarShowcaseLayoutConfiguration.width.getter)();
        v33 = (objc_class *)type metadata accessor for ArtworkView(0);
        v34 = objc_msgSend(objc_allocWithZone(v33), "initWithFrame:", v30, 0.0, v31, v32);
        v35 = static UIColor.placeholderBackground.getter(v34);
        v36 = ArtworkView.backgroundColor.setter(v35);
        v37 = floor(AvatarShowcaseLayoutConfiguration.width.getter(v36) * 0.5);
        v39 = v67;
        v38 = v68;
        (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v10, v64, v68);
        ArtworkView.setCorner(radius:style:)(v10, v37);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v38);
        if (qword_100804AB8 != -1)
          swift_once(&qword_100804AB8, sub_100141254);
        v40 = type metadata accessor for Shadow(0);
        v41 = sub_10000EFC4(v40, (uint64_t)qword_1008654A8);
        v42 = *(_QWORD *)(v40 - 8);
        v43 = v69;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v69, v41, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v40);
        ArtworkView.shadow.setter(v43);
        v44 = objc_msgSend(v3, "traitCollection");
        LOBYTE(v42) = UITraitCollection.prefersRightToLeftLayouts.getter();

        v45 = objc_msgSend(v3, "subviews");
        v46 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
        v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

        v48 = (unint64_t)v47 >> 62;
        if ((v42 & 1) != 0)
        {
          if (v48)
          {
            if (v47 < 0)
              v56 = v47;
            else
              v56 = v47 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v47);
            v49 = _CocoaArrayWrapper.endIndex.getter(v56);
            swift_bridgeObjectRelease(v47);
            if (!v49)
              goto LABEL_11;
          }
          else
          {
            v49 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v49)
              goto LABEL_11;
          }
          v50 = v49 - 1;
          if (__OFSUB__(v49, 1))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            if (a1 < 0)
              v59 = a1;
            else
              v59 = a1 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(a1);
            v13 = _CocoaArrayWrapper.endIndex.getter(v59);
            swift_bridgeObjectRelease(a1);
            goto LABEL_3;
          }
          if ((v47 & 0xC000000000000001) == 0)
          {
            if ((v50 & 0x8000000000000000) != 0)
              goto LABEL_49;
            if (v50 >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_50;
            v51 = *(void **)(v47 + 8 * v50 + 32);
            goto LABEL_29;
          }
        }
        else
        {
          if (v48)
          {
            if (v47 < 0)
              v57 = v47;
            else
              v57 = v47 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v47);
            v58 = _CocoaArrayWrapper.endIndex.getter(v57);
            swift_bridgeObjectRelease(v47);
            if (!v58)
            {
LABEL_11:
              objc_msgSend(v3, "addSubview:", v34, swift_bridgeObjectRelease(v47).n128_f64[0]);
              v22 = 0;
              if (!v63)
                goto LABEL_34;
              goto LABEL_12;
            }
          }
          else if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_11;
          }
          if ((v47 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_51;
            v51 = *(void **)(v47 + 32);
LABEL_29:
            v52 = v51;
            goto LABEL_30;
          }
          v50 = 0;
        }
        v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v47);
LABEL_30:
        v53 = v52;
        swift_bridgeObjectRelease(v47);
        v22 = v53;
        v54 = objc_msgSend(v3, "traitCollection");
        v55 = UITraitCollection.prefersRightToLeftLayouts.getter();

        if ((v55 & 1) != 0)
          objc_msgSend(v3, "insertSubview:aboveSubview:", v34, v22);
        else
          objc_msgSend(v3, "insertSubview:belowSubview:", v34, v22);

        if (!v63)
        {
LABEL_34:
          swift_retain(*(_QWORD *)(a1 + 8 * v21 + 32));
          goto LABEL_13;
        }
LABEL_12:
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, a1);
LABEL_13:
        ++v21;
        v24 = AvatarShowcaseLayoutConfiguration.width.getter(v23);
        v26 = AvatarShowcaseLayoutConfiguration.width.getter(v25);
        v27 = Artwork.config(using:)(v24, v26);
        v28 = sub_1000116A4();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v27, 2, 1, v34, v33, v28);

        swift_release();
        swift_release();

        a1 = v62;
        if (v61 == v21)
          return;
      }
    }
    goto LABEL_57;
  }
}

void sub_10005ED9C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  sub_10005F070(0);
  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "removeFromSuperview");

    }
    goto LABEL_13;
  }
  __break(1u);
}

id sub_10005EEDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AvatarShowcaseView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005EF60()
{
  return type metadata accessor for AvatarShowcaseView(0);
}

uint64_t type metadata accessor for AvatarShowcaseView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A358;
  if (!qword_10080A358)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AvatarShowcaseView);
  return result;
}

uint64_t sub_10005EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for AvatarShowcaseLayoutConfiguration(319, a2);
  if (v4 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_10005F028(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)type metadata accessor for AvatarShowcaseView(0));
  return sub_10005E61C(a1, a2);
}

void sub_10005F070(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v2 = OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_artworkLoader;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension18AvatarShowcaseView_artworkLoader] = a1;
  swift_retain(a1);
  swift_release();
  if (!*(_QWORD *)&v1[v2])
    return;
  v3 = objc_msgSend(v1, "subviews", swift_retain(*(_QWORD *)&v1[v2]).n128_f64[0]);
  v4 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v14 = v5;
    else
      v14 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v5);
    if (v6)
      goto LABEL_4;
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease(v5);
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_17;
LABEL_4:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      v10 = type metadata accessor for ArtworkView(0);
      v11 = swift_dynamicCastClass(v9, v10);
      if (v11)
      {
        v12 = v11;
        v13 = sub_1000116A4();
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v12, 1, v10, v13);
      }

    }
    goto LABEL_17;
  }
  __break(1u);
}

unint64_t sub_10005F208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080A368;
  if (!qword_10080A368)
  {
    v1 = type metadata accessor for EditorialStoryCardCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_100642A98, v1);
    atomic_store(result, (unint64_t *)&qword_10080A368);
  }
  return result;
}

double sub_10005F250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  __n128 v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for AspectRatio(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for PageGrid(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfLayoutContext(0);
  v28 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v15);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(a2, v18, 0, 0, 0);
  ShelfLayoutContext.contentPageGrid.getter(v19);
  v20 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  ShelfLayoutContext.traitEnvironment.getter(v21);
  if (JUScreenClassGetMain(v22) == 1)
  {
    if (qword_100806B80 != -1)
      swift_once(&qword_100806B80, sub_100553CB0);
    v23 = qword_10082AF30;
  }
  else
  {
    if (qword_100806B78 != -1)
      swift_once(&qword_100806B78, sub_100553C90);
    v23 = qword_10082AF18;
  }
  v24 = sub_10000EFC4(v3, (uint64_t)v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v24, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
  v25 = AspectRatio.height(fromWidth:)(v20);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v26 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v17, v29, v26);
  return round(v25);
}

double sub_10005F4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  __n128 v14;
  uint64_t *v15;
  uint64_t v16;
  double v17;
  uint64_t v19;

  v0 = type metadata accessor for AspectRatio(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - v5;
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v11);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  ShelfLayoutContext.traitEnvironment.getter(v13);
  if (JUScreenClassGetMain(v14) == 1)
  {
    if (qword_100806B80 != -1)
      swift_once(&qword_100806B80, sub_100553CB0);
    v15 = qword_10082AF30;
  }
  else
  {
    if (qword_100806B78 != -1)
      swift_once(&qword_100806B78, sub_100553C90);
    v15 = qword_10082AF18;
  }
  v16 = sub_10000EFC4(v0, (uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v16, v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
  v17 = AspectRatio.height(fromWidth:)(v12);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  swift_unknownObjectRelease();
  return round(v17);
}

char *sub_10005F67C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  ObjectType = swift_getObjectType();
  v6 = &v2[qword_1008649B0];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  v7 = type metadata accessor for AdvertRotationControllerProvider(0);
  v8 = type metadata accessor for ObjectGraph(0);
  v9 = v2;
  inject<A, B>(_:from:)(v7, a2, v7, v8);
  *(_QWORD *)&v9[qword_10080A370] = v20;

  swift_retain(a1);
  swift_retain(a2);
  v10 = (char *)sub_1002547D8(a1, a2);
  v11 = *(void **)&v10[qword_100866528];
  v12 = *(_QWORD *)&v10[qword_10080A370];
  v13 = v10;
  v14 = v11;
  swift_retain(v12);
  CompoundScrollObserver.addChild(_:)(v15, &protocol witness table for AdvertRotationControllerProvider);

  swift_release();
  v16 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v17 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100640600;
  *(_QWORD *)(v17 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v17 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(_QWORD *)(v17 + 48) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v17 + 56) = &protocol witness table for UITraitLayoutDirection;
  v18 = v13;
  UIViewController.registerForTraitChanges<A>(_:handler:)(v17, sub_100060974, 0, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v17);

  swift_release();
  swift_release();
  return v18;
}

void sub_10005F820()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  void *v26;
  objc_super v27[2];
  objc_super v28;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AutomationSemantics(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28.receiver = v0;
  v28.super_class = ObjectType;
  objc_msgSendSuper2(&v28, "viewDidLoad", v9);
  v12 = objc_msgSend(v0, "collectionView");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "setKeyboardDismissMode:", 1);

  }
  v14 = objc_msgSend(v1, "collectionView");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setAllowsSelection:", 1);

  }
  v16 = objc_msgSend(v1, "collectionView");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  }
  v18 = objc_msgSend(v1, "collectionView");
  if (v18)
  {
    v19 = v18;
    memset(v27, 0, sizeof(v27));
    static AutomationSemantics.page(name:id:)(0x6F46686372616573, 0xEB00000000737563, v27);
    sub_100010F2C((uint64_t)v27, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v11);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v20 = sub_10000DAF8((uint64_t *)&unk_10080B800);
    v21 = swift_allocObject(v20, 64, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100640600;
    *(_QWORD *)(v21 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v21 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(_QWORD *)(v21 + 48) = type metadata accessor for UITraitLegibilityWeight(0);
    *(_QWORD *)(v21 + 56) = &protocol witness table for UITraitLegibilityWeight;
    UIViewController.registerForTraitChanges<A>(_:handler:)(v21, sub_100060A44, 0, ObjectType);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease(v21);
    if (qword_100806808 != -1)
      swift_once(&qword_100806808, sub_1004D5230);
    v22 = type metadata accessor for StaticDimension(0);
    v23 = sub_10000EFC4(v22, (uint64_t)qword_10086A848);
    static Dimensions.defaultRoundingRule.getter(v23);
    v24 = AnyDimension.value(in:rounded:)(v1, v6, v22, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    objc_msgSend(v1, "additionalSafeAreaInsets");
    objc_msgSend(v1, "setAdditionalSafeAreaInsets:", v24);
    v25 = objc_msgSend(v1, "view");
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v25, "setNeedsLayout");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10005FB64(void *a1)
{
  id v1;

  v1 = a1;
  sub_10005F820();

}

void sub_10005FB98(void *a1, uint64_t a2)
{
  sub_10005FBD4(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10005FBAC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10005FC50(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10005FBC0(void *a1, uint64_t a2)
{
  sub_10005FBD4(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10005FBD4(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_10005FC3C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10005FC50(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10005FC50(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1, a2);
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

uint64_t sub_10005FCC0()
{
  return sub_10005FD2C((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_10005FCDC(void *a1)
{
  id v1;

  v1 = a1;
  sub_10005FCC0();

}

uint64_t sub_10005FD10()
{
  return sub_10005FD2C((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_10005FD2C(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_100010EC0(v11, (uint64_t)v22);
  if (v23)
  {
    sub_10000EF80((uint64_t)v22, (uint64_t)v18);
    sub_100010F2C((uint64_t)v22, &qword_10080AFE0);
    v12 = v19;
    v13 = v20;
    sub_100010F08(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v18);
  }
  else
  {
    v14 = sub_100010F2C((uint64_t)v22, &qword_10080AFE0);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_10005FE90(void *a1)
{
  id v1;

  v1 = a1;
  sub_10005FD10();

}

id sub_10005FEC4()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DAF8(&qword_100807C20);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1006405F0;
  v5 = *(_QWORD *)&v0[qword_1008664F0];
  v6 = *(_QWORD *)&v0[qword_10080A370];
  v7 = sub_10000DAF8(&qword_10080A918);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(v5);
  v8 = swift_retain(v6);
  v9 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v5, v6, v8);
  v10 = sub_100010E80(&qword_10080A920, &qword_10080A918, (uint64_t)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v10;
  v11 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v12 = swift_allocObject(v11, 17, 7);
  *(_BYTE *)(v12 + 16) = 1;
  v13 = sub_10000E720(&qword_100807C38, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10066DE20);
  *(_QWORD *)(v4 + 48) = v12;
  *(_QWORD *)(v4 + 56) = v13;
  v14 = sub_10000E720(&qword_10080A8F8, type metadata accessor for SearchFocusDiffablePageViewController, (uint64_t)&unk_100654940);
  v15 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v25, ObjectType, v14);
  v16 = TimedMetricsPagePresenter.impressionsCalculator.getter(v15);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v6);
  result = objc_msgSend(v1, "collectionView", swift_retain(v17).n128_f64[0]);
  if (result)
  {
    v19 = result;
    v20 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    *(_QWORD *)(v4 + 64) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v25, v16, v6, v17, v19);
    *(_QWORD *)(v4 + 72) = &protocol witness table for ImpressionsCollectionElementsObserver;
    v21 = type metadata accessor for CompoundCollectionElementsObserver(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v22 = CompoundCollectionElementsObserver.init(children:)(v4);
    v23 = sub_1005B5730();
    if (swift_dynamicCastClass(v23, v21))
    {
      v24 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_10001025C, 0);
      CompoundCollectionElementsObserver.addChild(_:)(v24, &protocol witness table for CompoundCollectionElementsObserver);
      swift_unknownObjectRelease();
      swift_release(v24);
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return (id)v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100060140@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SearchFocusPageShelfLayoutSpacingProvider;
  result = sub_100060A00();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100060170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];

  v0 = sub_10000DAF8(&qword_100807BE8);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100640600;
  v2 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v3 = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(v3 + 16) = 1;
  v4 = sub_10000E720(&qword_100807BF0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_10065CE74);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_10000DAF8(&qword_10080A900);
  v6 = sub_100010E80(&qword_10080A908, &qword_10080A900, (uint64_t)&unk_100654940);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v14, v5, v6);
  v7 = type metadata accessor for GenericPageItemSupplementaryProvider();
  v8 = swift_allocObject(v7, 64, 7);
  sub_10000EF80((uint64_t)v14, v8 + 16);
  v9 = type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  v10 = swift_allocObject(v9, 56, 7);
  sub_100010E24(v14, v10 + 16);
  *(_QWORD *)(v8 + 56) = v10;
  v11 = sub_10000E720(&qword_100817650, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider, (uint64_t)&unk_10066C7C8);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v11;
  v12 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v1);
}

uint64_t sub_1000602D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  _QWORD v25[4];
  __int128 v26;
  _QWORD v27[4];
  _QWORD v28[4];
  _QWORD v29[5];

  ObjectType = swift_getObjectType();
  v4 = sub_10000E720(&qword_10080A8F8, type metadata accessor for SearchFocusDiffablePageViewController, (uint64_t)&unk_100654940);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v29, ObjectType, v4);
  v26 = xmmword_100640600;
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v27[3] = swift_getObjectType();
  v27[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v28[3] = swift_getObjectType();
  v28[0] = v6;
  sub_100010D84((uint64_t)v27, (uint64_t)v25);
  sub_100010D84((uint64_t)v25, (uint64_t)v23);
  v7 = sub_10000DAF8((uint64_t *)&unk_100817640);
  v8 = sub_10000DAF8(&qword_100807BE0);
  if ((swift_dynamicCast(&v24, v23, v7, v8, 6) & 1) == 0)
    v24 = 0uLL;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  if ((_QWORD)v24)
  {
    v21 = v24;
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = sub_1003D99D0(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_1003D99D0((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v21;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100010D84((uint64_t)v28, (uint64_t)v25);
  sub_100010D84((uint64_t)v25, (uint64_t)v23);
  v12 = sub_10000DAF8((uint64_t *)&unk_100817640);
  v13 = sub_10000DAF8(&qword_100807BE0);
  if ((swift_dynamicCast(&v24, v23, v12, v13, 6) & 1) == 0)
    v24 = 0uLL;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v25);
  if ((_QWORD)v24)
  {
    v22 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_1003D99D0(0, v9[2] + 1, 1, v9);
    v15 = v9[2];
    v14 = v9[3];
    v16 = v22;
    if (v15 >= v14 >> 1)
    {
      v20 = sub_1003D99D0((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v22;
      v9 = v20;
    }
    v9[2] = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v27, v26, (char *)&type metadata for Any + 8);
  v17 = *(_QWORD *)(v1 + qword_100866540);
  v18 = type metadata accessor for SearchFocusLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain(v17);
  result = sub_10049F8A0(v29, (uint64_t)v9, v17, 0);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = result;
  return result;
}

unint64_t sub_1000605DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PageGridCache.init()();
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = PageGridCache.init()();
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for SearchFocusPageGridProvider;
  result = sub_1000609BC();
  a1[4] = result;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

void sub_100060680(void *a1, uint64_t a2, void *a3)
{
  id v4;
  char *v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = a3;
  v5 = (char *)v12.receiver;
  objc_msgSendSuper2(&v12, "scrollViewWillBeginDragging:", v4);
  v6 = &v5[qword_1008649B0];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[qword_1008649B0]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);

    swift_unknownObjectRelease(v9);
  }
  else
  {

  }
}

uint64_t sub_10006072C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SearchFocusShelfComponentTypeMappingProvider();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(_QWORD *)(v3 + 16) = swift_allocObject(v4, 16, 7);
  a1[3] = v2;
  result = sub_10000E720(&qword_10080A8E8, (uint64_t (*)(uint64_t))type metadata accessor for SearchFocusShelfComponentTypeMappingProvider, (uint64_t)&unk_100654ED8);
  a1[4] = result;
  *a1 = v3;
  return result;
}

void sub_1000607B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_10000DAF8(&qword_10080A8E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100600D34(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:))
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  else
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100060880()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_10080A370));
  return sub_100010D1C(v0 + qword_1008649B0);
}

uint64_t sub_1000608AC(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_10080A370));
  return sub_100010D1C(a1 + qword_1008649B0);
}

uint64_t type metadata accessor for SearchFocusDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A3A0;
  if (!qword_10080A3A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchFocusDiffablePageViewController);
  return result;
}

uint64_t sub_100060920(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_100642B98;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_10006096C()
{
  return type metadata accessor for SearchFocusDiffablePageViewController(0);
}

void sub_100060974(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1000609BC()
{
  unint64_t result;

  result = qword_10080A8F0;
  if (!qword_10080A8F0)
  {
    result = swift_getWitnessTable(&unk_100641C8C, &type metadata for SearchFocusPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_10080A8F0);
  }
  return result;
}

unint64_t sub_100060A00()
{
  unint64_t result;

  result = qword_10080A910;
  if (!qword_10080A910)
  {
    result = swift_getWitnessTable(&unk_10065164C, &type metadata for SearchFocusPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_10080A910);
  }
  return result;
}

void sub_100060A44(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;

  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806808 != -1)
    swift_once(&qword_100806808, sub_1004D5230);
  v6 = type metadata accessor for StaticDimension(0);
  v7 = sub_10000EFC4(v6, (uint64_t)qword_10086A848);
  static Dimensions.defaultRoundingRule.getter(v7);
  v8 = AnyDimension.value(in:rounded:)(a1, v5, v6, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(a1, "additionalSafeAreaInsets");
  objc_msgSend(a1, "setAdditionalSafeAreaInsets:", v8);
  v9 = objc_msgSend(a1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

double sub_100060B88()
{
  double result;

  result = 8.0;
  xmmword_10080A928 = xmmword_100642BB0;
  *(_OWORD *)algn_10080A938 = xmmword_100642BC0;
  return result;
}

uint64_t sub_100060BA8(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  __n128 v18;
  char *v19;
  char *v20;
  NSString *v21;
  id v22;
  NSString *v23;
  NSString *v24;
  uint64_t result;
  NSString *v26;
  id v27;
  char v28;
  NSString *v29;
  id v30;
  NSString *v31;
  NSString *v32;
  NSString *v33;
  id v34;
  char v35;
  id v36;
  uint64_t v37;
  void *v38;
  objc_class *v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  NSString *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  objc_class *v62;
  _QWORD v63[4];
  objc_super v64;
  objc_super v65;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for CornerStyle(0);
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_allocWithZone((Class)type metadata accessor for AppPromotionFormattedDateView());
  v14 = v4;
  v15 = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView] = v15;

  v65.receiver = v14;
  v65.super_class = ObjectType;
  v62 = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v65, "initWithFrame:", a1, a2, a3, a4);
  v59 = OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView;
  v17 = *(char **)&v16[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_delegate + 8] = &off_100738E30;
  swift_unknownObjectWeakAssign(v18);
  v19 = v16;
  v20 = v17;
  v21 = (NSString *)objc_msgSend(v19, "traitCollection");
  v22 = -[NSString preferredContentSizeCategory](v21, "preferredContentSizeCategory");
  v23 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v24 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  result = static UIContentSizeCategory.<= infix(_:_:)(v23, v24);
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v22, v23) & 1) != 0)
  {
    v26 = v24;
    v27 = v22;
    v28 = static UIContentSizeCategory.<= infix(_:_:)(v27, v26);

    if ((v28 & 1) != 0)
    {
      v29 = UIContentSizeCategoryAccessibilityLarge;
      goto LABEL_12;
    }
  }
  else
  {

  }
  v30 = -[NSString preferredContentSizeCategory](v21, "preferredContentSizeCategory");
  v31 = UIContentSizeCategoryAccessibilityMedium;
  v32 = UIContentSizeCategoryAccessibilityExtraLarge;
  result = static UIContentSizeCategory.<= infix(_:_:)(v31, v32);
  if ((result & 1) == 0)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v30, v31) & 1) != 0)
  {
    v33 = v32;
    v34 = v30;
    v35 = static UIContentSizeCategory.<= infix(_:_:)(v34, v33);

    if ((v35 & 1) != 0)
      v29 = v31;
    else
      v29 = 0;
  }
  else
  {

    v29 = 0;
    v21 = v31;
  }
LABEL_12:

  objc_msgSend(v20, "setMaximumContentSizeCategory:", v29);
  v36 = objc_msgSend(v19, "contentView");
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v16[v59]);

  v37 = OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_infoLayer;
  v38 = *(void **)&v19[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_infoLayer];
  v39 = (objc_class *)type metadata accessor for TodayCardInfoLayerView();
  v64.receiver = v38;
  v64.super_class = v39;
  v40 = v19;
  v41 = objc_msgSendSuper2(&v64, "_setContinuousCornerRadius:", 14.0);
  sub_1002A58F0((uint64_t)v41, v42);

  *(_QWORD *)&v40[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaCornerRadius] = 0x4022000000000000;
  v44 = v60;
  v43 = v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v12, enum case for CornerStyle.continuous(_:), v61);
  if (v40[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_shouldMirrorBackground])
    v45 = 3;
  else
    v45 = -1;
  v46 = v40;
  sub_10021F38C((uint64_t)v12, v45, 9.0);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v43);
  v47 = *(void **)&v46[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundViewMirror];
  v48 = v46;
  if (v47)
  {
    v49 = v47;
    objc_msgSend(v49, "_setContinuousCornerRadius:", 9.0);
    v48 = (char *)objc_msgSend(v49, "layer");
    objc_msgSend(v48, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(12));

  }
  v50 = objc_msgSend(v46, "contentView");
  objc_msgSend(v50, "_setContinuousCornerRadius:", 14.0);

  v51 = objc_msgSend(v46, "contentView");
  v52 = objc_msgSend(v51, "layer");

  objc_msgSend(v52, "setMaskedCorners:", 3);
  v53 = *(_QWORD *)&v19[v37];
  v54 = *(void **)(v53 + OBJC_IVAR____TtC20ProductPageExtension22TodayCardInfoLayerView_preferredGradientType);
  *(_QWORD *)(v53 + OBJC_IVAR____TtC20ProductPageExtension22TodayCardInfoLayerView_preferredGradientType) = kCAGradientLayerAxial;
  v55 = kCAGradientLayerAxial;

  sub_100061148();
  v56 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v57 = swift_allocObject(v56, 48, 7);
  *(_OWORD *)(v57 + 16) = xmmword_100640720;
  *(_QWORD *)(v57 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v57 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v63[3] = v62;
  v63[0] = v46;
  v58 = v46;
  UIView.registerForTraitChanges(_:target:action:)(v57, v63, "applySizeCategoryUpdates");
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v57);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v63);
  return (uint64_t)v58;
}

uint64_t sub_100061148()
{
  char *v0;
  void *v1;
  NSString *v2;
  id v3;
  NSString *v4;
  NSString *v5;
  uint64_t result;
  NSString *v7;
  id v8;
  char v9;
  NSString *v10;
  id v11;
  NSString *v12;
  NSString *v13;
  NSString *v14;
  id v15;
  char v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
  v2 = (NSString *)objc_msgSend(v0, "traitCollection");
  v3 = -[NSString preferredContentSizeCategory](v2, "preferredContentSizeCategory");
  v4 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v5 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  result = static UIContentSizeCategory.<= infix(_:_:)(v4, v5);
  if ((result & 1) != 0)
  {
    if ((static UIContentSizeCategory.>= infix(_:_:)(v3, v4) & 1) != 0)
    {
      v7 = v5;
      v8 = v3;
      v9 = static UIContentSizeCategory.<= infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
      {
        v10 = UIContentSizeCategoryAccessibilityLarge;
LABEL_12:

        objc_msgSend(v1, "setMaximumContentSizeCategory:", v10);
        return (uint64_t)objc_msgSend(v0, "setNeedsLayout");
      }
    }
    else
    {

    }
    v11 = -[NSString preferredContentSizeCategory](v2, "preferredContentSizeCategory");
    v12 = UIContentSizeCategoryAccessibilityMedium;
    v13 = UIContentSizeCategoryAccessibilityExtraLarge;
    result = static UIContentSizeCategory.<= infix(_:_:)(v12, v13);
    if ((result & 1) != 0)
    {
      if ((static UIContentSizeCategory.>= infix(_:_:)(v11, v12) & 1) != 0)
      {
        v14 = v13;
        v15 = v11;
        v16 = static UIContentSizeCategory.<= infix(_:_:)(v15, v14);

        if ((v16 & 1) != 0)
          v10 = v12;
        else
          v10 = 0;
      }
      else
      {

        v10 = 0;
        v2 = v12;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

__n128 sub_100061364@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

id sub_100061388(uint64_t a1)
{
  _BYTE *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  char v7;
  id result;
  BOOL v9;
  BOOL v10;
  double v11[5];
  _BYTE v12[40];

  v3 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets];
  v4 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 8];
  v6 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 16];
  v5 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 24];
  v7 = v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 32];
  sub_100062D0C(a1, (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets]);
  result = (id)sub_100062D0C(a1, (uint64_t)v12);
  if ((v12[32] & 1) != 0)
  {
    if ((v7 & 1) != 0)
      return result;
    return objc_msgSend(v1, "setNeedsLayout");
  }
  result = (id)sub_100062D0C(a1, (uint64_t)v11);
  if ((v7 & 1) != 0)
    return objc_msgSend(v1, "setNeedsLayout");
  v9 = v11[0] == v3 && v11[1] == v4;
  v10 = v9 && v11[2] == v6;
  if (!v10 || v11[3] != v5)
    return objc_msgSend(v1, "setNeedsLayout");
  return result;
}

double sub_100061444()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  double v6;
  double *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  _BYTE v20[24];

  v1 = v0;
  v2 = sub_10000DAF8(&qword_10082AF10);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = 0.0;
  if (v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1)
  {
    v7 = (double *)&v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets];
    if ((v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 32] & 1) != 0
      || (v6 = *v7, *v7 <= 0.0)
      || (v8 = objc_msgSend(v0, "traitCollection", v3),
          v9 = objc_msgSend(v8, "userInterfaceIdiom"),
          v8,
          v9)
      || (v10 = objc_msgSend(v1, "traitCollection"),
          v11 = UITraitCollection.isSizeClassCompact.getter(v10),
          v10,
          (v11 & 1) == 0))
    {
      v12 = objc_msgSend(v1, "traitCollection", v3);
      v13 = UITraitCollection.prefersRightToLeftLayouts.getter();

      v14 = (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_pageGrid], v20, 0, 0);
      sub_10003C2B0(v14, (uint64_t)v5);
      v15 = objc_msgSend(v1, "traitCollection");
      sub_100358170((uint64_t)v5, v15);
      if ((v13 & 1) != 0)
        v6 = v17;
      else
        v6 = v16;

      sub_100062D88((uint64_t)v5);
    }
  }
  return v6;
}

id sub_100061654()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  double Height;
  id v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t *v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double MinY;
  id v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  id v34;
  double v35;
  double v36;
  uint64_t v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v2, "bounds");
  v4 = v3;

  if (qword_100804660 != -1)
    swift_once(&qword_100804660, sub_100060B88);
  v5 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1)
  {
    v6 = v4 + -30.0 - *((double *)&xmmword_10080A928 + 1) - *(double *)&qword_10080A940;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView], "bounds");
    Height = CGRectGetHeight(v39);
  }
  else
  {
    v8 = objc_msgSend(v1, "contentView");
    objc_msgSend(v8, "bounds");
    v6 = v9;
    Height = v10;

  }
  v11 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
  sub_1003F17B0();
  sub_1003F4CA4(v11, &v38, v6, Height);
  sub_100062D54(&v38);
  if (v1[v5] == 1
    && ((v12 = objc_msgSend(v1, "traitCollection"), v13 = v12, !v1[v5])
      ? (v14 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory)
      : (v14 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory),
        sub_1002A85B8(v12, v1[*v14], (uint64_t)&v38),
        v13,
        v1[v5] == 1))
  {
    v15 = objc_msgSend(v1, "contentView");
    objc_msgSend(v15, "bounds");
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;

    v40.origin.x = v17;
    v40.origin.y = v19;
    v40.size.width = v21;
    v40.size.height = v23;
    CGRectGetMinY(v40);
    MinY = sub_100061444();
  }
  else
  {
    v25 = objc_msgSend(v1, "contentView");
    objc_msgSend(v25, "bounds");
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    v41.origin.x = v27;
    v41.origin.y = v29;
    v41.size.width = v31;
    v41.size.height = v33;
    MinY = CGRectGetMinY(v41);
  }
  v34 = objc_msgSend(v1, "contentView", MinY);
  objc_msgSend(v34, "bounds");
  v36 = v35;

  CGRect.withLayoutDirection(in:relativeTo:)(v1, v36);
  return objc_msgSend(v11, "setFrame:");
}

void sub_100061944()
{
  uint64_t v0;
  double v1;
  double v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded) & 1) == 0)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory) == 4)
      v1 = 4.0;
    else
      v1 = 5.0;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_shouldMirrorBackground))
      v2 = 0.0;
    else
      v2 = v1;
    v3 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundView);
    objc_msgSend(v3, "frame");
    objc_msgSend(v3, "setFrame:", CGRect.subtracting(insets:)(v1, v1, v2, v1, v4, v5, v6, v7));
    v8 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundViewMirror);
    if (v8)
    {
      v13 = v8;
      objc_msgSend(v13, "frame");
      objc_msgSend(v13, "setFrame:", CGRect.subtracting(insets:)(0.0, v1, v1, v1, v9, v10, v11, v12));

    }
  }
}

double sub_100061AE4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  double result;
  char v53;
  void (*v54)(char *, uint64_t, __n128);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char v63[24];
  char v64[24];

  v5 = v4;
  v10 = type metadata accessor for TodayCard.Style(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v55 - v15;
  v17 = sub_1002C69F8(a1, a2, a3, a4);
  v18 = TodayCard.media.getter(v17);
  v19 = type metadata accessor for TodayCardMediaAppEvent(0);
  v20 = swift_dynamicCastClass(v18, v19);
  if (v20)
  {
    v55 = a4;
    v56 = v13;
    v57 = v11;
    v58 = v18;
    v21 = TodayCardMediaAppEvent.formattedDates.getter(v20);
    v22 = *(char **)&v5[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
    v23 = type metadata accessor for AppEventFormattedDatePresenter(0);
    v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    *(_QWORD *)(v24 + 32) = 0;
    swift_unknownObjectWeakInit(v24 + 24, 0);
    v25 = v24 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_currentFormattedDate;
    v26 = type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    *(_QWORD *)(v24 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_updateTimer) = 0;
    *(_QWORD *)(v24 + 16) = v21;
    v27 = swift_beginAccess(v24 + 24, v64, 1, 0);
    *(_QWORD *)(v24 + 32) = &off_100752080;
    swift_unknownObjectWeakAssign(v27);
    sub_1004E1298();
    v28 = (uint64_t *)&v22[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter];
    swift_beginAccess(&v22[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter], v63, 1, 0);
    *v28 = v24;
    objc_msgSend(v5, "setNeedsLayout", swift_release().n128_f64[0]);
    v29 = objc_msgSend(v5, "backgroundView");
    if (v29)
    {
      v30 = v29;
      v31 = (void *)TodayCardMediaAppEvent.tintColor.getter();
      objc_msgSend(v30, "setBackgroundColor:", v31);

    }
    v32 = *(void **)&v5[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundView];
    v33 = (void *)TodayCardMediaAppEvent.tintColor.getter();
    objc_msgSend(v32, "setBackgroundColor:", v33);

    v34 = (void *)TodayCardMediaAppEvent.tintColor.getter();
    v35 = *(void **)&v22[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_backgroundView];
    if (v35)
    {
      v36 = v35;
      objc_msgSend(v36, "setBackgroundColor:", v34);

    }
    v37 = type metadata accessor for AppEventLiveIndicatorAnimationCoordinator();
    BaseObjectGraph.optional<A>(_:)(&v61, v37, v37);
    v38 = v61;
    v39 = OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator;
    v40 = *(void **)&v22[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_liveIndicatorAnimationCoordinator];
    v41 = v40;
    sub_1003F0B54(v38);
    v42 = *(void **)&v22[v39];
    *(_QWORD *)&v22[v39] = v38;
    v43 = v38;

    sub_1003F0CCC(v40);
    TodayCard.style.getter(v44);
    v46 = v56;
    v45 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for TodayCard.Style.white(_:), v10);
    v47 = sub_100062CC4();
    dispatch thunk of RawRepresentable.rawValue.getter(&v61, v10, v47);
    dispatch thunk of RawRepresentable.rawValue.getter(&v59, v10, v47);
    v48 = v62;
    v49 = v60;
    if (v61 == v59 && v62 == v60)
    {
      v50 = swift_bridgeObjectRelease_n(v62, 2);
      v51 = 1;
    }
    else
    {
      v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, v59, v60, 0);
      swift_bridgeObjectRelease(v48);
      v50 = swift_bridgeObjectRelease(v49);
      if ((v53 & 1) != 0)
        v51 = 1;
      else
        v51 = 2;
    }
    v54 = *(void (**)(char *, uint64_t, __n128))(v45 + 8);
    v54(v46, v10, v50);
    ((void (*)(char *, uint64_t))v54)(v16, v10);
    objc_msgSend(v22, "setOverrideUserInterfaceStyle:", v51);
    sub_100061F10();
    objc_msgSend(v5, "setNeedsLayout");
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100061F10()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  char v31[64];

  v1 = v0;
  sub_100355368();
  v2 = objc_msgSend(v0, "contentView");
  sub_1001AEC24();
  if (v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, "setAccessibilityLabel:", v6, v4);

  v7 = objc_msgSend(v1, "contentView");
  v8 = sub_10000DAF8((uint64_t *)&unk_100809170);
  inited = swift_initStackObject(v8, v31);
  *(_OWORD *)(inited + 16) = xmmword_100640600;
  v10 = objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView]+ OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_textLabel), "text");
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  sub_1001AEC24();
  v17 = v16;
  v18 = v15;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v15;
  if (!v14)
  {
    v19 = _swiftEmptyArrayStorage;
    if (!v15)
      goto LABEL_18;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain(v14);
  v19 = sub_1003D9EA4(0, 1, 1, _swiftEmptyArrayStorage);
  v21 = v19[2];
  v20 = v19[3];
  if (v21 >= v20 >> 1)
    v19 = sub_1003D9EA4((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
  v19[2] = v21 + 1;
  v22 = &v19[2 * v21];
  v22[4] = v12;
  v22[5] = v14;
  if (v18)
  {
LABEL_13:
    swift_bridgeObjectRetain(v18);
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v19 = sub_1003D9EA4(0, v19[2] + 1, 1, v19);
    v24 = v19[2];
    v23 = v19[3];
    if (v24 >= v23 >> 1)
      v19 = sub_1003D9EA4((_QWORD *)(v23 > 1), v24 + 1, 1, v19);
    v19[2] = v24 + 1;
    v25 = &v19[2 * v24];
    v25[4] = v17;
    v25[5] = v18;
  }
LABEL_18:
  swift_release(inited);
  v26 = sub_10000DAF8((uint64_t *)&unk_100815880);
  v27 = sub_10003C21C();
  BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v26, v27);
  v29 = v28;
  swift_bridgeObjectRelease(v19);
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setAccessibilityLabel:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

}

void sub_1000621D4(void *a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  char *v19;
  void *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38[24];
  char v39[24];
  char v40[24];

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1002C6EB4(a1, a2, a3 & 1);
  v9 = swift_dynamicCastClass(a1, ObjectType);
  if (v9 && (a3 & 1) == 0)
  {
    v10 = (char *)v9;
    v11 = a1;
    v12 = objc_msgSend(v4, "backgroundView");
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v10, "backgroundView");
      v15 = objc_msgSend(v14, "backgroundColor");

      objc_msgSend(v13, "setBackgroundColor:", v15);
    }
    v16 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundView];
    v17 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundView], "backgroundColor");
    objc_msgSend(v16, "setBackgroundColor:", v17);

    v18 = *(char **)&v10[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
    v19 = &v18[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter];
    swift_beginAccess(&v18[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter], v40, 0, 0);
    v20 = v11;
    if (*(_QWORD *)v19)
    {
      v21 = *(_QWORD **)(*(_QWORD *)v19 + 16);
      swift_bridgeObjectRetain(v21);
    }
    else
    {
      v21 = _swiftEmptyArrayStorage;
    }
    v22 = *(char **)&v4[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
    v23 = type metadata accessor for AppEventFormattedDatePresenter(0);
    v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    *(_QWORD *)(v24 + 32) = 0;
    swift_unknownObjectWeakInit(v24 + 24, 0);
    v25 = v24 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_currentFormattedDate;
    v26 = type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    *(_QWORD *)(v24 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_updateTimer) = 0;
    *(_QWORD *)(v24 + 16) = v21;
    v27 = swift_beginAccess(v24 + 24, v39, 1, 0);
    *(_QWORD *)(v24 + 32) = &off_100752080;
    swift_unknownObjectWeakAssign(v27);
    sub_1004E1298();
    v28 = (uint64_t *)&v22[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter];
    swift_beginAccess(&v22[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter], v38, 1, 0);
    *v28 = v24;
    objc_msgSend(v4, "setNeedsLayout", swift_release().n128_f64[0]);
    v29 = OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_backgroundView;
    v30 = *(void **)&v18[OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_backgroundView];
    if (v30)
    {
      v31 = objc_msgSend(v30, "backgroundColor");
      v29 = OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_backgroundView;
    }
    else
    {
      v31 = 0;
    }
    v32 = *(void **)&v22[v29];
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v33, "setBackgroundColor:", v31);

    }
    objc_msgSend(v22, "setOverrideUserInterfaceStyle:", objc_msgSend(v18, "overrideUserInterfaceStyle"));
    v34 = objc_msgSend(v18, "maximumContentSizeCategory");
    objc_msgSend(v22, "setMaximumContentSizeCategory:", v34);

    v35 = objc_msgSend(v4, "contentView");
    v36 = objc_msgSend(v10, "contentView");
    v37 = objc_msgSend(v36, "overrideUserInterfaceStyle");

    objc_msgSend(v35, "setOverrideUserInterfaceStyle:", v37);
  }
}

void sub_100062560()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];
  objc_super v13;

  v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "prepareForReuse");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
  v3 = type metadata accessor for AppEventFormattedDatePresenter(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  *(_QWORD *)(v4 + 32) = 0;
  swift_unknownObjectWeakInit(v4 + 24, 0);
  v5 = v4 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_currentFormattedDate;
  v6 = type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC20ProductPageExtension30AppEventFormattedDatePresenter_updateTimer) = 0;
  *(_QWORD *)(v4 + 16) = _swiftEmptyArrayStorage;
  v7 = swift_beginAccess(v4 + 24, v12, 1, 0);
  *(_QWORD *)(v4 + 32) = &off_100752080;
  swift_unknownObjectWeakAssign(v7);
  sub_1004E1298();
  v8 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter);
  swift_beginAccess(v2 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_appEventFormattedDatePresenter, &v11, 1, 0);
  *v8 = v4;
  objc_msgSend(v1, "setNeedsLayout", swift_release().n128_f64[0]);
  v9 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_backgroundView);
  if (v9)
    objc_msgSend(v9, "setBackgroundColor:", 0);
  v10 = objc_msgSend(v1, "contentView");
  objc_msgSend(v10, "setOverrideUserInterfaceStyle:", 0);

}

id sub_100062728()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  double v10;
  void *v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  id v21;
  id v22;
  id v23;
  objc_super v25;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CA620();
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
  v7 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v1[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v8 = 5;
  else
    v8 = 3;
  v9 = *(_BYTE *)(v6 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_style);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_style) = v8;
  sub_1003EF7BC(v9);
  if (v1[v7])
    v10 = 0.0;
  else
    v10 = 14.0;
  v11 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_infoLayer];
  v12 = (objc_class *)type metadata accessor for TodayCardInfoLayerView();
  v25.receiver = v11;
  v25.super_class = v12;
  v13 = objc_msgSendSuper2(&v25, "_setContinuousCornerRadius:", v10);
  sub_1002A58F0((uint64_t)v13, v14);
  if (v1[v7])
    v15 = 0.0;
  else
    v15 = 9.0;
  *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaCornerRadius] = v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
  if (v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_shouldMirrorBackground])
    v16 = 3;
  else
    v16 = -1;
  sub_10021F38C((uint64_t)v5, v16, v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundViewMirror];
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v18, "_setContinuousCornerRadius:", v15);
    v19 = objc_msgSend(v18, "layer");
    objc_msgSend(v19, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(12));

  }
  if (v1[v7])
    v20 = 0.0;
  else
    v20 = 14.0;
  v21 = objc_msgSend(v1, "contentView");
  objc_msgSend(v21, "_setContinuousCornerRadius:", v20);

  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "layer");

  objc_msgSend(v23, "setMaskedCorners:", 3);
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1000629AC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  int v9;
  double v10;
  char v11;
  uint64_t v12;
  char v13;
  unsigned __int8 v14;
  double v15;
  void *v16;
  objc_class *v17;
  id v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  objc_super v26;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CA4E8();
  v6 = OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v7 = v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  v8 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v0[OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v8 = &OBJC_IVAR____TtC20ProductPageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v9 = v0[*v8];
  if (v9 == 4)
    v10 = 10.0;
  else
    v10 = 9.0;
  if (v9 == 4)
    v11 = 4;
  else
    v11 = 3;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension35AppEventTodayCardCollectionViewCell_formattedDateView];
  if (v7)
    v13 = 5;
  else
    v13 = v11;
  v14 = *(_BYTE *)(v12 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_style);
  *(_BYTE *)(v12 + OBJC_IVAR____TtC20ProductPageExtension29AppPromotionFormattedDateView_style) = v13;
  sub_1003EF7BC(v14);
  if (v1[v6])
    v15 = 0.0;
  else
    v15 = 14.0;
  v16 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_infoLayer];
  v17 = (objc_class *)type metadata accessor for TodayCardInfoLayerView();
  v26.receiver = v16;
  v26.super_class = v17;
  v18 = objc_msgSendSuper2(&v26, "_setContinuousCornerRadius:", v15);
  sub_1002A58F0((uint64_t)v18, v19);
  if (v1[v6])
    v20 = 0.0;
  else
    v20 = v10;
  *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaCornerRadius] = v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
  if (v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_shouldMirrorBackground])
    v21 = 3;
  else
    v21 = -1;
  sub_10021F38C((uint64_t)v5, v21, v20);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension27StoryCardCollectionViewCell_mediaBackgroundViewMirror];
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v23, "_setContinuousCornerRadius:", v20);
    v24 = objc_msgSend(v23, "layer");
    objc_msgSend(v24, "setMaskedCorners:", UIRectCorner.caCornerMask.getter(12));

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_100062BE4()
{
  uint64_t v0;

}

uint64_t sub_100062C04()
{
  return type metadata accessor for AppEventTodayCardCollectionViewCell(0);
}

uint64_t type metadata accessor for AppEventTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080A978;
  if (!qword_10080A978)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppEventTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_100062C48(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1008);
}

void sub_100062C8C()
{
  sub_1003ED8E0();
}

id sub_100062CB4()
{
  void *v0;

  return objc_msgSend(v0, "setNeedsLayout");
}

unint64_t sub_100062CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100818E50;
  if (!qword_100818E50)
  {
    v1 = type metadata accessor for TodayCard.Style(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCard.Style, v1);
    atomic_store(result, (unint64_t *)&qword_100818E50);
  }
  return result;
}

uint64_t sub_100062D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10080A988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100062D54(_QWORD *a1)
{
  destroy for AppPromotionFormattedDateLayout(a1);
  return a1;
}

uint64_t sub_100062D88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_10082AF10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100062DC8(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = "\b";
  v2[2] = &unk_100642CA0;
  v2[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[4] = &unk_100642CA0;
  v2[5] = &unk_100642CA0;
  return swift_initClassMetadata2(a1, 0, 6, v2, a1 + 1272);
}

uint64_t sub_100062E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  sub_10025F354(a1);
  result = sub_10025F344();
  if ((result & 1) != 0)
    *(_BYTE *)(v1 + qword_1008649D0) = 1;
  return result;
}

uint64_t sub_100062E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_10000DAF8(&qword_100807C20);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100640600;
  v2 = sub_10025E8B0();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  v6 = sub_10006340C(v2, v3, v4, v5);
  v7 = type metadata accessor for UberedCollectionElementsObserver();
  v8 = swift_allocObject(v7, 24, 7);
  v9 = swift_weakInit(v8 + 16, 0);
  swift_weakAssign(v9, v6);
  swift_release();
  v10 = sub_10000E720(&qword_10080AA30, (uint64_t (*)(uint64_t))type metadata accessor for UberedCollectionElementsObserver, (uint64_t)&unk_100669294);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v10;
  v11 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v1);
}

void sub_100062F38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_10000DAF8(&qword_10080AA28);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10025EDF8(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    sub_1000634F0();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_10006301C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];

  v1 = sub_10000DAF8(&qword_100808548);
  __chkstk_darwin(v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Shelf.ContentType(0);
  v43 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v41 - v8);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - v11;
  v13 = sub_10000DAF8((uint64_t *)&unk_1008176F0);
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)&v15 = __chkstk_darwin(v13).n128_u64[0];
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(v0, "view", v15);
  if (!v18)
    goto LABEL_17;
  v19 = v18;
  v42 = v4;
  v20 = type metadata accessor for InsetCollectionViewControllerContentView();
  v21 = swift_dynamicCastClass(v19, v20);
  if (!v21)
  {

LABEL_17:
    __break(1u);
    return;
  }
  v22 = *(_BYTE *)(v21
                 + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v22 & 1) == 0)
  {
    v23 = (id *)&v0[qword_100817450];
    swift_beginAccess(v23, v44, 0, 0);
    if (*v23)
    {
      v24 = *v23;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
      v25 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v13);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      if (v25 < 1)
      {
LABEL_8:

        return;
      }
      dispatch thunk of ModelMappedDiffableDataSource.sectionModel(at:)(0);
      v26 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v3, 1, v26) == 1)
      {
        sub_100010F2C((uint64_t)v3, &qword_100808548);
        goto LABEL_8;
      }
      KeyPath = swift_getKeyPath(&unk_100642D10);
      ReadOnlyLens.subscript.getter(v9, KeyPath, v26);
      v29 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v3, v26, v29);
      v30 = v42;
      v31 = v43;
      (*(void (**)(char *, _QWORD *, uint64_t))(v43 + 32))(v12, v9, v42);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v6, v12, v30);
      v32 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v6, v30);
      if (v32 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
        || v32 == enum case for Shelf.ContentType.upsellBreakout(_:)
        || v32 == enum case for Shelf.ContentType.heroCarousel(_:)
        || v32 == enum case for Shelf.ContentType.uber(_:))
      {
        v34 = sub_10000DAF8(&qword_10081E8B0);
        v35 = type metadata accessor for IndexPath(0);
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(_QWORD *)(v36 + 72);
        v38 = *(unsigned __int8 *)(v36 + 80);
        v39 = (v38 + 32) & ~v38;
        v40 = swift_allocObject(v34, v39 + v37, v38 | 7);
        *(_OWORD *)(v40 + 16) = xmmword_100640720;
        IndexPath.init(item:section:)(0, 0);
        sub_10013B5B4(v40);
        swift_setDeallocating(v40);
        swift_arrayDestroy(v40 + v39, 1, v35);
        swift_deallocClassInstance(v40, 32, 7);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
      }
      else
      {

        v33 = *(void (**)(char *, uint64_t))(v31 + 8);
        v33(v12, v30);
        v33(v6, v30);
      }
    }
  }
}

void sub_1000633FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + qword_1008649D0) = 0;
}

uint64_t sub_10006340C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = qword_10080A990;
  v6 = *(_QWORD *)((char *)v4 + qword_10080A990);
  if (v6)
  {
    v7 = *(_QWORD *)((char *)v4 + qword_10080A990);
  }
  else
  {
    v8 = type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x4F0), a3, a4);
    v7 = sub_10004F494(v8, (uint64_t)&off_100738FB8);
    *(_QWORD *)((char *)v4 + v5) = v7;
    swift_retain(v7);
    swift_release();
    v6 = 0;
  }
  swift_retain(v6);
  return v7;
}

uint64_t sub_100063490()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1008649C0);
}

uint64_t sub_1000634A0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1008649C0) = result;
  return result;
}

uint64_t sub_1000634B0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1008649C8);
}

void sub_1000634C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + qword_1008649C8) = a1;
  sub_10006396C(a1, a2, a3, a4);
}

uint64_t sub_1000634D0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1008649D0);
}

uint64_t sub_1000634E0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1008649D0) = result;
  return result;
}

void sub_1000634F0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  v3 = GenericPage.presentationOptions.getter();
  v6 = type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)(v2 + 1264), v4, v5);
  v7 = sub_100050AC0(v3, v6, (uint64_t)&off_100738FB8);
  GenericPage.title.getter(v7);
  if (v8)
  {
    v10 = v8;
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v1, "setTitle:", v11, v9);

  v12 = objc_msgSend(v1, "navigationItem");
  GenericPage.title.getter(v12);
  if (v13)
  {
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v12, "setBackButtonTitle:", v16, v14);

}

uint64_t sub_100063604(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v31 = type metadata accessor for URL(0, a2);
  v3 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_10080AA20);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - v19;
  sub_100063E3C(a1, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v9) != 8)
  {
    sub_100063E80((uint64_t)v11);
LABEL_9:
    v26 = 0;
    return v26 & 1;
  }
  swift_release();
  v21 = sub_10000DAF8((uint64_t *)&unk_10080FFB0);
  v22 = sub_10005AB74((uint64_t)&v11[*(int *)(v21 + 48)], (uint64_t)v20);
  DiffablePagePresenter.pageUrl.getter(v22);
  v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10005AACC((uint64_t)v17, (uint64_t)v8);
  sub_10005AACC((uint64_t)v20, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v25 = v31;
  if (v24((uint64_t)v8, 1, v31) != 1)
  {
    sub_10005AACC((uint64_t)v8, (uint64_t)v14);
    if (v24(v23, 1, v25) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v23, v25);
      v28 = sub_10000E720((unint64_t *)&unk_10082CCF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v5, v25, v28);
      v29 = *(void (**)(char *, uint64_t))(v3 + 8);
      v29(v5, v25);
      sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_1008092A0);
      sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
      v29(v14, v25);
      sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008092A0);
      return v26 & 1;
    }
    sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v25);
    goto LABEL_8;
  }
  sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_1008092A0);
  sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
  if (v24(v23, 1, v25) != 1)
  {
LABEL_8:
    sub_100010F2C((uint64_t)v8, &qword_10080AA20);
    goto LABEL_9;
  }
  sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008092A0);
  v26 = 1;
  return v26 & 1;
}

void sub_10006396C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v5 = type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x4F0), a3, a4);
  sub_10004FDA0(0, v5, (uint64_t)&off_100738FB8);
  *((_BYTE *)v4 + qword_1008649C0) = 1;
}

void sub_1000639C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v6;

  v5 = (objc_class *)type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x4F0), a3, a4);
  v6.receiver = v4;
  v6.super_class = v5;
  objc_msgSendSuper2(&v6, "viewDidLoad");
  sub_10004FFD4((uint64_t)v5, (uint64_t)&off_100738FB8);
}

void sub_100063A28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1000639C0((uint64_t)v4, v1, v2, v3);

}

uint64_t sub_100063A5C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063B38(a1, (SEL *)&selRef_viewWillAppear_, (uint64_t (*)(objc_class *, _UNKNOWN **))sub_1000500A0, a4);
}

void sub_100063A70(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100063B38(a3, (SEL *)&selRef_viewWillAppear_, (uint64_t (*)(objc_class *, _UNKNOWN **))sub_1000500A0, (uint64_t)v4);

}

uint64_t sub_100063AC0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063B38(a1, (SEL *)&selRef_viewDidAppear_, (uint64_t (*)(objc_class *, _UNKNOWN **))sub_100050458, a4);
}

void sub_100063AD4(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100063B38(a3, (SEL *)&selRef_viewDidAppear_, (uint64_t (*)(objc_class *, _UNKNOWN **))sub_100050458, (uint64_t)v4);

}

uint64_t sub_100063B24(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063B38(a1, (SEL *)&selRef_viewWillDisappear_, (uint64_t (*)(objc_class *, _UNKNOWN **))sub_100050524, a4);
}

uint64_t sub_100063B38(char a1, SEL *a2, uint64_t (*a3)(objc_class *, _UNKNOWN **), uint64_t a4)
{
  _QWORD *v4;
  objc_class *v8;
  objc_super v10;

  v8 = (objc_class *)type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x4F0), (uint64_t)a3, a4);
  v10.receiver = v4;
  v10.super_class = v8;
  objc_msgSendSuper2(&v10, *a2, a1 & 1);
  return a3(v8, &off_100738FB8);
}

void sub_100063BBC(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100063B38(a3, (SEL *)&selRef_viewWillDisappear_, (uint64_t (*)(objc_class *, _UNKNOWN **))sub_100050524, (uint64_t)v4);

}

void sub_100063C0C(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  objc_class *v10;
  objc_super v11;

  v10 = (objc_class *)type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)((swift_isaMask & *v6) + 0x4F0), a5, a6);
  v11.receiver = v6;
  v11.super_class = v10;
  objc_msgSendSuper2(&v11, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v6, "isViewLoaded"))
    sub_100050928(a1, (uint64_t)v10, (uint64_t)&off_100738FB8);
}

void sub_100063CB4(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  id v11;

  swift_unknownObjectRetain(a5);
  v11 = a1;
  sub_100063C0C(a5, a2, a3, (uint64_t)v11, v9, v10);
  swift_unknownObjectRelease();

}

uint64_t sub_100063D20()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_10080A990));
}

id sub_100063D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for BaseGenericDiffablePageViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x4F0), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_100063D98(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + qword_10080A990));
}

uint64_t type metadata accessor for BaseGenericDiffablePageViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003C2F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BaseGenericDiffablePageViewController);
}

id sub_100063DDC()
{
  return (id)sub_100063E2C();
}

uint64_t sub_100063E08(uint64_t a1, uint64_t a2)
{
  return sub_100063604(a1, a2) & 1;
}

uint64_t sub_100063E2C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1008649B8);
}

uint64_t sub_100063E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063E80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FlowDestination(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ArticlePresentingFlowActionLogic()
{
  return &type metadata for ArticlePresentingFlowActionLogic;
}

void sub_100063ED0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  _QWORD v7[6];

  v7[4] = sub_100064CBC;
  v7[5] = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000924A0;
  v7[3] = &unk_100739148;
  v6 = _Block_copy(v7);
  swift_retain(a3);
  objc_msgSend(a1, "presentViewController:animated:completion:", a2, 1, v6, swift_release().n128_f64[0]);
  _Block_release(v6);
}

uint64_t sub_100063F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  Promise.resolve(_:)(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100064024(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t result;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v35 = a2;
  v3 = type metadata accessor for FlowPresentationContext(0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  __chkstk_darwin(v3);
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - v6;
  v8 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_10080FF80);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - v15;
  v17 = type metadata accessor for FlowDestination(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v35 - v22;
  v24 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(v39, v24);
  sub_1000EEC04(a1, (uint64_t)v39, (uint64_t)v16);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v25(v16, 1, v17) == 1)
  {
    swift_storeEnumTagMultiPayload(v23, v17, 50);
    sub_100010F2C((uint64_t)v16, (uint64_t *)&unk_10080FF80);
  }
  else
  {
    sub_100064D2C((uint64_t)v16, (uint64_t)v23);
  }
  if (swift_getEnumCaseMultiPayload(v23, v17) != 21)
  {
    sub_1000340D8((uint64_t)v23, type metadata accessor for FlowDestination);
    return 0;
  }
  swift_release();
  v26 = sub_10000DAF8(&qword_10080AA50);
  sub_100010F2C((uint64_t)&v23[*(int *)(v26 + 48)], (uint64_t *)&unk_1008092A0);
  v27 = swift_retain(a1);
  v28 = FlowAction.presentationContext.getter(v27);
  FlowAction.animationBehavior.getter(v28);
  swift_release();
  v29 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(v39, v29);
  sub_1000EEC04(a1, (uint64_t)v39, (uint64_t)v13);
  if (v25(v13, 1, v17) == 1)
  {
    swift_storeEnumTagMultiPayload(v20, v17, 50);
    sub_100010F2C((uint64_t)v13, (uint64_t *)&unk_10080FF80);
  }
  else
  {
    sub_100064D2C((uint64_t)v13, (uint64_t)v20);
  }
  v31 = v37;
  v30 = v38;
  v32 = v36;
  sub_10010F7D4((uint64_t)v7);
  sub_1000340D8((uint64_t)v20, type metadata accessor for FlowDestination);
  sub_1000340D8((uint64_t)v10, type metadata accessor for FlowPresentationHints);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v32, v7, v30);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v32, v30);
  result = 1;
  if (v33 != enum case for FlowPresentationContext.presentModal(_:)
    && v33 != enum case for FlowPresentationContext.presentModalFormSheet(_:)
    && v33 != enum case for FlowPresentationContext.presentModalPageSheet(_:)
    && v33 != enum case for FlowPresentationContext.presentModalFullScreen(_:))
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    return 0;
  }
  return result;
}

uint64_t sub_1000643B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v20;

  v6 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063E3C(a2, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload(v11, v9))
  {
    case 0xAu:
      swift_release();
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
      v13 = sub_10000DAF8((uint64_t *)&unk_10080FFC0);
      v14 = &v11[*(int *)(v13 + 64)];

      v15 = type metadata accessor for ShareSheetAction.ShareSheetStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      v12 = 0;
      break;
    case 0x13u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
      sub_1000340D8((uint64_t)v11, type metadata accessor for FlowDestination);
      v12 = 0;
      break;
    case 0x1Bu:
      sub_10005AB74((uint64_t)v11, (uint64_t)v8);
      v16 = type metadata accessor for ArticleContainerViewController();
      v17 = swift_dynamicCastClass(a1, v16) == 0;
      v18 = static ResilientDeepLinkController.preventDismissingArticlesForFlowUrl(_:bag:)(v8, a3);
      sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008092A0);
      v12 = v17 | v18 ^ 1;
      break;
    default:
      sub_1000340D8((uint64_t)v11, type metadata accessor for FlowDestination);
      v12 = 1;
      break;
  }
  return v12 & 1;
}

uint64_t sub_100064570(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  ProtocolDescriptor *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v27;
  void *v28;
  uint64_t ObjectType;
  void *v30;
  double v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  char v39;
  void *v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  id v45;
  void *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  ProtocolDescriptor *v58;
  void *v59;
  id v60;
  id v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  __int128 aBlock;
  __int128 v75;
  void *v76;
  ProtocolDescriptor *v77;
  void *v78;

  v6 = sub_10000DAF8((uint64_t *)&unk_10080FF80);
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  v73 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_100808570);
  v12 = (ProtocolDescriptor *)Promise.__allocating_init()();
  v13 = sub_100302298(a2);
  if (!v13)
  {
    v32 = sub_100064C78();
    v33 = swift_allocError(&type metadata for ArticlePresentingFlowActionLogic.ImplementationError, v32, 0, 0);
    *v34 = 1;
    Promise.reject(_:)(v33);
    swift_errorRelease(v33);
    return (uint64_t)v12;
  }
  v14 = v13;
  v67 = v9;
  v69 = v8;
  v15 = objc_msgSend(a2, "traitCollection");
  v78 = v14;
  v16 = sub_100018B6C(0, &qword_10080AA40, UINavigationController_ptr);
  v17 = v14;
  v18 = sub_10000DAF8(&qword_10080AA48);
  if ((swift_dynamicCast(&aBlock, &v78, v16, v18, 6) & 1) == 0)
  {
    v76 = 0;
    aBlock = 0u;
    v75 = 0u;
  }
  v68 = a1;
  sub_1003CAA8C(a1, (uint64_t)v15, (uint64_t)&aBlock, a3);
  v20 = v19;

  sub_100010F2C((uint64_t)&aBlock, (uint64_t *)&unk_1008206D0);
  if (!v20)
  {
    v42 = sub_100064C78();
    v43 = swift_allocError(&type metadata for ArticlePresentingFlowActionLogic.ImplementationError, v42, 0, 0);
    *v44 = 0;
    Promise.reject(_:)(v43);
    swift_errorRelease(v43);

    return (uint64_t)v12;
  }
  v65 = v11;
  v21 = type metadata accessor for ASKBagContract(0);
  v22 = *(_QWORD *)(a3 + qword_10086B3D8);
  if (v22)
  {
    v23 = objc_msgSend(v17, "viewControllers", swift_retain(*(_QWORD *)(a3 + qword_10086B3D8)).n128_f64[0]);
    v66 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v66);

    if ((unint64_t)v24 >> 62)
      goto LABEL_46;
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v25)
    {
      v70 = v20;
      v71 = v22;
      v72 = a2;
      a2 = v17;
      v22 = (uint64_t)v12;
      v20 = (void *)(v24 & 0xFFFFFFFFFFFFFF8);
      v17 = (id)(v24 + 32);
      v12 = &protocol descriptor for ArticlePresentingViewController;
      while (!__OFSUB__(v25--, 1))
      {
        if ((v24 & 0xC000000000000001) != 0)
        {
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v24);
        }
        else
        {
          if ((v25 & 0x8000000000000000) != 0)
            goto LABEL_44;
          if (v25 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_45;
          v27 = *((id *)v17 + v25);
        }
        v28 = v27;
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ArticlePresentingViewController))
          v30 = v28;
        else
          v30 = 0;
        if (v30)
        {
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
          goto LABEL_23;
        }

        if (!v25)
        {
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
          v30 = 0;
LABEL_23:
          v12 = (ProtocolDescriptor *)v22;
          v17 = a2;
          v22 = v71;
          a2 = v72;
          v20 = v70;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      if (v24 < 0)
        v63 = v24;
      else
        v63 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v25 = _CocoaArrayWrapper.endIndex.getter(v63);
      swift_bridgeObjectRelease(v24);
    }
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
    v30 = 0;
LABEL_24:
    v35 = objc_msgSend(v17, "topViewController", v31);
    if (v35)
    {
      v36 = v35;
      if (v30)
      {
        v37 = v30;
        v38 = v36;
        v39 = static NSObject.== infix(_:_:)(v38, v37);

        if ((v39 & 1) != 0)
        {
          v76 = sub_100064CBC;
          v77 = v12;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v75 = sub_1000924A0;
          *((_QWORD *)&v75 + 1) = &unk_100739120;
          v40 = _Block_copy(&aBlock);
          v41 = v37;
          swift_retain(v12);
          objc_msgSend(v41, "presentViewController:animated:completion:", v20, 1, v40, swift_release().n128_f64[0]);

          _Block_release(v40);
          swift_release();

          return (uint64_t)v12;
        }
      }
      else
      {

      }
    }
    v45 = objc_msgSend(a2, "presentedViewController");
    if (v45)
    {
      v46 = v45;
      if ((objc_msgSend(v45, "isBeingDismissed") & 1) == 0)
      {
        v47 = v68;
        v48 = swift_retain(v68);
        dispatch thunk of Action.clickSender.getter(&aBlock, v48);
        v49 = (uint64_t)v69;
        sub_1000EEC04(v47, (uint64_t)&aBlock, (uint64_t)v69);
        v50 = v67;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v49, 1, v67) == 1)
        {
          v51 = (uint64_t)v65;
          swift_storeEnumTagMultiPayload(v65, v50, 50);
          sub_100010F2C(v49, (uint64_t *)&unk_10080FF80);
        }
        else
        {
          v51 = (uint64_t)v65;
          sub_100064D2C(v49, (uint64_t)v65);
        }
        v52 = sub_1000643B4((uint64_t)v46, v51, v22);
        sub_1000340D8(v51, type metadata accessor for FlowDestination);
        if ((v52 & 1) != 0)
        {
          v53 = type metadata accessor for ArticleContainerViewController();
          v54 = swift_dynamicCastClass(v46, v53);
          if (v54)
          {
            v55 = *(void **)(v54
                           + OBJC_IVAR____TtC20ProductPageExtension30ArticleContainerViewController_wrapperViewController);
            v56 = v46;
            v57 = objc_msgSend(v55, "popToRootViewControllerAnimated:", 0);

          }
          v58 = (ProtocolDescriptor *)swift_allocObject(&unk_1007390E0, 40, 7);
          *(_QWORD *)&v58->NumRequirements = a2;
          *(_QWORD *)&v58[1].Flags = v20;
          *(_QWORD *)&v58[1].Name = v12;
          v76 = sub_100064D20;
          v77 = v58;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v75 = sub_1000924A0;
          *((_QWORD *)&v75 + 1) = &unk_1007390F8;
          v59 = _Block_copy(&aBlock);
          swift_retain(v12);
          v60 = a2;
          v61 = v20;
          objc_msgSend(v46, "dismissViewControllerAnimated:completion:", 1, v59, swift_release().n128_f64[0]);

          goto LABEL_41;
        }
      }

    }
    v76 = sub_100064CBC;
    v77 = v12;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v75 = sub_1000924A0;
    *((_QWORD *)&v75 + 1) = &unk_1007390A8;
    v59 = _Block_copy(&aBlock);
    swift_retain(v12);
    objc_msgSend(a2, "presentViewController:animated:completion:", v20, 1, v59, swift_release().n128_f64[0]);

LABEL_41:
    _Block_release(v59);
    swift_release();
    return (uint64_t)v12;
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v21, v21);
  __break(1u);
  return result;
}

unint64_t sub_100064C78()
{
  unint64_t result;

  result = qword_10080AA38;
  if (!qword_10080AA38)
  {
    result = swift_getWitnessTable(&unk_100642E4C, &type metadata for ArticlePresentingFlowActionLogic.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080AA38);
  }
  return result;
}

uint64_t sub_100064CBC()
{
  return sub_100063F88();
}

uint64_t sub_100064CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100064CE4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100064CEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100064D20()
{
  uint64_t v0;

  sub_100063ED0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100064D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for ArticlePresentingFlowActionLogic.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100064DBC + 4 * byte_100642D64[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100064DF0 + 4 * byte_100642D5F[v4]))();
}

uint64_t sub_100064DF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100064DF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100064E00);
  return result;
}

uint64_t sub_100064E0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100064E14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100064E18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100064E20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticlePresentingFlowActionLogic.ImplementationError()
{
  return &type metadata for ArticlePresentingFlowActionLogic.ImplementationError;
}

unint64_t sub_100064E40()
{
  unint64_t result;

  result = qword_10080AA58;
  if (!qword_10080AA58)
  {
    result = swift_getWitnessTable(&unk_100642E24, &type metadata for ArticlePresentingFlowActionLogic.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080AA58);
  }
  return result;
}

uint64_t sub_100064E9C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806410 != -1)
    swift_once(&qword_100806410, sub_1004C84E0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_10000EFC4(v5, (uint64_t)qword_100869D08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v6, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  return OfferButtonMetrics.fontSource.setter(v4);
}

uint64_t sub_100064F80()
{
  return OfferButtonMetrics.minimumSize.setter(30.0, 30.0);
}

uint64_t sub_100064FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, _QWORD, uint64_t, __n128);
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a3;
  v57 = a5;
  v55 = a4;
  v54 = a2;
  v58 = a6;
  v7 = type metadata accessor for OfferButtonMetrics(0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  __chkstk_darwin(v13);
  v53 = (char *)&v53 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - v19;
  v21 = type metadata accessor for OfferEnvironment(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v22 + 104);
  v26(v25, enum case for OfferEnvironment.arcadeProductPage(_:), v21, v23);
  v27 = static OfferEnvironment.== infix(_:_:)(a1, v25);
  v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v25, v21);
  if ((v27 & 1) != 0)
  {
    if (qword_100804688 != -1)
      swift_once(&qword_100804688, sub_100066428);
    v29 = qword_100864A08;
LABEL_13:
    v33 = v60;
    v34 = sub_10000EFC4(v60, (uint64_t)v29);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v59 + 16))(v58, v34, v33);
  }
  ((void (*)(char *, _QWORD, uint64_t))v26)(v25, enum case for OfferEnvironment.arcadeLaunchRepairCompactSheet(_:), v21);
  v30 = static OfferEnvironment.== infix(_:_:)(a1, v25);
  v31 = ((uint64_t (*)(char *, uint64_t))v28)(v25, v21);
  if ((v30 & 1) != 0)
  {
    if (qword_100804680 != -1)
      swift_once(&qword_100804680, sub_100066090);
    v29 = qword_1008649F0;
    goto LABEL_13;
  }
  v32 = OfferEnvironment.isArcadeEnvironment.getter(v31);
  if ((v32 & 1) != 0)
  {
    if (qword_100804678 != -1)
      swift_once(&qword_100804678, sub_100065CF0);
    v29 = qword_1008649D8;
    goto LABEL_13;
  }
  if (!v56)
    goto LABEL_17;
  v36 = String.count.getter(v54, v56);
  v32 = UITraitCollection.prefersAccessibilityLayouts.getter(v36);
  if ((v32 & 1) != 0)
  {
    if (v36 < 9)
      goto LABEL_17;
  }
  else if (v36 <= 6)
  {
LABEL_17:
    v37 = UITraitCollection.prefersAccessibilityLayouts.getter(v32);
    if ((v55 & 1) != 0)
    {
      if ((v37 & 1) != 0)
      {
        v40 = v59;
        v39 = v60;
        v41 = v58;
        v42 = v53;
        if (qword_100804668 != -1)
          swift_once(&qword_100804668, sub_1000654B0);
        v43 = qword_10080AA60;
      }
      else
      {
        v40 = v59;
        v39 = v60;
        v41 = v58;
        v42 = v53;
        if (qword_100804670 != -1)
          swift_once(&qword_100804670, sub_10006595C);
        v43 = qword_10080AA78;
      }
      v51 = sub_10000EFC4(v39, (uint64_t)v43);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v12, v51, v39);
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v12, v39);
      Copyable.copyWithOverrides(in:)(v41, sub_100064F80, 0, v39, &protocol witness table for OfferButtonMetrics);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v42, v39);
    }
    else
    {
      if ((v37 & 1) != 0)
      {
        if (qword_100804668 != -1)
          swift_once(&qword_100804668, sub_1000654B0);
        v38 = qword_10080AA60;
      }
      else
      {
        if (qword_100804670 != -1)
          swift_once(&qword_100804670, sub_10006595C);
        v38 = qword_10080AA78;
      }
      v48 = v60;
      v49 = sub_10000EFC4(v60, (uint64_t)v38);
      v50 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v9, v49, v48);
      return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v50 + 32))(v58, v9, v48);
    }
  }
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v32) & 1) != 0)
  {
    v45 = v59;
    v44 = v60;
    v46 = v58;
    if (qword_100804668 != -1)
      swift_once(&qword_100804668, sub_1000654B0);
    v47 = qword_10080AA60;
  }
  else
  {
    v45 = v59;
    v44 = v60;
    v46 = v58;
    if (qword_100804670 != -1)
      swift_once(&qword_100804670, sub_10006595C);
    v47 = qword_10080AA78;
  }
  v52 = sub_10000EFC4(v44, (uint64_t)v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v17, v52, v44);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v20, v17, v44);
  Copyable.copyWithOverrides(in:)(v46, sub_100064E9C, 0, v44, &protocol witness table for OfferButtonMetrics);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v20, v44);
}

void sub_1000654B0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  NSString v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  NSString v28;
  id v29;
  id v30;
  id v31;
  id v32;
  _QWORD v33[2];
  _QWORD v34[5];
  _QWORD v35[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v33 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v33 - v9;
  v11 = type metadata accessor for OfferButtonMetrics(0);
  sub_100011980(v11, qword_10080AA60);
  v33[1] = sub_10000EFC4(v11, (uint64_t)qword_10080AA60);
  if (qword_100806408 != -1)
    swift_once(&qword_100806408, sub_1004C7FF4);
  v12 = type metadata accessor for FontUseCase(0);
  v13 = sub_10000EFC4(v12, (uint64_t)qword_100869CF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v10, v13, v12);
  v15 = enum case for FontSource.useCase(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16(v10, enum case for FontSource.useCase(_:), v1);
  if (qword_100806418 != -1)
    swift_once(&qword_100806418, sub_1004C8584);
  v17 = sub_10000EFC4(v12, (uint64_t)qword_100869D20);
  v14(v7, v17, v12);
  v16(v7, v15, v1);
  v14(v4, v17, v12);
  v16(v4, v15, v1);
  v35[3] = type metadata accessor for StaticDimension(0);
  v35[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v35);
  v34[3] = v1;
  v34[4] = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v34);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v34, 14.0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v19 = (void *)objc_opt_self(UIFont);
  v20 = objc_msgSend(v19, "systemFontOfSize:weight:", 36.0, UIFontWeightSemibold);
  v21 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v22 = objc_msgSend(v21, "configurationWithFont:", v20);

  v23 = String._bridgeToObjectiveC()();
  v24 = (void *)objc_opt_self(UIImage);
  v25 = objc_msgSend(v24, "systemImageNamed:withConfiguration:", v23, v22);

  if (v25)
  {
    v33[0] = objc_msgSend(v25, "imageWithRenderingMode:", 2);

    v26 = objc_msgSend(v19, "systemFontOfSize:weight:", 15.0, UIFontWeightBold);
    v27 = objc_msgSend(v21, "configurationWithFont:", v26);

    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v24, "systemImageNamed:withConfiguration:", v28, v27);

    if (v29)
    {
      v30 = objc_msgSend(v29, "imageWithRenderingMode:", 2);

      v31 = objc_msgSend(v19, "systemFontOfSize:weight:", 15.0, UIFontWeightBold);
      v32 = objc_msgSend(v21, "configurationWithFont:", v31);

      OfferButtonMetrics.init(fontSource:subtitleFontSource:inAppPurchaseTextSpace:contentInsets:redownloadImage:stopImage:symbolConfiguration:redownloadImageSymbolConfiguration:minimumSize:progressDiameter:lineWidth:textShapeLineWidth:expandsToFit:cornerRadius:includeTopPadding:)(v10, v7, v35, v33[0], v30, v32, 0, 0, 7.0, 18.0, 7.0, 18.0, 118.0, 53.0, 45.0, 4.0, 1, 0, 257);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10006595C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  id v20;
  id v21;
  __n128 v22;
  id v23;
  id v24;
  id result;
  void *v26;
  id v27;
  _QWORD v28[2];
  _QWORD v29[5];
  _QWORD v30[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v28 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v28 - v9;
  v11 = type metadata accessor for OfferButtonMetrics(0);
  sub_100011980(v11, qword_10080AA78);
  v28[1] = sub_10000EFC4(v11, (uint64_t)qword_10080AA78);
  if (qword_100806408 != -1)
    swift_once(&qword_100806408, sub_1004C7FF4);
  v12 = type metadata accessor for FontUseCase(0);
  v13 = sub_10000EFC4(v12, (uint64_t)qword_100869CF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v10, v13, v12);
  v15 = enum case for FontSource.useCase(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16(v10, enum case for FontSource.useCase(_:), v1);
  if (qword_100806418 != -1)
    swift_once(&qword_100806418, sub_1004C8584);
  v17 = sub_10000EFC4(v12, (uint64_t)qword_100869D20);
  v14(v7, v17, v12);
  v16(v7, v15, v1);
  v14(v4, v17, v12);
  v16(v4, v15, v1);
  v30[3] = type metadata accessor for StaticDimension(0);
  v30[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v30);
  v29[3] = v1;
  v29[4] = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v29);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v29, 12.0);
  v19.n128_f64[0] = (*(double (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v20 = sub_1004AF394(0xD000000000000013, 0x8000000100688820, 0, v19);
  v21 = objc_msgSend(v20, "imageWithRenderingMode:", 2);

  v23 = sub_1004AF394(0x74536E6F69746341, 0xEA0000000000706FLL, 0, v22);
  v24 = objc_msgSend(v23, "imageWithRenderingMode:", 2);

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleFootnote, UIFontWeightBold);
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", result);

    return (id)OfferButtonMetrics.init(fontSource:subtitleFontSource:inAppPurchaseTextSpace:contentInsets:redownloadImage:stopImage:symbolConfiguration:redownloadImageSymbolConfiguration:minimumSize:progressDiameter:lineWidth:textShapeLineWidth:expandsToFit:cornerRadius:includeTopPadding:)(v10, v7, v30, v21, v24, v27, 0, 0, 6.0, 12.0, 6.0, 12.0, 74.0, 32.0, 28.0, 2.0, 0, 0, 257);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100065CF0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  id v20;
  id v21;
  __n128 v22;
  id v23;
  id v24;
  id result;
  void *v26;
  id v27;
  _QWORD v28[2];
  _QWORD v29[5];
  _QWORD v30[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v28 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v28 - v9;
  v11 = type metadata accessor for OfferButtonMetrics(0);
  sub_100011980(v11, qword_1008649D8);
  v28[1] = sub_10000EFC4(v11, (uint64_t)qword_1008649D8);
  if (qword_100806428 != -1)
    swift_once(&qword_100806428, sub_1004C865C);
  v12 = type metadata accessor for FontUseCase(0);
  v13 = sub_10000EFC4(v12, (uint64_t)qword_100869D50);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v10, v13, v12);
  v15 = enum case for FontSource.useCase(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16(v10, enum case for FontSource.useCase(_:), v1);
  if (qword_100806418 != -1)
    swift_once(&qword_100806418, sub_1004C8584);
  v17 = sub_10000EFC4(v12, (uint64_t)qword_100869D20);
  v14(v7, v17, v12);
  v16(v7, v15, v1);
  v14(v4, v17, v12);
  v16(v4, v15, v1);
  v30[3] = type metadata accessor for StaticDimension(0);
  v30[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v30);
  v29[3] = v1;
  v29[4] = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v29);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v29, 12.0);
  v19.n128_f64[0] = (*(double (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v20 = sub_1004AF394(0xD000000000000013, 0x8000000100688820, 0, v19);
  v21 = objc_msgSend(v20, "imageWithRenderingMode:", 2);

  v23 = sub_1004AF394(0x74536E6F69746341, 0xEA0000000000706FLL, 0, v22);
  v24 = objc_msgSend(v23, "imageWithRenderingMode:", 2);

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleFootnote, UIFontWeightBold);
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", result);

    return (id)OfferButtonMetrics.init(fontSource:subtitleFontSource:inAppPurchaseTextSpace:contentInsets:redownloadImage:stopImage:symbolConfiguration:redownloadImageSymbolConfiguration:minimumSize:progressDiameter:lineWidth:textShapeLineWidth:expandsToFit:cornerRadius:includeTopPadding:)(v10, v7, v30, v21, v24, v27, 0, 0, 6.0, 32.0, 6.0, 32.0, 200.0, 52.0, 50.0, 3.0, 257, 0x4024000000000000, 256);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100066090(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  id v20;
  id v21;
  __n128 v22;
  id v23;
  id v24;
  id result;
  void *v26;
  id v27;
  _QWORD v28[2];
  _QWORD v29[5];
  _QWORD v30[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v28 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v28 - v9;
  v11 = type metadata accessor for OfferButtonMetrics(0);
  sub_100011980(v11, qword_1008649F0);
  v28[1] = sub_10000EFC4(v11, (uint64_t)qword_1008649F0);
  if (qword_100806438 != -1)
    swift_once(&qword_100806438, sub_1004C87A4);
  v12 = type metadata accessor for FontUseCase(0);
  v13 = sub_10000EFC4(v12, (uint64_t)qword_100869D80);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v10, v13, v12);
  v15 = enum case for FontSource.useCase(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16(v10, enum case for FontSource.useCase(_:), v1);
  if (qword_100806418 != -1)
    swift_once(&qword_100806418, sub_1004C8584);
  v17 = sub_10000EFC4(v12, (uint64_t)qword_100869D20);
  v14(v7, v17, v12);
  v16(v7, v15, v1);
  v14(v4, v17, v12);
  v16(v4, v15, v1);
  v30[3] = type metadata accessor for StaticDimension(0);
  v30[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v30);
  v29[3] = v1;
  v29[4] = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v29);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v29, 12.0);
  v19.n128_f64[0] = (*(double (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v20 = sub_1004AF394(0xD000000000000013, 0x8000000100688820, 0, v19);
  v21 = objc_msgSend(v20, "imageWithRenderingMode:", 2);

  v23 = sub_1004AF394(0x74536E6F69746341, 0xEA0000000000706FLL, 0, v22);
  v24 = objc_msgSend(v23, "imageWithRenderingMode:", 2);

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleFootnote, UIFontWeightBold);
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", result);

    return (id)OfferButtonMetrics.init(fontSource:subtitleFontSource:inAppPurchaseTextSpace:contentInsets:redownloadImage:stopImage:symbolConfiguration:redownloadImageSymbolConfiguration:minimumSize:progressDiameter:lineWidth:textShapeLineWidth:expandsToFit:cornerRadius:includeTopPadding:)(v10, v7, v30, v21, v24, v27, 0, 0, 6.0, 24.0, 6.0, 24.0, 200.0, 40.0, 40.0, 3.0, 257, 0x4024000000000000, 256);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100066428(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  id v20;
  id v21;
  __n128 v22;
  id v23;
  id v24;
  id result;
  void *v26;
  id v27;
  _QWORD v28[2];
  _QWORD v29[5];
  _QWORD v30[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v28 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v28 - v9;
  v11 = type metadata accessor for OfferButtonMetrics(0);
  sub_100011980(v11, qword_100864A08);
  v28[1] = sub_10000EFC4(v11, (uint64_t)qword_100864A08);
  if (qword_100806430 != -1)
    swift_once(&qword_100806430, sub_1004C8700);
  v12 = type metadata accessor for FontUseCase(0);
  v13 = sub_10000EFC4(v12, (uint64_t)qword_100869D68);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v10, v13, v12);
  v15 = enum case for FontSource.useCase(_:);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16(v10, enum case for FontSource.useCase(_:), v1);
  if (qword_100806418 != -1)
    swift_once(&qword_100806418, sub_1004C8584);
  v17 = sub_10000EFC4(v12, (uint64_t)qword_100869D20);
  v14(v7, v17, v12);
  v16(v7, v15, v1);
  v14(v4, v17, v12);
  v16(v4, v15, v1);
  v30[3] = type metadata accessor for StaticDimension(0);
  v30[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v30);
  v29[3] = v1;
  v29[4] = &protocol witness table for FontSource;
  v18 = sub_1000119C0(v29);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v29, 12.0);
  v19.n128_f64[0] = (*(double (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v20 = sub_1004AF394(0xD000000000000013, 0x8000000100688820, 0, v19);
  v21 = objc_msgSend(v20, "imageWithRenderingMode:", 2);

  v23 = sub_1004AF394(0x74536E6F69746341, 0xEA0000000000706FLL, 0, v22);
  v24 = objc_msgSend(v23, "imageWithRenderingMode:", 2);

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleFootnote, UIFontWeightBold);
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", result);

    return (id)OfferButtonMetrics.init(fontSource:subtitleFontSource:inAppPurchaseTextSpace:contentInsets:redownloadImage:stopImage:symbolConfiguration:redownloadImageSymbolConfiguration:minimumSize:progressDiameter:lineWidth:textShapeLineWidth:expandsToFit:cornerRadius:includeTopPadding:)(v10, v7, v30, v21, v24, v27, 0, 0, 6.0, 32.0, 6.0, 32.0, 200.0, 42.0, 40.0, 3.0, 257, 0x4024000000000000, 256);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for SearchLandingPageGridProvider(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s20ProductPageExtension29SearchLandingPageGridProviderVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SearchLandingPageGridProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for SearchLandingPageGridProvider(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchLandingPageGridProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchLandingPageGridProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingPageGridProvider()
{
  return &type metadata for SearchLandingPageGridProvider;
}

uint64_t sub_100066954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>)
{
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[2];

  v122 = a5;
  v123 = a4;
  v127 = a2;
  v124 = a6;
  v113 = type metadata accessor for SearchLandingChartsAndCategoriesDisplayOptions(0);
  v112 = *(_QWORD *)(v113 - 8);
  v20 = __chkstk_darwin(v113);
  v111 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for PageGrid.Direction(0, v20);
  v116 = *(_QWORD *)(v22 - 8);
  v117 = v22;
  __chkstk_darwin(v22);
  v110 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v115 = (char *)&v110 - v25;
  v27 = __chkstk_darwin(v26);
  v114 = (char *)&v110 - v28;
  v29 = type metadata accessor for Shelf.ContentsMetadata(0, v27);
  v125 = *(_QWORD *)(v29 - 8);
  v126 = v29;
  __chkstk_darwin(v29);
  v119 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v34 = (char **)((char *)&v110 - v33);
  v118 = type metadata accessor for SearchLandingTrendingDisplayOptions(0, v32);
  v35 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v37 = (char *)&v110 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for Shelf.ContentType(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v41 = (char **)((char *)&v110 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v42);
  v121 = (uint64_t)&v110 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v47 = (char *)&v110 + *(int *)(v46 + 48) - v45;
  v48 = v127;
  v127 = (uint64_t)&v110 - v45;
  sub_10003CFE8(v48, (uint64_t)&v110 - v45);
  v120 = v47;
  sub_10003CFE8(a3, (uint64_t)v47);
  KeyPath = swift_getKeyPath(&unk_100642F68);
  v50 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  ReadOnlyLens.subscript.getter(v41, KeyPath, v50);
  v51 = v38;
  v52 = swift_release();
  v53 = (*(uint64_t (**)(_QWORD *, uint64_t, __n128))(v39 + 88))(v41, v38, v52);
  if (v53 == enum case for Shelf.ContentType.action(_:))
  {
    v54 = v35;
    v55 = v118;
    v56 = swift_getKeyPath(&unk_100642F98);
    ReadOnlyLens.subscript.getter(v34, v56, v50);
    v57 = swift_release();
    v59 = v125;
    v58 = v126;
    v60 = a1;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, __n128))(v125 + 88))(v34, v126, v57) == enum case for Shelf.ContentsMetadata.searchLandingTrendingSection(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v59 + 96))(v34, v58);
      v61 = v54;
      v62 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v54 + 32))(v37, v34, v55);
      v63 = SearchLandingTrendingDisplayOptions.numberOfColumns.getter(v62);
      v64 = swift_getKeyPath(&unk_100642FC8);
      ReadOnlyLens.subscript.getter(v128, v64, v50);
      v65 = swift_release();
      v67 = v116;
      v66 = v117;
      if (LOBYTE(v128[0]))
        v68 = (unsigned int *)&enum case for PageGrid.Direction.horizontal(_:);
      else
        v68 = (unsigned int *)&enum case for PageGrid.Direction.vertical(_:);
      v69 = v114;
      v70 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v116 + 104))(v114, *v68, v117, v65);
      v71 = UITraitCollection.prefersAccessibilityLayouts.getter(v70);
      if ((v71 & 1) != 0 && (UITraitCollection.isSizeClassCompact.getter(v71) & 1) != 0)
        v63 = 1;
      v72 = v115;
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v115, v69, v66);
      v73 = sub_1000209DC(v63);
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD00000000000001FLL, 0x8000000100688870, v72, 0, v73, a7, a8, a9, a10, a11, a12);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v66);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v55);
LABEL_26:
      v106 = &qword_100808540;
      v105 = v127;
      return sub_100010F2C(v105, v106);
    }
    (*(void (**)(_QWORD *, uint64_t))(v59 + 8))(v34, v58);
  }
  else
  {
    v118 = v39;
    v74 = v119;
    v76 = v125;
    v75 = v126;
    if (v53 != enum case for Shelf.ContentType.searchChartsAndCategories(_:))
    {
      v94 = v121;
      v93 = v122;
      v128[0] = v122;
      v95 = v51;
      v96 = v121 + *(int *)(v42 + 48);
      v97 = v127;
      sub_10003CFE8(v127, v121);
      sub_10003CFE8((uint64_t)v120, v96);
      v98 = sub_100067508();
      swift_retain(v93);
      PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, v94, v96, v123, &type metadata for GenericPageGridProvider, v98, a7, a8, a9, a10, a11, a12);
      swift_release();
      sub_100010F2C(v97, &qword_100808540);
      sub_100010F2C(v96, &qword_100808548);
      sub_100010F2C(v94, &qword_100808548);
      return (*(uint64_t (**)(_QWORD *, uint64_t))(v118 + 8))(v41, v95);
    }
    v77 = swift_getKeyPath(&unk_100642F98);
    v78 = v50;
    v60 = a1;
    ReadOnlyLens.subscript.getter(v74, v77, v50);
    v79 = swift_release();
    if ((*(unsigned int (**)(_QWORD *, uint64_t, __n128))(v76 + 88))(v74, v75, v79) == enum case for Shelf.ContentsMetadata.searchLandingChartsAndCategoriesSection(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v76 + 96))(v74, v75);
      v80 = v112;
      v81 = v111;
      v82 = v74;
      v83 = v113;
      (*(void (**)(char *, _QWORD *, uint64_t))(v112 + 32))(v111, v82, v113);
      v84 = swift_getKeyPath(&unk_100642FC8);
      ReadOnlyLens.subscript.getter(v128, v84, v78);
      v85 = swift_release();
      v87 = v116;
      v86 = v117;
      if (LOBYTE(v128[0]))
        v88 = (unsigned int *)&enum case for PageGrid.Direction.horizontal(_:);
      else
        v88 = (unsigned int *)&enum case for PageGrid.Direction.vertical(_:);
      v89 = v110;
      v90 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v116 + 104))(v110, *v88, v117, v85);
      v91 = UITraitCollection.prefersAccessibilityLayouts.getter(v90);
      if ((v91 & 1) != 0)
      {
        v92 = 1;
      }
      else
      {
        v91 = SearchLandingChartsAndCategoriesDisplayOptions.numberOfColumns.getter();
        v92 = v91;
      }
      v107 = UITraitCollection.prefersAccessibilityLayouts.getter(v91);
      if ((v107 & 1) != 0 && (UITraitCollection.isSizeClassCompact.getter(v107) & 1) != 0)
        v92 = 1;
      v108 = v115;
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v115, v89, v86);
      v109 = sub_10003DAEC(v92);
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000023, 0x8000000100688840, v108, 0, v109, a7, a8, a9, a10, a11, a12);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v86);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v83);
      goto LABEL_26;
    }
    (*(void (**)(_QWORD *, uint64_t))(v76 + 8))(v74, v75);
  }
  v101 = v121;
  v100 = v122;
  v128[0] = v122;
  v102 = v121 + *(int *)(v42 + 48);
  v103 = v127;
  sub_10003CFE8(v127, v121);
  sub_10003CFE8((uint64_t)v120, v102);
  v104 = sub_100067508();
  swift_retain(v100);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v60, v101, v102, v123, &type metadata for GenericPageGridProvider, v104, a7, a8, a9, a10, a11, a12);
  swift_release();
  sub_100010F2C(v103, &qword_100808540);
  sub_100010F2C(v102, &qword_100808548);
  v105 = v101;
  v106 = &qword_100808548;
  return sub_100010F2C(v105, v106);
}

uint64_t sub_10006715C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_10003D034();
  return PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_10006720C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_10003D034();
  return PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000672BC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

uint64_t sub_1000672C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100067554();
  return PageGridCaching<>.invalidateCache()(a1, v4, a2);
}

uint64_t sub_1000672FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t *v11;

  return sub_100066954(a1, a2, a3, a4, *v11, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_100067304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  __int128 *v12;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v33 = a5;
  v34 = a6;
  v23 = sub_10000DAF8(&qword_100808540);
  __chkstk_darwin(v23);
  v25 = (char *)&v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v33 - v27;
  v30 = (char *)&v33 + *(int *)(v29 + 48) - v27;
  sub_10003CFE8(a2, (uint64_t)&v33 - v27);
  sub_10003CFE8(a3, (uint64_t)v30);
  v35 = *v12;
  v31 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_10003CFE8((uint64_t)v28, (uint64_t)v25);
  sub_10003CFE8((uint64_t)v30, v31);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, v25, v31, a4, v33, v34, a7, a8, a9, a10, a11, a12);
  sub_100010F2C((uint64_t)v28, &qword_100808540);
  sub_100010F2C(v31, &qword_100808548);
  return sub_100010F2C((uint64_t)v25, &qword_100808548);
}

uint64_t sub_100067494()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = sub_10000DAF8(&qword_10080AAA0);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100640720;
  *(_QWORD *)(v3 + 56) = &type metadata for GenericPageGridProvider;
  *(_QWORD *)(v3 + 64) = sub_100067508();
  *(_QWORD *)(v3 + 72) = sub_100067598();
  *(_QWORD *)(v3 + 32) = v1;
  swift_retain(v1);
  return v3;
}

unint64_t sub_100067508()
{
  unint64_t result;

  result = qword_10080AA90;
  if (!qword_10080AA90)
  {
    result = swift_getWitnessTable(&unk_10064E2A8, &type metadata for GenericPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_10080AA90);
  }
  return result;
}

unint64_t sub_100067554()
{
  unint64_t result;

  result = qword_10080AA98;
  if (!qword_10080AA98)
  {
    result = swift_getWitnessTable(&unk_100642ED0, &type metadata for SearchLandingPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_10080AA98);
  }
  return result;
}

unint64_t sub_100067598()
{
  unint64_t result;

  result = qword_10080AAA8;
  if (!qword_10080AAA8)
  {
    result = swift_getWitnessTable(&unk_10064E2E8, &type metadata for GenericPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_10080AAA8);
  }
  return result;
}

UIColor sub_1000675DC()
{
  UIColor result;

  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  result.super.isa = UIColor.init(light:dark:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.556862745, 0.556862745, 0.57254902, 1.0), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.552941176, 0.552941176, 0.580392157, 1.0)).super.isa;
  qword_10080AAB0 = (uint64_t)result.super.isa;
  return result;
}

void sub_100067688(float a1)
{
  uint64_t v1;
  uint64_t v2;
  float v3;
  float v4;
  uint64_t v5;
  float v6;

  v2 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating;
  v3 = *(float *)(v1 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating);
  *(float *)(v1 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating) = a1;
  if (v3 != a1)
  {
    v4 = 0.0;
    if (a1 < 0.0
      || (v4 = (float)*(uint64_t *)(v1 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_maxNumberOfStars), v4 < a1))
    {
      *(float *)(v1 + v2) = v4;
      a1 = v4;
    }
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView);
    v6 = *(float *)(v5 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating);
    *(float *)(v5 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating) = a1;
    sub_1000682A0(v6);
  }
}

void sub_100067708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor);
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v6 = v5;
  LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v6);

  if ((a1 & 1) == 0)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView))
    {
      v7 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor);
      v8 = v7;
      if (!v7)
      {
        v8 = *(void **)(v2 + v4);
        v9 = v8;
      }
      v10 = v7;
      sub_100067F30(v8);
    }
    v11 = *(void **)(v2 + v4);
    v12 = v11;
    sub_100067F30(v11);
  }
}

void sub_1000677D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v2 = v1;
  v3 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor);
  if (a1)
  {
    if (v4)
    {
      v5 = a1;
      sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
      v6 = v4;
      v7 = v5;
      LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v6);

      if ((v5 & 1) != 0)
        return;
    }
  }
  else if (!v4)
  {
    return;
  }
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView))
  {
    v8 = *(void **)(v2 + v3);
    v9 = v8;
    if (!v8)
    {
      v9 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor);
      v10 = v9;
    }
    v11 = v8;
    sub_100067F30(v9);
  }
  v12 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor);
  v13 = v12;
  sub_100067F30(v12);
}

void sub_1000678C4(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  int v7;
  double *v8;
  double v9;
  char v10;
  float v11;
  char v12;
  id v13;
  id v14;
  id v15;
  Class isa;
  double v17;
  double v18;
  double v19;
  objc_super v20;
  objc_super v21;
  __C::UIContentSizeCategory_optional v22;
  __C::UIContentSizeCategory_optional v23;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = a2 & 1;
  v8 = (double *)&v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  v9 = *(double *)&v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  v10 = v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding + 8];
  *v8 = *(double *)&a1;
  *((_BYTE *)v8 + 8) = v7;
  if ((v10 & 1) != 0)
  {
    if (v7)
      return;
LABEL_6:
    v11 = *(float *)&v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating];
    v12 = v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize];
    v13 = objc_msgSend(v3, "traitCollection", v9);
    v21.receiver = v3;
    v21.super_class = ObjectType;
    v14 = objc_msgSendSuper2(&v21, "minimumContentSizeCategory");
    v20.receiver = v3;
    v20.super_class = ObjectType;
    v15 = objc_msgSendSuper2(&v20, "maximumContentSizeCategory");
    v22.value._rawValue = v14;
    v22.is_nil = (char)v15;
    isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v22, v23).super.isa;

    v17 = sub_100069600(v12, a1, v7, v11);
    v19 = v18;

    objc_msgSend(v3, "setFrame:", 0.0, 0.0, v17, v19);
    sub_1000684D8();
    return;
  }
  if (v7 || v9 != *(double *)&a1)
    goto LABEL_6;
}

char *sub_100067A50(uint64_t a1, char a2, uint64_t a3, char a4, char a5, char a6, char a7)
{
  char *v7;
  int v14;
  char v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  objc_class *v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  id v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id v38;
  float v39;
  char *v40;
  objc_class *ObjectType;
  objc_super v44;

  ObjectType = (objc_class *)swift_getObjectType();
  v14 = a4 & 1;
  v15 = a7 & 1;
  *(_DWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor] = 0;
  v16 = &v7[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starPadding];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension10RatingView_maxNumberOfStars] = a1;
  v17 = qword_100804690;
  v18 = v7;
  if (v17 != -1)
    swift_once(&qword_100804690, sub_1000675DC);
  v19 = (void *)qword_10080AAB0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor] = qword_10080AAB0;
  v18[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starSize] = a2;
  *(_QWORD *)v16 = a3;
  v16[8] = v14 != 0;
  v18[OBJC_IVAR____TtC20ProductPageExtension10RatingView_useCase] = v15;
  v20 = (objc_class *)type metadata accessor for StarRow();
  v21 = objc_allocWithZone(v20);
  v22 = v19;
  v23 = sub_100068C3C(a1, 1, a2, a3, v14, 0, v15);
  v24 = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView] = v23;
  if ((a5 & 1) == 0)
  {
    v25 = objc_allocWithZone(v20);
    v24 = sub_100068C3C(a1, a6 & 1, a2, a3, v14, 0, v15);
  }
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView] = v24;

  v44.receiver = v18;
  v44.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v27 = v26;
  v28 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView;
  if (*(_QWORD *)&v26[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView])
  {
    v29 = *(void **)&v26[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor];
    v30 = v29;
    if (!v29)
    {
      v30 = *(void **)&v26[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor];
      v31 = v30;
    }
    v32 = v29;
    v33 = v27;
    sub_100067F30(v30);
  }
  else
  {
    v34 = v26;
  }
  v35 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView;
  v36 = *(char **)&v27[OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView];
  v37 = *(void **)&v27[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor];
  v38 = v37;
  sub_100067F30(v37);
  v39 = *(float *)&v36[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating];
  *(_DWORD *)&v36[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating] = *(_DWORD *)&v27[OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating];
  v40 = v36;
  sub_1000682A0(v39);

  if (*(_QWORD *)&v27[v28])
    objc_msgSend(v27, "addSubview:");
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v27[v35]);

  return v27;
}

id sub_100067D90(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  id v8;
  char v9;
  void *v10;
  CGAffineTransform v12;
  objc_super v13;

  v3 = v2;
  v13.receiver = v2;
  v13.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v4 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "frame");
    v6 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView];
    objc_msgSend(v6, "frame");
    objc_msgSend(v5, "bounds");
    CGRect.withLayoutDirection(in:relativeTo:)(v3, v7);
    objc_msgSend(v6, "setFrame:");

  }
  v8 = objc_msgSend(v3, "traitCollection");
  v9 = UITraitCollection.prefersRightToLeftLayouts.getter();

  v10 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView];
  if ((v9 & 1) != 0)
  {
    CGAffineTransformMakeScale(&v12, -1.0, 1.0);
  }
  else
  {
    *(_OWORD *)&v12.a = 0x3FF0000000000000uLL;
    v12.c = 0.0;
    v12.d = 1.0;
    *(_OWORD *)&v12.tx = 0uLL;
  }
  return objc_msgSend(v10, "setTransform:", &v12);
}

void sub_100067F30(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor) = a1;
  v8 = a1;
  if (!v4)
  {
    if (!a1)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_1000684D8();
    goto LABEL_7;
  }
  if (!a1)
    goto LABEL_6;
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v5 = v4;
  v6 = v8;
  v7 = static NSObject.== infix(_:_:)(v5, v6);

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

double sub_100068030()
{
  _BYTE *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  id v7;
  Class isa;
  double v9;
  __C::UIContentSizeCategory_optional v11;
  __C::UIContentSizeCategory_optional v12;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starPadding];
  v2 = v0[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starPadding + 8];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension10RatingView_maxNumberOfStars];
  v4 = v0[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starSize];
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v0, "minimumContentSizeCategory");
  v7 = objc_msgSend(v0, "maximumContentSizeCategory");
  v11.value._rawValue = v6;
  v11.is_nil = (char)v7;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v11, v12).super.isa;

  v9 = sub_100069600(v4, v1, v2, (float)v3);
  return v9;
}

uint64_t type metadata accessor for RatingView()
{
  return objc_opt_self(_TtC20ProductPageExtension10RatingView);
}

void sub_1000682A0(float a1)
{
  _BYTE *v1;
  float v2;
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t v5;
  char v6;
  char v7;
  id v8;
  id v9;
  id v10;
  Class isa;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  objc_super v33;
  objc_super v34;
  __C::UIContentSizeCategory_optional v35;
  __C::UIContentSizeCategory_optional v36;

  v2 = *(float *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating];
  if (v2 != a1)
  {
    v3 = v1;
    ObjectType = (objc_class *)swift_getObjectType();
    v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
    v6 = v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding + 8];
    v7 = v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize];
    v8 = objc_msgSend(v3, "traitCollection");
    v34.receiver = v3;
    v34.super_class = ObjectType;
    v9 = objc_msgSendSuper2(&v34, "minimumContentSizeCategory");
    v33.receiver = v3;
    v33.super_class = ObjectType;
    v10 = objc_msgSendSuper2(&v33, "maximumContentSizeCategory");
    v35.value._rawValue = v9;
    v35.is_nil = (char)v10;
    isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v35, v36).super.isa;

    v12 = sub_100069600(v7, v5, v6, v2);
    v14 = v13;

    objc_msgSend(v3, "setFrame:", 0.0, 0.0, v12, v14);
    v15 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starImageView], "image");
    if (v15)
    {
      v16 = v15;
      v17 = *(id *)&v3[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starLayer];
      objc_msgSend(v3, "bounds");
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;
      objc_msgSend(v16, "contentInsets");
      v27 = v26;
      objc_msgSend(v16, "contentInsets");
      v29 = v28;
      objc_msgSend(v16, "contentInsets");
      v31 = v30;
      objc_msgSend(v16, "contentInsets");
      objc_msgSend(v17, "setFrame:", v19 - v27, v21 - v29, v23 + v31, v25 + v32);

    }
  }
}

void sub_1000684D8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  id v4;
  uint64_t v5;
  int v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double Width;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  CATransform3D v44;
  objc_super v45;
  objc_super v46;
  __C::UIContentSizeCategory_optional v47;
  __C::UIContentSizeCategory_optional v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starImageView;
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starImageView], "layer");
  objc_msgSend(v4, "removeFromSuperlayer");

  v5 = OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starLayer;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starLayer], "removeFromSuperlayer");
  v6 = v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize];
  v7 = objc_msgSend(v1, "traitCollection");
  v46.receiver = v1;
  v46.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v46, "minimumContentSizeCategory");
  v45.receiver = v1;
  v45.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v45, "maximumContentSizeCategory");
  v47.value._rawValue = v8;
  v47.is_nil = (char)v9;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v47, v48).super.isa;

  sub_1000692D0(v6);
  v12 = v11;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v12);
  v14 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = v13;

  v15 = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");
  v16 = *(void **)&v1[v5];
  *(_QWORD *)&v1[v5] = v15;

  objc_msgSend(*(id *)&v1[v5], "setInstanceCount:", *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_maxNumberOfStars]);
  if ((v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding + 8] & 1) != 0)
  {
    if (v6)
    {
      if (v6 != 4 && v6 != 2)
      {
        objc_msgSend(*(id *)&v1[v3], "frame");
        Width = CGRectGetWidth(v50);
        goto LABEL_9;
      }
      v17 = 2.0;
    }
    else
    {
      v17 = 6.0;
    }
  }
  else
  {
    v17 = *(double *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  }
  objc_msgSend(*(id *)&v1[v3], "frame");
  v18 = CGRectGetWidth(v49);
  objc_msgSend(v12, "contentInsets");
  v20 = v18 - v19;
  objc_msgSend(v12, "contentInsets");
  Width = v17 + v20 - v21;
LABEL_9:
  v23 = *(id *)&v1[v5];
  CATransform3DMakeTranslation(&v44, Width, 0.0, 0.0);
  objc_msgSend(v23, "setInstanceTransform:", &v44);

  objc_msgSend(*(id *)&v1[v5], "setMasksToBounds:", 1);
  objc_msgSend(*(id *)&v1[v3], "setTintColor:", *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor]);
  v24 = *(void **)&v1[v3];
  v25 = *(id *)&v1[v5];
  v26 = objc_msgSend(v24, "layer");
  objc_msgSend(v25, "addSublayer:", v26);

  v27 = *(id *)&v1[v5];
  objc_msgSend(v1, "bounds");
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  objc_msgSend(v12, "contentInsets");
  v37 = v36;
  objc_msgSend(v12, "contentInsets");
  v39 = v38;
  objc_msgSend(v12, "contentInsets");
  v41 = v40;
  objc_msgSend(v12, "contentInsets");
  objc_msgSend(v27, "setFrame:", v29 - v37, v31 - v39, v33 + v41, v35 + v42);

  v43 = objc_msgSend(v1, "layer");
  objc_msgSend(v43, "addSublayer:", *(_QWORD *)&v1[v5]);

}

id sub_100068910(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_100068968(void *a1, uint64_t a2, void *a3, SEL *a4, SEL *a5)
{
  objc_class *ObjectType;
  const char *v10;
  id v11;
  id v12;
  id v13;
  objc_super v14;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v15.receiver = a1;
  v15.super_class = ObjectType;
  v10 = *a4;
  v11 = a3;
  v12 = a1;
  v13 = objc_msgSendSuper2(&v15, v10);
  v14.receiver = v12;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, *a5, v11);
  sub_100068A14((uint64_t)v13, a4);

}

void sub_100068A14(uint64_t a1, SEL *a2)
{
  char *v2;
  char *v4;
  objc_class *ObjectType;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  float v19;
  char v20;
  id v21;
  id v22;
  id v23;
  Class isa;
  double v25;
  double v26;
  double v27;
  objc_super v28;
  objc_super v29;
  objc_super v30;
  __C::UIContentSizeCategory_optional v31;
  __C::UIContentSizeCategory_optional v32;

  v4 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v30.receiver = v4;
  v30.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v30, *a2);
  v8 = v7;
  if (!a1)
  {
    if (!v7)
      return;

    goto LABEL_11;
  }
  if (!v7)
    goto LABEL_11;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  if (v9 == v12 && v11 == v13)
  {

    swift_bridgeObjectRelease_n(v11, 2);
    return;
  }
  v15 = v13;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);

  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
    v18 = v4[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding + 8];
    v19 = *(float *)&v4[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating];
    v20 = v4[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize];
    v21 = objc_msgSend(v4, "traitCollection");
    v29.receiver = v4;
    v29.super_class = ObjectType;
    v22 = objc_msgSendSuper2(&v29, "minimumContentSizeCategory");
    v28.receiver = v4;
    v28.super_class = ObjectType;
    v23 = objc_msgSendSuper2(&v28, "maximumContentSizeCategory");
    v31.value._rawValue = v22;
    v31.is_nil = (char)v23;
    isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v31, v32).super.isa;

    v25 = sub_100069600(v20, v17, v18, v19);
    v27 = v26;

    objc_msgSend(v4, "setFrame:", 0.0, 0.0, v25, v27);
    sub_1000684D8();
  }
}

char *sub_100068C3C(uint64_t a1, char a2, char a3, uint64_t a4, char a5, void *a6, char a7)
{
  char *v7;
  char *v8;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  float v24;
  id v25;
  id v26;
  id v27;
  Class isa;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v39;
  objc_class *ObjectType;
  id v42;
  objc_super v43;
  objc_super v44;
  objc_super v45;
  __C::UIContentSizeCategory_optional v46;
  __C::UIContentSizeCategory_optional v47;

  v8 = v7;
  ObjectType = (objc_class *)swift_getObjectType();
  v39 = a7 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor] = 0;
  v15 = &v8[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starImageView;
  v17 = objc_allocWithZone((Class)UIImageView);
  v18 = v8;
  *(_QWORD *)&v8[v16] = objc_msgSend(v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starLayer;
  *(_QWORD *)&v18[v19] = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");
  v18[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize] = a3;
  *(_QWORD *)v15 = a4;
  v15[8] = a5 & 1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_maxNumberOfStars] = a1;
  v18[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_filled] = a2;
  *(float *)&v18[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating] = (float)a1;
  v18[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_useCase] = v39;

  v45.receiver = v18;
  v45.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = *(void **)&v20[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor];
  *(_QWORD *)&v20[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor] = a6;
  v22 = v20;
  v42 = a6;

  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  LOBYTE(a4) = v22[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding + 8];
  v24 = *(float *)&v22[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating];
  LOBYTE(v18) = v22[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize];
  v25 = objc_msgSend(v22, "traitCollection");
  v44.receiver = v22;
  v44.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v44, "minimumContentSizeCategory");
  v43.receiver = v22;
  v43.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v43, "maximumContentSizeCategory");
  v46.value._rawValue = v26;
  v46.is_nil = (char)v27;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v46, v47).super.isa;

  v29 = sub_100069600((char)v18, v23, a4, v24);
  v31 = v30;

  objc_msgSend(v22, "setFrame:", 0.0, 0.0, v29, v31);
  sub_1000684D8();
  v32 = objc_msgSend(v22, "layer");
  objc_msgSend(v32, "setMasksToBounds:", 1);

  v33 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v34 = swift_allocObject(v33, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100640720;
  *(_QWORD *)(v34 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v34 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v35 = v22;
  UIView.registerForTraitChanges<A>(_:handler:)(v34, sub_1000692AC, 0, ObjectType);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v34);
  sub_100018B6C(0, (unint64_t *)&qword_100811F50, UITraitCollection_ptr);
  v36 = v35;
  v37 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  UIView.registerForTraitChanges<A>(_:handler:)(v37, sub_1000692B0, 0, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v37);

  return v36;
}

void sub_100068FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t type metadata accessor for StarRow()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow);
}

uint64_t storeEnumTagSinglePayload for RatingView.UseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000690D0 + 4 * byte_100643025[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100069104 + 4 * byte_100643020[v4]))();
}

uint64_t sub_100069104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006910C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100069114);
  return result;
}

uint64_t sub_100069120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100069128);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10006912C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100069134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RatingView.UseCase()
{
  return &type metadata for RatingView.UseCase;
}

uint64_t storeEnumTagSinglePayload for RatingView.StarSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10006919C + 4 * byte_10064302F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1000691D0 + 4 * byte_10064302A[v4]))();
}

uint64_t sub_1000691D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000691D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000691E0);
  return result;
}

uint64_t sub_1000691EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000691F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1000691F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100069200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RatingView.StarSize()
{
  return &type metadata for RatingView.StarSize;
}

unint64_t sub_100069220()
{
  unint64_t result;

  result = qword_10080AB98;
  if (!qword_10080AB98)
  {
    result = swift_getWitnessTable(&unk_1006430BC, &type metadata for RatingView.StarSize);
    atomic_store(result, (unint64_t *)&qword_10080AB98);
  }
  return result;
}

unint64_t sub_100069268()
{
  unint64_t result;

  result = qword_10080ABA0;
  if (!qword_10080ABA0)
  {
    result = swift_getWitnessTable(&unk_100643124, &type metadata for RatingView.UseCase);
    atomic_store(result, (unint64_t *)&qword_10080ABA0);
  }
  return result;
}

void sub_1000692B0()
{
  sub_1000684D8();
}

void sub_1000692D0(char a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SystemImage(0);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_100069350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  id v5;
  unsigned int *v6;
  id v7;
  uint64_t v8;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleHeadline, 2);
  v6 = (unsigned int *)&enum case for SystemImage.starFill(_:);
  if ((v3 & 1) == 0)
    v6 = (unsigned int *)&enum case for SystemImage.star(_:);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *v6, v0);
  v7 = objc_msgSend(v5, "configurationWithTraitCollection:", v2);
  v8 = static SystemImage.load(_:with:)(v1, v7);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v8;
}

unint64_t sub_1000695B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080CED0;
  if (!qword_10080CED0)
  {
    v1 = type metadata accessor for Feature(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature, v1);
    atomic_store(result, (unint64_t *)&qword_10080CED0);
  }
  return result;
}

double sub_100069600(char a1, uint64_t a2, char a3, float a4)
{
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;

  sub_1000692D0(a1);
  v9 = v8;
  objc_msgSend(v8, "contentInsets");
  v11 = v10;
  objc_msgSend(v9, "contentInsets");
  v13 = v11 + v12;
  objc_msgSend(v9, "size");
  v15 = v14;
  objc_msgSend(v9, "contentInsets");
  objc_msgSend(v9, "contentInsets");
  objc_msgSend(v9, "size");

  if ((a3 & 1) == 0)
  {
    v16 = *(double *)&a2;
LABEL_8:
    v17 = v16 * (float)(ceilf(a4) + -1.0);
    return (v15 - v13) * a4 + v17;
  }
  if (!a1)
  {
    v16 = 6.0;
    goto LABEL_8;
  }
  if (a1 == 4 || a1 == 2)
  {
    v16 = 2.0;
    goto LABEL_8;
  }
  v17 = v13 * (float)(ceilf(a4) + -1.0);
  if (v17 < 0.0)
    v17 = 0.0;
  return (v15 - v13) * a4 + v17;
}

double sub_10006974C(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;
  id v8;
  Class isa;
  double v10;
  void *v11;
  void *v12;
  __C::UIContentSizeCategory_optional v14;
  __C::UIContentSizeCategory_optional v15;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starPadding];
  v3 = v1[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starPadding + 8];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension10RatingView_maxNumberOfStars];
  v5 = v1[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starSize];
  v6 = objc_msgSend(a1, "traitCollection");
  v7 = objc_msgSend(v1, "minimumContentSizeCategory");
  v8 = objc_msgSend(v1, "maximumContentSizeCategory");
  v14.value._rawValue = v7;
  v14.is_nil = (char)v8;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v14, v15).super.isa;

  v10 = sub_100069600(v5, v2, v3, (float)v4);
  sub_1000692D0(v5);
  v12 = v11;
  UIImage.baselineOffsetFromBottom.getter();
  objc_msgSend(v12, "contentInsets");

  return v10;
}

void sub_1000698B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor] = 0;
  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starImageView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/RatingView.swift", 37, 2, 444, 0);
  __break(1u);
}

void sub_100069994(_BYTE *a1)
{
  objc_class *ObjectType;
  uint64_t v3;
  char v4;
  float v5;
  char v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  double v11;
  double v12;
  double v13;
  objc_super v14;
  objc_super v15;
  __C::UIContentSizeCategory_optional v16;
  __C::UIContentSizeCategory_optional v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding];
  v4 = a1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starPadding + 8];
  v5 = *(float *)&a1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating];
  v6 = a1[OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starSize];
  v7 = objc_msgSend(a1, "traitCollection");
  v15.receiver = a1;
  v15.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v15, "minimumContentSizeCategory");
  v14.receiver = a1;
  v14.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v14, "maximumContentSizeCategory");
  v16.value._rawValue = v8;
  v16.is_nil = (char)v9;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v16, v17).super.isa;

  v11 = sub_100069600(v6, v3, v4, v5);
  v13 = v12;

  objc_msgSend(a1, "setFrame:", 0.0, 0.0, v11, v13);
  sub_1000684D8();
}

ValueMetadata *type metadata accessor for GuidedSearchTokenToggleActionImplementation()
{
  return &type metadata for GuidedSearchTokenToggleActionImplementation;
}

unint64_t sub_100069B00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080ABA8;
  if (!qword_10080ABA8)
  {
    v1 = type metadata accessor for GuidedSearchTokenToggleAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080ABA8);
  }
  return result;
}

uint64_t sub_100069B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  void *v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = type metadata accessor for SearchActionCalculator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2);
  v11 = (void *)sub_100302718(Strong);

  v36 = v11;
  v12 = sub_100050BB8();
  v13 = v11;
  v14 = sub_10000DAF8(&qword_10080ABB0);
  if ((swift_dynamicCast(&v33, &v36, v12, v14, 6) & 1) == 0)
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    sub_100010F2C((uint64_t)&v33, &qword_10080ABB8);
LABEL_6:
    sub_10000DAF8(&qword_100808570);
    v28 = sub_100069F70();
    v29 = swift_allocError(&type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError, v28, 0, 0);
    v19 = Promise.__allocating_init(error:)(v29);

    return v19;
  }
  sub_100010E24(&v33, (uint64_t)v37);
  v15 = v38;
  v16 = v39;
  sub_100010F08(v37, v38);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  if (!v17)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v37);
    goto LABEL_6;
  }
  v18 = v17;
  sub_10000DAF8(&qword_100808570);
  v19 = Promise.__allocating_init()();
  v20 = type metadata accessor for GuidedSearchPresenter(0);
  v21 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v20, a2, v20, v21);
  v32 = a2;
  *((_QWORD *)&v34 + 1) = v20;
  v35 = &protocol witness table for GuidedSearchPresenter;
  v22 = swift_retain(v33);
  SearchActionCalculator.init(optimizationTermProviding:)(&v33, v22);
  v23 = SearchActionCalculator.searchAction(modifying:with:)(v18, a1);
  type metadata accessor for MetricsActivity(0);
  v25 = static MetricsActivity.current.getter(v24);
  v31 = (uint64_t)&v31;
  v26 = __chkstk_darwin(v25);
  *(&v31 - 4) = v3;
  *(&v31 - 3) = v23;
  *(&v31 - 2) = v32;
  *(&v31 - 1) = v19;
  dispatch thunk of MetricsActivity.performingContext(for:body:)(v23, sub_100069FB4, v26);

  swift_release();
  swift_release();
  v27 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v27);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v37);
  return v19;
}

double sub_100069DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  __n128 v17;
  double result;
  uint64_t v19;

  v7 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  BaseObjectGraph.optional<A>(_:)(v9, v10, v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100010F2C((uint64_t)v9, (uint64_t *)&unk_100809290);
    v14 = sub_10005ABBC();
    v15 = swift_allocError(&type metadata for GeneralActionImplementationError, v14, 0, 0);
    *v16 = 1;
    Promise.__allocating_init(error:)(v15);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_10032D85C(a2, a3, (uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v17 = swift_release();
  Promise.pipe(to:)(a4, v17);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100069F68(uint64_t *a1, uint64_t a2)
{
  return sub_100069B48(*a1, a2);
}

unint64_t sub_100069F70()
{
  unint64_t result;

  result = qword_10080ABC0;
  if (!qword_10080ABC0)
  {
    result = swift_getWitnessTable(&unk_10064326C, &type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080ABC0);
  }
  return result;
}

double sub_100069FB4()
{
  uint64_t *v0;

  return sub_100069DE0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t storeEnumTagSinglePayload for GuidedSearchTokenToggleActionImplementation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10006A000 + 4 * byte_100643150[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10006A020 + 4 * byte_100643155[v4]))();
}

_BYTE *sub_10006A000(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10006A020(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10006A028(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10006A030(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10006A038(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10006A040(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GuidedSearchTokenToggleActionImplementation.ImplementationError()
{
  return &type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError;
}

unint64_t sub_10006A060()
{
  unint64_t result;

  result = qword_10080ABC8;
  if (!qword_10080ABC8)
  {
    result = swift_getWitnessTable(&unk_100643244, &type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080ABC8);
  }
  return result;
}

unint64_t sub_10006A0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080ABD0;
  if (!qword_10080ABD0)
  {
    v1 = type metadata accessor for BadgeCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_1006432AC, v1);
    atomic_store(result, (unint64_t *)&qword_10080ABD0);
  }
  return result;
}

double sub_10006A0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  uint64_t v14;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v4);
  v5 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_100805C60 != -1)
    swift_once(&qword_100805C60, sub_10042A6A4);
  v9 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v8);
  v10 = sub_10000EFC4(v9, (uint64_t)qword_100868898);
  v11 = (void *)ShelfLayoutContext.traitCollection.getter(v10);
  v12 = static BadgeViewRibbonLayout.estimatedHeight(fitting:using:with:)(v10, v11, v5, v7);

  return v12;
}

void sub_10006A1FC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[2];
  _OWORD v40[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000DAF8(&qword_10080AC68);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v29)
        goto LABEL_37;
      v14 = *(_QWORD *)(v30 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v29)
          goto LABEL_37;
        v14 = *(_QWORD *)(v30 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v29)
            goto LABEL_37;
          v14 = *(_QWORD *)(v30 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v40[0] = *v17;
    *((_QWORD *)&v40[0] + 1) = v18;
    swift_bridgeObjectRetain(v18);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v32, v40, &type metadata for String, &type metadata for AnyHashable, 7);
    v31 = v19;
    v20 = sub_10000DAF8(&qword_10080AC70);
    swift_dynamicCast(v35, &v31, v20, (char *)&type metadata for Any + 8, 7);
    v36 = v32;
    v37 = v33;
    v38 = v34;
    sub_10004EA50(v35, v39);
    v32 = v36;
    v33 = v37;
    v34 = v38;
    sub_10004EA50(v39, v40);
    sub_10004EA50(v40, &v36);
    v21 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v22 = -1 << *((_BYTE *)v3 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)&v7[8 * (v23 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)&v7[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)&v7[8 * v24];
      }
      while (v28 == -1);
      v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(_QWORD *)(v10 + 32) = v34;
    sub_10004EA50(&v36, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_10004E834(a1);
    return;
  }
  v14 = *(_QWORD *)(v30 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_10006A5B0()
{
  sub_10006A5E4((uint64_t (*)(__n128))&MarketingItemRequestInfo.purchaseSuccessAction.getter);
}

double sub_10006A5BC()
{
  return sub_10006A8D0((uint64_t)&OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_requestInfo, (uint64_t (*)(__n128))&MarketingItemRequestInfo.purchaseFailureAction.getter, &OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph);
}

void sub_10006A5D8()
{
  sub_10006A5E4((uint64_t (*)(__n128))&MarketingItemRequestInfo.carrierLinkSuccessAction.getter);
}

void sub_10006A5E4(uint64_t (*a1)(__n128))
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  _QWORD v14[4];

  ObjectType = swift_getObjectType();
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1(v6);
  if (v9)
  {
    v10 = v9;
    if (UIResponder.nearestActionRunner.getter())
    {
      v14[3] = ObjectType;
      v14[0] = v1;
      v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph];
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v4);
      v12 = v1;
      swift_retain(v11);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v10, v14, v8, v11);
      swift_release();
      swift_release();
      v13 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v13);
      sub_10001282C((uint64_t)v14);
    }
    else
    {
      swift_release();
    }
  }
  sub_10006B2F0(&OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph, (uint64_t)&unk_1007396D0, (uint64_t)sub_10006BD60);
}

void sub_10006A740(uint64_t (*a1)(__n128))
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  _QWORD v14[4];

  ObjectType = swift_getObjectType();
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1(v6);
  if (v9)
  {
    v10 = v9;
    if (UIResponder.nearestActionRunner.getter())
    {
      v14[3] = ObjectType;
      v14[0] = v1;
      v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_objectGraph];
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v4);
      v12 = v1;
      swift_retain(v11);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v10, v14, v8, v11);
      swift_release();
      swift_release();
      v13 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v13);
      sub_10001282C((uint64_t)v14);
    }
    else
    {
      swift_release();
    }
  }
  sub_10006B2F0(&OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_objectGraph, (uint64_t)&unk_1007396A8, (uint64_t)sub_10006BD38);
}

double sub_10006A898()
{
  return sub_10006A8D0((uint64_t)&OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_requestInfo, (uint64_t (*)(__n128))&MarketingItemRequestInfo.carrierLinkFailureAction.getter, &OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph);
}

double sub_10006A8B4()
{
  return sub_10006A8D0((uint64_t)&OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_requestInfo, (uint64_t (*)(__n128))&MarketingItemRequestInfo.onDismissalAction.getter, &OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph);
}

double sub_10006A8D0(uint64_t a1, uint64_t (*a2)(__n128), _QWORD *a3)
{
  char *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  _QWORD v18[4];

  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2(v9);
  if (v12)
  {
    v14 = v12;
    if (UIResponder.nearestActionRunner.getter())
    {
      v18[3] = ObjectType;
      v18[0] = v3;
      v15 = *(_QWORD *)&v3[*a3];
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for ActionRunner.Origin.userInitiated(_:), v7);
      v16 = v3;
      swift_retain(v15);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v14, v18, v11, v15);
      swift_release();
      swift_release();
      v17 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v17);
      sub_10001282C((uint64_t)v18);
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10006AA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v7;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806950 != -1)
    swift_once(&qword_100806950, sub_10050328C);
  v4 = sub_10000EFC4(v0, (uint64_t)qword_10086AAF0);
  v5.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  qword_100864A38 = type metadata accessor for OSLogger(0, v5);
  unk_100864A40 = &protocol witness table for OSLogger;
  sub_1000119C0(qword_100864A20);
  return OSLogger.init(subsystem:category:)(v3, 0xD000000000000015, 0x8000000100643300);
}

void sub_10006AB18(uint64_t a1, uint64_t (*a2)(__n128))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10006A8D0((uint64_t)&OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_requestInfo, a2, &OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_objectGraph);

  }
}

void sub_10006AB80(uint64_t a1, uint64_t (*a2)(__n128))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10006A740(a2);

  }
}

id sub_10006ABD8(uint64_t a1, uint64_t a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v11;
  uint64_t Strong;
  __n128 v13;
  void *v14;
  id v15;
  _BYTE v17[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (!Strong)
    return 0;
  v14 = (void *)Strong;
  v13.n128_f64[0] = a3;
  v15 = sub_100021E60(a1, v13, a4, a5, a6);

  return v15;
}

void sub_10006ADAC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v9;

  swift_unknownObjectRetain(a3);
  v9 = a4;
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.DynamicViewController", 42, a5, a6, 0);
  __break(1u);
}

void sub_10006AE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;

  v10 = type metadata accessor for URL(0, a2);
  __chkstk_darwin(v10);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a4);
  swift_unknownObjectRetain(a3);
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.DynamicViewController", 42, a5, a6, 0);
  __break(1u);
}

uint64_t type metadata accessor for DynamicViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension21DynamicViewController);
}

uint64_t sub_10006AF64()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_artworkLoader));
}

uint64_t sub_10006AF74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_referrer);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_referrer + 8));
  return v1;
}

uint64_t sub_10006AFAC()
{
  return DynamicUIRequestInfo.purchaseSuccessAction.getter();
}

uint64_t sub_10006AFD4()
{
  return DynamicUIRequestInfo.purchaseFailureAction.getter();
}

uint64_t sub_10006AFFC()
{
  return DynamicUIRequestInfo.carrierLinkSuccessAction.getter();
}

uint64_t sub_10006B024()
{
  return DynamicUIRequestInfo.carrierLinkFailureAction.getter();
}

uint64_t sub_10006B04C()
{
  return DynamicUIRequestInfo.onDismissalAction.getter();
}

uint64_t sub_10006B074()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridPresenter));
}

id sub_10006B084()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;
  _BYTE v5[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView, v5, 0, 0);
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_10006B0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView;
  swift_beginAccess(v5, v7, 1, 0);
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;

}

void *sub_10006B130(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_10006B178(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10006B2B4(&qword_10080AC58, (uint64_t)&unk_1006433F0);
  return DynamicViewControllerDisplaying.loadGrid(primaryIcon:remainingIcons:)(a1, a2, ObjectType, v5);
}

uint64_t sub_10006B1D0(uint64_t a1, uint64_t a2)
{
  return sub_10006B1E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&DynamicViewControllerDisplaying.showLoading());
}

uint64_t sub_10006B1DC(uint64_t a1, uint64_t a2)
{
  return sub_10006B1E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&DynamicViewControllerDisplaying.hideLoading());
}

uint64_t sub_10006B1E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_10006B2B4(&qword_10080AC58, (uint64_t)&unk_1006433F0);
  return a3(ObjectType, v4);
}

uint64_t sub_10006B23C(uint64_t a1, uint64_t a2)
{
  return sub_10006B1E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&DynamicViewControllerDisplaying.reloadData());
}

uint64_t sub_10006B248()
{
  return sub_10006B2B4(&qword_10080AC40, (uint64_t)&unk_100643348);
}

uint64_t sub_10006B26C()
{
  return sub_10006B2B4(&qword_10080AC48, (uint64_t)&unk_100643370);
}

uint64_t sub_10006B290()
{
  return sub_10006B2B4(&qword_10080AC50, (uint64_t)&unk_1006433A8);
}

uint64_t sub_10006B2B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DynamicViewController();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10006B2F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v7 = type metadata accessor for AppStoreEngagementEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppStoreEngagementManager(0, v9);
  v13 = *(_QWORD *)(v3 + *a1);
  v14 = *(_QWORD *)(v13 + qword_10086B408);
  if (!v14)
    goto LABEL_4;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for AppStoreEngagementEvent.didSubscribeToArcade(_:), v7);
  v15 = swift_allocObject(a2, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v3);
  swift_retain(v15);
  v16 = swift_retain(v14);
  AppStoreEngagementManager.recordEngagement(event:resultHandler:)(v11, a3, v15, v16);
  v17 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v17);
  swift_release();
  v12 = type metadata accessor for InAppMessagesManager();
  if (*(_QWORD *)(v13 + qword_10086B400))
  {
    swift_retain(*(_QWORD *)(v13 + qword_10086B400));
    sub_10022BA40();
    swift_release();
    swift_release();
  }
  else
  {
LABEL_4:
    v18 = v12;
    swift_retain(v13);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v18, v18);
    __break(1u);
  }
}

void sub_10006B468(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v10 = type metadata accessor for ActionRunner.Origin(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v14 = a2 + 16;
    swift_beginAccess(a2 + 16, v29, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v16 = (void *)Strong;
      v17 = *(_QWORD *)(Strong + *a3);
      swift_retain(v17);
      swift_retain(a1);

      swift_beginAccess(v14, v28, 0, 0);
      v18 = swift_unknownObjectWeakLoadStrong(v14);
      if (v18 && (v19 = (void *)v18, v20 = UIResponder.nearestActionRunner.getter(), v19, v20))
      {
        swift_beginAccess(v14, v25, 0, 0);
        v21 = swift_unknownObjectWeakLoadStrong(v14);
        if (v21)
        {
          v22 = v21;
          *((_QWORD *)&v27 + 1) = a5(a4);
          *(_QWORD *)&v26 = v22;
        }
        else
        {
          v26 = 0u;
          v27 = 0u;
        }
        (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for ActionRunner.Origin.userInitiated(_:), v10);
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, &v26, v13, v17);
        swift_release();
        swift_release();
        v23 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v23);
        sub_10001282C((uint64_t)&v26);
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
  }
}

uint64_t sub_10006B628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  NSURL *v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  NSDictionary v31;
  id v32;
  uint64_t v33;
  double v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  objc_super v58;
  id v59;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_dynamicDelegate] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridPresenter] = 0;
  v12 = &v5[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_gridView];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_objectGraph] = a5;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_requestInfo] = a2;
  v13 = &v5[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_referrer];
  *(_QWORD *)v13 = a3;
  *((_QWORD *)v13 + 1) = a4;
  v14 = type metadata accessor for ArtworkLoader(0);
  v15 = v5;
  swift_retain(a5);
  swift_retain(a2);
  BaseObjectGraph.inject<A>(_:)(&v59, v14, v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_artworkLoader] = v59;

  v16 = type metadata accessor for ASKBagContract(0);
  v17 = BaseObjectGraph.inject<A>(_:)(&v59, v16, v16);
  v18 = ASKBagContract.amsBag.getter(v17);
  swift_release();
  URL._bridgeToObjectiveC()(v19);
  v21 = v20;
  v58.receiver = v15;
  v58.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v58, "initWithBag:URL:", v18, v20);
  swift_unknownObjectRelease();

  v23 = sub_100022D1C();
  v24 = v22;
  BaseObjectGraph.inject<A>(_:)(&v59, v23, v23);
  v25 = v59;
  v26 = objc_msgSend(v59, "ams_activeiTunesAccount");

  objc_msgSend(v24, "setAccount:", v26);
  v27 = v24;
  v28 = DynamicUIRequestInfo.metricsOverlay.getter();
  if (v28)
  {
    v30 = v28;
    v31.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  else
  {
    v31.super.isa = 0;
  }
  objc_msgSend(v27, "setMetricsOverlay:", v31.super.isa, v29);

  objc_msgSend(v27, "setAnonymousMetrics:", 1);
  v32 = v27;
  v33 = DynamicUIRequestInfo.clientOptions.getter();
  isa = (Class)v33;
  if (v33)
  {
    sub_10006A1FC(v33);
    v37 = v36;
    swift_bridgeObjectRelease(isa);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v34 = swift_bridgeObjectRelease(v37).n128_u64[0];
  }
  objc_msgSend(v32, "setClientOptions:", isa, v34);

  v38 = (char *)v32;
  static ASKBootstrap.tokenServiceClient.getter();
  v40 = v39;
  v41 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setMediaClientIdentifier:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

  v42 = type metadata accessor for ArcadeSubscriptionManager(0);
  v43 = *(void **)(a5 + qword_10086B3D0);
  if (v43)
  {
    v44 = swift_allocObject(&unk_100739680, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16, v38);
    v45 = swift_allocObject(&unk_100739680, 24, 7);
    swift_unknownObjectWeakInit(v45 + 16, v38);
    v46 = swift_allocObject(&unk_100739680, 24, 7);
    swift_unknownObjectWeakInit(v46 + 16, v38);
    v47 = swift_allocObject(&unk_100739680, 24, 7);
    swift_unknownObjectWeakInit(v47 + 16, v38);
    v48 = swift_allocObject(&unk_100739680, 24, 7);
    swift_unknownObjectWeakInit(v48 + 16, v38);
    v49 = swift_allocObject(&unk_100739680, 24, 7);
    v50 = swift_unknownObjectWeakInit(v49 + 16, v38);
    objc_allocWithZone((Class)type metadata accessor for DynamicViewControllerDelegate(0, v50));
    v51 = DynamicViewControllerDelegate.init(subscriptionManager:purchaseSuccessHandler:purchaseFailureHandler:carrierLinkSuccessHandler:carrierLinkFailureHandler:didDismissHandler:contentViewConstructor:)(v43, sub_10006BC90, v44, sub_10006BCB0, v45, sub_10006BCD0, v46, sub_10006BCF0, v47, sub_10006BD10, v48, sub_10006BD30, v49);
    v52 = OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_dynamicDelegate;
    *(_QWORD *)&v38[OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_dynamicDelegate] = v51;
    objc_msgSend(v38, "setDelegate:", *(_QWORD *)&v38[v52], swift_unknownObjectRelease().n128_f64[0]);
    type metadata accessor for AutoPlayVideoSettingsManager(0);
    v53 = v38;
    v54 = (void *)static AutoPlayVideoSettingsManager.shared.getter();
    objc_msgSend(v53, "setMediaContentDelegate:", v54);

    v56 = type metadata accessor for URL(0, v55);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(a1, v56);
    return (uint64_t)v53;
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v42, v42);
    __break(1u);
  }
  return result;
}

uint64_t sub_10006BB04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  _QWORD v14[4];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  if (qword_100804698 != -1)
    swift_once(&qword_100804698, sub_10006AA28);
  sub_10000EF80((uint64_t)qword_100864A20, (uint64_t)v15);
  v2 = v16;
  v3 = v17;
  sub_100010F08(v15, v16);
  v4 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v5 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 2 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100640600;
  LogMessage.init(stringLiteral:)(0xD000000000000025, 0x8000000100685BE0);
  swift_getErrorValue(a1, v13, &v11);
  v7 = v11;
  v8 = v12;
  v14[3] = v12;
  v9 = sub_1000119C0(v14);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, v7, v8);
  static LogMessage.safe(_:)(v14);
  sub_10001282C((uint64_t)v14);
  Logger.error(_:)(v6, v2, v3);
  swift_bridgeObjectRelease(v6);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
}

uint64_t sub_10006BC6C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006BC90()
{
  uint64_t v0;

  sub_10006AB80(v0, (uint64_t (*)(__n128))&DynamicUIRequestInfo.purchaseSuccessAction.getter);
}

void sub_10006BCB0()
{
  uint64_t v0;

  sub_10006AB18(v0, (uint64_t (*)(__n128))&DynamicUIRequestInfo.purchaseFailureAction.getter);
}

void sub_10006BCD0()
{
  uint64_t v0;

  sub_10006AB80(v0, (uint64_t (*)(__n128))&DynamicUIRequestInfo.carrierLinkSuccessAction.getter);
}

void sub_10006BCF0()
{
  uint64_t v0;

  sub_10006AB18(v0, (uint64_t (*)(__n128))&DynamicUIRequestInfo.carrierLinkFailureAction.getter);
}

void sub_10006BD10()
{
  uint64_t v0;

  sub_10006AB18(v0, (uint64_t (*)(__n128))&DynamicUIRequestInfo.onDismissalAction.getter);
}

id sub_10006BD30(uint64_t a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;

  return sub_10006ABD8(a1, v5, a2, a3, a4, a5);
}

void sub_10006BD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10006B468(a1, v4, &OBJC_IVAR____TtC20ProductPageExtension21DynamicViewController_objectGraph, a4, (uint64_t (*)(uint64_t))type metadata accessor for DynamicViewController);
}

void sub_10006BD60(uint64_t a1)
{
  uint64_t v1;

  sub_10006B468(a1, v1, &OBJC_IVAR____TtC20ProductPageExtension27MarketingItemViewController_objectGraph, 0, (uint64_t (*)(uint64_t))type metadata accessor for MarketingItemViewController);
}

uint64_t sub_10006BD94(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  CAShapeLayer v9;
  CGColor *v10;
  id v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  _BYTE v15[24];

  v2 = v1;
  v4 = type metadata accessor for HorizontalRule.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = &v2[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style], v15, 33, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v8, a1, v4);
  swift_endAccess(v15);
  (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  v9.super.super.isa = *(Class *)&v2[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineLayer];
  v10 = (CGColor *)objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineColor], "CGColor");
  v11 = objc_msgSend(v2, "traitCollection");
  HorizontalRule.Style.applyStyle(to:lineColor:traitCollection:)(v9, v10, (UITraitCollection)v11);

  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  v12((uint64_t)v7, v4);
  objc_msgSend(v2, "setNeedsDisplay");
  return v12(a1, v4);
}

char *sub_10006BEEC(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineLayer;
  v13 = objc_allocWithZone((Class)CAShapeLayer);
  v14 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v13, "init");
  v15 = &v14[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style];
  v16 = enum case for HorizontalRule.Style.solid(_:);
  v17 = type metadata accessor for HorizontalRule.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineColor;
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  *(_QWORD *)&v14[v18] = static UIColor.defaultLine.getter();

  v25.receiver = v14;
  v25.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v21 = objc_msgSend(v19, "contentView");
  v22 = objc_msgSend(v21, "layer");

  v23 = *(id *)&v19[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineLayer];
  objc_msgSend(v22, "addSublayer:", v23);

  return v19;
}

void sub_10006C230()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  char *v18;
  __n128 v19;
  id v20;
  void *v21;
  char v23[24];
  objc_super v24;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for HorizontalRule.Style(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v24.receiver = v1;
  v24.super_class = ObjectType;
  objc_msgSendSuper2(&v24, "layoutSubviews", v5);
  v8 = objc_msgSend(v1, "contentView");
  v9 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v10 = LayoutMarginsAware<>.layoutFrame.getter(v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineLayer];
  objc_msgSend(v17, "setFrame:", v10, v12, v14, v16);
  v18 = &v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style];
  v19 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style], v23, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v7, v18, v3, v19);
  v20 = objc_msgSend(v1, "traitCollection");
  v21 = (void *)HorizontalRule.Style.path(in:traitCollection:)(v10, v12, v14, v16);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  objc_msgSend(v17, "setPath:", v21);

}

uint64_t sub_10006C410(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  CAShapeLayer v10;
  CGColor *v11;
  id v12;
  char v15[24];
  objc_super v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HorizontalRule.Style(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16.receiver = v3;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, "_dynamicUserInterfaceTraitDidChange");
  v9 = &v3[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style], v15, 0, 0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v9, v5);
  v10.super.super.isa = *(Class *)&v3[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineLayer];
  v11 = (CGColor *)objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineColor], "CGColor");
  v12 = objc_msgSend(v3, "traitCollection");
  HorizontalRule.Style.applyStyle(to:lineColor:traitCollection:)(v10, v11, (UITraitCollection)v12);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10006C5E8()
{
  return type metadata accessor for HorizontalRuleCollectionViewCell(0);
}

uint64_t type metadata accessor for HorizontalRuleCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080ACA0;
  if (!qword_10080ACA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HorizontalRuleCollectionViewCell);
  return result;
}

void sub_10006C62C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4 = type metadata accessor for HorizontalRule.Style(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

char *sub_10006C6C0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_recommendationsDataUpdateDelegate] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_requestSentDataUpdateDelegate] = 0;
  v14 = objc_allocWithZone((Class)type metadata accessor for SmallPlayerCardView(0));
  v15 = v6;
  v16 = objc_msgSend(v14, "initWithFrame:", a1, a2, a3, a4);
  *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_smallPlayerCard] = v16;
  v17 = (void *)SmallPlayerCardView.closeButton.getter();
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
  objc_msgSend(v17, "setTintColor:", v18);

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v20 = objc_msgSend(v19, "contentView");
  v21 = *(id *)&v19[OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_smallPlayerCard];
  objc_msgSend(v20, "addSubview:", v21);

  return v19;
}

void sub_10006CA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  objc_class *updated;
  char *v14;
  void (**v15)(uint64_t);
  void (**v16)();
  double v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  void (**v27)(uint64_t);
  void (**v28)();
  id v29;
  id v30;
  id v31;
  objc_super v32;
  objc_super v33;

  v3 = v2;
  v6 = type metadata accessor for GKFeatureFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v10 = swift_allocObject(&unk_1007397E8, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v2);
    v11 = (void (*)(uint64_t))swift_allocObject(&unk_100739810, 40, 7);
    *((_QWORD *)v11 + 2) = a1;
    *((_QWORD *)v11 + 3) = a2;
    *((_QWORD *)v11 + 4) = v10;
    v12 = swift_allocObject(&unk_1007397E8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v2);
    updated = (objc_class *)type metadata accessor for SingleUseGKDaemonProxyDataUpdateDelegate();
    v14 = (char *)objc_allocWithZone(updated);
    *(_DWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate_updateType] = 4;
    v15 = (void (**)(uint64_t))&v14[OBJC_IVAR____TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate_updateBlock];
    *v15 = sub_10006D390;
    v15[1] = v11;
    v16 = (void (**)())&v14[OBJC_IVAR____TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate_cleanupBlock];
    *v16 = sub_10006D39C;
    v16[1] = (void (*)())v12;
    v33.receiver = v14;
    v33.super_class = updated;
    *(_QWORD *)&v17 = swift_bridgeObjectRetain(a2).n128_u64[0];
    v18 = objc_msgSendSuper2(&v33, "init", v17);
    v19 = (void *)objc_opt_self(GKDaemonProxy);
    v20 = objc_msgSend(v19, "daemonProxy");
    objc_msgSend(v20, "addDataUpdateDelegate:", v18);

    v21 = *(void **)(v2
                   + OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_recommendationsDataUpdateDelegate);
    *(_QWORD *)(v2
              + OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_recommendationsDataUpdateDelegate) = v18;
    v22 = v18;

    if ((ASKBagContract.gameCenterActivitySharingReprompt.getter() & 1) != 0)
    {
      v23 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for GKFeatureFlags.CrystalOnboardingEnhancements(_:), v6);
      v24 = GKFeatureFlags.isEnabled.getter(v23);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v24 & 1) != 0)
      {
        v25 = swift_allocObject(&unk_1007397E8, 24, 7);
        swift_unknownObjectWeakInit(v25 + 16, v3);
        v26 = (char *)objc_allocWithZone(updated);
        *(_DWORD *)&v26[OBJC_IVAR____TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate_updateType] = 21;
        v27 = (void (**)(uint64_t))&v26[OBJC_IVAR____TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate_updateBlock];
        *v27 = sub_10006CE88;
        v27[1] = 0;
        v28 = (void (**)())&v26[OBJC_IVAR____TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate_cleanupBlock];
        *v28 = sub_10006D3BC;
        v28[1] = (void (*)())v25;
        v32.receiver = v26;
        v32.super_class = updated;
        v29 = objc_msgSendSuper2(&v32, "init");
        v30 = objc_msgSend(v19, "daemonProxy");
        v31 = v29;
        objc_msgSend(v30, "addDataUpdateDelegate:", v31);

        v22 = *(id *)(v3
                    + OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_requestSentDataUpdateDelegate);
        *(_QWORD *)(v3
                  + OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_requestSentDataUpdateDelegate) = v31;
      }
    }

  }
}

void sub_10006CCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  id v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(GKBlacklistedContactIdKey);
  v21 = v8;
  AnyHashable.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_10057E754((uint64_t)v22), (v10 & 1) != 0))
  {
    sub_100010D84(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_100018968((uint64_t)v22);
  if (!*((_QWORD *)&v24 + 1))
  {
    sub_100010F2C((uint64_t)&v23, &qword_100808F20);
    return;
  }
  if ((swift_dynamicCast(&v20, &v23, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return;
  v11 = v21;
  if (v20 == a2 && v21 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, a2, a3, 0);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) == 0)
      return;
  }
  v13 = a4 + 16;
  swift_beginAccess(v13, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = objc_retain(*(id *)(Strong
                            + OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_smallPlayerCard));

    v17 = (void (*)(void))dispatch thunk of SmallPlayerCardView.closeButtonActionBlock.getter();
    v19 = v18;

    if (v17)
    {
      v17();
      sub_100018908((uint64_t)v17, v19);
    }
  }
}

void sub_10006CE88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[40];
  __int128 v10;
  __int128 v11;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(GKFriendRequestRecipientNameKey);
  v8 = v2;
  AnyHashable.init<A>(_:)(&v7, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v3 = sub_10057E754((uint64_t)v9), (v4 & 1) != 0))
  {
    sub_100010D84(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_100018968((uint64_t)v9);
  if (*((_QWORD *)&v11 + 1))
  {
    if ((swift_dynamicCast(&v7, &v10, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v5 = v7;
      v6 = v8;
      sub_10006D3DC();
      static GKLocalPlayer.presentActivitySharingRepromptInOverlay(recipientName:)(v5, v6);
      swift_bridgeObjectRelease(v6);
    }
  }
  else
  {
    sub_100010F2C((uint64_t)&v10, &qword_100808F20);
  }
}

void sub_10006CF84(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char *Strong;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = *a2;
    v6 = *(void **)&Strong[*a2];
    *(_QWORD *)&Strong[v5] = 0;

  }
}

uint64_t sub_10006D040()
{
  return type metadata accessor for SmallContactCardCollectionViewCell(0);
}

uint64_t type metadata accessor for SmallContactCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080ACF0;
  if (!qword_10080ACF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallContactCardCollectionViewCell);
  return result;
}

void sub_10006D084(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\b";
    v4[3] = "\b";
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

id sub_10006D1B8()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(GKDaemonProxy), "daemonProxy");
  objc_msgSend(v1, "removeDataUpdateDelegate:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SingleUseGKDaemonProxyDataUpdateDelegate();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for SingleUseGKDaemonProxyDataUpdateDelegate()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_450B634D436B86263B9E02C5925CFEE140SingleUseGKDaemonProxyDataUpdateDelegate);
}

uint64_t sub_10006D340()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006D364()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10006D390(uint64_t a1)
{
  uint64_t *v1;

  sub_10006CCF8(a1, v1[2], v1[3], v1[4]);
}

void sub_10006D39C()
{
  uint64_t v0;

  sub_10006CF84(v0, &OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_recommendationsDataUpdateDelegate);
}

void sub_10006D3BC()
{
  uint64_t v0;

  sub_10006CF84(v0, &OBJC_IVAR____TtC20ProductPageExtension34SmallContactCardCollectionViewCell_requestSentDataUpdateDelegate);
}

unint64_t sub_10006D3DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080AD50;
  if (!qword_10080AD50)
  {
    v1 = objc_opt_self(GKLocalPlayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080AD50);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for GameCenterLeaderboardsPage(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for GameCenterLeaderboardsPage(id *a1)
{

}

uint64_t assignWithCopy for GameCenterLeaderboardsPage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for GameCenterLeaderboardsPage(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for GameCenterLeaderboardsPage()
{
  return &type metadata for GameCenterLeaderboardsPage;
}

ValueMetadata *type metadata accessor for GameCenterLeaderboardsActionImplementation()
{
  return &type metadata for GameCenterLeaderboardsActionImplementation;
}

unint64_t sub_10006D524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080AD58;
  if (!qword_10080AD58)
  {
    v1 = type metadata accessor for GameCenterLeaderboardsAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080AD58);
  }
  return result;
}

uint64_t sub_10006D56C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _QWORD v24[5];

  if (a1)
  {
    type metadata accessor for GameCenter(0);
    v9 = a1;
    v10 = GameCenterLeaderboardsAction.bundleID.getter();
    v12 = v11;
    static GameCenter.fetchGameRecord(for:with:)(v9, v10, v11);
    swift_bridgeObjectRelease(v12);
    v13 = (_QWORD *)swift_allocObject(&unk_100739900, 40, 7);
    v13[2] = a3;
    v13[3] = a2;
    v13[4] = a4;
    v14 = sub_10006E46C();
    swift_retain_n(a2, 2);
    swift_retain(a3);
    v15 = swift_retain(a4);
    v24[3] = v14;
    v24[4] = &protocol witness table for OS_dispatch_queue;
    v24[0] = static OS_dispatch_queue.main.getter(v15);
    Promise.then(perform:orCatchError:on:)(sub_10006E534, v13, sub_10006E540, a2, v24);

    swift_release();
    swift_release();
    swift_release();
    return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v24);
  }
  else
  {
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v17 = type metadata accessor for OSLogger(0, a5);
    sub_10000EFC4(v17, (uint64_t)qword_10086AB38);
    v18 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v19 = type metadata accessor for LogMessage(0);
    v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
    *(_OWORD *)(v20 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000057, 0x8000000100688E40);
    Logger.error(_:)(v20, v17, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v20);
    v21 = sub_10006E4B8();
    v22 = swift_allocError(&type metadata for GameCenterLeaderboardsActionImplementation.ImplementationError, v21, 0, 0);
    *v23 = 0;
    Promise.reject(_:)(v22);
    return swift_errorRelease(v22);
  }
}

void sub_10006D7BC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD v21[6];

  v6 = *a1;
  v7 = objc_msgSend(objc_allocWithZone((Class)GKGameInternal), "init");
  GameCenterLeaderboardsAction.bundleID.getter();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setBundleIdentifier:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v11 = objc_msgSend(objc_allocWithZone((Class)GKGame), "initWithInternalRepresentation:", v7);
  v12 = (void *)objc_opt_self(GKLeaderboard);
  v13 = sub_10000DAF8(&qword_10080AD68);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100640720;
  *(_QWORD *)(v14 + 32) = GameCenterLeaderboardsAction.leaderboardID.getter();
  *(_QWORD *)(v14 + 40) = v15;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v17 = (_QWORD *)swift_allocObject(&unk_100739928, 40, 7);
  v17[2] = a3;
  v17[3] = v6;
  v17[4] = a4;
  v21[4] = sub_10006E57C;
  v21[5] = v17;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_100524DCC;
  v21[3] = &unk_100739940;
  v18 = _Block_copy(v21);
  v19 = v11;
  swift_retain(a3);
  v20 = v6;
  swift_retain(a4);
  objc_msgSend(v12, "loadLeaderboardsWithIDs:setIdentifier:game:completionHandler:", isa, 0, v19, v18, swift_release().n128_f64[0]);
  _Block_release(v18);

}

void sub_10006D99C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  char v113[8];
  _QWORD v114[4];
  __int128 v115;
  __int128 v116;
  uint64_t v117;

  v102 = a5;
  v106 = a4;
  v107 = a1;
  v109 = a3;
  v110 = a2;
  v5 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v5);
  v100 = (uint64_t *)((char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v101 = *(_QWORD *)(v95 - 8);
  v7 = __chkstk_darwin(v95);
  v94 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for FlowOrigin(0, v7);
  v99 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for FlowAnimationBehavior(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v103 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for FlowPresentationContext(0);
  v11 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ActionMetrics(0, v14);
  __chkstk_darwin(v15);
  v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v18);
  v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v21);
  v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FlowPage(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for OSLogger(0, v26);
  v29 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v110)
  {
    v32 = v110;
    swift_errorRetain(v110);
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v33 = v108;
    v34 = sub_10000EFC4(v108, (uint64_t)qword_10086AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, v34, v33);
    v35 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v36 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ 2 * *(_QWORD *)(v36 + 72), *(unsigned __int8 *)(v36 + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_100640600;
    LogMessage.init(stringLiteral:)(0xD000000000000030, 0x8000000100688F60);
    swift_getErrorValue(v32, v113, &v111);
    v38 = v111;
    v39 = v112;
    *((_QWORD *)&v116 + 1) = v112;
    v40 = sub_1000119C0(&v115);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v40, v38, v39);
    static LogMessage.sensitive(_:)(&v115);
    sub_100010F2C((uint64_t)&v115, &qword_100808F20);
    Logger.error(_:)(v37, v33, &protocol witness table for OSLogger);
    v41 = swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v33, v41);
    Promise.reject(_:)(v32);
    swift_errorRelease(v32);
    return;
  }
  v88 = v25;
  v89 = v24;
  v90 = v28;
  v91 = v11;
  v93 = v23;
  v110 = v20;
  v92 = v13;
  v43 = v105;
  v42 = v106;
  v45 = v103;
  v44 = v104;
  if (!v107)
    goto LABEL_20;
  v46 = v17;
  v47 = v107 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v107 >> 62)
  {
    if (v107 >= 0)
      v79 = v107 & 0xFFFFFFFFFFFFFF8;
    else
      v79 = v107;
    v49 = v107;
    swift_bridgeObjectRetain(v107);
    if (_CocoaArrayWrapper.endIndex.getter(v79))
      goto LABEL_8;
    goto LABEL_19;
  }
  v48 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v49 = v107;
  swift_bridgeObjectRetain(v107);
  if (!v48)
  {
LABEL_19:
    swift_bridgeObjectRelease(v49);
LABEL_20:
    if (qword_100806968 != -1)
      swift_once(&qword_100806968, sub_10050332C);
    v80 = v108;
    sub_10000EFC4(v108, (uint64_t)qword_10086AB38);
    v81 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v82 = type metadata accessor for LogMessage(0);
    v83 = swift_allocObject(v81, ((*(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v82 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v82 - 8) + 80) | 7);
    *(_OWORD *)(v83 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000056, 0x8000000100688F00);
    Logger.error(_:)(v83, v80, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v83);
    v84 = sub_10006E4B8();
    v85 = swift_allocError(&type metadata for GameCenterLeaderboardsActionImplementation.ImplementationError, v84, 0, 0);
    *v86 = 1;
    Promise.reject(_:)(v85);
    swift_errorRelease(v85);
    return;
  }
LABEL_8:
  if ((v49 & 0xC000000000000001) != 0)
  {
    v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v49);
    v51 = v42;
    v53 = v43;
    v50 = v110;
  }
  else
  {
    v50 = v110;
    if (!*(_QWORD *)(v47 + 16))
    {
      __break(1u);
      return;
    }
    v51 = v42;
    v52 = *(id *)(v49 + 32);
    v53 = v43;
  }
  v54 = v93;
  swift_bridgeObjectRelease(v49);
  v117 = 0;
  v115 = 0u;
  v116 = 0u;
  v55 = v90;
  (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v90, enum case for FlowPage.gameCenterLeaderboards(_:), v89);
  v57 = type metadata accessor for URL(0, v56);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v54, 1, 1, v57);
  v58 = type metadata accessor for ReferrerData(0);
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v50, 1, 1, v58);
  v114[3] = &type metadata for GameCenterLeaderboardsPage;
  v114[0] = v52;
  v114[1] = v51;
  v59 = v52;
  v60 = v51;
  v61 = v59;
  v110 = v60;
  static ActionMetrics.notInstrumented.getter(v110);
  v62 = v92;
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v92, enum case for FlowPresentationContext.infer(_:), v96);
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v45, enum case for FlowAnimationBehavior.infer(_:), v98);
  v63 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v99 + 104))(v44, enum case for FlowOrigin.inapp(_:), v53);
  v64 = static FlowActionPresentation.stackPush.getter(v63);
  v65 = v46;
  v67 = v66;
  v68 = type metadata accessor for FlowAction(0);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  v69 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v115, 0, 0, 0, v55, v54, 0, 0, v50, v114, v65, v62, v45, v44, 0, v64, v67);
  v70 = v100;
  v71 = v95;
  v72 = v102;
  BaseObjectGraph.optional<A>(_:)(v100, v95, v95);
  v73 = v101;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v101 + 48))(v70, 1, v71) == 1)
  {
    sub_100010F2C((uint64_t)v70, (uint64_t *)&unk_100809290);
    sub_10000DAF8(&qword_100808570);
    v74 = sub_10005ABBC();
    v75 = swift_allocError(&type metadata for GeneralActionImplementationError, v74, 0, 0);
    *v76 = 1;
    Promise.__allocating_init(error:)(v75);
  }
  else
  {
    v78 = (uint64_t)v94;
    (*(void (**)(char *, _QWORD *, uint64_t))(v73 + 32))(v94, v70, v71);
    sub_10032D5D4(v69, v72, v78);
    v77.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v73 + 8))(v78, v71);
  }
  Promise.pipe(to:)(v109, v77);

  swift_release();
  swift_release();
}

uint64_t sub_10006E280(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_100806968 != -1)
    swift_once(&qword_100806968, sub_10050332C);
  v3 = type metadata accessor for OSLogger(0, a2);
  sub_10000EFC4(v3, (uint64_t)qword_10086AB38);
  v4 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v5 = type metadata accessor for LogMessage(0);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100640720;
  LogMessage.init(stringLiteral:)(0xD000000000000056, 0x8000000100688EA0);
  Logger.error(_:)(v6, v3, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v6);
  return Promise.reject(_:)(a1);
}

uint64_t sub_10006E38C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;
  __n128 v7;
  _QWORD v9[5];

  v3 = *a1;
  sub_10000DAF8(&qword_100808570);
  v4 = Promise.__allocating_init()();
  type metadata accessor for GameCenter(0);
  v9[3] = sub_10006E46C();
  v9[4] = &protocol witness table for OS_dispatch_queue;
  v9[0] = static OS_dispatch_queue.main.getter(v5);
  v6 = (_QWORD *)swift_allocObject(&unk_1007398D8, 40, 7);
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = a2;
  swift_retain(v4);
  swift_retain(v3);
  v7 = swift_retain(a2);
  static GameCenter.withLocalPlayer(on:_:)(v9, sub_10006E4AC, v6, v7);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v9);
  return v4;
}

unint64_t sub_10006E46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008094F0;
  if (!qword_1008094F0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1008094F0);
  }
  return result;
}

uint64_t sub_10006E4AC(void *a1, __n128 a2)
{
  uint64_t *v2;

  return sub_10006D56C(a1, v2[2], v2[3], v2[4], a2);
}

unint64_t sub_10006E4B8()
{
  unint64_t result;

  result = qword_10080AD60;
  if (!qword_10080AD60)
  {
    result = swift_getWitnessTable(&unk_1006436CC, &type metadata for GameCenterLeaderboardsActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080AD60);
  }
  return result;
}

uint64_t sub_10006E500()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10006E534(void **a1)
{
  uint64_t *v1;

  sub_10006D7BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10006E540(uint64_t a1, __n128 a2)
{
  return sub_10006E280(a1, a2);
}

uint64_t sub_10006E548()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10006E57C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_10006D99C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10006E588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006E598(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t storeEnumTagSinglePayload for GameCenterLeaderboardsActionImplementation.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10006E5EC + 4 * byte_100643595[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10006E620 + 4 * asc_100643590[v4]))();
}

uint64_t sub_10006E620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006E628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006E630);
  return result;
}

uint64_t sub_10006E63C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006E644);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10006E648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006E650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GameCenterLeaderboardsActionImplementation.ImplementationError()
{
  return &type metadata for GameCenterLeaderboardsActionImplementation.ImplementationError;
}

unint64_t sub_10006E670()
{
  unint64_t result;

  result = qword_10080AD70;
  if (!qword_10080AD70)
  {
    result = swift_getWitnessTable(&unk_1006436A4, &type metadata for GameCenterLeaderboardsActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_10080AD70);
  }
  return result;
}

uint64_t type metadata accessor for AccountButton(uint64_t a1)
{
  uint64_t result;

  result = qword_10080ADD8;
  if (!qword_10080ADD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AccountButton);
  return result;
}

void sub_10006E6F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[10];

  v2 = qword_100864A78;
  v7[0] = &unk_100643778;
  v7[1] = &unk_100643790;
  v7[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v7[3] = &unk_1006437A8;
  sub_10007176C(319);
  if (v4 <= 0x3F)
  {
    v7[4] = *(_QWORD *)(v3 - 8) + 64;
    v7[5] = &unk_1006437A8;
    v5 = type metadata accessor for Date(319);
    if (v6 <= 0x3F)
    {
      v7[6] = *(_QWORD *)(v5 - 8) + 64;
      v7[7] = &unk_1006437C0;
      v7[8] = &unk_1006437A8;
      v7[9] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initClassMetadata2(a1, 0, 10, v7, a1 + v2);
    }
  }
}

double sub_10006E7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  double result;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100018B6C(0, &qword_10080AE60, ASDSoftwareUpdate_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v4(v6, v7);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_10006E838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for SystemImage.personCropCircle(_:), v0);
  v4 = static SystemImage.load(_:with:)(v3, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_10080AD78 = v4;
  return result;
}

void sub_10006E8D8()
{
  qword_10080AD80 = 0x403F000000000000;
}

uint64_t sub_10006E8E8()
{
  uint64_t result;

  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  result = static UIColor.mediaBorder.getter();
  qword_10080AD88 = result;
  return result;
}

char *sub_10006E928(int a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  objc_class *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  double v35;
  void *v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  void *v50;
  __n128 v51;
  uint64_t v52;
  double (*v53)(_BYTE *, uint64_t);
  __n128 v54;
  id v55;
  char *v56;
  void *v57;
  id v58;
  char *v59;
  void *v60;
  id v61;
  void *v62;
  char *v63;
  _BYTE *v64;
  _BYTE v66[4];
  int v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double *v77;
  _QWORD aBlock[6];
  objc_super v79;

  v67 = a1;
  v76 = type metadata accessor for AutomationSemantics(0);
  v74 = *(_QWORD *)(v76 - 8);
  v6 = __chkstk_darwin(v76);
  v73 = &v66[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DispatchTime(0, v6);
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  __chkstk_darwin(v8);
  v10 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v66[-v12];
  v68 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v68);
  v69 = &v66[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10000DAF8(&qword_10080AE30);
  __chkstk_darwin(v15);
  v17 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3[qword_10080AD90] = 0;
  v18 = &v3[qword_10080AD98];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18);
  *(_QWORD *)&v3[qword_10080ADA8] = 0;
  *(_QWORD *)&v3[qword_10080ADB0] = 0;
  v19 = v3;
  Date.init()(v19);
  v20 = &v19[qword_10080ADC0];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  *(_QWORD *)&v19[qword_10080ADC8] = 0;
  *(_QWORD *)&v19[qword_10080ADD0] = 0;
  v75 = a2;
  sub_1000717C8(a2, (uint64_t)&v19[qword_100864A70]);
  *(_QWORD *)&v19[qword_10080ADA0] = a3;
  swift_retain(a3);

  v21 = (objc_class *)type metadata accessor for AccountButton(0);
  v79.receiver = v19;
  v79.super_class = v21;
  v22 = objc_msgSendSuper2(&v79, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v23 = type metadata accessor for GameCenterFriendRequestCoordinator(0);
  v24 = type metadata accessor for ObjectGraph(0);
  v25 = (char *)v22;
  v72 = a3;
  inject<A, B>(_:from:)(v23, a3, v23, v24);
  v26 = qword_10080ADA8;
  v27 = *(void **)&v25[qword_10080ADA8];
  *(_QWORD *)&v25[qword_10080ADA8] = aBlock[0];

  v28 = *(void **)&v25[v26];
  if (v28)
  {
    v29 = v28;
    GameCenterFriendRequestCoordinator.onFriendRequestCountDidUpdate.getter();

    v30 = sub_10000DAF8(&qword_10080AE40);
    v31 = sub_100010E80(&qword_10080AE48, &qword_10080AE40, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
    dispatch thunk of static EventEmitter.defaultScheduler.getter(aBlock, v30, v31);
    EventEmitter.addObserver<A>(on:target:method:)(aBlock, v25, sub_10006F0C8, 0, v30, v21, v31);
    swift_release();
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(aBlock);
    v32 = sub_10000DAF8(&qword_10080AE50);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 0, 1, v32);
  }
  else
  {
    v33 = sub_10000DAF8(&qword_10080AE50);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
  }
  sub_100010F2C((uint64_t)v17, &qword_10080AE30);
  v34 = v25;
  dispatch thunk of Button.touchOutsideMargin.setter(10.0, 10.0, 10.0, 10.0);

  v35 = 0.0;
  objc_msgSend(v34, "setAlpha:", 0.0);
  objc_msgSend(v34, "addTarget:action:forControlEvents:", v34, "goToAccount", 64);
  v36 = (void *)objc_opt_self(NSNotificationCenter);
  v37 = objc_msgSend(v36, "defaultCenter");
  objc_msgSend(v37, "addObserver:selector:name:object:", v34, "profilePictureStoreDidChange", ASKProfilePictureStoreDidChange, 0);

  sub_100070BCC(0, v38);
  v39 = swift_allocObject(&unk_100739A90, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16);
  v40 = swift_allocObject(&unk_100739AB8, 25, 7);
  *(_QWORD *)(v40 + 16) = v39;
  v41 = (v67 & 1) == 0;
  *(_BYTE *)(v40 + 24) = v67 & 1;
  aBlock[4] = sub_100071834;
  aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100739AD0;
  if (!v41)
    v35 = 1.0;
  v42 = _Block_copy(aBlock);
  v77 = _swiftEmptyArrayStorage;
  v43 = sub_100071858();
  swift_retain(v39);
  v44 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v45 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  v46 = v69;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v77, v44, v45, v68, v43);
  v47 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v48 = DispatchWorkItem.init(flags:block:)(v46, v42);
  swift_release();
  swift_release();
  *(_QWORD *)&v34[qword_10080ADB0] = v48;
  swift_retain(v48);
  swift_release();
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v50 = (void *)static OS_dispatch_queue.main.getter(v49);
  static DispatchTime.now()(v51);
  + infix(_:_:)(v10, v35);
  v52 = v71;
  v53 = *(double (**)(_BYTE *, uint64_t))(v70 + 8);
  v54.n128_f64[0] = v53(v10, v71);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v13, v48, v54);

  v53(v13, v52);
  v55 = objc_msgSend(v36, "defaultCenter");
  type metadata accessor for UpdateStore(0);
  v56 = v34;
  v57 = (void *)static UpdateStore.didChangeNotification.getter();
  objc_msgSend(v55, "addObserver:selector:name:object:", v56, "updateStoreDidChange", v57, 0);

  v58 = objc_msgSend(v36, "defaultCenter", sub_100070340());
  type metadata accessor for AutomaticUpdates(0);
  v59 = v56;
  v60 = (void *)static AutomaticUpdates.enabledDidChangeNotification.getter();
  objc_msgSend(v58, "addObserver:selector:name:object:", v59, "automaticUpdatesEnabledDidChange:", v60, 0);

  v61 = objc_msgSend(v59, "imageView");
  if (v61)
  {
    v62 = v61;
    objc_msgSend(v61, "setContentMode:", 2);

  }
  objc_msgSend(v59, "setContentHorizontalAlignment:", 3);
  objc_msgSend(v59, "setContentVerticalAlignment:", 3);
  v63 = v59;
  v64 = v73;
  static AutomationSemantics.accountButton()();
  UIView.setAutomationSemantics(_:)(v64);
  swift_release();
  swift_release();

  sub_100010F2C(v75, &qword_10080AE38);
  (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v64, v76);
  return v63;
}

uint64_t (*sub_10006F0C8(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100739B58, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100739B80, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1000718D8;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_100028048;
}

uint64_t sub_10006F140(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_10006F160(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  unsigned __int8 *v5;
  uint64_t v6;
  __n128 v7;
  id v8;
  int v9;
  id v10;
  id v11;
  double v12;
  void *v13;
  uint64_t v14;
  void *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  _QWORD aBlock[6];
  char v19[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (unsigned __int8 *)Strong;
    v6 = qword_10080ADB0;
    if (*(_QWORD *)(Strong + qword_10080ADB0))
    {
      v7 = swift_retain(*(_QWORD *)(Strong + qword_10080ADB0));
      if ((dispatch thunk of DispatchWorkItem.isCancelled.getter(v7) & 1) != 0)
        goto LABEL_14;
      v8 = objc_msgSend(v5, "backgroundImageForState:", 0);

      if (!v8)
      {
        v9 = v5[qword_10080AD90];
        v5[qword_10080AD90] = 0;
        if (v9 == 1)
        {
          v10 = objc_msgSend(v5, "layer");
          objc_msgSend(v10, "setBorderColor:", 0);

          v11 = objc_msgSend(v5, "layer");
          objc_msgSend(v11, "setBorderWidth:", 0.0);

          objc_msgSend(v5, "setNeedsDisplay");
        }
        if (qword_1008046A0 != -1)
          swift_once(&qword_1008046A0, sub_10006E838);
        objc_msgSend(v5, "setImage:forState:", qword_10080AD78, 0);
        objc_msgSend(v5, "alpha");
        if (v12 <= COERCE_DOUBLE(1))
        {
          v13 = (void *)objc_opt_self(UIView);
          v14 = swift_allocObject(&unk_100739B08, 24, 7);
          *(_QWORD *)(v14 + 16) = v5;
          aBlock[4] = sub_1000718A0;
          aBlock[5] = v14;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000924A0;
          aBlock[3] = &unk_100739B20;
          v15 = _Block_copy(aBlock);
          v16 = v5;
          swift_release();
          objc_msgSend(v13, "animateWithDuration:delay:options:animations:completion:", 4, v15, 0, 0.33, 0.0);
          _Block_release(v15);
        }
      }
      *(_QWORD *)&v5[v6] = 0;
      swift_release();
      if ((a2 & 1) == 0)
      {
LABEL_14:

        swift_release();
        return;
      }
      v17 = swift_unknownObjectWeakLoadStrong(&v5[qword_10080AD98]);
      swift_release();
      if (v17)
      {
        *(_BYTE *)(v17 + qword_10080BAD0) = 0;

        swift_unknownObjectRelease();
        return;
      }
    }

  }
}

void sub_10006F400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100010D1C(v0 + qword_10080AD98);
  swift_release();

  sub_100010F2C(v0 + qword_100864A70, &qword_10080AE38);
  swift_release();
  v1 = v0 + qword_10080ADB8;
  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_10006F4A4()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AccountButton(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_10006F518(void *a1)
{
  void *v2;
  id v3;
  id v4;
  objc_super v6;

  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v3 = a1;
  v4 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v4, "removeObserver:", v3);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AccountButton(0);
  return objc_msgSendSuper2(&v6, "dealloc");
}

void sub_10006F5A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_100010D1C(a1 + qword_10080AD98);
  swift_release();

  sub_100010F2C(a1 + qword_100864A70, &qword_10080AE38);
  swift_release();
  v2 = a1 + qword_10080ADB8;
  v3 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

}

uint64_t sub_10006F648()
{
  return 1;
}

void sub_10006F650(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  void *v6;
  id v8;
  id v9;
  char *v10;

  v3 = v2;
  v5 = qword_10080ADC8;
  v6 = *(void **)&v2[qword_10080ADC8];
  if (a2)
  {
    if (v6)
    {
      v8 = v6;
      sub_1002143F4(a1, a2);
    }
    else
    {
      v9 = objc_allocWithZone((Class)type metadata accessor for CountBadgeView());
      v10 = sub_100213F08(0, a1, a2);
      objc_msgSend(v3, "addSubview:", v10);
      v8 = *(id *)&v3[v5];
      *(_QWORD *)&v3[v5] = v10;
    }

    objc_msgSend(v3, "setNeedsLayout");
  }
  else
  {
    if (v6)
    {
      objc_msgSend(v6, "removeFromSuperview");
      v6 = *(void **)&v2[v5];
    }
    *(_QWORD *)&v2[v5] = 0;

  }
}

void sub_10006F730()
{
  char *v0;
  double Width;
  double Height;
  double v3;
  id v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for AccountButton(0);
  objc_msgSendSuper2(&v13, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v14);
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v15);
  if (Height >= Width)
    Height = Width;
  v3 = floor(Height * 0.5);
  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "cornerRadius");
  v6 = v5;

  if (vabdd_f64(v6, v3) > COERCE_DOUBLE(1))
  {
    v7 = objc_msgSend(v0, "layer");
    objc_msgSend(v7, "setCornerRadius:", v3);

  }
  v8 = *(void **)&v0[qword_10080ADC8];
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v0, "frame");
    objc_msgSend(v9, "sizeThatFits:", v10, v11);
    objc_msgSend(v0, "bounds");
    CGRectGetMaxX(v16);
    objc_msgSend(v0, "bounds");
    CGRectGetMinY(v17);
    objc_msgSend(v0, "bounds");
    CGRect.withLayoutDirection(in:relativeTo:)(v0, v12);
    objc_msgSend(v9, "setFrame:");

  }
}

void sub_10006F8E4(void *a1)
{
  id v1;

  v1 = a1;
  sub_10006F730();

}

void sub_10006F918(void *a1)
{
  char *v1;
  char *v2;
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for AccountButton(0);
  v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, "invalidateIntrinsicContentSize");
  v2 = &v1[qword_10080ADC0];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 1;

}

double sub_10006F980(void *a1)
{
  id v1;
  __n128 v2;
  double v3;
  double v4;

  v1 = a1;
  sub_10006F9C0(v2);
  v4 = v3;

  return v4;
}

void sub_10006F9C0(__n128 a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  double *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  double v13;
  __n128 v14;
  double v15;
  uint64_t Main;
  double v17;
  _QWORD v19[5];

  v2 = type metadata accessor for FontSource(0, a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (double *)&v1[qword_10080ADC0];
  if ((v1[qword_10080ADC0 + 16] & 1) != 0)
  {
    if (JUScreenClassGetMain(v4) == 1)
    {
      if (qword_1008046A8 != -1)
        swift_once(&qword_1008046A8, sub_10006E8D8);
      v8 = *(double *)&qword_10080AD80;
    }
    else
    {
      v8 = 32.0;
    }
    if (qword_100805F90 != -1)
      swift_once(&qword_100805F90, sub_1004C5C34);
    v9 = type metadata accessor for FontUseCase(0);
    v10 = sub_10000EFC4(v9, (uint64_t)qword_100868FA0);
    v11 = objc_msgSend(v1, "traitCollection");
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v10, v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for FontSource.useCase(_:), v2);
    v19[3] = v2;
    v19[4] = &protocol witness table for FontSource;
    v12 = sub_1000119C0(v19);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v12, v6, v2);
    v13 = CGFloat.scalingLike(_:with:)(v19, v11, v8);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v19);
    v14.n128_f64[0] = (*(double (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v15 = floor(v13);
    Main = JUScreenClassGetMain(v14);

    v17 = v15 + -5.0;
    if (Main != 1)
      v17 = v15;
    *v7 = v17;
    v7[1] = v17;
    *((_BYTE *)v7 + 16) = 0;
  }
}

id sub_10006FBAC(void *a1)
{
  return objc_msgSend(a1, "intrinsicContentSize");
}

id sub_10006FBB8(void *a1)
{
  return objc_msgSend(a1, "intrinsicContentSize");
}

double sub_10006FBDC()
{
  return 0.0;
}

double sub_10006FBE4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  void (*v33)(char *, _QWORD, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  unsigned int *v50;
  char v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  double result;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[2];
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  swift_getObjectType();
  v0 = type metadata accessor for ActionRunner.Origin(0);
  v62 = *(_QWORD *)(v0 - 8);
  v63 = v0;
  v1 = __chkstk_darwin(v0);
  v61 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FlowOrigin(0, v1);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowAnimationBehavior(0);
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowPresentationContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v64 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v61 - v13;
  v16 = type metadata accessor for ActionMetrics(0, v15);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DAF8((uint64_t *)&unk_100820690);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v22);
  v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FlowPage(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = 0;
  v72 = 0u;
  v73 = 0u;
  (*(void (**)(char *, _QWORD))(v28 + 104))(v27, enum case for FlowPage.account(_:));
  v30 = type metadata accessor for URL(0, v29);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v24, 1, 1, v30);
  v31 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 1, 1, v31);
  memset(v71, 0, sizeof(v71));
  v32 = sub_1000700C8();
  v33 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104);
  v65 = v9;
  ((void (*)(char *, _QWORD, uint64_t, double))v33)(v14, enum case for FlowPresentationContext.infer(_:), v9, v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v8, enum case for FlowAnimationBehavior.infer(_:), v68);
  v34 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v69 + 104))(v5, enum case for FlowOrigin.inapp(_:), v70);
  v35 = static FlowActionPresentation.stackPush.getter(v34);
  v37 = v36;
  v38 = type metadata accessor for FlowAction(0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  v39 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v72, 0, 0, 0, v27, v24, 0, 0, v21, v71, v18, v14, v8, v5, 0, v35, v37);
  v41 = (id)ASKDeviceTypeGetCurrent(v40);
  v42 = ASKDeviceTypePad;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v45 = v44;
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v48 = v46;
  if (v43 == v47 && v45 == v46)
  {

    v49 = swift_bridgeObjectRelease_n(v45, 2);
    v50 = (unsigned int *)&enum case for FlowPresentationContext.presentModalFormSheet(_:);
  }
  else
  {
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v46, 0);

    swift_bridgeObjectRelease(v45);
    v49 = swift_bridgeObjectRelease(v48);
    v50 = (unsigned int *)&enum case for FlowPresentationContext.presentModal(_:);
    if ((v51 & 1) != 0)
      v50 = (unsigned int *)&enum case for FlowPresentationContext.presentModalFormSheet(_:);
  }
  v52 = v66;
  v53 = v64;
  v33(v64, *v50, v65, v49);
  FlowAction.presentationContext.setter(v53);
  if (UIResponder.nearestActionRunner.getter())
  {
    *((_QWORD *)&v73 + 1) = type metadata accessor for AccountButton(0);
    *(_QWORD *)&v72 = v52;
    v54 = *(_QWORD *)&v52[qword_10080ADA0];
    v56 = v61;
    v55 = v62;
    v57 = v63;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, enum case for ActionRunner.Origin.userInitiated(_:), v63);
    v58 = v52;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v39, &v72, v56, v54);
    swift_release();
    v59 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v56, v57, v59);
    sub_100010F2C((uint64_t)&v72, &qword_100808F20);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1000700C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  __int128 v18;

  v0 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DAF8(&qword_10080AE68);
  v4 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v3, v8 + v6, v7 | 7);
  v18 = xmmword_100640720;
  *(_OWORD *)(v9 + 16) = xmmword_100640720;
  static MetricsFieldInclusionRequest.pageFields.getter();
  v10 = sub_10013B81C(v9);
  swift_setDeallocating(v9);
  swift_arrayDestroy(v9 + v8, 1, v4);
  swift_deallocClassInstance(v9, 32, 7);
  v11 = sub_10050A32C((uint64_t)_swiftEmptyArrayStorage);
  v12 = type metadata accessor for ClickMetricsEvent(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  ClickMetricsEvent.init(targetType:targetId:including:excluding:eventFields:)(0x6E6F74747562, 0xE600000000000000, 0x746E756F636361, 0xE700000000000000, v10, &_swiftEmptySetSingleton, v11);
  v13 = sub_10000DAF8((uint64_t *)&unk_10081F870);
  v14 = type metadata accessor for MetricsData(0);
  v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) | 7);
  *(_OWORD *)(v15 + 16) = v18;
  v16 = dispatch thunk of MetricsEvent.metricsData.getter();
  ScalarDictionary.init()(v16);
  ActionMetrics.init(data:custom:)(v15, v2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10007029C(void *a1)
{
  id v1;

  v1 = a1;
  sub_10006FBE4();

}

void sub_1000702D0(void *a1)
{
  __n128 v1;
  id v2;

  v2 = a1;
  sub_100070BCC(1, v1);

}

void sub_10007030C(void *a1)
{
  id v1;

  v1 = a1;
  sub_100070340();

}

double sub_100070340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *updated;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  double result;
  _QWORD v11[3];
  void *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;

  v1 = v0;
  sub_10000DAF8(&qword_10080AE58);
  v2 = Promise.__allocating_init()();
  type metadata accessor for UpdateStore(0);
  updated = (void *)static UpdateStore.shared.getter();
  v13 = sub_10007194C;
  v14 = v2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10006E7CC;
  v12 = &unk_100739C88;
  v4 = _Block_copy(v11);
  swift_retain(v2);
  objc_msgSend(updated, "getUpdatesWithCompletionBlock:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);

  v5 = swift_allocObject(&unk_100739A90, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  v6 = swift_allocObject(&unk_100739A90, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  v7 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v8 = swift_retain(v6);
  v9 = static OS_dispatch_queue.main.getter(v8);
  v12 = (void *)v7;
  v13 = (uint64_t (*)(uint64_t))&protocol witness table for OS_dispatch_queue;
  v11[0] = v9;
  Promise.then(perform:orCatchError:on:)(sub_100071970, v5, sub_100071978, v6, v11);
  swift_release();
  swift_release();
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1000704E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  unsigned __int8 v22;
  __n128 v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  __n128 v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[6];
  char v45[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v15 = (void *)Strong;
  v38 = v12;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v36 = v13;
    else
      v36 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v16 = _CocoaArrayWrapper.endIndex.getter(v36);
  }
  else
  {
    v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
  }
  v42 = v5;
  v43 = v4;
  v40 = v9;
  v41 = v8;
  v39 = v10;
  if (!v16)
    goto LABEL_19;
  if (v16 < 1)
  {
    __break(1u);
    return;
  }
  v17 = 0;
  v18 = 0;
  while (1)
  {
    v19 = (v13 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v13)
        : *(id *)(v13 + 8 * v18 + 32);
    v20 = v19;
    v21 = objc_msgSend(v19, "updateState");
    if (!v21 || v21 == (id)3 || v21 == (id)4)
      break;

LABEL_8:
    if (v16 == ++v18)
      goto LABEL_20;
  }
  v22 = objc_msgSend(v20, "autoUpdateEnabled");

  if ((v22 & 1) != 0)
    goto LABEL_8;
  if (!__OFADD__(v17++, 1))
    goto LABEL_8;
  __break(1u);
LABEL_19:
  v17 = 0;
LABEL_20:
  swift_bridgeObjectRelease(v13);
  sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  v26 = swift_allocObject(&unk_100739CC0, 32, 7);
  *(_QWORD *)(v26 + 16) = v15;
  *(_QWORD *)(v26 + 24) = v17;
  aBlock[4] = sub_1000719A4;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000924A0;
  aBlock[3] = &unk_100739CD8;
  v27 = _Block_copy(aBlock);
  v28 = v15;
  v29 = swift_release();
  v30 = v38;
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = _swiftEmptyArrayStorage;
  v31 = sub_100071858();
  v32 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v33 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = v41;
  v35 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v43, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v30, v34, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v40);
}

void sub_100070810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = qword_10080ADC8;
    v6 = *(void **)(Strong + qword_10080ADC8);
    if (v6)
    {
      objc_msgSend(v6, "removeFromSuperview");
      v7 = *(void **)&v4[v5];
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)&v4[v5] = 0;

  }
}

void sub_100070894(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  __n128 v20;
  void *v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[3];
  void *v29;

  v2 = v1;
  v3 = type metadata accessor for OSLogger(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + qword_10080ADA8);
  if (v7)
  {
    v8 = v7;
    v9 = dispatch thunk of GameCenterFriendRequestCoordinator.currentFriendRequestCount.getter();

  }
  else
  {
    v9 = 0;
  }
  v10 = qword_10080ADD0;
  v11 = *(_QWORD *)(v2 + qword_10080ADD0);
  v12 = __OFADD__(v11, v9);
  v13 = v11 + v9;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    v27[0] = v13;
    if (qword_100806970 == -1)
      goto LABEL_6;
  }
  swift_once(&qword_100806970, sub_100503354);
LABEL_6:
  v14 = sub_10000EFC4(v3, (uint64_t)qword_10086AB50);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v14, v3);
  v15 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v16 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v17 = swift_allocObject(v15, ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))- *(_QWORD *)(v16 + 72)+ 8 * *(_QWORD *)(v16 + 72), *(unsigned __int8 *)(v16 + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100643720;
  LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100689120);
  v27[1] = v2;
  v18 = *(_QWORD *)(v2 + v10);
  v29 = &type metadata for Int;
  v28[0] = v18;
  static LogMessage.safe(_:)(v28);
  sub_100010F2C((uint64_t)v28, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x43656D6147202C29, 0xEE00287265746E65);
  v29 = &type metadata for Int;
  v28[0] = v9;
  static LogMessage.safe(_:)(v28);
  sub_100010F2C((uint64_t)v28, &qword_100808F20);
  LogMessage.init(stringLiteral:)(0x6C61746F54202C29, 0xEA00000000002820);
  v29 = &type metadata for Int;
  v19 = v27[0];
  v28[0] = v27[0];
  static LogMessage.safe(_:)(v28);
  sub_100010F2C((uint64_t)v28, &qword_100808F20);
  LogMessage.init(stringLiteral:)(41, 0xE100000000000000);
  Logger.info(_:)(v17, v3, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v20);
  if (v19 < 1)
  {
    v24 = 0;
    v26 = 0;
  }
  else
  {
    v21 = (void *)objc_opt_self(NSNumberFormatter);
    sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
    isa = NSNumber.init(integerLiteral:)(v19).super.super.isa;
    v23 = objc_msgSend(v21, "localizedStringFromNumber:numberStyle:", isa, 1);

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

  }
  sub_10006F650(v24, v26);
}

void sub_100070BCC(char a1, __n128 a2)
{
  uint64_t v2;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  if (JUScreenClassGetMain(a2) == 1)
  {
    if (qword_1008046A8 != -1)
      swift_once(&qword_1008046A8, sub_10006E8D8);
    v4 = *(double *)&qword_10080AD80;
  }
  else
  {
    v4 = 32.0;
  }
  v5 = objc_msgSend((id)objc_opt_self(ASKProfilePictureStore), "sharedStore");
  v6 = swift_allocObject(&unk_100739A90, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v2);
  v7 = swift_allocObject(&unk_100739BA8, 25, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_BYTE *)(v7 + 24) = a1 & 1;
  v9[4] = sub_100071940;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1000712F8;
  v9[3] = &unk_100739BC0;
  v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(v5, "profilePictureForAccountOwnerWithMonogramFallbackWithPictureDiameter:completion:", v8, v4);
  _Block_release(v8);

}

void sub_100070D20(void *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  char *v14;
  id v15;
  double v16;
  double v17;
  UIImage *v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  double v22;
  void *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  int v30;
  id v31;
  id v32;
  double v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char v37;
  id v38;
  id v39;
  id v40;
  id v41;
  double v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  void **aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  id (*v50)();
  uint64_t v51;
  char v52[24];
  CGSize v53;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - v11;
  a2 += 16;
  swift_beginAccess(a2, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v14 = (char *)Strong;
    if (a1)
    {
      v15 = a1;
      objc_msgSend(v14, "intrinsicContentSize");
      UIGraphicsBeginImageContextWithOptions(v53, 0, 0.0);
      objc_msgSend(v14, "intrinsicContentSize");
      objc_msgSend(v15, "drawInRect:", 0.0, 0.0, v16, v17);
      v18 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();
      v19 = static Date.+ infix(_:_:)(&v14[qword_10080ADB8], 0.33);
      Date.init()(v19);
      v20 = static Date.> infix(_:_:)(v12, v9);
      v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v9, v6);
      v21(v12, v6);
      objc_msgSend(v14, "setImage:forState:", v18, 0);
      objc_msgSend(v14, "alpha");
      if (v22 <= COERCE_DOUBLE(1))
      {
        if ((v20 & 1) != 0)
        {
          v23 = (void *)objc_opt_self(UIView);
          v24 = swift_allocObject(&unk_100739C48, 24, 7);
          *(_QWORD *)(v24 + 16) = v14;
          v50 = sub_1000719FC;
          v51 = v24;
          aBlock = _NSConcreteStackBlock;
          v47 = 1107296256;
          v48 = sub_1000924A0;
          v49 = &unk_100739C60;
          v25 = _Block_copy(&aBlock);
          v26 = v14;
          swift_release();
          objc_msgSend(v23, "animateWithDuration:delay:options:animations:completion:", 4, v25, 0, 0.33, 0.0);
          _Block_release(v25);
        }
        else
        {
          objc_msgSend(v14, "setAlpha:", 1.0);
        }
      }

      v37 = v14[qword_10080AD90];
      v14[qword_10080AD90] = 1;
      if ((v37 & 1) == 0)
      {
        v38 = objc_msgSend(v14, "layer");
        if (qword_1008046B0 != -1)
          swift_once(&qword_1008046B0, sub_10006E8E8);
        v39 = objc_msgSend((id)qword_10080AD88, "CGColor");
        objc_msgSend(v38, "setBorderColor:", v39);

        v40 = objc_msgSend(v14, "layer");
        v41 = objc_msgSend(v14, "traitCollection");
        v42 = static Separator.thickness(compatibleWith:)();

        objc_msgSend(v40, "setBorderWidth:", v42);
        objc_msgSend(v14, "setNeedsDisplay");
      }
      v43 = qword_10080ADB0;
      if (*(_QWORD *)&v14[qword_10080ADB0])
      {
        v44 = swift_retain(*(_QWORD *)&v14[qword_10080ADB0]);
        dispatch thunk of DispatchWorkItem.cancel()(v44);
        *(_QWORD *)&v14[v43] = 0;
        swift_release();

        swift_release();
        return;
      }

    }
    else if ((a3 & 1) != 0)
    {
      v27 = static Date.+ infix(_:_:)(Strong + qword_10080ADB8, 0.33);
      Date.init()(v27);
      v28 = static Date.> infix(_:_:)(v12, v9);
      v29 = *(void (**)(char *, uint64_t))(v7 + 8);
      v29(v9, v6);
      v29(v12, v6);
      v30 = v14[qword_10080AD90];
      v14[qword_10080AD90] = 0;
      if (v30 == 1)
      {
        v31 = objc_msgSend(v14, "layer");
        objc_msgSend(v31, "setBorderColor:", 0);

        v32 = objc_msgSend(v14, "layer");
        objc_msgSend(v32, "setBorderWidth:", 0.0);

        objc_msgSend(v14, "setNeedsDisplay");
      }
      if (qword_1008046A0 != -1)
        swift_once(&qword_1008046A0, sub_10006E838);
      objc_msgSend(v14, "setImage:forState:", qword_10080AD78, 0);
      objc_msgSend(v14, "alpha");
      if (v33 <= COERCE_DOUBLE(1))
      {
        if ((v28 & 1) != 0)
        {
          v34 = (void *)objc_opt_self(UIView);
          v35 = swift_allocObject(&unk_100739BF8, 24, 7);
          *(_QWORD *)(v35 + 16) = v14;
          v50 = sub_1000719FC;
          v51 = v35;
          aBlock = _NSConcreteStackBlock;
          v47 = 1107296256;
          v48 = sub_1000924A0;
          v49 = &unk_100739C10;
          v36 = _Block_copy(&aBlock);
          v14 = v14;
          swift_release();
          objc_msgSend(v34, "animateWithDuration:delay:options:animations:completion:", 4, v36, 0, 0.33, 0.0);
          _Block_release(v36);
        }
        else
        {
          objc_msgSend(v14, "setAlpha:", 1.0);
        }
      }
    }

  }
}

void sub_1000712F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_10007134C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  __n128 v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for AccountButton(0);
  v4 = v8.receiver;
  v5 = a3;
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", v5);
  objc_msgSend(v4, "invalidateIntrinsicContentSize", v8.receiver, v8.super_class);
  v6 = objc_msgSend(v4, "backgroundImageForState:", 0);

  if (v6)
    sub_100070BCC(1, v7);

}

id sub_1000713F8(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  double v8;

  v3 = objc_msgSend(v1, "layer");
  v4 = v3;
  if ((a1 & 1) != 0)
  {
    if (qword_1008046B0 != -1)
      swift_once(&qword_1008046B0, sub_10006E8E8);
    v5 = objc_msgSend((id)qword_10080AD88, "CGColor");
    objc_msgSend(v4, "setBorderColor:", v5);

    v6 = objc_msgSend(v1, "layer");
    v7 = objc_msgSend(v1, "traitCollection");
    v8 = static Separator.thickness(compatibleWith:)();

    objc_msgSend(v6, "setBorderWidth:", v8);
  }
  else
  {
    objc_msgSend(v3, "setBorderColor:", 0);

    v6 = objc_msgSend(v1, "layer");
    objc_msgSend(v6, "setBorderWidth:", 0.0);
  }

  return objc_msgSend(v1, "setNeedsDisplay");
}

void sub_10007154C(void *a1)
{
  _BYTE *v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for AccountButton(0);
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "_dynamicUserInterfaceTraitDidChange");
  sub_1000713F8(v1[qword_10080AD90]);

}

uint64_t sub_1000715B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = a1;
  sub_100070340();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_100071648(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;

  v1 = a1;
  sub_1000716AC();
  v3 = v2;

  if (v3)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_1000716AC()
{
  uint64_t v0;
  char *v1;
  void *v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v1 = *(char **)(v0 + qword_10080ADC8);
  if (!v1)
    return 0;
  v2 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension14CountBadgeView_countLabel];
  v3 = v1;
  v4 = objc_msgSend(v2, "text");
  if (!v4)
  {

    return 0;
  }
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v6;
}

void sub_100071740()
{
  _swift_stdlib_reportUnimplementedInitializer("ProductPageExtension.AccountButton", 34, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_10007176C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080AE10)
  {
    v2 = type metadata accessor for StoreTab(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080AE10);
  }
}

uint64_t sub_1000717C0()
{
  return type metadata accessor for AccountButton(0);
}

uint64_t sub_1000717C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10080AE38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100071810()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100071834()
{
  uint64_t v0;

  sub_10006F160(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100071840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100071850(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100071858()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100809570;
  if (!qword_100809570)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_100809570);
  }
  return result;
}

id sub_1000718A0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_1000718B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000718D8(__n128 a1)
{
  sub_100070894(a1);
}

uint64_t sub_1000718F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007191C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100071940(void *a1)
{
  uint64_t v1;

  sub_100070D20(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_10007194C(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Promise.resolve(_:)(&v2);
}

void sub_100071970(uint64_t *a1)
{
  uint64_t v1;

  sub_1000704E4(a1, v1);
}

void sub_100071978(uint64_t a1)
{
  uint64_t v1;

  sub_100070810(a1, v1);
}

uint64_t sub_100071980()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000719A4(__n128 a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 + 16) + qword_10080ADD0) = *(_QWORD *)(v1 + 24);
  sub_100070894(a1);
}

uint64_t sub_100071A18()
{
  return sub_10000E720((unint64_t *)&unk_10080AE70, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_1006437D8);
}

double sub_100071A44()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v7;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v2);
  v5 = sub_100071AE8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

double sub_100071AE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  void *v29;
  double v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v0 = type metadata accessor for PageGrid(0);
  v36 = *(_QWORD *)(v0 - 8);
  v37 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000DAF8(&qword_100814E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MixedMediaLockupLayout.Metrics(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Shelf.PresentationHints(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  v17 = ShelfLayoutContext.shelfPresentationHints.getter(v16);
  static Shelf.PresentationHints.showSupplementaryText.getter(v17);
  v18 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v19 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v9, v18);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v12, v9);
  v21 = ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
  v22 = (void *)ShelfLayoutContext.traitEnvironment.getter(v21);
  v23 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
  sub_1001DBC90(v22, v19 & 1, (uint64_t)v5, (uint64_t)v8);
  swift_unknownObjectRelease();
  v24 = sub_100071D6C((uint64_t)v5);
  ShelfLayoutContext.contentPageGrid.getter(v24);
  v25 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v27 = v26;
  v28 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v2, v37);
  v29 = (void *)ShelfLayoutContext.traitEnvironment.getter(v28);
  v30 = sub_1002974C8((uint64_t)v8, v29, v25, v27);
  v31 = swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v8, v35, v31);
  return v30;
}

uint64_t sub_100071D6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_100814E60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100071DAC@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

id sub_100071E20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnimatedTransitionWithTasks();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AnimatedTransitionWithTasks()
{
  return objc_opt_self(_TtC20ProductPageExtension27AnimatedTransitionWithTasks);
}

uint64_t destroy for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

uint64_t _s20ProductPageExtension27AnimatedTransitionWithTasksC20TransitionTaskActionVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for AnimatedTransitionWithTasks.TransitionTaskAction(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimatedTransitionWithTasks.TransitionTaskAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimatedTransitionWithTasks.TransitionTaskAction()
{
  return &type metadata for AnimatedTransitionWithTasks.TransitionTaskAction;
}

uint64_t sub_100071FF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension27AnimatedTransitionWithTasks_tasks, v11, 1, 0);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(*v3);
    v7 = (unsigned __int8 *)(v5 + 48);
    do
    {
      if (*v7 == a1)
      {
        v9 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v7 - 2);
        v8 = *((_QWORD *)v7 - 1);
        swift_retain(v8);
        v9(a1, 1);
        swift_release(v8);
      }
      v7 += 24;
      --v6;
    }
    while (v6);
    result = swift_bridgeObjectRelease(v5);
  }
  if (a1 == 2)
  {
    v10 = *v3;
    *v3 = &_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnimationTaskTransitionPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10007211C + 4 * byte_100643865[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100072150 + 4 * byte_100643860[v4]))();
}

uint64_t sub_100072150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100072158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100072160);
  return result;
}

uint64_t sub_10007216C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100072174);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100072178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100072180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnimationTaskTransitionPhase()
{
  return &type metadata for AnimationTaskTransitionPhase;
}

unint64_t sub_1000721A0()
{
  unint64_t result;

  result = qword_10080AF10;
  if (!qword_10080AF10)
  {
    result = swift_getWitnessTable(&unk_100643968, &type metadata for AnimationTaskTransitionPhase);
    atomic_store(result, (unint64_t *)&qword_10080AF10);
  }
  return result;
}

void sub_1000721E4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for InsetCollectionViewControllerContentView();
    if (swift_dynamicCastClass(v2, v3))
    {

      return;
    }

  }
  __break(1u);
}

void sub_100072250(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = objc_msgSend(v1, "view");
  if (v5)
  {
    v3 = type metadata accessor for InsetCollectionViewControllerContentView();
    v4 = swift_dynamicCastClass(v5, v3);
    if (v4)
    {
      *(_BYTE *)(v4
               + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = a1 & 1;

      return;
    }

  }
  __break(1u);
}

void sub_1000722CC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double MinY;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  CGRect v25;
  CGRect v26;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (v1)
  {
    v24 = v1;
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "safeAreaLayoutGuide");

      objc_msgSend(v4, "layoutFrame");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      v25.origin.x = v6;
      v25.origin.y = v8;
      v25.size.width = v10;
      v25.size.height = v12;
      MinY = CGRectGetMinY(v25);
      v14 = objc_msgSend(v0, "view");
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, "frame");
        v17 = v16;
        v19 = v18;
        v21 = v20;
        v23 = v22;

        v26.origin.x = v17;
        v26.origin.y = v19;
        v26.size.width = v21;
        v26.size.height = v23;
        objc_msgSend(v24, "setFrame:", 0.0, 0.0, CGRectGetWidth(v26), MinY);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100072438()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "navigationController");
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v1, "viewControllers");

  v4 = sub_100050BB8();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v11)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_7:
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    v8 = v0;
    v9 = v7;
    static NSObject.== infix(_:_:)(v9, v8);

    return;
  }
  __break(1u);
}

void *sub_100072570()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController);
  v2 = v1;
  return v1;
}

void sub_10007259C(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v14[4];
  char v15;

  v3 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController;
  v4 = *(void **)((char *)v1
                + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController);
  v5 = v4;
  static ViewControllerContainment.remove(_:)(v4);

  v6 = *(void **)((char *)v1 + v3);
  *(_QWORD *)((char *)v1 + v3) = a1;
  v7 = a1;

  v8 = *(void **)((char *)v1 + v3);
  v9 = *(double (**)(void))((swift_isaMask & *v1) + 0x190);
  v13 = v8;
  v14[0] = v9();
  v14[1] = v10;
  v14[2] = v11;
  v14[3] = v12;
  v15 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v8, v1, v14);

}

void sub_100072650()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000726CC(char a1)
{
  _QWORD *v1;

  *((_BYTE *)v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle) = a1;
  return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F0))();
}

uint64_t sub_1000726F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle);
}

void sub_100072704(uint64_t a1, char a2)
{
  sub_100072734(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarTransitionDistance);
}

uint64_t sub_100072710()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarAppearanceProgress);
}

void sub_100072728(uint64_t a1, char a2)
{
  sub_100072734(a1, a2, &OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarAppearanceProgress);
}

void sub_100072734(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *a3;
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  sub_10007274C();
}

void sub_10007274C()
{
  char *v0;
  double v1;
  id v2;
  unsigned int v3;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  id v9;
  unsigned int v10;
  id v11;
  double v12;
  double v13;
  id v14;
  id v15;
  id v16;

  if ((v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarAppearanceProgress + 8] & 1) != 0)
  {
    if ((v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarTransitionDistance + 8] & 1) != 0)
    {
      v16 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v16, "_setManualScrollEdgeAppearanceEnabled:", 0);
LABEL_11:

      return;
    }
    v8 = *(double *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarTransitionDistance];
    v9 = objc_msgSend(v0, "navigationItem");
    v10 = objc_msgSend(v9, "_isManualScrollEdgeAppearanceEnabled");

    if (!v10
      || (v11 = objc_msgSend(v0, "navigationItem"),
          objc_msgSend(v11, "_autoScrollEdgeTransitionDistance"),
          v13 = v12,
          v11,
          v13 != v8))
    {
      v14 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v14, "_setManualScrollEdgeAppearanceEnabled:", 0);

      v15 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v15, "_setAutoScrollEdgeTransitionDistance:", v8);

      v16 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v16, "_setManualScrollEdgeAppearanceEnabled:", 1);
      goto LABEL_11;
    }
  }
  else
  {
    v1 = *(double *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarAppearanceProgress];
    v2 = objc_msgSend(v0, "navigationItem");
    v3 = objc_msgSend(v2, "_isManualScrollEdgeAppearanceEnabled");

    if (!v3
      || (v4 = objc_msgSend(v0, "navigationItem"),
          objc_msgSend(v4, "_manualScrollEdgeAppearanceProgress"),
          v6 = v5,
          v4,
          v6 != v1))
    {
      v7 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v7, "_setManualScrollEdgeAppearanceEnabled:", 1);

      v16 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v16, "_setManualScrollEdgeAppearanceProgress:", v1);
      goto LABEL_11;
    }
  }
}

void sub_100072998()
{
  _QWORD *v0;
  char v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B0))();
  v2 = objc_msgSend(v0, "navigationItem");
  v4 = v2;
  if ((v1 & 1) != 0)
    v3 = 3;
  else
    v3 = 2;
  objc_msgSend(v2, "setLargeTitleDisplayMode:", v3);

}

void sub_100072A10(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v2 = sub_10000DAF8(&qword_10080AE38);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StoreTab(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    v35 = v46;
    if (v46 < 0)
      v36 = v46;
    else
      v36 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v46);
    v45 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v35);
    if (v45)
    {
LABEL_3:
      if (v45 < 1)
      {
        __break(1u);
        goto LABEL_36;
      }
      v38 = v8;
      v39 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph;
      v9 = v46 & 0xC000000000000001;
      swift_bridgeObjectRetain(v46);
      v10 = 0;
      v40 = v9;
      v41 = v4;
      do
      {
        if (v9)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v46);
        else
          v11 = *(id *)(v46 + 8 * v10 + 32);
        v12 = v11;
        v13 = type metadata accessor for AccountButton(0);
        v14 = swift_dynamicCastClass(v12, v13);
        if (v14)
        {
          v15 = v14;
          sub_100018ADC(v14 + qword_100864A70, (uint64_t)v4, &qword_10080AE38);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {

            sub_100010F2C((uint64_t)v4, &qword_10080AE38);
          }
          else
          {
            v16 = v5;
            (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v44, v4, v5);
            v17 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
            v18 = v42;
            v43 = *(_QWORD *)(v42 + v39);
            v19 = v6;
            v20 = type metadata accessor for ObjectGraph(0);
            v21 = v12;
            v22 = v17;
            v23 = v17;
            v4 = v41;
            inject<A, B>(_:from:)(v22, v43, v23, v20);
            v24 = (void *)v47;
            v25 = v15;
            v26 = v18;
            v9 = v40;
            v27 = v44;
            FloatingUnifiedMessageCoordinator.register(accountButton:with:for:)(v25, v26, v44);

            v6 = v19;
            v5 = v16;
            (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v16);
          }
        }
        else
        {

        }
        ++v10;
      }
      while (v45 != v10);
      swift_bridgeObjectRelease(v46);
      if (v38)
      {
        v32 = v46;
        if (v46 < 0)
          v33 = v46;
        else
          v33 = v46 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v46);
        v34 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease(v32);
        if (v34 != 1)
        {
LABEL_16:
          v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StackView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
          *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9StackView_axis] = 0;
          objc_msgSend(v4, "setNeedsLayout");
          *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9StackView_alignment] = 5;
          objc_msgSend(v4, "setNeedsLayout");
          *(_QWORD *)&v4[OBJC_IVAR____TtC20ProductPageExtension9StackView_spacing] = 0x4030000000000000;
          objc_msgSend(v4, "setNeedsLayout");
          v47 = (unint64_t)_swiftEmptyArrayStorage;
          swift_bridgeObjectRetain(v46);
          sub_10001A304(v28);
          v5 = v47;
          if (!(v47 >> 62))
          {
            v29 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v29)
            {
LABEL_21:
              swift_bridgeObjectRelease(v5);
              return;
            }
            goto LABEL_18;
          }
LABEL_36:
          if (v5 < 0)
            v37 = v5;
          else
            v37 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v29 = _CocoaArrayWrapper.endIndex.getter(v37);
          swift_bridgeObjectRelease(v5);
          if (!v29)
            goto LABEL_21;
LABEL_18:
          if (v29 >= 1)
          {
            for (i = 0; i != v29; ++i)
            {
              v31 = *(_QWORD *)(v5 + 8 * i + 32);
              objc_msgSend(v4, "addSubview:", v31);
            }
            goto LABEL_21;
          }
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
      }
      else if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
      {
        goto LABEL_16;
      }
      if (v9)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
        return;
      }
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        *(id *)(v46 + 32);
        return;
      }
      goto LABEL_42;
    }
  }
  else
  {
    v45 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v45)
      goto LABEL_3;
  }
}

void sub_100072E8C(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v3, "_setLargeTitleAccessoryView:alignToBaseline:", a1, 0);

}

uint64_t sub_100072EE4()
{
  return sub_100072EFC((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:));
}

uint64_t sub_100072EF0()
{
  return sub_100072EFC((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:));
}

uint64_t sub_100072EFC(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];
  uint64_t v17;

  v3 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v7, v15, 0, 0);
  sub_100018ADC(v7, (uint64_t)v16, &qword_10080AFE0);
  if (!v17)
    return sub_100010F2C((uint64_t)v16, &qword_10080AFE0);
  sub_10000EF80((uint64_t)v16, (uint64_t)v12);
  sub_100010F2C((uint64_t)v16, &qword_10080AFE0);
  v8 = v13;
  v9 = v14;
  sub_100010F08(v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *a1, v3);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v12);
}

void sub_100073180()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  objc_class *v26;
  uint64_t v27;
  id v28;
  objc_super v29[2];
  objc_super v30;

  v1 = type metadata accessor for AutomationSemantics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806C80 != -1)
    swift_once(&qword_100806C80, sub_1005A6E64);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_10082C6F0);
  if (!Strong
    || (v6 = *(void **)(Strong + OBJC_IVAR___RootViewController_rootViewController),
        v7 = v6,
        *(_QWORD *)&v8 = swift_unknownObjectRelease().n128_u64[0],
        !v6))
  {
    v26 = (objc_class *)type metadata accessor for StoreCollectionViewController();
    v30.receiver = v0;
    v30.super_class = v26;
    objc_msgSendSuper2(&v30, "loadView");
    return;
  }
  v9 = objc_msgSend(v7, "view", v8);

  if (!v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v9, "frame");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v28 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InsetCollectionViewControllerContentView()), "initWithFrame:", v11, v13, v15, v17);
  objc_msgSend(v28, "setAutoresizingMask:", 18);
  objc_msgSend(v0, "setView:", v28);
  v18 = objc_msgSend(v0, "collectionViewLayout");
  v19 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v18, v11, v13, v15, v17);

  objc_msgSend(v19, "setAutoresizingMask:", 18);
  objc_msgSend(v19, "setDelegate:", *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_collectionViewDelegate]);
  objc_msgSend(v19, "setDataSource:", *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_collectionViewDataSource]);
  v20 = objc_msgSend(v0, "view");
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v21 = v20;
  objc_msgSend(v20, "addSubview:", v19);

  objc_msgSend(v0, "setCollectionView:", v19);
  v22 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_automationSemanticPageId
                     + 8];
  if (!v22)
  {

    return;
  }
  v23 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_automationSemanticPageId];
  v24 = objc_msgSend(v0, "collectionView", swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_automationSemanticPageId+ 8]).n128_f64[0]);
  if (v24)
  {
    v25 = v24;
    memset(v29, 0, sizeof(v29));
    static AutomationSemantics.page(name:id:)(v23, v22, v29);
    swift_bridgeObjectRelease(v22);
    sub_100010F2C((uint64_t)v29, &qword_100808F20);
    UIView.setAutomationSemantics(_:)(v4);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_1000734F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t ObjectType;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  _QWORD v22[4];
  char v23;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v3 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v3, "_setSupportsTwoLineLargeTitles:", 1);

  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F0))();
  v5 = *(void **)((char *)v1
                + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v1, "view");
    if (!v7)
    {
      __break(1u);
      goto LABEL_11;
    }
    v8 = v7;
    objc_msgSend(v7, "addSubview:", v6);

  }
  v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x178))(v4);
  if (v9)
  {
    v10 = (void *)v9;
    v22[0] = (*(double (**)(void))((swift_isaMask & *v1) + 0x190))();
    v22[1] = v11;
    v22[2] = v12;
    v22[3] = v13;
    v23 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v10, v1, v22);

  }
  v14 = type metadata accessor for ImpressionsCalculator(0);
  BaseObjectGraph.optional<A>(_:)(&v20, v14, v14);
  if (!v20)
    goto LABEL_9;
  v15 = objc_msgSend(v1, "collectionView");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "bounds");

    ImpressionsCalculator.viewBounds.setter(v17);
    swift_release();
LABEL_9:
    v18 = sub_10000DAF8((uint64_t *)&unk_10080B800);
    v19 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100640720;
    *(_QWORD *)(v19 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v19 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    UIViewController.registerForTraitChanges<A>(_:handler:)(v19, sub_100074B28, 0, ObjectType);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease(v19);
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_10007377C(char a1)
{
  return sub_100074380(a1, (SEL *)&selRef_viewWillAppear_, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.willAppear(_:));
}

void sub_1000737E0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  char v20[24];
  _QWORD v21[5];
  objc_super v22;

  v2 = v1;
  v4 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v22.receiver = v2;
  v22.super_class = v8;
  objc_msgSendSuper2(&v22, "viewDidAppear:", a1 & 1);
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver], v20, 0, 0);
  sub_100018ADC(v9, (uint64_t)v21, &qword_10080AFE0);
  if (v21[3])
  {
    sub_10000EF80((uint64_t)v21, (uint64_t)v17);
    sub_100010F2C((uint64_t)v21, &qword_10080AFE0);
    v10 = v18;
    v11 = v19;
    sub_100010F08(v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.didAppear(_:), v4);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v10, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
  }
  else
  {
    sub_100010F2C((uint64_t)v21, &qword_10080AFE0);
  }
  v12 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_registeredForApplicationDidBecomeActive;
  if ((v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_registeredForApplicationDidBecomeActive] & 1) == 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v13, "addObserver:selector:name:object:", v2, "applicationDidBecomeActive:", UIApplicationDidBecomeActiveNotification, 0);

    v2[v12] = 1;
  }
  v14 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
  BaseObjectGraph.optional<A>(_:)(v21, v14, v14);
  v15 = (void *)v21[0];
  if (v21[0])
  {
    FloatingUnifiedMessageCoordinator.viewControllerDidAppear(_:)((UIViewController)v2);

  }
}

void sub_100073A14(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  unint64_t v13;
  id v14;
  char v15;
  id v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  char v31[24];
  _QWORD v32[3];
  uint64_t v33;
  objc_super v34;

  v2 = v1;
  v4 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v34.receiver = v2;
  v34.super_class = v8;
  objc_msgSendSuper2(&v34, "viewWillDisappear:", a1 & 1);
  v9 = objc_msgSend(v2, "navigationController");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v2, "parentViewController");
    if (!v11)
      goto LABEL_5;
    v12 = v11;
    v13 = sub_100050BB8();
    v10 = v10;
    v14 = v12;
    v15 = static NSObject.== infix(_:_:)(v14, v10);

    if ((v15 & 1) == 0)
      goto LABEL_5;
    v16 = objc_msgSend(v10, "viewControllers");
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v13);

    sub_1000A8720((uint64_t)v2, v17);
    LOBYTE(v16) = v18;
    swift_bridgeObjectRelease(v17);
    if ((v16 & 1) != 0)
    {
      v24 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver];
      swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver], v27, 0, 0);
      sub_100018ADC(v24, (uint64_t)v32, &qword_10080AFE0);
      if (v33)
      {
        sub_10000EF80((uint64_t)v32, (uint64_t)v28);
        sub_100010F2C((uint64_t)v32, &qword_10080AFE0);
        v25 = v29;
        v26 = v30;
        sub_100010F08(v28, v29);
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:), v4);
        dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v25, v26);

        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
        _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
      }
      else
      {

        sub_100010F2C((uint64_t)v32, &qword_10080AFE0);
      }
    }
    else
    {
LABEL_5:

    }
  }
  v19 = (uint64_t)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver], v31, 0, 0);
  sub_100018ADC(v19, (uint64_t)v32, &qword_10080AFE0);
  if (v33)
  {
    sub_10000EF80((uint64_t)v32, (uint64_t)v28);
    sub_100010F2C((uint64_t)v32, &qword_10080AFE0);
    v20 = v29;
    v21 = v30;
    sub_100010F08(v28, v29);
    static ViewWillDisappearReason.inferred(for:)(v2);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.willDisappear(_:), v4);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v20, v21);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  }
  else
  {
    sub_100010F2C((uint64_t)v32, &qword_10080AFE0);
  }
  v22 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
  BaseObjectGraph.optional<A>(_:)(v32, v22, v22);
  v23 = (void *)v32[0];
  if (v32[0])
  {
    FloatingUnifiedMessageCoordinator.viewControllerDidDissappear(_:)((UIViewController)v2);

  }
}

id sub_100073D84()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id result;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void *v22;
  Class isa;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  char v39[24];
  _BYTE v40[24];
  uint64_t v41;
  objc_super v42;

  v1 = v0;
  v2 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v42.receiver = v1;
  v42.super_class = v12;
  objc_msgSendSuper2(&v42, "as_viewWillBecomeFullyVisible");
  v35 = v1;
  result = objc_msgSend(v1, "collectionView");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v15)
    {
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v5);

      v17 = (_QWORD *)v16;
    }
    else
    {
      v17 = _swiftEmptyArrayStorage;
    }
    v30 = v3;
    v31 = v2;
    v18 = v17[2];
    v33 = v17;
    if (v18)
    {
      v19 = (char *)v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v34 = *(_QWORD *)(v6 + 72);
      v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      while (1)
      {
        v20(v11, v19, v5);
        v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v21(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
        result = objc_msgSend(v35, "collectionView");
        if (!result)
        {
          __break(1u);
          goto LABEL_17;
        }
        v22 = result;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v22, "deselectItemAtIndexPath:animated:", isa, 1);

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v19 += v34;
        if (!--v18)
          goto LABEL_12;
      }
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_12:
      v21(v11, 1, 1, v5);
    }
    swift_bridgeObjectRelease(v33);
    v24 = &v35[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver];
    swift_beginAccess(&v35[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver], v39, 0, 0);
    sub_100018ADC((uint64_t)v24, (uint64_t)v40, &qword_10080AFE0);
    if (v41)
    {
      sub_10000EF80((uint64_t)v40, (uint64_t)v36);
      sub_100010F2C((uint64_t)v40, &qword_10080AFE0);
      v25 = v37;
      v26 = v38;
      sub_100010F08(v36, v37);
      v28 = v30;
      v27 = v31;
      v29 = v32;
      (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v32, enum case for StoreViewControllerLifecycleEvent.willBecomeFullyVisible(_:), v31);
      dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v29, v25, v26);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
      return (id)_s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v36);
    }
    else
    {
      return (id)sub_100010F2C((uint64_t)v40, &qword_10080AFE0);
    }
  }
  else
  {
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_100074110()
{
  return sub_100074180((SEL *)&selRef_as_viewDidBecomeFullyVisible, &enum case for StoreViewControllerLifecycleEvent.didBecomeFullyVisible(_:));
}

uint64_t sub_10007416C()
{
  return sub_100074180((SEL *)&selRef_as_viewWillBecomePartiallyVisible, &enum case for StoreViewControllerLifecycleEvent.willBecomePartiallyVisible(_:));
}

uint64_t sub_100074180(SEL *a1, unsigned int *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];
  uint64_t v20;
  objc_super v21;

  v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v21.receiver = v2;
  v21.super_class = v9;
  objc_msgSendSuper2(&v21, *a1);
  v10 = (uint64_t)v2 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v10, v18, 0, 0);
  sub_100018ADC(v10, (uint64_t)v19, &qword_10080AFE0);
  if (!v20)
    return sub_100010F2C((uint64_t)v19, &qword_10080AFE0);
  sub_10000EF80((uint64_t)v19, (uint64_t)v15);
  sub_100010F2C((uint64_t)v19, &qword_10080AFE0);
  v11 = v16;
  v12 = v17;
  sub_100010F08(v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a2, v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v11, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
}

uint64_t sub_100074310()
{
  return sub_100074180((SEL *)&selRef_as_viewDidBecomePartiallyVisible, &enum case for StoreViewControllerLifecycleEvent.didBecomePartiallyVisible(_:));
}

uint64_t sub_10007436C(char a1)
{
  return sub_100074380(a1, (SEL *)&selRef_viewDidDisappear_, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.didDisappear(_:));
}

uint64_t sub_100074380(char a1, SEL *a2, unsigned int *a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];
  uint64_t v22;
  objc_super v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v23.receiver = v3;
  v23.super_class = v11;
  objc_msgSendSuper2(&v23, *a2, a1 & 1);
  v12 = (uint64_t)v3 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v12, v20, 0, 0);
  sub_100018ADC(v12, (uint64_t)v21, &qword_10080AFE0);
  if (!v22)
    return sub_100010F2C((uint64_t)v21, &qword_10080AFE0);
  sub_10000EF80((uint64_t)v21, (uint64_t)v17);
  sub_100010F2C((uint64_t)v21, &qword_10080AFE0);
  v13 = v18;
  v14 = v19;
  sub_100010F08(v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a3, v7);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v13, v14);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v17);
}

void sub_100074520()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  v1 = objc_msgSendSuper2(&v6, "viewWillLayoutSubviews");
  v2 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x148))(v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x178))(v2);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "view");

    if (v5)
    {
      (*(void (**)(void))((swift_isaMask & *v0) + 0x190))();
      objc_msgSend(v5, "setFrame:");

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100074844()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StoreCollectionViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension29StoreCollectionViewController);
}

uint64_t type metadata accessor for InsetCollectionViewControllerContentView()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView);
}

id sub_100074B2C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _QWORD *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v4 = &v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_automationSemanticPageId];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController] = 0;
  v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle] = 0;
  v6 = &v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarTransitionDistance];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarAppearanceProgress];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationAccessories] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_collectionViewDelegate] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_collectionViewDataSource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph] = a2;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return objc_msgSendSuper2(&v9, "initWithCollectionViewLayout:", a1);
}

void sub_100074C28(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  if (objc_msgSend(v1, "isViewLoaded"))
  {
    v7 = *(void **)&v1[v3];
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v1, "view");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "addSubview:", v8);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100074CFC()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  char *v3;
  char *v4;

  v1 = &v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_automationSemanticPageId];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController] = 0;
  v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle] = 0;
  v3 = &v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarTransitionDistance];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationBarAppearanceProgress];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationAccessories] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_collectionViewDelegate] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_collectionViewDataSource] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/StoreCollectionViewController.swift", 56, 2, 47, 0);
  __break(1u);
}

void sub_100074E08(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (uint64_t)a1;
  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_navigationAccessories];
  v3 = objc_msgSend(a1, "traitCollection", swift_bridgeObjectRetain(v2).n128_f64[0]);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
  if ((unint64_t)v2 >> 62)
    goto LABEL_15;
  v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  v6 = v3;
  swift_retain(v4);
  while (v5)
  {
    v21 = v4;
    v20 = v1;
    v4 = 0;
    v7 = v2 & 0xC000000000000001;
    v1 = 4;
    while (1)
    {
      v9 = v1 - 4;
      if (!v7)
        break;
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v2);
      v11 = v1 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_14;
LABEL_11:
      v12 = v3;
      if ((*(unsigned __int8 (**)(id))(v10 + 16))(v3))
      {
        swift_release();
        v8 = _swiftEmptyArrayStorage;
      }
      else
      {
        v13 = *(_QWORD *)(v10 + 32);
        swift_retain(v21);
        swift_retain(v10);
        swift_bridgeObjectRetain(v13);
        v8 = sub_10021E5F4(v14, v10, v21);
        swift_bridgeObjectRelease(v13);
        swift_release_n(v10, 2);
        v7 = v2 & 0xC000000000000001;
        swift_release();
      }
      sub_10001A304((uint64_t)v8);
      ++v1;
      v3 = v12;
      if (v11 == v5)
      {
        swift_release();
        swift_bridgeObjectRelease(v2);
        v1 = v20;
        goto LABEL_20;
      }
    }
    v10 = *(_QWORD *)(v2 + 8 * v1);
    swift_retain(v10);
    v11 = v1 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_11;
LABEL_14:
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v16 = v3;
    swift_retain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
  swift_release();
  swift_bridgeObjectRelease(v2);
LABEL_20:
  swift_bridgeObjectRelease(v2);

  sub_100072A10((unint64_t)_swiftEmptyArrayStorage);
  v18 = v17;
  v19 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  (*(void (**)(void *, __n128))((swift_isaMask & *(_QWORD *)v1) + 0x208))(v18, v19);

}

uint64_t sub_100075068()
{
  return Shelf.contentType.getter();
}

void sub_100075088(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double (*v16)(char *, uint64_t);
  __n128 v17;
  uint64_t KeyPath;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  char *v27;
  double *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  uint64_t v33;

  v31 = a1;
  v30 = a3;
  v4 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v12);
  v13 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v15 = v14;
  v16 = *(double (**)(char *, uint64_t))(v9 + 8);
  v17.n128_f64[0] = v16(v11, v8);
  ShelfLayoutContext.shelf.getter(v17);
  KeyPath = swift_getKeyPath(&unk_100643A80);
  ReadOnlyLens.subscript.getter(&v33, KeyPath, v4);
  v19 = swift_release();
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v19);
  v21 = v33;
  v22 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v23 = PageGrid.containerWidth.getter(v22);
  v24 = ((uint64_t (*)(char *, uint64_t))v16)(v11, v8);
  v25 = ShelfLayoutContext.traitCollection.getter(v24);
  v26 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v27 = (char *)objc_allocWithZone(v26);
  v28 = (double *)&v27[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v28 = v23;
  v28[1] = 1.79769313e308;
  *(_QWORD *)&v27[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v25;
  v32.receiver = v27;
  v32.super_class = v26;
  v29 = objc_msgSendSuper2(&v32, "init");
  (*(void (**)(uint64_t, id, uint64_t, double, double))(*(_QWORD *)(a2 + 8) + 16))(v21, v29, v31, v13, v15);

}

uint64_t sub_100075280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;

  v28 = a5;
  v27[3] = a6;
  v27[1] = a2;
  v9 = type metadata accessor for ShelfLayoutContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_10080AFE8);
  __chkstk_darwin(v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ComponentPrefetchSizing(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[2] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v18);
  dispatch thunk of static ArtworkPrefetchingShelfComponentView.sizingForArtworkPrefetch(in:asPartOf:)(v12, a3, a4, v28);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_100010F2C((uint64_t)v15, &qword_10080AFE8);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  v22 = sub_1000754C8();
  __chkstk_darwin(v22);
  v27[-2] = v20;
  v23 = (uint64_t)sub_10036D594((void (*)(uint64_t *__return_ptr, uint64_t *))sub_10007577C, (uint64_t)&v27[-4], (uint64_t)v22);
  swift_bridgeObjectRelease(v22);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v25 = v23;
    else
      v25 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v23);
    if (!v26)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v23);
LABEL_6:
  v24 = swift_bridgeObjectRelease(v23);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v17 + 8))(v20, v16, v24);
}

_QWORD *sub_1000754C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  __n128 v12;
  unint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - v5;
  v7 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_100643A20);
  ItemLayoutContext.subscript.getter(v10);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100643A50);
  ReadOnlyLens.subscript.getter(v6, KeyPath, v7);
  v12 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
  v13 = sub_1000757BC();
  v14 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v3, v0, v13);
  v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v3, v0);
  v15(v6, v0);
  if ((v14 & 1) != 0)
    return _swiftEmptyArrayStorage;
  v16 = sub_10000DAF8(&qword_10081F180);
  ItemLayoutContext.typedModel<A>(as:)(&v25, v16, v16);
  if (!v26)
  {
    sub_100010F2C((uint64_t)&v25, &qword_10080AFF0);
    return _swiftEmptyArrayStorage;
  }
  sub_100010E24(&v25, (uint64_t)v27);
  v17 = v28;
  v18 = v29;
  sub_100010F08(v27, v28);
  v19 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v17, v18);
  if (!v19)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
    return _swiftEmptyArrayStorage;
  }
  v20 = v19;
  v21 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v22 = swift_allocObject(v21, 40, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v22 + 32) = v20;
  *(_QWORD *)&v25 = v22;
  specialized Array._endMutation()(v22);
  v23 = v25;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
  return (_QWORD *)v23;
}

uint64_t sub_100075718@<X0>(uint64_t *a1@<X8>)
{
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t result;

  v2 = ComponentPrefetchSizing.size.getter();
  v4 = v3;
  v5 = ComponentPrefetchSizing.contentMode.getter();
  result = Artwork.config(_:mode:prefersLayeredImage:)(v5, 0, v2, v4);
  *a1 = result;
  return result;
}

uint64_t sub_10007577C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100075718(a1);
}

uint64_t sub_10007579C()
{
  return Shelf.contentType.getter();
}

unint64_t sub_1000757BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080F0C0;
  if (!qword_10080F0C0)
  {
    v1 = type metadata accessor for Shelf.ContentType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Shelf.ContentType, v1);
    atomic_store(result, (unint64_t *)&qword_10080F0C0);
  }
  return result;
}

uint64_t sub_100075808(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;

  if (*(_QWORD *)v1 == *a1
    && (static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 16) & 1) != 0
    && (v3 = type metadata accessor for MenuItemDebugSetting(), (v4 = swift_dynamicCastClass(a1, v3)) != 0))
  {
    v5 = v4;
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v5 + 64);
    v8 = *(_QWORD *)(v1 + 56);
    v9 = *(_QWORD *)(v1 + 64);
    v10 = v6 == v8 && v7 == v9;
    if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0), v12 = 0, (v11 & 1) != 0))
      v12 = *(_BYTE *)(v5 + 72) ^ *(_BYTE *)(v1 + 72) ^ 1;
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_1000758A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  AnyHashable.hash(into:)();
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 72));
}

uint64_t sub_100075900()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_release(*(_QWORD *)(v0 + 88));
}

uint64_t sub_10007591C()
{
  uint64_t v0;

  sub_100018968(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for MenuItemDebugSetting()
{
  return objc_opt_self(_TtC20ProductPageExtension20MenuItemDebugSetting);
}

uint64_t sub_100075970()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  void (*v35)(_QWORD);
  double left;
  double bottom;
  double right;
  __n128 v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  __int128 v44;
  __n128 v45;
  __int128 v46;
  __n128 v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  __int128 v55;
  __n128 v56;
  double v57;
  double v58;
  __int128 v59;
  __n128 v60;
  uint64_t result;
  int64x2_t v62;
  double v63;
  double top;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];

  v0 = sub_10000DAF8(&qword_100808208);
  v1 = __chkstk_darwin(v0);
  v3 = &v62.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v6 = (int64x2_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DAF8(&qword_100808210);
  __chkstk_darwin(v7);
  v9 = &v62.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v62.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v62.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v62.i8[-v17];
  v19 = sub_10000DAF8(&qword_100808218);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v66 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100640730;
  v65 = v24;
  v69 = v24 + v23;
  if (qword_100805EF8 != -1)
    swift_once(&qword_100805EF8, sub_1004B9B64);
  v25 = xmmword_100868E30;
  v71 = 0x3FF0000000000000;
  v72[0] = 0x3FF8000000000000;
  v26 = sub_10002128C();
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v27);
  v71 = 0x4030000000000000;
  v72[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v28);
  v72[0] = 0x4030000000000000;
  v71 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v35 = *(void (**)(_QWORD))(v4 + 104);
  v68 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v67 = (void (*)(int64x2_t *, _QWORD, uint64_t))v35;
  v35(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F00 != -1)
    swift_once(&qword_100805F00, sub_1004B9B78);
  v40 = xmmword_100868E40;
  v71 = 0x3FF0000000000000;
  v72[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v39);
  v71 = 0x4034000000000000;
  v72[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v41);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F08 != -1)
    swift_once(&qword_100805F08, sub_1004B9B8C);
  v44 = xmmword_100868E50;
  v72[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v45 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v45);
  v62 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v63 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v44, *((double *)&v44 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100805F28 != -1)
    swift_once(&qword_100805F28, sub_1004B9BDC);
  v46 = xmmword_100868E90;
  v72[0] = 0x4010000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v47 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v47);
  *v6 = v62;
  v67(v6, v68, v70);
  v48 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v46, *((double *)&v46 + 1), v48, v50, v52, v54);
  if (qword_100805F30 != -1)
    swift_once(&qword_100805F30, sub_1004B9BF0);
  v55 = xmmword_100868EA0;
  v72[0] = 0x4014000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v56 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v56);
  v62 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v58 = v63;
  v57 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v55, *((double *)&v55 + 1), top, v63, bottom, right);
  if (qword_100805F38 != -1)
    swift_once(&qword_100805F38, sub_1004B9C04);
  v59 = xmmword_100868EB0;
  v72[0] = 0x4018000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v60);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v59, *((double *)&v59 + 1), v57, v58, bottom, right);
  qword_10080B0E8 = v65;
  return result;
}

uint64_t sub_100076294(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  _BYTE v23[24];

  v3 = v2;
  v5 = type metadata accessor for InAppPurchaseTheme(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __chkstk_darwin(v9);
  v12 = &v23[-v11 - 8];
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView];
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16);
  v14(&v23[-v11 - 8], a1, v5, v10);
  v15 = v13 + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_theme;
  v16 = swift_beginAccess(v13 + OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_theme, v23, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v6 + 24))(v15, v12, v5, v16);
  v17 = swift_endAccess(v23);
  sub_1000ADC1C(v17, v18);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  v19((uint64_t)v12, v5);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v14)(v8, v15, v5);
  LODWORD(v13) = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 88))(v8, v5);
  LODWORD(v12) = enum case for InAppPurchaseTheme.spotlight(_:);
  v19((uint64_t)v8, v5);
  if ((_DWORD)v13 == (_DWORD)v12
    && !*(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_spotlightView])
  {
    v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_100078118(v20);

  }
  objc_msgSend(v3, "setNeedsLayout");
  return v19(a1, v5);
}

uint64_t sub_10007644C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  id v65;
  __n128 v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  NSString v70;
  uint64_t v71;
  char *v72;
  id v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  NSString v77;
  uint64_t v78;
  char **v79;
  char *v80;
  __n128 v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  char *v97;
  uint64_t v98;
  int v99;
  id v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  void *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  v126 = a4;
  v143 = a3;
  v141 = a2;
  v145 = a1;
  v6 = sub_10000DAF8(&qword_100821E80);
  v7 = __chkstk_darwin(v6);
  v140 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v7);
  v138 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v139 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8((uint64_t *)&unk_10080A0F0);
  __chkstk_darwin(v10);
  v127 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8(&qword_100818E60);
  __chkstk_darwin(v12);
  v132 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v129 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v130 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for OfferEnvironment(0);
  v119 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v118 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v117 = (char *)&v112 - v17;
  __chkstk_darwin(v18);
  v120 = (char *)&v112 - v19;
  v20 = sub_10000DAF8((uint64_t *)&unk_10080A100);
  v136 = *(_QWORD *)(v20 - 8);
  v137 = v20;
  __chkstk_darwin(v20);
  v144 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for InAppPurchaseTheme(0, v22);
  __chkstk_darwin(v23);
  v125 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for Shelf.PresentationHints(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for FloatingPointRoundingRule(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DAF8((uint64_t *)&unk_10080B170);
  __chkstk_darwin(v27);
  v29 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for ComponentLayoutOptions(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for Separator(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a5;
  v39 = sub_10007760C(a5, (uint64_t)v37);
  static ComponentLayoutOptions.separatorHidden.getter(v39);
  v40 = sub_10000E720((unint64_t *)&qword_100812DC0, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  LOBYTE(a5) = dispatch thunk of SetAlgebra.isSuperset(of:)(v33, v30, v40);
  v41 = *(void (**)(char *, uint64_t))(v31 + 8);
  v41(v33, v30);
  v134 = v35;
  v135 = v34;
  v142 = v37;
  if ((a5 & 1) != 0)
  {
    v113 = v38;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v29, 1, 1, v34);
    v42 = v128;
    v43 = (uint64_t)&v128[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator];
    swift_beginAccess(&v128[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator], &v146, 33, 0);
    sub_100078728((uint64_t)v29, v43);
    swift_endAccess(&v146);
    sub_100077394();
    v44 = sub_100010F2C((uint64_t)v29, (uint64_t *)&unk_10080B170);
    static ComponentLayoutOptions.fixedHeightContainer.getter(v44);
    v45 = dispatch thunk of SetAlgebra.isSuperset(of:)(v33, v30, v40);
    v41(v33, v30);
    v46 = objc_msgSend(v42, "contentView");
    v47 = v46;
    v48 = v42;
    if ((v45 & 1) != 0)
    {
      objc_msgSend(v46, "layoutMargins");
      objc_msgSend(v47, "setLayoutMargins:");

    }
    else
    {
      Separator.verticalOutset.getter(&v146);
      v52 = v147;
      v53 = v148;
      sub_100010F08(&v146, v147);
      v54 = v114;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v52);
      AnyDimension.value(in:rounded:)(v113, v54, v52, v53);
      (*(void (**)(char *, uint64_t))(v115 + 8))(v54, v116);
      objc_msgSend(v47, "layoutMargins");
      objc_msgSend(v47, "setLayoutMargins:");

      v49 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(&v146);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v29, v37, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v34);
    v48 = v128;
    v50 = (uint64_t)&v128[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator];
    swift_beginAccess(&v128[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator], &v146, 33, 0);
    sub_100078728((uint64_t)v29, v50);
    swift_endAccess(&v146);
    sub_100077394();
    sub_100010F2C((uint64_t)v29, (uint64_t *)&unk_10080B170);
    v51 = objc_msgSend(v48, "contentView");
    objc_msgSend(v51, "layoutMargins");
    objc_msgSend(v51, "setLayoutMargins:");

  }
  v55 = (uint64_t)v127;
  v56 = (uint64_t)v125;
  v57 = v124;
  v58 = v123;
  v59 = v122;
  static Shelf.PresentationHints.inProductPageSpotlight.getter(v49);
  v60 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v61 = dispatch thunk of SetAlgebra.isSuperset(of:)(v59, v57, v60);
  v62 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  v48[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] = v61 & 1;
  InAppPurchaseLockup.theme.getter(v62);
  sub_100076294(v56, v63);
  v64 = *(_BYTE **)&v48[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView];
  v65 = *(id *)&v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_titleLabel];
  Lockup.title.getter(v66);
  if (v67)
  {
    v69 = v67;
    v70 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v68 = swift_bridgeObjectRelease(v69).n128_u64[0];
  }
  else
  {
    v70 = 0;
  }
  v71 = v133;
  v72 = v142;
  objc_msgSend(v65, "setText:", v70, v68);

  v73 = *(id *)&v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_descriptionLabel];
  InAppPurchaseLockup.descriptionText.getter();
  if (v74)
  {
    v76 = v74;
    v77 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v75 = swift_bridgeObjectRelease(v76).n128_u64[0];
  }
  else
  {
    v77 = 0;
  }
  objc_msgSend(v73, "setText:", v77, v75);

  v79 = &selRef_fileURLWithPath_;
  if (Lockup.offerDisplayProperties.getter(v78))
  {
    v80 = v117;
    OfferDisplayProperties.environment.getter();
    v81 = swift_release();
    v82 = v119;
    v83 = v120;
    v84 = v121;
    (*(void (**)(char *, char *, uint64_t, __n128))(v119 + 32))(v120, v80, v121, v81);
    v85 = v118;
    (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v118, enum case for OfferEnvironment.widthConstrainedLockup(_:), v84);
    LOBYTE(v80) = static OfferEnvironment.== infix(_:_:)(v83, v85);
    v86 = *(void (**)(char *, uint64_t))(v82 + 8);
    v86(v85, v84);
    if ((v80 & 1) != 0)
    {
      v87 = v129;
      v88 = v130;
      v89 = v131;
      (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v130, enum case for OfferButtonSubtitlePosition.below(_:), v131);
      v90 = v132;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v132, 1, 1, v89);
      v91 = sub_10000E720((unint64_t *)&qword_10080B180, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
      AccessibilityConditional.init(value:axValue:)(v88, v90, v89, v91);
      v92 = v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_isHeightConstrained];
      v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_isHeightConstrained] = 1;
      v79 = &selRef_fileURLWithPath_;
      if ((v92 & 1) == 0)
        objc_msgSend(v64, "setNeedsLayout");
      v86(v120, v121);
      goto LABEL_20;
    }
    v86(v83, v84);
    v79 = &selRef_fileURLWithPath_;
  }
  v93 = v129;
  v94 = v130;
  v95 = v131;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v130, enum case for OfferButtonSubtitlePosition.right(_:), v131);
  v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
  v97 = v132;
  v96(v132, 1, 1, v95);
  v98 = sub_10000E720((unint64_t *)&qword_10080B180, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)(v94, v97, v95, v98);
  v99 = v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_isHeightConstrained];
  v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_isHeightConstrained] = 0;
  if (v99 == 1)
    objc_msgSend(v64, v79[151]);
LABEL_20:
  v100 = *(id *)&v64[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_offerButton];
  v101 = Lockup.offerDisplayProperties.getter(v100);
  v103 = Lockup.buttonAction.getter(v102);
  v105 = v138;
  v104 = v139;
  (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v139, enum case for OfferButtonPresenterViewAlignment.left(_:), v71);
  v106 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56);
  v107 = v140;
  v106(v140, 1, 1, v71);
  v108 = sub_10000E720((unint64_t *)&unk_100811F30, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  AccessibilityConditional.init(value:axValue:)(v104, v107, v71, v108);
  v109 = sub_10000DAF8(&qword_10080B190);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v55, 0, 1, v109);
  v110 = v144;
  sub_1001B1C4C(v101, v103, 0, v55, v144, v141, 0, 0);

  swift_release();
  swift_release();
  sub_100010F2C(v55, (uint64_t *)&unk_10080A0F0);
  objc_msgSend(v48, v79[151]);
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v110, v137);
  return (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v72, v135);
}

UIColor sub_100076FE0()
{
  id v0;
  id v1;
  UIColor result;

  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.1);

  result.super.isa = UIColor.init(light:dark:)((UIColor)v1, (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.168627451, 0.188235294, 0.231372549, 1.0)).super.isa;
  qword_100864A88 = (uint64_t)result.super.isa;
  return result;
}

char *sub_1000770AC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t ObjectType;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = &v5[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_itemLayoutContext];
  v12 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_spotlightView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separatorView] = 0;
  v13 = &v5[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator];
  v14 = type metadata accessor for Separator(0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v5[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] = 0;
  LOBYTE(ObjectType) = (*(uint64_t (**)(uint64_t))(ObjectType + 128))(v15) & 1;
  v16 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseLockupView(0));
  v17 = v5;
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView] = sub_1000ADFDC(ObjectType);

  v23.receiver = v17;
  v23.super_class = (Class)type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
  v18 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v20 = objc_msgSend(v18, "contentView");
  v21 = *(id *)&v18[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView];
  objc_msgSend(v20, "addSubview:", v21);

  return v18;
}

id sub_100077394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  void (*v15)(char *, _BYTE *, uint64_t);
  char *v16;
  void (*v17)(_BYTE *, uint64_t);
  char *v18;
  char *v19;
  __n128 v20;
  _BYTE v21[24];
  char v22[24];

  v1 = sub_10000DAF8((uint64_t *)&unk_10080B170);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Separator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v21[-v9];
  v11 = v0 + OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separator, v22, 0, 0);
  sub_100078770(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100010F2C((uint64_t)v3, (uint64_t *)&unk_10080B170);
    return sub_100078214(0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v10, v3, v4);
    v13 = *(char **)(v0 + OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separatorView);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
    if (v13)
    {
      v14 = &v13[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
      swift_beginAccess(&v13[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v21, 33, 0);
      v15 = *(void (**)(char *, _BYTE *, uint64_t))(v5 + 24);
      v16 = v13;
      v15(v14, v7, v4);
      swift_endAccess(v21);
      objc_msgSend(v16, "setNeedsLayout");
      v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v17(v7, v4);

      return (id)((uint64_t (*)(_BYTE *, uint64_t))v17)(v10, v4);
    }
    else
    {
      v18 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v19 = &v18[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
      v20 = swift_beginAccess(&v18[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v21, 33, 0);
      (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 40))(v19, v7, v4, v20);
      swift_endAccess(v21);
      sub_100078214(v18);

      return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
}

uint64_t sub_10007760C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  double v31[2];

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100812C70);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v28[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "traitCollection", v10);
  v14 = UITraitCollection.prefersAccessibilityLayouts.getter(v13);

  if ((v14 & 1) != 0)
  {
    if (qword_1008069D0 != -1)
      swift_once(&qword_1008069D0, sub_100518714);
    v16 = type metadata accessor for Separator(0);
    v17 = sub_10000EFC4(v16, (uint64_t)qword_10086AC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a2, v17, v16);
  }
  else
  {
    if (qword_1008047E0 != -1)
      swift_once(&qword_1008047E0, sub_1000AD59C);
    v19 = type metadata accessor for InAppPurchaseLockupViewLayout.Metrics(0, v15);
    sub_10000EFC4(v19, (uint64_t)qword_100864CE0);
    InAppPurchaseLockupViewLayout.Metrics.iconSize.getter();
    v28[0] = a1;
    Conditional.evaluate(with:)(v31, v28, v8);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v21 = v31[0];
    InAppPurchaseLockupViewLayout.Metrics.iconMargin.getter(v28, v20);
    v22 = v29;
    v23 = v30;
    sub_100010F08(v28, v29);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    v24 = AnyDimension.value(in:rounded:)(a1, v7, v22, v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v25 = v21 + v24;
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
    if (qword_1008069D0 != -1)
      swift_once(&qword_1008069D0, sub_100518714);
    v26 = type metadata accessor for Separator(0);
    sub_10000EFC4(v26, (uint64_t)qword_10086AC20);
    return Separator.withLeadingInset(_:)(v25);
  }
}

id sub_1000778A0(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  char *v25;
  char **v26;
  char *v27;
  __n128 v28;
  void (*v29)(char *, char *, uint64_t, __n128);
  char *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  __n128 v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t, __n128);
  int v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  __n128 v46;
  char *v47;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v52;
  double v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  char v60;
  __n128 v61;
  double v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char v72[24];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77[24];
  CGRect v78;
  objc_super v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  v3 = v2;
  v4 = type metadata accessor for InAppPurchaseTheme(0, a2);
  v71 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v69 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v70 = (char *)&v67 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v67 - v9;
  v11 = type metadata accessor for Separator(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (objc_class *)type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
  v79.receiver = v2;
  v79.super_class = v15;
  objc_msgSendSuper2(&v79, "layoutSubviews");
  v16 = objc_msgSend(v2, "contentView");
  v17 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
  v18 = LayoutMarginsAware<>.layoutFrame.getter(v17);
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v78.origin.x = v18;
  v78.origin.y = v20;
  v78.size.width = v22;
  v78.size.height = v24;
  v25 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separatorView];
  v26 = &selRef_fileURLWithPath_;
  if (v25)
  {
    v27 = &v25[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator];
    v28 = swift_beginAccess(&v25[OBJC_IVAR____TtC20ProductPageExtension13SeparatorView_separator], v72, 0, 0);
    v29 = *(void (**)(char *, char *, uint64_t, __n128))(v12 + 16);
    v29(v14, v27, v11, v28);
    v30 = v25;
    v31 = Separator.frame(forBoundingRect:in:)(v30, v18, v20, v22, v24);
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v38 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38(v14, v11);
    objc_msgSend(v30, "setFrame:", v31, v33, v35, v37);
    ((void (*)(char *, char *, uint64_t))v29)(v14, v27, v11);
    v26 = &selRef_fileURLWithPath_;
    CGRect.inset(bySeparator:in:)(v14, v3);

    v38(v14, v11);
  }
  v68 = *(char **)&v3[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_lockupView];
  v39 = &v68[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_theme];
  v40 = swift_beginAccess(&v68[OBJC_IVAR____TtC20ProductPageExtension23InAppPurchaseLockupView_theme], v77, 0, 0);
  v41 = v71;
  v42 = *(void (**)(char *, char *, uint64_t, __n128))(v71 + 16);
  v42(v10, v39, v4, v40);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v10, v4);
  v44 = enum case for InAppPurchaseTheme.spotlight(_:);
  v45 = *(void (**)(char *, uint64_t))(v41 + 8);
  v45(v10, v4);
  v47 = v70;
  if (v43 == (_DWORD)v44)
  {
    x = v78.origin.x;
    y = v78.origin.y;
    width = v78.size.width;
    height = v78.size.height;
    CGRectGetMinX(v78);
    if (qword_1008046C8 != -1)
      swift_once(&qword_1008046C8, sub_100077EF4);
    v80.origin.x = x;
    v80.origin.y = y;
    v80.size.width = width;
    v80.size.height = height;
    CGRectGetMinY(v80);
    v81.origin.x = x;
    v81.origin.y = y;
    v81.size.width = width;
    v81.size.height = height;
    CGRectGetWidth(v81);
    v82.origin.x = x;
    v82.origin.y = y;
    v82.size.width = width;
    v82.size.height = height;
    v46.n128_f64[0] = CGRectGetHeight(v82);
  }
  v52 = *(void **)&v3[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_spotlightView];
  if (v52)
  {
    v53 = v78.origin.x;
    v54 = v52;
    CGRect.withLayoutDirection(in:relativeTo:)(v3, v53);
    objc_msgSend(v54, v26[133]);

  }
  v42(v47, v39, v4, v46);
  v55 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v69, v44, v4);
  v56 = sub_10000E720((unint64_t *)&unk_10080B160, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseTheme, (uint64_t)&protocol conformance descriptor for InAppPurchaseTheme);
  dispatch thunk of RawRepresentable.rawValue.getter(&v75, v4, v56);
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v4, v56);
  v57 = v76;
  v58 = v74;
  if (v75 == v73 && v76 == v74)
  {
    v59 = swift_bridgeObjectRelease_n(v76, 2);
    ((void (*)(char *, uint64_t, __n128))v45)(v55, v4, v59);
    v45(v47, v4);
  }
  else
  {
    v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v76, v73, v74, 0);
    swift_bridgeObjectRelease(v57);
    v61 = swift_bridgeObjectRelease(v58);
    ((void (*)(char *, uint64_t, __n128))v45)(v55, v4, v61);
    v45(v47, v4);
    if ((v60 & 1) == 0)
      goto LABEL_15;
  }
  if (qword_1008046C8 != -1)
    swift_once(&qword_1008046C8, sub_100077EF4);
LABEL_15:
  if (v3[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] == 1
    && qword_1008046C8 != -1)
  {
    swift_once(&qword_1008046C8, sub_100077EF4);
  }
  v62 = v78.origin.x;
  v63 = v78.origin.y;
  v64 = v78.size.width;
  v65 = v78.size.height;
  CGRectGetMinX(v78);
  v83.origin.x = v62;
  v83.origin.y = v63;
  v83.size.width = v64;
  v83.size.height = v65;
  CGRectGetMinY(v83);
  v84.origin.x = v62;
  v84.origin.y = v63;
  v84.size.width = v64;
  v84.size.height = v65;
  CGRectGetWidth(v84);
  v85.origin.x = v62;
  v85.origin.y = v63;
  v85.size.width = v64;
  v85.size.height = v65;
  CGRectGetHeight(v85);
  CGRect.withLayoutDirection(in:relativeTo:)(v3, v62);
  return objc_msgSend(v68, v26[133]);
}

void sub_100077EF4()
{
  qword_100864A90 = 0x4024000000000000;
}

id sub_100077F14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100077FC4()
{
  return type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for InAppPurchaseLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B128;
  if (!qword_10080B128)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppPurchaseLockupCollectionViewCell);
  return result;
}

void sub_100078008(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_1000780CC(319, (unint64_t *)&qword_10080AD00, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = "\b";
    v6[3] = "\b";
    sub_1000780CC(319, (unint64_t *)&unk_10080B140, (uint64_t (*)(uint64_t))&type metadata accessor for Separator);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = &unk_100643B80;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

void sub_1000780CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

id sub_100078118(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_spotlightView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_spotlightView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v8, "_setCornerRadius:", 4.0);
    if (qword_1008046C0 != -1)
      swift_once(&qword_1008046C0, sub_100076FE0);
    objc_msgSend(v8, "setBackgroundColor:", qword_100864A88);
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "insertSubview:atIndex:", v8, 0);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_100078214(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separatorView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension37InAppPurchaseLockupCollectionViewCell_separatorView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "addSubview:", v8);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

double sub_1000782BC(void *a1, char a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  __n128 v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Separator(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v23[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_10007760C(a1, (uint64_t)v15);
  type metadata accessor for InAppPurchaseLockupView(0);
  v16 = sub_1000AF0D8(a1, a3, a4);
  v18 = v16;
  if ((a2 & 1) != 0)
  {
    Separator.verticalOutset.getter(v23);
    v19 = v24;
    v20 = v25;
    sub_100010F08(v23, v24);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19);
    AnyDimension.value(in:rounded:)(a1, v11, v19, v20);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v23);
  }
  else
  {
    v18 = CGSize.adding(separator:in:)(v15, a1, v16, v17);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v18;
}

uint64_t sub_100078490(uint64_t a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  id v24;
  char v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  _QWORD v34[2];

  v34[1] = a1;
  v8 = type metadata accessor for Separator(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Shelf.PresentationHints(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v17 = v16;
  type metadata accessor for InAppPurchaseLockupView(0);
  sub_1000AF0D8(a5, v17, a3);
  v19 = v18;
  static Shelf.PresentationHints.inProductPageSpotlight.getter(v20);
  v21 = sub_10000E720((unint64_t *)&unk_10080B150, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v22 = dispatch thunk of SetAlgebra.isSuperset(of:)(v15, v12, v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((v22 & 1) != 0)
  {
    if (qword_1008046C8 != -1)
      swift_once(&qword_1008046C8, sub_100077EF4);
    v19 = v19 + *(double *)&qword_100864A90 + *(double *)&qword_100864A90;
  }
  sub_10007760C(a5, (uint64_t)v11);
  v23 = Separator.height(in:)(a5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(a5, "pageMarginInsets");
  v24 = objc_msgSend(a5, "traitCollection");
  v25 = UITraitCollection.isSizeClassRegular.getter(v24);

  if ((v25 & 1) != 0 || JUScreenClassGetPortraitWidth(1) >= a2)
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v29 = v30;
  }
  else
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v27 = v26;
    PageTraitEnvironment.pageColumnMargin.getter();
    v29 = v27 - (v28 + v28);
  }
  v31 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutDimension), "absoluteDimension:", v29);
  v32 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(v23, v19);

  return v32;
}

uint64_t sub_100078728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_10080B170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_10080B170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void destroy for ScreenshotDisplayConfiguration(uint64_t a1)
{

}

uint64_t initializeWithCopy for ScreenshotDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for ScreenshotDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for ScreenshotDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ScreenshotDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenshotDisplayConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenshotDisplayConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenshotDisplayConfiguration()
{
  return &type metadata for ScreenshotDisplayConfiguration;
}

void sub_1000789F0()
{
  qword_100864AB8 = 0x4024000000000000;
}

double sub_100078A00()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100011980(v0, qword_100864AC0);
  v1 = sub_10000EFC4(v0, (uint64_t)qword_100864AC0);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

double sub_100078A50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double result;

  if (qword_100804708 != -1)
    swift_once(&qword_100804708, sub_100078BC0);
  v0 = qword_10080B1B8;
  if (qword_100804700 != -1)
    swift_once(&qword_100804700, sub_100078B90);
  v1 = qword_100804710;
  v2 = (id)qword_10080B1B0;
  if (v1 != -1)
    swift_once(&qword_100804710, sub_100078BD0);
  qword_100864AD8 = v0;
  result = *(double *)&xmmword_10080B1C0;
  unk_100864B10 = xmmword_10080B1C0;
  qword_100864AE0 = 0;
  byte_100864AE8 = 1;
  qword_100864AF0 = 0;
  byte_100864AF8 = 1;
  qword_100864B00 = 0x3FF0000000000000;
  qword_100864B08 = (uint64_t)v2;
  unk_100864B20 = *(_OWORD *)algn_10080B1D0;
  return result;
}

void sub_100078B3C()
{
  qword_10080B198 = 0;
}

id sub_100078B48()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  qword_10080B1A0 = (uint64_t)result;
  return result;
}

void sub_100078B80()
{
  qword_10080B1A8 = 0x402E000000000000;
}

uint64_t sub_100078B90()
{
  uint64_t result;

  sub_100035178();
  result = static UIColor.mediaBorder.getter();
  qword_10080B1B0 = result;
  return result;
}

void sub_100078BC0()
{
  qword_10080B1B8 = 0x4014000000000000;
}

__n128 sub_100078BD0()
{
  __n128 result;
  __int128 v1;

  result = *(__n128 *)&UIEdgeInsetsZero.top;
  v1 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  xmmword_10080B1C0 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)algn_10080B1D0 = v1;
  return result;
}

void sub_100078BEC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v11;
  uint64_t v12;

  v2 = type metadata accessor for AppPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MediaPlatform.appPlatform.getter(v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if ((_DWORD)v7 == enum case for AppPlatform.phone(_:)
    || (_DWORD)v7 == enum case for AppPlatform.pad(_:)
    || (_DWORD)v7 == enum case for AppPlatform.messages(_:))
  {
LABEL_4:
    AspectRatio.init(_:_:)(v7);
    return;
  }
  if ((_DWORD)v7 == enum case for AppPlatform.watch(_:))
  {
    if (qword_1008046D8 != -1)
      swift_once(&qword_1008046D8, sub_100078A00);
    v8 = type metadata accessor for AspectRatio(0);
    v9 = sub_10000EFC4(v8, (uint64_t)qword_100864AC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, v9, v8);
  }
  else
  {
    if ((_DWORD)v7 == enum case for AppPlatform.tv(_:) || (_DWORD)v7 == enum case for AppPlatform.mac(_:))
      goto LABEL_4;
    v11 = AspectRatio.init(_:_:)(v7);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v11);
  }
}

void sub_100078D8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t (*v17)(char *, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  double top;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  char v32;
  __n128 v33;
  char v34;
  char v35;
  char v36;
  char v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  char v45;
  double v46;
  __n128 v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v4 = type metadata accessor for AppPlatform(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v53 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  if (a1)
  {
    v16 = swift_retain(a1);
    MediaPlatform.appPlatform.getter(v16);
    v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
    v18 = v17(v15, v4);
    v19 = enum case for AppPlatform.watch(_:);
    v52 = v5;
    if (v18 == enum case for AppPlatform.watch(_:))
    {
      if (qword_1008046E8 != -1)
        swift_once(&qword_1008046E8, sub_100078B3C);
      v20 = qword_10080B198;
      v22 = swift_release();
    }
    else
    {
      if (qword_100804708 != -1)
        swift_once(&qword_100804708, sub_100078BC0);
      v20 = qword_10080B1B8;
      v33 = swift_release();
      v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v15, v4, v33);
    }
    v51 = MediaPlatform.deviceCornerRadiusFactor.getter(v21, v22);
    v35 = v34;
    v50 = MediaPlatform.deviceBorderThickness.getter();
    v37 = v36;
    v38 = swift_retain(a1);
    MediaPlatform.appPlatform.getter(v38);
    v39 = swift_release();
    v31 = 0.0;
    if (((unsigned int (*)(char *, uint64_t, __n128))v17)(v12, v4, v39) != v19)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v4);
      v31 = 1.0;
    }
    v32 = v35 & 1;
    v30 = v37 & 1;
    v40 = swift_retain(a1);
    MediaPlatform.appPlatform.getter(v40);
    if (v17(v9, v4) == v19)
    {
      if (qword_1008046F0 != -1)
        swift_once(&qword_1008046F0, sub_100078B48);
      v27 = (id)qword_10080B1A0;
      swift_release();
    }
    else
    {
      if (qword_100804700 != -1)
        swift_once(&qword_100804700, sub_100078B90);
      v27 = (id)qword_10080B1B0;
      v41 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v9, v4, v41);
    }
    v42 = v53;
    v43 = swift_retain(a1);
    MediaPlatform.appPlatform.getter(v43);
    if (v17(v42, v4) == v19)
    {
      v44 = MediaPlatform.deviceBorderThickness.getter();
      if ((v45 & 1) != 0)
      {
        if (qword_1008046F8 != -1)
          swift_once(&qword_1008046F8, sub_100078B80);
        v48 = *(double *)&qword_10080B1A8;
        if (qword_1008046D8 != -1)
          swift_once(&qword_1008046D8, sub_100078A00);
        v49 = type metadata accessor for AspectRatio(0);
        sub_10000EFC4(v49, (uint64_t)qword_100864AC0);
        top = v48 * AspectRatio.verticalFraction.getter();
        left = *(double *)&qword_10080B1A8;
        swift_release();
        bottom = top;
        right = left;
      }
      else
      {
        v46 = *(double *)&v44;
        swift_release();
        top = v46;
        left = v46;
        bottom = v46;
        right = v46;
      }
    }
    else
    {
      top = UIEdgeInsetsZero.top;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v47 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v42, v4, v47);
    }
    v28 = v50;
    v29 = v51;
  }
  else
  {
    if (qword_100804708 != -1)
      swift_once(&qword_100804708, sub_100078BC0);
    v20 = qword_10080B1B8;
    if (qword_100804700 != -1)
      swift_once(&qword_100804700, sub_100078B90);
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    v27 = (id)qword_10080B1B0;
    v28 = 0;
    v29 = 0;
    v30 = 1;
    v31 = 1.0;
    v32 = 1;
  }
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v29;
  *(_BYTE *)(a2 + 16) = v32;
  *(_QWORD *)(a2 + 24) = v28;
  *(_BYTE *)(a2 + 32) = v30;
  *(double *)(a2 + 40) = v31;
  *(_QWORD *)(a2 + 48) = v27;
  *(double *)(a2 + 56) = top;
  *(CGFloat *)(a2 + 64) = left;
  *(CGFloat *)(a2 + 72) = bottom;
  *(CGFloat *)(a2 + 80) = right;
}

void sub_100079238()
{
  qword_10080B1E0 = 0x4031000000000000;
}

void sub_100079248()
{
  qword_10080B1E8 = 0x4024000000000000;
}

void sub_100079258()
{
  qword_10080B1F0 = 0x404E000000000000;
}

void sub_100079268()
{
  qword_10080B1F8 = 0x4044000000000000;
}

char *sub_100079278(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _QWORD *v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  objc_class *v43;
  id v44;
  void *v45;
  char *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  objc_class *ObjectType;
  objc_super v68;
  _QWORD v69[5];
  _QWORD v70[3];
  uint64_t v71;
  void *v72;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v65 = type metadata accessor for DirectionalTextAlignment(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  *(_QWORD *)&v66 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  v12 = __chkstk_darwin(v11);
  v63 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for WordmarkView.Alignment(0, v12);
  v60 = *(_QWORD *)(v61 - 8);
  v14 = __chkstk_darwin(v61);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FontSource(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DAF8(qword_10080B248);
  __chkstk_darwin(v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView;
  v24 = enum case for Wordmark.arcade(_:);
  v25 = type metadata accessor for Wordmark(0);
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = qword_100804718;
  v62 = v5;
  if (v27 != -1)
    swift_once(&qword_100804718, sub_100079238);
  v28 = *(double *)&qword_10080B1E0;
  if (qword_100806658 != -1)
    swift_once(&qword_100806658, sub_1004C993C);
  v29 = type metadata accessor for FontUseCase(0);
  v30 = sub_10000EFC4(v29, (uint64_t)qword_10086A3E0);
  v31 = *(_QWORD *)(v29 - 8);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v32(v20, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for FontSource.useCase(_:), v17);
  v71 = type metadata accessor for StaticDimension(0);
  v72 = &protocol witness table for StaticDimension;
  sub_1000119C0(v70);
  v69[3] = v17;
  v69[4] = &protocol witness table for FontSource;
  v33 = sub_1000119C0(v69);
  (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v33, v20, v17);
  StaticDimension.init(_:scaledLike:)(v69, v28);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v16, enum case for WordmarkView.Alignment.leading(_:), v61);
  v34 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v35 = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v23, v70, v16, 0.0, 0.0, 0.0, 0.0);
  v36 = v62;
  *(_QWORD *)&v62[v59] = v35;
  v37 = OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel;
  v38 = v63;
  v32(v63, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v29);
  v39 = v66;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v64 + 104))(v66, enum case for DirectionalTextAlignment.none(_:), v65);
  v40 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v36[v37] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v38, 2, 0, 1, 0, v39, 0, 0);
  v41 = OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView;
  v42 = type metadata accessor for ArcadeDownloadPackCategoryListView();
  *(_QWORD *)&v36[v41] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v42)), "init");

  v43 = ObjectType;
  v68.receiver = v36;
  v68.super_class = ObjectType;
  v44 = objc_msgSendSuper2(&v68, "initWithFrame:", a1, a2, a3, a4);
  v45 = (void *)objc_opt_self(UIColor);
  v46 = (char *)v44;
  v47 = objc_msgSend(v45, "systemBackgroundColor");
  objc_msgSend(v46, "setBackgroundColor:", v47);

  objc_msgSend(v46, "addSubview:", *(_QWORD *)&v46[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView]);
  v48 = *(void **)&v46[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  objc_msgSend(v46, "addSubview:", v48);
  objc_msgSend(v46, "addSubview:", *(_QWORD *)&v46[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView]);
  objc_msgSend(v48, "setNumberOfLines:", 0);
  v49 = objc_msgSend(v46, "traitCollection");
  v50 = objc_msgSend(v49, "preferredContentSizeCategory");

  LOBYTE(v49) = UIContentSizeCategory.isAccessibilityCategory.getter(v50);
  if ((v49 & 1) != 0)
    v51 = 4;
  else
    v51 = 1;
  objc_msgSend(v48, "setTextAlignment:", v51);
  v52 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v53 = swift_allocObject(v52, 48, 7);
  v66 = xmmword_100640720;
  *(_OWORD *)(v53 + 16) = xmmword_100640720;
  *(_QWORD *)(v53 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v53 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v71 = (uint64_t)v43;
  v70[0] = v46;
  v54 = v46;
  UIView.registerForTraitChanges(_:target:action:)(v53, v70, "preferredContentSizeCategoryDidChange");
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v53);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
  v55 = swift_allocObject(v52, 48, 7);
  *(_OWORD *)(v55 + 16) = v66;
  *(_QWORD *)(v55 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v55 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v71 = (uint64_t)v43;
  v70[0] = v54;
  v56 = v54;
  UIView.registerForTraitChanges(_:target:action:)(v55, v70, "invalidateMeasurements");
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease(v55);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v70);
  return v56;
}

uint64_t sub_100079954@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double (**v10)(double, double);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  uint64_t v26;
  char *v27;
  id v28;
  __n128 v29;
  void *v30;
  void (*v31)(double (**)(double, double), uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  id v36;
  _QWORD *v37;
  char *v38;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  _QWORD v46[5];
  _QWORD v47[3];
  uint64_t v48;
  void *v49;

  v45 = a1;
  v2 = type metadata accessor for Resize.Rule(0);
  v42 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v44 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v43 = (char *)&v40 - v5;
  __chkstk_darwin(v6);
  v41 = (char *)&v40 - v7;
  __chkstk_darwin(v8);
  v10 = (double (**)(double, double))((char *)&v40 - v9);
  v11 = type metadata accessor for VerticalStack(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - v16;
  __chkstk_darwin(v18);
  v40 = (char *)&v40 - v19;
  v20 = swift_allocObject(&unk_100739F98, 24, 7);
  *(_QWORD *)(v20 + 16) = v1;
  v21 = v1;
  VerticalStack.init(with:)(sub_10007A578, v20, v22);
  v46[0] = *(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView];
  v23 = type metadata accessor for WordmarkView(0);
  Measurable.placeable.getter(v47, v23, &protocol witness table for UIView);
  VerticalStack.adding(_:with:)(v47, sub_10007A580, 0);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v47);
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v14, v11);
  v25 = *(void **)&v21[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  v48 = type metadata accessor for DynamicTypeLabel(0);
  v49 = &protocol witness table for UILabel;
  v47[0] = v25;
  v26 = swift_allocObject(&unk_100739FC0, 24, 7);
  *(_QWORD *)(v26 + 16) = v21;
  v27 = v21;
  v28 = v25;
  VerticalStack.adding(_:with:)(v47, sub_10007A5F4, v26);
  v29 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v24)(v17, v11, v29);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v47);
  v30 = *(void **)&v27[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView];
  v46[3] = type metadata accessor for ArcadeDownloadPackCategoryListView();
  v46[4] = sub_10007A644();
  v46[0] = v30;
  *v10 = sub_100079E4C;
  v10[1] = 0;
  v31 = *(void (**)(double (**)(double, double), uint64_t, uint64_t))(v42 + 104);
  v31(v10, enum case for Resize.Rule.recalculated(_:), v2);
  v32 = enum case for Resize.Rule.unchanged(_:);
  v33 = v41;
  v31((double (**)(double, double))v41, enum case for Resize.Rule.unchanged(_:), v2);
  v34 = v43;
  v31((double (**)(double, double))v43, v32, v2);
  v35 = v44;
  v31((double (**)(double, double))v44, v32, v2);
  v48 = type metadata accessor for Resize(0);
  v49 = &protocol witness table for Resize;
  sub_1000119C0(v47);
  v36 = v30;
  Resize.init(_:width:height:firstBaseline:lastBaseline:)(v46, v10, v33, v34, v35);
  v37 = v45;
  v45[3] = v11;
  v37[4] = &protocol witness table for VerticalStack;
  sub_1000119C0(v37);
  v38 = v40;
  VerticalStack.adding(_:with:)(v47, 0, 0);
  v24(v38, v11);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v47);
}

uint64_t sub_100079CDC(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  return VerticalStack.Properties.alignment.setter((v2 & 1) == 0);
}

double sub_100079D58()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t *v5;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)1
    && (v3 = objc_msgSend(v0, "traitCollection"),
        v4 = objc_msgSend(v3, "horizontalSizeClass"),
        v3,
        v4 == (id)2))
  {
    if (qword_100804728 != -1)
      swift_once(&qword_100804728, sub_100079258);
    v5 = &qword_10080B1F0;
  }
  else
  {
    if (qword_100804730 != -1)
      swift_once(&qword_100804730, sub_100079268);
    v5 = &qword_10080B1F8;
  }
  return *(double *)v5;
}

double sub_100079E4C(double a1, double a2)
{
  return a2;
}

id sub_100079F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v8 = *(void **)&v4[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  ArcadeDownloadPackCategoriesPage.title.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = ArcadeDownloadPackCategoriesPage.categories.getter();
  sub_1004AF90C(v12, a2, a3, a4);
  objc_msgSend(v4, "setNeedsLayout", swift_bridgeObjectRelease(v12).n128_f64[0]);
  objc_msgSend(v4, "invalidateIntrinsicContentSize");
  v13 = objc_msgSend(v4, "traitCollection");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");

  LOBYTE(v13) = UIContentSizeCategory.isAccessibilityCategory.getter(v14);
  if ((v13 & 1) != 0)
    v15 = 4;
  else
    v15 = 1;
  return objc_msgSend(v8, "setTextAlignment:", v15);
}

id sub_10007A054()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "invalidateIntrinsicContentSize");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v2 & 1) != 0)
    v4 = 4;
  else
    v4 = 1;
  return objc_msgSend(v1, "setTextAlignment:", v4);
}

id sub_10007A2DC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v2 & 1) != 0)
    v4 = 4;
  else
    v4 = 1;
  objc_msgSend(v1, "setTextAlignment:", v4);
  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "invalidateIntrinsicContentSize");
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v5, "preferredContentSizeCategory");

  LOBYTE(v5) = UIContentSizeCategory.isAccessibilityCategory.getter(v6);
  if ((v5 & 1) != 0)
    v7 = 4;
  else
    v7 = 1;
  return objc_msgSend(v1, "setTextAlignment:", v7);
}

uint64_t type metadata accessor for ArcadeDownloadPackCategoriesPageView()
{
  return objc_opt_self(_TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView);
}

double sub_10007A488(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_100079954(v10);
  v6 = v11;
  v7 = v12;
  sub_100010F08(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v10);
  return v8;
}

double sub_10007A52C(uint64_t a1, void *a2)
{
  return sub_1004AFFF4(a1, a2);
}

uint64_t sub_10007A554()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007A578(int a1)
{
  uint64_t v1;

  return sub_100079CDC(a1, *(id *)(v1 + 16));
}

uint64_t sub_10007A580()
{
  _QWORD v1[5];

  if (qword_100804720 != -1)
    swift_once(&qword_100804720, sub_100079248);
  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = qword_10080B1E8;
  return VerticalStack.Properties.bottomSpacing.setter(v1);
}

uint64_t sub_10007A5F4()
{
  _QWORD v1[5];

  v1[3] = &type metadata for CGFloat;
  v1[4] = &protocol witness table for CGFloat;
  v1[0] = sub_100079D58();
  return VerticalStack.Properties.bottomSpacing.setter(v1);
}

unint64_t sub_10007A644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B240;
  if (!qword_10080B240)
  {
    v1 = type metadata accessor for ArcadeDownloadPackCategoryListView();
    result = swift_getWitnessTable(&unk_100665E44, v1);
    atomic_store(result, (unint64_t *)&qword_10080B240);
  }
  return result;
}

void sub_10007A68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD v43[5];
  _QWORD v44[6];

  v0 = type metadata accessor for DirectionalTextAlignment(0);
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  __chkstk_darwin(v0);
  v41 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DAF8((uint64_t *)&unk_100808F50);
  v3 = __chkstk_darwin(v2);
  v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WordmarkView.Alignment(0, v3);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FontSource(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(qword_10080B248);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_wordmarkView;
  v16 = enum case for Wordmark.arcade(_:);
  v17 = type metadata accessor for Wordmark(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v15, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  if (qword_100804718 != -1)
    swift_once(&qword_100804718, sub_100079238);
  v19 = *(double *)&qword_10080B1E0;
  if (qword_100806658 != -1)
    swift_once(&qword_100806658, sub_1004C993C);
  v20 = type metadata accessor for FontUseCase(0);
  v21 = sub_10000EFC4(v20, (uint64_t)qword_10086A3E0);
  v22 = *(_QWORD *)(v20 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23(v12, v21, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  v44[3] = type metadata accessor for StaticDimension(0);
  v44[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v44);
  v43[3] = v9;
  v43[4] = &protocol witness table for FontSource;
  v24 = sub_1000119C0(v43);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v24, v12, v9);
  StaticDimension.init(_:scaledLike:)(v43, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v8, enum case for WordmarkView.Alignment.leading(_:), v37);
  v25 = objc_allocWithZone((Class)type metadata accessor for WordmarkView(0));
  v26 = WordmarkView.init(frame:wordmark:referenceLineHeight:alignment:)(v15, v44, v8, 0.0, 0.0, 0.0, 0.0);
  v27 = v42;
  *(_QWORD *)&v42[v35] = v26;
  v28 = OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_titleLabel;
  v29 = v38;
  v23(v38, v21, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v20);
  v30 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, enum case for DirectionalTextAlignment.none(_:), v40);
  v31 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v27[v28] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v29, 2, 0, 1, 0, v30, 0, 0);
  v32 = OBJC_IVAR____TtC20ProductPageExtension36ArcadeDownloadPackCategoriesPageView_categoriesView;
  v33 = type metadata accessor for ArcadeDownloadPackCategoryListView();
  *(_QWORD *)&v27[v32] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v33)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/ArcadeDownloadPackCategoriesPageView.swift", 63, 2, 52, 0);
  __break(1u);
}

uint64_t sub_10007AA98(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 232);
}

char *sub_10007AADC(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  objc_super v21;

  v9 = swift_isaMask & *v4;
  v10 = qword_100864B30;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v4;
  *(_QWORD *)((char *)v4 + v10) = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v14 = (objc_class *)type metadata accessor for TodayBrickCollectionViewCellWithBackground(0, *(_QWORD *)(v9 + 216), *(_QWORD *)(v9 + 224), v13);
  v21.receiver = v12;
  v21.super_class = v14;
  v15 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v16 = *(void **)&v15[qword_100864B30];
  v17 = v15;
  objc_msgSend(v16, "setContentMode:", 4);
  objc_msgSend(v16, "setAccessibilityIgnoresInvertColors:", 1);
  v18 = *(id *)&v17[qword_1008686D0];
  v19 = v16;
  objc_msgSend(v18, "insertSubview:atIndex:", v19, 0);

  return v17;
}

char *sub_10007AC3C(double a1, double a2, double a3, double a4)
{
  return sub_10007AADC(a1, a2, a3, a4);
}

id sub_10007AC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  void *v6;
  objc_super v8;

  v5 = (objc_class *)type metadata accessor for TodayBrickCollectionViewCellWithBackground(0, *(_QWORD *)((swift_isaMask & *v4) + 0xD8), *(_QWORD *)((swift_isaMask & *v4) + 0xE0), a4);
  v8.receiver = v4;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v6 = *(void **)((char *)v4 + qword_100864B30);
  objc_msgSend(*(id *)((char *)v4 + qword_1008686D0), "bounds");
  return objc_msgSend(v6, "setFrame:");
}

void sub_10007ACE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_10007AC5C((uint64_t)v4, v1, v2, v3);

}

uint64_t sub_10007AD1C(uint64_t a1, void *a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  __n128 v18;
  double v19;
  double v20;
  double v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = type metadata accessor for Artwork.Crop(0, a3);
  v4 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AspectRatio(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SmallStoryCardLayout.Metrics(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (objc_class *)objc_msgSend(a2, "traitCollection", v14);
  sub_100402034(v17, (uint64_t)v16, v18);

  v19 = sub_1000DA830(a2);
  SmallStoryCardLayout.Metrics.contentAspectRatio.getter();
  v20 = sub_1000DA830(a2);
  v21 = AspectRatio.height(fromWidth:)(v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v22.n128_f64[0] = (*(double (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v23 = Artwork.crop.getter(v22);
  v24 = Artwork.Crop.preferredContentMode.getter(v23);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v27);
  return Artwork.config(_:mode:prefersLayeredImage:)(v24, 0, v19, v21);
}

uint64_t sub_10007AECC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v6 = v5;
  v9 = swift_isaMask & *v5;
  sub_100403318(a1, a4);
  v10 = objc_msgSend(v5, "traitCollection");
  v11 = *(_QWORD *)(v9 + 216);
  v12 = *(_QWORD *)(v9 + 224);
  v13 = TodayCardMediaWithArtwork.artwork(for:)(v10, v11, v12);

  if (!v13)
  {
    v14 = objc_msgSend(v5, "traitCollection");
    v15 = TodayCardMediaWithArtwork.video(for:)(v14, v11, v12);

    if (!v15)
      return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v6) + 0x100))(a3, a5);
    v13 = Video.preview.getter(v16);
    swift_release();
  }
  swift_retain(v13);
  v18 = (void *)TodayCard.backgroundColor.getter(v17);

  if (!v18)
  {
    v20 = Artwork.backgroundColor.getter(v19);
    if (v20)
    {
      v21 = (void *)v20;
      objc_msgSend(*(id *)((char *)v6 + qword_100864B30), "setBackgroundColor:", v20);

    }
  }
  (*(void (**)(uint64_t, void *, uint64_t))((swift_isaMask & *v6) + 0xF8))(v13, a4, a5);
  return swift_release_n(v13, 2);
}

uint64_t sub_10007B074()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  id v4;
  void *v6;
  _BYTE v7[40];

  v1 = *(void **)(v0 + qword_100864B30);
  objc_msgSend(v1, "setImage:", 0);
  v6 = v1;
  v2 = sub_10007B378();
  v3 = sub_10007B3B4();
  v4 = v1;
  AnyHashable.init<A>(_:)(&v6, v2, v3);
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v7, 1);
  return sub_100018968((uint64_t)v7);
}

double sub_10007B108(uint64_t a1, void *a2, __n128 a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  double result;
  id v12;
  _BYTE v13[40];

  v4 = swift_isaMask & *v3;
  v5 = sub_10007AD1C(a1, a2, a3);
  v12 = *(id *)((char *)v3 + qword_100864B30);
  v6 = sub_10007B378();
  v7 = sub_10007B3B4();
  v8 = v12;
  AnyHashable.init<A>(_:)(&v12, v6, v7);
  v9 = swift_allocObject(&unk_10073A0C0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v3);
  v10 = (_QWORD *)swift_allocObject(&unk_10073A0E8, 40, 7);
  v10[2] = *(_QWORD *)(v4 + 216);
  v10[3] = *(_QWORD *)(v4 + 224);
  v10[4] = v9;
  swift_retain(v9);
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v5, 2, 1, v13, sub_10007B444, v10);
  swift_release();
  swift_release();
  sub_10007B450((uint64_t)v13);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10007B234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  _BYTE v10[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(id *)(Strong + qword_100864B30);

    objc_msgSend(v9, "setImage:", a1);
  }
}

id sub_10007B2B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + qword_100864B30);
  objc_msgSend(v1, "setImage:", 0);
  return objc_msgSend(v1, "setBackgroundColor:", 0);
}

void sub_10007B300()
{
  uint64_t v0;

}

id sub_10007B310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for TodayBrickCollectionViewCellWithBackground(0, *(_QWORD *)((swift_isaMask & *v4) + 0xD8), *(_QWORD *)((swift_isaMask & *v4) + 0xE0), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_10007B35C(uint64_t a1)
{

}

uint64_t type metadata accessor for TodayBrickCollectionViewCellWithBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003C2F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TodayBrickCollectionViewCellWithBackground);
}

unint64_t sub_10007B378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080F950;
  if (!qword_10080F950)
  {
    v1 = objc_opt_self(UIImageView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080F950);
  }
  return result;
}

unint64_t sub_10007B3B4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_10082EBD0;
  if (!qword_10082EBD0)
  {
    v1 = sub_10007B378();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10082EBD0);
  }
  return result;
}

uint64_t sub_10007B3FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007B420()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10007B444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10007B234(a1, a2, a3, a4, *(_QWORD *)(v4 + 32));
}

uint64_t sub_10007B450(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_100809010);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007B490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_navigationActionRegistration;
  v2 = sub_10000DAF8((uint64_t *)&unk_10080B310);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_promptActionRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_infoSettingRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuItemRegistration, 1, 1, v2);
  sub_10007C0D8();
  return v0;
}

uint64_t sub_10007B62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[24];

  v106 = a1;
  v105 = a3;
  v4 = sub_10000DAF8(&qword_10080B500);
  __chkstk_darwin(v4);
  v103 = (uint64_t)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v104 = (char *)&v102 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v102 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v102 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v102 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v102 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v102 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v102 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v102 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v102 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v102 - v33;
  v35 = type metadata accessor for NavigationActionDebugSetting();
  if (swift_dynamicCastClass(a2, v35))
  {
    v36 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_navigationActionRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_navigationActionRegistration, v109, 0, 0);
    sub_100018ADC(v36, (uint64_t)v34, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v38 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37);
    if ((_DWORD)result != 1)
    {
      v40 = a2;
      v108 = a2;
      v41 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
      v42 = type metadata accessor for DebugSetting();
      swift_retain(v40);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v34, v105, &v108, v41, v42);
LABEL_4:
      v44 = swift_release();
      v45 = *(void (**)(char *, uint64_t, __n128))(v38 + 8);
      v46 = v34;
LABEL_8:
      v45(v46, v37, v44);
      return v43;
    }
    __break(1u);
    goto LABEL_40;
  }
  v34 = v104;
  v47 = type metadata accessor for ActionRunnerActionDebugSetting();
  if (swift_dynamicCastClass(a2, v47))
  {
    v48 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, v109, 0, 0);
    sub_100018ADC(v48, (uint64_t)v31, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v49 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v31, 1, v37);
    if ((_DWORD)result != 1)
    {
      v108 = a2;
      v50 = a2;
      v51 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
      v52 = type metadata accessor for DebugSetting();
      swift_retain(v50);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v31, v105, &v108, v51, v52);
      v44 = swift_release();
      v45 = *(void (**)(char *, uint64_t, __n128))(v49 + 8);
      v46 = v31;
      goto LABEL_8;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v53 = type metadata accessor for ActionDebugSetting();
  if (swift_dynamicCastClass(a2, v53))
  {
    v54 = a2;
    v55 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRegistration, v109, 0, 0);
    sub_100018ADC(v55, (uint64_t)v28, &qword_10080B500);
    v56 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v57 = *(_QWORD *)(v56 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48))(v28, 1, v56);
    if ((_DWORD)result != 1)
    {
      v108 = v54;
      v58 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
      v59 = type metadata accessor for DebugSetting();
      swift_retain(v54);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v28, v105, &v108, v58, v59);
      v60 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v28, v56, v60);
      return v43;
    }
    goto LABEL_41;
  }
  v61 = type metadata accessor for StringUserDefaultsDebugSetting();
  if (swift_dynamicCastClass(a2, v61))
  {
    v62 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, v109, 0, 0);
    v63 = v25;
    sub_100018ADC(v62, (uint64_t)v25, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v64 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48))(v25, 1, v37);
    if ((_DWORD)result != 1)
    {
      v108 = a2;
      v65 = a2;
      v66 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
      v67 = type metadata accessor for DebugSetting();
      swift_retain(v65);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v63, v105, &v108, v66, v67);
      v44 = swift_release();
      v45 = *(void (**)(char *, uint64_t, __n128))(v64 + 8);
      v46 = v63;
      goto LABEL_8;
    }
    goto LABEL_42;
  }
  v68 = type metadata accessor for BoolUserDefaultsDebugSetting();
  if (swift_dynamicCastClass(a2, v68))
  {
    v69 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, v109, 0, 0);
    v13 = v22;
    sub_100018ADC(v69, (uint64_t)v22, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v70 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48))(v13, 1, v37);
    if ((_DWORD)result == 1)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    goto LABEL_18;
  }
  v73 = type metadata accessor for StringPreferencesDebugSetting(0);
  if (swift_dynamicCastClass(a2, v73))
  {
    v72 = a2;
    v74 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, v109, 0, 0);
    v13 = v19;
    sub_100018ADC(v74, (uint64_t)v19, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v70 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48))(v13, 1, v37);
    if ((_DWORD)result == 1)
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v108 = v72;
    v71 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
LABEL_22:
    v75 = v71;
    v76 = type metadata accessor for DebugSetting();
    swift_retain(v72);
    v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v13, v105, &v108, v75, v76);
    v44 = swift_release();
    v45 = *(void (**)(char *, uint64_t, __n128))(v70 + 8);
    v46 = v13;
    goto LABEL_8;
  }
  v77 = type metadata accessor for BoolPreferencesDebugSetting(0);
  if (swift_dynamicCastClass(a2, v77))
  {
    v78 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, v109, 0, 0);
    v13 = v16;
    sub_100018ADC(v78, (uint64_t)v16, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v70 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v16, 1, v37) != 1)
      goto LABEL_18;
    __break(1u);
  }
  v79 = type metadata accessor for PromptActionDebugSetting();
  if (!swift_dynamicCastClass(a2, v79))
    goto LABEL_29;
  v80 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_promptActionRegistration;
  swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_promptActionRegistration, v109, 0, 0);
  sub_100018ADC(v80, (uint64_t)v13, &qword_10080B500);
  v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
  v70 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v13, 1, v37) != 1)
  {
LABEL_18:
    v108 = a2;
    v71 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
    v72 = a2;
    goto LABEL_22;
  }
  __break(1u);
LABEL_29:
  v81 = type metadata accessor for InfoDebugSetting();
  v82 = swift_dynamicCastClass(a2, v81);
  v83 = v107;
  if (v82)
  {
    v84 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_infoSettingRegistration;
    swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_infoSettingRegistration, v109, 0, 0);
    sub_100018ADC(v84, (uint64_t)v10, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v85 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48))(v10, 1, v37);
    if ((_DWORD)result != 1)
    {
      v108 = a2;
      v86 = a2;
      v87 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
      v88 = type metadata accessor for DebugSetting();
      swift_retain(v86);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v10, v105, &v108, v87, v88);
      v44 = swift_release();
      v45 = *(void (**)(char *, uint64_t, __n128))(v85 + 8);
      v46 = v10;
      goto LABEL_8;
    }
    goto LABEL_45;
  }
  v89 = type metadata accessor for MenuDebugSetting();
  if (swift_dynamicCastClass(a2, v89))
  {
    v90 = v83 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuRegistration;
    swift_beginAccess(v90, v109, 0, 0);
    sub_100018ADC(v90, (uint64_t)v34, &qword_10080B500);
    v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
    v38 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37);
    if ((_DWORD)result != 1)
    {
      v108 = a2;
      v91 = a2;
      v92 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
      v93 = type metadata accessor for DebugSetting();
      swift_retain(v91);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v34, v105, &v108, v92, v93);
      goto LABEL_4;
    }
    goto LABEL_46;
  }
  v94 = type metadata accessor for MenuItemDebugSetting();
  v95 = a2;
  if (!swift_dynamicCastClass(a2, v94))
    return 0;
  v96 = v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuItemRegistration;
  swift_beginAccess(v107 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuItemRegistration, v109, 0, 0);
  v97 = v103;
  sub_100018ADC(v96, v103, &qword_10080B500);
  v37 = sub_10000DAF8((uint64_t *)&unk_10080B310);
  v98 = *(_QWORD *)(v37 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v97, 1, v37);
  if ((_DWORD)result != 1)
  {
    v108 = v95;
    v99 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
    v100 = type metadata accessor for DebugSetting();
    swift_retain(v95);
    v101 = v103;
    v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v103, v105, &v108, v99, v100);
    v44 = swift_release();
    v45 = *(void (**)(char *, uint64_t, __n128))(v98 + 8);
    v46 = (char *)v101;
    goto LABEL_8;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_10007C0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v29[24];

  v1 = sub_10000DAF8(&qword_10080B500);
  __chkstk_darwin(v1);
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v29[-v5 - 8];
  v7 = sub_100018B6C(0, &qword_10080B508, UICollectionViewListCell_ptr);
  v8 = type metadata accessor for DebugSetting();
  UICollectionView.CellRegistration.init(handler:)(sub_10007C6F4, 0, v7, v8);
  v9 = sub_10000DAF8((uint64_t *)&unk_10080B310);
  v10 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v11 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_navigationActionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_navigationActionRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v11);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007CA00, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v12 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v12);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007CB0C, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v13 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v13);
  swift_endAccess(v29);
  v14 = *(void **)(v0 + 16);
  v15 = swift_allocObject(&unk_10073A138, 24, 7);
  *(_QWORD *)(v15 + 16) = v14;
  v16 = v14;
  UICollectionView.CellRegistration.init(handler:)(sub_10007ECB0, v15, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v17 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v17);
  swift_endAccess(v29);
  v18 = swift_allocObject(&unk_10073A160, 24, 7);
  *(_QWORD *)(v18 + 16) = v16;
  v19 = v16;
  UICollectionView.CellRegistration.init(handler:)(sub_10007ECB8, v18, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v20 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v20);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007D5F8, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v21 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v21);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007D900, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v22 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v22);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007DE8C, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v23 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_promptActionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_promptActionRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v23);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007E1E4, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v24 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_infoSettingRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_infoSettingRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v24);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007E30C, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v25 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuRegistration, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v25);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_10007E704, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10002548C((uint64_t)v6, (uint64_t)v3, &qword_10080B500);
  v26 = v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuItemRegistration;
  swift_beginAccess(v26, v29, 33, 0);
  sub_10007EC44((uint64_t)v3, v26);
  return swift_endAccess(v29);
}

uint64_t sub_10007C6F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(__n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD v50[5];

  v5 = sub_10000DAF8(&qword_10080B510);
  v6 = __chkstk_darwin(v5);
  v48 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v49 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v47 - 8);
  v13 = __chkstk_darwin(v47);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIListContentConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  v21 = type metadata accessor for NavigationActionDebugSetting();
  result = swift_dynamicCastClass(v20, v21);
  if (result)
  {
    v23 = (_QWORD *)result;
    v45 = v8;
    v46 = a1;
    v44[1] = v20;
    v24 = swift_retain(v20);
    static UIListContentConfiguration.valueCell()(v24);
    v25 = v23[7];
    v26 = v23[8];
    v27 = swift_bridgeObjectRetain(v26);
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = (uint64_t (*)(__n128))v23[9];
    if (v28)
    {
      v29 = v23[10];
      v30 = swift_retain(v29);
      v31 = v28(v30);
      v33 = v32;
      sub_100018908((uint64_t)v28, v29);
    }
    else
    {
      v31 = 0;
      v33 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v31, v33);
    v50[3] = v16;
    v50[4] = &protocol witness table for UIListContentConfiguration;
    v34 = sub_1000119C0(v50);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v34, v19, v16);
    UICollectionViewCell.contentConfiguration.setter(v50);
    v35 = sub_10000DAF8(&qword_10080B518);
    v36 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72), *(unsigned __int8 *)(v36 + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_100640720;
    v44[0] = v17;
    v38 = v12;
    v39 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v40 = v47;
    v39(v15, enum case for UICellAccessory.DisplayedState.always(_:), v47);
    v41 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v42 = v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v48, 1, 1, v41);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v42, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v45);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v40);
    UICollectionViewListCell.accessories.setter(v37);
    v43 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v44[0] + 8))(v19, v16, v43);
  }
  return result;
}

uint64_t sub_10007CA00(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;
  __n128 v18;
  _QWORD v20[5];

  v5 = type metadata accessor for UIListContentConfiguration(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a4;
  v10 = type metadata accessor for ActionRunnerActionDebugSetting();
  result = swift_dynamicCastClass(v9, v10);
  if (result)
  {
    v12 = result;
    v13 = swift_retain(v9);
    static UIListContentConfiguration.valueCell()(v13);
    v15 = *(_QWORD *)(v12 + 56);
    v14 = *(_QWORD *)(v12 + 64);
    v16 = swift_bridgeObjectRetain(v14);
    UIListContentConfiguration.text.setter(v15, v14, v16);
    v20[3] = v5;
    v20[4] = &protocol witness table for UIListContentConfiguration;
    v17 = sub_1000119C0(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v17, v8, v5);
    UICollectionViewCell.contentConfiguration.setter(v20);
    v18 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v18);
  }
  return result;
}

uint64_t sub_10007CB0C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(__n128);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  _QWORD v26[5];

  v5 = type metadata accessor for UIListContentConfiguration(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a4;
  v10 = type metadata accessor for ActionDebugSetting();
  result = swift_dynamicCastClass(v9, v10);
  if (result)
  {
    v12 = (_QWORD *)result;
    v13 = swift_retain(v9);
    static UIListContentConfiguration.valueCell()(v13);
    v14 = v12[7];
    v15 = v12[8];
    v16 = swift_bridgeObjectRetain(v15);
    UIListContentConfiguration.text.setter(v14, v15, v16);
    v17 = (uint64_t (*)(__n128))v12[11];
    if (v17)
    {
      v18 = v12[12];
      v19 = swift_retain(v18);
      v20 = v17(v19);
      v22 = v21;
      sub_100018908((uint64_t)v17, v18);
    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v20, v22);
    v26[3] = v5;
    v26[4] = &protocol witness table for UIListContentConfiguration;
    v23 = sub_1000119C0(v26);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v23, v8, v5);
    UICollectionViewCell.contentConfiguration.setter(v26);
    v24 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v24);
  }
  return result;
}

uint64_t sub_10007CC6C(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  NSString v31;
  id v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  _QWORD v54[3];
  uint64_t v55;
  void *v56;
  _OWORD v57[2];

  v7 = sub_10000DAF8(&qword_10080B510);
  v8 = __chkstk_darwin(v7);
  v49 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v8);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellAccessory.DisplayedState(0, v11);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIListContentConfiguration(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a3;
  v23 = type metadata accessor for StringUserDefaultsDebugSetting();
  result = swift_dynamicCastClass(v22, v23);
  if (result)
  {
    v25 = (_QWORD *)result;
    v52 = a1;
    v46 = v22;
    v26 = swift_retain(v22);
    static UIListContentConfiguration.valueCell()(v26);
    v27 = v25[7];
    v28 = v25[8];
    v29 = swift_bridgeObjectRetain(v28);
    UIListContentConfiguration.text.setter(v27, v28, v29);
    v30 = v25[10];
    swift_bridgeObjectRetain(v30);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(a4, "valueForKey:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

    if (v32)
    {
      _bridgeAnyObjectToAny(_:)(v57, v32);
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v57, 0, sizeof(v57));
    }
    sub_10002548C((uint64_t)v57, (uint64_t)v54, &qword_100808F20);
    if (v55)
    {
      v33 = swift_dynamicCast(v53, v54, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      v34 = v33 == 0;
      if (v33)
        v35 = v53[0];
      else
        v35 = 0;
      if (v34)
        v36 = 0;
      else
        v36 = v53[1];
    }
    else
    {
      sub_100010F2C((uint64_t)v54, &qword_100808F20);
      v35 = 0;
      v36 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v35, v36);
    v55 = v18;
    v56 = &protocol witness table for UIListContentConfiguration;
    v37 = sub_1000119C0(v54);
    (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 16))(v37, v21, v18);
    UICollectionViewCell.contentConfiguration.setter(v54);
    v38 = sub_10000DAF8(&qword_10080B518);
    v39 = type metadata accessor for UICellAccessory(0);
    v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
    *(_OWORD *)(v40 + 16) = xmmword_100640720;
    v42 = v47;
    v41 = v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v17, enum case for UICellAccessory.DisplayedState.always(_:), v48);
    v43 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v44 = v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v49, 1, 1, v43);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v44, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v17, v13);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v51);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v41);
    UICollectionViewListCell.accessories.setter(v40);
    v45 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v19 + 8))(v21, v18, v45);
  }
  return result;
}

uint64_t sub_10007D004(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _OWORD v63[2];
  _QWORD v64[3];
  uint64_t v65;
  void *v66;

  v7 = sub_10000DAF8(&qword_10080B510);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.Placement(0, v8);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v12);
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  v16 = __chkstk_darwin(v15);
  v57 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIListContentConfiguration(0, v16);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a3;
  v23 = type metadata accessor for BoolUserDefaultsDebugSetting();
  result = swift_dynamicCastClass(v22, v23);
  if (result)
  {
    v25 = result;
    v55 = v10;
    v26 = swift_retain(v22);
    static UIListContentConfiguration.cell()(v26);
    v27 = v19;
    v28 = *(_QWORD *)(v25 + 56);
    v29 = *(_QWORD *)(v25 + 64);
    v30 = swift_bridgeObjectRetain(v29);
    UIListContentConfiguration.text.setter(v28, v29, v30);
    v65 = v18;
    v66 = &protocol witness table for UIListContentConfiguration;
    v31 = sub_1000119C0(v64);
    v53 = v27;
    (*(void (**)(_QWORD *, char *, uint64_t))(v27 + 16))(v31, v21, v18);
    v56 = a1;
    UICollectionViewCell.contentConfiguration.setter(v64);
    v32 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v33 = *(_QWORD *)(v25 + 88);
    swift_bridgeObjectRetain(v33);
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(a4, "objectForKey:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

    if (v35)
    {
      _bridgeAnyObjectToAny(_:)(v63, v35);
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v63, 0, sizeof(v63));
    }
    sub_10002548C((uint64_t)v63, (uint64_t)v64, &qword_100808F20);
    v54 = v18;
    if (v65)
    {
      v36 = sub_100018B6C(0, (unint64_t *)&qword_100809540, NSNumber_ptr);
      if ((swift_dynamicCast(&v62, v64, (char *)&type metadata for Any + 8, v36, 6) & 1) != 0)
      {
        v37 = v62;
        objc_msgSend(v32, "setOn:", objc_msgSend(v62, "BOOLValue"));

LABEL_10:
        sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
        v38 = swift_allocObject(&unk_10073A188, 24, 7);
        swift_unknownObjectWeakInit(v38 + 16, v32);
        v39 = (_QWORD *)swift_allocObject(&unk_10073A1D8, 40, 7);
        v39[2] = v38;
        v39[3] = a4;
        v39[4] = v25;
        swift_retain(v22);
        v40 = a4;
        v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v41, 0, 0, 0, sub_10007EFE4, v39);
        objc_msgSend(v32, "addAction:forControlEvents:", v42, 0x2000);
        v43 = sub_10000DAF8(&qword_10080B518);
        v44 = type metadata accessor for UICellAccessory(0);
        v45 = swift_allocObject(v43, ((*(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80) | 7);
        *(_OWORD *)(v45 + 16) = xmmword_100640720;
        v46 = (uint64_t (**)())&v14[*(int *)(sub_10000DAF8(&qword_10080B530) + 48)];
        v47 = enum case for UICellAccessory.DisplayedState.always(_:);
        v49 = type metadata accessor for UICellAccessory.DisplayedState(0, v48);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v14, v47, v49);
        *v46 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        v46[1] = 0;
        (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v14, enum case for UICellAccessory.Placement.trailing(_:), v59);
        v50 = type metadata accessor for UICellAccessory.LayoutDimension(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v55, 1, 1, v50);
        v51 = v32;
        v52 = v57;
        UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
        static UICellAccessory.customView(configuration:)(v52);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v52, v61);
        UICollectionViewListCell.accessories.setter(v45);

        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v21, v54);
      }
    }
    else
    {
      sub_100010F2C((uint64_t)v64, &qword_100808F20);
    }
    objc_msgSend(v32, "setOn:", *(unsigned __int8 *)(v25 + 72));
    goto LABEL_10;
  }
  return result;
}

void sub_10007D51C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  void *Strong;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  _BYTE v12[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(Strong, "isOn");
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a3, "setBool:forKey:", v9, v10);

    if (*(_BYTE *)(a4 + 96) == 1)
    {
      v11 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
      objc_msgSend(v11, "notify");

    }
  }
}

uint64_t sub_10007D5F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  _QWORD v41[3];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];

  v5 = sub_10000DAF8(&qword_10080B510);
  v6 = __chkstk_darwin(v5);
  v43 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v42 - 8);
  v13 = __chkstk_darwin(v42);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIListContentConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  v21 = type metadata accessor for StringPreferencesDebugSetting(0);
  result = swift_dynamicCastClass(v20, v21);
  if (result)
  {
    v23 = result;
    v24 = swift_retain(v20);
    static UIListContentConfiguration.valueCell()(v24);
    v41[1] = a1;
    v41[2] = v20;
    v25 = *(_QWORD *)(v23 + 56);
    v26 = *(_QWORD *)(v23 + 64);
    v27 = swift_bridgeObjectRetain(v26);
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = *(_QWORD *)(v23 + OBJC_IVAR____TtC20ProductPageExtension29StringPreferencesDebugSetting_preferences + 8);
    ObjectType = swift_getObjectType();
    Preferences.subscript.getter(v46, v23 + OBJC_IVAR____TtC20ProductPageExtension29StringPreferencesDebugSetting_key, ObjectType, &type metadata for String, v28);
    UIListContentConfiguration.secondaryText.setter(v46[0], v46[1]);
    v46[3] = v16;
    v46[4] = &protocol witness table for UIListContentConfiguration;
    v30 = sub_1000119C0(v46);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v30, v19, v16);
    UICollectionViewCell.contentConfiguration.setter(v46);
    v31 = sub_10000DAF8(&qword_10080B518);
    v32 = type metadata accessor for UICellAccessory(0);
    v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) | 7);
    *(_OWORD *)(v33 + 16) = xmmword_100640720;
    v34 = v17;
    v35 = v12;
    v36 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v37 = v42;
    v36(v15, enum case for UICellAccessory.DisplayedState.always(_:), v42);
    v38 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v39 = v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v43, 1, 1, v38);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v39, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v37);
    UICollectionViewListCell.accessories.setter(v33);
    v40 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v34 + 8))(v19, v16, v40);
  }
  return result;
}

uint64_t sub_10007D900(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)();
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];

  v5 = sub_10000DAF8(&qword_10080B510);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.Placement(0, v6);
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v10);
  v56 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UIListContentConfiguration(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a3;
  v22 = type metadata accessor for BoolPreferencesDebugSetting(0);
  result = swift_dynamicCastClass(v21, v22);
  if (result)
  {
    v24 = result;
    v52 = v8;
    v25 = swift_retain(v21);
    static UIListContentConfiguration.cell()(v25);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = *(_QWORD *)(v24 + 64);
    v28 = swift_bridgeObjectRetain(v27);
    UIListContentConfiguration.text.setter(v26, v27, v28);
    v29 = *(_QWORD *)(v24 + 72);
    v30 = *(_QWORD *)(v24 + 80);
    swift_bridgeObjectRetain(v30);
    UIListContentConfiguration.secondaryText.setter(v29, v30);
    v58[3] = v17;
    v58[4] = &protocol witness table for UIListContentConfiguration;
    v31 = sub_1000119C0(v58);
    v50 = v18;
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v31, v20, v17);
    UICollectionViewCell.contentConfiguration.setter(v58);
    v32 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v33 = *(_QWORD *)(v24 + OBJC_IVAR____TtC20ProductPageExtension27BoolPreferencesDebugSetting_preferences + 8);
    ObjectType = swift_getObjectType();
    Preferences.subscript.getter(v58, v24 + OBJC_IVAR____TtC20ProductPageExtension27BoolPreferencesDebugSetting_key, ObjectType, &type metadata for Bool, v33);
    v53 = a1;
    v51 = v17;
    if (LOBYTE(v58[0]) == 2)
      v35 = *(unsigned __int8 *)(v24 + 88);
    else
      v35 = v58[0] & 1;
    objc_msgSend(v32, "setOn:", v35);
    sub_100018B6C(0, (unint64_t *)&qword_10081E050, UIAction_ptr);
    v36 = swift_allocObject(&unk_10073A188, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v32);
    v37 = swift_allocObject(&unk_10073A1B0, 32, 7);
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = v24;
    v38 = swift_retain(v21);
    v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v38, 0, 0, 0, sub_10007EFA8, v37);
    objc_msgSend(v32, "addAction:forControlEvents:", v39, 0x2000);
    v40 = sub_10000DAF8(&qword_10080B518);
    v41 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v42 = swift_allocObject(v40, ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72), *(unsigned __int8 *)(v41 + 80) | 7);
    *(_OWORD *)(v42 + 16) = xmmword_100640720;
    v43 = (uint64_t (**)())&v12[*(int *)(sub_10000DAF8(&qword_10080B530) + 48)];
    v44 = enum case for UICellAccessory.DisplayedState.always(_:);
    v46 = type metadata accessor for UICellAccessory.DisplayedState(0, v45);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v12, v44, v46);
    *v43 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v43[1] = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v12, enum case for UICellAccessory.Placement.trailing(_:), v55);
    v47 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v52, 1, 1, v47);
    v48 = v32;
    UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
    static UICellAccessory.customView(configuration:)(v16);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v57);
    UICollectionViewListCell.accessories.setter(v42);

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v20, v51);
  }
  return result;
}

void sub_10007DD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  _BYTE v14[24];

  v5 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC20ProductPageExtension27BoolPreferencesDebugSetting_preferences + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3 + OBJC_IVAR____TtC20ProductPageExtension27BoolPreferencesDebugSetting_key, v5);
    HIBYTE(v13) = objc_msgSend(v10, "isOn");
    Preferences.subscript.setter((char *)&v13 + 7, v8, ObjectType, &type metadata for Bool, v11);

  }
}

uint64_t sub_10007DE8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(__n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, _QWORD);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD v54[5];

  v5 = sub_10000DAF8(&qword_10080B510);
  v6 = __chkstk_darwin(v5);
  v52 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v53 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v51 - 8);
  v13 = __chkstk_darwin(v51);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIListContentConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  v21 = type metadata accessor for PromptActionDebugSetting();
  result = swift_dynamicCastClass(v20, v21);
  if (result)
  {
    v23 = (_QWORD *)result;
    v49 = v8;
    v50 = a1;
    v48[1] = v20;
    v24 = swift_retain(v20);
    static UIListContentConfiguration.valueCell()(v24);
    v25 = v23[7];
    v26 = v23[8];
    v27 = swift_bridgeObjectRetain(v26);
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = (uint64_t (*)(__n128))v23[9];
    if (v28)
    {
      v29 = v23[10];
      v30 = swift_retain(v29);
      v31 = v28(v30);
      v33 = v32;
      sub_100018908((uint64_t)v28, v29);
    }
    else
    {
      v31 = 0;
      v33 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v31, v33);
    v34 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v35 = static UIColor.appTint.getter(v34);
    v36 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v54);
    UIListContentConfiguration.TextProperties.color.setter(v35);
    v36(v54, 0);
    v54[3] = v16;
    v54[4] = &protocol witness table for UIListContentConfiguration;
    v37 = sub_1000119C0(v54);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v37, v19, v16);
    UICollectionViewCell.contentConfiguration.setter(v54);
    v38 = sub_10000DAF8(&qword_10080B518);
    v39 = type metadata accessor for UICellAccessory(0);
    v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
    *(_OWORD *)(v40 + 16) = xmmword_100640720;
    v48[0] = v16;
    v41 = v17;
    v42 = v12;
    v43 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v44 = v51;
    v43(v15, enum case for UICellAccessory.DisplayedState.always(_:), v51);
    v45 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v46 = v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v52, 1, 1, v45);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v46, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v49);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v44);
    UICollectionViewListCell.accessories.setter(v40);
    v47 = swift_release();
    return (*(uint64_t (**)(char *, _QWORD, __n128))(v41 + 8))(v19, v48[0], v47);
  }
  return result;
}

uint64_t sub_10007E1E4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  _QWORD v22[5];

  v5 = type metadata accessor for UIListContentConfiguration(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a4;
  v10 = type metadata accessor for InfoDebugSetting();
  result = swift_dynamicCastClass(v9, v10);
  if (result)
  {
    v12 = (_QWORD *)result;
    v13 = swift_retain(v9);
    static UIListContentConfiguration.valueCell()(v13);
    v14 = v12[7];
    v15 = v12[8];
    v16 = swift_bridgeObjectRetain(v15);
    UIListContentConfiguration.text.setter(v14, v15, v16);
    v17 = v12[9];
    v18 = v12[10];
    swift_bridgeObjectRetain(v18);
    UIListContentConfiguration.secondaryText.setter(v17, v18);
    v22[3] = v5;
    v22[4] = &protocol witness table for UIListContentConfiguration;
    v19 = sub_1000119C0(v22);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v19, v8, v5);
    UICollectionViewCell.contentConfiguration.setter(v22);
    v20 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v20);
  }
  return result;
}

uint64_t sub_10007E30C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, _QWORD);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[6];

  v5 = type metadata accessor for UICellAccessory.DisplayedState(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_10080B510);
  __chkstk_darwin(v9);
  v56 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10080B520);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v12);
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UIListContentConfiguration(0, v16);
  v59 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a4;
  v23 = type metadata accessor for MenuDebugSetting();
  result = swift_dynamicCastClass(v22, v23);
  if (result)
  {
    v25 = (_QWORD *)result;
    v54 = v6;
    v55 = v5;
    v26 = swift_retain(v22);
    static UIListContentConfiguration.valueCell()(v26);
    v27 = v25[7];
    v28 = v25[8];
    v29 = swift_bridgeObjectRetain(v28);
    UIListContentConfiguration.text.setter(v27, v28, v29);
    v30 = v25[9];
    swift_retain(v22);
    swift_bridgeObjectRetain(v30);
    v32 = sub_10007ECC0(v31, (uint64_t)v25);
    swift_bridgeObjectRelease(v30);
    swift_release();
    v53 = v8;
    if (v32)
    {
      v33 = *(_QWORD *)(v32 + 56);
      v34 = *(_QWORD *)(v32 + 64);
      swift_bridgeObjectRetain(v34);
      swift_release();
    }
    else
    {
      v33 = 0;
      v34 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v33, v34);
    v35 = sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v36 = static UIColor.appTint.getter(v35);
    v37 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v60);
    UIListContentConfiguration.TextProperties.color.setter(v36);
    v37(v60, 0);
    v60[3] = v19;
    v60[4] = &protocol witness table for UIListContentConfiguration;
    v38 = sub_1000119C0(v60);
    v52 = v19;
    (*(void (**)(_QWORD *, char *, uint64_t))(v59 + 16))(v38, v21, v19);
    UICollectionViewCell.contentConfiguration.setter(v60);
    v39 = sub_10000DAF8(&qword_10080B518);
    v40 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72), *(unsigned __int8 *)(v40 + 80) | 7);
    *(_OWORD *)(v41 + 16) = xmmword_100640720;
    v42 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
    v43 = v14;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v14, 1, 1, v42);
    v44 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v45 = v56;
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v56, 1, 1, v44);
    v47 = static UIColor.tertiaryText.getter(v46);
    UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v43, 2, v45, v47);
    v49 = v53;
    v48 = v54;
    v50 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, enum case for UICellAccessory.DisplayedState.always(_:), v55);
    static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v49, v18, 0, 0);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
    UICollectionViewListCell.accessories.setter(v41);
    v51 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v59 + 8))(v21, v52, v51);
  }
  return result;
}

uint64_t sub_10007E704(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];

  v4 = sub_10000DAF8(&qword_10080B510);
  v5 = __chkstk_darwin(v4);
  v40 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v5);
  v41 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UICellAccessory.DisplayedState(0, v8);
  v42 = *(_QWORD *)(v39 - 8);
  v11 = __chkstk_darwin(v39);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIListContentConfiguration(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a3;
  v19 = type metadata accessor for MenuItemDebugSetting();
  result = swift_dynamicCastClass(v18, v19);
  if (result)
  {
    v21 = result;
    v38 = v7;
    v22 = swift_retain(v18);
    static UIListContentConfiguration.cell()(v22);
    v23 = *(_QWORD *)(v21 + 56);
    v24 = *(_QWORD *)(v21 + 64);
    v25 = swift_bridgeObjectRetain(v24);
    UIListContentConfiguration.text.setter(v23, v24, v25);
    v43[3] = v14;
    v43[4] = &protocol witness table for UIListContentConfiguration;
    v26 = sub_1000119C0(v43);
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v26, v17, v14);
    UICollectionViewCell.contentConfiguration.setter(v43);
    if (*(_BYTE *)(v21 + 72) == 1)
    {
      v27 = sub_10000DAF8(&qword_10080B518);
      v28 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v29 = *(_QWORD *)(v28 + 72);
      v30 = *(unsigned __int8 *)(v28 + 80);
      v31 = (v30 + 32) & ~v30;
      v32 = (_QWORD *)swift_allocObject(v27, v31 + v29, v30 | 7);
      *((_OWORD *)v32 + 1) = xmmword_100640720;
      v37[1] = (char *)v32 + v31;
      v33 = v39;
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v13, enum case for UICellAccessory.DisplayedState.always(_:), v39);
      v34 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v35 = v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v40, 1, 1, v34);
      UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v35, 0);
      static UICellAccessory.checkmark(displayed:options:)(v13, v10);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v38);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v33);
    }
    else
    {
      v32 = _swiftEmptyArrayStorage;
    }
    UICollectionViewListCell.accessories.setter(v32);
    v36 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v36);
  }
  return result;
}

uint64_t sub_10007E9EC()
{
  uint64_t v0;

  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_navigationActionRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_actionRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_promptActionRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_infoSettingRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuRegistration, &qword_10080B500);
  sub_100010F2C(v0 + OBJC_IVAR____TtC20ProductPageExtension29DebugSettingCellRegistrations_menuItemRegistration, &qword_10080B500);
  return v0;
}

uint64_t sub_10007EAF4()
{
  uint64_t v0;

  sub_10007E9EC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10007EB18()
{
  return type metadata accessor for DebugSettingCellRegistrations(0);
}

uint64_t type metadata accessor for DebugSettingCellRegistrations(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B2F8;
  if (!qword_10080B2F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugSettingCellRegistrations);
  return result;
}

void sub_10007EB5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10007EBEC(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = v5;
    v9 = v5;
    v10 = v5;
    v11 = v5;
    v12 = v5;
    v13 = v5;
    v14 = v5;
    v15 = v5;
    swift_updateClassMetadata2(a1, 256, 12, &v4, a1 + 80);
  }
}

void sub_10007EBEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080B308)
  {
    v2 = sub_100010DE0((uint64_t *)&unk_10080B310);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080B308);
  }
}

uint64_t sub_10007EC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10080B500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007EC8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007ECB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_10007CC6C(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_10007ECB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_10007D004(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_10007ECC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v14)(_QWORD *__return_ptr, uint64_t);
  _OWORD v15[2];
  uint64_t v16;
  _BYTE v17[40];
  _BYTE v18[24];
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[5];
  _BYTE v24[48];
  unint64_t v25;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v25 = a1 & 0xC000000000000001;
    v5 = *(void (**)(_QWORD *__return_ptr, uint64_t))(a2 + 80);
    a2 = *(_QWORD *)(a2 + 88);
    v14 = v5;
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if (!v25)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_20;
LABEL_12:
      v10 = sub_10007EF1C(v8 + 16, (uint64_t)v24);
      v14(v23, v10);
      sub_100018ADC((uint64_t)v24, (uint64_t)v18, &qword_100809010);
      sub_100018ADC((uint64_t)v23, (uint64_t)&v20, &qword_100809010);
      if (!v19)
      {
        sub_100010F2C((uint64_t)v23, &qword_100809010);
        sub_100010F2C((uint64_t)v24, &qword_100809010);
        if (!*((_QWORD *)&v21 + 1))
        {
          sub_100010F2C((uint64_t)v18, &qword_100809010);
LABEL_19:
          swift_bridgeObjectRelease(a1);
          return v8;
        }
        goto LABEL_5;
      }
      sub_100018ADC((uint64_t)v18, (uint64_t)v17, &qword_100809010);
      if (!*((_QWORD *)&v21 + 1))
      {
        sub_100010F2C((uint64_t)v23, &qword_100809010);
        sub_100010F2C((uint64_t)v24, &qword_100809010);
        sub_100018968((uint64_t)v17);
LABEL_5:
        sub_100010F2C((uint64_t)v18, &qword_10080B528);
        goto LABEL_6;
      }
      v15[0] = v20;
      v15[1] = v21;
      v16 = v22;
      v11 = static AnyHashable.== infix(_:_:)(v17, v15);
      sub_100018968((uint64_t)v15);
      sub_100010F2C((uint64_t)v23, &qword_100809010);
      sub_100010F2C((uint64_t)v24, &qword_100809010);
      sub_100018968((uint64_t)v17);
      sub_100010F2C((uint64_t)v18, &qword_100809010);
      if ((v11 & 1) != 0)
        goto LABEL_19;
LABEL_6:
      swift_release();
      ++v6;
      if (v9 == v4)
        goto LABEL_25;
    }
    v8 = *(_QWORD *)(a1 + 8 * v6);
    swift_retain(v8);
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_12;
LABEL_20:
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
  }
LABEL_25:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_10007EF1C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_10007EF58()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007EF7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10007EFA8(uint64_t a1)
{
  uint64_t v1;

  sub_10007DD70(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10007EFB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10007EFE4(uint64_t a1)
{
  uint64_t v1;

  sub_10007D51C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10007EFF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  __n128 v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[7];
  uint64_t v20;
  _BYTE v21[32];
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;
  _BYTE v25[40];
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for Adaptive(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 424) & 1) != 0)
  {
    v18 = v3;
    sub_10007F288(v1 + 56, (uint64_t)v19);
    sub_10000EF80(v1 + 224, (uint64_t)v23);
    sub_10000EF80(v1 + 304, (uint64_t)v25);
    v17 = v4;
    sub_10000EF80(v1 + 344, (uint64_t)&v26);
    v16[1] = a1;
    sub_10000EF80(v1 + 384, (uint64_t)&v27);
    v7 = sub_10007F2C4();
    Adaptive.init<A>(_:)(v19, &type metadata for ProductRatingsCompactDetailsLayout, v7);
    KeyPath = swift_getKeyPath(&unk_100643DA0);
    sub_10007F398(v1 + 160, (uint64_t)v19);
    sub_10000EF80(v1 + 224, (uint64_t)v21);
    sub_10000EF80(v1 + 344, (uint64_t)v23);
    sub_10000EF80(v1 + 384, (uint64_t)v25);
    v9 = sub_10007F3D4();
    v10 = swift_retain(KeyPath);
    Adaptive.onCustom<A>(_:_:)(sub_10007F37C, KeyPath, v19, &type metadata for ProductRatingsRegularLayout, v9, v10);
    swift_release_n(KeyPath, 2);
    sub_10007F418(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v18);
  }
  else
  {
    sub_10007F44C(v1, (uint64_t)v19);
    sub_10000EF80(v1 + 224, (uint64_t)&v20);
    sub_10000EF80(v1 + 264, (uint64_t)&v22);
    sub_10000EF80(v1 + 344, (uint64_t)&v24);
    v12 = sub_10007F488();
    Adaptive.init<A>(_:)(v19, &type metadata for ProductRatingsCompactProductPageLayout, v12);
    v13 = swift_getKeyPath(&unk_100643DA0);
    sub_10007F398(v1 + 160, (uint64_t)v19);
    sub_10000EF80(v1 + 224, (uint64_t)v21);
    sub_10000EF80(v1 + 344, (uint64_t)v23);
    sub_10000EF80(v1 + 384, (uint64_t)v25);
    v14 = sub_10007F3D4();
    v15 = swift_retain(v13);
    Adaptive.onCustom<A>(_:_:)(sub_10007F37C, v13, v19, &type metadata for ProductRatingsRegularLayout, v14, v15);
    swift_release_n(v13, 2);
    sub_10007F418(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_10007F288(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsCompactDetailsLayout.Metrics(a2, a1);
  return a2;
}

unint64_t sub_10007F2C4()
{
  unint64_t result;

  result = qword_10080B538;
  if (!qword_10080B538)
  {
    result = swift_getWitnessTable(&unk_100654B54, &type metadata for ProductRatingsCompactDetailsLayout);
    atomic_store(result, (unint64_t *)&qword_10080B538);
  }
  return result;
}

uint64_t sub_10007F308@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = UITraitCollection.isSizeClassRegular.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10007F334(void *a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v5;
  void *v6;

  v6 = a1;
  v3 = a1;
  swift_getAtKeyPath(&v5, &v6, a2);

  return v5;
}

uint64_t sub_10007F37C(void *a1)
{
  uint64_t v1;

  return sub_10007F334(a1, v1) & 1;
}

uint64_t sub_10007F398(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsRegularLayout.Metrics(a2, a1);
  return a2;
}

unint64_t sub_10007F3D4()
{
  unint64_t result;

  result = qword_10080B540;
  if (!qword_10080B540)
  {
    result = swift_getWitnessTable(&unk_10065FC6C, &type metadata for ProductRatingsRegularLayout);
    atomic_store(result, (unint64_t *)&qword_10080B540);
  }
  return result;
}

_QWORD *sub_10007F418(_QWORD *a1)
{
  destroy for ProductRatingsRegularLayout(a1);
  return a1;
}

uint64_t sub_10007F44C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsCompactProductPageLayout.Metrics(a2, a1);
  return a2;
}

unint64_t sub_10007F488()
{
  unint64_t result;

  result = qword_10080B548;
  if (!qword_10080B548)
  {
    result = swift_getWitnessTable(&unk_100659BF8, &type metadata for ProductRatingsCompactProductPageLayout);
    atomic_store(result, (unint64_t *)&qword_10080B548);
  }
  return result;
}

uint64_t destroy for ProductRatingsLayout(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 7);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 12);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 20);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 28);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 33);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 38);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 43);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 48);
}

uint64_t initializeWithCopy for ProductRatingsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 96, a2 + 96);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v7 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 160, a2 + 160);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v8 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 248) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 224, a2 + 224);
  v9 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 288) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 264, a2 + 264);
  v10 = *(_QWORD *)(a2 + 328);
  v11 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v10;
  *(_QWORD *)(a1 + 336) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 304, a2 + 304);
  v12 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 368) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 344, a2 + 344);
  v13 = *(_QWORD *)(a2 + 408);
  v14 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v13;
  *(_QWORD *)(a1 + 416) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 384, a2 + 384);
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  return a1;
}

uint64_t assignWithCopy for ProductRatingsLayout(uint64_t a1, uint64_t a2)
{
  sub_10002D2D4((_QWORD *)a1, (_QWORD *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_10002D2D4((_QWORD *)(a1 + 56), (_QWORD *)(a2 + 56));
  sub_10002D2D4((_QWORD *)(a1 + 96), (_QWORD *)(a2 + 96));
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_10002D2D4((_QWORD *)(a1 + 160), (_QWORD *)(a2 + 160));
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  sub_10002D2D4((_QWORD *)(a1 + 224), (_QWORD *)(a2 + 224));
  sub_10002D2D4((_QWORD *)(a1 + 264), (_QWORD *)(a2 + 264));
  sub_10002D2D4((_QWORD *)(a1 + 304), (_QWORD *)(a2 + 304));
  sub_10002D2D4((_QWORD *)(a1 + 344), (_QWORD *)(a2 + 344));
  sub_10002D2D4((_QWORD *)(a1 + 384), (_QWORD *)(a2 + 384));
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  return a1;
}

void *initializeWithTake for ProductRatingsLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1A9uLL);
}

uint64_t assignWithTake for ProductRatingsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 96));
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 224));
  v7 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v7;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 264));
  v8 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v8;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 304));
  v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 344));
  v10 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v10;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 384));
  v11 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v11;
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 425))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 424) = 0;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 425) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 425) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsLayout()
{
  return &type metadata for ProductRatingsLayout;
}

uint64_t destroy for ProductRatingsLayout.Metrics(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 7);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 12);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 20);
}

uint64_t initializeWithCopy for ProductRatingsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 96, a2 + 96);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v7 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 160, a2 + 160);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

_QWORD *assignWithCopy for ProductRatingsLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_10002D2D4(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_10002D2D4(a1 + 7, a2 + 7);
  sub_10002D2D4(a1 + 12, a2 + 12);
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  sub_10002D2D4(a1 + 20, a2 + 20);
  a1[25] = a2[25];
  a1[26] = a2[26];
  a1[27] = a2[27];
  return a1;
}

__n128 initializeWithTake for ProductRatingsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for ProductRatingsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 96));
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 224))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsLayout.Metrics()
{
  return &type metadata for ProductRatingsLayout.Metrics;
}

uint64_t sub_10007FCF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10007FF84(v1, a1);
}

double sub_10007FD04(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v12;

  v6 = type metadata accessor for Adaptive(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007EFF4((uint64_t)v9);
  v10 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, &protocol witness table for Adaptive, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_10007FDDC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = type metadata accessor for Adaptive(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007EFF4((uint64_t)v13);
  dispatch thunk of Placeable.place(at:with:)(a1, v10, &protocol witness table for Adaptive, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10007FEA4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10007FFB8();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_10007FEE8()
{
  unint64_t result;

  result = qword_100819E90;
  if (!qword_100819E90)
  {
    result = swift_getWitnessTable(&unk_100643EB0, &type metadata for ProductRatingsLayout);
    atomic_store(result, (unint64_t *)&qword_100819E90);
  }
  return result;
}

unint64_t sub_10007FF30()
{
  unint64_t result;

  result = qword_10080B550;
  if (!qword_10080B550)
  {
    result = swift_getWitnessTable(&unk_100643E10, &type metadata for ProductRatingsLayout);
    atomic_store(result, (unint64_t *)&qword_10080B550);
  }
  return result;
}

uint64_t sub_10007FF74(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006C30BC, 1);
}

uint64_t sub_10007FF84(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsLayout.Metrics(a2, a1);
  return a2;
}

unint64_t sub_10007FFB8()
{
  unint64_t result;

  result = qword_10080B558;
  if (!qword_10080B558)
  {
    result = swift_getWitnessTable(&unk_100643E68, &type metadata for ProductRatingsLayout);
    atomic_store(result, (unint64_t *)&qword_10080B558);
  }
  return result;
}

void *sub_10007FFFC()
{
  return &protocol witness table for Adaptive;
}

uint64_t sub_100080008(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[5];
  _QWORD v12[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LinkableTextCollectionViewCellLayout.Metrics(0, v3);
  sub_100011980(v6, qword_100864B90);
  sub_10000EFC4(v6, (uint64_t)qword_100864B90);
  if (qword_100806520 != -1)
    swift_once(&qword_100806520, sub_1004C93DC);
  v7 = type metadata accessor for FontUseCase(0);
  v8 = sub_10000EFC4(v7, (uint64_t)qword_10086A038);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v8, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FontSource.useCase(_:), v1);
  v12[3] = type metadata accessor for StaticDimension(0);
  v12[4] = &protocol witness table for StaticDimension;
  sub_1000119C0(v12);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v9 = sub_1000119C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v9, v5, v1);
  StaticDimension.init(_:scaledLike:)(v11, 16.0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return LinkableTextCollectionViewCellLayout.Metrics.init(textTopSpace:)(v12);
}

id sub_100080274()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v16[16];
  uint64_t v17;
  char v18[24];

  v1 = v0;
  v2 = sub_10000DAF8(&qword_10080B5B0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000DAF8(&qword_10080B5A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyText];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyText], v18, 0, 0);
  sub_100080828(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010F2C((uint64_t)v4, &qword_10080B5B0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyLabel], "setAttributedText:", 0);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    ObjectGraphPair.value.getter(&v17, v5);
    ObjectGraphPair.objectGraph.getter(v5);
    v11 = LinkableText.linkedSubstrings.getter();
    sub_1005B4244(v11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100037F7C);
    v13 = v12;
    v14 = swift_bridgeObjectRelease(v11);
    v15 = LinkableText.styledText.getter(v14);
    sub_10043DA0C(v15, 0, v13);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v1, "setNeedsLayout", swift_release().n128_f64[0]);
    return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_100080480()
{
  char *v0;
  objc_class *ObjectType;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  unint64_t v24;
  _QWORD v27[5];
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LinkableTextCollectionViewCellLayout.Metrics(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LinkableTextCollectionViewCellLayout(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28.receiver = v0;
  v28.super_class = ObjectType;
  objc_msgSendSuper2(&v28, "layoutSubviews", v9);
  if (qword_100804738 != -1)
    swift_once(&qword_100804738, sub_100080008);
  v12 = sub_10000EFC4(v3, (uint64_t)qword_100864B90);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
  v13 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyLabel];
  v27[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
  v27[4] = &protocol witness table for UILabel;
  v27[0] = v13;
  v14 = v13;
  LinkableTextCollectionViewCellLayout.init(metrics:textLabel:)(v6, v27);
  objc_msgSend(v0, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = objc_msgSend(v0, "traitCollection");
  v24 = sub_100080870();
  dispatch thunk of Placeable.place(at:with:)(v23, v7, v24, v16, v18, v20, v22);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1000806F4()
{
  return type metadata accessor for LinkableTextCollectionViewCell(0);
}

uint64_t type metadata accessor for LinkableTextCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B590;
  if (!qword_10080B590)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LinkableTextCollectionViewCell);
  return result;
}

void sub_100080738(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100011560(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000807D0(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_1000807D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10080B5A0)
  {
    v2 = sub_100010DE0(&qword_10080B5A8);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10080B5A0);
  }
}

uint64_t sub_100080828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_10080B5B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100080870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B5B8;
  if (!qword_10080B5B8)
  {
    v1 = type metadata accessor for LinkableTextCollectionViewCellLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LinkableTextCollectionViewCellLayout, v1);
    atomic_store(result, (unint64_t *)&qword_10080B5B8);
  }
  return result;
}

char *sub_1000808B8()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  objc_super v37[2];
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for AutomationSemantics(0);
  v5 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v0[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v0[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyText];
  v15 = sub_10000DAF8(&qword_10080B5A8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = qword_100806520;
  v17 = v0;
  if (v16 != -1)
    swift_once(&qword_100806520, sub_1004C93DC);
  v18 = sub_10000EFC4(v8, (uint64_t)qword_10086A038);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
  v19 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedLabel(0));
  *(_QWORD *)&v17[OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyLabel] = sub_10043D680((uint64_t)v11, 0, 0, 1);

  v38.receiver = v17;
  v38.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = objc_msgSend(v20, "contentView");
  objc_msgSend(v21, "setClipsToBounds:", 0);

  v22 = objc_msgSend(v20, "contentView");
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v23 = OBJC_IVAR____TtC20ProductPageExtension30LinkableTextCollectionViewCell_bodyLabel;
  memset(v37, 0, sizeof(v37));
  memset(v36, 0, sizeof(v36));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6562614C79646F62, 0xE90000000000006CLL, v37, v36);
  sub_100010F2C((uint64_t)v36, &qword_100808F20);
  sub_100010F2C((uint64_t)v37, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v33);
  v24 = *(void **)&v20[v23];
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v4, enum case for DirectionalTextAlignment.leading(_:), v35);
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v4);
  sub_100035178();
  v25 = v24;
  v26 = (void *)static UIColor.secondaryText.getter(v25);
  v27 = *(void **)&v25[qword_100823810];
  *(_QWORD *)&v25[qword_100823810] = v26;
  v28 = v26;
  LOBYTE(v24) = static NSObject.== infix(_:_:)(v28, v27);

  if ((v24 & 1) == 0)
    sub_10043DDD8();

  v29 = objc_msgSend(v20, "contentView");
  v30 = *(id *)&v20[v23];
  objc_msgSend(v29, "addSubview:", v30);

  return v20;
}

ValueMetadata *type metadata accessor for AdInteractionActionImplementation()
{
  return &type metadata for AdInteractionActionImplementation;
}

uint64_t sub_100080C80()
{
  return sub_10000E720(&qword_10080B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for AdInteractionAction, (uint64_t)&protocol conformance descriptor for Action);
}

uint64_t sub_100080CAC(uint64_t *a1, uint64_t a2)
{
  return sub_100080CB4(*a1, a2);
}

uint64_t sub_100080CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __n128 v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;

  v3 = type metadata accessor for ActionOutcome(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DAF8(&qword_10080B5C8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AdvertActionMetrics(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  AdInteractionAction.adActionMetrics.getter(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100081110((uint64_t)v10);
    sub_10000DAF8(&qword_100808570);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ActionOutcome.unsupported(_:), v3);
    return Promise.__allocating_init(value:)(v6);
  }
  v62 = v4;
  v63 = v6;
  v64 = v3;
  v59 = v15;
  v60 = v12;
  v17 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v61 = v11;
  v17(v15, v10, v11);
  v18 = *(_QWORD *)(a2 + qword_10086B3C8);
  if (v18)
  {
    v58 = *(_QWORD *)(a2 + qword_10086B3C8 + 8);
    v19 = v58;
    v20 = type metadata accessor for PromotedContentAdvertInteractionMetricsReporter();
    v21 = swift_allocObject(v20, 32, 7);
    type metadata accessor for AppStoreMetricManager(0);
    v22 = swift_unknownObjectRetain_n(v18, 2);
    v23 = static AppStoreMetricManager.sharedInstance.getter(v22);
    v57 = v21;
    *(_QWORD *)(v21 + 16) = v23;
    v24 = type metadata accessor for PromotedContentInteractionTypeProvider();
    v25 = swift_allocObject(v24, 32, 7);
    *(_QWORD *)(v25 + 16) = v18;
    *(_QWORD *)(v25 + 24) = v19;
    *(_QWORD *)(v21 + 24) = v25;
    v26 = sub_10000DAF8(&qword_10080B5D0);
    v27 = sub_10000DAF8(&qword_10080B5D8);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(_QWORD *)(v28 + 72);
    v30 = *(unsigned __int8 *)(v28 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(v26, v31 + 2 * v29, v30 | 7);
    *(_OWORD *)(v32 + 16) = xmmword_100640600;
    v33 = v32 + v31;
    v34 = (uint64_t *)(v32 + v31 + *(int *)(v27 + 48));
    v35 = enum case for AdvertActionMetrics.ReportingDestination.promotedContent(_:);
    v36 = type metadata accessor for AdvertActionMetrics.ReportingDestination(0);
    v37 = *(_QWORD *)(v36 - 8);
    v56 = v18;
    v38 = *(void (**)(void))(v37 + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v38)(v33, v35, v36);
    v34[3] = v20;
    v34[4] = sub_10000E720(&qword_10080B5E0, (uint64_t (*)(uint64_t))type metadata accessor for PromotedContentAdvertInteractionMetricsReporter, (uint64_t)&unk_100641010);
    v39 = v57;
    *v34 = v57;
    v40 = (uint64_t *)(v33 + v29 + *(int *)(v27 + 48));
    v38();
    v41 = type metadata accessor for SearchAdsAdvertInteractionMetricsReporter();
    v42 = swift_allocObject(v41, 32, 7);
    v43 = (void *)objc_opt_self(ADMetricManager);
    v44 = v56;
    swift_unknownObjectRetain(v56);
    *(_QWORD *)(v42 + 16) = objc_msgSend(v43, "sharedInstance", swift_retain(v39).n128_f64[0]);
    v45 = type metadata accessor for SearchAdsButtonStateProvider();
    v46 = swift_allocObject(v45, 32, 7);
    v47 = v58;
    *(_QWORD *)(v46 + 16) = v44;
    *(_QWORD *)(v46 + 24) = v47;
    *(_QWORD *)(v42 + 24) = v46;
    v40[3] = v41;
    v40[4] = sub_10000E720((unint64_t *)&qword_10080B5E8, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdsAdvertInteractionMetricsReporter, (uint64_t)&unk_100651C6C);
    *v40 = v42;
    v48 = sub_100509480(v32);
    v49 = type metadata accessor for AdvertActionMetricsHandler(0);
    swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
    AdvertActionMetricsHandler.init(reporters:)(v48);
    v50 = v59;
    AdvertActionMetricsHandler.processAdActionMetrics(_:then:)(v59, static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:), 0);
    sub_10000DAF8(&qword_100808570);
    v51 = v63;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v63, enum case for ActionOutcome.performed(_:), v64);
    v16 = Promise.__allocating_init(value:)(v51);
    swift_unknownObjectRelease();
    swift_release();
    v52 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v50, v61, v52);
    return v16;
  }
  v54 = sub_10000DAF8((uint64_t *)&unk_1008094C0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v54, v54);
  __break(1u);
  return result;
}

uint64_t sub_100081110(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_10080B5C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100081150(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  __int128 v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _OWORD v31[2];
  _OWORD v32[2];

  v2 = (_QWORD *)sub_10050A460((uint64_t)_swiftEmptyArrayStorage);
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain(a1);
    return a1;
  }
  v4 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain(a1);
  v5 = (char *)&type metadata for Any + 8;
  v27 = a1;
  while (1)
  {
    v6 = *v4;
    if (!*(_QWORD *)(*v4 + 16))
      goto LABEL_5;
    swift_bridgeObjectRetain(*v4);
    v7 = sub_10057E9FC(0x6973736572706D69, 0xEC00000064496E6FLL);
    if ((v8 & 1) != 0)
      break;
LABEL_4:
    swift_bridgeObjectRelease(v6);
LABEL_5:
    ++v4;
    if (!--v3)
      return a1;
  }
  sub_100010D84(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)v31);
  sub_10004EA50(v31, v32);
  if (!*(_QWORD *)(v6 + 16)
    || (v9 = sub_10057E9FC(1701667182, 0xE400000000000000), (v10 & 1) == 0)
    || (sub_100010D84(*(_QWORD *)(v6 + 56) + 32 * v9, (uint64_t)v31),
        !swift_dynamicCast(v30, v31, v5, &type metadata for String, 6)))
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v32);
    goto LABEL_4;
  }
  v28 = v30[0];
  v29 = v30[1];
  *(_QWORD *)&v31[0] = 0;
  *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(v32, v31, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v11 = v31[0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  *(_QWORD *)&v31[0] = v2;
  v14 = sub_10057E9FC(v11, *((uint64_t *)&v11 + 1));
  v15 = v2[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (!__OFADD__(v15, v16))
  {
    v18 = v13;
    if (v2[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v2 = *(_QWORD **)&v31[0];
        if ((v13 & 1) == 0)
          goto LABEL_20;
      }
      else
      {
        sub_1001FBF40();
        v2 = *(_QWORD **)&v31[0];
        if ((v18 & 1) == 0)
          goto LABEL_20;
      }
    }
    else
    {
      sub_1001F57D4(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_10057E9FC(v11, *((uint64_t *)&v11 + 1));
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_27;
      v14 = v19;
      v2 = *(_QWORD **)&v31[0];
      if ((v18 & 1) == 0)
      {
LABEL_20:
        v2[(v14 >> 6) + 8] |= 1 << v14;
        *(_OWORD *)(v2[6] + 16 * v14) = v11;
        v22 = (_QWORD *)(v2[7] + 16 * v14);
        *v22 = v28;
        v22[1] = v29;
        v23 = v2[2];
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
          goto LABEL_26;
        v2[2] = v25;
        swift_bridgeObjectRetain(*((_QWORD *)&v11 + 1));
        goto LABEL_22;
      }
    }
    v21 = (_QWORD *)(v2[7] + 16 * v14);
    swift_bridgeObjectRelease(v21[1]);
    *v21 = v28;
    v21[1] = v29;
LABEL_22:
    swift_bridgeObjectRelease(*((_QWORD *)&v11 + 1));
    swift_bridgeObjectRelease(0x8000000000000000);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v32);
    swift_bridgeObjectRelease(v6);
    v5 = (char *)&type metadata for Any + 8;
    a1 = v27;
    goto LABEL_5;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100081444(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];

  sub_100081524(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_10004EA50(&v9, v11);
    *(_QWORD *)&v9 = 0;
    *((_QWORD *)&v9 + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v11, &v9, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v3 = *((_QWORD *)&v9 + 1);
    if (*(_QWORD *)(a2 + 16) && (v4 = sub_10057E9FC(v9, *((uint64_t *)&v9 + 1)), (v5 & 1) != 0))
    {
      v6 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v4);
      v7 = *v6;
      swift_bridgeObjectRetain(v6[1]);
    }
    else
    {
      v7 = 0;
    }
    swift_bridgeObjectRelease(v3);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v11);
  }
  else
  {
    sub_10001282C((uint64_t)&v9);
    return 0;
  }
  return v7;
}

uint64_t sub_100081524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100808F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_10008156C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  objc_super v27;

  v5 = v4;
  v10 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder;
  type metadata accessor for ArtworkView(0);
  v11 = v4;
  v12 = (id)static ArtworkView.brickArtworkView.getter(v11);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v12);

  *(_QWORD *)&v5[v10] = v12;
  v13 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder;
  v14 = type metadata accessor for LockupPlaceholderView(0);
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  v15 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder;
  type metadata accessor for Placeholder(0);
  v16 = static Placeholder.titleText.getter();
  v18 = v17;
  v19 = sub_1003F59A0(v16, v17, (uint64_t)UIFontTextStyleSubheadline);
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)&v11[v15] = v19;
  v20 = &v11[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType];
  v21 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  v22 = type metadata accessor for Shelf.ContentType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v11[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] = 0;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for MixedMediaLockupPlaceholderView(0);
  v23 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder];
  v25 = v23;
  objc_msgSend(v25, "addSubview:", v24);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder]);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder]);

  return v25;
}

uint64_t sub_10008176C@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __n128 v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  int v16;
  char v17;
  uint64_t v18;
  uint64_t result;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[24];

  v3 = sub_10000DAF8(&qword_100814E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Shelf.ContentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  v13 = &v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType];
  v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType], v24, 0, 0);
  v15 = *(void (**)(char *, char *, uint64_t, __n128))(v7 + 16);
  v15(v12, v13, v6, v14);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v16 == enum case for Shelf.ContentType.appTrailerLockup(_:))
  {
    type metadata accessor for AppTrailerLockupCollectionViewCell(0);
LABEL_5:
    v17 = v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder];
    v18 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
    sub_1001DBC90(v1, v17, (uint64_t)v5, a1);
    return sub_100071D6C((uint64_t)v5);
  }
  if (v16 == enum case for Shelf.ContentType.screenshotsLockup(_:))
  {
    type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
    goto LABEL_5;
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  ((void (*)(char *, char *, uint64_t))v15)(v9, v13, v6);
  _print_unlocked<A, B>(_:_:)(v9, &v22, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20._object = (void *)0x8000000100689AE0;
  v20._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v20);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v22, v23, "ProductPageExtension/MixedMediaLockupPlaceholderView.swift", 58, 2, 61, 0);
  __break(1u);
  return result;
}

void sub_1000819C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  int v11;
  __n128 v12;
  void *Current;
  __n128 v14;
  id v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE v20[24];

  v1 = type metadata accessor for Shelf.ContentType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = v0 + OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType;
  v9 = swift_beginAccess(v0 + OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType, v20, 0, 0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v10(v7, v8, v1, v9);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v11 == enum case for Shelf.ContentType.appTrailerLockup(_:))
  {
    type metadata accessor for AppTrailerLockupCollectionViewCell(0);
    Current = (void *)ASKDeviceTypeGetCurrent(v12);
LABEL_5:
    v15 = Current;
    sub_1001DC230((uint64_t)v15);

    return;
  }
  if (v11 == enum case for Shelf.ContentType.screenshotsLockup(_:))
  {
    type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
    Current = (void *)ASKDeviceTypeGetCurrent(v14);
    goto LABEL_5;
  }
  v18 = 0;
  v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  ((void (*)(char *, uint64_t, uint64_t))v10)(v4, v8, v1);
  _print_unlocked<A, B>(_:_:)(v4, &v18, v1, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16._object = (void *)0x8000000100689AE0;
  v16._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v16);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v18, v19, "ProductPageExtension/MixedMediaLockupPlaceholderView.swift", 58, 2, 72, 0);
  __break(1u);
}

uint64_t sub_100081BC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void *v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  double v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  __int128 v46;
  __int128 v47;
  _QWORD v48[5];
  _QWORD v49[5];
  objc_super v50;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  v3 = __chkstk_darwin(v2);
  v42 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for MixedMediaLockupLayout(0, v3);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for AspectRatio(0);
  v37 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MixedMediaLockupLayout.Metrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  v15 = (objc_class *)type metadata accessor for MixedMediaLockupPlaceholderView(0);
  v50.receiver = v0;
  v50.super_class = v15;
  objc_msgSendSuper2(&v50, "layoutSubviews");
  sub_10008176C((uint64_t)v14);
  sub_1000819C8();
  LayoutMarginsAware<>.layoutFrame.getter(v15);
  v18 = AspectRatio.maxSize(fitting:)(v16, v17);
  v20 = v19;
  v21 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder];
  v22 = (void (*)(_QWORD *, _QWORD))ArtworkView.frame.modify(v49);
  *(double *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v20;
  v22(v49, 0);
  v24 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder;
  v25 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder];
  if (v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] == 1)
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder]);
  else
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder], "removeFromSuperview");
  v35 = v9;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v36 = v8;
  v26(v11, v14, v8);
  v27 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder];
  v49[3] = type metadata accessor for LockupPlaceholderView(0);
  v49[4] = &protocol witness table for UIView;
  v49[0] = v27;
  v48[3] = type metadata accessor for ArtworkView(0);
  v48[4] = &protocol witness table for UIView;
  v48[0] = v21;
  if (v1[v24] == 1)
  {
    *(_QWORD *)&v47 = sub_1000820D8();
    *((_QWORD *)&v47 + 1) = &protocol witness table for UILabel;
    v28 = v25;
  }
  else
  {
    v25 = 0;
    v47 = 0u;
    v46 = 0u;
  }
  v45 = v25;
  v29 = v27;
  v30 = v21;
  v31 = v39;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v11, v49, v48, &v45);
  v32 = LayoutMarginsAware<>.layoutFrame.getter(v15);
  v33 = v42;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)(v1, v32);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v44);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v36);
}

id sub_100081F68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupPlaceholderView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10008200C()
{
  return type metadata accessor for MixedMediaLockupPlaceholderView(0);
}

uint64_t type metadata accessor for MixedMediaLockupPlaceholderView(uint64_t a1)
{
  uint64_t result;

  result = qword_10080B630;
  if (!qword_10080B630)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MixedMediaLockupPlaceholderView);
  return result;
}

uint64_t sub_100082050(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Shelf.ContentType(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_100644020;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1000820D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081A480;
  if (!qword_10081A480)
  {
    v1 = objc_opt_self(UILabel);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10081A480);
  }
  return result;
}

void sub_100082114()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder;
  v3 = type metadata accessor for ArtworkView(0);
  v4 = (id)static ArtworkView.brickArtworkView.getter(v3);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v4);

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder;
  v6 = type metadata accessor for LockupPlaceholderView(0);
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");
  v7 = OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder;
  type metadata accessor for Placeholder(0);
  v8 = static Placeholder.titleText.getter();
  v10 = v9;
  v11 = sub_1003F59A0(v8, v9, (uint64_t)UIFontTextStyleSubheadline);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)&v1[v7] = v11;
  v12 = &v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_contentType];
  v13 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  v14 = type metadata accessor for Shelf.ContentType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v1[OBJC_IVAR____TtC20ProductPageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100685560, "ProductPageExtension/MixedMediaLockupPlaceholderView.swift", 58, 2, 31, 0);
  __break(1u);
}

uint64_t sub_100082254()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1006415A0;
  v2 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v1 + 32) = objc_msgSend(v2, "blackColor");
  v3 = objc_msgSend(v2, "blackColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.4);

  *(_QWORD *)(v1 + 40) = v4;
  v5 = objc_msgSend(v2, "blackColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v1 + 48) = v6;
  result = specialized Array._endMutation()(v7);
  qword_10080B640 = v1;
  return result;
}

uint64_t sub_100082364()
{
  uint64_t v0;
  uint64_t v1;
  UIColor v2;
  uint64_t result;

  v0 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1006415A0;
  sub_100035178();
  *(UIColor *)(v1 + 32) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.43137, 0.43137, 0.43137, 0.6);
  *(UIColor *)(v1 + 40) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.35294, 0.35294, 0.35294, 0.5);
  v2.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.27146, 0.2665, 0.26659, 0.2).super.isa;
  *(UIColor *)(v1 + 48) = v2;
  result = specialized Array._endMutation()(v2.super.isa);
  qword_10080B648 = v1;
  return result;
}

char *sub_100082458()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t inited;
  char *v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v2 = v0;
  v3 = OBJC_IVAR____TtC20ProductPageExtension23MultiCornerGradientView_colors;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension23MultiCornerGradientView_colors);
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension23MultiCornerGradientView_colors));
    if (v5)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease(v4);
    v7 = _swiftEmptyArrayStorage;
    v14 = _swiftEmptyArrayStorage[2];
    if (v14)
      goto LABEL_12;
LABEL_36:
    swift_bridgeObjectRelease(v7);
    goto LABEL_37;
  }
  if (v4 < 0)
    v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension23MultiCornerGradientView_colors);
  else
    v26 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v26);
  if (!v5)
    goto LABEL_35;
LABEL_3:
  v37 = _swiftEmptyArrayStorage;
  sub_1001F14B8(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  v6 = 0;
  v7 = v37;
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
    else
      v8 = *(id *)(v4 + 8 * v6 + 32);
    v9 = v8;
    objc_msgSend(v8, "_luminance");
    v11 = v10;

    v37 = v7;
    v13 = v7[2];
    v12 = v7[3];
    if (v13 >= v12 >> 1)
    {
      sub_1001F14B8(v12 > 1, v13 + 1, 1);
      v7 = v37;
    }
    ++v6;
    v7[2] = v13 + 1;
    v7[v13 + 4] = v11;
  }
  while (v5 != v6);
  swift_bridgeObjectRelease(v4);
  v14 = v7[2];
  if (!v14)
    goto LABEL_36;
LABEL_12:
  if (v14 == 1)
  {
    v15 = 0;
    v1 = 0.0;
LABEL_17:
    v18 = v14 - v15;
    v19 = (double *)&v7[v15 + 4];
    do
    {
      v20 = *v19++;
      v1 = v1 + v20;
      --v18;
    }
    while (v18);
    goto LABEL_19;
  }
  v15 = v14 & 0x7FFFFFFFFFFFFFFELL;
  v16 = (double *)(v7 + 5);
  v1 = 0.0;
  v17 = v14 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v1 = v1 + *(v16 - 1) + *v16;
    v16 += 2;
    v17 -= 2;
  }
  while (v17);
  if (v14 != v15)
    goto LABEL_17;
LABEL_19:
  swift_bridgeObjectRelease(v7);
  if (v1 <= 0.0)
  {
LABEL_37:
    if (qword_100804748 != -1)
      swift_once(&qword_100804748, sub_100082364);
    v24 = &qword_10080B648;
    v25 = 0x3FE3333333333333;
    goto LABEL_40;
  }
  v2 = *(_QWORD *)(v2 + v3);
  if (!((unint64_t)v2 >> 62))
  {
    v21 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_22;
  }
LABEL_47:
  if (v2 < 0)
    v35 = v2;
  else
    v35 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v21 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v2);
LABEL_22:
  v22 = v1 / (double)v21;
  if (v22 == 0.0)
    goto LABEL_37;
  if (v22 < COERCE_DOUBLE(1) || v22 >= 0.83)
  {
    if (qword_100804740 != -1)
      swift_once(&qword_100804740, sub_100082254);
    v24 = &qword_10080B640;
    v25 = 0x3FE6666666666666;
LABEL_40:
    v23 = *(double *)&v25;
    goto LABEL_41;
  }
  v23 = 0.2;
  if (qword_100804740 != -1)
    swift_once(&qword_100804740, sub_100082254);
  v24 = &qword_10080B640;
LABEL_41:
  v27 = *v24;
  swift_bridgeObjectRetain(*v24);
  if (qword_100806D80 != -1)
    swift_once(&qword_100806D80, sub_1005E6FB0);
  v28 = xmmword_10086B7A0;
  if (qword_100806D78 != -1)
    swift_once(&qword_100806D78, sub_1005E6F9C);
  v29 = xmmword_10086B790;
  v30 = sub_10000DAF8(&qword_100815460);
  inited = swift_initStackObject(v30, &v36);
  *(_OWORD *)(inited + 16) = xmmword_1006405F0;
  *(_OWORD *)(inited + 32) = xmmword_100644040;
  *(_QWORD *)(inited + 48) = 0x3FF0000000000000;
  v32 = sub_1005E73A0(v27, inited, 0, *(double *)&v28, *((double *)&v28 + 1), *(double *)&v29, *((double *)&v29 + 1));
  swift_setDeallocating(inited);
  v33 = objc_msgSend(v32, "layer", swift_bridgeObjectRelease(v27).n128_f64[0]);
  objc_msgSend(v33, "setCompositingFilter:", kCAFilterPlusD);

  objc_msgSend(v32, "setAlpha:", v23);
  return v32;
}

id sub_100082A1C()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;

  sub_1005E5FE8();
  v1 = OBJC_IVAR____TtC20ProductPageExtension28MultiAppFallbackGradientView_overlayGradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20ProductPageExtension28MultiAppFallbackGradientView_overlayGradientView], "removeFromSuperview");
  v2 = sub_100082458();
  v3 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v2;

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v1]);
  objc_msgSend(v0, "setNeedsLayout");
  return objc_msgSend(v0, "setNeedsDisplay");
}

void sub_100082A90()
{
  uint64_t v0;

}

uint64_t type metadata accessor for MultiAppFallbackGradientView()
{
  return objc_opt_self(_TtC20ProductPageExtension28MultiAppFallbackGradientView);
}

ValueMetadata *type metadata accessor for HttpTemplateActionImplementation()
{
  return &type metadata for HttpTemplateActionImplementation;
}

unint64_t sub_100082AE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B680;
  if (!qword_10080B680)
  {
    v1 = type metadata accessor for HttpTemplateAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10080B680);
  }
  return result;
}

uint64_t sub_100082B2C(uint64_t *a1, uint64_t a2)
{
  return sub_100082B34(*a1, a2);
}

uint64_t sub_100082B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  _BYTE *v12;
  _OWORD *v13;
  double v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  objc_super v23;

  v4 = sub_10000DAF8((uint64_t *)&unk_100809290);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v23.receiver - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DAF8((uint64_t *)&unk_1008155D0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for HttpTemplateController();
  v12 = objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_okAction] = 0;
  v12[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_hasRequiredParameters] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_templateAction] = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_actionRunner] = 0;
  v13 = &v12[OBJC_IVAR____TtC20ProductPageExtension22HttpTemplateController_actionSender];
  *v13 = 0u;
  v13[1] = 0u;
  v23.receiver = v12;
  v23.super_class = v11;
  *(_QWORD *)&v14 = swift_retain(a1).n128_u64[0];
  v15 = objc_msgSendSuper2(&v23, "init", v14);
  v17 = sub_10057218C(a2, v16);
  BaseObjectGraph.optional<A>(_:)(v6, v7, v7);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003DAAC((uint64_t)v6);
    sub_10000DAF8(&qword_100808570);
    v18 = sub_10005ABBC();
    v19 = swift_allocError(&type metadata for GeneralActionImplementationError, v18, 0, 0);
    *v20 = 1;
    v21 = Promise.__allocating_init(error:)(v19);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 32))(v10, v6, v7);
    v21 = sub_10032D5D4(v17, a2, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_release();

  return v21;
}

void sub_100082D4C()
{
  sub_100082E50();
}

uint64_t sub_100082D5C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  double v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;

  if (qword_100804D68 != -1)
    swift_once(&qword_100804D68, sub_1001C64B8);
  swift_getObjectType();
  v10 = sub_1003DB6F0((uint64_t)&xmmword_100865B50, a7, a1, a2);
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutDimension), "absoluteDimension:", v10);
  v14 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(0.0, v12);

  return v14;
}

uint64_t sub_100082E24()
{
  return sub_10000E720(&qword_10080B688, (uint64_t (*)(uint64_t))&type metadata accessor for LargeGameCenterPlayer, (uint64_t)&protocol conformance descriptor for GameCenterPlayer);
}

void sub_100082E50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::Bool v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  UIImage_optional v12;

  v1 = v0;
  v2 = objc_retain(*(id *)(v0
                         + OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_artworkView));
  v12.value.super.isa = 0;
  v12.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v12, v3);

  v4 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_displayName);
  GameCenterPlayer.displayName.getter();
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v4, "setText:", v7);

  v8 = *(void **)(v1 + OBJC_IVAR____TtC20ProductPageExtension39LargeGameCenterPlayerCollectionViewCell_alias);
  GameCenterPlayer.alias.getter();
  if (v9)
  {
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v8, "setText:", v11);

}

uint64_t sub_100082F4C()
{
  return ShelfLayoutContext.shelf.getter();
}

double sub_100082F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  double result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  __n128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  _BYTE *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  double v87;
  uint64_t Strong;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  double v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  _BYTE *v120;
  char *v121;
  _QWORD v122[6];

  v3 = sub_10000DAF8((uint64_t *)&unk_100811F10);
  __chkstk_darwin(v3);
  v111 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v110 = (char *)&v102 - v6;
  v7 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v8 = __chkstk_darwin(v7);
  v109 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for ProductMediaMetadata(0, v8);
  v119 = *(_QWORD *)(v114 - 8);
  v10 = __chkstk_darwin(v114);
  v113 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VideoControls(0, v10);
  __chkstk_darwin(v12);
  v118 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v117 = (char *)&v102 - v15;
  v16 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  v17 = __chkstk_darwin(v16);
  v116 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for VideoFillMode(0, v17);
  v19 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v115 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VideoConfiguration(0);
  v107 = *(_QWORD *)(v21 - 8);
  v108 = v21;
  v22 = __chkstk_darwin(v21);
  v106 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Shelf.ContentsMetadata(0, v22);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (uint64_t *)((char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (uint64_t *)((char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_10000DAF8(&qword_10080B6D8);
  __chkstk_darwin(v32);
  v121 = (char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for ProductMediaItem(0);
  v35 = sub_10000E720((unint64_t *)&qword_10080B6E0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductMediaItem, (uint64_t)&protocol conformance descriptor for ProductMediaItem);
  v36 = ItemLayoutContext.typedModel<A>(as:)(v122, v34, v34, v35);
  v38 = v122[0];
  if (v122[0])
  {
    v103 = a2;
    v39 = ProductMediaItem.screenshot.getter(v36);
    if (v39)
    {
      v104 = v39;
      v112 = v38;
    }
    else
    {
      v40 = ((uint64_t (*)(void))ProductMediaItem.video.getter)();
      if (!v40)
      {
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
      v112 = v38;
      v104 = Video.preview.getter(v40);
      swift_release();
    }
    swift_getKeyPath(&unk_1006441C8);
    ItemLayoutContext.subscript.getter(v31);
    swift_release();
    KeyPath = swift_getKeyPath(&unk_1006441F8);
    ReadOnlyLens.subscript.getter(v27, KeyPath, v28);
    v42 = swift_release();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v29 + 8))(v31, v28, v42);
    if ((*(unsigned int (**)(_QWORD *, uint64_t))(v25 + 88))(v27, v24) == enum case for Shelf.ContentsMetadata.productMedia(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v25 + 96))(v27, v24);
      v43 = v119;
      v44 = v121;
      v45 = v114;
      (*(void (**)(char *, _QWORD *, uint64_t))(v119 + 32))(v121, v27, v114);
      v46 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v45);
    }
    else
    {
      v43 = v119;
      v45 = v114;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v121, 1, 1, v114);
      v46 = (*(uint64_t (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
    }
    v47 = v120;
    if (ProductMediaItem.video.getter(v46))
    {
      v48 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v19 + 104))(v115, enum case for VideoFillMode.scaleAspectFit(_:), v105);
      v49 = Video.preview.getter(v48);
      Artwork.size.getter(v49);
      v50 = v116;
      AspectRatio.init(_:_:)(v51);
      swift_release();
      v52 = type metadata accessor for AspectRatio(0);
      v53 = 1;
      v54 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 0, 1, v52);
      v55 = Video.playbackControls.getter(v54);
      v56 = Video.autoPlayPlaybackControls.getter(v55);
      v57 = Video.canPlayFullScreen.getter(v56);
      v58 = Video.allowsAutoPlay.getter();
      v59 = Video.looping.getter();
      v60 = v121;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v121, 1, v45))
      {
        v61 = 0;
      }
      else
      {
        v62 = v113;
        v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 16))(v113, v60, v45);
        ProductMediaMetadata.platform.getter(v63);
        v64 = (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v62, v45);
        v61 = MediaPlatform.deviceCornerRadiusFactor.getter(v64, v65);
        v67 = v66;
        v43 = v119;
        swift_release();
        v53 = v67 & 1;
      }
      v68 = v106;
      VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v115, v116, v117, v118, v57 & 1, v58 & 1, v59 & 1, 1, v61, v53);
      v69 = type metadata accessor for VideoViewManager(0);
      v70 = v103;
      v71 = BaseObjectGraph.inject<A>(_:)(v122, v69, v69);
      v72 = Video.playbackId.getter(v122, v71);
      v73 = (uint64_t)v109;
      Video.videoUrl.getter(v72);
      v75 = type metadata accessor for URL(0, v74);
      v76 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v73, 0, 1, v75);
      v77 = (uint64_t)v110;
      v78 = Video.templateMediaEvent.getter(v76);
      v79 = (uint64_t)v111;
      Video.templateClickEvent.getter(v78);
      v80 = type metadata accessor for VideoView(0);
      v81 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
      v82 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v122, v73, v68, v77, v79, v70, v80, v81);
      sub_100010F2C(v79, (uint64_t *)&unk_100811F10);
      sub_100010F2C(v77, (uint64_t *)&unk_100811F10);
      sub_100010F2C(v73, (uint64_t *)&unk_1008092A0);
      sub_100010F2C((uint64_t)v122, &qword_100809010);
      v83 = v120;
      sub_10036FEA4();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v108);
      v47 = v83;
    }
    v84 = *(_QWORD *)&v47[OBJC_IVAR____TtC20ProductPageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView];
    v85 = *(id *)(v84 + OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_artworkView);
    v86 = ProductMediaItem.screenshot.getter(v85);
    if (v86)
      *(_QWORD *)&v87 = swift_release().n128_u64[0];
    objc_msgSend(v85, "setHidden:", v86 == 0, v87);

    Strong = swift_unknownObjectWeakLoadStrong(&v47[OBJC_IVAR____TtC20ProductPageExtension34ProductMediaItemCollectionViewCell_videoView]);
    v89 = (uint64_t)v121;
    if (Strong)
    {
      v90 = (void *)Strong;
      v91 = ProductMediaItem.video.getter(Strong);
      if (v91)
        *(_QWORD *)&v92 = swift_release().n128_u64[0];
      objc_msgSend(v90, "setHidden:", v91 == 0, v92);

    }
    v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v93(v89, 1, v45)
      || (v94 = v113,
          v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 16))(v113, v89, v45),
          v96 = ProductMediaMetadata.hasPortraitMedia.getter(v95),
          v97 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v94, v45),
          (v96 & 1) == 0))
    {
      v98 = 0;
    }
    else
    {
      v98 = dispatch thunk of Artwork.isPortrait.getter(v97) ^ 1;
    }
    v47[OBJC_IVAR____TtC20ProductPageExtension34ProductMediaItemCollectionViewCell_shouldForcePortrait] = v98 & 1;
    if (v93(v89, 1, v45))
    {
      v99 = 0;
    }
    else
    {
      v100 = v113;
      v101 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 16))(v113, v89, v45);
      v99 = ProductMediaMetadata.platform.getter(v101);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v100, v45);
    }
    *(_QWORD *)(v84 + OBJC_IVAR____TtC20ProductPageExtension22BorderedScreenshotView_platform) = v99;
    swift_retain(v99);
    swift_release();
    sub_1000F305C();
    objc_msgSend(v47, "setNeedsLayout", swift_release().n128_f64[0]);
    swift_release();
    swift_release();
    sub_100010F2C(v89, &qword_10080B6D8);
  }
  return result;
}

uint64_t sub_100083864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

uint64_t sub_1000838B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_100083914(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_10008395C()
{
  void *v0;

  return objc_msgSend(v0, "prepareForReuse");
}

uint64_t sub_100083974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100644180, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1000839D8()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_1000839FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_1008081F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100083A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_1008081F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100083A8C(uint64_t a1)
{
  return sub_100083AC8(5.0, 3.0, a1, qword_10080B6F0);
}

uint64_t sub_100083AA0(uint64_t a1)
{
  return sub_100083AC8(9.0, 6.0, a1, qword_10080B708);
}

uint64_t sub_100083AB4(uint64_t a1)
{
  return sub_100083AC8(12.0, 8.0, a1, qword_10080B720);
}

uint64_t sub_100083AC8(double a1, double a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  double v10;
  double v11;

  v7 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
  sub_100011980(v7, a4);
  sub_10000EFC4(v7, (uint64_t)a4);
  v10 = a2;
  v11 = a1;
  v8 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  return Conditional<>.init(regularValue:compactValue:)(&v11, &v10, v8, &type metadata for CGFloat);
}

uint64_t sub_100083B50()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  char v4;

  v0 = sub_10000DAF8((uint64_t *)&unk_10080B7E0);
  sub_100011980(v0, qword_10080B738);
  sub_10000EFC4(v0, (uint64_t)qword_10080B738);
  v4 = 2;
  v3 = 4;
  v1 = sub_10000DAF8((uint64_t *)&unk_100808A50);
  return Conditional<>.init(regularValue:compactValue:)(&v4, &v3, v1, &type metadata for RatingView.StarSize);
}

UIContentSizeCategory sub_100083BD8()
{
  qword_10080B750 = (uint64_t)UIContentSizeCategoryLarge;
  return UIContentSizeCategoryLarge;
}

char *sub_100083BF0()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v46;
  id v47;
  uint64_t v48;
  objc_class *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  __int128 v55;
  __int128 v56;
  objc_super v57;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v53 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v55 = _swiftEmptyArrayStorage;
  v8 = v0;
  specialized ContiguousArray.reserveCapacity(_:)(5);
  v9 = (objc_class *)type metadata accessor for ProductRatingsHistogramProgressBar();
  v10 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v11 = *(_QWORD *)(v55 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
  v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
  specialized ContiguousArray._endMutation()(v12);
  v13 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v14 = *(_QWORD *)(v55 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
  v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
  specialized ContiguousArray._endMutation()(v15);
  v16 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v17 = *(_QWORD *)(v55 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
  v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
  specialized ContiguousArray._endMutation()(v18);
  v19 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v20 = *(_QWORD *)(v55 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
  v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
  specialized ContiguousArray._endMutation()(v21);
  v22 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v23 = *(_QWORD *)(v55 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
  v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v22);
  specialized ContiguousArray._endMutation()(v24);
  *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews] = v55;

  v57.receiver = v8;
  v57.super_class = ObjectType;
  v49 = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v57, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = v25;
  v52 = *(_QWORD *)&v25[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews];
  v27 = v52;
  if (v52 >> 62)
    goto LABEL_17;
  v28 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  v29 = v25;
  swift_bridgeObjectRetain(v27);
  for (; v28; v28 = _CocoaArrayWrapper.endIndex.getter(v46))
  {
    v30 = 0;
    v31 = v52 & 0xC000000000000001;
    v50 = v52 + 32;
    v51 = v52 & 0xFFFFFFFFFFFFFF8;
    while (!__OFSUB__(v28--, 1))
    {
      if (v31)
      {
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v52);
      }
      else
      {
        if ((v28 & 0x8000000000000000) != 0)
          goto LABEL_15;
        if (v28 >= *(_QWORD *)(v51 + 16))
          goto LABEL_16;
        v33 = *(id *)(v50 + 8 * v28);
      }
      v34 = v33;
      v27 = v30 + 1;
      if (__OFADD__(v30, 1))
        goto LABEL_14;
      v55 = 0u;
      v56 = 0u;
      memset(v54, 0, sizeof(v54));
      static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x77656956726162, 0xE700000000000000, &v55, v54);
      sub_10001282C((uint64_t)v54);
      sub_10001282C((uint64_t)&v55);
      *(_QWORD *)&v55 = v30 + 1;
      v35 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      *((_QWORD *)&v56 + 1) = &type metadata for String;
      *(_QWORD *)&v55 = v35;
      *((_QWORD *)&v55 + 1) = v36;
      AutomationSemantics.attribute(key:value:)(0x7372617473, 0xE500000000000000, &v55);
      v37 = *(void (**)(char *, uint64_t))(v53 + 8);
      v37(v4, v2);
      sub_10001282C((uint64_t)&v55);
      v27 = (uint64_t)v34;
      UIView.setAutomationSemantics(_:)(v7);
      v37(v7, v2);
      objc_msgSend(v26, "addSubview:", v34);

      ++v30;
      if (!v28)
        goto LABEL_12;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    if (v27 < 0)
      v46 = v27;
    else
      v46 = v27 & 0xFFFFFFFFFFFFFF8;
    v47 = v26;
    swift_bridgeObjectRetain(v27);
  }
LABEL_12:
  swift_bridgeObjectRelease(v52);
  v38 = v26;
  v39 = sub_10008520C((uint64_t)&off_1007353A0, (uint64_t)v38);

  v40 = (uint64_t *)&v38[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews];
  swift_beginAccess(&v38[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews], &v55, 1, 0);
  v41 = *v40;
  *v40 = (uint64_t)v39;
  sub_100084130(v41);
  objc_msgSend(v38, "setNeedsLayout", swift_bridgeObjectRelease(v41).n128_f64[0]);
  v42 = sub_10000DAF8((uint64_t *)&unk_10080B800);
  v43 = swift_allocObject(v42, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100640720;
  *(_QWORD *)(v43 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v43 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v44 = v38;
  UIView.registerForTraitChanges<A>(_:handler:)(v43, sub_1000850B8, 0, v49);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease(v43);

  return v44;
}

void sub_100084130(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE v16[24];

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v2)
      goto LABEL_13;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v2)
      goto LABEL_13;
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v4 = *(id *)(a1 + 8 * i + 32);
    v5 = v4;
    objc_msgSend(v4, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease(a1);
  v7 = (uint64_t *)&v15[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews];
  swift_beginAccess(&v15[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews], v16, 0, 0);
  v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_15;
LABEL_28:
    swift_bridgeObjectRelease(v8);
    return;
  }
  if (v8 < 0)
    v14 = v8;
  else
    v14 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v9)
    goto LABEL_28;
LABEL_15:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      else
        v11 = *(id *)(v8 + 8 * v10 + 32);
      v12 = v11;
      if (qword_100804770 != -1)
        swift_once(&qword_100804770, sub_100083BD8);
      ++v10;
      v13 = qword_10080B750;
      objc_msgSend(v12, "setMinimumContentSizeCategory:", qword_10080B750);
      objc_msgSend(v12, "setMaximumContentSizeCategory:", v13);
      objc_msgSend(v15, "addSubview:", v12);

    }
    while (v9 != v10);
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
}

double sub_100084340(id a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[24];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews);
  swift_beginAccess(v7, v19, 0, 0);
  v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v8);
    return JUMeasurementsZero;
  }
  if (v8 < 0)
    v16 = v8;
  else
    v16 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  if (!_CocoaArrayWrapper.endIndex.getter(v16))
    goto LABEL_14;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease(v8);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v12 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v13 + 32) = a1;
  a1 = a1;
  v14 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v13);
  objc_msgSend(v11, "measurementsWithFitting:in:", v14, a2, a3);

  if (qword_100804750 != -1)
LABEL_18:
    swift_once(&qword_100804750, sub_100083A8C);
  v15 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
  sub_10000EFC4(v15, (uint64_t)qword_10080B6F0);
  Conditional.evaluate<>(in:)(&v18, a1, v15);
  if (qword_100804758 != -1)
    swift_once(&qword_100804758, sub_100083AA0);
  sub_10000EFC4(v15, (uint64_t)qword_10080B708);
  Conditional.evaluate<>(in:)(&v18, a1, v15);
  return a2;
}

void sub_100084580(id a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  char *v5;
  id v6;
  double v7;
  char *v8;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  id v26;
  double v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  double v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  double v38;
  _QWORD v41[3];
  char v42[32];
  CGRect v43;

  v8 = v5;
  v12 = (uint64_t *)&v8[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews];
  swift_beginAccess(&v8[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews], v42, 0, 0);
  v13 = *v12;
  if ((unint64_t)*v12 >> 62)
    goto LABEL_23;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v12);
  if (v14)
  {
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
      }
      else
      {
        if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_31:
          swift_once(&qword_100804750, sub_100083A8C);
          goto LABEL_7;
        }
        v15 = *(id *)(v13 + 32);
      }
      v16 = v15;
      swift_bridgeObjectRelease(v13);
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v37 = sub_10000DAF8((uint64_t *)&unk_100808840);
      v17 = swift_allocObject(v37, 40, 7);
      v36 = xmmword_100640AE0;
      *(_OWORD *)(v17 + 16) = xmmword_100640AE0;
      *(_QWORD *)(v17 + 32) = a1;
      v6 = a1;
      v18 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v17);
      objc_msgSend(v16, "measurementsWithFitting:in:", v18, a4, a5);
      v7 = v19;

      objc_msgSend(v8, "setFrame:", a2, a3, a4, a5);
      if (qword_100804750 != -1)
        goto LABEL_31;
LABEL_7:
      v20 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
      sub_10000EFC4(v20, (uint64_t)qword_10080B6F0);
      Conditional.evaluate<>(in:)(v41, v6, v20);
      v38 = *(double *)v41;
      if (qword_100804758 != -1)
        swift_once(&qword_100804758, sub_100083AA0);
      sub_10000EFC4(v20, (uint64_t)qword_10080B708);
      Conditional.evaluate<>(in:)(v41, v6, v20);
      v21 = *(double *)v41;
      if (qword_100804760 != -1)
        swift_once(&qword_100804760, sub_100083AB4);
      a1 = (id)sub_10000EFC4(v20, (uint64_t)qword_10080B720);
      Conditional.evaluate<>(in:)(v41, v6, v20);
      v22 = *(_QWORD *)&v8[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews];
      if ((v22 & 0xC000000000000001) == 0 && *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) < 5uLL)
      {
        __break(1u);
        return;
      }
      v23 = v7 - v38;
      v24 = v38 + v21;
      v13 = 4;
      v7 = 0.0;
      while (1)
      {
        swift_beginAccess(v12, v41, 32, 0);
        v28 = *v12;
        if ((*v12 & 0xC000000000000001) != 0)
        {
          v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v28);
          goto LABEL_19;
        }
        if ((unint64_t)(v13 - 4) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
          break;
        v29 = *(id *)(v28 + 8 * v13);
LABEL_19:
        v30 = v29;
        swift_endAccess(v41);
        v31 = swift_allocObject(v37, 40, 7);
        *(_OWORD *)(v31 + 16) = v36;
        *(_QWORD *)(v31 + 32) = v6;
        v32 = v6;
        v33 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v31);
        objc_msgSend(v30, "measurementsWithFitting:in:", v33, a4, a5);

        a1 = v30;
        objc_msgSend(v8, "bounds");
        objc_msgSend(a1, "setFrame:", CGRect.withLayoutDirection(using:relativeTo:)(v32, v34));

        if ((v22 & 0xC000000000000001) != 0)
          v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v22);
        else
          v25 = *(id *)(v22 + 8 * v13);
        v7 = v24 + v7;
        v26 = v25;
        v43.origin.x = a2;
        v43.origin.y = a3;
        v43.size.width = a4;
        v43.size.height = a5;
        CGRectGetWidth(v43);
        objc_msgSend(v8, "bounds");
        objc_msgSend(v26, "setFrame:", CGRect.withLayoutDirection(using:relativeTo:)(v32, v27));

        v23 = v24 + v23;
        if (++v13 == 9)
          return;
      }
      __break(1u);
LABEL_23:
      if (v13 < 0)
        v35 = v13;
      else
        v35 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
    }
    while (_CocoaArrayWrapper.endIndex.getter(v35));
  }
  swift_bridgeObjectRelease(v13);
}

uint64_t sub_100084B00()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_barViews);
    else
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
    v5 = sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    v6 = swift_bridgeObjectRetain(v1);
    v7 = _bridgeCocoaArray<A>(_:)(v4, v5, v6);
    swift_bridgeObjectRelease(v1);
    return v7;
  }
  else
  {
    v2 = swift_bridgeObjectRetain(v1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
    return v1;
  }
}

uint64_t type metadata accessor for ProductRatingsHistogramView()
{
  return objc_opt_self(_TtC20ProductPageExtension27ProductRatingsHistogramView);
}

double sub_100084C18(void *a1, double a2, double a3)
{
  return sub_100084340(a1, a2, a3);
}

void sub_100084C38(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  sub_100084580(a1, a2, a3, a4, a5);
}

char *sub_100084C58()
{
  char *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  objc_super v13;

  *(_DWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progress] = 0;
  v1 = objc_allocWithZone((Class)UIView);
  v2 = v0;
  v3 = objc_msgSend(v1, "init");
  *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progressView] = v3;

  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for ProductRatingsHistogramProgressBar();
  v4 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, "setClipsToBounds:", 1);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = (char *)v4;
  v7 = objc_msgSend(v5, "systemGray5Color");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progressView;
  v9 = *(void **)&v6[OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progressView];
  sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
  v10 = v9;
  v11 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v10, "setBackgroundColor:", v11);

  objc_msgSend(v6, "addSubview:", *(_QWORD *)&v6[v8]);
  return v6;
}

void sub_100084E5C()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ProductRatingsHistogramProgressBar();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar_progressView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "bounds");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v0, "bounds");
  v4 = CGRect.withLayoutDirection(using:relativeTo:)(v2, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
  v11 = objc_msgSend(v0, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v11, "setCornerRadius:", CGRectGetHeight(v14) * 0.5);

  v12 = objc_msgSend(v1, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v12, "setCornerRadius:", CGRectGetHeight(v15) * 0.5);

}

id sub_100085054()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductRatingsHistogramProgressBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductRatingsHistogramProgressBar()
{
  return objc_opt_self(_TtC20ProductPageExtensionP33_95941BD34515C691DC8D8E2915DD56D934ProductRatingsHistogramProgressBar);
}

void sub_1000850B8(void *a1)
{
  int v2;
  id v3;
  int v4;
  char *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = UITraitCollection.isSizeClassCompact.getter(a1) & 1;
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = UITraitCollection.isSizeClassCompact.getter(v3) & 1;

  if (v2 != v4)
  {
    v5 = a1;
    v6 = sub_10008520C((uint64_t)&off_1007353A0, (uint64_t)v5);

    v7 = (uint64_t *)&v5[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC20ProductPageExtension27ProductRatingsHistogramView_starViews], v9, 1, 0);
    v8 = *v7;
    *v7 = (uint64_t)v6;
    sub_100084130(v8);
    objc_msgSend(v5, "setNeedsLayout", swift_bridgeObjectRelease(v8).n128_f64[0]);
  }
}

uint64_t sub_100085190(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_100804770 != -1)
    swift_once(&qword_100804770, sub_100083BD8);
  v2 = (void *)qword_10080B750;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  sub_100085788(a1, v3);
  return UIMutableTraits.preferredContentSizeCategory.setter(v2, v3, v4);
}

_QWORD *sub_10008520C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  float v16;
  uint64_t v17;
  float v18;
  float v19;
  uint64_t v20;
  float v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  char v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  char v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    v48 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = (uint64_t *)(a1 + 32);
    if (qword_100804768 != -1)
      swift_once(&qword_100804768, sub_100083B50);
    sub_100018B6C(0, (unint64_t *)&qword_100808850, UIColor_ptr);
    v42 = a2;
    while (1)
    {
      v11 = *v6;
      v12 = sub_10000DAF8((uint64_t *)&unk_10080B7E0);
      sub_10000EFC4(v12, (uint64_t)qword_10080B738);
      v46 = a2;
      Conditional.evaluate(with:)(&v47, &v46, v12);
      LOBYTE(v12) = v47;
      v13 = objc_allocWithZone((Class)type metadata accessor for RatingView());
      v14 = sub_100067A50(v11, v12, 0, 1, 1, 0, 1);
      v15 = v14;
      v16 = (float)v11;
      v17 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating;
      v18 = *(float *)&v14[OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating];
      *(float *)&v14[OBJC_IVAR____TtC20ProductPageExtension10RatingView_rating] = (float)v11;
      if (v18 == (float)v11)
        goto LABEL_17;
      if (v11 < 0)
      {
        v19 = 0.0;
      }
      else
      {
        v19 = (float)*(uint64_t *)&v14[OBJC_IVAR____TtC20ProductPageExtension10RatingView_maxNumberOfStars];
        if (v19 >= v16)
          goto LABEL_16;
      }
      *(float *)&v14[v17] = v19;
      v16 = v19;
LABEL_16:
      v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView];
      v21 = *(float *)(v20
                     + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating);
      *(float *)(v20 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_currentRating) = v16;
      sub_1000682A0(v21);
LABEL_17:
      v22 = (void *)static UIColor.primaryText.getter();
      v23 = OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor;
      v24 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor];
      *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension10RatingView_starColor] = v22;
      v25 = v22;
      v45 = v24;
      v26 = static NSObject.== infix(_:_:)(v24, v25);

      if ((v26 & 1) != 0)
        goto LABEL_9;
      v27 = *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarRowView];
      if (v27)
      {
        v28 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor];
        if (v28)
          v29 = *(id *)&v15[OBJC_IVAR____TtC20ProductPageExtension10RatingView_emptyStarColor];
        else
          v29 = *(id *)&v15[v23];
        v30 = *(void **)(v27
                       + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor);
        *(_QWORD *)(v27 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor) = v29;
        v31 = v29;
        v32 = v28;
        v43 = v30;
        if (v30)
        {
          if (v31)
          {
            v33 = v30;
            v41 = v31;
            v34 = static NSObject.== infix(_:_:)(v33, v41);

            if ((v34 & 1) != 0)
              goto LABEL_29;
          }
LABEL_27:
          sub_1000684D8();
        }
        else if (v31)
        {
          goto LABEL_27;
        }
        v33 = v43;
LABEL_29:

      }
      v35 = *(_QWORD *)&v15[OBJC_IVAR____TtC20ProductPageExtension10RatingView_filledStarRowView];
      v36 = *(void **)&v15[v23];
      v37 = *(void **)(v35 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor);
      *(_QWORD *)(v35 + OBJC_IVAR____TtC20ProductPageExtensionP33_06779790DFC391F4528ECB93682635147StarRow_starColor) = v36;
      v38 = v36;
      v39 = v38;
      if (v37)
      {
        if (v38)
        {
          v7 = v37;
          v44 = v39;
          v40 = static NSObject.== infix(_:_:)(v7, v44);

          if ((v40 & 1) != 0)
            goto LABEL_8;
        }
LABEL_6:
        sub_1000684D8();
        goto LABEL_7;
      }
      if (v38)
        goto LABEL_6;
LABEL_7:
      v7 = v37;
LABEL_8:

      a2 = v42;
LABEL_9:

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = v48[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v15);
      specialized ContiguousArray._endMutation()(v10);
      ++v6;
      if (!--v3)
        return v48;
    }
  }
  return result;
}

double sub_10008558C(uint64_t a1, double a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_100804768 != -1)
    swift_once(&qword_100804768, sub_100083B50);
  v4 = sub_10000DAF8((uint64_t *)&unk_10080B7E0);
  sub_10000EFC4(v4, (uint64_t)qword_10080B738);
  Conditional.evaluate<>(in:)(&v11, a1, v4);
  v5 = v11;
  v6 = (void *)UITraitCollection.modifyingTraits(_:)(sub_100085190, 0);
  sub_100069600(v5, 0, 1, 5.0);
  sub_1000692D0(v5);
  v8 = v7;
  UIImage.baselineOffsetFromBottom.getter(v7);
  objc_msgSend(v8, "contentInsets");

  if (qword_100804750 != -1)
    swift_once(&qword_100804750, sub_100083A8C);
  v9 = sub_10000DAF8((uint64_t *)&unk_10080B7D0);
  sub_10000EFC4(v9, (uint64_t)qword_10080B6F0);
  Conditional.evaluate<>(in:)(&v11, a1, v9);
  if (qword_100804758 != -1)
    swift_once(&qword_100804758, sub_100083AA0);
  sub_10000EFC4(v9, (uint64_t)qword_10080B708);
  Conditional.evaluate<>(in:)(&v11, a1, v9);
  return a2;
}

uint64_t sub_100085788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

double sub_1000857B0(uint64_t *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_100085800(a2, *a1, a4, a6, a7);
}

void sub_1000857C4()
{
  sub_1000858EC();
}

uint64_t sub_1000857D4()
{
  return sub_10000E720(&qword_10080B810, (uint64_t (*)(uint64_t))&type metadata accessor for HorizontalRule, (uint64_t)&protocol conformance descriptor for HorizontalRule);
}

double sub_100085800(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  id v14;
  uint64_t v16;

  v7 = type metadata accessor for HorizontalRule.Style(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((HorizontalRule.isFullWidth.getter(v9) & 1) == 0)
  {
    objc_msgSend(a5, "pageMarginInsets");
    a1 = a1 - v12 - v13;
  }
  HorizontalRule.style.getter();
  v14 = objc_msgSend(a5, "traitCollection");
  HorizontalRule.Style.lineThickness(traitCollection:)();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return a1;
}

void sub_1000858EC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  char *v12;
  __n128 v13;
  CAShapeLayer v14;
  CGColor *v15;
  id v16;
  char v18[24];

  v1 = v0;
  v2 = type metadata accessor for HorizontalRule.Style(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  HorizontalRule.style.getter(v4);
  v7 = sub_10006BD94((uint64_t)v6);
  v8 = (void *)HorizontalRule.color.getter(v7);
  v9 = OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineColor;
  v10 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineColor] = v8;
  v11 = v8;

  v12 = &v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style];
  v13 = swift_beginAccess(&v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_style], v18, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v6, v12, v2, v13);
  v14.super.super.isa = *(Class *)&v1[OBJC_IVAR____TtC20ProductPageExtension32HorizontalRuleCollectionViewCell_lineLayer];
  v15 = (CGColor *)objc_msgSend(*(id *)&v1[v9], "CGColor");
  v16 = objc_msgSend(v1, "traitCollection");
  HorizontalRule.Style.applyStyle(to:lineColor:traitCollection:)(v14, v15, (UITraitCollection)v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(v1, "setNeedsDisplay");

}

void sub_100085A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  _BYTE v34[40];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[5];
  _QWORD v42[5];

  v6 = v5;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a2;
  *(_QWORD *)(v6 + 72) = a3;
  *(_QWORD *)(v6 + 80) = a4;
  *(_QWORD *)(v6 + 88) = a5;
  v31 = a5;
  v16 = swift_retain(a5);
  v17 = UUID.init()(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v42[0] = v18;
  v42[1] = v20;
  AnyHashable.init<A>(_:)(v42, &type metadata for String, &protocol witness table for String);
  v21 = v36;
  *(_OWORD *)(v6 + 16) = v35;
  *(_OWORD *)(v6 + 32) = v21;
  *(_QWORD *)(v6 + 48) = v37;
  v22 = *(_QWORD *)(v6 + 72);
  if (!((unint64_t)v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v6 + 72), 2);
    swift_retain(v6);
    if (v23)
      goto LABEL_3;
LABEL_23:
    swift_release(v6);
    swift_bridgeObjectRelease_n(v22, 2);
    swift_release(v31);
    return;
  }
  if (v22 < 0)
    v29 = *(_QWORD *)(v6 + 72);
  else
    v29 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v6 + 72), 2);
  swift_retain(v6);
  v23 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v23)
    goto LABEL_23;
LABEL_3:
  if (v23 >= 1)
  {
    v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
      }
      else
      {
        v27 = *(_QWORD *)(v22 + 8 * v24 + 32);
        swift_retain(v27);
      }
      v28 = sub_10007EF1C(v27 + 16, (uint64_t)v42);
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(v6 + 80))(v41, v28);
      sub_100086228((uint64_t)v42, (uint64_t)&v35);
      sub_100086228((uint64_t)v41, (uint64_t)&v38);
      if (*((_QWORD *)&v36 + 1))
      {
        sub_100086228((uint64_t)&v35, (uint64_t)v34);
        if (*((_QWORD *)&v39 + 1))
        {
          v32[0] = v38;
          v32[1] = v39;
          v33 = v40;
          v26 = static AnyHashable.== infix(_:_:)(v34, v32);
          sub_100018968((uint64_t)v34);
          sub_100018968((uint64_t)v32);
          v25 = &qword_100809010;
        }
        else
        {
          sub_100018968((uint64_t)v34);
          v26 = 0;
          v25 = (uint64_t *)&unk_10080B528;
        }
      }
      else
      {
        if (*((_QWORD *)&v39 + 1))
          v25 = (uint64_t *)&unk_10080B528;
        else
          v25 = &qword_100809010;
        if (*((_QWORD *)&v39 + 1))
          v26 = 0;
        else
          v26 = -1;
      }
      sub_100010F2C((uint64_t)&v35, v25);
      ++v24;
      sub_100010F2C((uint64_t)v41, &qword_100809010);
      sub_100010F2C((uint64_t)v42, &qword_100809010);
      *(_BYTE *)(v27 + 72) = v26 & 1;
      swift_release(v27);
    }
    while (v23 != v24);
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_100085D38(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t *v19;
  _OWORD v21[2];
  uint64_t v22;
  _BYTE v23[40];
  _BYTE v24[24];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[5];

  if (*v1 == *a1
    && (v2 = v1, (static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 2) & 1) != 0)
    && (v4 = type metadata accessor for MenuDebugSetting(), (v5 = swift_dynamicCastClass(a1, v4)) != 0))
  {
    v6 = v5;
    v7 = *(_QWORD *)(v5 + 56);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = v1[7];
    v10 = v1[8];
    v11 = v7 == v9 && v8 == v10;
    if (v11 || (v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v9, v10, 0) & 1) != 0))
    {
      v13 = *(_QWORD *)(v6 + 72);
      v14 = v2[9];
      swift_retain(a1);
      swift_bridgeObjectRetain(v13);
      sub_1003330A0(v15, v14);
      LOBYTE(v14) = v16;
      v17 = swift_bridgeObjectRelease(v13);
      if ((v14 & 1) != 0)
      {
        v18 = (*(_QWORD *(**)(_QWORD *__return_ptr, __n128))(v6 + 80))(v30, v17);
        ((void (*)(_QWORD *__return_ptr, _QWORD *))v2[10])(v29, v18);
        sub_100086228((uint64_t)v30, (uint64_t)v24);
        sub_100086228((uint64_t)v29, (uint64_t)&v26);
        if (v25)
        {
          sub_100086228((uint64_t)v24, (uint64_t)v23);
          if (*((_QWORD *)&v27 + 1))
          {
            v21[0] = v26;
            v21[1] = v27;
            v22 = v28;
            v12 = static AnyHashable.== infix(_:_:)(v23, v21);
            swift_release();
            sub_100018968((uint64_t)v21);
            v19 = &qword_100809010;
            sub_100010F2C((uint64_t)v29, &qword_100809010);
            sub_100010F2C((uint64_t)v30, &qword_100809010);
            sub_100018968((uint64_t)v23);
          }
          else
          {
            swift_release();
            sub_100010F2C((uint64_t)v29, &qword_100809010);
            sub_100010F2C((uint64_t)v30, &qword_100809010);
            sub_100018968((uint64_t)v23);
            v12 = 0;
            v19 = &qword_10080B528;
          }
        }
        else
        {
          swift_release();
          v19 = &qword_100809010;
          sub_100010F2C((uint64_t)v29, &qword_100809010);
          sub_100010F2C((uint64_t)v30, &qword_100809010);
          if (*((_QWORD *)&v27 + 1))
          {
            v19 = &qword_10080B528;
            v12 = 0;
          }
          else
          {
            v12 = -1;
          }
        }
        sub_100010F2C((uint64_t)v24, v19);
      }
      else
      {
        swift_release();
        v12 = 0;
      }
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_100085F58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  Swift::UInt v22;
  _OWORD v23[2];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[5];

  v2 = v1;
  ((void (*)(void))AnyHashable.hash(into:))();
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v2 + 72);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v21 = *(_QWORD *)(v2 + 72);
    else
      v21 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v2 + 72), 2);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v6);
    Hasher._combine(_:)(v22);
    swift_bridgeObjectRetain(v6);
    v8 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v6);
    if (!v8)
      goto LABEL_10;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 72));
    Hasher._combine(_:)(v7);
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_10;
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v8; ++i)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      AnyHashable.hash(into:)(a1, v11);
      v12 = *(_QWORD *)(v10 + 56);
      v13 = *(_QWORD *)(v10 + 64);
      swift_bridgeObjectRetain(v13);
      String.hash(into:)(a1, v12, v13);
      swift_bridgeObjectRelease(v13);
      Hasher._combine(_:)(*(_BYTE *)(v10 + 72));
      swift_unknownObjectRelease();
    }
  }
  else
  {
    for (j = 0; j != v8; ++j)
    {
      v15 = *(_QWORD *)(v6 + 8 * j + 32);
      v16 = swift_retain(v15);
      AnyHashable.hash(into:)(a1, v16);
      v17 = *(_QWORD *)(v15 + 56);
      v18 = *(_QWORD *)(v15 + 64);
      swift_bridgeObjectRetain(v18);
      String.hash(into:)(a1, v17, v18);
      swift_bridgeObjectRelease(v18);
      Hasher._combine(_:)(*(_BYTE *)(v15 + 72));
      swift_release();
    }
  }
LABEL_10:
  v19 = swift_bridgeObjectRelease(v6);
  (*(void (**)(_QWORD *__return_ptr, __n128))(v2 + 80))(v28, v19);
  sub_100086228((uint64_t)v28, (uint64_t)&v25);
  if (*((_QWORD *)&v26 + 1))
  {
    v23[0] = v25;
    v23[1] = v26;
    v24 = v27;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)(a1, v20);
    sub_100018968((uint64_t)v23);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_100010F2C((uint64_t)v28, &qword_100809010);
}

uint64_t sub_1000861A8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[9]);
  return swift_release(v0[11]);
}

uint64_t sub_1000861CC()
{
  uint64_t v0;

  sub_100018968(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for MenuDebugSetting()
{
  return objc_opt_self(_TtC20ProductPageExtension16MenuDebugSetting);
}

uint64_t sub_100086228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100809010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100086320()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Class isa;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[3];
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  objc_super v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  v1 = v0;
  v64.receiver = v0;
  v64.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v64, "viewDidLoad");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension30LocalizationTestViewController_objectGraph];
  v3 = qword_100804778;
  swift_retain(v2);
  if (v3 != -1)
    swift_once(&qword_100804778, sub_1000883A8);
  v4 = qword_10080B940;
  swift_retain(v2);
  swift_bridgeObjectRetain(v4);
  sub_100088B44(v2, (uint64_t)&v65);
  v5 = v66;
  v6 = v71;
  v7 = v73;
  v54[0] = v2;
  v54[1] = v65;
  v54[2] = v66;
  v55 = v67;
  v56 = v68;
  v57 = v69;
  v58 = v70;
  v59 = v71;
  v60 = v72;
  v61 = v73;
  v62 = v74;
  v63 = v4;
  v8 = objc_allocWithZone((Class)sub_10000DAF8(&qword_10080B978));
  swift_retain(v2);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v9 = swift_bridgeObjectRetain(v4);
  v10 = (void *)UIHostingController.init(rootView:)(v54, v9);
  objc_msgSend(v1, "addChildViewController:", v10);
  v11 = objc_msgSend(v10, "view");
  if (!v11)
  {
    __break(1u);
    goto LABEL_16;
  }
  v12 = v11;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v14 = v13;
  v53 = v7;
  v15 = objc_msgSend(v10, "view");
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v15;
  objc_msgSend(v14, "addSubview:", v15);

  v17 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v18 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100644360;
  v19 = objc_msgSend(v10, "view");
  if (!v19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20 = v19;
  v52 = v6;
  v21 = objc_msgSend(v19, "topAnchor");

  v22 = objc_msgSend(v1, "view");
  if (!v22)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "topAnchor");

  v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);
  *(_QWORD *)(v18 + 32) = v25;
  v26 = objc_msgSend(v10, "view");
  if (!v26)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "leadingAnchor");

  v29 = objc_msgSend(v1, "view");
  if (!v29)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "leadingAnchor");

  v32 = objc_msgSend(v28, "constraintEqualToAnchor:", v31);
  *(_QWORD *)(v18 + 40) = v32;
  v33 = objc_msgSend(v10, "view");
  if (!v33)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, "bottomAnchor");

  v36 = objc_msgSend(v1, "view");
  if (!v36)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v37 = v36;
  v51 = v4;
  v38 = objc_msgSend(v36, "bottomAnchor");

  v39 = objc_msgSend(v35, "constraintEqualToAnchor:", v38);
  *(_QWORD *)(v18 + 48) = v39;
  v40 = objc_msgSend(v10, "view");
  if (!v40)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "trailingAnchor");

  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    v45 = (void *)objc_opt_self(NSLayoutConstraint);
    v46 = objc_msgSend(v44, "trailingAnchor");

    v47 = objc_msgSend(v42, "constraintEqualToAnchor:", v46);
    *(_QWORD *)(v18 + 56) = v47;
    v54[0] = v18;
    specialized Array._endMutation()(v48);
    v49 = v54[0];
    sub_100018B6C(0, (unint64_t *)&qword_10080B980, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease(v49).n128_f64[0]);

    objc_msgSend(v10, "didMoveToParentViewController:", v1);
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v5);
    swift_release();

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t type metadata accessor for LocalizationTestViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension30LocalizationTestViewController);
}

double sub_100086904@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  Swift::String v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, __n128);
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  double result;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  int v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  __int128 v122;
  char v123;
  _QWORD *v124;
  Swift::String v125;
  __int128 v126;
  _BYTE v127[25];

  v95 = a2;
  v99 = (_QWORD *)sub_10000DAF8(&qword_10080B9D0);
  v98 = *(v99 - 1);
  __chkstk_darwin(v99);
  v97 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_10000DAF8(&qword_10080B9D8);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v102 = (char *)&v91 - v7;
  v96 = type metadata accessor for Prominence(0, v6);
  v92 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_10000DAF8(&qword_10080B9E0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_10000DAF8(&qword_10080B9E8);
  v116 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v113 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v115 = (char *)&v91 - v14;
  v15 = *(_OWORD *)(a1 + 24);
  v125 = *(Swift::String *)(a1 + 8);
  v126 = v15;
  *(_OWORD *)v127 = *(_OWORD *)(a1 + 40);
  v16 = a1;
  *(_OWORD *)&v127[9] = *(_OWORD *)(a1 + 49);
  sub_1000872D8();
  v18 = v17;
  static Font.footnote.getter(v19);
  v101 = Text.font(_:)();
  v117 = v20;
  v22 = v21;
  v118 = v23;
  swift_bridgeObjectRelease(v18);
  v24 = swift_release();
  if ((v126 & 1) != 0)
  {
    *(_QWORD *)&v122 = 0;
    *((_QWORD *)&v122 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease(*((_QWORD *)&v122 + 1));
    *(_QWORD *)&v122 = 0x100000000000002ELL;
    *((_QWORD *)&v122 + 1) = 0x800000010068A3B0;
    v26 = v125;
    swift_bridgeObjectRetain(v125._object);
    String.append(_:)(v26);
    v24 = swift_bridgeObjectRelease(v26._object);
    v25 = *((_QWORD *)&v122 + 1);
  }
  else
  {
    v25 = 0x800000010068A2C0;
  }
  v108 = v22 & 1;
  static Font.footnote.getter(v24);
  v110 = Text.font(_:)();
  v109 = v27;
  v29 = v28;
  v111 = v30;
  swift_bridgeObjectRelease(v25);
  v31 = swift_release();
  v107 = v29 & 1;
  if ((BYTE1(v126) & 1) != 0)
    v32 = 0x800000010068A370;
  else
    v32 = 0x800000010068A310;
  static Font.footnote.getter(v31);
  v112 = Text.font(_:)();
  v106 = v33;
  v35 = v34;
  v114 = v36;
  swift_bridgeObjectRelease(v32);
  swift_release();
  *(_QWORD *)&v122 = 0xD000000000000017;
  *((_QWORD *)&v122 + 1) = 0x800000010068A350;
  v100 = v35 & 1;
  v123 = 0;
  v124 = _swiftEmptyArrayStorage;
  __chkstk_darwin(v37);
  v38 = v16;
  *(&v91 - 2) = v16;
  v39 = sub_10000DAF8(&qword_10080B9F0);
  v40 = sub_1000896D8();
  Section<>.init(header:content:)(&v122, sub_1000896D0, &v91 - 4, &type metadata for Text, v39, &protocol witness table for Text, v40);
  v41 = enum case for Prominence.increased(_:);
  v42 = v92;
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 104);
  v44 = v96;
  v43(v9, enum case for Prominence.increased(_:), v96);
  v45 = sub_10008980C(&qword_10080BA08, &qword_10080B9E0, (void (*)(void))sub_1000896D8);
  v46 = v113;
  v47 = v94;
  View.headerProminence(_:)(v9, v94, v45);
  v48 = *(void (**)(char *, uint64_t))(v42 + 8);
  v48(v9, v44);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v11, v47);
  v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v116 + 32))(v115, v46, v119);
  v122 = xmmword_100644370;
  v123 = 0;
  v124 = _swiftEmptyArrayStorage;
  __chkstk_darwin(v49);
  *(&v91 - 2) = v38;
  v50 = sub_10000DAF8(&qword_10080BA10);
  v51 = sub_100089788();
  v52 = v97;
  Section<>.init(header:content:)(&v122, sub_100089780, &v91 - 4, &type metadata for Text, v50, &protocol witness table for Text, v51);
  v43(v9, v41, v44);
  v53 = sub_10008980C(&qword_10080BA30, &qword_10080B9D0, (void (*)(void))sub_100089788);
  v54 = v104;
  v55 = v99;
  View.headerProminence(_:)(v9, v99, v53);
  v48(v9, v44);
  (*(void (**)(char *, _QWORD *))(v98 + 8))(v52, v55);
  v56 = v103;
  v57 = v102;
  v58 = v105;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v54, v105);
  LOBYTE(v55) = v108;
  LOBYTE(v122) = v108;
  LOBYTE(v46) = v107;
  v121 = v107;
  LOBYTE(v41) = v100;
  v120 = v100;
  v98 = *(_QWORD *)(v116 + 16);
  v59 = v113;
  v60 = v119;
  ((void (*)(char *, char *, uint64_t))v98)(v113, v115, v119);
  v99 = *(_QWORD **)(v56 + 16);
  v61 = v54;
  ((void (*)(char *, char *, uint64_t))v99)(v54, v57, v58);
  v62 = v101;
  v63 = v95;
  v64 = v117;
  *v95 = v101;
  v63[1] = v64;
  *((_BYTE *)v63 + 16) = (_BYTE)v55;
  v65 = v110;
  v63[3] = v118;
  v63[4] = v65;
  v63[5] = v109;
  *((_BYTE *)v63 + 48) = (_BYTE)v46;
  v66 = v112;
  v63[7] = v111;
  v63[8] = v66;
  v67 = v106;
  v63[9] = v106;
  *((_BYTE *)v63 + 80) = v41;
  v63[11] = v114;
  v68 = sub_10000DAF8(&qword_10080BA38);
  ((void (*)(char *, char *, uint64_t))v98)((char *)v63 + *(int *)(v68 + 80), v59, v60);
  ((void (*)(char *, char *, uint64_t))v99)((char *)v63 + *(int *)(v68 + 96), v61, v58);
  v69 = v117;
  LOBYTE(v59) = v108;
  sub_100089884(v62, v117, v108);
  swift_bridgeObjectRetain(v118);
  v70 = v110;
  v71 = v109;
  LOBYTE(v61) = v107;
  sub_100089884(v110, v109, v107);
  v72 = v111;
  swift_bridgeObjectRetain(v111);
  v73 = v112;
  LOBYTE(v63) = v100;
  sub_100089884(v112, v67, v100);
  v74 = v114;
  swift_bridgeObjectRetain(v114);
  v75 = v101;
  sub_100089884(v101, v69, (char)v59);
  v76 = v118;
  swift_bridgeObjectRetain(v118);
  sub_100089884(v70, v71, (char)v61);
  swift_bridgeObjectRetain(v72);
  v77 = v73;
  v78 = v106;
  sub_100089884(v73, v106, (char)v63);
  v79 = *(void (**)(char *, uint64_t, __n128))(v103 + 8);
  v80 = v74;
  v81 = swift_bridgeObjectRetain(v74);
  v82 = v105;
  v79(v102, v105, v81);
  v83 = *(void (**)(char *, uint64_t))(v116 + 8);
  v84 = v119;
  v83(v115, v119);
  sub_100089894(v77, v78, (char)v63);
  swift_bridgeObjectRelease(v80);
  v85 = v110;
  v86 = v109;
  sub_100089894(v110, v109, v107);
  v87 = v111;
  swift_bridgeObjectRelease(v111);
  v88 = v117;
  sub_100089894(v75, v117, v108);
  v89 = swift_bridgeObjectRelease(v76);
  v79(v104, v82, v89);
  v83(v113, v84);
  sub_100089894(v112, v106, v120);
  swift_bridgeObjectRelease(v114);
  sub_100089894(v85, v86, v121);
  swift_bridgeObjectRelease(v87);
  sub_100089894(v75, v88, v122);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v76).n128_u64[0];
  return result;
}

uint64_t sub_1000872D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 18) & 1) != 0)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0x1000000000000012;
  }
  else
  {
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0x1000000000000027;
  }
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain(v1);
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v1);
  return v5;
}

uint64_t sub_1000873A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain(v6);
  v1 = sub_10000DAF8(&qword_10080BA70);
  v2 = sub_100010E80(&qword_10080BA78, &qword_10080BA70, (uint64_t)&protocol conformance descriptor for [A]);
  v3 = sub_10008973C();
  v4 = sub_1000898E8();
  return ForEach<>.init(_:content:)(&v6, sub_100087450, 0, v1, &type metadata for String, &type metadata for LocalizationTestResultView, v2, v3, v4);
}

uint64_t sub_100087454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;

  v38 = sub_10000DAF8(&qword_10080BA40);
  v4 = __chkstk_darwin(v38);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentViewConfiguration(0, v4);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DAF8(&qword_10080BA28);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
  {
    v39[0] = 0xD000000000000016;
    v39[1] = 0x80000001006444A0;
    v40 = 1;
    v36 = static Transaction._loading.getter(v12);
    IntentViewConfiguration.init()();
    v35 = sub_10000DAF8(&qword_10080B9F0);
    v34 = sub_10000DAF8(&qword_10080BA48);
    v26 = sub_10000DAF8(&qword_10080BA50);
    v27 = sub_1000898A4();
    v28 = sub_1000896D8();
    v37 = a2;
    v29 = v28;
    v30 = sub_100010E80(&qword_10080BA60, &qword_10080BA48, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    v31 = sub_100010E80(&qword_10080BA68, &qword_10080BA50, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    IntentView.init(what:transaction:configuration:working:failed:content:)(v39, v36, v9, &j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, sub_100087790, 0, sub_1000877DC, 0, &type metadata for LocalizationTestIntent, v35, v34, v26, v27, v29, v30, v31);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v14, v10);
    swift_storeEnumTagMultiPayload(v6, v38, 0);
    v32 = sub_100010E80(&qword_10080BA20, &qword_10080BA28, (uint64_t)&protocol conformance descriptor for IntentView<A, B, C, D>);
    _ConditionalContent<>.init(storage:)(v6, v10, &type metadata for Text, v32, &protocol witness table for Text);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v15 = *(_QWORD *)(a1 + 56);
    v16 = swift_bridgeObjectRetain(v15);
    static Font.footnote.getter(v16);
    v17 = Text.font(_:)();
    v19 = v18;
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease(v15);
    swift_release();
    *(_QWORD *)v6 = v17;
    *((_QWORD *)v6 + 1) = v19;
    v6[16] = v21 & 1;
    *((_QWORD *)v6 + 3) = v23;
    swift_storeEnumTagMultiPayload(v6, v38, 1);
    v24 = sub_100010E80(&qword_10080BA20, &qword_10080BA28, (uint64_t)&protocol conformance descriptor for IntentView<A, B, C, D>);
    return _ConditionalContent<>.init(storage:)(v6, v10, &type metadata for Text, v24, &protocol witness table for Text);
  }
}

uint64_t sub_100087790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_errorRetain();
  swift_retain(a3);
  return ContentUnavailableView.init<>(error:retry:)(a1, a2, a3);
}

uint64_t sub_1000877DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v6 = *a1;
  swift_bridgeObjectRetain(v6);
  v1 = sub_10000DAF8(&qword_10080BA70);
  v2 = sub_100010E80(&qword_10080BA78, &qword_10080BA70, (uint64_t)&protocol conformance descriptor for [A]);
  v3 = sub_10008973C();
  v4 = sub_1000898E8();
  return ForEach<>.init(_:content:)(&v6, sub_100087450, 0, v1, &type metadata for String, &type metadata for LocalizationTestResultView, v2, v3, v4);
}

uint64_t sub_100087888@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v11 = a1[8];
  v10 = a1[9];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v6;
  a2[5] = v7;
  a2[6] = v8;
  a2[7] = v9;
  a2[8] = v11;
  a2[9] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  return swift_bridgeObjectRetain(v9);
}

uint64_t sub_1000878F8()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100087910()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  _OWORD *v15;
  _QWORD v16[5];
  _OWORD v17[5];

  v1 = sub_10000DAF8(&qword_10080B9A8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0[3];
  v17[2] = v0[2];
  v17[3] = v5;
  v17[4] = v0[4];
  v6 = v0[1];
  v17[0] = *v0;
  v17[1] = v6;
  v15 = v17;
  v7 = sub_10000DAF8(&qword_10080B9B0);
  v8 = sub_100010E80(&qword_10080B9B8, &qword_10080B9B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_1000896C8, v14, v7, v8);
  v9 = type metadata accessor for JSIntentDispatcher(0);
  v10 = *(_QWORD *)&v17[0];
  v16[3] = v9;
  v16[4] = sub_10000E720(&qword_10080B9C0, (uint64_t (*)(uint64_t))&type metadata accessor for JSIntentDispatcher, (uint64_t)&protocol conformance descriptor for JSIntentDispatcher);
  v11 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(v9, v10, v9, v11);
  v12 = sub_100010E80(&qword_10080B9C8, &qword_10080B9A8, (uint64_t)&protocol conformance descriptor for List<A, B>);
  View.intentDispatcher(_:with:)(v16, v10, v1, v12);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v16);
}

double sub_100087A94@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  double result;
  _OWORD v32[8];
  _BYTE v33[135];
  char v34;
  __int128 v35;
  _BYTE v36[136];
  char v37;
  _QWORD v38[2];
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[23];

  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  if (v7 != v5 || v8 != v6)
    _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v5, v6, 0);
  static Font.title3.getter(a3);
  v10 = Text.font(_:)();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(0xA300000000000000);
  v17 = swift_release();
  v18 = v14 & 1;
  v19 = static HorizontalAlignment.leading.getter(v17);
  sub_100087CB4((uint64_t)a1, (uint64_t)v32);
  *(_OWORD *)&v33[71] = v32[4];
  *(_OWORD *)&v33[87] = v32[5];
  *(_OWORD *)&v33[103] = v32[6];
  *(_OWORD *)&v33[119] = v32[7];
  *(_OWORD *)&v33[7] = v32[0];
  *(_OWORD *)&v33[23] = v32[1];
  *(_OWORD *)&v33[39] = v32[2];
  *(_OWORD *)&v33[55] = v32[3];
  *(_QWORD *)&v35 = v19;
  *((_QWORD *)&v35 + 1) = 0x4020000000000000;
  v36[0] = 0;
  v20 = *(_OWORD *)&v33[16];
  *(_OWORD *)&v36[33] = *(_OWORD *)&v33[32];
  v21 = *(_OWORD *)v33;
  *(_OWORD *)&v36[17] = *(_OWORD *)&v33[16];
  v22 = *(_OWORD *)&v33[64];
  *(_OWORD *)&v36[81] = *(_OWORD *)&v33[80];
  v23 = *(_OWORD *)&v33[80];
  *(_OWORD *)&v36[97] = *(_OWORD *)&v33[96];
  v24 = *(_OWORD *)&v33[96];
  *(_OWORD *)&v36[113] = *(_OWORD *)&v33[112];
  v25 = *(_OWORD *)&v33[32];
  *(_OWORD *)&v36[49] = *(_OWORD *)&v33[48];
  v26 = *(_OWORD *)&v33[48];
  *(_OWORD *)&v36[65] = *(_OWORD *)&v33[64];
  *(_OWORD *)&v36[1] = *(_OWORD *)v33;
  v27 = *(_OWORD *)&v36[96];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v36[80];
  *(_OWORD *)(a2 + 144) = v27;
  *(_OWORD *)(a2 + 160) = *(_OWORD *)&v36[112];
  v28 = *(_OWORD *)&v36[32];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v36[16];
  *(_OWORD *)(a2 + 80) = v28;
  v29 = *(_OWORD *)&v36[64];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v36[48];
  *(_OWORD *)(a2 + 112) = v29;
  v30 = *(_OWORD *)v36;
  *(_OWORD *)(a2 + 32) = v35;
  *(_OWORD *)(a2 + 48) = v30;
  v45 = v23;
  v46 = v24;
  *(_OWORD *)v47 = *(_OWORD *)&v33[112];
  v41 = v20;
  v42 = v25;
  v43 = v26;
  v44 = v22;
  v34 = 0;
  *(_QWORD *)&v36[128] = *(_QWORD *)&v33[127];
  v37 = v18;
  *(_QWORD *)(a2 + 176) = *(_QWORD *)&v33[127];
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v16;
  v38[0] = v19;
  v38[1] = 0x4020000000000000;
  v39 = 0;
  *(_QWORD *)&v47[15] = *(_QWORD *)&v33[127];
  v40 = v21;
  sub_100089884(v10, v12, v18);
  swift_bridgeObjectRetain(v16);
  sub_10008A0C4((uint64_t)&v35);
  sub_10008A214((uint64_t)v38);
  sub_100089894(v10, v12, v18);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

double sub_100087CB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  double result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;
  __int128 v51;
  _BYTE v52[16];
  uint64_t v53;
  unint64_t v54;

  v49 = *(Swift::String *)(a1 + 32);
  v50 = *(Swift::String *)(a1 + 48);
  v51 = *(_OWORD *)(a1 + 64);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = swift_bridgeObjectRetain(v2);
  static Font.title3.getter(v3);
  v4 = Text.font(_:)();
  v6 = v5;
  v42 = v7;
  v46 = v8;
  swift_bridgeObjectRelease(v2);
  swift_release();
  v44 = v6;
  v45 = v4;
  if (v50 == v49
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v50._countAndFlagsBits, v50._object, v49._countAndFlagsBits, v49._object, 0) & 1) != 0)
  {
    v9 = 0;
    v47 = 0;
    v48 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v43 = 0;
  }
  else
  {
    swift_bridgeObjectRetain(v49._object);
    String.append(_:)(v49);
    v14 = swift_bridgeObjectRelease(v49._object);
    static Font.footnote.getter(v14);
    v15 = Text.font(_:)();
    v17 = v16;
    v19 = v18;
    v21 = v20;
    swift_bridgeObjectRelease(0xEA0000000000203ALL);
    swift_release();
    v53 = 0x203A6C6175746341;
    v54 = 0xE800000000000000;
    swift_bridgeObjectRetain(v50._object);
    String.append(_:)(v50);
    v22 = swift_bridgeObjectRelease(v50._object);
    static Font.footnote.getter(v22);
    v11 = Text.font(_:)();
    v12 = v23;
    v25 = v24;
    v27 = v26;
    swift_bridgeObjectRelease(0xE800000000000000);
    v9 = v15;
    swift_release();
    v13 = v25 & 1;
    sub_100089884(v9, v17, v19 & 1);
    swift_bridgeObjectRetain(v21);
    sub_100089884(v11, v12, v25 & 1);
    swift_bridgeObjectRetain(v27);
    sub_100089894(v11, v12, v25 & 1);
    v43 = v27;
    swift_bridgeObjectRelease(v27);
    v48 = v17;
    v4 = v45;
    v10 = v19 & 1;
    sub_100089894(v9, v17, v19 & 1);
    v47 = v21;
    v28 = v21;
    v6 = v44;
    swift_bridgeObjectRelease(v28);
  }
  sub_10008A364((uint64_t)&v51, (uint64_t)v52);
  sub_10008A364((uint64_t)v52, (uint64_t)&v53);
  v29 = v54;
  if (v54)
  {
    v30 = v53;
    String.append(_:)(*(Swift::String *)(&v29 - 1));
    static Font.caption2.getter();
    v31 = Text.font(_:)();
    v39 = v32;
    v40 = v31;
    v34 = v33;
    v38 = v35;
    swift_bridgeObjectRelease(0xE600000000000000);
    swift_release();
    v36 = v34 & 1;
  }
  else
  {
    v39 = 0;
    v40 = 0;
    v36 = 0;
    v38 = 0;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v42 & 1;
  *(_QWORD *)(a2 + 24) = v46;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v48;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v47;
  *(_QWORD *)(a2 + 64) = v11;
  *(_QWORD *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v13;
  *(_QWORD *)(a2 + 88) = v43;
  *(_QWORD *)(a2 + 96) = v40;
  *(_QWORD *)(a2 + 104) = v39;
  *(_QWORD *)(a2 + 112) = v36;
  *(_QWORD *)(a2 + 120) = v38;
  sub_100089884(v4, v6, v42 & 1);
  swift_bridgeObjectRetain(v46);
  sub_10008A17C(v9, v48, v10, v47, v11, v12, v13, v43);
  sub_10008A1E4(v40, v39, v36, v38);
  sub_10008A334(v40, v39, v36, v38);
  sub_10008A2CC(v9, v48, v10, v47, v11, v12, v13, v43);
  sub_100089894(v45, v44, v42 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v46).n128_u64[0];
  return result;
}

double sub_1000880E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  _OWORD *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __n128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  double result;
  __int128 v20;
  _OWORD v21[5];
  _OWORD v22[11];
  uint64_t v23;
  _OWORD v24[12];

  v11 = v9[3];
  v21[2] = v9[2];
  v21[3] = v11;
  v21[4] = v9[4];
  v12 = v9[1];
  v21[0] = *v9;
  v21[1] = v12;
  v13 = static VerticalAlignment.top.getter(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)&v21[0], *((_QWORD *)&v21[0] + 1));
  sub_100087A94(v21, (uint64_t)v22, v14);
  *(_OWORD *)((char *)&v24[8] + 7) = v22[8];
  *(_OWORD *)((char *)&v24[9] + 7) = v22[9];
  *(_OWORD *)((char *)&v24[10] + 7) = v22[10];
  *(_QWORD *)((char *)&v24[11] + 7) = v23;
  *(_OWORD *)((char *)&v24[4] + 7) = v22[4];
  *(_OWORD *)((char *)&v24[5] + 7) = v22[5];
  *(_OWORD *)((char *)&v24[6] + 7) = v22[6];
  *(_OWORD *)((char *)&v24[7] + 7) = v22[7];
  *(_OWORD *)((char *)v24 + 7) = v22[0];
  *(_OWORD *)((char *)&v24[1] + 7) = v22[1];
  *(_OWORD *)((char *)&v24[2] + 7) = v22[2];
  *(_OWORD *)((char *)&v24[3] + 7) = v22[3];
  v15 = v24[9];
  *(_OWORD *)(a9 + 145) = v24[8];
  *(_OWORD *)(a9 + 161) = v15;
  *(_OWORD *)(a9 + 177) = v24[10];
  *(_OWORD *)(a9 + 192) = *(_OWORD *)((char *)&v24[10] + 15);
  v16 = v24[5];
  *(_OWORD *)(a9 + 81) = v24[4];
  *(_OWORD *)(a9 + 97) = v16;
  v17 = v24[7];
  *(_OWORD *)(a9 + 113) = v24[6];
  *(_OWORD *)(a9 + 129) = v17;
  v18 = v24[1];
  *(_OWORD *)(a9 + 17) = v24[0];
  *(_OWORD *)(a9 + 33) = v18;
  result = *(double *)&v24[2];
  v20 = v24[3];
  *(_OWORD *)(a9 + 49) = v24[2];
  *(_QWORD *)a9 = v13;
  *(_QWORD *)(a9 + 8) = 0x4038000000000000;
  *(_BYTE *)(a9 + 16) = 0;
  *(_OWORD *)(a9 + 65) = v20;
  return result;
}

uint64_t sub_1000881E8()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v11;

  v0 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  v1 = objc_msgSend(v0, "ams_activeiTunesAccount");
  if (!v1)
  {
    v2 = objc_msgSend(v0, "ams_fetchLocaliTunesAccount");
    v11 = 0;
    v1 = objc_msgSend(v2, "resultWithError:", &v11);

    v3 = v11;
    if (!v1)
    {
      v8 = v11;
      v9 = _convertNSErrorToError(_:)(v3);

      swift_willThrow();
      swift_errorRelease(v9);
      v1 = 0;
      goto LABEL_7;
    }
    v4 = v11;
  }
  v5 = objc_msgSend(v1, "ams_storefront");
  if (!v5)
  {
LABEL_7:

    return 0;
  }
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

  return v7;
}

__n128 sub_100088350@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v6;
  _OWORD v7[5];

  sub_100089274(a1, a2, (uint64_t *)v7);
  if (!v3)
  {
    v6 = v7[3];
    *(_OWORD *)(a3 + 32) = v7[2];
    *(_OWORD *)(a3 + 48) = v6;
    *(_OWORD *)(a3 + 64) = v7[4];
    result = (__n128)v7[1];
    *(_OWORD *)a3 = v7[0];
    *(__n128 *)(a3 + 16) = result;
  }
  return result;
}

uint64_t sub_10008839C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1000883A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DAF8(&qword_10080B998);
  v5 = swift_allocObject(v4, 752, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100644380;
  v6._countAndFlagsBits = 0xD000000000000016;
  v6._object = (void *)0x8000000100689E90;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = localizedString(_:comment:)(v6, v7);
  v10 = UUID.init()(v9);
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v3, v0);
  *(_QWORD *)(v5 + 32) = v11;
  *(_QWORD *)(v5 + 40) = v13;
  *(_QWORD *)(v5 + 48) = 0xD000000000000025;
  *(_QWORD *)(v5 + 56) = 0x8000000100689E60;
  *(_QWORD *)(v5 + 64) = 1852141647;
  *(_QWORD *)(v5 + 72) = 0xE400000000000000;
  *(Swift::String *)(v5 + 80) = v8;
  *(_OWORD *)(v5 + 96) = 0u;
  v15._countAndFlagsBits = 0x525F5245544F4F46;
  v15._object = (void *)0xED00004D45454445;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = localizedString(_:comment:)(v15, v16);
  v19 = UUID.init()(v18);
  v20 = UUID.uuidString.getter(v19);
  v22 = v21;
  v14(v3, v0);
  *(_QWORD *)(v5 + 112) = v20;
  *(_QWORD *)(v5 + 120) = v22;
  *(_QWORD *)(v5 + 128) = 0xD000000000000025;
  *(_QWORD *)(v5 + 136) = 0x8000000100689EB0;
  *(_QWORD *)(v5 + 144) = 0x6D6565646552;
  *(_QWORD *)(v5 + 152) = 0xE600000000000000;
  *(Swift::String *)(v5 + 160) = v17;
  *(_OWORD *)(v5 + 176) = 0u;
  v23._countAndFlagsBits = 0xD000000000000013;
  v23._object = (void *)0x8000000100689F30;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25 = localizedStringWithCount(_:count:comment:)(v23, 2, v24);
  v27 = UUID.init()(v26);
  v28 = UUID.uuidString.getter(v27);
  v30 = v29;
  v14(v3, v0);
  *(_QWORD *)(v5 + 192) = v28;
  *(_QWORD *)(v5 + 200) = v30;
  *(_QWORD *)(v5 + 208) = 0xD000000000000041;
  *(_QWORD *)(v5 + 216) = 0x8000000100689EE0;
  *(_QWORD *)(v5 + 224) = 0x676E697461522032;
  *(_QWORD *)(v5 + 232) = 0xE900000000000073;
  *(Swift::String *)(v5 + 240) = v25;
  *(_OWORD *)(v5 + 256) = 0u;
  v31._countAndFlagsBits = 0xD000000000000013;
  v31._object = (void *)0x8000000100689F30;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v33 = localizedStringWithCount(_:count:comment:)(v31, 1, v32);
  v35 = UUID.init()(v34);
  v36 = UUID.uuidString.getter(v35);
  v38 = v37;
  v14(v3, v0);
  *(_QWORD *)(v5 + 272) = v36;
  *(_QWORD *)(v5 + 280) = v38;
  *(_QWORD *)(v5 + 288) = 0xD000000000000041;
  *(_QWORD *)(v5 + 296) = 0x8000000100689F50;
  *(_QWORD *)(v5 + 304) = 0x676E697461522031;
  *(_QWORD *)(v5 + 312) = 0xE800000000000000;
  *(Swift::String *)(v5 + 320) = v33;
  *(_OWORD *)(v5 + 336) = 0u;
  v39._countAndFlagsBits = 0xD000000000000028;
  v39._object = (void *)0x800000010068A000;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v41 = localizedStringWithCount(_:count:comment:)(v39, 3, v40);
  v43 = UUID.init()(v42);
  v44 = UUID.uuidString.getter(v43);
  v46 = v45;
  v14(v3, v0);
  *(_QWORD *)(v5 + 352) = v44;
  *(_QWORD *)(v5 + 360) = v46;
  *(_QWORD *)(v5 + 368) = 0xD000000000000036;
  *(_QWORD *)(v5 + 376) = 0x8000000100689FA0;
  *(_QWORD *)(v5 + 384) = 0xD000000000000017;
  *(_QWORD *)(v5 + 392) = 0x8000000100689FE0;
  *(Swift::String *)(v5 + 400) = v41;
  *(_OWORD *)(v5 + 416) = 0u;
  v47._countAndFlagsBits = 0xD00000000000002FLL;
  v47._object = (void *)0x800000010068A0A0;
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v49 = localizedStringWithCount(_:count:comment:)(v47, 1, v48);
  v51 = UUID.init()(v50);
  v52 = UUID.uuidString.getter(v51);
  v54 = v53;
  v14(v3, v0);
  *(_QWORD *)(v5 + 432) = v52;
  *(_QWORD *)(v5 + 440) = v54;
  *(_QWORD *)(v5 + 448) = 0xD000000000000045;
  *(_QWORD *)(v5 + 456) = 0x800000010068A030;
  *(_QWORD *)(v5 + 464) = 0xD000000000000014;
  *(_QWORD *)(v5 + 472) = 0x800000010068A080;
  *(Swift::String *)(v5 + 480) = v49;
  *(_OWORD *)(v5 + 496) = 0u;
  v55._countAndFlagsBits = 0xD00000000000002FLL;
  v55._object = (void *)0x800000010068A0A0;
  v56._countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  v57 = localizedStringWithCount(_:count:comment:)(v55, 2, v56);
  v59 = UUID.init()(v58);
  v60 = UUID.uuidString.getter(v59);
  v62 = v61;
  v14(v3, v0);
  *(_QWORD *)(v5 + 512) = v60;
  *(_QWORD *)(v5 + 520) = v62;
  *(_QWORD *)(v5 + 528) = 0xD000000000000045;
  *(_QWORD *)(v5 + 536) = 0x800000010068A0D0;
  *(_QWORD *)(v5 + 544) = 0xD000000000000015;
  *(_QWORD *)(v5 + 552) = 0x800000010068A120;
  *(Swift::String *)(v5 + 560) = v57;
  *(_OWORD *)(v5 + 576) = 0u;
  v63._countAndFlagsBits = 0xD00000000000002CLL;
  v63._object = (void *)0x800000010068A1A0;
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v65 = localizedStringWithCount(_:count:comment:)(v63, 2, v64);
  v67 = UUID.init()(v66);
  v68 = UUID.uuidString.getter(v67);
  v70 = v69;
  v14(v3, v0);
  *(_QWORD *)(v5 + 592) = v68;
  *(_QWORD *)(v5 + 600) = v70;
  *(_QWORD *)(v5 + 608) = 0xD000000000000050;
  *(_QWORD *)(v5 + 616) = 0x800000010068A140;
  *(_QWORD *)(v5 + 624) = 0xD000000000000015;
  *(_QWORD *)(v5 + 632) = 0x800000010068A120;
  *(Swift::String *)(v5 + 640) = v65;
  *(_OWORD *)(v5 + 656) = 0u;
  v71._countAndFlagsBits = 0xD000000000000011;
  v71._object = (void *)0x800000010068A200;
  v72 = localizedStringForAdsLanguage(_:)(v71);
  v74 = UUID.init()(v73);
  v75 = UUID.uuidString.getter(v74);
  v77 = v76;
  result = ((uint64_t (*)(char *, uint64_t))v14)(v3, v0);
  *(_QWORD *)(v5 + 672) = v75;
  *(_QWORD *)(v5 + 680) = v77;
  *(_QWORD *)(v5 + 688) = 0xD000000000000023;
  *(_QWORD *)(v5 + 696) = 0x800000010068A1D0;
  *(_QWORD *)(v5 + 704) = 0xB9B4E88D85E5;
  *(_QWORD *)(v5 + 712) = 0xA600000000000000;
  *(Swift::String *)(v5 + 720) = v72;
  *(_QWORD *)(v5 + 736) = 0xD00000000000002FLL;
  *(_QWORD *)(v5 + 744) = 0x800000010068A220;
  qword_10080B940 = v5;
  return result;
}

void sub_100088980(void *a1@<X0>, char a2@<W3>, _QWORD *a3@<X8>)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  char v12;

  v6 = (void *)objc_opt_self(JSValue);
  v7 = objc_msgSend(v6, "valueWithNewObjectInContext:", a1);
  if (v7)
  {
    v8 = v7;
    v12 = a2 & 1;
    v9 = a1;
    v10 = v8;
    v11 = objc_msgSend(v6, "valueWithObject:inContext:", _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v12, &type metadata for Bool), v9);
    swift_unknownObjectRelease();

    if (v11)
    {
      JSValue.subscript.setter(v11, 0xD000000000000012, 0x800000010068A430);
      a3[3] = sub_100018B6C(0, &qword_10080BAA8, JSValue_ptr);
      a3[4] = &protocol witness table for JSValue;

      *a3 = v10;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100088AA8()
{
  static IntentModel<>.kind.getter();
  __break(1u);
}

uint64_t sub_100088AB8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

void sub_100088AEC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_100088980(a1, *(_BYTE *)(v2 + 16), a2);
}

JSValue sub_100088B04(JSContext a1)
{
  return CustomJSValueConvertible._jsValue(in:)(a1);
}

uint64_t sub_100088B1C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_10008A3AC(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_100088B44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  char v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  id v24;
  Swift::String v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  void *object;
  uint64_t countAndFlagsBits;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  Swift::String v43;

  v4 = sub_10000DAF8((uint64_t *)&unk_10081CF90);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000881E8();
  v38 = v9;
  v39 = v8;
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  swift_bridgeObjectRetain(v9);
  _StringGuts.grow(_:)(64);
  v10._object = (void *)0x8000000100689E20;
  v10._countAndFlagsBits = 0x1000000000000032;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0xD000000000000013;
  v11._object = (void *)0x8000000100687FF0;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x206562206F742022;
  v12._object = (void *)0xEC00000065757274;
  String.append(_:)(v12);
  object = v43._object;
  countAndFlagsBits = v43._countAndFlagsBits;
  PreferenceKey.init(_:)(0xD000000000000013, 0x8000000100687FF0, &type metadata for Bool);
  v13 = type metadata accessor for LocalPreferences(0);
  static LocalPreferences.currentApplication.getter(v14);
  Preferences.subscript.getter(&v43, v7, v13, &type metadata for Bool, &protocol witness table for LocalPreferences);
  v15 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
  v16 = v43._countAndFlagsBits;
  v17 = type metadata accessor for ASKBagContract(0);
  if (*(_QWORD *)(a1 + qword_10086B3D8))
  {
    v18 = swift_retain(*(_QWORD *)(a1 + qword_10086B3D8));
    v19 = ASKBagContract.adsOverrideLanguage.getter(v18);
    if (v20)
      v21 = v19;
    else
      v21 = 0;
    if (v20)
      v22 = v20;
    else
      v22 = 0xE000000000000000;
    v23 = v21 == 0x2D736E61482D687ALL && v22 == 0xEA00000000004E43;
    v40 = a1;
    v35 = v21;
    if (v23)
      v33 = 1;
    else
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0x2D736E61482D687ALL, 0xEA00000000004E43, 0);
    v34 = v16 & 1;
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25 = NSBundle.preferredLocalization(fromLanguageCodes:)((Swift::OpaquePointer)&off_1007353E8);

    v43 = v25;
    v41 = 26746;
    v42 = 0xE200000000000000;
    v26 = sub_100088E9C();
    v27 = sub_100088EE0();
    v28 = BidirectionalCollection<>.starts<A>(with:)(&v41, &type metadata for String, &type metadata for String, v26, v27);
    swift_bridgeObjectRelease(v25._object);
    v30 = v38;
    v29 = v39;
    v43._countAndFlagsBits = v39;
    v43._object = v38;
    v41 = 0x312D313434333431;
    v42 = 0xE800000000000000;
    LOBYTE(v24) = BidirectionalCollection<>.starts<A>(with:)(&v41, &type metadata for String, &type metadata for String, v26, v27);
    swift_bridgeObjectRelease(v30);
    swift_release();
    swift_release();
    *(_QWORD *)a2 = v35;
    *(_QWORD *)(a2 + 8) = v22;
    *(_BYTE *)(a2 + 16) = v33 & 1;
    *(_BYTE *)(a2 + 17) = v28 & 1;
    *(_BYTE *)(a2 + 18) = v24 & 1;
    *(_QWORD *)(a2 + 24) = v29;
    *(_QWORD *)(a2 + 32) = v30;
    v31 = object;
    *(_QWORD *)(a2 + 40) = countAndFlagsBits;
    *(_QWORD *)(a2 + 48) = v31;
    *(_BYTE *)(a2 + 56) = v34;
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v17, v17);
    __break(1u);
  }
}

unint64_t sub_100088E9C()
{
  unint64_t result;

  result = qword_10080B988;
  if (!qword_10080B988)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10080B988);
  }
  return result;
}

unint64_t sub_100088EE0()
{
  unint64_t result;

  result = qword_10080B990;
  if (!qword_10080B990)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10080B990);
  }
  return result;
}

__n128 initializeWithTake for LocalizationTestCase(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestCase()
{
  return &type metadata for LocalizationTestCase;
}

uint64_t destroy for LocalizationTestView(_QWORD *a1)
{
  swift_release(*a1);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

uint64_t initializeWithCopy for LocalizationTestView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
  v6 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v6;
  v7 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v8 = a2[9];
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t *assignWithCopy for LocalizationTestView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t *assignWithTake for LocalizationTestView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  v7 = a2[5];
  v8 = a1[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease(v8);
  v9 = a2[7];
  v10 = a1[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease(v10);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v11 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationTestView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationTestView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestView()
{
  return &type metadata for LocalizationTestView;
}

uint64_t sub_100089258(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006C3400, 1);
}

void *sub_100089268()
{
  return &protocol witness table for String;
}

uint64_t sub_100089274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  double (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;

  v72 = a3;
  v73 = a2;
  v4 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = __chkstk_darwin(v4);
  v69 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONObject(0, v5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v64 - v19;
  v21 = JSONObject.subscript.getter(1701667182, 0xE400000000000000, v18);
  v22 = JSONObject.string.getter(v21);
  v24 = v23;
  v25 = *(double (**)(char *, uint64_t))(v8 + 8);
  v25(v20, v7);
  if (v24)
  {
    v68 = v22;
    v27 = JSONObject.subscript.getter(0x6465746365707865, 0xE800000000000000, v26);
    v28 = JSONObject.string.getter(v27);
    v30 = v29;
    v25(v16, v7);
    v32 = v25;
    v33 = a1;
    if (v30)
    {
      v67 = v28;
      v34 = JSONObject.subscript.getter(0x6C6175746361, 0xE600000000000000, v31);
      v35 = JSONObject.string.getter(v34);
      v37 = v36;
      v32(v13, v7);
      v66 = v37;
      if (v37)
      {
        v65 = v35;
        v39 = JSONObject.subscript.getter(1702129518, 0xE400000000000000, v38);
        v64 = JSONObject.string.getter(v39);
        v41 = v40;
        v42.n128_f64[0] = v32(v10, v7);
        v43 = v69;
        v44 = UUID.init()(v42);
        v45 = UUID.uuidString.getter(v44);
        v47 = v46;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v71);
        v48 = type metadata accessor for JSONContext(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v73, v48);
        result = ((uint64_t (*)(uint64_t, uint64_t))v32)(v33, v7);
        v50 = v72;
        *v72 = v45;
        v50[1] = v47;
        v50[2] = v68;
        v50[3] = v24;
        v50[4] = v67;
        v50[5] = v30;
        v51 = v66;
        v50[6] = v65;
        v50[7] = v51;
        v50[8] = v64;
        v50[9] = v41;
        return result;
      }
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v24);
      v56 = type metadata accessor for JSONError(0);
      v61 = sub_10000E720(&qword_10080B9A0, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      swift_allocError(v56, v61, 0, 0);
      v59 = v58;
      *v58 = 0x6C6175746361;
      v60 = 0xE600000000000000;
    }
    else
    {
      swift_bridgeObjectRelease(v24);
      v56 = type metadata accessor for JSONError(0);
      v57 = sub_10000E720(&qword_10080B9A0, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      swift_allocError(v56, v57, 0, 0);
      v59 = v58;
      *v58 = 0x6465746365707865;
      v60 = 0xE800000000000000;
    }
    v58[1] = v60;
    v58[2] = &type metadata for LocalizationTestCase;
    v55 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v59, enum case for JSONError.missingProperty(_:), v56);
  }
  else
  {
    v32 = v25;
    v52 = type metadata accessor for JSONError(0);
    v53 = sub_10000E720(&qword_10080B9A0, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v52, v53, 0, 0);
    *v54 = 1701667182;
    v54[1] = 0xE400000000000000;
    v54[2] = &type metadata for LocalizationTestCase;
    v55 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v54, enum case for JSONError.missingProperty(_:), v52);
    v33 = a1;
  }
  v62 = v73;
  swift_willThrow(v55);
  v63 = type metadata accessor for JSONContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v33, v7);
}

double sub_1000896C8@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100086904(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1000896D0()
{
  uint64_t v0;

  return sub_1000873A4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1000896D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B9F8;
  if (!qword_10080B9F8)
  {
    v1 = sub_100010DE0(&qword_10080B9F0);
    sub_10008973C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10080B9F8);
  }
  return result;
}

unint64_t sub_10008973C()
{
  unint64_t result;

  result = qword_10080BA00;
  if (!qword_10080BA00)
  {
    result = swift_getWitnessTable(&unk_100644614, &type metadata for LocalizationTestResultView);
    atomic_store(result, (unint64_t *)&qword_10080BA00);
  }
  return result;
}

uint64_t sub_100089780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100087454(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100089788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080BA18;
  if (!qword_10080BA18)
  {
    v1 = sub_100010DE0(&qword_10080BA10);
    sub_100010E80(&qword_10080BA20, &qword_10080BA28, (uint64_t)&protocol conformance descriptor for IntentView<A, B, C, D>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10080BA18);
  }
  return result;
}

uint64_t sub_10008980C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100010DE0(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100089884(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_100089894(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

unint64_t sub_1000898A4()
{
  unint64_t result;

  result = qword_10080BA58;
  if (!qword_10080BA58)
  {
    result = swift_getWitnessTable(&unk_1006445C4, &type metadata for LocalizationTestIntent);
    atomic_store(result, (unint64_t *)&qword_10080BA58);
  }
  return result;
}

unint64_t sub_1000898E8()
{
  unint64_t result;

  result = qword_10080BA80;
  if (!qword_10080BA80)
  {
    result = swift_getWitnessTable(&unk_100644458, &type metadata for LocalizationTestCase);
    atomic_store(result, (unint64_t *)&qword_10080BA80);
  }
  return result;
}

uint64_t destroy for LocalizationTestIntent(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t _s20ProductPageExtension22LocalizationTestIntentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for LocalizationTestIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for LocalizationTestIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationTestIntent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationTestIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestIntent()
{
  return &type metadata for LocalizationTestIntent;
}

uint64_t _s20ProductPageExtension20LocalizationTestCaseVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

_QWORD *_s20ProductPageExtension20LocalizationTestCaseVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *_s20ProductPageExtension20LocalizationTestCaseVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

_QWORD *_s20ProductPageExtension20LocalizationTestCaseVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t _s20ProductPageExtension20LocalizationTestCaseVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100089CD8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestResultView()
{
  return &type metadata for LocalizationTestResultView;
}

uint64_t destroy for LocalizationTestPrerequisiteChecker(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizationTestPrerequisiteChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationTestPrerequisiteChecker(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationTestPrerequisiteChecker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestPrerequisiteChecker()
{
  return &type metadata for LocalizationTestPrerequisiteChecker;
}

uint64_t sub_100089FBC()
{
  _QWORD v1[2];

  v1[0] = sub_100010DE0(&qword_10080B9A8);
  v1[1] = sub_100010E80(&qword_10080B9C8, &qword_10080B9A8, (uint64_t)&protocol conformance descriptor for List<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.intentDispatcher(_:with:)>>, 1);
}

unint64_t sub_10008A024()
{
  unint64_t result;

  result = qword_10080BA88;
  if (!qword_10080BA88)
  {
    result = swift_getWitnessTable(&unk_100644524, &type metadata for LocalizationTestIntent);
    atomic_store(result, (unint64_t *)&qword_10080BA88);
  }
  return result;
}

unint64_t sub_10008A070()
{
  unint64_t result;

  result = qword_10080BA90;
  if (!qword_10080BA90)
  {
    result = swift_getWitnessTable(&unk_100644594, &type metadata for LocalizationTestResponse);
    atomic_store(result, (unint64_t *)&qword_10080BA90);
  }
  return result;
}

uint64_t sub_10008A0B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006C3444, 1);
}

uint64_t sub_10008A0C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 136);
  sub_100089884(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_10008A17C(v3, v4, v5, v6, v7, v8, v9, v10);
  sub_10008A1E4(v15, v14, v13, v12);
  return a1;
}

double sub_10008A17C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v12;
  double result;

  if (a4)
  {
    v12 = a7 & 1;
    sub_100089884(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    sub_100089884(a5, a6, v12);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a8).n128_u64[0];
  }
  return result;
}

double sub_10008A1E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100089884(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10008A214(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 136);
  sub_100089894(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_10008A2CC(v3, v4, v5, v6, v7, v8, v9, v10);
  sub_10008A334(v15, v14, v13, v12);
  return a1;
}

double sub_10008A2CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v12;
  double result;

  if (a4)
  {
    v12 = a7 & 1;
    sub_100089894(a1, a2, a3 & 1);
    swift_bridgeObjectRelease(a4);
    sub_100089894(a5, a6, v12);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a8).n128_u64[0];
  }
  return result;
}

double sub_10008A334(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100089894(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10008A364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8(&qword_100815640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008A3AC(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  unint64_t v33;
  void (*v35)(uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v39 = a2;
  v3 = type metadata accessor for JSONContext(0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  __chkstk_darwin(v3);
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_10080BA98);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONObject(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for JSONArray(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v35 - v20;
  v40 = a1;
  v22 = JSONObject.subscript.getter(0x6573614374736574, 0xE900000000000073, v19);
  JSONObject.array.getter(v22);
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    sub_10008A6B8((uint64_t)v8);
    v24 = type metadata accessor for JSONError(0);
    v25 = sub_10000E720(&qword_10080B9A0, (uint64_t (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v24, v25, 0, 0);
    *v26 = 0x6573614374736574;
    v26[1] = 0xE900000000000073;
    v26[2] = &type metadata for LocalizationTestResponse;
    v27 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, enum case for JSONError.missingProperty(_:), v24);
    swift_willThrow(v27);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
    v23(v40, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v8, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v21, v14);
    v29 = v37;
    v28 = v38;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v35 = (void (*)(uint64_t, uint64_t))v23;
    v31 = v36;
    v32 = v39;
    v30(v36, v39, v38);
    v33 = sub_10008A6F8();
    v24 = Array<A>.init(tryDeserializing:using:)(v17, v31, &type metadata for LocalizationTestCase, v33);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
    v35((uint64_t)v40, v9);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
  }
  return v24;
}

uint64_t sub_10008A6B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DAF8(&qword_10080BA98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008A6F8()
{
  unint64_t result;

  result = qword_10080BAA0;
  if (!qword_10080BAA0)
  {
    result = swift_getWitnessTable(&unk_100644490, &type metadata for LocalizationTestCase);
    atomic_store(result, (unint64_t *)&qword_10080BAA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationTestResponse()
{
  return &type metadata for LocalizationTestResponse;
}

uint64_t sub_10008A74C()
{
  return sub_100010E80(&qword_10080BAB0, &qword_10080BAB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

BOOL sub_10008A77C(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v21[5];

  v4 = v3;
  v8 = type metadata accessor for Feature.iOS(0);
  v21[3] = v8;
  v21[4] = sub_10008AF80();
  v9 = sub_1000119C0(v21);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.iOS.shelves_2_0_reviews(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v21);
  v10 = _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v21);
  if ((v8 & 1) == 0)
  {
    v10 = UITraitCollection.prefersAccessibilityLayouts.getter(v10);
    if ((v10 & 1) != 0)
      return 1;
  }
  if ((UITraitCollection.isSizeClassCompact.getter(v10) & 1) != 0)
    return 1;
  v12 = v4[14];
  v13 = v4[15];
  sub_100010F08(v4 + 11, v12);
  v14 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v12, v13, a2, a3);
  v15 = v4[19];
  v16 = v4[20];
  sub_100010F08(v4 + 16, v15);
  v17 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v15, v16, a2, a3);
  v18 = v4[3];
  v19 = v4[4];
  sub_100010F08(v4, v18);
  return v17 + v14 + AnyDimension.value(with:)(a1, v18, v19, v20) > a2;
}

uint64_t sub_10008A8D8@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void (*v25)(char *, uint64_t);
  _QWORD *v26;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void (*v34)(char *, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[6];

  v3 = v2;
  v38 = a2;
  v5 = type metadata accessor for HorizontalStack(0);
  v36 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for VerticalStack(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v36 - v17;
  v37 = v3 + 128;
  if ((a1 & 1) != 0)
  {
    VerticalStack.init(with:)(sub_10008AE6C, 0, v16);
    sub_10000EF80(v3 + 88, (uint64_t)v50);
    sub_10008AE90(v3, (uint64_t)&v39);
    v19 = swift_allocObject(&unk_10073A9A0, 184, 7);
    v20 = v48;
    *(_OWORD *)(v19 + 144) = v47;
    *(_OWORD *)(v19 + 160) = v20;
    *(_QWORD *)(v19 + 176) = v49;
    v21 = v44;
    *(_OWORD *)(v19 + 80) = v43;
    *(_OWORD *)(v19 + 96) = v21;
    v22 = v46;
    *(_OWORD *)(v19 + 112) = v45;
    *(_OWORD *)(v19 + 128) = v22;
    v23 = v40;
    *(_OWORD *)(v19 + 16) = v39;
    *(_OWORD *)(v19 + 32) = v23;
    v24 = v42;
    *(_OWORD *)(v19 + 48) = v41;
    *(_OWORD *)(v19 + 64) = v24;
    VerticalStack.adding(_:with:)(v50, sub_10008AF44, v19);
    swift_release(v19);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v50);
    v25 = *(void (**)(char *, uint64_t))(v12 + 8);
    v25(v14, v11);
    v26 = v38;
    v38[3] = v11;
    v26[4] = &protocol witness table for VerticalStack;
    sub_1000119C0(v26);
    VerticalStack.adding(_:with:)(v37, 0, 0);
    return ((uint64_t (*)(char *, uint64_t))v25)(v18, v11);
  }
  else
  {
    HorizontalStack.init(with:)(sub_10005421C, 0, v16);
    sub_10000EF80(v3 + 88, (uint64_t)v50);
    sub_10008AE90(v3, (uint64_t)&v39);
    v28 = swift_allocObject(&unk_10073A978, 184, 7);
    v29 = v48;
    *(_OWORD *)(v28 + 144) = v47;
    *(_OWORD *)(v28 + 160) = v29;
    *(_QWORD *)(v28 + 176) = v49;
    v30 = v44;
    *(_OWORD *)(v28 + 80) = v43;
    *(_OWORD *)(v28 + 96) = v30;
    v31 = v46;
    *(_OWORD *)(v28 + 112) = v45;
    *(_OWORD *)(v28 + 128) = v31;
    v32 = v40;
    *(_OWORD *)(v28 + 16) = v39;
    *(_OWORD *)(v28 + 32) = v32;
    v33 = v42;
    *(_OWORD *)(v28 + 48) = v41;
    *(_OWORD *)(v28 + 64) = v33;
    HorizontalStack.adding(_:with:)(v50, sub_10008AEC8, v28);
    swift_release(v28);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v50);
    v34 = *(void (**)(char *, uint64_t))(v36 + 8);
    v34(v7, v5);
    v35 = v38;
    v38[3] = v5;
    v35[4] = &protocol witness table for HorizontalStack;
    sub_1000119C0(v35);
    HorizontalStack.adding(_:with:)(v37, 0, 0);
    return ((uint64_t (*)(char *, uint64_t))v34)(v10, v5);
  }
}

uint64_t sub_10008AC10(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, __n128);
  _QWORD v26[5];
  char v27;

  v11 = type metadata accessor for DisjointStack(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v26[-1] - v16;
  v18 = sub_10008A77C((uint64_t)a1, a4, a5);
  sub_10008AE90(v5, (uint64_t)v26);
  if (v18)
  {
    sub_10003EAC4(v26);
    v19 = 0;
  }
  else
  {
    v20 = v27;
    sub_10003EAC4(v26);
    v19 = v20 ^ 1;
  }
  sub_10008A8D8(v18, v26);
  DisjointStack.init(with:)(0, 0);
  v21 = swift_allocObject(&unk_10073AAD8, 17, 7);
  *(_BYTE *)(v21 + 16) = v19 & 1;
  DisjointStack.inserting(_:at:with:)(v26, 0, 1, sub_10008B504, v21);
  v22 = swift_release();
  v23 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
  v23(v14, v11, v22);
  sub_100339E80(a1, a2, a3, a4, a5);
  ((void (*)(char *, uint64_t))v23)(v17, v11);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v26);
}

void sub_10008ADB4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = type metadata accessor for DisjointStack.EdgePosition(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    v6[3] = type metadata accessor for ZeroDimension(0);
    v6[4] = &protocol witness table for ZeroDimension;
    sub_1000119C0(v6);
    static ZeroDimension.zero.getter();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DisjointStack.EdgePosition.anchored(_:), v3);
    DisjointStack.Properties.leadingEdge.setter(v6);
  }
}

uint64_t sub_10008AE6C()
{
  return VerticalStack.Properties.alignment.setter(1);
}

uint64_t sub_10008AE90(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductTapToRateLayout(a2, a1);
  return a2;
}

uint64_t sub_10008AEC8()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_10000EF80(v0 + 16, (uint64_t)v2);
  return HorizontalStack.Properties.trailingSpacing.setter(v2);
}

uint64_t sub_10008AF08()
{
  _QWORD *v0;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 2);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 8);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 13);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v0 + 18);
  return swift_deallocObject(v0, 184, 7);
}

uint64_t sub_10008AF44()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_10000EF80(v0 + 64, (uint64_t)v2);
  return VerticalStack.Properties.bottomSpacing.setter(v2);
}

unint64_t sub_10008AF80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080CC50;
  if (!qword_10080CC50)
  {
    v1 = type metadata accessor for Feature.iOS(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.iOS, v1);
    atomic_store(result, (unint64_t *)&qword_10080CC50);
  }
  return result;
}

uint64_t destroy for ProductTapToRateLayout(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 6);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 11);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 16);
}

uint64_t initializeWithCopy for ProductTapToRateLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 88, a2 + 88);
  v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 128, a2 + 128);
  return a1;
}

uint64_t assignWithCopy for ProductTapToRateLayout(uint64_t a1, uint64_t a2)
{
  sub_10002D2D4((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  sub_10002D2D4((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
  sub_10002D2D4((_QWORD *)(a1 + 88), (_QWORD *)(a2 + 88));
  sub_10002D2D4((_QWORD *)(a1 + 128), (_QWORD *)(a2 + 128));
  return a1;
}

__n128 initializeWithTake for ProductTapToRateLayout(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ProductTapToRateLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 48));
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 128));
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductTapToRateLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductTapToRateLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductTapToRateLayout()
{
  return &type metadata for ProductTapToRateLayout;
}

uint64_t destroy for ProductTapToRateLayout.Metrics(_QWORD *a1)
{
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(a1 + 6);
}

uint64_t initializeWithCopy for ProductTapToRateLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ProductTapToRateLayout.Metrics(uint64_t a1, uint64_t a2)
{
  sub_10002D2D4((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  sub_10002D2D4((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
  return a1;
}

uint64_t assignWithTake for ProductTapToRateLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0((_QWORD *)(a1 + 48));
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductTapToRateLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductTapToRateLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductTapToRateLayout.Metrics()
{
  return &type metadata for ProductTapToRateLayout.Metrics;
}

double sub_10008B448(uint64_t a1, double a2, double a3)
{
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v6 = sub_10008A77C(a1, a2, a3);
  sub_10008A8D8(v6, v11);
  v7 = v12;
  v8 = v13;
  sub_100010F08(v11, v12);
  v9 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v7, v8, a2, a3);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v11);
  return v9;
}

uint64_t sub_10008B4F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10008B504(uint64_t a1)
{
  uint64_t v1;

  sub_10008ADB4(a1, *(_BYTE *)(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for ProductTapToRateLayout.Metrics.HorizontalAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10008B558 + 4 * byte_100644695[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10008B58C + 4 * asc_100644690[v4]))();
}

uint64_t sub_10008B58C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008B594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10008B59CLL);
  return result;
}

uint64_t sub_10008B5A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10008B5B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10008B5B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008B5BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductTapToRateLayout.Metrics.HorizontalAlignment()
{
  return &type metadata for ProductTapToRateLayout.Metrics.HorizontalAlignment;
}

unint64_t sub_10008B5DC()
{
  unint64_t result;

  result = qword_10080BAC0;
  if (!qword_10080BAC0)
  {
    result = swift_getWitnessTable(&unk_100644764, &type metadata for ProductTapToRateLayout.Metrics.HorizontalAlignment);
    atomic_store(result, (unint64_t *)&qword_10080BAC0);
  }
  return result;
}

void *sub_10008B620()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController);
  v2 = v1;
  return v1;
}

void sub_10008B650(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD v25[4];
  char v26;

  v3 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController];
  v5 = v4;
  v6 = a1;
  static ViewControllerContainment.remove(_:)(v4);

  v7 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v24 = v6;

  v8 = *(void **)&v1[v3];
  v9 = v8;
  v10 = objc_msgSend(v1, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "bounds");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    v25[0] = v13;
    v25[1] = v15;
    v25[2] = v17;
    v25[3] = v19;
    v26 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v8, v1, v25);

    v20 = *(void **)&v1[v3];
    if (!v20)
    {
      v23 = v24;
      goto LABEL_6;
    }
    v21 = objc_msgSend(v20, "view");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "setInsetsLayoutMarginsFromSafeArea:", 0);

      v23 = v22;
LABEL_6:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10008B794(void *a1, uint64_t a2)
{
  objc_class *ObjectType;
  id v4;
  id v5;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  v5 = a1;
  if (objc_msgSend(v5, "isViewLoaded"))
  {

  }
  else
  {
    v6.receiver = v5;
    v6.super_class = ObjectType;
    objc_msgSendSuper2(&v6, "loadView");
    v4 = objc_msgSend(v5, "navigationItem");
    objc_msgSend(v4, "setTitle:", 0);

  }
}

void sub_10008B83C(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v14.receiver = a1;
  v14.super_class = ObjectType;
  v6 = a1;
  objc_msgSendSuper2(&v14, "viewWillAppear:", a3);
  v7 = objc_msgSend(v6, "view", sub_10008EDD8(0, 0, a3), v14.receiver, v14.super_class);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "bounds");
    v10 = v9;
    v12 = v11;

    v13 = sub_10000E720(&qword_10080C0F0, type metadata accessor for ArcadeDiffablePageViewController, (uint64_t)&unk_100654940);
    ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v13, v10, v12);

  }
  else
  {
    __break(1u);
  }
}

void sub_10008B920(char a1)
{
  char *v1;
  char *v2;
  uint64_t *v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "viewDidAppear:", a1 & 1);
  v4 = (uint64_t *)&v2[qword_10080BAD8];
  v5 = *(void (**)(__n128))&v2[qword_10080BAD8];
  if (v5)
  {
    v6 = v4[1];
    v7 = swift_retain(v6);
    v5(v7);
    sub_100018908((uint64_t)v5, v6);
    v8 = *v4;
  }
  else
  {
    v8 = 0;
  }
  v9 = v4[1];
  *v4 = 0;
  v4[1] = 0;
  v10 = sub_100018908(v8, v9);
  if ((ArcadeDiffablePagePresenter.didFetchPage.getter(v10) & 1) != 0)
    sub_10008B9D8();
}

void sub_10008B9D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  unsigned __int8 v10;
  void *v11;
  id v12;
  NSString v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for AppStoreEngagementEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "viewIfLoaded", v4);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "window");

    if (v9)
    {
      v10 = objc_msgSend(v9, "isHidden");

      if ((v10 & 1) == 0)
      {
        v11 = *(void **)(*(_QWORD *)&v1[qword_10080BAC8] + 16);
        v12 = objc_allocWithZone((Class)IAMCountableEvent);
        v13 = String._bridgeToObjectiveC()();
        v14 = objc_msgSend(v12, "initWithName:", v13);

        objc_msgSend(v11, "receiveEvent:", v14);
        sub_10022B628();
        v16 = type metadata accessor for AppStoreEngagementManager(0, v15);
        v17 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]
                        + qword_10086B408);
        if (v17)
        {
          (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for AppStoreEngagementEvent.arcadeTabDidComeOnScreen(_:), v2);
          v18 = swift_allocObject(&unk_10073AC88, 24, 7);
          swift_unknownObjectWeakInit(v18 + 16, v1);
          swift_retain(v17);
          v19 = swift_retain(v18);
          AppStoreEngagementManager.recordEngagement(event:resultHandler:)(v6, sub_100090890, v18, v19);
          swift_release();
          v20 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v20);
          swift_release();
        }
        else
        {
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v16, v16);
          __break(1u);
        }
      }
    }
  }
}

void sub_10008BBE8(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10008B920(a3);

}

void sub_10008BC28(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v4 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewWillDisappear:", a3);
  v5 = objc_msgSend(v4, "presentedViewController", v6.receiver, v6.super_class);

  if (!v5 && objc_msgSend(v4, "isViewLoaded"))
    sub_10008EDD8(1, 1, a3);

}

void sub_10008BCCC(void *a1)
{
  char *v1;
  void *v2;
  char *v3;
  double v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  v1 = (char *)v5.receiver;
  objc_msgSendSuper2(&v5, "viewWillLayoutSubviews");
  v2 = *(void **)&v1[qword_100864BC8];
  if (v2)
  {
    v3 = v2;
    sub_1003B5D88();
    objc_msgSend(v3, "setHeight:", v4, v5.receiver, v5.super_class);

    v1 = v3;
  }

}

uint64_t sub_10008BD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DAF8(&qword_10080AE50);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  __chkstk_darwin(v3);
  v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_10080C110);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8((uint64_t *)&unk_100817690);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005B7268();
  dispatch thunk of DiffablePagePresenter.onApplySnapshot.getter(v12);
  v13 = sub_10000DAF8(&qword_10080C118);
  v14 = sub_100010E80(&qword_1008176A0, &qword_10080C118, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v28, v13, v14);
  EventEmitter.addObserver<A>(on:target:method:)(v28, v1, sub_10008C4A4, 0, v13, ObjectType, v14);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  ArcadeDiffablePagePresenter.onOnPrepareUpsellHandler.getter(v15);
  v16 = sub_10000DAF8(&qword_10080C120);
  v17 = sub_100010E80(&qword_10080C128, &qword_10080C120, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v28, v16, v17);
  EventEmitter.addObserver<A>(on:target:method:)(v28, v1, sub_10008C5E0, 0, v16, ObjectType, v17);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  ArcadeDiffablePagePresenter.onRecordTabVisitIfPossible.getter(v18);
  v19 = sub_10000DAF8(&qword_10080AE40);
  v20 = sub_100010E80(&qword_10080AE48, &qword_10080AE40, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v28, v19, v20);
  v21 = v25;
  EventEmitter.addObserver<A>(on:target:method:)(v28, v1, sub_10008C6C4, 0, v19, ObjectType, v20);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v21, v27);
}

void sub_10008C040()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  int v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v0 = sub_10000DAF8(&qword_100808548);
  __chkstk_darwin(v0);
  v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Shelf.ContentType(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  __chkstk_darwin(v3);
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v46 = (_QWORD **)((char *)&v46 - v6);
  __chkstk_darwin(v7);
  v48 = (char *)&v46 - v8;
  v9 = sub_10000DAF8((uint64_t *)&unk_1008176F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_10080C130);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DAF8((uint64_t *)&unk_1008175F0);
  ((void (*)(void))SnapshotUpdate.contentSnapshot.getter)();
  ModelMappedDiffableDataSourceContentSnapshot.identifierSnapshot.getter(v13);
  v18 = *(void (**)(char *, uint64_t))(v14 + 8);
  v18(v16, v13);
  v19 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v19 < 1)
    goto LABEL_4;
  SnapshotUpdate.contentSnapshot.getter(v17);
  ModelMappedDiffableDataSourceContentSnapshot.sectionModel(at:)(0, v13);
  v18(v16, v13);
  v20 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v2, 1, v20) == 1)
  {
    sub_100010F2C((uint64_t)v2, &qword_100808548);
LABEL_4:
    v22 = v51;
    v23 = *(_QWORD *)(v51 + qword_10080BAF8);
    *(_QWORD *)(v51 + qword_10080BAF8) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v22 + qword_10080BAF0) = 0;
    return;
  }
  KeyPath = swift_getKeyPath(&unk_100644888);
  v25 = v46;
  ReadOnlyLens.subscript.getter(v46, KeyPath, v20);
  v26 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v2, v20, v26);
  v28 = v48;
  v27 = v49;
  v29 = v50;
  (*(void (**)(char *, _QWORD *, uint64_t))(v49 + 32))(v48, v25, v50);
  v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v47, v28, v29);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v30, v29);
  if (v31 == enum case for Shelf.ContentType.largeHeroBreakout(_:)
    || v31 == enum case for Shelf.ContentType.upsellBreakout(_:)
    || v31 == enum case for Shelf.ContentType.heroCarousel(_:)
    || v31 == enum case for Shelf.ContentType.uber(_:))
  {
    v36 = sub_10000DAF8(&qword_10081E8B0);
    v37 = type metadata accessor for IndexPath(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(_QWORD *)(v38 + 72);
    v40 = *(unsigned __int8 *)(v38 + 80);
    v41 = (v40 + 32) & ~v40;
    v42 = swift_allocObject(v36, v41 + v39, v40 | 7);
    *(_OWORD *)(v42 + 16) = xmmword_100640720;
    IndexPath.init(item:section:)(0, 0);
    v43 = sub_10013B5B4(v42);
    swift_setDeallocating(v42);
    swift_arrayDestroy(v42 + v41, 1, v37);
    swift_deallocClassInstance(v42, 32, 7);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    v44 = v51;
    v45 = *(_QWORD *)(v51 + qword_10080BAF8);
    *(_QWORD *)(v51 + qword_10080BAF8) = v43;
    swift_bridgeObjectRelease(v45);
    *(_QWORD *)(v44 + qword_10080BAF0) = 1;
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t))(v27 + 8);
    v32(v28, v29);
    v33 = v51;
    v34 = *(_QWORD *)(v51 + qword_10080BAF8);
    *(_QWORD *)(v51 + qword_10080BAF8) = &_swiftEmptySetSingleton;
    v35 = swift_bridgeObjectRelease(v34);
    *(_QWORD *)(v33 + qword_10080BAF0) = 0;
    ((void (*)(char *, uint64_t, __n128))v32)(v30, v29, v35);
  }
}

void (*sub_10008C4A4(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_10073AE90, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1000908A8;
}

double sub_10008C4F8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (qword_100806958 != -1)
    swift_once(&qword_100806958, sub_1005032EC);
  v1 = type metadata accessor for OSLogger(0, a1);
  sub_10000EFC4(v1, (uint64_t)qword_10086AB08);
  v2 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v3 = type metadata accessor for LogMessage(0);
  v4 = swift_allocObject(v2, ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) | 7);
  *(_OWORD *)(v4 + 16) = xmmword_100640720;
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010068A660);
  Logger.error(_:)(v4, v1, &protocol witness table for OSLogger);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double (*sub_10008C5E0(void *a1))(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_10073AE18, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_10073AE40, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100090898;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000908A0;
}

double sub_10008C658(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t, __n128))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject(&unk_10073AE68, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_retain(v3);
  a2(sub_100036D9C, v5, v6);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t (*sub_10008C6C4(void *a1))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_10073ADC8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_10073ADF0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100090870;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000907F8;
}

uint64_t sub_10008C73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_10000DAF8(&qword_100807C20);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1006405F0;
  v3 = *(_QWORD *)(v0 + qword_10080BB00);
  v4 = sub_10000E720(&qword_10080C100, type metadata accessor for ArcadeTitleEffectCollectionElementsObserver, (uint64_t)&unk_100650A58);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = type metadata accessor for NavigationBarVisibilityThresholdCollectionElementsObserver();
  v6 = swift_allocObject(v5, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  v7 = swift_unknownObjectWeakInit(v6 + 16, 0);
  *(_QWORD *)(v6 + 24) = &off_10073AC08;
  swift_unknownObjectWeakAssign(v7);
  v8 = sub_10000E720(&qword_10080C108, (uint64_t (*)(uint64_t))type metadata accessor for NavigationBarVisibilityThresholdCollectionElementsObserver, (uint64_t)&unk_10064D2BC);
  *(_QWORD *)(v2 + 48) = v6;
  *(_QWORD *)(v2 + 56) = v8;
  swift_retain(v3);
  *(_QWORD *)(v2 + 64) = sub_1005B5B70();
  *(_QWORD *)(v2 + 72) = v9;
  v10 = type metadata accessor for CompoundCollectionElementsObserver(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return CompoundCollectionElementsObserver.init(children:)(v2);
}

id sub_10008C850(uint64_t a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  __n128 v9;
  __n128 v10;
  double v11;
  id result;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;

  ObjectType = swift_getObjectType();
  v4 = sub_10000DAF8(&qword_10080C0E8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100601324(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:))
  {
    v10.n128_f64[0] = (*(double (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_10008C9F0(v10);
    *(_QWORD *)&v11 = swift_release().n128_u64[0];
  }
  else if (v8 == enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:))
  {
    swift_unknownObjectWeakAssign(v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  result = objc_msgSend(v1, "view", v11);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, "bounds");
    v15 = v14;
    v17 = v16;

    v18 = sub_10000E720(&qword_10080C0F0, type metadata accessor for ArcadeDiffablePageViewController, (uint64_t)&unk_100654940);
    return (id)ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v18, v15, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10008C9F0(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  NSString v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  void *v25;
  id v26;
  char *v27;
  id v28;

  v2 = v1;
  ArcadeDiffablePagePresenter.pageTitle.getter(a1);
  if (v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, "setTitle:", v6, v4);

  v7 = GenericPage.presentationOptions.getter();
  sub_10008CDE0(v7);
  v8 = objc_msgSend(v2, "tabBarItem");
  if (v8)
  {
    v9 = v8;
    ArcadeDiffablePagePresenter.tabTitle.getter();
    if (v10)
    {
      v12 = v10;
      v13 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v9, "setTitle:", v13, v11);

    v14 = objc_msgSend(v2, "navigationItem");
    ArcadeDiffablePagePresenter.tabTitle.getter();
    if (v15)
    {
      v17 = v15;
      v18 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
    }
    else
    {
      v18 = 0;
    }
    objc_msgSend(v14, "setBackButtonTitle:", v18, v16);

    v19 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v19, "setTitle:", 0);

    v20 = sub_10008D02C(0xD000000000000039, 0x800000010068A600);
    v21 = ArcadePage.subscriptionLockup.getter(v20);
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArcadePageTitleView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_10056FB1C(v22, *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph]);
      swift_unknownObjectWeakAssign(v24);
      v28 = v23;
      sub_10008D2FC(v23, (uint64_t)&off_100750708);
      swift_release();

      v25 = v28;
    }
    else
    {
      v26 = objc_msgSend(v2, "navigationItem");
      objc_msgSend(v26, "setTitleView:", 0);

      v27 = &v2[qword_100864BC8];
      v25 = *(void **)&v2[qword_100864BC8];
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_10008CC88()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  CGRect v18;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (v1)
  {
    v17 = v1;
    v2 = objc_msgSend(v0, "navigationController");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "view");

      if (!v4)
      {
LABEL_10:
        __break(1u);
        return;
      }
      objc_msgSend(v4, "safeAreaInsets");
      v6 = v5;

    }
    else
    {
      v6 = 0.0;
    }
    v7 = objc_msgSend(v0, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "frame");
      v10 = v9;
      v12 = v11;
      v14 = v13;
      v16 = v15;

      v18.origin.x = v10;
      v18.origin.y = v12;
      v18.size.width = v14;
      v18.size.height = v16;
      objc_msgSend(v17, "setFrame:", 0.0, 0.0, CGRectGetWidth(v18), v6);

      return;
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_10008CDE0(char a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle) = 1;
    goto LABEL_12;
  }
  if ((a1 & 2) != 0)
  {
    v4 = objc_msgSend(v1, "navigationController");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "viewControllers");

      v7 = (void *)sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
      {
        if (v8 < 0)
          v15 = v8;
        else
          v15 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v16 = _CocoaArrayWrapper.endIndex.getter(v15);
        swift_bridgeObjectRelease(v8);
        if (v16)
        {
LABEL_6:
          if ((v8 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
          }
          else
          {
            if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_25:

              goto LABEL_26;
            }
            v9 = *(id *)(v8 + 32);
          }
          v10 = v9;
          swift_bridgeObjectRelease(v8);
          v11 = v2;
          v12 = v10;
          v13 = static NSObject.== infix(_:_:)(v12, v11);

          *((_BYTE *)v11 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle) = v13 & 1;
          if ((v13 & 1) == 0)
            goto LABEL_19;
LABEL_12:
          v14 = objc_msgSend(v2, "navigationItem");
          objc_msgSend(v14, "setLargeTitleDisplayMode:", 1);
          goto LABEL_20;
        }
      }
      else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      swift_bridgeObjectRelease(v8);
    }
  }
  *((_BYTE *)v2 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle) = 0;
LABEL_19:
  v14 = objc_msgSend(v2, "navigationItem");
  objc_msgSend(v14, "setLargeTitleDisplayMode:", 2);
LABEL_20:

  v17 = objc_msgSend(v2, "view");
  if (v17)
  {
    v7 = v17;
    v18 = type metadata accessor for InsetCollectionViewControllerContentView();
    v19 = swift_dynamicCastClass(v7, v18);
    if (v19)
    {
      *(_BYTE *)(v19
               + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = (a1 & 8) == 0;

      sub_100090340();
      sub_1000901C4();
      return;
    }
    goto LABEL_25;
  }
LABEL_26:
  __break(1u);
}

id sub_10008D02C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  id result;
  void *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8((uint64_t *)&unk_1008102F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10008D500(a1, a2, v35);
  v28 = v2;
  result = objc_msgSend(v2, "collectionView", v12);
  if (result)
  {
    v14 = result;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v14, "indexPathsForVisibleSupplementaryElementsOfKind:", v15);

    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v5);
    v18 = *(_QWORD *)(v17 + 16);
    v27 = v17;
    if (v18)
    {
      v19 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v30 = *(_QWORD *)(v6 + 72);
      v31 = v20;
      v20(v11, v19, v5);
      while (1)
      {
        v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v29(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
        sub_100018ADC((uint64_t)v35, (uint64_t)v32, (uint64_t *)&unk_1008175E0);
        v21 = v33;
        if (v33)
        {
          v22 = v11;
          v23 = v6;
          v24 = v34;
          sub_100010F08(v32, v33);
          result = objc_msgSend(v28, "collectionView");
          if (!result)
          {
            __break(1u);
            goto LABEL_15;
          }
          v25 = result;
          dispatch thunk of AnyReusableSupplementaryRegistration.reconfigureSupplementary(at:in:)(v8, result, v21, v24);

          v6 = v23;
          (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v32);
          v11 = v22;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          sub_100010F2C((uint64_t)v32, (uint64_t *)&unk_1008175E0);
        }
        v19 += v30;
        if (!--v18)
        {
          v29(v11, 1, 1, v5);
          break;
        }
        v31(v11, v19, v5);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    }
    swift_bridgeObjectRelease(v27);
    return (id)sub_100010F2C((uint64_t)v35, (uint64_t *)&unk_1008175E0);
  }
  else
  {
LABEL_15:
    __break(1u);
  }
  return result;
}

void sub_10008D2FC(void *a1, uint64_t a2)
{
  char *v2;
  id v5;
  id v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  id v19;
  char *v20;
  id v21;

  if (a1)
  {
    v5 = a1;
    v6 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v6, "setTitleView:", v5);

    v7 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v7, "setRightBarButtonItem:", 0);

    v8 = &v2[qword_100864BC8];
    v9 = *(void **)&v2[qword_100864BC8];
    *(_QWORD *)v8 = a1;
    *((_QWORD *)v8 + 1) = a2;
    v21 = v5;

    v10 = objc_msgSend(v2, "navigationController");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "navigationBar");

      objc_msgSend(v12, "_titleOpacity");
      v14 = v13;

      v15 = *(char **)v8;
      if (*(_QWORD *)v8)
      {
        v16 = *(void **)&v15[OBJC_IVAR____TtC20ProductPageExtension19ArcadePageTitleView_lockupView];
        v17 = v15;
        objc_msgSend(v16, "setAlpha:", v14);

      }
    }
    v18 = v21;
  }
  else
  {
    v19 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v19, "setTitleView:", 0);

    v20 = &v2[qword_100864BC8];
    v18 = *(void **)&v2[qword_100864BC8];
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = a2;
  }

}

void sub_10008D498()
{
  unsigned __int8 *v0;
  int v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_prefersLargeTitle];
  v2 = objc_msgSend(v0, "navigationItem");
  v4 = v2;
  if (v1)
    v3 = 1;
  else
    v3 = 2;
  objc_msgSend(v2, "setLargeTitleDisplayMode:", v3);

}

double sub_10008D500@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  double result;

  v4 = v3;
  ObjectType = swift_getObjectType();
  if ((a1 != 0xD000000000000039 || a2 != 0x800000010068A600)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000039, 0x800000010068A600, a1, a2, 0) & 1) == 0)
  {
    return sub_10027ACA4(a1, a2, (uint64_t)a3);
  }
  v9 = type metadata accessor for ArcadeHeaderView(0);
  swift_bridgeObjectRetain(a2);
  v11 = static UICollectionReusableView.defaultReuseIdentifier.getter(v10);
  v13 = v12;
  v14 = swift_allocObject(&unk_10073AC88, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v4);
  v15 = swift_allocObject(&unk_10073ACB0, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  a3[3] = sub_10000DAF8(&qword_10080C0D8);
  a3[4] = sub_100010E80(&qword_10080C0E0, &qword_10080C0D8, (uint64_t)&protocol conformance descriptor for ReusableSupplementaryRegistration<A>);
  sub_1000119C0(a3);
  ReusableSupplementaryRegistration.init(elementKind:reuseIdentifier:configurationHandler:)(a1, a2, v11, v13, sub_100090130, v15, v9, v16);
  return result;
}

void sub_10008D688(__n128 a1, double a2)
{
  char *v2;
  char *v3;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  id v26;
  __n128 v27;
  id v28;
  char v29;
  char *v30;
  __n128 v31;
  char *v32;
  id v33;
  __n128 v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  char *v51;
  uint64_t v52;
  char *v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  id v77;
  NSString v78;
  id v79;
  id v80;
  void *v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  double v86;
  id v87;
  NSString v88;
  id v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;

  v3 = v2;
  v5 = a1.n128_f64[0];
  v6 = type metadata accessor for PageGrid.Direction(0, a1);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v100 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v97 - v10;
  v12 = type metadata accessor for PageGrid(0);
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v103 = (uint64_t)&v97 - v19;
  __chkstk_darwin(v20);
  v102 = (uint64_t)&v97 - v21;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v97 - v24;
  JUScreenClassGetMain(v23);
  v26 = objc_msgSend(v2, "traitCollection");
  v101 = v25;
  sub_100486F1C((uint64_t)v26, (uint64_t)v25, v27);

  v28 = objc_msgSend(v3, "traitCollection");
  v29 = UITraitCollection.isSizeClassRegular.getter(v28);

  if ((v29 & 1) != 0)
  {
    v30 = (char *)objc_msgSend(v3, "traitCollection");
    sub_100487274(v30, v102, v31);

  }
  else
  {
    sub_100090180((uint64_t)v101, v102, type metadata accessor for TitleHeaderView.Style);
  }
  v32 = v14;
  v33 = objc_msgSend(v3, "traitCollection");
  sub_1004875C8((uint64_t)v33, v103, v34);

  v35 = objc_msgSend(v3, "view");
  if (!v35)
    goto LABEL_22;
  v36 = v35;
  v37 = (uint64_t)v17;
  v99 = type metadata accessor for InsetCollectionViewControllerContentView();
  v38 = swift_dynamicCastClass(v36, v99);
  if (!v38)
  {

LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v39 = *(unsigned __int8 *)(v38
                           + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if (v39)
    v40 = v103;
  else
    v40 = v102;
  v41 = v37;
  sub_100090180(v40, v37, type metadata accessor for TitleHeaderView.Style);
  v42 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v11, enum case for PageGrid.Direction.vertical(_:), v6);
  v43 = sub_1000B0B34(v42);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = objc_msgSend(v3, "traitCollection");
  v51 = v100;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v100, v11, v6);
  v52 = sub_1004B5390(0.0);
  v53 = v32;
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v51, 0, v52, v5, a2, v43, v45, v47, v49);

  v54.n128_f64[0] = (*(double (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v55 = ArcadeDiffablePagePresenter.pageTitle.getter(v54);
  v57 = v56;
  v58 = objc_msgSend(*(id *)(*(_QWORD *)&v3[qword_10080BAE8]+ OBJC_IVAR____TtC20ProductPageExtension27ArcadeHeaderButtonContainer_stackView), "sizeThatFits:", v5, a2);
  v60 = v59;
  v62 = v61;
  v63 = PageGrid.horizontalMargins.getter(v58);
  sub_100281D20(0, 0, 0, v55, v57, 0, 0, 0, v5, a2, v60, v62, v63, v64, v65, v66, 0, 0, 1, v41, 0, v3);
  v68 = v67;
  swift_bridgeObjectRelease(v57);
  v69 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v70 = objc_msgSend(v69, "fractionalWidthDimension:", 1.0);
  v71 = objc_msgSend(v69, "absoluteDimension:", v68);
  v72 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v70, v71);

  v73 = (char *)objc_msgSend(v3, "view");
  if (!v73)
    goto LABEL_24;
  v25 = v73;
  v74 = swift_dynamicCastClass(v73, v99);
  v75 = (uint64_t)v101;
  if (!v74)
  {
LABEL_23:

LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v76 = *(_BYTE *)(v74
                 + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v76 & 1) == 0)
  {
    v80 = objc_msgSend(v3, "navigationController");
    if (v80)
    {
      v81 = v80;
      sub_1001B9BA4();
      v83 = v82;

LABEL_17:
      v87 = v72;
      v88 = String._bridgeToObjectiveC()();
      v79 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v87, v88, 1, 0.0, v83);

      objc_msgSend(v79, "setExtendsBoundary:", 0);
      goto LABEL_18;
    }
    v84 = objc_msgSend(v3, "view");
    if (v84)
    {
      v85 = v84;
      objc_msgSend(v84, "safeAreaInsets");
      v83 = v86;

      goto LABEL_17;
    }
LABEL_25:
    __break(1u);
    return;
  }
  v77 = v72;
  v78 = String._bridgeToObjectiveC()();
  v79 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v77, v78, 1);

  objc_msgSend(v79, "setExtendsBoundary:", 1);
LABEL_18:
  objc_msgSend(v79, "setZIndex:", 1);
  v89 = v79;
  PageGrid.horizontalDirectionalMargins.getter(v89);
  objc_msgSend(v89, "setContentInsets:");

  v90 = sub_100284084();
  v104 = v90;
  v91 = v89;
  swift_bridgeObjectRetain(v90);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
  v94 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v93 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v94 >= v93 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
  v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v91);
  specialized Array._endMutation()(v95);

  v96 = swift_bridgeObjectRelease(v90);
  (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v53, v98, v96);
  sub_1000340D8(v41, type metadata accessor for TitleHeaderView.Style);
  sub_1000340D8(v103, type metadata accessor for TitleHeaderView.Style);
  sub_1000340D8(v102, type metadata accessor for TitleHeaderView.Style);
  sub_1000340D8(v75, type metadata accessor for TitleHeaderView.Style);
}

void sub_10008DDF8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  char *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t (**v49)();
  void *v50;
  uint64_t (*v51)();
  __n128 v52;
  uint64_t v53;
  __n128 v54;
  id v55;
  __n128 v56;
  id v57;
  char *v58;
  __n128 v59;
  id v60;
  __n128 v61;
  char *v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  NSString v74;
  uint64_t v75;
  id v76;
  void *v77;
  __n128 v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _BYTE v87[24];
  char v88[24];

  v7 = type metadata accessor for TitleEffect(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v84 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TitleHeaderView.Style(0);
  __chkstk_darwin(v10);
  v86 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v81 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v81 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - v22;
  v24 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  __chkstk_darwin(v24);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v88, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
    return;
  v28 = (char *)Strong;
  v82 = v8;
  v83 = v7;
  objc_msgSend(a1, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v29 = *(void **)&v28[qword_10080BAE8];
  v30 = OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryView;
  v31 = *(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessoryView];
  if (v31)
    v32 = v29 == v31;
  else
    v32 = 0;
  if (v32)
    goto LABEL_29;
  v33 = type metadata accessor for Accessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v26, 1, 1, v33);
  v34 = (uint64_t)&a1[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessory];
  swift_beginAccess(&a1[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_accessory], v87, 33, 0);
  v35 = v29;
  v85 = a1;
  v36 = v23;
  v37 = v20;
  v38 = v17;
  v39 = v14;
  v40 = v35;
  sub_100090138((uint64_t)v26, v34);
  swift_endAccess(v87);
  v41 = v40;
  v14 = v39;
  v17 = v38;
  v20 = v37;
  v23 = v36;
  a1 = v85;
  v42 = v41;
  sub_10015AF10(v29);

  v31 = *(void **)&a1[v30];
  if (v31)
  {
LABEL_29:
    v43 = type metadata accessor for ArcadeHeaderButtonContainer();
    v44 = swift_dynamicCastClass(v31, v43);
    if (v44)
    {
      v45 = *(_QWORD *)(v44 + OBJC_IVAR____TtC20ProductPageExtension27ArcadeHeaderButtonContainer_accountButton);
      v46 = type metadata accessor for AccountButton(0);
      v47 = swift_dynamicCastClass(v45, v46);
      if (v47)
      {
        *(_QWORD *)(v47 + qword_10080AD98 + 8) = &off_10073AC58;
        swift_unknownObjectWeakAssign(v48);
      }
    }
  }
  v49 = (uint64_t (**)())&a1[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabelNumberOfLines];
  *v49 = sub_10000D390;
  v49[1] = 0;
  swift_release();
  v50 = *(void **)&a1[OBJC_IVAR____TtC20ProductPageExtension15TitleHeaderView_titleLabel];
  v51 = *v49;
  v52 = swift_retain(v49[1]);
  v53 = ((uint64_t (*)(char *, __n128))v51)(a1, v52);
  objc_msgSend(v50, "setNumberOfLines:", v53, swift_release().n128_f64[0]);
  JUScreenClassGetMain(v54);
  v55 = objc_msgSend(v28, "traitCollection");
  sub_100486F1C((uint64_t)v55, (uint64_t)v23, v56);

  v57 = objc_msgSend(v28, "traitCollection");
  LOBYTE(v53) = UITraitCollection.isSizeClassRegular.getter(v57);

  if ((v53 & 1) != 0)
  {
    v58 = (char *)objc_msgSend(v28, "traitCollection");
    sub_100487274(v58, (uint64_t)v20, v59);

  }
  else
  {
    sub_100090180((uint64_t)v23, (uint64_t)v20, type metadata accessor for TitleHeaderView.Style);
  }
  v60 = objc_msgSend(v28, "traitCollection");
  sub_1004875C8((uint64_t)v60, (uint64_t)v17, v61);

  v62 = v28;
  v63 = objc_msgSend(v62, "view");
  if (!v63)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v64 = v63;
  v65 = type metadata accessor for InsetCollectionViewControllerContentView();
  v66 = swift_dynamicCastClass(v64, v65);
  if (!v66)
  {

    goto LABEL_26;
  }
  v67 = *(unsigned __int8 *)(v66
                           + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  v85 = v17;
  if (v67)
    v68 = (uint64_t)v17;
  else
    v68 = (uint64_t)v20;
  sub_100090180(v68, (uint64_t)v14, type metadata accessor for TitleHeaderView.Style);
  objc_msgSend(v50, "setAllowsDefaultTighteningForTruncation:", 1);
  v69 = qword_1008664F0;
  v70 = swift_retain(*(_QWORD *)&v62[qword_1008664F0]);
  ArcadeDiffablePagePresenter.pageTitle.getter(v70);
  v72 = v71;
  v73 = swift_release().n128_u64[0];
  if (v72)
  {
    v74 = String._bridgeToObjectiveC()();
    v73 = swift_bridgeObjectRelease(v72).n128_u64[0];
  }
  else
  {
    v74 = 0;
  }
  objc_msgSend(v50, "setText:", v74, *(double *)&v73);

  v75 = v86;
  sub_100090180((uint64_t)v14, v86, type metadata accessor for TitleHeaderView.Style);
  sub_1000E6860(v75);
  v76 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(a1, "setBackgroundColor:", v76);

  v77 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v62[qword_10080BB00]+ OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView);
  if (!v77)
  {
    swift_unknownObjectWeakAssign(v78);
    v79 = swift_retain(*(_QWORD *)&v62[v69]);
    v80 = (uint64_t)v84;
    ArcadeDiffablePagePresenter.titleEffect.getter(v79);
    swift_release();
    sub_1000E6DD4(v80, 0, 0, 1, 0);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v83);
  }
  objc_msgSend(a1, "setNeedsLayout");

  sub_1000340D8((uint64_t)v14, type metadata accessor for TitleHeaderView.Style);
  sub_1000340D8((uint64_t)v85, type metadata accessor for TitleHeaderView.Style);
  sub_1000340D8((uint64_t)v20, type metadata accessor for TitleHeaderView.Style);
  sub_1000340D8((uint64_t)v23, type metadata accessor for TitleHeaderView.Style);
}

void sub_10008E440(void *a1)
{
  uint64_t ObjectType;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;

  ObjectType = swift_getObjectType();
  v10 = a1;
  v3 = objc_msgSend(v10, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "bounds");
    v6 = v5;
    v8 = v7;

    v9 = sub_10000E720(&qword_10080C0F0, type metadata accessor for ArcadeDiffablePageViewController, (uint64_t)&unk_100654940);
    ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v9, v6, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_10008E4EC()
{
  char *v0;
  void *v1;
  double v2;
  _BOOL4 v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  _BOOL4 v9;
  uint64_t v10;
  id v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (v1)
  {
    objc_msgSend(v1, "alpha");
    v3 = v2 <= 0.5;
  }
  else
  {
    v3 = 1;
  }
  v4 = objc_msgSend(v0, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "navigationBar");

    objc_msgSend(v6, "_backgroundOpacity");
    v8 = v7;

    v9 = v8 <= 0.5;
  }
  else
  {
    v9 = 1;
  }
  if (v3 && v9)
  {
    v10 = *(_QWORD *)&v0[qword_10080BAF0];
    if (*(_QWORD *)&v0[qword_100866520] == v10)
      return;
    *(_QWORD *)&v0[qword_100866520] = v10;
  }
  else
  {
    if (!*(_QWORD *)&v0[qword_100866520])
      return;
    *(_QWORD *)&v0[qword_100866520] = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone((Class)UIStatusBarAnimationParameters), "init");
  objc_msgSend(v11, "setSkipFencing:", 1);
  objc_msgSend(v0, "_setNeedsStatusBarAppearanceUpdateWithAnimationParameters:", v11);

}

void sub_10008E664()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = qword_10080BAF8;
  if (*(_QWORD *)(*(_QWORD *)&v0[qword_10080BAF8] + 16))
  {
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      v4 = type metadata accessor for InsetCollectionViewControllerContentView();
      v5 = swift_dynamicCastClass(v3, v4);
      if (v5)
      {
        v6 = *(_BYTE *)(v5
                      + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

        if ((v6 & 1) == 0)
          swift_bridgeObjectRetain(*(_QWORD *)&v0[v1]);
        return;
      }

    }
    __break(1u);
  }
}

void sub_10008E700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];
  _BYTE v16[24];

  if (a1)
  {
    v3 = a2 + 16;
    swift_beginAccess(a2 + 16, v16, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = (void *)Strong;
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
      swift_retain(v6);
      swift_retain(a1);

      swift_beginAccess(v3, v15, 0, 0);
      v7 = swift_unknownObjectWeakLoadStrong(v3);
      if (v7 && (v8 = (void *)v7, v9 = UIResponder.nearestActionRunner.getter(), v8, v9))
      {
        swift_beginAccess(v3, v12, 0, 0);
        v10 = swift_unknownObjectWeakLoadStrong(v3);
        if (v10)
        {
          v11 = v10;
          *((_QWORD *)&v14 + 1) = type metadata accessor for ArcadeDiffablePageViewController(0);
          *(_QWORD *)&v13 = v11;
        }
        else
        {
          v13 = 0u;
          v14 = 0u;
        }
        dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a1, &v13, v6);
        swift_release();
        swift_release();
        swift_release();
        sub_100010F2C((uint64_t)&v13, &qword_100808F20);
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
  }
}

uint64_t sub_10008E848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v33 = type metadata accessor for URL(0, a2);
  v3 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DAF8(&qword_10080AA20);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v31 - v19;
  sub_100090180(a1, (uint64_t)v11, type metadata accessor for FlowDestination);
  if (swift_getEnumCaseMultiPayload(v11, v9) != 8)
  {
    sub_1000340D8((uint64_t)v11, type metadata accessor for FlowDestination);
LABEL_9:
    v26 = 0;
    return v26 & 1;
  }
  v32 = v14;
  swift_release();
  v21 = sub_10000DAF8((uint64_t *)&unk_10080FFB0);
  v22 = sub_10005AB74((uint64_t)&v11[*(int *)(v21 + 48)], (uint64_t)v20);
  DiffablePagePresenter.pageUrl.getter(v22);
  v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100018ADC((uint64_t)v17, (uint64_t)v8, (uint64_t *)&unk_1008092A0);
  sub_100018ADC((uint64_t)v20, v23, (uint64_t *)&unk_1008092A0);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v25 = v33;
  if (v24((uint64_t)v8, 1, v33) != 1)
  {
    v27 = (uint64_t)v32;
    sub_100018ADC((uint64_t)v8, (uint64_t)v32, (uint64_t *)&unk_1008092A0);
    if (v24(v23, 1, v25) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v23, v25);
      v29 = sub_10000E720((unint64_t *)&unk_10082CCF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v5, v25, v29);
      v30 = *(void (**)(char *, uint64_t))(v3 + 8);
      v30(v5, v25);
      sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_1008092A0);
      sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
      v30((char *)v27, v25);
      sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008092A0);
      return v26 & 1;
    }
    sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_1008092A0);
    sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v25);
    goto LABEL_8;
  }
  sub_100010F2C((uint64_t)v17, (uint64_t *)&unk_1008092A0);
  sub_100010F2C((uint64_t)v20, (uint64_t *)&unk_1008092A0);
  if (v24(v23, 1, v25) != 1)
  {
LABEL_8:
    sub_100010F2C((uint64_t)v8, &qword_10080AA20);
    goto LABEL_9;
  }
  sub_100010F2C((uint64_t)v8, (uint64_t *)&unk_1008092A0);
  v26 = 1;
  return v26 & 1;
}

double sub_10008EBCC()
{
  uint64_t v0;
  double result;

  swift_release();
  sub_100018908(*(_QWORD *)(v0 + qword_10080BAD8), *(_QWORD *)(v0 + qword_10080BAD8 + 8));

  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10080BAF8));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10008EC4C(uint64_t a1)
{
  double result;

  swift_release();
  sub_100018908(*(_QWORD *)(a1 + qword_10080BAD8), *(_QWORD *)(a1 + qword_10080BAD8 + 8));

  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10080BAF8));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ArcadeDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10080BB30;
  if (!qword_10080BB30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArcadeDiffablePageViewController);
  return result;
}

uint64_t sub_10008ED14(uint64_t a1)
{
  _QWORD v2[10];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_1006447E8;
  v2[2] = &unk_100644800;
  v2[3] = &unk_100644818;
  v2[4] = &unk_100644800;
  v2[5] = &unk_100644830;
  v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 10, v2, a1 + 1264);
}

uint64_t sub_10008EDAC()
{
  return type metadata accessor for ArcadeDiffablePageViewController(0);
}

uint64_t sub_10008EDB4(uint64_t a1, uint64_t a2)
{
  return sub_10008E848(a1, a2) & 1;
}

double sub_10008EDD8(char a1, char a2, char a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double result;
  void **v20;
  uint64_t v21;
  double (*v22)(uint64_t, uint64_t);
  void *v23;
  void *v24;
  uint64_t v25;

  v7 = swift_allocObject(&unk_10073ACD8, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v3);
  v8 = swift_allocObject(&unk_10073AD00, 26, 7);
  *(_QWORD *)(v8 + 16) = v7;
  v9 = a1 & 1;
  *(_BYTE *)(v8 + 24) = a1;
  v10 = a2 & 1;
  *(_BYTE *)(v8 + 25) = a2;
  *(_QWORD *)&v11 = swift_retain(v7).n128_u64[0];
  if ((a3 & 1) != 0
    && (v12 = objc_msgSend(v3, "transitionCoordinator", v11)) != 0)
  {
    v13 = v12;
    swift_release();
    v14 = swift_allocObject(&unk_10073AD28, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_1000907C4;
    *(_QWORD *)(v14 + 24) = v8;
    v24 = sub_1000907F8;
    v25 = v14;
    v20 = _NSConcreteStackBlock;
    v21 = 1107296256;
    v22 = sub_1005F3AC0;
    v23 = &unk_10073AD40;
    v15 = _Block_copy(&v20);
    swift_retain(v8);
    swift_release();
    v16 = swift_allocObject(&unk_10073ACD8, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v3);
    v17 = swift_allocObject(&unk_10073AD78, 26, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_BYTE *)(v17 + 24) = v10;
    *(_BYTE *)(v17 + 25) = v9;
    v24 = sub_10009083C;
    v25 = v17;
    v20 = _NSConcreteStackBlock;
    v21 = 1107296256;
    v22 = sub_1005F3AC0;
    v23 = &unk_10073AD90;
    v18 = _Block_copy(&v20);
    objc_msgSend(v13, "animateAlongsideTransition:completion:", v15, v18, swift_release().n128_f64[0]);
    swift_release();
    _Block_release(v18);
    _Block_release(v15);
    *(_QWORD *)&result = swift_unknownObjectRelease().n128_u64[0];
  }
  else
  {
    sub_10008F4D0(v7, v9, a2 & 1);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10008F018(uint64_t a1, double a2)
{
  uint64_t v3;
  char *Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[24];
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong && (v5 = *(_QWORD *)&Strong[qword_100864BC8], Strong, v5))
  {
    swift_beginAccess(v3, v12, 0, 0);
    v6 = swift_unknownObjectWeakLoadStrong(v3);
    if (!v6)
      goto LABEL_8;
    v7 = (void *)v6;
    sub_10008F128(0, a2);
  }
  else
  {
    swift_beginAccess(v3, v12, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v3);
    if (!v8)
      goto LABEL_8;
    v7 = (void *)v8;
    objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView), "setAlpha:", a2);
    sub_10008E4EC();
  }

LABEL_8:
  swift_beginAccess(v3, v11, 0, 0);
  v9 = swift_unknownObjectWeakLoadStrong(v3);
  if (v9)
  {
    v10 = (void *)v9;
    sub_10008F230();

  }
}

void sub_10008F128(char a1, double a2)
{
  char *v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = objc_msgSend(v2, "navigationController");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "navigationBar");

    objc_msgSend(v7, "_setBackgroundOpacity:", a2);
  }
  v8 = objc_msgSend(v2, "navigationController");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "navigationBar");

    objc_msgSend(v10, "_setTitleOpacity:", a2);
  }
  if ((a1 & 1) == 0)
  {
    v11 = *(_QWORD *)&v2[qword_100864BC8];
    if (v11)
      objc_msgSend(*(id *)(v11 + OBJC_IVAR____TtC20ProductPageExtension19ArcadePageTitleView_lockupView), "setAlpha:", a2);
  }
  sub_10008E4EC();
}

void sub_10008F230()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL4 v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v22 = v1;
    v2 = objc_msgSend(v1, "navigationBar");
    objc_msgSend(v2, "_backgroundOpacity");
    v4 = v3;

    if (v4 >= 1.0)
    {
      v12 = objc_msgSend(v22, "navigationBar");
      objc_msgSend(v12, "setUserInteractionEnabled:", 1);
    }
    else
    {
      v5 = objc_msgSend(v22, "navigationItem");
      v6 = objc_msgSend(v5, "leftBarButtonItems");

      if (!v6)
        goto LABEL_10;
      v7 = sub_100018B6C(0, (unint64_t *)&qword_100820720, UIBarButtonItem_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
      {
        v20 = v8 < 0 ? v8 : v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v9 = _CocoaArrayWrapper.endIndex.getter(v20);
        swift_bridgeObjectRelease(v8);
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v10 = swift_bridgeObjectRelease(v8).n128_u64[0];
      if (v9)
      {
        v11 = 1;
      }
      else
      {
LABEL_10:
        v13 = objc_msgSend(v22, "navigationItem");
        v14 = objc_msgSend(v13, "rightBarButtonItems");

        if (v14)
        {
          v15 = sub_100018B6C(0, (unint64_t *)&qword_100820720, UIBarButtonItem_ptr);
          v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

          if ((unint64_t)v16 >> 62)
          {
            if (v16 < 0)
              v21 = v16;
            else
              v21 = v16 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v16);
            v17 = _CocoaArrayWrapper.endIndex.getter(v21);
            swift_bridgeObjectRelease(v16);
          }
          else
          {
            v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v10 = swift_bridgeObjectRelease(v16).n128_u64[0];
          v11 = v17 != 0;
        }
        else
        {
          v11 = 0;
        }
      }
      v12 = objc_msgSend(v22, "navigationBar", *(double *)&v10);
      v18 = objc_msgSend(v0, "traitCollection");
      v19 = UITraitCollection.isSizeClassRegular.getter(v18);

      objc_msgSend(v12, "setUserInteractionEnabled:", v19 & v11);
    }

  }
}

void sub_10008F4D0(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  void *Strong;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  __n128 v34;
  _BYTE v35[24];

  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v35, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(v8, "navigationController");
    if (!v9)
    {

      goto LABEL_20;
    }
    v10 = v9;
    v11 = objc_msgSend(v9, "viewControllers");

    v12 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v24 = v3;
      else
        v24 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v25 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v3);
      if (v25)
        goto LABEL_5;
    }
    else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v3 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v13 = *(id *)(v3 + 32);
      }
      v14 = v13;
      swift_bridgeObjectRelease(v3);
      v3 = v8;
      v15 = v14;
      v16 = static NSObject.== infix(_:_:)(v15, v3);

      if ((v16 & 1) != 0)
      {
        v17 = (id)v3;
        v18 = objc_msgSend(v17, "view");
        if (!v18)
        {
LABEL_36:
          __break(1u);
          return;
        }
        v3 = (uint64_t)v18;
        v19 = type metadata accessor for InsetCollectionViewControllerContentView();
        v20 = swift_dynamicCastClass(v3, v19);
        if (!v20)
        {
LABEL_35:

          goto LABEL_36;
        }
        v21 = *(_BYTE *)(v20
                       + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

        if ((v21 & 1) == 0 && (a2 & 1) != 0)
        {
          v22 = a3 & 1;
          v23 = 1.0;
LABEL_29:
          sub_10008F128(v22, v23);
LABEL_30:

          return;
        }
      }
LABEL_20:
      v26 = *(_QWORD *)&v8[qword_100864BD0];
      if (!v26 || !*(_QWORD *)&v8[qword_100864BC8])
      {
        v23 = 0.0;
        if ((a2 & 1) != 0)
          v23 = 1.0;
        v22 = 0;
        goto LABEL_29;
      }
      v27 = objc_msgSend(v8, "collectionView", swift_retain(*(_QWORD *)&v8[qword_100864BD0]).n128_f64[0]);
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, "_systemContentInset");
        v30 = v29;
        objc_msgSend(v28, "contentOffset");
        v32 = v31;
        v33 = objc_msgSend(v28, "contentInset");
        v34.n128_f64[0] = fmin((v30 + v32 + v34.n128_f64[0] - *(double *)(v26 + 32)) / *(double *)(v26 + 40), 1.0);
        if (v34.n128_f64[0] < 0.0)
          v34.n128_f64[0] = 0.0;
        (*(void (**)(id, __n128))(v26 + 16))(v33, v34);
        swift_release();

        goto LABEL_30;
      }
      goto LABEL_34;
    }

    swift_bridgeObjectRelease(v3);
    goto LABEL_20;
  }
}

void sub_10008F7B0(void *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  _BYTE v18[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = (id *)&UITransitionContextFromViewControllerKey;
    if ((a3 & 1) == 0)
      v10 = (id *)&UITransitionContextToViewControllerKey;
    v11 = *v10;
    if (objc_msgSend(a1, "isCancelled")
      && (v12 = objc_msgSend(a1, "viewControllerForKey:", v11)) != 0)
    {
      v13 = v12;
      sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
      v14 = v9;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v15, v14);

      if ((v16 & 1) != 0)
      {
        swift_unknownObjectWeakInit(&v17, v14);
        sub_100361BE0((uint64_t)&v17, (a4 & 1) == 0, (a3 & 1) == 0);
        swift_unknownObjectWeakDestroy(&v17);
      }

    }
    else
    {

    }
  }
}

unint64_t sub_10008F900(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10000DAF8(&qword_10080C0B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10000DAF8(&qword_10080C0C0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100018ADC(v13, (uint64_t)v5, &qword_10080C0B8);
    result = sub_10008FAB8((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for EditorialPageKey(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7];
    v22 = type metadata accessor for URL(0, v21);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v17, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10008FAB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for EditorialPageKey(0);
  v6 = sub_10000E720(&qword_10080C0C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialPageKey, (uint64_t)&protocol conformance descriptor for EditorialPageKey);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10008FB24(a1, v7);
}

unint64_t sub_10008FB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for EditorialPageKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_10000E720(&qword_10080C0D0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialPageKey, (uint64_t)&protocol conformance descriptor for EditorialPageKey);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_10008FC64(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  uint64_t result;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  _QWORD v54[4];

  ObjectType = swift_getObjectType();
  v5 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StoreTab.Identifier(0, v6);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for StoreTab(0);
  v53 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v50 = (char *)&v48 - v15;
  v2[qword_10080BAD0] = 1;
  v16 = &v2[qword_10080BAD8];
  *v16 = 0;
  v16[1] = 0;
  v2[qword_10080BAE0] = 2;
  v17 = &v2[qword_100864BC8];
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)&v2[qword_100864BD0] = 0;
  *(_QWORD *)&v2[qword_10080BAF0] = 0;
  *(_QWORD *)&v2[qword_10080BAF8] = &_swiftEmptySetSingleton;
  v18 = type metadata accessor for InAppMessagesManager();
  v19 = *(_QWORD *)(a2 + qword_10086B400);
  if (v19)
  {
    *(_QWORD *)&v2[qword_10080BAC8] = v19;
    v20 = type metadata accessor for ArcadeTitleEffectCollectionElementsObserver(0);
    v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    swift_unknownObjectWeakInit(v21 + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeHeaderView, 0);
    v22 = v21
        + OBJC_IVAR____TtC20ProductPageExtension43ArcadeTitleEffectCollectionElementsObserver_arcadeTitleEffectUpdateSubscription;
    v23 = sub_10000DAF8(&qword_10080C0B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v24 = v2;
    swift_retain(v19);
    v25 = swift_retain(a1);
    ArcadeDiffablePagePresenter.titleEffect.getter(v25);
    v26 = swift_release();
    *(_QWORD *)&v24[qword_10080BB00] = v21;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v48 + 104))(v11, enum case for StoreTab.Identifier.arcade(_:), v49, v26);
    swift_retain(a1);
    DiffablePagePresenter.pageUrl.getter(v27);
    swift_release();
    v28 = sub_10008F900((uint64_t)_swiftEmptyArrayStorage);
    v29 = v50;
    StoreTab.init(identifier:url:title:imageIdentifier:editorialPageUrls:)(v11, v8, 0, 0, 0, 0, v28);
    v30 = v51;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v13, v29, v51);
    v31 = objc_allocWithZone((Class)type metadata accessor for ArcadeHeaderButtonContainer());
    swift_retain(a2);
    v32 = sub_10019A9F4((uint64_t)v13, a2);
    swift_release();
    *(_QWORD *)&v24[qword_10080BAE8] = v32;

    swift_retain(a1);
    swift_retain(a2);
    v33 = (void *)sub_100253604(a1, a2);
    v34 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
    v35 = type metadata accessor for ObjectGraph(0);
    v36 = v33;
    inject<A, B>(_:from:)(v34, a2, v34, v35);
    v37 = (void *)v54[0];
    v38 = *(void **)(*(_QWORD *)&v36[qword_10080BAE8]
                   + OBJC_IVAR____TtC20ProductPageExtension27ArcadeHeaderButtonContainer_accountButton);
    v39 = v36;
    v40 = v38;
    FloatingUnifiedMessageCoordinator.register(accountButton:with:for:)();

    v41 = sub_10000DAF8((uint64_t *)&unk_10080B800);
    v42 = swift_allocObject(v41, 48, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100640720;
    *(_QWORD *)(v42 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v42 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v54[3] = ObjectType;
    v54[0] = v39;
    v43 = v39;
    UIViewController.registerForTraitChanges(_:target:action:)(v42, v54, "preferredContentSizeCategoryDidChange");

    swift_unknownObjectRelease();
    v44 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v29, v30, v44);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v54);
    return (uint64_t)v43;
  }
  else
  {
    v46 = v18;
    v47 = v2;
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v46, v46);
    __break(1u);
  }
  return result;
}

uint64_t sub_1000900E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009010C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100090130(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10008DDF8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_100090138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DAF8((uint64_t *)&unk_100808F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100090180(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1000901C4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;

  v1 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_statusBarBackgroundView];
  if (!v2)
  {
    v3 = objc_msgSend(v0, "tabBarController");
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, "tabBar");

      v6 = objc_msgSend(v5, "_backdropViewLayerGroupName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v4 = v7;

    }
    v8 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
    v9 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v8);

    if (v4)
    {
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "_setGroupName:", v10);
      swift_bridgeObjectRelease(v4);

    }
    objc_msgSend(v9, "setAlpha:", 0.0);
    v11 = v9;
    sub_100074C28(v9);

    v2 = *(void **)&v0[v1];
  }
  objc_msgSend(v2, "setAlpha:", 0.0);
  sub_10008E4EC();
}

void sub_100090340()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double MinY;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  unsigned int v46;
  id v47;
  char v48[8];
  CGRect v49;

  v1 = v0;
  v2 = qword_100864BD0;
  if (!*(_QWORD *)&v0[qword_100864BD0])
  {
    v3 = *(id *)&v0[qword_100866528];
    CompoundScrollObserver.removeChild(_:)(0, 0);

    v4 = swift_allocObject(&unk_10073ACD8, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16, v1);
    v5 = type metadata accessor for NavigationBarVisibilityScrollObserver();
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 32) = xmmword_100644790;
    *(_QWORD *)(v6 + 16) = sub_1000907BC;
    *(_QWORD *)(v6 + 24) = v4;
    *(_QWORD *)&v1[v2] = v6;
    swift_release();
    v7 = *(_QWORD *)&v1[v2];
    if (v7)
      v8 = sub_10000E720(&qword_10080C0F8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationBarVisibilityScrollObserver, (uint64_t)&unk_1006552A8);
    else
      v8 = 0;
    swift_retain(v7);
    v9 = v3;
    CompoundScrollObserver.addChild(_:)(v7, v8);

    swift_release();
  }
  sub_1000901C4();
  v10 = objc_msgSend(v1, "view");
  if (!v10)
    goto LABEL_37;
  v11 = v10;
  v12 = type metadata accessor for InsetCollectionViewControllerContentView();
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13)
  {
LABEL_36:

LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v14 = *(_BYTE *)(v13
                 + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset);

  if ((v14 & 1) != 0)
    goto LABEL_23;
  v16 = objc_msgSend(v1, "navigationController");

  if (!v16)
    goto LABEL_23;
  v17 = objc_msgSend(v1, "navigationController");
  if (!v17)
    goto LABEL_23;
  v18 = v17;
  v19 = objc_msgSend(v17, "viewControllers");

  v11 = (void *)sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v11);

  if (!((unint64_t)v20 >> 62))
  {
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
LABEL_22:
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v20).n128_u64[0];
    goto LABEL_23;
  }
  if (v20 < 0)
    v26 = v20;
  else
    v26 = v20 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v20);
  v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v20);
  if (!v27)
    goto LABEL_22;
LABEL_13:
  if ((v20 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v21 = *(id *)(v20 + 32);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_36;
  }
  v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
LABEL_16:
  v22 = v21;
  swift_bridgeObjectRelease(v20);
  v23 = v1;
  v24 = v22;
  v25 = static NSObject.== infix(_:_:)(v24, v23);

  if ((v25 & 1) != 0)
  {
    swift_unknownObjectWeakInit(v48, v23);
    sub_100361BE0((uint64_t)v48, 0, 0);
    swift_unknownObjectWeakDestroy(v48);
    goto LABEL_27;
  }
LABEL_23:
  v28 = objc_msgSend(v1, "view", v15);
  if (!v28)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "safeAreaLayoutGuide");

  objc_msgSend(v30, "layoutFrame");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v49.origin.x = v32;
  v49.origin.y = v34;
  v49.size.width = v36;
  v49.size.height = v38;
  MinY = CGRectGetMinY(v49);
  if (!*(_QWORD *)&v1[v2])
    goto LABEL_27;
  v40 = MinY;
  v41 = objc_msgSend(v1, "collectionView", swift_retain(*(_QWORD *)&v1[v2]).n128_f64[0]);
  if (!v41)
  {
LABEL_39:
    __break(1u);
    return;
  }
  v42 = v41;
  sub_10027AB3C(v41, v40);
  swift_release();

LABEL_27:
  sub_10008E4EC();
  v43 = objc_msgSend(v1, "viewIfLoaded");
  if (!v43
    || (v44 = v43, v45 = objc_msgSend(v43, "window"), v44, !v45)
    || (v46 = objc_msgSend(v45, "isHidden"), v45, v46))
  {
    v47 = objc_msgSend(v1, "presentedViewController");

    if (!v47)
    {
      if (objc_msgSend(v1, "isViewLoaded"))
      {
        swift_unknownObjectWeakInit(v48, v1);
        sub_100361BE0((uint64_t)v48, 1, 1);
        swift_unknownObjectWeakDestroy(v48);
      }
    }
  }
  sub_10008F230();
}

void sub_1000907BC(double a1)
{
  uint64_t v1;

  sub_10008F018(v1, a1);
}

void sub_1000907C4()
{
  uint64_t v0;

  sub_10008F4D0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_1000907D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000907F8(uint64_t a1)
{
  uint64_t v1;

  return sub_10006F140(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100090800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100090810(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100090818()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 26, 7);
}

void sub_10009083C(void *a1)
{
  uint64_t v1;

  sub_10008F7B0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25));
}

uint64_t sub_10009084C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100090870()
{
  sub_10008B9D8();
}

void sub_100090890(uint64_t a1)
{
  uint64_t v1;

  sub_10008E700(a1, v1);
}

double sub_100090898(__n128 a1)
{
  return sub_10008C4F8(a1);
}

double sub_1000908A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_10008C658(a1, *(void (**)(uint64_t (*)(), uint64_t, __n128))(v1 + 16));
}

void sub_1000908A8()
{
  sub_10008C040();
}

uint64_t sub_1000908F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  int v8;
  int v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for Paragraph.Alignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Paragraph.Alignment.left(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 0;
  }
  v8 = v6;
  if (v6 == enum case for Paragraph.Alignment.center(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 1;
  }
  else if (v6 == enum case for Paragraph.Alignment.right(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 2;
  }
  else if (v6 == enum case for Paragraph.Alignment.justified(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 3;
  }
  else
  {
    v9 = enum case for Paragraph.Alignment.localized(_:);
    v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v10(a1, v2);
    if (v8 != v9)
    {
      v10((uint64_t)v5, v2);
      return 0;
    }
    return 4;
  }
}

uint64_t sub_100090A68(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void **v32;
  unint64_t v33;
  void **v34;
  unint64_t v35;
  unint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  __n128 v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void **aBlock;
  unint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  void (*v88)();
  uint64_t v89;
  void **v90;

  v4 = v3;
  v72 = a3;
  v73 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v80 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v79 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0, v7);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  v10 = __chkstk_darwin(v9);
  v76 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0, v10);
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  __chkstk_darwin(v12);
  v69 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AdamId(0);
  v82 = *(_QWORD *)(v14 - 8);
  v83 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DAF8(&qword_10080C1E8);
  v74 = Promise.__allocating_init()();
  v17 = *(_QWORD *)(a1 + 16);
  v81 = v6;
  v75 = a1;
  if (v17)
  {
    v90 = (void **)_swiftEmptyArrayStorage;
    v68 = v3;
    swift_retain(v3);
    sub_1001F151C(0, v17, 0);
    isUniquelyReferenced_nonNull_native = type metadata accessor for SponsoredSearchAdvert(0);
    v19 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
    v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(_QWORD *)(v19 + 72);
    do
    {
      aBlock = 0;
      v85 = 0xE000000000000000;
      v22 = SponsoredSearchAdvert.adamId.getter(isUniquelyReferenced_nonNull_native);
      v23 = AdamId.stringValue.getter(v22);
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v16, v83);
      swift_bridgeObjectRelease(v85);
      aBlock = (void **)v23;
      v85 = v25;
      v26._countAndFlagsBits = 8250;
      v26._object = (void *)0xE200000000000000;
      String.append(_:)(v26);
      v28 = SponsoredSearchAdvert.serverCppId.getter(v27);
      if (v29)
      {
        v30 = v29;
      }
      else
      {
        v28 = 0x746C7561666564;
        v30 = 0xE700000000000000;
      }
      v31 = v30;
      String.append(_:)(*(Swift::String *)&v28);
      swift_bridgeObjectRelease(v30);
      v32 = aBlock;
      v33 = v85;
      v34 = v90;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v90);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = sub_1001F151C(0, (int64_t)v34[2] + 1, 1);
        v34 = v90;
      }
      v36 = (unint64_t)v34[2];
      v35 = (unint64_t)v34[3];
      if (v36 >= v35 >> 1)
      {
        isUniquelyReferenced_nonNull_native = sub_1001F151C(v35 > 1, v36 + 1, 1);
        v34 = v90;
      }
      v34[2] = (void *)(v36 + 1);
      v37 = &v34[2 * v36];
      v37[4] = v32;
      v37[5] = (void *)v33;
      v20 += v21;
      --v17;
    }
    while (v17);
    v4 = v68;
  }
  else
  {
    swift_retain(v3);
    v34 = (void **)_swiftEmptyArrayStorage;
  }
  aBlock = v34;
  v38 = sub_10000DAF8((uint64_t *)&unk_100815880);
  v39 = sub_100010E80((unint64_t *)&qword_100809180, (uint64_t *)&unk_100815880, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v38, v39);
  v42 = v41;
  swift_bridgeObjectRelease(v34);
  if (qword_100806978 != -1)
    swift_once(&qword_100806978, sub_100503374);
  v43 = v71;
  v44 = sub_10000EFC4(v71, (uint64_t)qword_10086AB68);
  v45 = v70;
  v46 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v44, v43);
  v47 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v48 = type metadata accessor for LogMessage(0);
  v49 = swift_allocObject(v47, ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) | 7);
  *(_OWORD *)(v49 + 16) = xmmword_100640F90;
  static LogMessage.identity(_:)(v4);
  LogMessage.init(stringLiteral:)(0x636F72506C6C6977, 0xEE00736441737365);
  LogMessage.init(stringLiteral:)(0xD000000000000014, 0x800000010068A6E0);
  v87 = &type metadata for String;
  aBlock = (void **)v40;
  v85 = v42;
  static LogMessage.safe(_:)(&aBlock);
  sub_10001282C((uint64_t)&aBlock);
  Logger.info(_:)(v49, v43, &protocol witness table for OSLogger);
  v50 = swift_bridgeObjectRelease(v49);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v46, v43, v50);
  v51 = *(void **)(v4 + 16);
  v52 = swift_allocObject(&unk_10073AF60, 80, 7);
  v53 = v73;
  v54 = v74;
  *(_QWORD *)(v52 + 16) = v51;
  *(_QWORD *)(v52 + 24) = v53;
  v55 = v75;
  *(_QWORD *)(v52 + 32) = v75;
  *(_BYTE *)(v52 + 40) = v72 & 1;
  *(_QWORD *)(v52 + 48) = sub_100092540;
  *(_QWORD *)(v52 + 56) = v4;
  *(_QWORD *)(v52 + 64) = v4;
  *(_QWORD *)(v52 + 72) = v54;
  v88 = sub_100092594;
  v89 = v52;
  aBlock = _NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_1000924A0;
  v87 = &unk_10073AF78;
  v56 = _Block_copy(&aBlock);
  swift_retain_n(v4, 2);
  v57 = v51;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v55);
  v58 = swift_retain(v54);
  v59 = v76;
  static DispatchQoS.unspecified.getter(v58);
  v90 = (void **)_swiftEmptyArrayStorage;
  v60 = sub_100071858();
  v61 = sub_10000DAF8((uint64_t *)&unk_10080CC10);
  v62 = sub_100010E80((unint64_t *)&qword_100809580, (uint64_t *)&unk_10080CC10, (uint64_t)&protocol conformance descriptor for [A]);
  v63 = v79;
  v64 = v61;
  v65 = v81;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v90, v64, v62, v81, v60);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v63, v56);
  _Block_release(v56);
  v66 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v63, v65, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v59, v78);
  swift_release();
  return v54;
}

uint64_t sub_100091078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v4 = type metadata accessor for LegacyAppState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 32);
    ObjectType = swift_getObjectType(v9, v6);
    v12 = dispatch thunk of AppStateController.stateMachine(forApp:)(a1, ObjectType, v10);
    v14 = v13;
    v15 = swift_getObjectType(v12, v13);
    v16 = dispatch thunk of AppStateMachine.currentState.getter(v15, v14);
    v17 = LegacyAppState.isLocalApplication.getter(v16);
    swift_unknownObjectRelease(v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void sub_100091158(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  __n128 v35;
  uint64_t v36;
  Class isa;
  id v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  Class v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD aBlock[7];

  v72 = a7;
  v73 = a8;
  v70 = a5;
  v71 = a6;
  v69 = a4;
  v68 = a3;
  v74 = a1;
  v9 = type metadata accessor for SponsoredSearchAdvert(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v67 = (char *)&v64 - v14;
  v15 = type metadata accessor for AdamId(0);
  v78 = *(_QWORD *)(v15 - 8);
  v79 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SponsoredSearchOrganic(0, v16);
  v80 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v64 - v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = _swiftEmptyArrayStorage;
  if (v25)
  {
    v64 = v12;
    v65 = v10;
    v66 = v9;
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v25);
    v27 = (char *)(a2 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80)));
    v28 = *(_QWORD *)(v80 + 72);
    v76 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    v77 = v28;
    v75 = (char *)&type metadata for Any + 8;
    do
    {
      v29 = v76;
      v76(v24, v27, v19);
      v29(v21, v24, v19);
      v30 = objc_allocWithZone((Class)ADAppRepresentation);
      v31 = SponsoredSearchOrganic.adamId.getter();
      AdamId.stringValue.getter(v31);
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v18, v79);
      v34 = String._bridgeToObjectiveC()();
      v35 = swift_bridgeObjectRelease(v33);
      v36 = SponsoredSearchOrganic.assetInformation.getter(v35);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v38 = objc_msgSend(v30, "initWithAdamID:assetInformation:", v34, isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

      v39 = *(void (**)(char *, uint64_t))(v80 + 8);
      v39(v21, v19);
      v40 = ((uint64_t (*)(char *, uint64_t))v39)(v24, v19);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v41 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v41);
      v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
      specialized ContiguousArray._endMutation()(v42);
      v27 += v77;
      --v25;
    }
    while (v25);
    v26 = (_QWORD *)aBlock[0];
    v44 = v73;
    v43 = v74;
    v9 = v66;
    v10 = v65;
    v12 = v64;
  }
  else
  {
    v44 = v73;
    v43 = v74;
  }
  sub_100018B6C(0, &qword_10080C1F0, ADAppRepresentation_ptr);
  v45 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "setOrganics:", v45, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v46 = v68;
  v47 = *(_QWORD *)(v68 + 16);
  v48 = _swiftEmptyArrayStorage;
  if (v47)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v47);
    v49 = sub_100018B6C(0, &qword_10080C1F8, ADAppAdvertisement_ptr);
    v50 = v46 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v79 = *(_QWORD *)(v10 + 72);
    v80 = v49;
    v51 = (uint64_t)v12;
    v52 = v10;
    v53 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v54 = v67;
    do
    {
      v53(v54, v50, v9);
      v53((char *)v51, (uint64_t)v54, v9);
      v55 = sub_10009166C(v51);
      v56 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v54, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v57 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v57);
      v58 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
      specialized ContiguousArray._endMutation()(v58);
      v50 += v79;
      --v47;
    }
    while (v47);
    v48 = (_QWORD *)aBlock[0];
    v44 = v73;
    v43 = v74;
  }
  sub_100018B6C(0, &qword_10080C1F8, ADAppAdvertisement_ptr);
  v59 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "setAdvertisements:", v59, swift_bridgeObjectRelease(v48).n128_f64[0]);

  v60 = swift_allocObject(&unk_10073AFB0, 56, 7);
  *(_BYTE *)(v60 + 16) = v69 & 1;
  v61 = v71;
  *(_QWORD *)(v60 + 24) = v70;
  *(_QWORD *)(v60 + 32) = v61;
  v62 = v72;
  *(_QWORD *)(v60 + 40) = v72;
  *(_QWORD *)(v60 + 48) = v44;
  aBlock[4] = sub_1000925F8;
  aBlock[5] = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100092428;
  aBlock[3] = &unk_10073AFC8;
  v63 = _Block_copy(aBlock);
  swift_retain(v61);
  swift_retain(v62);
  swift_retain(v44);
  objc_msgSend(v43, "orderedAdsWithODMLSuccess:", v63, swift_release().n128_f64[0]);
  _Block_release(v63);
}

id sub_10009166C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSArray v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSArray v32;
  uint64_t v33;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for AdamId(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = SponsoredSearchAdvert.adamId.getter(v6);
  AdamId.stringValue.getter(v9);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v12 = String._bridgeToObjectiveC()();
  v13 = swift_bridgeObjectRelease(v11);
  v14 = SponsoredSearchAdvert.cppIds.getter(v13);
  if (v14)
  {
    v15 = v14;
    v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16.super.isa = 0;
  }
  SponsoredSearchAdvert.serverCppId.getter(v14);
  if (v17)
  {
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v19 = 0;
  }
  v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v21 = SponsoredSearchAdvert.adData.getter();
  v22 = objc_allocWithZone((Class)ADDataObject);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  v24 = objc_msgSend(v22, "initWith:andError:", isa, 0);

  SponsoredSearchAdvert.instanceId.getter();
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v28 = objc_msgSend(v20, "initWithAdamID:cppIDs:serverCppID:adData:instanceID:", v12, v16.super.isa, v19, v24, v27);

  v29 = v28;
  v30 = SponsoredSearchAdvert.appBinaryTraits.getter();
  if (v30)
  {
    v31 = v30;
    v32.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v31);
  }
  else
  {
    v32.super.isa = 0;
  }
  objc_msgSend(v29, "setAppBinaryTraits:", v32.super.isa);

  v33 = type metadata accessor for SponsoredSearchAdvert(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
  return v29;
}

uint64_t sub_1000918C4(int64_t a1, int a2, char a3, uint64_t (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  int64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  __n128 v78;
  __int128 v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  __n128 v94;
  char *v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  int v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  __int128 v120;
  __int128 v121;

  v111 = a4;
  v112 = a5;
  v12 = type metadata accessor for SponsoredSearchNativeAdvertData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OSLogger(0, v14);
  v107 = *(_QWORD *)(v17 - 8);
  v108 = v17;
  __chkstk_darwin(v17);
  v106 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AdamId(0);
  v115 = *(_QWORD *)(v19 - 8);
  v116 = v19;
  __chkstk_darwin(v19);
  v114 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v110 = (char *)&v98 - v22;
  v23 = type metadata accessor for SponsoredSearchAdvert(0);
  v24 = *(_QWORD *)(v23 - 8);
  v117 = v23;
  v118 = v24;
  __chkstk_darwin(v23);
  v113 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v98 - v27;
  v104 = v13;
  v103 = a2;
  v102 = v16;
  if (!a1)
  {
    v105 = 0;
    v36 = 0;
    v37 = 0;
    goto LABEL_47;
  }
  v100 = a6;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v97 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v97 = a1;
    swift_bridgeObjectRetain(a1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v97);
  }
  else
  {
    v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v101 = a7;
  if (v29)
  {
    *(_QWORD *)&v120 = _swiftEmptyArrayStorage;
    sub_1001F15E4(0, v29 & ~(v29 >> 63), 0);
    if (v29 < 0)
    {
      __break(1u);
LABEL_60:
      result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
      return result;
    }
    v30 = 0;
    v31 = (_QWORD *)v120;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a1);
      else
        v32 = *(id *)(a1 + 8 * v30 + 32);
      sub_1000921D8(v32, (uint64_t)v28);
      *(_QWORD *)&v120 = v31;
      v34 = v31[2];
      v33 = v31[3];
      v35 = v31;
      if (v34 >= v33 >> 1)
      {
        sub_1001F15E4(v33 > 1, v34 + 1, 1);
        v35 = (_QWORD *)v120;
      }
      ++v30;
      v35[2] = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v118 + 32))((unint64_t)v35+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(_QWORD *)(v118 + 72) * v34, v28, v117);
      v31 = v35;
    }
    while (v29 != v30);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    v31 = _swiftEmptyArrayStorage;
  }
  v99 = v12;
  v105 = v31;
  if ((a3 & 1) == 0)
  {
    a1 = 0;
LABEL_35:
    v61 = v31[2];
    v62 = _swiftEmptyArrayStorage;
    if (v61)
    {
      v119 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v31);
      sub_1001F151C(0, v61, 0);
      v63 = (char *)v31
          + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
      v64 = *(_QWORD *)(v118 + 72);
      v111 = *(uint64_t (**)(char *, char *, uint64_t))(v118 + 16);
      v112 = v64;
      v65 = v113;
      do
      {
        v66 = v117;
        v67 = v111(v65, v63, v117);
        *(_QWORD *)&v120 = 0;
        *((_QWORD *)&v120 + 1) = 0xE000000000000000;
        v68 = v114;
        v69 = SponsoredSearchAdvert.adamId.getter(v67);
        v70 = AdamId.stringValue.getter(v69);
        v72 = v71;
        (*(void (**)(char *, uint64_t))(v115 + 8))(v68, v116);
        swift_bridgeObjectRelease(*((_QWORD *)&v120 + 1));
        *(_QWORD *)&v120 = v70;
        *((_QWORD *)&v120 + 1) = v72;
        v73._countAndFlagsBits = 8250;
        v73._object = (void *)0xE200000000000000;
        String.append(_:)(v73);
        v74 = SponsoredSearchAdvert.selectedCppId.getter();
        if (v75)
        {
          v76 = v75;
        }
        else
        {
          v74 = 0x746C7561666564;
          v76 = 0xE700000000000000;
        }
        v77 = v76;
        String.append(_:)(*(Swift::String *)&v74);
        v78 = swift_bridgeObjectRelease(v76);
        v79 = v120;
        (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v65, v66, v78);
        v62 = v119;
        if ((swift_isUniquelyReferenced_nonNull_native(v119) & 1) == 0)
        {
          sub_1001F151C(0, v62[2] + 1, 1);
          v62 = v119;
        }
        v81 = v62[2];
        v80 = v62[3];
        if (v81 >= v80 >> 1)
        {
          sub_1001F151C(v80 > 1, v81 + 1, 1);
          v62 = v119;
        }
        v62[2] = v81 + 1;
        *(_OWORD *)&v62[2 * v81 + 4] = v79;
        v63 += v112;
        --v61;
      }
      while (v61);
      swift_bridgeObjectRelease(v105);
      v12 = v99;
    }
    *(_QWORD *)&v120 = v62;
    v82 = sub_10000DAF8((uint64_t *)&unk_100815880);
    v83 = sub_100010E80((unint64_t *)&qword_100809180, (uint64_t *)&unk_100815880, (uint64_t)&protocol conformance descriptor for [A]);
    v36 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v82, v83);
    v37 = v84;
    swift_bridgeObjectRelease(v62);
    a6 = v100;
LABEL_47:
    if (qword_100806978 != -1)
      goto LABEL_54;
    goto LABEL_48;
  }
  swift_bridgeObjectRetain(v31);
  a1 = sub_10050A580((uint64_t)_swiftEmptyArrayStorage);
  v36 = v31[2];
  if (!v36)
  {
LABEL_34:
    swift_bridgeObjectRelease(v31);
    goto LABEL_35;
  }
  v38 = (char *)v31 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
  v109 = *(_QWORD *)(v118 + 72);
  swift_bridgeObjectRetain(v31);
  while (1)
  {
    v40 = v110;
    v41 = SponsoredSearchAdvert.adamId.getter(v39);
    v12 = AdamId.stringValue.getter(v41);
    a6 = v42;
    v43 = v116;
    v44 = *(uint64_t (**)(char *, uint64_t))(v115 + 8);
    v45 = v44(v40, v116);
    v46 = v114;
    SponsoredSearchAdvert.adamId.getter(v45);
    v47 = ((uint64_t (*)(char *))v111)(v46);
    v44(v46, v43);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    *(_QWORD *)&v120 = a1;
    v37 = (__int128 *)a1;
    v50 = sub_10057E9FC(v12, a6);
    v51 = *(_QWORD *)(a1 + 16);
    v52 = (v49 & 1) == 0;
    v53 = v51 + v52;
    if (__OFADD__(v51, v52))
      break;
    v54 = v49;
    if (*(_QWORD *)(a1 + 24) >= v53)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        a1 = v120;
        if ((v49 & 1) != 0)
          goto LABEL_19;
      }
      else
      {
        v37 = &v120;
        sub_1001FC0F8();
        a1 = v120;
        if ((v54 & 1) != 0)
          goto LABEL_19;
      }
    }
    else
    {
      sub_1001F5AF8(v53, isUniquelyReferenced_nonNull_native);
      v37 = (__int128 *)v120;
      v55 = sub_10057E9FC(v12, a6);
      if ((v54 & 1) != (v56 & 1))
        goto LABEL_60;
      v50 = v55;
      a1 = v120;
      if ((v54 & 1) != 0)
      {
LABEL_19:
        *(_BYTE *)(*(_QWORD *)(a1 + 56) + v50) = v47 & 1;
        goto LABEL_20;
      }
    }
    *(_QWORD *)(a1 + 8 * (v50 >> 6) + 64) |= 1 << v50;
    v57 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v50);
    *v57 = v12;
    v57[1] = a6;
    *(_BYTE *)(*(_QWORD *)(a1 + 56) + v50) = v47 & 1;
    v58 = *(_QWORD *)(a1 + 16);
    v59 = __OFADD__(v58, 1);
    v60 = v58 + 1;
    if (v59)
      goto LABEL_53;
    *(_QWORD *)(a1 + 16) = v60;
    swift_bridgeObjectRetain(a6);
LABEL_20:
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(0x8000000000000000);
    v38 += v109;
    if (!--v36)
    {
      v31 = v105;
      swift_bridgeObjectRelease(v105);
      v12 = v99;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  swift_once(&qword_100806978, sub_100503374);
LABEL_48:
  v85 = v108;
  v86 = sub_10000EFC4(v108, (uint64_t)qword_10086AB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v106, v86, v85);
  v87 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v88 = type metadata accessor for LogMessage(0);
  v89 = swift_allocObject(v87, ((*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80))+ 6 * *(_QWORD *)(*(_QWORD *)(v88 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) | 7);
  *(_OWORD *)(v89 + 16) = xmmword_100640730;
  static LogMessage.identity(_:)(a6);
  LogMessage.init(stringLiteral:)(0x65636F7250646964, 0xED00007364417373);
  LogMessage.init(stringLiteral:)(0x637573204C4D444FLL, 0xED00003A73736563);
  *((_QWORD *)&v121 + 1) = &type metadata for Bool;
  v90 = v103;
  LOBYTE(v120) = v103 & 1;
  static LogMessage.safe(_:)(&v120);
  sub_10001282C((uint64_t)&v120);
  LogMessage.init(stringLiteral:)(0xD000000000000016, 0x800000010068A720);
  if (v37)
  {
    *((_QWORD *)&v121 + 1) = &type metadata for String;
    *(_QWORD *)&v120 = v36;
    *((_QWORD *)&v120 + 1) = v37;
  }
  else
  {
    v120 = 0u;
    v121 = 0u;
  }
  v91 = v104;
  static LogMessage.safe(_:)(&v120);
  sub_10001282C((uint64_t)&v120);
  v92 = v108;
  v93 = v106;
  Logger.info(_:)(v89, v108, &protocol witness table for OSLogger);
  v94 = swift_bridgeObjectRelease(v89);
  (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v93, v92, v94);
  v95 = v102;
  SponsoredSearchNativeAdvertData.init(adverts:odmlSuccess:installedStates:)(v105, v90 & 1, a1);
  Promise.resolve(_:)(v95);
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v95, v12);
}

void sub_1000921D8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = a2;
  v3 = type metadata accessor for AdamId(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "instanceID", v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = objc_msgSend(a1, "adamID");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  AdamId.init(value:)(v12, v14);
  v15 = objc_msgSend(a1, "assetInformation");
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v17 = objc_msgSend(a1, "adData");
  v18 = objc_msgSend(v17, "adData");

  if (v18)
  {
    v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v19 = sub_10050A000((uint64_t)_swiftEmptyArrayStorage);
  }
  v20 = objc_msgSend(a1, "selectedCppID");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = objc_msgSend(a1, "appBinaryTraits");
  if (v25)
  {
    v26 = v25;
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String);

  }
  else
  {
    v27 = 0;
  }
  SponsoredSearchAdvert.init(instanceId:adamId:assetInformation:adData:cppIds:serverCppId:selectedCppId:appBinaryTraits:)(v8, v10, v6, v16, v19, 0, 0, 0, v22, v24, v27);

}

double sub_100092428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  uint64_t v7;
  __n128 v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100018B6C(0, &qword_10080C1F8, ADAppAdvertisement_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  v8 = swift_retain(v5);
  v6(v4, a3, v8);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_1000924A0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_1000924CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SearchAdsAdvertPipeline()
{
  return objc_opt_self(_TtC20ProductPageExtension23SearchAdsAdvertPipeline);
}

uint64_t sub_100092520(uint64_t a1, uint64_t a2, int a3)
{
  return sub_100090A68(a1, a2, a3);
}

uint64_t sub_100092540(uint64_t a1)
{
  uint64_t v1;

  return sub_100091078(a1, v1);
}

uint64_t sub_100092548()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_100092594()
{
  uint64_t v0;

  sub_100091158(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1000925AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000925BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000925C4()
{
  _QWORD *v0;

  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000925F8(int64_t a1, int a2)
{
  uint64_t v2;

  return sub_1000918C4(a1, a2, *(_BYTE *)(v2 + 16), *(uint64_t (**)(char *, char *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100092610(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036B39C);
}

uint64_t sub_10009261C(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036B504);
}

uint64_t sub_100092628(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036B83C);
}

uint64_t sub_100092634(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036B850);
}

uint64_t sub_100092640(uint64_t a1, uint64_t a2)
{
  return sub_100092730(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_10036BA98);
}

uint64_t sub_10009264C(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036BAAC);
}

uint64_t sub_100092658(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036BC28);
}

uint64_t sub_100092664(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036BDA4);
}

uint64_t sub_100092670(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036BF20);
}

uint64_t sub_10009267C(uint64_t a1, uint64_t a2)
{
  return sub_100092730(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_10036BF34);
}

uint64_t sub_100092688(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036BF48);
}

uint64_t sub_100092694(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036BF5C);
}

uint64_t sub_1000926A0(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036BF70);
}

uint64_t sub_1000926AC(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036BF84);
}

uint64_t sub_1000926B8(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036C1F0);
}

uint64_t sub_1000926C4(uint64_t a1, uint64_t a2)
{
  return sub_100092DFC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_100364B10);
}

uint64_t sub_1000926D0(uint64_t a1, uint64_t a2)
{
  return sub_100092DFC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_100364B24);
}

uint64_t sub_1000926DC(uint64_t a1, uint64_t a2)
{
  return sub_100092730(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_10036C204);
}

uint64_t sub_1000926E8(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036C218);
}

uint64_t sub_1000926F4(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036C22C);
}

uint64_t sub_100092700(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036C400);
}

uint64_t sub_10009270C(uint64_t a1, uint64_t a2)
{
  return sub_100092DFC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_100364B38);
}

uint64_t sub_100092718(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036C5FC);
}

uint64_t sub_100092724(uint64_t a1, uint64_t a2)
{
  return sub_100092730(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_10036C780);
}

uint64_t sub_100092730(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, char *, _QWORD *, id))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *, char *, char *, _QWORD *, id);
  _QWORD v29[5];

  v28 = a3;
  v23 = a2;
  v27 = type metadata accessor for Shelf.PresentationHints(0);
  v26 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100816170);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v29, v12);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(v23, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  swift_getKeyPath(&unk_100644B48);
  ItemLayoutContext.subscript.getter(v4);
  swift_release();
  v20 = sub_10052A948();
  v28(v29, v11, v7, v4, v20);
  v21 = swift_unknownObjectRelease();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v26 + 8))(v4, v27, v21);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v29);
}

uint64_t sub_10009295C(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036C904);
}

uint64_t sub_100092968(uint64_t a1, uint64_t a2)
{
  return sub_100092974(a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_10036CAB8);
}

uint64_t sub_100092974(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, char *, _QWORD *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, char *, char *, _QWORD *);
  _QWORD v28[5];

  v27 = a3;
  v22 = a2;
  v26 = type metadata accessor for Shelf.PresentationHints(0);
  v25 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100816170);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v28, v12);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(v22, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  swift_getKeyPath(&unk_100644B48);
  ItemLayoutContext.subscript.getter(v4);
  swift_release();
  sub_10052A948();
  v27(v28, v11, v7, v4);
  v20 = swift_unknownObjectRelease();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v25 + 8))(v4, v26, v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
}

uint64_t sub_100092B9C(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036CC44);
}

uint64_t sub_100092BA8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, uint64_t, char *, _QWORD *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, char *, uint64_t, char *, _QWORD *);
  _QWORD v28[5];

  v27 = a3;
  v22 = a2;
  v26 = type metadata accessor for Shelf.PresentationHints(0);
  v25 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100816170);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v28, v12);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(v22, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter();
  swift_getKeyPath(&unk_100644B48);
  ItemLayoutContext.subscript.getter(v4);
  swift_release();
  sub_10052A948();
  v27(v28, v11, v19, v7, v4);
  v20 = swift_unknownObjectRelease();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v25 + 8))(v4, v26, v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
}

uint64_t sub_100092DD8(uint64_t a1, uint64_t a2)
{
  return sub_100092DFC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_100364B4C);
}

uint64_t sub_100092DE4(uint64_t a1, uint64_t a2)
{
  return sub_100092DFC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_100364B60);
}

uint64_t sub_100092DF0(uint64_t a1, uint64_t a2)
{
  return sub_100092DFC(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_100364CEC);
}

uint64_t sub_100092DFC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *, char *, uint64_t, char *, _QWORD *, id);
  _QWORD v29[5];

  v28 = a3;
  v23 = a2;
  v27 = type metadata accessor for Shelf.PresentationHints(0);
  v26 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ComponentLayoutOptions(0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_100816170);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_1008175D0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v29, v12);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ItemLayoutContext.mutableState.getter(v17);
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(v23, v18, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v19);
  swift_getKeyPath(&unk_100644B48);
  ItemLayoutContext.subscript.getter(v4);
  swift_release();
  v20 = sub_10052A948();
  v28(v29, v11, v19, v7, v4, v20);
  v21 = swift_unknownObjectRelease();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v26 + 8))(v4, v27, v21);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v29);
}

uint64_t sub_100093030()
{
  return ShelfLayoutContext.shelfPresentationHints.getter();
}

uint64_t sub_100093050@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

void sub_100093080(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;
  uint64_t v34;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_100644BD8);
  ReadOnlyLens.subscript.getter(&v34, KeyPath, v2);
  v15 = swift_release();
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  LODWORD(v2) = v34;
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v33.receiver = v22;
  v33.super_class = v21;
  v24 = objc_msgSendSuper2(&v33, "init");
  v25 = v24;
  if ((_DWORD)v2 == 1)
  {
    v26 = sub_1000E0660(v24);
    v27 = sub_1000E074C();
    v28 = qword_1008057B0;
    v11 = (v26 - v27) / 1.5;
  }
  else
  {
    v28 = qword_1008057B0;
  }
  if (v28 != -1)
    swift_once(&qword_1008057B0, sub_10034B038);
  v29 = type metadata accessor for AspectRatio(0);
  sub_10000EFC4(v29, (uint64_t)qword_100867970);
  v30 = AspectRatio.height(fromWidth:)(v11);
  ComponentPrefetchSizing.init(size:contentMode:)(1, v11, v30);
  v31 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);

}

void sub_1000932F0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t, double);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;
  uint64_t v30;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t, double))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_100644BD8);
  ReadOnlyLens.subscript.getter(&v30, KeyPath, v2);
  v15 = swift_release();
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v29.receiver = v22;
  v29.super_class = v21;
  v24 = objc_msgSendSuper2(&v29, "init");
  v25 = sub_1000E0660(v24);
  v26 = sub_1000E074C();
  ComponentPrefetchSizing.init(size:contentMode:)(1, (v25 - v26) * 0.5, (v25 - v26) * 0.5);
  v27 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 0, 1, v27);

}

void sub_1000934F4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t, double);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  uint64_t v32;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t, double))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_100644BD8);
  ReadOnlyLens.subscript.getter(&v32, KeyPath, v2);
  v15 = swift_release();
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v31.receiver = v22;
  v31.super_class = v21;
  v24 = objc_msgSendSuper2(&v31, "init");
  if (qword_100804E70 != -1)
    swift_once(&qword_100804E70, sub_10020D688);
  v25 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v26 = sub_10000EFC4(v25, (uint64_t)qword_100865F50);
  v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
  ComponentPrefetchSizing.init(size:contentMode:)(1, v27, v28);
  v29 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);

}

void sub_100093720(uint64_t a1, uint64_t a2)
{
  sub_100093738(a1, a2, (void (*)(uint64_t, id, double, double))sub_1003B91F4);
}

void sub_10009372C(uint64_t a1, uint64_t a2)
{
  sub_100093738(a1, a2, (void (*)(uint64_t, id, double, double))sub_1003C47D0);
}

void sub_100093738(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id, double, double))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double (*v15)(char *, uint64_t);
  __n128 v16;
  uint64_t KeyPath;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  double *v27;
  id v28;
  uint64_t v29;
  void (*v30)(uint64_t, id, double, double);
  objc_super v31;
  uint64_t v32;

  v30 = a3;
  v3 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v11);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v14 = v13;
  v15 = *(double (**)(char *, uint64_t))(v8 + 8);
  v16.n128_f64[0] = v15(v10, v7);
  ShelfLayoutContext.shelf.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100644BD8);
  ReadOnlyLens.subscript.getter(&v32, KeyPath, v3);
  v18 = swift_release();
  v19 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v18);
  v20 = v32;
  v21 = ShelfLayoutContext.contentPageGrid.getter(v19);
  v22 = PageGrid.containerWidth.getter(v21);
  v23 = ((uint64_t (*)(char *, uint64_t))v15)(v10, v7);
  v24 = ShelfLayoutContext.traitCollection.getter(v23);
  v25 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v26 = (char *)objc_allocWithZone(v25);
  v27 = (double *)&v26[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v27 = v22;
  v27[1] = 1.79769313e308;
  *(_QWORD *)&v26[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v24;
  v31.receiver = v26;
  v31.super_class = v25;
  v28 = objc_msgSendSuper2(&v31, "init");
  v30(v20, v28, v12, v14);

}

void sub_100093924(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double (*v12)(char *, uint64_t, double);
  __n128 v13;
  uint64_t KeyPath;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  double *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;
  uint64_t v28;

  v2 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v10);
  v11 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = *(double (**)(char *, uint64_t, double))(v7 + 8);
  v13.n128_f64[0] = v12(v9, v6, v11);
  ShelfLayoutContext.shelf.getter(v13);
  KeyPath = swift_getKeyPath(&unk_100644BD8);
  ReadOnlyLens.subscript.getter(&v28, KeyPath, v2);
  v15 = swift_release();
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
  v17 = ShelfLayoutContext.contentPageGrid.getter(v16);
  v18 = PageGrid.containerWidth.getter(v17);
  v19 = ((uint64_t (*)(char *, uint64_t))v12)(v9, v6);
  v20 = ShelfLayoutContext.traitCollection.getter(v19);
  v21 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = (double *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v23 = v18;
  v23[1] = 1.79769313e308;
  *(_QWORD *)&v22[OBJC_IVAR____TtC20ProductPageExtension28SnapshotPageTraitEnvironment_traitCollection] = v20;
  v27.receiver = v22;
  v27.super_class = v21;
  v24 = objc_msgSendSuper2(&v27, "init");
  v25 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);

}

uint64_t sub_100093B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093FD0(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1000951F8);
}

uint64_t sub_100093B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093D78(a1, a2, a3, (void (*)(char *, uint64_t))sub_100093080, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1000951F8);
}

uint64_t sub_100093B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093B34(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1003C47D0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1000951F8);
}

uint64_t sub_100093B34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, double, double), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  void (*v26)(uint64_t *__return_ptr, uint64_t *);
  void (*v27)(uint64_t, id, double, double);

  v26 = a5;
  v27 = a4;
  v25[0] = a2;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10080AFE8);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  sub_100093738((uint64_t)v10, a3, v27);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_100010F2C((uint64_t)v13, &qword_10080AFE8);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v20 = sub_1000941FC();
  __chkstk_darwin(v20);
  v25[-2] = v18;
  v21 = (uint64_t)sub_10036D594(v26, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v23 = v21;
    else
      v23 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v22);
}

uint64_t sub_100093D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093D78(a1, a2, a3, (void (*)(char *, uint64_t))sub_1000932F0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1000951F8);
}

uint64_t sub_100093D78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  void (*v26)(uint64_t *__return_ptr, uint64_t *);
  void (*v27)(char *, uint64_t);

  v26 = a5;
  v27 = a4;
  v25[0] = a2;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10080AFE8);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  v27(v10, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_100010F2C((uint64_t)v13, &qword_10080AFE8);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v20 = sub_1000941FC();
  __chkstk_darwin(v20);
  v25[-2] = v18;
  v21 = (uint64_t)sub_10036D594(v26, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v23 = v21;
    else
      v23 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v22);
}

uint64_t sub_100093FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093B34(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1003B91F4, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1000951F8);
}

uint64_t sub_100093FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093D78(a1, a2, a3, (void (*)(char *, uint64_t))sub_1000934F4, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1000951F8);
}

uint64_t sub_100093FD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  void (*v24)(uint64_t *__return_ptr, uint64_t *);

  v24 = a4;
  v23[1] = a2;
  v5 = type metadata accessor for ShelfLayoutContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DAF8(&qword_10080AFE8);
  __chkstk_darwin(v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ComponentPrefetchSizing(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[2] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v14);
  sub_100093924((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_100010F2C((uint64_t)v11, &qword_10080AFE8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  v18 = sub_1000941FC();
  __chkstk_darwin(v18);
  v23[-2] = v16;
  v19 = (uint64_t)sub_10036D594(v24, (uint64_t)&v23[-4], (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v21 = v19;
    else
      v21 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (!v22)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v19);
LABEL_6:
  v20 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v20);
}

_QWORD *sub_1000941FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  __n128 v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - v5;
  v7 = sub_10000DAF8((uint64_t *)&unk_1008176E0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath(&unk_100644B78);
  ItemLayoutContext.subscript.getter(v10);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100644BA8);
  ReadOnlyLens.subscript.getter(v6, KeyPath, v7);
  v12 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
  v13 = sub_10000E720((unint64_t *)&qword_10080F0C0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v14 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v3, v0, v13);
  v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v3, v0);
  v15(v6, v0);
  if ((v14 & 1) != 0)
    return _swiftEmptyArrayStorage;
  v16 = sub_10000DAF8(&qword_10081F180);
  ItemLayoutContext.typedModel<A>(as:)(&v25, v16, v16);
  if (!v26)
  {
    sub_100010F2C((uint64_t)&v25, &qword_10080AFF0);
    return _swiftEmptyArrayStorage;
  }
  sub_100010E24(&v25, (uint64_t)v27);
  v17 = v28;
  v18 = v29;
  sub_100010F08(v27, v28);
  v19 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v17, v18);
  if (!v19)
  {
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
    return _swiftEmptyArrayStorage;
  }
  v20 = v19;
  v21 = sub_10000DAF8((uint64_t *)&unk_100808840);
  v22 = swift_allocObject(v21, 40, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100640AE0;
  *(_QWORD *)(v22 + 32) = v20;
  *(_QWORD *)&v25 = v22;
  specialized Array._endMutation()(v22);
  v23 = v25;
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v27);
  return (_QWORD *)v23;
}

void (*sub_100094614(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView);
  v3 = OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_appPromotionCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC20ProductPageExtension20AppPromotionCardView_videoView);
  return sub_100094674;
}

void sub_100094674(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_1000A3864();

    v3 = v2;
  }
  else
  {
    sub_1000A3864();
    v3 = v4;
  }

}

uint64_t sub_1000946D4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView)
                 + OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_appPromotionCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC20ProductPageExtension20AppPromotionCardView_mediaContentView);
  sub_1000951BC();
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

id sub_100094780()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView];
  sub_1003EDA7C();
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_appPromotionCardView];
  sub_1000A2D30();
  v3 = &v1[OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_initialLongPressLocation];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v1, "addSubview:", v2);
}

uint64_t sub_1000948B4()
{
  return type metadata accessor for AppPromotionOfferCollectionViewCell(0);
}

uint64_t type metadata accessor for AppPromotionOfferCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10080C228;
  if (!qword_10080C228)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionOfferCollectionViewCell);
  return result;
}

uint64_t sub_1000948F8()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView)+ OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_appPromotionCardView)+ OBJC_IVAR____TtC20ProductPageExtension20AppPromotionCardView_videoView);
}

void sub_100094928(void *a1)
{
  sub_1000A3864();

}

uint64_t (*sub_100094970(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100094614(v2);
  return sub_10001C148;
}

void sub_1000949B4()
{
  sub_1003ED8E0();
}

id sub_1000949EC()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView)
                           + OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_appPromotionCardView));
}

id sub_100094A10()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView));
}

double sub_100094A24()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0+ OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView)+ OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_availabilityLabelView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppPromotionView(0);
  v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetHeight(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_100094AAC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension16AppPromotionView_availabilityLabelView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppPromotionView(0);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_100094B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

uint64_t sub_100094B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_100094BE0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100094C28(uint64_t a1, uint64_t a2)
{
  return sub_100092BA8(a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_10036C414);
}

uint64_t sub_100094C44(uint64_t a1)
{
  uint64_t v1;

  return static ConfigurableCell.reuseIdentifier(in:)(a1, v1);
}

uint64_t sub_100094C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E720(&qword_10080C260, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644A70);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_100094CB8(uint64_t a1@<X8>)
{
  sub_100093924(a1);
}

uint64_t sub_100094CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100093FD0(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_10007577C);
}

uint64_t sub_100094CE8()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_10000E720(&qword_10080C268, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644AD8);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100094D30(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_10000E720(&qword_10080C268, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644AD8);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_100094D90(_QWORD *a1))()
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_10000E720(&qword_10080C268, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644AD8);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10001C148;
}

uint64_t sub_100094E0C()
{
  return sub_10000E720(&qword_10080C238, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644984);
}

uint64_t sub_100094E38()
{
  return sub_10000E720(&qword_10080C240, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_1006449B4);
}

uint64_t sub_100094E64()
{
  return sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
}

uint64_t sub_100094E90(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_10000E720(&qword_10080C248, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644A10);
  a1[2] = sub_10000E720(&qword_10080C250, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644A40);
  a1[3] = sub_10000E720(&qword_10080C258, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_1006449F4);
  result = sub_10000E720(&qword_10080C260, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100644A70);
  a1[4] = result;
  return result;
}

char *sub_100094F24()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _OWORD v19[2];
  objc_super v20[2];
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_itemLayoutContext];
  v7 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = objc_allocWithZone((Class)type metadata accessor for AppPromotionView(0));
  v9 = v0;
  v10 = objc_msgSend(v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView] = v10;

  v21.receiver = v9;
  v21.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC20ProductPageExtension35AppPromotionOfferCollectionViewCell_appPromotionView;
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  v13 = v11;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD000000000000010, 0x800000010068A7E0, v20, v19);
  sub_100010F2C((uint64_t)v19, &qword_100808F20);
  sub_100010F2C((uint64_t)v20, &qword_100808F20);
  UIView.setAutomationSemantics(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = objc_msgSend(v13, "contentView");
  objc_msgSend(v14, "setClipsToBounds:", 0);

  v15 = objc_msgSend(v13, "contentView");
  objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v16 = objc_msgSend(v13, "contentView");
  v17 = *(id *)&v11[v12];
  objc_msgSend(v16, "addSubview:", v17);

  return v13;
}

uint64_t sub_100095168()
{
  return ShelfLayoutContext.shelfPresentationHints.getter();
}

uint64_t sub_100095190@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

unint64_t sub_1000951BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080B7F0;
  if (!qword_10080B7F0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10080B7F0);
  }
  return result;
}

uint64_t sub_1000951F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10007577C(a1);
}

void sub_100095210(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char **v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  char isEscapingClosureAtFileLocation;
  double v54;
  char *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  NSString v62;
  __n128 v63;
  char v64;
  double v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  void (*v70)(_QWORD *, uint64_t);
  _QWORD *v71;
  uint64_t v72;
  __n128 v73;
  double v74;
  void (*v75)(char *, _QWORD, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  __n128 v87;
  void *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  id v92;
  uint64_t v93;
  char *v94;
  id v95;
  unint64_t v96;
  double v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  double *v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char v121;
  char v122;
  char v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  __n128 v139;
  char v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  _QWORD aBlock[6];
  void *v169;

  v162 = a2;
  v3 = sub_10000DAF8((uint64_t *)&unk_100811F10);
  __chkstk_darwin(v3);
  v161 = (char *)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v142 - v6;
  v8 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VideoControls(0, v9);
  __chkstk_darwin(v12);
  v159 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v158 = (char *)&v142 - v15;
  v16 = sub_10000DAF8((uint64_t *)&unk_100811F20);
  v17 = __chkstk_darwin(v16);
  v154 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for VideoFillMode(0, v17);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v20 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VideoConfiguration(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v160 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for AspectRatio(0);
  v166 = *(_QWORD *)(v163 - 8);
  v24 = __chkstk_darwin(v163);
  v155 = (char *)&v142 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for PageGrid.Direction(0, v24);
  v26 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v150 = (char *)&v142 - v29;
  v152 = type metadata accessor for PageGrid(0);
  v148 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v31 = (uint64_t *)((char *)&v142 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = __chkstk_darwin(v32);
  v35 = (uint64_t *)((char *)&v142 - v34);
  v36 = type metadata accessor for FramedVideo(0, v33);
  v37 = sub_10000E720(&qword_100811150, (uint64_t (*)(uint64_t))&type metadata accessor for FramedVideo, (uint64_t)&protocol conformance descriptor for FramedMedia);
  v164 = a1;
  ItemLayoutContext.typedModel<A>(as:)(aBlock, v36, v36, v37);
  v38 = aBlock[0];
  if (aBlock[0])
  {
    v145 = v22;
    v146 = v21;
    v147 = v11;
    v144 = v7;
    swift_retain(aBlock[0]);
    v40 = (void *)FramedMedia.caption.getter(v39);
    v41 = (uint64_t)objc_msgSend(v40, "length", swift_release().n128_f64[0]);

    v42 = &selRef_fileURLWithPath_;
    v165 = v20;
    v153 = v35;
    if (v41 < 1)
    {
      v56 = v167;
      objc_msgSend(*(id *)&v167[qword_1008124D8], "setText:", 0);
      v56[qword_1008657C0] = 0;
      objc_msgSend(*(id *)&v56[qword_1008124C8], "setHidden:", 1);
    }
    else
    {
      v143 = v26;
      swift_retain(v38);
      v44 = (void *)FramedMedia.caption.getter(v43);
      swift_release();
      swift_getKeyPath(&unk_100644C80);
      ItemLayoutContext.subscript.getter(&v169);
      swift_release();
      v45 = v169;
      v46 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v44);
      v47 = objc_msgSend(v44, "length");
      v48 = swift_allocObject(&unk_10073B190, 41, 7);
      *(_QWORD *)(v48 + 16) = 0;
      *(_QWORD *)(v48 + 24) = v45;
      *(_QWORD *)(v48 + 32) = v46;
      *(_BYTE *)(v48 + 40) = 1;
      v49 = swift_allocObject(&unk_10073B1B8, 32, 7);
      *(_QWORD *)(v49 + 16) = sub_100028028;
      *(_QWORD *)(v49 + 24) = v48;
      aBlock[4] = sub_10000F020;
      aBlock[5] = v49;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100027208;
      aBlock[3] = &unk_10073B1D0;
      v50 = _Block_copy(aBlock);
      v51 = v45;
      v52 = v46;
      swift_retain(v49);
      objc_msgSend(v44, "enumerateAttributesInRange:options:usingBlock:", 0, v47, 0x100000, v50, swift_release().n128_f64[0]);
      _Block_release(v50);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v49, "", 113, 30, 92, 1);

      swift_release();
      *(_QWORD *)&v54 = swift_release().n128_u64[0];
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
        return;
      }
      v55 = v167;
      objc_msgSend(*(id *)&v167[qword_1008124D8], "setAttributedText:", v52, v54);
      v55[qword_1008657C0] = 1;
      objc_msgSend(*(id *)&v55[qword_1008124C8], "setHidden:", 0);

      v20 = v165;
      v35 = v153;
      v26 = v143;
      v42 = &selRef_fileURLWithPath_;
    }
    v57 = *(void **)&v167[qword_1008124D0];
    swift_retain(v38);
    FramedMedia.ordinal.getter(v58);
    v60 = v59;
    v61 = swift_release().n128_u64[0];
    if (v60)
    {
      v62 = String._bridgeToObjectiveC()();
      v61 = swift_bridgeObjectRelease(v60).n128_u64[0];
    }
    else
    {
      v62 = 0;
    }
    objc_msgSend(v57, v42[180], v62, *(double *)&v61);

    v63 = swift_retain(v38);
    v64 = FramedMedia.isFullWidth.getter(v63);
    *(_QWORD *)&v65 = swift_release().n128_u64[0];
    if ((v64 & 1) != 0)
    {
      v66 = objc_msgSend(v167, "contentView", v65);
      objc_msgSend(v66, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

    }
    else
    {
      swift_getKeyPath(&unk_100644C50);
      ItemLayoutContext.subscript.getter(v35);
      swift_release();
      v69 = PageGrid.containerWidth.getter(v68);
      v70 = *(void (**)(_QWORD *, uint64_t))(v148 + 8);
      v71 = v35;
      v72 = v152;
      v70(v71, v152);
      swift_getKeyPath(&unk_100644C50);
      ItemLayoutContext.subscript.getter(v31);
      v73 = swift_release();
      v74 = PageGrid.containerHeight.getter(v73);
      v70(v31, v72);
      v75 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
      v76 = v150;
      v77 = v26;
      v78 = v151;
      v75(v150, enum case for PageGrid.Direction.vertical(_:), v151);
      swift_getKeyPath(&unk_100644C50);
      ItemLayoutContext.subscript.getter(v31);
      v79 = swift_release();
      v80 = PageGrid.safeAreaInsets.getter(v79);
      v82 = v81;
      v84 = v83;
      v86 = v85;
      v70(v31, v72);
      swift_getKeyPath(&unk_100644C80);
      ItemLayoutContext.subscript.getter(aBlock);
      v87 = swift_release();
      v88 = (void *)aBlock[0];
      v89 = v149;
      (*(void (**)(char *, char *, uint64_t, __n128))(v77 + 16))(v149, v76, v78, v87);
      v90 = sub_1004B5390(0.0);
      v91 = v153;
      PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v89, 0, v90, v69, v74, v80, v82, v84, v86);

      (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
      v92 = objc_msgSend(v167, "contentView");
      objc_msgSend(v92, "setLayoutMargins:", PageGrid.horizontalMargins.getter(v92));

      v20 = v165;
      v67 = ((uint64_t (*)(_QWORD *, uint64_t))v70)(v91, v72);
    }
    v93 = v163;
    if (FramedVideo.artwork.getter(v67))
    {
      v94 = v167;
      v95 = objc_msgSend(v167, "contentView");
      v96 = sub_1000951BC();
      LayoutMarginsAware<>.layoutFrame.getter(v96);
      v98 = v97;
      v100 = v99;

      Artwork.size.getter(v101);
      v102 = v155;
      AspectRatio.init(_:_:)(v103);
      v104 = AspectRatio.maxSize(filling:)(v98, v100);
      v106 = v105;
      v107 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v166 + 8))(v102, v93, v107);
      v108 = (double *)&v94[qword_10086B608];
      *v108 = v104;
      *((_QWORD *)v108 + 1) = v106;
    }
    if (FramedVideo.video.getter())
    {
      v109 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v156 + 104))(v20, enum case for VideoFillMode.scaleAspectFill(_:), v157);
      v110 = FramedVideo.artwork.getter(v109);
      if (v110)
      {
        Artwork.size.getter(v110);
        v112 = v154;
        AspectRatio.init(_:_:)(v113);
        v111 = swift_release();
        v114 = 0;
        v115 = (uint64_t)v144;
      }
      else
      {
        v114 = 1;
        v115 = (uint64_t)v144;
        v112 = v154;
      }
      v116 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v166 + 56))(v112, v114, 1, v93, v111);
      v117 = v158;
      v118 = Video.playbackControls.getter(v116);
      v119 = v159;
      v120 = Video.autoPlayPlaybackControls.getter(v118);
      v121 = Video.canPlayFullScreen.getter(v120);
      v122 = Video.allowsAutoPlay.getter();
      v123 = Video.looping.getter();
      v124 = v117;
      v125 = v160;
      VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v165, v112, v124, v119, v121 & 1, v122 & 1, v123 & 1, 0, 0, 1);
      v126 = type metadata accessor for VideoViewManager(0);
      v127 = v162;
      v128 = BaseObjectGraph.inject<A>(_:)(aBlock, v126, v126);
      v129 = Video.playbackId.getter(aBlock, v128);
      v130 = (uint64_t)v147;
      Video.videoUrl.getter(v129);
      v132 = type metadata accessor for URL(0, v131);
      v133 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v130, 0, 1, v132);
      v134 = Video.templateMediaEvent.getter(v133);
      v135 = (uint64_t)v161;
      Video.templateClickEvent.getter(v134);
      v136 = type metadata accessor for VideoView(0);
      v137 = sub_10000E720(&qword_100807F80, type metadata accessor for VideoView, (uint64_t)&unk_100667D20);
      v138 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(aBlock, v130, v125, v115, v135, v127, v136, v137);
      sub_100010F2C(v135, (uint64_t *)&unk_100811F10);
      sub_100010F2C(v115, (uint64_t *)&unk_100811F10);
      sub_100010F2C(v130, (uint64_t *)&unk_1008092A0);
      sub_100010F2C((uint64_t)aBlock, &qword_100809010);
      sub_1005B2C30();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v145 + 8))(v125, v146);
    }
    v139 = swift_retain(v38);
    v140 = FramedMedia.hasRoundedCorners.getter(v139);
    v141 = swift_release();
    v167[qword_1008657B8] = v140 & 1;
    sub_1000270C4(v141);
    swift_release();
  }
}

uint64_t sub_100095E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1008657B0;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100083A44(v3, a1);
}

uint64_t sub_100095EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1008657B0;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000839FC(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_100095F08(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_1008657B0, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100095F50()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "prepareForReuse");
  sub_1005B2C30();
}

uint64_t sub_100095F98()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100095FCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100095FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100095FEC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100095FF4()
{
  qword_10080C288 = (uint64_t)&type metadata for Double;
  unk_10080C290 = &protocol witness table for Double;
  qword_10080C270 = 0;
  qword_10080C2B0 = (uint64_t)&type metadata for Double;
  unk_10080C2B8 = &protocol witness table for Double;
  qword_10080C298 = 0x4028000000000000;
  qword_10080C2D8 = (uint64_t)&type metadata for Double;
  unk_10080C2E0 = &protocol witness table for Double;
  qword_10080C2C0 = 0x4014000000000000;
  qword_10080C300 = (uint64_t)&type metadata for Double;
  unk_10080C308 = &protocol witness table for Double;
  qword_10080C2E8 = 0x4041000000000000;
}

void sub_10009603C()
{
  qword_10080C328 = (uint64_t)&type metadata for Double;
  unk_10080C330 = &protocol witness table for Double;
  qword_10080C310 = 0;
  qword_10080C350 = (uint64_t)&type metadata for Double;
  unk_10080C358 = &protocol witness table for Double;
  qword_10080C338 = 0x4024000000000000;
  qword_10080C378 = (uint64_t)&type metadata for Double;
  unk_10080C380 = &protocol witness table for Double;
  qword_10080C360 = 0x4014000000000000;
  qword_10080C3A0 = (uint64_t)&type metadata for Double;
  unk_10080C3A8 = &protocol witness table for Double;
  qword_10080C388 = 0x4014000000000000;
}

void sub_1000960F4(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  objc_super v38;

  v38.receiver = v2;
  v38.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v38, "viewWillLayoutSubviews");
  v3 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_pageView];
  v4 = objc_msgSend(v2, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = v4;
  objc_msgSend(v4, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v14 = objc_msgSend(v2, "view");
  if (!v14)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15 = v14;
  objc_msgSend(v14, "safeAreaInsets");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  objc_msgSend(v3, "setFrame:", CGRect.subtracting(insets:)(v17, v19, v21, v23, v7, v9, v11, v13));
  v24 = *(void **)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_overlayViewController];
  if (!v24)
    return;
  v25 = v24;
  v26 = objc_msgSend(v25, "view");
  if (!v26)
    goto LABEL_10;
  v27 = v26;
  v28 = objc_msgSend(v2, "view");
  if (!v28)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v29 = v28;
  objc_msgSend(v28, "bounds");
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;

  objc_msgSend(v27, "setFrame:", v31, v33, v35, v37);
}

id sub_1000962EC()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    sub_100035178();
    v4 = (void *)static UIColor.defaultBackground.getter();
    objc_msgSend(v3, "setBackgroundColor:", v4);

    result = objc_msgSend(v1, "view");
    if (result)
    {
      v5 = result;
      objc_msgSend(result, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_pageView]);

      dispatch thunk of BasePresenter.didLoad()(v6);
      v7 = objc_msgSend(v1, "navigationItem");
      objc_msgSend(v7, "setLargeTitleDisplayMode:", 2);

      return objc_msgSend(v1, "setTitle:", 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10009644C(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.receiver = v2;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "viewWillAppear:", a1 & 1, v7);
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 24];
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100010F08(&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for StoreViewControllerLifecycleEvent.willAppear(_:), v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v9, v10, v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v12 = objc_msgSend(v2, "navigationController");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "setNavigationBarHidden:animated:", 1, 0);

  }
  v14 = objc_msgSend(v2, "modalPresentationStyle");
  v15 = objc_msgSend(v2, "view");
  v16 = v15;
  if (v14 == (id)2)
  {
    if (v15)
    {
      objc_msgSend(v15, "setLayoutMargins:", 20.0, 0.0, 0.0, 0.0);
LABEL_8:

      return;
    }
    __break(1u);
  }
  else if (v15)
  {
    objc_msgSend(v15, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_100096640(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void *v20;
  id v21;
  id v22;
  objc_super v23;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.receiver = v2;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1, v11);
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 24];
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100010F08(&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver], v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for StoreViewControllerLifecycleEvent.didAppear(_:), v9);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v13, v14, v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v17 = dispatch thunk of BasePresenter.pendingPageRender.getter(v16);
  if (v17)
  {
    v18 = Date.init()(v17);
    v19 = Date.timeIntervalSince1970.getter(v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    PendingPageRender.appearTime.setter(*(_QWORD *)&v19, 0);
    swift_release();
  }
  ArtworkLoader.isOccluded.setter(0);
  v20 = (void *)objc_opt_self(NSNotificationCenter);
  v21 = objc_msgSend(v20, "defaultCenter");
  objc_msgSend(v21, "addObserver:selector:name:object:", v2, "appEnteredWhileAppeared", UIApplicationDidBecomeActiveNotification, 0);

  v22 = objc_msgSend(v20, "defaultCenter");
  objc_msgSend(v22, "addObserver:selector:name:object:", v2, "appExitedWhileAppeared", UIApplicationDidEnterBackgroundNotification, 0);

}

void sub_1000968B8(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ViewWillDisappearReason(0, v6);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DAF8((uint64_t *)&unk_10080C430);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v15).n128_u64[0];
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v2;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, "viewWillDisappear:", a1 & 1, v17);
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 24];
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100010F08(&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver], v20);
  static ViewWillDisappearReason.inferred(for:)(v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v19, enum case for StoreViewControllerLifecycleEvent.willDisappear(_:), v15);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v19, v20, v21);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (dispatch thunk of BasePresenter.pendingPageRender.getter(v22))
  {
    v23 = static ViewWillDisappearReason.inferred(for:)(v2);
    v24 = Date.init()(v23);
    v25 = Date.timeIntervalSince1970.getter(v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
    PendingPageRender.DisappearTimeAndReason.init(reason:timeInterval:)(v11, v25);
    v26 = type metadata accessor for PendingPageRender.DisappearTimeAndReason(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v14, 0, 1, v26);
    PendingPageRender.disappearTime.setter(v14);
    swift_release();
  }
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_impressionsCalculator])
    ImpressionsCalculator.isVisible.setter(0);
  ArtworkLoader.isOccluded.setter(1);
  v27 = (void *)objc_opt_self(NSNotificationCenter);
  v28 = objc_msgSend(v27, "defaultCenter");
  objc_msgSend(v28, "removeObserver:name:object:", v2, UIApplicationDidBecomeActiveNotification, 0);

  v29 = objc_msgSend(v27, "defaultCenter");
  objc_msgSend(v29, "removeObserver:name:object:", v2, UIApplicationDidEnterBackgroundNotification, 0);

}

void sub_100096D04(char *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 24];
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver + 32];
  sub_100010F08(&a1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a3, v5);
  v11 = a1;
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v9, v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

}

uint64_t sub_100096DD8(uint64_t a1)
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  __n128 v11;
  _QWORD v12[4];

  ObjectType = swift_getObjectType();
  v4 = type metadata accessor for ActionRunner.Origin(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v12[3] = ObjectType;
    v12[0] = v1;
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_objectGraph];
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ActionRunner.Origin.userInitiated(_:), v4);
    v10 = v1;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v12, v7, v9);
    v11 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v11);
    return sub_10001282C((uint64_t)v12);
  }
  return result;
}

uint64_t type metadata accessor for ArcadeWelcomeViewController()
{
  return objc_opt_self(_TtC20ProductPageExtension27ArcadeWelcomeViewController);
}

id sub_100096FA8(uint64_t a1)
{
  uint64_t v1;

  return sub_100514F14(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_artworkLoader));
}

id sub_100096FE0()
{
  void *v0;

  return objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_100096FF8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  static JULoadingViewController.PresentationContext.placeholder.getter(v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
  v5 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v2, 0);
  sub_10009748C(v5);

}

id sub_100097094()
{
  return sub_10009748C(0);
}

void sub_10009709C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = v1;
  type metadata accessor for JUContentUnavailableViewController(0);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_presenter);
  v5 = sub_100020248(&qword_10080C420, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeWelcomePagePresenter, (uint64_t)&protocol conformance descriptor for BasePresenter);
  swift_errorRetain(a1);
  swift_retain(v4);
  v6 = (id)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(a1, v4, v5, 0, 0, 0);
  sub_10009748C(v6);

}

uint64_t sub_100097154(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_10080C410, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeWelcomeViewController, (uint64_t)&unk_100644CEC);
}

uint64_t sub_100097180(uint64_t a1, uint64_t a2)
{
  return sub_100020248(&qword_10080C418, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeWelcomeViewController, (uint64_t)&unk_100644D14);
}

uint64_t sub_1000971AC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t *v14;
  id v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  objc_super v26;
  _OWORD v27[10];
  _OWORD v28[10];

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_overlayViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_objectGraph] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_presenter] = a1;
  v7 = &v3[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_lifecycleObserver];
  *((_QWORD *)v7 + 3) = type metadata accessor for ArcadeWelcomePagePresenter(0);
  *((_QWORD *)v7 + 4) = &protocol witness table for BasePresenter;
  *(_QWORD *)v7 = a1;
  v8 = type metadata accessor for ArtworkLoader(0);
  v9 = *(_QWORD *)(a2 + qword_10086B3B8);
  if (v9)
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_artworkLoader] = v9;
    v10 = type metadata accessor for ImpressionsCalculator(0);
    swift_retain_n(a1, 2);
    v11 = v3;
    swift_retain(a2);
    swift_retain(v9);
    BaseObjectGraph.optional<A>(_:)(v28, v10, v10);
    *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_impressionsCalculator] = *(_QWORD *)&v28[0];
    v12 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v13 = objc_msgSend(v12, "userInterfaceIdiom");

    if (v13 == (id)1)
    {
      if (qword_100804788 != -1)
        swift_once(&qword_100804788, sub_10009603C);
      v14 = &qword_10080C310;
    }
    else
    {
      if (qword_100804780 != -1)
        swift_once(&qword_100804780, sub_100095FF4);
      v14 = &qword_10080C270;
    }
    sub_100097590(v14, v28);
    sub_100097590(v28, v27);
    v15 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomePageView());
    *(_QWORD *)&v11[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_pageView] = sub_1005152E4(v27);

    v26.receiver = v11;
    v26.super_class = ObjectType;
    v16 = (char *)objc_msgSendSuper2(&v26, "initWithNibName:bundle:", 0, 0);
    v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_impressionsCalculator];
    v18 = v16;
    if (v17)
    {
      swift_retain(v17);
      ImpressionsCalculator.isVisible.setter(1);
      swift_release();
    }
    v20 = sub_100020248(&qword_10080C428, v19, (uint64_t (*)(uint64_t))type metadata accessor for ArcadeWelcomeViewController, (uint64_t)&unk_100644D5C);
    v21 = v16;
    dispatch thunk of ArcadeWelcomePagePresenter.view.setter(v16, v20);

    sub_1000975CC(v28);
    *(_QWORD *)(*(_QWORD *)&v21[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_pageView]
              + OBJC_IVAR____TtC20ProductPageExtension21ArcadeWelcomePageView_delegate
              + 8) = &off_10073B238;
    swift_unknownObjectWeakAssign(v22);
    return (uint64_t)v21;
  }
  else
  {
    v24 = v8;
    swift_retain_n(a1, 2);
    v25 = v3;
    swift_retain(a2);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v24, v24);
    __break(1u);
  }
  return result;
}

id sub_10009748C(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  char v21;

  v3 = OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_overlayViewController;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_overlayViewController];
  v5 = v4;
  static ViewControllerContainment.remove(_:)(v4);

  v6 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v7 = a1;

  v8 = *(void **)&v1[v3];
  v9 = v8;
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v11 = result;
    objc_msgSend(result, "bounds");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    v20[0] = v13;
    v20[1] = v15;
    v20[2] = v17;
    v20[3] = v19;
    v21 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v8, v1, v20);

    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20ProductPageExtension27ArcadeWelcomeViewController_pageView], "setHidden:", *(_QWORD *)&v1[v3] != 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_OWORD *sub_100097590(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for OnboardingPageView.LayoutMetrics(a2, a1);
  return a2;
}

_QWORD *sub_1000975CC(_QWORD *a1)
{
  destroy for OnboardingPageView.LayoutMetrics(a1);
  return a1;
}

uint64_t sub_100097600()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  sub_100010F2C(v0 + qword_10080C490, &qword_10082AF10);

  swift_release();
  return sub_100010F2C(v0 + qword_100864C18, &qword_1008131E0);
}

id sub_100097700(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (v2[qword_10080C4A0] == 1)
    v2[qword_10080C4A0] = 0;
  v5.receiver = v2;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

id sub_10009774C(_BYTE *a1, uint64_t a2)
{
  objc_class *ObjectType;
  _BYTE *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  if (a1[qword_10080C4A0] == 1)
    a1[qword_10080C4A0] = 0;
  v6.receiver = a1;
  v6.super_class = ObjectType;
  v4 = a1;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_1000977A8(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  sub_100010F2C(a1 + qword_10080C490, &qword_10082AF10);

  swift_release();
  return sub_100010F2C(a1 + qword_100864C18, &qword_1008131E0);
}

uint64_t sub_1000978B4()
{
  return 2;
}

uint64_t sub_1000978BC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_10080C448);
}

void sub_1000978CC(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  char v8;
  char v9;
  id v10;
  id v11;

  v2 = v1;
  v4 = *(_BYTE **)&v1[qword_10080C470];
  if (v4)
  {
    v4[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_isCardModeEnabled] = v1[qword_100864BF0];
    v5 = v4;
    sub_1002AFB34((uint64_t)v5, v6);

  }
  v7 = *(void **)&v2[qword_10080C4A8];
  if (v7)
    objc_msgSend(v7, "setHidden:", v2[qword_100864BF0]);
  v8 = a1 & ~v2[qword_100864BF0];
  sub_100097A08();
  if ((v8 & 1) != 0 || (v9 & 1) != 0)
  {
    v2[qword_100864C08] = 1;
    v10 = objc_msgSend(v2, "viewIfLoaded");
    objc_msgSend(v10, "setNeedsLayout");

    v2[qword_10080C440] = 1;
    v11 = objc_msgSend(v2, "viewIfLoaded");
    objc_msgSend(v11, "setNeedsLayout");

  }
}

void sub_100097A08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  id v24;
  double v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  double v36;
  id v37;
  void *v38;
  id v39;
  void **v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;

  v1 = v0;
  v2 = qword_10080C470;
  v3 = *(void **)&v1[qword_10080C470];
  if (v3)
  {
    v4 = objc_msgSend(v3, "view");
    if (v4)
    {
      v5 = v4;
      if ((v1[qword_100864BF0] & 1) == 0)
      {
        v6 = *(_QWORD *)&v1[v2];
        if (v6)
        {
          v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell);
          v8 = type metadata accessor for ListTodayCardCollectionViewCell(0);
          if (swift_dynamicCastClass(v7, v8))
          {
            v9 = objc_msgSend(v5, "superview");
            v10 = objc_msgSend(v1, "collectionView");
            v11 = v10;
            if (v9)
            {
              if (v10)
              {
                sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
                v12 = v9;
                v13 = static NSObject.== infix(_:_:)(v12, v11);

                if ((v13 & 1) == 0)
                {
LABEL_28:
                  v31 = objc_opt_self(UIView);
                  v32 = swift_allocObject(&unk_10073B3E0, 32, 7);
                  *(_QWORD *)(v32 + 16) = v5;
                  *(_QWORD *)(v32 + 24) = v1;
                  v33 = swift_allocObject(&unk_10073B408, 32, 7);
                  *(_QWORD *)(v33 + 16) = sub_10009E89C;
                  *(_QWORD *)(v33 + 24) = v32;
                  v44 = sub_10009F7F4;
                  v45 = v33;
                  v40 = _NSConcreteStackBlock;
                  v41 = 1107296256;
                  v42 = sub_100184A1C;
                  v43 = &unk_10073B420;
                  v34 = _Block_copy(&v40);
                  v35 = v1;
                  swift_retain(v33);
                  v24 = v5;
                  objc_msgSend((id)v31, "performWithoutAnimation:", v34, swift_release().n128_f64[0]);
                  _Block_release(v34);
                  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v33, "", 116, 598, 44, 1);
                  *(_QWORD *)&v36 = swift_release().n128_u64[0];
                  if ((v31 & 1) == 0)
                  {
                    v37 = objc_msgSend(v35, "collectionView", v36);
                    if (v37)
                    {
                      v38 = v37;
                      objc_msgSend(v37, "insertSubview:atIndex:", v24, 0);

                      if (objc_msgSend(v24, "effectiveUserInterfaceLayoutDirection") == (id)1)
                      {
                        v39 = objc_msgSend(v24, "layer");
                        objc_msgSend(v39, "setFlipsHorizontalAxis:", 1);
                        swift_release();

                        return;
                      }
                      goto LABEL_32;
                    }
                    goto LABEL_38;
                  }
                  goto LABEL_35;
                }
LABEL_16:

                return;
              }
              v11 = v9;
            }
            else if (!v10)
            {
              goto LABEL_16;
            }

            goto LABEL_28;
          }
        }
      }
      v14 = objc_msgSend(v5, "superview");
      v15 = objc_msgSend(v1, "view");
      v16 = v15;
      if (v14)
      {
        if (v15)
        {
          sub_100018B6C(0, (unint64_t *)&qword_10080B7F0, UIView_ptr);
          v17 = v14;
          v18 = static NSObject.== infix(_:_:)(v17, v16);

          if ((v18 & 1) != 0)
            goto LABEL_16;
LABEL_19:
          v19 = objc_opt_self(UIView);
          v20 = swift_allocObject(&unk_10073B368, 32, 7);
          *(_QWORD *)(v20 + 16) = v5;
          *(_QWORD *)(v20 + 24) = v1;
          v21 = swift_allocObject(&unk_10073B390, 32, 7);
          *(_QWORD *)(v21 + 16) = sub_10009E84C;
          *(_QWORD *)(v21 + 24) = v20;
          v44 = sub_100036D9C;
          v45 = v21;
          v40 = _NSConcreteStackBlock;
          v41 = 1107296256;
          v42 = sub_100184A1C;
          v43 = &unk_10073B3A8;
          v22 = _Block_copy(&v40);
          v23 = v1;
          v24 = v5;
          swift_retain(v21);
          objc_msgSend((id)v19, "performWithoutAnimation:", v22, swift_release().n128_f64[0]);
          _Block_release(v22);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v21, "", 116, 611, 44, 1);
          *(_QWORD *)&v25 = swift_release().n128_u64[0];
          if ((v19 & 1) == 0)
          {
            v26 = objc_msgSend(v23, "view", v25);
            if (v26)
            {
              v27 = v26;
              v28 = objc_msgSend(v23, "collectionView");
              if (v28)
              {
                v29 = v28;
                objc_msgSend(v27, "insertSubview:aboveSubview:", v24, v28);

                if (objc_msgSend(v24, "effectiveUserInterfaceLayoutDirection") == (id)1)
                {
                  v30 = objc_msgSend(v24, "layer");
                  objc_msgSend(v30, "setFlipsHorizontalAxis:", 0);
                  swift_release();

LABEL_33:
                  return;
                }
LABEL_32:
                swift_release();
                goto LABEL_33;
              }
              goto LABEL_37;
            }
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return;
          }
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v16 = v14;
      }
      else if (!v15)
      {
        goto LABEL_16;
      }

      goto LABEL_19;
    }
  }
}

void sub_100097F5C(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v22[4];
  char v23;

  v3 = OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController;
  v4 = *(void **)&v1[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController];
  v5 = v4;
  v6 = a1;
  static ViewControllerContainment.remove(_:)(v4);

  v7 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v21 = v6;

  v8 = *(void **)&v1[v3];
  v9 = v8;
  sub_1000980A0();
  v22[0] = v10;
  v22[1] = v11;
  v22[2] = v12;
  v22[3] = v13;
  v23 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v8, v1, v22);

  v14 = *(_QWORD *)&v1[v3];
  if (v14
    && (v15 = type metadata accessor for JULoadingViewController(0), swift_dynamicCastClass(v14, v15))
    && (v16 = *(void **)&v1[qword_10080C470]) != 0
    && (v17 = objc_msgSend(v16, "viewIfLoaded")) != 0)
  {
    v18 = v17;
    v19 = objc_msgSend(v1, "view");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "bringSubviewToFront:", v18);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {

  }
}

void sub_1000980A0()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  void *v11;

  v1 = v0;
  v2 = *(void **)&v0[qword_10080C470];
  if (v2
    && (v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_overlayViewController]) != 0
    && (v4 = type metadata accessor for JULoadingViewController(0), swift_dynamicCastClass(v3, v4)))
  {
    v5 = v2;
    v6 = objc_msgSend(v1, "view");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "bounds");
      v9 = v8;

      sub_1002AF5C0(v9);
      return;
    }
  }
  else
  {
    v10 = objc_msgSend(v1, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "bounds");

      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1000981D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v2 = type metadata accessor for Feature.iOS(0);
  v15[3] = v2;
  v15[4] = sub_10000E720((unint64_t *)&qword_10080CC50, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v3 = sub_1000119C0(v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, enum case for Feature.iOS.today_tab_largest_ax_support(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v15);
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
  if ((v2 & 1) == 0)
  {
    v4 = objc_msgSend(v1, "view");
    if (!v4)
    {
LABEL_13:
      __break(1u);
      return;
    }
    v5 = v4;
    objc_msgSend(v4, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);

  }
  v6 = objc_msgSend(v1, "view");
  if (!v6)
    goto LABEL_11;
  v7 = v6;
  v8 = type metadata accessor for InsetCollectionViewControllerContentView();
  v9 = swift_dynamicCastClass(v7, v8);
  if (!v9)
  {

LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_BYTE *)(v9
           + OBJC_IVAR____TtC20ProductPageExtensionP33_6AB601F6024DE25A6D4830FED98485CA40InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = 0;

  v10 = *(void **)&v1[qword_100864C10];
  objc_msgSend(v10, "addTarget:action:forControlEvents:", v1, "dismissAnimated", 64);
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v12 = v11;
  objc_msgSend(v11, "addSubview:", v10);

  v13 = type metadata accessor for ArticleLinkLoaderScrollObserver();
  swift_allocObject(v13, 40, 7);
  v14 = sub_10045B640();
  sub_10009F260(v14, &qword_10080C478, &qword_10080CC58, (uint64_t (*)(uint64_t))type metadata accessor for ArticleLinkLoaderScrollObserver, (uint64_t)&unk_100663450);
  swift_release();
  if (*(_QWORD *)&v1[qword_10080C470])
    sub_100097A08();
}

void sub_1000983E4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000981D8();

}

void sub_100098418(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  _BYTE *v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend(v1, "collectionView");
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "panGestureRecognizer");

  objc_msgSend(v4, "addGestureRecognizer:", v7);
  v8 = objc_msgSend(v1, "navigationController");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setNavigationBarHidden:animated:", 1, 0);

  }
  v10 = swift_allocObject(&unk_10073B7A0, 24, 7);
  *(_QWORD *)(v10 + 16) = v1;
  v11 = v1;
  sub_10009E8D4(sub_10009F7D4, v10, static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:), 0, v11, v11);
  swift_release();
}

void sub_100098568(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100098418(a3);

}

void sub_1000985A8(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewDidAppear:", a3);
  v4[qword_10080C440] = 1;
  v5 = objc_msgSend(v4, "viewIfLoaded", v6.receiver, v6.super_class);
  objc_msgSend(v5, "setNeedsLayout");

}

void sub_100098640(char a1)
{
  void *v1;
  id v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v21;
  void *v22;
  uint64_t v23;
  objc_super v24;

  v24.receiver = v1;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, "viewWillDisappear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (!v3)
    goto LABEL_13;
  v5 = v3;
  v6 = objc_msgSend(v3, "viewControllers");

  v7 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v11 = v8;
    else
      v11 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v8);
    if (v12)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v8).n128_u64[0];
LABEL_13:
    v10 = 0;
    goto LABEL_14;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v9 = *(_QWORD *)(v8 + 32);
  }
  *(_QWORD *)&v4 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v10 = v9 == (_QWORD)v1;
LABEL_14:
  v13 = objc_msgSend(v1, "navigationController", v4);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "viewControllers");

    v16 = sub_100018B6C(0, (unint64_t *)&qword_1008081A0, UIViewController_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v23 = v17;
      else
        v23 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v18 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
    if (v18 > 1 && v10)
    {
      v21 = objc_msgSend(v1, "navigationController", v19);
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, "setNavigationBarHidden:animated:", 0, 0);

      }
    }
  }
}

void sub_100098878(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100098640(a3);

}

void sub_1000988B8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType();
  v6 = a3;
  swift_unknownObjectRetain(a4);
  v7 = v12.receiver;
  objc_msgSendSuper2(&v12, "willTransitionToTraitCollection:withTransitionCoordinator:", v6, a4);
  v8 = swift_allocObject(&unk_10073B750, 24, 7);
  *(_QWORD *)(v8 + 16) = v7;
  v11[4] = sub_10009F7B4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1005F3AC0;
  v11[3] = &unk_10073B768;
  v9 = _Block_copy(v11);
  v10 = v7;
  objc_msgSend(a4, "animateAlongsideTransition:completion:", v9, 0, swift_release().n128_f64[0]);
  _Block_release(v9);

  swift_unknownObjectRelease();
}

void sub_1000989D0(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];
  objc_super v11;

  v11.receiver = v3;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v7 = swift_allocObject(&unk_10073B700, 24, 7);
    *(_QWORD *)(v7 + 16) = v3;
    v10[4] = sub_10009F7AC;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1005F3AC0;
    v10[3] = &unk_10073B718;
    v8 = _Block_copy(v10);
    v9 = v3;
    objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v8, swift_release().n128_f64[0]);
    _Block_release(v8);
  }
}

void sub_100098AD4(int a1, _BYTE *a2)
{
  id v3;
  id v4;

  a2[qword_100864C08] = 1;
  v3 = objc_msgSend(a2, "viewIfLoaded");
  objc_msgSend(v3, "setNeedsLayout");

  a2[qword_10080C440] = 1;
  v4 = objc_msgSend(a2, "viewIfLoaded");
  objc_msgSend(v4, "setNeedsLayout");

  sub_100098B70();
}

void sub_100098B70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  CGRect v22;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ArticleDiffablePagePresenter.footerVisibilitySectionThreshold.getter(v4);
  if ((v8 & 1) == 0)
  {
    v9 = v7;
    v10 = objc_msgSend(v1, "collectionView");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "numberOfSections");

      if (v9 >= (uint64_t)v12)
        return;
    }
    else if ((v9 & 0x8000000000000000) == 0)
    {
      return;
    }
    v13 = objc_msgSend(v1, "collectionView");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, "collectionViewLayout");

      IndexPath.init(item:section:)(0, v9);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v17 = objc_msgSend(v15, "layoutAttributesForItemAtIndexPath:", isa);

      if (v17)
      {
        v18 = *(_QWORD *)&v1[qword_10080C4B0];
        if (v18)
        {
          objc_msgSend(v15, "collectionViewContentSize", swift_retain(*(_QWORD *)&v1[qword_10080C4B0]).n128_f64[0]);
          v20 = v19;
          objc_msgSend(v17, "frame");
          *(double *)(v18 + 48) = v20 - CGRectGetMinY(v22);
          sub_10043D284(1);
          swift_release();
        }

      }
      else
      {
        v17 = v15;
      }

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100098D40(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1000989D0(a5, a2, a3);
  swift_unknownObjectRelease();

}

void sub_100098DAC(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  objc_super v11;

  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  objc_msgSend(v3, "bringSubviewToFront:", *(_QWORD *)&v2[qword_100864C10]);

  v5 = *(void **)&v2[qword_10080C4A8];
  if (!v5)
    return;
  v6 = v5;
  v7 = objc_msgSend(v2, "view");
  if (!v7)
    goto LABEL_8;
  v8 = v7;
  v9 = objc_msgSend(v2, "collectionView");
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v10 = v9;
  objc_msgSend(v8, "insertSubview:aboveSubview:", v6, v9);

}

void sub_100098EB0(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = a1;
  sub_100098DAC((uint64_t)v2, v1);

}

void sub_100098EE4()
{
  char *v0;
  _BYTE *v1;
  id v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  void *v7;
  uint64_t ObjectType;
  void *v9;
  void (**v10)(uint64_t, id, double);
  char v11;
  id v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  double v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  double v46;
  double v47;
  id v48;
  void *v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  double v59;
  double v60;
  double *v61;
  void *v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  void *v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  uint64_t v96;
  void *v97;
  id v98;
  void *v99;
  double Width;
  void *v101;
  double v102;
  id v103;
  void *v104;
  double v105;
  CGFloat v106;
  double v107;
  CGFloat v108;
  double v109;
  CGFloat v110;
  double v111;
  void *v112;
  id v113;
  id v114;
  id v115;
  double v116;
  CGFloat v117;
  double v118;
  double v119;
  CGFloat v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  id v126;
  id v127;
  double v128;
  double v129;
  CGFloat v130;
  double v131;
  double v132;
  CGFloat recta;
  _QWORD aBlock[6];
  objc_super v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;

  v1 = v0;
  v135.receiver = v0;
  v135.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v135, "viewDidLayoutSubviews");
  if (v0[qword_10080C440] == 1)
  {
    v0[qword_10080C440] = 0;
    sub_1000996BC();
  }
  v2 = objc_msgSend(v0, "pageMarginInsets");
  v4 = qword_10080C470;
  v5 = *(_QWORD *)&v0[qword_10080C470];
  if (v5)
  {
    v6 = v3;
    v7 = *(void **)(v5 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell);
    ObjectType = swift_getObjectType();
    v2 = (id)swift_conformsToProtocol2(ObjectType, &protocol descriptor for InsettableVideoViewProviding);
    v9 = v2 ? v7 : 0;
    v10 = v2 ? (void (**)(uint64_t, id, double))v2 : 0;
    if (v9)
    {
      v11 = v1[qword_100864BF0];
      v12 = v7;
      v13 = 0.0;
      if ((v11 & 1) == 0)
      {
        v14 = objc_msgSend(v1, "view");
        if (!v14)
        {
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        v15 = v14;
        objc_msgSend(v14, "safeAreaInsets");
        v17 = v16;

        v13 = v17 - v6;
      }
      v18 = swift_getObjectType();
      v10[3](v18, v10, v13);

    }
  }
  v19 = sub_1000B0B34(v2);
  objc_msgSend(v1, "pageMarginInsets");
  v21 = v20;
  objc_msgSend(v1, "pageMarginInsets");
  v23 = v22;
  objc_msgSend(v1, "pageMarginInsets");
  v25 = v24;
  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
    __break(1u);
    goto LABEL_56;
  }
  v27 = v26;
  v132 = v23;
  objc_msgSend(v26, "bounds");
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v36 = *(void **)&v1[qword_100864C10];
  objc_msgSend(v36, "sizeThatFits:", v33, v35);
  v37 = *(_QWORD *)&v1[v4];
  if (v37
    && (v38 = *(void **)(v37 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell),
        v39 = type metadata accessor for ListTodayCardCollectionViewCell(0),
        swift_dynamicCastClass(v38, v39)))
  {
    v40 = v38;
    objc_msgSend(sub_100476C64(), "frame");
    CGRectGetMaxX(v136);

  }
  else
  {
    v137.origin.x = v29;
    v137.origin.y = v31;
    v137.size.width = v33;
    v137.size.height = v35;
    CGRectGetMaxX(v137);
  }
  v138.origin.x = v29;
  v138.origin.y = v31;
  v138.size.width = v33;
  v138.size.height = v35;
  CGRectGetMinY(v138);
  v130 = v31;
  v131 = v29;
  v128 = v35;
  v129 = v33;
  CGRect.withLayoutDirection(in:relativeTo:)(v1, v29);
  objc_msgSend(v36, "setFrame:");
  dispatch thunk of Button.touchOutsideMargin.setter(v19, v21, v132, v25);
  v42 = qword_100864BF0;
  if (v1[qword_100864BF0] == 1)
  {
    v43 = *(void **)&v1[v4];
    if (!v43)
      goto LABEL_42;
    v44 = objc_msgSend(v43, "view");
    if (!v44)
    {
LABEL_29:
      if ((v1[v42] & 1) != 0)
        goto LABEL_42;
      goto LABEL_30;
    }
    v45 = v44;
    objc_msgSend(v44, "frame");
    v47 = v46;
    v48 = objc_msgSend(v1, "view");
    v49 = v48;
    if (v47 >= 0.0)
    {
      if (v48)
      {
        objc_msgSend(v48, "bounds");
        v51 = v70;
        v65 = v71;
        v67 = v72;
        v69 = v73;

        goto LABEL_28;
      }
LABEL_58:
      __break(1u);
      return;
    }
    if (v48)
    {
      objc_msgSend(v48, "bounds");
      v51 = v50;
      v53 = v52;
      v55 = v54;
      v57 = v56;

      v58 = (void *)objc_opt_self(UIView);
      objc_msgSend(v58, "inheritedAnimationDuration");
      v60 = v59 * 0.8;
      v61 = (double *)swift_allocObject(&unk_10073B6B0, 56, 7);
      *((_QWORD *)v61 + 2) = v45;
      v61[3] = v51;
      *((_QWORD *)v61 + 4) = v53;
      *((_QWORD *)v61 + 5) = v55;
      *((_QWORD *)v61 + 6) = v57;
      aBlock[4] = sub_10009F79C;
      aBlock[5] = v61;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000924A0;
      aBlock[3] = &unk_10073B6C8;
      v62 = _Block_copy(aBlock);
      v63 = v45;
      swift_release();
      objc_msgSend(v58, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 612, v62, 0, v60, 0.0, 0.92, 0.0);
      _Block_release(v62);
      objc_msgSend(v63, "frame");
      objc_msgSend(v63, "setFrame:");
      objc_msgSend(v63, "frame");
      v65 = v64;
      v67 = v66;
      v69 = v68;
LABEL_28:
      objc_msgSend(v45, "setFrame:", v51, v65, v67, v69);

      goto LABEL_29;
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_30:
  v74 = *(_QWORD *)&v1[qword_10080C480];
  if (v74)
  {
    v75 = *(void **)(v74 + 24);
    objc_msgSend(v75, "_systemContentInset", swift_retain(*(_QWORD *)&v1[qword_10080C480]).n128_f64[0]);
    v77 = v76;
    v79 = v78;
    objc_msgSend(v75, "contentOffset");
    v81 = v80;
    v83 = v82;
    objc_msgSend(v75, "contentInset");
    v85 = v79 + v81 + v84;
    v87 = v77 + v83 + v86;
    objc_msgSend(v75, "bounds");
    v89 = sub_10043447C(v85, v87, v88);
    v91 = v90;
    v93 = v92;
    v95 = v94;
    *(_QWORD *)&v41 = swift_release().n128_u64[0];
  }
  else
  {
    v93 = 0.0;
    v95 = 0.0;
    v89 = 0.0;
    v91 = 0.0;
  }
  v96 = qword_100864C08;
  if ((v1[qword_100864C08] & 1) != 0)
    goto LABEL_34;
  v139.origin.x = v89;
  v139.origin.y = v91;
  v139.size.width = v93;
  v139.size.height = v95;
  Width = CGRectGetWidth(v139);
  v101 = *(void **)&v1[v4];
  if (!v101)
  {
LABEL_41:
    sub_100099AB0(v89, v91, v93, v95);
    v1[v96] = 0;
    goto LABEL_42;
  }
  v102 = Width;
  v103 = objc_msgSend(v101, "view");
  if (!v103)
    goto LABEL_34;
  v104 = v103;
  objc_msgSend(v103, "frame");
  v106 = v105;
  v108 = v107;
  v110 = v109;
  recta = v111;

  v140.origin.x = v106;
  v140.origin.y = v108;
  v140.size.width = v110;
  v140.size.height = recta;
  v41 = CGRectGetWidth(v140);
  if (v102 != v41)
  {
LABEL_34:
    v97 = *(void **)&v1[v4];
    if (v97)
    {
      v98 = objc_msgSend(v97, "view", v41);
      if (v98)
      {
        v99 = v98;
        objc_msgSend(v98, "setFrame:", v89, v91, v93, v95);

      }
    }
    goto LABEL_41;
  }
LABEL_42:
  v112 = *(void **)&v1[qword_10080C4A8];
  if (!v112)
    return;
  v113 = v112;
  v114 = objc_msgSend(v1, "traitCollection");
  if (objc_msgSend(v114, "userInterfaceIdiom") == (id)1)
  {
    v115 = objc_msgSend(v114, "horizontalSizeClass");

    v117 = v130;
    v116 = v131;
    v119 = v128;
    v118 = v129;
    if (v115 == (id)2)
    {
      v120 = 80.0;
      goto LABEL_48;
    }
  }
  else
  {

    v117 = v130;
    v116 = v131;
    v119 = v128;
    v118 = v129;
  }
  v120 = 8.0;
LABEL_48:
  v141 = CGRectInset(*(CGRect *)&v116, v120, 0.0);
  v121 = sub_1003D1960(v141.size.width, v141.size.height);
  v123 = v122;
  objc_msgSend(v113, "frame");
  if (v121 != v125 || v123 != v124)
  {
    v126 = v113;
    objc_msgSend(v126, "frame");
    objc_msgSend(v126, "setFrame:", v120);

    v127 = v126;
    objc_msgSend(v127, "frame");
    objc_msgSend(v127, "setFrame:");

  }
  if (*(_QWORD *)&v1[qword_10080C4B0])
  {
    swift_retain(*(_QWORD *)&v1[qword_10080C4B0]);
    sub_10043D284(1);
    swift_release();
  }

}

void sub_1000996BC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t (**v11)();
  void *v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double Height;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  CGRect v80;

  v1 = v0;
  v2 = objc_msgSend(v0, "collectionView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "contentInset");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v11 = off_10080C000;
    if (v0[qword_100864BF0] == 1 && (v12 = *(void **)&v0[qword_10080C470]) != 0)
    {
      v13 = v12;
      v14 = objc_msgSend(v1, "view");
      if (!v14)
      {
        __break(1u);
        return;
      }
      v15 = v14;
      objc_msgSend(v14, "bounds");
      v17 = v16;

      sub_1002AF5C0(v17);
      Height = v18;

    }
    else
    {
      v20 = *(_QWORD *)&v0[qword_10080C480];
      if (v20)
      {
        v21 = *(void **)(v20 + 24);
        objc_msgSend(v21, "_systemContentInset", swift_retain(*(_QWORD *)&v0[qword_10080C480]).n128_f64[0]);
        v23 = v22;
        v25 = v24;
        objc_msgSend(v21, "contentOffset");
        v27 = v26;
        v29 = v28;
        objc_msgSend(v21, "contentInset");
        v31 = v25 + v27 + v30;
        v33 = v23 + v29 + v32;
        objc_msgSend(v21, "bounds");
        v80.origin.x = sub_10043447C(v31, v33, v34);
        Height = CGRectGetHeight(v80);
        v35 = *(void **)&v0[qword_10080C470];
        if (v35)
        {
          v36 = objc_msgSend(v35, "view");
          if (v36)
          {
            v37 = v36;
            objc_msgSend(v21, "_systemContentInset");
            v39 = v38;
            v41 = v40;
            objc_msgSend(v21, "contentOffset");
            v43 = v42;
            v45 = v44;
            objc_msgSend(v21, "contentInset");
            v47 = v41 + v43 + v46;
            v49 = v39 + v45 + v48;
            objc_msgSend(v21, "bounds");
            objc_msgSend(v37, "setFrame:", sub_10043447C(v47, v49, v50));

          }
        }
        v51 = *(void **)(v20 + 24);
        objc_msgSend(v51, "_systemContentInset");
        v53 = v52;
        v55 = v54;
        objc_msgSend(v51, "contentOffset");
        v57 = v56;
        v59 = v58;
        objc_msgSend(v51, "contentInset");
        v61 = v55 + v57 + v60;
        v63 = v53 + v59 + v62;
        objc_msgSend(v51, "bounds");
        v65 = sub_10043447C(v61, v63, v64);
        sub_100099AB0(v65, v66, v67, v68);
        swift_release();
        v10 = 0.0;
        v8 = 0.0;
        v6 = 0.0;
        v11 = off_10080C000;
      }
      else
      {
        Height = v4;
      }
    }
    objc_msgSend(v3, "contentOffset");
    v70 = v69;
    v72 = v71;
    objc_msgSend(v3, "setContentInset:", Height, v6, v8, v10);
    objc_msgSend(v3, "setContentOffset:", v70, v72);
    v73 = *(_QWORD *)((char *)v11[142] + (_QWORD)v1);
    v74 = Height;
    if (v73)
    {
      v75 = *(_QWORD *)(v73 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell);
      v76 = type metadata accessor for LegacyListTodayCardCollectionViewCell(0);
      if (swift_dynamicCastClass(v75, v76)
        || (v77 = type metadata accessor for ListTodayCardCollectionViewCell(0),
            v78 = swift_dynamicCastClass(v75, v77),
            v74 = Height,
            v78))
      {
        v74 = 0.0;
      }
    }
    objc_msgSend(v3, "setScrollIndicatorInsets:", v74, 0.0, v8, 0.0);
    v79 = v3;
    objc_msgSend(v79, "contentOffset");
    objc_msgSend(v79, "setContentOffset:");

  }
}

void sub_100099AB0(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  id v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  _QWORD v48[5];

  v5 = v4;
  v47 = type metadata accessor for ImpressionMetrics.ID(0);
  v10 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v12 = (char *)&v48[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v48[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)&v4[qword_10080C488];
  v22 = v21;
  if (v21 || (v22 = ArticleDiffablePagePresenter.todayCard.getter(v18)) != 0)
  {
    v23 = swift_retain(v21);
    TodayCard.impressionMetrics.getter(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      swift_release();
      sub_100010F2C((uint64_t)v15, &qword_1008131E0);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    v24 = objc_msgSend(v4, "collectionView");
    if (v24)
    {
      v25 = v24;
      TimedMetricsPagePresenter.impressionsCalculator.getter(v24);
      v26 = objc_msgSend(v4, "view");
      if (!v26)
      {
        __break(1u);
        return;
      }
      v27 = v26;
      objc_msgSend(v26, "convertRect:toCoordinateSpace:", v25, a1, a2, a3, a4);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      v35 = v34;

      ImpressionsCalculator.addElement(_:at:)(v20, v29, v31, v33, v35);
      ImpressionMetrics.id.getter(v36);
      v37 = ImpressionsCalculator.childCalculator(for:)(v12);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v47);
      if (v37)
      {
        v38 = *(_QWORD *)&v5[qword_10080C470];
        if (v38)
        {
          v39 = v38 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
          v40 = *(void **)v39;
          v41 = *(_QWORD *)(v39 + 8);
          ObjectType = swift_getObjectType();
          v48[3] = type metadata accessor for TodayCard(0);
          v48[4] = sub_10000E720((unint64_t *)&qword_10081F6D0, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
          v48[0] = v22;
          v43 = *(_QWORD *)(v41 + 40);
          v44 = v40;
          v45 = swift_retain(v22);
          dispatch thunk of NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(v48, v37, ObjectType, v43, v45);

          swift_release();
          swift_release();

          v46 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v20, v16, v46);
          _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v48);
          return;
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
        swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      }
      swift_release();

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    }
    swift_release();
  }
}

void sub_100099E48(void *a1)
{
  id v1;

  v1 = a1;
  sub_100098EE4();

}

void sub_100099E7C(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  int v12;
  uint64_t v13;
  char v14;
  id v15;
  double v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD aBlock[6];
  char v36;
  objc_super v37;

  v2 = v1;
  v37.receiver = v1;
  v37.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v37, "traitCollectionDidChange:", a1);
  v1[qword_10080C440] = 1;
  v4 = objc_msgSend(v1, "viewIfLoaded");
  objc_msgSend(v4, "setNeedsLayout");

  v5 = *(_QWORD *)&v2[qword_10080C460];
  if (v5)
  {
    v6 = objc_msgSend(v2, "traitCollection", swift_retain(*(_QWORD *)&v2[qword_10080C460]).n128_f64[0]);
    v7 = OBJC_IVAR____TtC20ProductPageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection;
    v8 = *(void **)(v5 + OBJC_IVAR____TtC20ProductPageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC20ProductPageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection) = v6;
    v9 = v6;
    v10 = objc_msgSend(v9, "userInterfaceStyle");
    if (v10 == objc_msgSend(v8, "userInterfaceStyle"))
    {
      v11 = *(id *)(v5 + v7);
      v12 = UITraitCollection.prefersAccessibilityLayouts.getter(v11);

      if (((v12 ^ UITraitCollection.prefersAccessibilityLayouts.getter(v13)) & 1) == 0)
      {
        swift_release();

        if (!a1)
          return;
        goto LABEL_9;
      }
    }
    v14 = *(_BYTE *)(v5 + 24);
    v15 = *(id *)(v5 + v7);
    v16 = static CGFloat.solvedValue(between:and:forInput:)(0.2, 0.1, 0.0);
    v17 = sub_10000DAF8(&qword_10080CB48);
    AccessibilityConditional.value(with:)(&v36, v15, v17);
    if ((v14 & 1) != 0)
    {
      v18 = 0;
      v36 = 0;
    }
    else
    {
      v18 = v36;
    }
    v19 = *(void **)(v5 + 16);
    v20 = (void *)objc_opt_self(UIView);
    v21 = swift_allocObject(&unk_10073B660, 25, 7);
    *(_QWORD *)(v21 + 16) = v19;
    *(_BYTE *)(v21 + 24) = v18;
    aBlock[4] = sub_10009F76C;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000924A0;
    aBlock[3] = &unk_10073B678;
    v22 = _Block_copy(aBlock);
    v23 = v19;
    swift_release();
    objc_msgSend(v20, "animateWithDuration:delay:options:animations:completion:", 4, v22, 0, v16, 0.0);
    _Block_release(v22);
    swift_release();

  }
  if (!a1)
    return;
LABEL_9:
  v24 = a1;
  if (objc_msgSend(v24, "horizontalSizeClass")
    && (v25 = objc_msgSend(v2, "traitCollection"),
        v26 = objc_msgSend(v25, "horizontalSizeClass"),
        v25,
        v26 != objc_msgSend(v24, "horizontalSizeClass"))
    && ((v28 = *(_QWORD *)&v2[qword_10080C488], (v29 = v28) != 0)
     || (v29 = ArticleDiffablePagePresenter.todayCard.getter(v27)) != 0))
  {
    v30 = *(_QWORD *)&v2[qword_10080C470];
    if (v30)
    {
      v31 = v30 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell;
      v33 = *(void **)v31;
      v32 = *(_QWORD *)(v31 + 8);
      swift_retain(v28);
      v34 = v33;
      sub_10009A214(v29, v34, v32, 5u);

      swift_release();
    }
    else
    {
      swift_retain(v28);

      swift_release();
    }
  }
  else
  {

  }
}

uint64_t sub_10009A214(uint64_t a1, void *a2, uint64_t a3, unsigned int a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  __n128 v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  _QWORD v43[5];

  v5 = v4;
  v42 = a4;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PageGrid(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)&v5[qword_10080C470];
  v41 = v17;
  if (v16)
  {
    type metadata accessor for ArticleHeaderViewController();
    v18 = v16;
    sub_1002AF794(v18, v19);

  }
  else
  {
    v40 = v9;
    type metadata accessor for ArticleHeaderViewController();
    v21 = sub_1002AF794(v5, v20);
    v22 = Logger.init()(v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      v39 = v13;
      v26 = v25;
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v24, "ArticleDiffablePageViewController: header page grid derived from self unexpected", v25, 2u);
      v27 = v26;
      v13 = v39;
      swift_slowDealloc(v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v40);
  }
  v28 = v42;
  if (v42 == 7)
  {
    v29 = type metadata accessor for ArticleHeaderViewController();
    v30 = objc_msgSend(v5, "traitCollection");
    ObjectType = swift_getObjectType();
    v28 = sub_1002B0950((uint64_t)a2, v30, v29, ObjectType, a3);

  }
  v32 = swift_getObjectType();
  (*(void (**)(BOOL, uint64_t, uint64_t))(a3 + 96))((v5[qword_100864BF0] & 1) == 0, v32, a3);
  v33 = *(_QWORD *)&v5[OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph];
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(a3 + 264))(a1, v28, v15, v33, v32, a3);
  sub_10009B884(a1, a2, a3, (uint64_t)v15, v42);
  v43[3] = type metadata accessor for TodayCard(0);
  v43[4] = &protocol witness table for TodayCard;
  v43[0] = a1;
  v34 = *(_QWORD *)&v5[qword_100866500];
  v35 = *(_QWORD *)(a3 + 16);
  v36 = swift_retain(a1);
  dispatch thunk of CellWithManagedArtwork.fetch(for:on:asPartOf:)(v43, v34, v33, v32, v35, v36);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v13);
  return _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v43);
}

void sub_10009A50C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_100099E7C(a3);

}

uint64_t sub_10009A564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DAF8(&qword_10080CBB8);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  __chkstk_darwin(v3);
  v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DAF8(&qword_10080CBC0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DAF8(&qword_10080CBC8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1005B7738();
  ArticleDiffablePagePresenter.onPrepareToDisplayTodayCard.getter(v12);
  v13 = sub_10000DAF8(&qword_10080CBD0);
  v14 = sub_100010E80(&qword_10080CBD8, &qword_10080CBD0, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v28, v13, v14);
  EventEmitter.addObserver<A>(on:target:method:)(v28, v1, sub_10009A928, 0, v13, ObjectType, v14);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  ArticleDiffablePagePresenter.onShowFooterLockup.getter(v15);
  v16 = sub_10000DAF8(&qword_10080CBE0);
  v17 = sub_100010E80(&qword_10080CBE8, &qword_10080CBE0, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v28, v16, v17);
  EventEmitter.addObserver<A>(on:target:method:)(v28, v1, sub_10009AC04, 0, v16, ObjectType, v17);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  ArticleDiffablePagePresenter.onPrefetchLinkPresentations.getter(v18);
  v19 = sub_10000DAF8(&qword_10080CBF0);
  v20 = sub_100010E80(&qword_10080CBF8, &qword_10080CBF0, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v28, v19, v20);
  v21 = v25;
  EventEmitter.addObserver<A>(on:target:method:)(v28, v1, sub_10009AEA0, 0, v19, ObjectType, v20);
  swift_release();
  _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v28);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v21, v27);
}

void sub_10009A854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v10;

  v2 = v1;
  sub_10009B5CC();
  v4 = qword_10080C488;
  v5 = *(_QWORD *)(v1 + qword_10080C488);
  v6 = swift_retain(v5);
  v7 = ArticleDiffablePagePresenter.todayCard.getter(v6);
  v8 = sub_10009EA84(v5, v7);
  swift_release();
  swift_release();
  v9 = *(_QWORD *)(v1 + v4);
  if ((v8 & 1) != 0 || !v9)
  {
    *(_QWORD *)(v2 + qword_10080C468) = a1;
    swift_release();
    v10 = *(unsigned __int8 *)(v2 + qword_100864C00);
    swift_retain(a1);
    if (v10 != 1 || v9 == 0)
      sub_10009CAA0();
  }
}

uint64_t (*sub_10009A928(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_10073B610, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_10073B638, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10009F704;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_10009F724;
}

uint64_t sub_10009A9A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  _BYTE v29[24];

  v2 = v1;
  v4 = sub_10000DAF8(&qword_1008131E0);
  v5 = __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for ArticleDiffablePagePresenter.FooterLockup(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)&v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10009C31C();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for ArticleDiffablePagePresenter.FooterLockup.standard(_:))
  {
    v13 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    v14 = *v11;
    v15 = *(void **)(v1 + qword_10080C4A8);
    if (v15)
    {
      v16 = *(_QWORD *)(v1 + qword_100866500);
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
      v18 = v15;
      sub_100289360(v14, v16, v17);

    }
    Lockup.impressionMetrics.getter(v13);
LABEL_11:
    swift_release();
    v26 = v2 + qword_100864C18;
    swift_beginAccess(v2 + qword_100864C18, v29, 33, 0);
    sub_1000393D8((uint64_t)v7, v26, &qword_1008131E0);
    return swift_endAccess(v29);
  }
  if (v12 == enum case for ArticleDiffablePagePresenter.FooterLockup.arcade(_:))
  {
    v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    v20 = *v11;
    v21 = *(void **)(v1 + qword_10080C4A8);
    if (v21)
    {
      v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
      v23 = v21;
      sub_1003D1AA8(1);
      v24 = *(void **)&v23[OBJC_IVAR____TtC20ProductPageExtension16FooterLockupView_arcadeLockupView];
      if (v24)
      {
        v25 = v24;
        sub_10056FB1C(v20, v22);
        objc_msgSend(v23, "setNeedsLayout");

        v23 = v25;
      }

    }
    ArcadeLockup.impressionMetrics.getter(v19);
    goto LABEL_11;
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t (*sub_10009AC04(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_10073B5E8, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_10009F6BC;
}

void sub_10009AC58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph)
                 + qword_10086B3C0);
  if (!v2)
    goto LABEL_17;
  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(*(_QWORD *)(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph)
                           + qword_10086B3C0));
    swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_4;
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v13 = a1;
  else
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_retain(v2);
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v4)
    goto LABEL_15;
LABEL_4:
  v5 = sub_100018B6C(0, (unint64_t *)&qword_1008094F0, OS_dispatch_queue_ptr);
  if (v4 < 1)
  {
    __break(1u);
LABEL_17:
    v14 = sub_10000DAF8((uint64_t *)&unk_10080CC00);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v14, v14);
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
      swift_retain(v8);
    }
    ++v7;
    v15[0] = v8;
    dispatch thunk of LinkLoader.fetchPresentation(for:cacheEnabled:)(v15, 0);
    v9 = swift_allocObject(&unk_10073B458, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = (_QWORD *)swift_allocObject(&unk_10073B4D0, 40, 7);
    v10[2] = v8;
    v10[3] = v9;
    v10[4] = v2;
    swift_retain_n(v8, 2);
    v11 = swift_retain(v2);
    v12 = static OS_dispatch_queue.main.getter(v11);
    v15[3] = v6;
    v15[4] = &protocol witness table for OS_dispatch_queue;
    v15[0] = v12;
    Promise.then(perform:orCatchError:on:)(sub_10009F548, v10, sub_10009F554, v8, v15);
    swift_release();
    swift_release();
    swift_release_n(v8, 2);
    _s20ProductPageExtension22AutoAdjustingPlaceableVwxx_0(v15);
  }
  while (v4 != v7);
  swift_release();
  swift_bridgeObjectRelease(a1);
}

uint64_t (*sub_10009AEA0(void *a1))(_QWORD *)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_10073B480, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_10073B4A8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10009F4D0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_10009F7F8;
}

unint64_t sub_10009AF18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for ArticlePageGridProvider;
  result = sub_10009F468();
  a1[4] = result;
  *a1 = v3;
  return result;
}

unint64_t sub_10009AF6C@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for ArticlePageShelfLayoutSpacingProvider;
  result = sub_10009F424();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_10009AF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph);
  v2 = sub_10000E720(&qword_10080CB98, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v3 = type metadata accessor for ArticlePageShelfSupplementaryProvider();
  v4 = swift_allocObject(v3, 40, 7);
  *(_QWORD *)(v4 + 32) = 0;
  v5 = swift_unknownObjectWeakInit(v4 + 24);
  *(_QWORD *)(v4 + 32) = v2;
  swift_unknownObjectWeakAssign(v5);
  *(_QWORD *)(v4 + 16) = v1;
  sub_10000E720(&qword_10080CBA0, (uint64_t (*)(uint64_t))type metadata accessor for ArticlePageShelfSupplementaryProvider, (uint64_t)&unk_100658410);
  swift_retain(v1);
  return v4;
}

void sub_10009B070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_10000DAF8(&qword_10080CB70);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006016EC(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  LODWORD(a1) = enum case for DiffablePagePresenter.UpdatePhase.completed<A>(_:);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 == (_DWORD)a1)
  {
    v8 = ArticleDiffablePagePresenter.shouldTerminateOnClose.getter(v7);
    sub_10009B158(v8 & 1);
    sub_10009B234();
  }
}

uint64_t sub_10009B158(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  id v6;
  void *v7;
  char **v8;
  char v9;

  v2 = *(unsigned __int8 *)(v1 + qword_10080C498);
  v3 = result & 1;
  *(_BYTE *)(v1 + qword_10080C498) = result;
  if (v2 != v3)
  {
    v4 = qword_10080C4A0;
    v5 = *(unsigned __int8 *)(v1 + qword_10080C4A0);
    *(_BYTE *)(v1 + qword_10080C4A0) = v3;
    if (v5 != v3)
    {
      v6 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
      v7 = v6;
      if (*(_BYTE *)(v1 + v4))
        v8 = &selRef_beginDelayingNotifications;
      else
        v8 = &selRef_endDelayingNotifications;
      objc_msgSend(v6, *v8);

    }
    v9 = ArticleDiffablePagePresenter.shouldTerminateOnClose.getter() & 1;
    return AsyncEvent.post(_:)(&v9);
  }
  return result;
}

void sub_10009B234()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  unint64_t v39;
  void *v40;
  id v41;
  void *v42;
  __n128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  id v48;
  char *v49;
  _OWORD v50[2];
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;

  v1 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v1);
  v49 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShareSheetData.Metadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = ArticleDiffablePagePresenter.shareAction.getter(v10);
  if (v13)
  {
    v14 = v13;
    v48 = v0;
    v15 = type metadata accessor for ShareSheetAction(0);
    v16 = swift_dynamicCastClass(v14, v15);
    if (v16)
    {
      ShareSheetAction.data.getter(v16);
      ShareSheetData.metadata.getter(v17);
      v18 = swift_release();
      if ((*(unsigned int (**)(uint64_t *, uint64_t, __n128))(v9 + 88))(v12, v8, v18) == enum case for ShareSheetData.Metadata.article(_:))
      {
        v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
        v20 = *v12;
        v21 = ShareSheetArticleMetadata.id.getter(v19);
        v47 = v22;
        v23 = ShareSheetArticleMetadata.text.getter(v21);
        v45 = v24;
        v46 = v23;
        v44 = v20;
        v25 = ShareSheetArticleMetadata.subtitle.getter(v23);
        v27 = v26;
        ShareSheetAction.data.getter(v25);
        ShareSheetData.url.getter();
        v28 = swift_release();
        v29 = URL.absoluteString.getter(v28);
        v31 = v30;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_1001B7BA8(v21, v47, v46, v45, v25, v27, v29, v31, (uint64_t *)&v52);
        v55 = v52;
        v32 = v53;
        v33 = v54;
        *(_QWORD *)&v50[0] = _swiftEmptyArrayStorage;
        sub_10009F390((uint64_t)&v55);
        v34 = sub_10000E720(&qword_10080CB78, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
        swift_retain(v32);
        swift_retain(*((_QWORD *)&v32 + 1));
        swift_retain(v33);
        v35 = sub_10000DAF8(&qword_10080CB80);
        v36 = sub_100010E80(&qword_10080CB88, &qword_10080CB80, (uint64_t)&protocol conformance descriptor for [A]);
        v37 = v49;
        dispatch thunk of SetAlgebra.init<A>(_:)(v50, v35, v36, v1, v34);
        v50[0] = v52;
        v50[1] = v53;
        v51 = v54;
        v38 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
        v39 = sub_10009F3B8();
        v40 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v50, v37, &type metadata for ArticleEntity, v39);
        v41 = objc_msgSend(v48, "view");
        if (v41)
        {
          v42 = v41;
          UIView.annotate(with:)(v40);

          sub_10009F3FC((uint64_t)&v55);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        v43 = swift_release();
        (*(void (**)(uint64_t *, uint64_t, __n128))(v9 + 8))(v12, v8, v43);
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_10009B5CC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  _BYTE v18[13];
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for TodayCard.Style(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000DAF8(&qword_10080CB48);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TodayCard.style.getter(v9);
  v10 = sub_1000C73C4((uint64_t)v4);
  BYTE2(v19) = v10;
  v11 = TodayCard.media.getter(v10);
  v12 = type metadata accessor for TodayCardMediaList(0);
  v13 = swift_dynamicCastClass(v11, v12);
  swift_release();
  if (v13)
    v14 = 0;
  else
    v14 = 3;
  BYTE1(v19) = v14;
  v15 = sub_10009EA40();
  AccessibilityConditional.init(value:axValue:)((char *)&v19 + 2, (char *)&v19 + 1, &type metadata for CardHeaderButton.Style, v15);
  v16 = objc_msgSend(v1, "traitCollection");
  AccessibilityConditional.value(with:)(&v19, v16, v5);

  sub_1000C6750(v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10009B738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v9 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)(v4 + qword_10080C488) = a1;
  swift_release();
  v12 = type metadata accessor for PageGrid(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v14 = v4 + qword_10080C490;
  swift_beginAccess(v4 + qword_10080C490, v17, 33, 0);
  swift_retain(a1);
  sub_1000393D8((uint64_t)v11, v14, &qword_10082AF10);
  swift_endAccess(v17);
  sub_10009B884(a1, a2, a3, a4, 7u);
  sub_10009BA68(a1, a2, a3);
  return sub_10009B5CC();
}

void sub_10009B884(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v29;

  v6 = v5;
  ObjectType = swift_getObjectType();
  v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TodayCardOverlayDisplaying);
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = a2;
  else
    v14 = 0;
  if (v14)
  {
    if (a5 == 7)
    {
      v15 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 136);
      v16 = a2;
      a5 = v15(ObjectType, a3);
    }
    else
    {
      v17 = a2;
    }
    v18 = swift_getObjectType();
    sub_1005A6B0C(a1, a4, a5, *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph), v18, v13);
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 32);
    if (v19(v18, v13))
    {
      v22 = v20;
      v23 = swift_getObjectType();
      (*(void (**)(BOOL, uint64_t, uint64_t))(v22 + 32))((*(_BYTE *)(v6 + qword_100864BF0) & 1) == 0, v23, v22);
      v21 = swift_unknownObjectRelease();
    }
    if (((uint64_t (*)(uint64_t, uint64_t, __n128))v19)(v18, v13, v21))
    {
      v25 = v24;
      v26 = swift_getObjectType();
      v27 = swift_allocObject(&unk_10073B458, 24, 7);
      swift_unknownObjectWeakInit(v27 + 16, v6);
      v28 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128))(v25 + 88);
      v29 = swift_retain(v27);
      v28(sub_10009F370, v27, v26, v25, v29);
      swift_unknownObjectRelease();
      swift_release();
    }

  }
}

void sub_10009BA68(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  _BYTE *v16;
  id v17;
  void *v18;
  char *v19;
  uint64_t ObjectType;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  char v48;
  char v49;

  v4 = v3;
  v8 = type metadata accessor for TodayCard.Style(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DAF8(&qword_10080CB48);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10009BEAC(a1, a2, a3);
  v16 = v15;
  sub_10009F118(v15);
  v47 = v16;

  v17 = objc_msgSend(v4, "collectionView");
  if (v17)
  {
    v18 = v17;
    v19 = v10;
    ObjectType = swift_getObjectType();
    v46 = a1;
    v21 = v14;
    v22 = v12;
    v23 = v11;
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 208);
    v45 = v47;
    v44 = v18;
    v25 = ObjectType;
    v10 = v19;
    v26 = v24(v25, a3);
    v11 = v23;
    v12 = v22;
    v14 = v21;
    LOBYTE(v18) = v26;
    v27 = type metadata accessor for ArticleHeaderScrollObserver();
    v28 = swift_allocObject(v27, 33, 7);
    v29 = v44;
    *(_QWORD *)(v28 + 16) = v45;
    *(_QWORD *)(v28 + 24) = v29;
    *(_BYTE *)(v28 + 32) = v18 & 1;
    sub_10009F260(v28, &qword_10080C480, &qword_10080CB58, (uint64_t (*)(uint64_t))type metadata accessor for ArticleHeaderScrollObserver, (uint64_t)&unk_100661E8C);

    swift_release();
  }
  v30 = *(id *)&v4[qword_100864C10];
  TodayCard.style.getter(v30);
  v31 = sub_1000C73C4((uint64_t)v10);
  v49 = v31;
  v32 = TodayCard.media.getter(v31);
  v33 = type metadata accessor for TodayCardMediaList(0);
  v34 = swift_dynamicCastClass(v32, v33);
  swift_release();
  if (v34)
    v35 = 0;
  else
    v35 = 3;
  v48 = v35;
  v36 = sub_10009EA40();
  AccessibilityConditional.init(value:axValue:)(&v49, &v48, &type metadata for CardHeaderButton.Style, v36);
  v37 = objc_msgSend(v4, "traitCollection");
  v38 = type metadata accessor for ArticleCloseButtonAppearanceCoordinator(0);
  v39 = swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  *(_BYTE *)(v39 + 24) = 0;
  *(_QWORD *)(v39 + 16) = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v39 + OBJC_IVAR____TtC20ProductPageExtension39ArticleCloseButtonAppearanceCoordinator_editorialButtonStyle, v14, v11);
  *(_QWORD *)(v39 + OBJC_IVAR____TtC20ProductPageExtension39ArticleCloseButtonAppearanceCoordinator_traitCollection) = v37;
  sub_10009F260(v39, &qword_10080C460, (unint64_t *)&unk_10080CB60, type metadata accessor for ArticleCloseButtonAppearanceCoordinator, (uint64_t)&unk_100648890);
  *(_QWORD *)&v40 = swift_release().n128_u64[0];
  v4[qword_100864C08] = 1;
  v41 = objc_msgSend(v4, "viewIfLoaded", v40);
  objc_msgSend(v41, "setNeedsLayout");

  v4[qword_10080C440] = 1;
  v42 = objc_msgSend(v4, "viewIfLoaded");
  objc_msgSend(v42, "setNeedsLayout");

}

id sub_10009BDD4(void *a1, id a2, SEL *a3, SEL *a4)
{
  id result;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;

  result = objc_msgSend(a2, *a3);
  if (result)
  {
    v8 = result;
    objc_msgSend(a1, "frame");
    v10 = v9;
    v12 = v11;
    v13 = objc_msgSend(a2, *a4);
    objc_msgSend(v8, "convertPoint:fromView:", v13, v10, v12);
    v15 = v14;
    v17 = v16;

    objc_msgSend(a1, "frame");
    return objc_msgSend(a1, "setFrame:", v15, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_BYTE *sub_10009BEAC(uint64_t a1, void *a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  _BYTE *v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *result;
  void *v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  objc_super v26;

  v4 = v3;
  v8 = (void *)sub_10009C06C(a2, a3, a1);
  v10 = v9;
  v11 = (objc_class *)type metadata accessor for ArticleHeaderViewController();
  v12 = objc_allocWithZone(v11);
  v12[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_isDisappearing] = 0;
  v12[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_isAppearing] = 0;
  v12[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_isCardModeEnabled] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_todayCard] = a1;
  v13 = &v12[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell];
  *v13 = a2;
  v13[1] = a3;
  v14 = &v12[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell];
  *v14 = v8;
  v14[1] = v10;
  v26.receiver = v12;
  v26.super_class = v11;
  swift_retain(a1);
  v15 = a2;
  v16 = v8;
  v17 = objc_msgSendSuper2(&v26, "initWithNibName:bundle:", 0, 0);
  v17[OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_isCardModeEnabled] = v4[qword_100864BF0];
  sub_1002AFB34((uint64_t)v17, v18);
  result = objc_msgSend(v4, "view", v26.receiver, v26.super_class);
  if (result)
  {
    v20 = result;
    objc_msgSend(result, "bounds");
    v22 = v21;

    result = objc_msgSend(v17, "view");
    if (result)
    {
      v23 = result;
      v24 = sub_1002AF5C0(v22);
      objc_msgSend(v23, "setFrame:", 0.0, 0.0, v24, v25);

      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10009C06C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  unsigned __int8 (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  _QWORD v31[5];

  v6 = sub_10000DAF8(&qword_10082AF10);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v14 = *(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 136);
  if (v14(ObjectType, a2) != 4 && v14(ObjectType, a2) != 6)
    return 0;
  (*(void (**)(uint64_t, uint64_t))(a2 + 112))(ObjectType, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100010F2C((uint64_t)v8, &qword_10082AF10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v15 = sub_10009EF8C(a1, a2, a3);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return 0;
  }
  v17 = v15;
  v18 = a3;
  v19 = v16;
  v29 = v18;
  v20 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  v28 = v12;
  v21 = (uint64_t)v20;
  v27 = type metadata accessor for ArticleHeaderViewController();
  v22 = objc_msgSend(v30, "traitCollection");
  LODWORD(v27) = sub_1002B0950(v21, v22, v27, v17, v19);

  v23 = v28;
  (*(void (**)(uint64_t, _QWORD))(v19 + 264))(v29, v27);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 216))(v31, ObjectType, a2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 224))(v31, v17, v19);
  v24 = type metadata accessor for ListTodayCardCollectionViewCell(0);
  if (swift_dynamicCastClass(v21, v24))
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 96))(1, v17, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
  return v21;
}

void sub_10009C31C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t (**v10)();
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;

  v1 = v0;
  v2 = qword_10080C4A8;
  v3 = *(void **)&v0[qword_10080C4A8];
  if (v3)
  {
    objc_msgSend(v3, "removeFromSuperview");
    v4 = *(void **)&v0[v2];
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)&v0[v2] = 0;

  v5 = objc_msgSend(v0, "collectionView");
  if (v5)
  {
    v6 = v5;
    v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FooterLockupView()), "init");
    v8 = swift_allocObject(&unk_10073B458, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v1);
    v9 = *(void **)&v7[OBJC_IVAR____TtC20ProductPageExtension16FooterLockupView_tapGestureRecognizer];
    if (v9)
      objc_msgSend(v9, "removeTarget:action:", v7, "clickActionHandlerTrampoline", swift_retain(v8).n128_f64[0]);
    else
      swift_retain(v8);
    v10 = (uint64_t (**)())&v7[OBJC_IVAR____TtC20ProductPageExtension16FooterLockupView_clickActionHandler];
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension16FooterLockupView_clickActionHandler];
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC20ProductPageExtension16FooterLockupView_clickActionHandler + 8];
    *v10 = sub_10009F6DC;
    v10[1] = (uint64_t (*)())v8;
    swift_retain(v8);
    sub_100018908(v11, v12);
    sub_1003D2970();
    swift_release_n(v8, 2);
    v13 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v7;
    v14 = v7;

    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "addSubview:", v14);

      v17 = type metadata accessor for ArticleFooterViewScrollObserver();
      swift_allocObject(v17, 73, 7);
      v18 = v14;
      v25 = v6;
      v19 = sub_10043D424(v18, v25, 0);

      sub_10009F260(v19, &qword_10080C4B0, &qword_10080CC20, (uint64_t (*)(uint64_t))type metadata accessor for ArticleFooterViewScrollObserver, (uint64_t)&unk_100662280);
      swift_release();
      v20 = qword_10080C4B0;
      v21 = *(_QWORD *)&v1[qword_10080C4B0];
      if (v21)
      {
        v22 = swift_allocObject(&unk_10073B458, 24, 7);
        swift_unknownObjectWeakInit(v22 + 16, v1);
        v23 = *(_QWORD *)(v21 + 32);
        v24 = *(_QWORD *)(v21 + 40);
        *(_QWORD *)(v21 + 32) = sub_10009F6FC;
        *(_QWORD *)(v21 + 40) = v22;
        sub_100018908(v23, v24);
        if (*(_QWORD *)&v1[v20])
        {
          swift_retain(*(_QWORD *)&v1[v20]);
          sub_10043D284(1);
          swift_release();
        }
      }

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10009C5CC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + qword_1008664F0);
    swift_retain(v6);

    a2();
    return swift_release(v6);
  }
  return result;
}

void sub_10009C64C(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10009C6A4(a1 & 1);

  }
}

uint64_t sub_10009C6A4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  __n128 v19;
  _BYTE v20[4];
  int v21;
  _BYTE v22[24];

  v21 = a1;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10000DAF8(&qword_1008131E0);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1 + qword_100864C18;
  swift_beginAccess(v1 + qword_100864C18, v22, 0, 0);
  sub_100018ADC(v13, (uint64_t)v8, &qword_1008131E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100010F2C((uint64_t)v8, &qword_1008131E0);
  v15 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  TimedMetricsPagePresenter.impressionsTracker.getter(v15);
  v17 = v16;
  ObjectType = swift_getObjectType();
  Date.init()(ObjectType);
  if ((v21 & 1) != 0)
    dispatch thunk of ImpressionsTracker.elementDidEnterView(_:on:)(v12, v5, ObjectType, v17);
  else
    dispatch thunk of ImpressionsTracker.elementDidLeaveView(_:on:)(v12, v5, ObjectType, v17);
  v19 = swift_unknownObjectRelease();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8))(v5, v2, v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_10009C890()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:), v1, v3);
  v6 = type metadata accessor for ArticleDiffablePagePresenter(0);
  v7 = sub_10000E720(&qword_10080CC48, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  MetricsPagePresenter.observe(lifecycleEvent:)(v5, v6, v7);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if (*((_BYTE *)v0 + qword_10080C498) == 1)
  {
    static ResilientDeepLinkController.removeAllDeepLinks()(v8);
    if (qword_100806958 != -1)
      swift_once(&qword_100806958, sub_1005032EC);
    v10 = type metadata accessor for OSLogger(0, v9);
    sub_10000EFC4(v10, (uint64_t)qword_10086AB08);
    v11 = sub_10000DAF8((uint64_t *)&unk_100808370);
    v12 = type metadata accessor for LogMessage(0);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100640720;
    LogMessage.init(stringLiteral:)(0xD000000000000027, 0x800000010068ABF0);
    Logger.error(_:)(v13, v10, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
  }
}

void sub_10009CA6C(void *a1)
{
  id v1;

  v1 = a1;
  sub_10009C890();

}

void sub_10009CAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t ObjectType;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;

  v1 = *(_QWORD *)(v0 + qword_10080C468);
  if (v1)
  {
    v2 = v0;
    swift_retain(*(_QWORD *)(v0 + qword_10080C468));
    TodayCard.media.getter(v3);
    v4 = TodayCardMedia.kind.getter();
    swift_release();
    v5 = qword_10080C470;
    v6 = *(_QWORD *)(v2 + qword_10080C470);
    if (v6)
    {
      v7 = *(void **)(v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell);
      if (v7)
      {
        v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell + 8);
        v9 = *(id *)(v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_alternateCell);
      }
      else
      {
        v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell + 8);
        v9 = *(id *)(v6 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell);
        v7 = 0;
      }
      v15 = v7;
      v14 = v9;
      v12 = v14;
    }
    else
    {
      v10 = sub_1003A9F08(v4);
      v8 = v11;
      v12 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      if (!*(_QWORD *)(v2 + v5))
      {
        v13 = type metadata accessor for RiverTodayCardCollectionViewCell(0);
        if (swift_dynamicCastClass(v12, v13))
          sub_10009A214(v1, v12, v8, 7u);
        sub_10009BA68(v1, v12, v8);
      }
      v14 = 0;
    }
    sub_10009A214(v1, v12, v8, 7u);
    v16 = *(_QWORD *)(v2 + v5);
    if (v16
      && ((v17 = *(void **)(v16 + OBJC_IVAR____TtC20ProductPageExtension27ArticleHeaderViewController_cell),
           v18 = swift_getObjectType(),
           (v19 = swift_conformsToProtocol2(v18, &protocol descriptor for AnyVideoViewProviding)) != 0)
        ? (v20 = v17)
        : (v20 = 0),
          v19 ? (v21 = v19) : (v21 = 0),
          v20))
    {
      v22 = type metadata accessor for VideoPlaybackCoordinator(0);
      v23 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC20ProductPageExtension29StoreCollectionViewController_objectGraph)
                     + qword_10086B3F0);
      if (v23)
      {
        ObjectType = swift_getObjectType();
        v25 = v17;
        v26 = v23;
        v33 = (id)dispatch thunk of AnyVideoViewProviding.someVideoView.getter(ObjectType, v21);
        v28 = v27;
        v29 = *(_QWORD *)(v21 + 8);
        v30 = v25;
        dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v33, v28, v20, v29);

        swift_release();
      }
      else
      {
        v31 = v22;
        v32 = v17;
        dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v31, v31);
        __break(1u);
      }
    }
    else
    {

      swift_release();
    }
  }
}

void sub_10009CD64(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  dispatch_queue_t v26;
  char *Strong;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  _QWORD v39[2];
  void *v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  void **v44;
  dispatch_queue_t v45;
  __int128 aBlock;
  __int128 v47;
  uint64_t (*v48)();
  uint64_t v49;
  char v50;
  char v51[24];

  v41 = a4;
  v7 = sub_10000DAF8((uint64_t *)&unk_1008092A0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void ***)a1;
  v40 = *(void **)(a1 + 8);
  v42 = a3;
  v44 = v15;
  v45 = a3 + 2;
  if (qword_100806960 != -1)
    swift_once(&qword_100806960, sub_100503310);
  v16 = sub_10000EFC4(v11, (uint64_t)qword_10086AB20);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  v17 = sub_10000DAF8((uint64_t *)&unk_100808370);
  v18 = type metadata accessor for LogMessage(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_100640600;
  v20 = LogMessage.init(stringLiteral:)(0xD00000000000001BLL, 0x800000010068ABD0);
  v43 = a2;
  dispatch thunk of EditorialLink.url.getter(v20);
  v22 = type metadata accessor for URL(0, v21);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22) == 1)
  {
    sub_100010F2C((uint64_t)v10, (uint64_t *)&unk_1008092A0);
    aBlock = 0u;
    v47 = 0u;
  }
  else
  {
    *((_QWORD *)&v47 + 1) = v22;
    v24 = sub_1000119C0(&aBlock);
    (*(void (**)(_QWORD *, char *, uint64_t))(v23 + 32))(v24, v10, v22);
  }
  static LogMessage.sensitive(_:)(&aBlock);
  sub_100010F2C((uint64_t)&aBlock, &qword_100808F20);
  Logger.debug(_:)(v19, v11, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
  v26 = v45;
  swift_beginAccess(v45, v51, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v26);
  if (Strong)
  {
    v28 = Strong;
    v29 = *(_QWORD *)&Strong[qword_10080C478];
    if (v29)
    {
      swift_retain(*(_QWORD *)&Strong[qword_10080C478]);

      v30 = (_QWORD *)swift_allocObject(&unk_10073B4F8, 56, 7);
      v32 = v40;
      v31 = v41;
      v33 = v43;
      v34 = v44;
      v30[2] = v41;
      v30[3] = v34;
      v30[4] = v32;
      v30[5] = v33;
      v35 = (uint64_t)v42;
      v30[6] = v42;
      v50 = 1;
      v45 = *(dispatch_queue_t *)(v29 + 32);
      v36 = (_QWORD *)swift_allocObject(&unk_10073B520, 48, 7);
      v36[2] = v29;
      v36[3] = sub_10009F5D8;
      v36[4] = v30;
      v36[5] = &v50;
      v37 = swift_allocObject(&unk_10073B548, 32, 7);
      *(_QWORD *)(v37 + 16) = sub_10009F614;
      *(_QWORD *)(v37 + 24) = v36;
      v48 = sub_10009F7F4;
      v49 = v37;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v47 = sub_100184A1C;
      *((_QWORD *)&v47 + 1) = &unk_10073B560;
      v38 = _Block_copy(&aBlock);
      v39[1] = v49;
      swift_retain(v31);
      sub_10009F630((uint64_t)v34, v32);
      swift_retain(v33);
      swift_retain(v35);
      swift_retain(v29);
      swift_retain(v31);
      sub_10009F630((uint64_t)v34, v32);
      swift_retain(v33);
      swift_retain(v35);
      swift_retain(v30);
      swift_retain(v37);
      swift_release();
      dispatch_sync(v45, v38);
      _Block_release(v38);
      LOBYTE(v38) = swift_isEscapingClosureAtFileLocation(v37, "", 117, 28, 37, 1);
      swift_release();
      if ((v38 & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        if ((v50 & 1) == 0)
          sub_10009D1EC(v31, v44, (uint64_t)v32, v33, v35);
        swift_release();
        swift_release();
        swift_release();
        sub_10009F674((uint64_t)v44, v32);
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {

    }
  }
}

