void sub_100009054(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100009074(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  void *v8;
  void *v9;
  void (**v10)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", 1, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "configuration"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "completion"));

  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "configuration"));
    v10 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "completion"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "reasonID"));
    ((void (**)(_QWORD, id, void *, id))v10)[2](v10, WeakRetained, v11, v5);

  }
}

void sub_100009200(uint64_t a1)
{
  objc_method *InstanceMethod;
  objc_method *v3;
  objc_class *v4;
  void (*MethodImplementation)(void);
  const char *TypeEncoding;
  objc_class *v7;
  void (*v8)(void);
  const char *v9;
  objc_method *v10;
  objc_method *v11;

  InstanceMethod = class_getInstanceMethod(*(Class *)(a1 + 32), "presentViewController:animated:completion:");
  v3 = class_getInstanceMethod(*(Class *)(a1 + 32), "as_presentViewController:animated:completion:");
  v4 = *(objc_class **)(a1 + 32);
  MethodImplementation = class_getMethodImplementation(v4, "presentViewController:animated:completion:");
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  class_addMethod(v4, "presentViewController:animated:completion:", MethodImplementation, TypeEncoding);
  v7 = *(objc_class **)(a1 + 32);
  v8 = class_getMethodImplementation(v7, "as_presentViewController:animated:completion:");
  v9 = method_getTypeEncoding(v3);
  class_addMethod(v7, "as_presentViewController:animated:completion:", v8, v9);
  v10 = class_getInstanceMethod(*(Class *)(a1 + 32), "presentViewController:animated:completion:");
  v11 = class_getInstanceMethod(*(Class *)(a1 + 32), "as_presentViewController:animated:completion:");
  method_exchangeImplementations(v10, v11);
}

uint64_t sub_100009430(uint64_t a1)
{
  uint64_t result;

  if (*(_BYTE *)(a1 + 48))
    objc_msgSend(*(id *)(a1 + 32), "as_viewDidBecomePartiallyVisible");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_100009BE8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_10000A474(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 1.0, 1.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  v4 = v5;
  objc_msgSend(v2, "setTransform:", &v4);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

id sub_10000A4F0(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "duration");
  return _objc_msgSend(v1, "_dismissAfterDelay:");
}

void sub_10000A978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10000A9C0(_QWORD *a1, void *a2, double a3)
{
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double MinX;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  float v16;
  double v17;
  double Height;
  double MaxY;
  double v20;
  id v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v21 = a2;
  objc_msgSend(v21, "frame");
  v5 = *(_QWORD *)(a1[4] + 8);
  v6 = *(double *)(v5 + 48);
  v7 = *(double *)(v5 + 56);
  objc_msgSend(v21, "sizeThatFits:", v6, v7);
  v9 = v8;
  MinX = CGRectGetMinX(*(CGRect *)(*(_QWORD *)(a1[4] + 8) + 32));
  v11 = *(double *)(*(_QWORD *)(a1[5] + 8) + 24);
  if (v11 <= 0.0)
  {
    v14 = CGRectGetMinY(*(CGRect *)(*(_QWORD *)(a1[4] + 8) + 32)) + a3;
  }
  else
  {
    v12 = v11 + a3;
    objc_msgSend(v21, "_firstBaselineOffsetFromTop");
    *(float *)&v13 = v12 - v13;
    v14 = ceilf(*(float *)&v13);
  }
  if (v9 >= v7)
    v15 = v7;
  else
    v15 = v9;
  v16 = v15;
  v17 = ceilf(v16);
  objc_msgSend(v21, "setFrame:", MinX, v14, v6, v17);
  v22.origin.x = MinX;
  v22.origin.y = v14;
  v22.size.width = v6;
  v22.size.height = v17;
  *(double *)(*(_QWORD *)(a1[4] + 8) + 56) = *(double *)(*(_QWORD *)(a1[4] + 8) + 56) - CGRectGetHeight(v22);
  Height = CGRectGetHeight(*(CGRect *)(*(_QWORD *)(a1[4] + 8) + 32));
  if (Height < 0.0)
    Height = 0.0;
  *(double *)(*(_QWORD *)(a1[4] + 8) + 56) = Height;
  v23.origin.x = MinX;
  v23.origin.y = v14;
  v23.size.width = v6;
  v23.size.height = v17;
  MaxY = CGRectGetMaxY(v23);
  objc_msgSend(v21, "_baselineOffsetFromBottom");
  *(double *)(*(_QWORD *)(a1[5] + 8) + 24) = MaxY - v20;
  v24.origin.x = MinX;
  v24.origin.y = v14;
  v24.size.width = v6;
  v24.size.height = v17;
  *(CGFloat *)(*(_QWORD *)(a1[6] + 8) + 24) = CGRectGetMaxY(v24);

}

void sub_10000AC60(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  CGAffineTransform v8;
  CGAffineTransform v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contentView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "superview"));
  objc_msgSend(v4, "setAlpha:", 0.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastView"));
  objc_msgSend(v6, "setBackgroundColor:", v5);

  CGAffineTransformMakeScale(&v9, 0.88, 0.88);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v8 = v9;
  objc_msgSend(v7, "setTransform:", &v8);

}

id sub_10000AD3C(uint64_t a1)
{
  void *v2;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 1.0, 1.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v4 = v5;
  objc_msgSend(v2, "setTransform:", &v4);

  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 0, 0);
}

void sub_10000B958(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  double MinY;
  void *v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  void *v19;
  id v20;
  CGRect v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v2, "beginUpdates");

  v3 = *(double *)(a1 + 40);
  v4 = *(double *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "keyboardOverlapHeight");
  v6 = v5;
  v7 = *(double *)(a1 + 64);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v8, "setContentInset:", v3, v4, v6, v7);

  if (JUScreenClassGetMain() == 1)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", 0, 0));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "cellForRowAtIndexPath:", v10));

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    objc_msgSend(v11, "frame");
    MinY = CGRectGetMinY(v21);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    objc_msgSend(v14, "contentInset");
    v16 = MinY - v15;
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    objc_msgSend(v17, "safeAreaInsets");
    objc_msgSend(v12, "setContentOffset:", 0.0, v16 - v18);

  }
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v19, "endUpdates");

  v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v20, "layoutIfNeeded");

}

void sub_10000BC14(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "keyboardOverlapHeight");
  v5 = v4;
  v6 = *(double *)(a1 + 64);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v7, "setContentInset:", v2, v3, v5, v6);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v8, "layoutIfNeeded");

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v9, "beginUpdates");

  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v10, "endUpdates");

}

void sub_10000CC4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  id v9;
  void *v10;

  if (a2 == 1)
  {
    v9 = objc_begin_catch(exception_object);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "description"));
    NSLog(CFSTR("Unable to copy MicaPlayer. Error = %@"));

    objc_end_catch();
    JUMPOUT(0x10000CC2CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000D72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000D748(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "runPlayTimer:", v3);

}

char *sub_10000D904(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v9 = objc_allocWithZone((Class)type metadata accessor for LinkableHeaderView());
  v10 = v4;
  v11 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension32LinkableHeaderCollectionViewCell_headerView] = v11;

  v19.receiver = v10;
  v19.super_class = (Class)type metadata accessor for LinkableHeaderCollectionViewCell();
  v12 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v13 = objc_msgSend(v12, "contentView");
  objc_msgSend(v13, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v14 = objc_msgSend(v12, "contentView");
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  v16 = objc_msgSend(v12, "contentView");
  v17 = *(id *)&v12[OBJC_IVAR____TtC22SubscribePageExtension32LinkableHeaderCollectionViewCell_headerView];
  objc_msgSend(v16, "addSubview:", v17);

  return v12;
}

id sub_10000DBDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkableHeaderCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.itemLayoutContext@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DFA4((uint64_t (*)(_QWORD))&type metadata accessor for ItemLayoutContext, a1);
}

id variable initialization expression of CondensedEditorialSearchResultContentView.viewButton()
{
  return objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.configuration@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for CondensedSearchResultCardLayout.Configuration.standard(_:);
  v3 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid()
{
  return 0;
}

uint64_t variable initialization expression of CondensedEditorialSearchResultContentView.buttonHandler()
{
  return 0;
}

double variable initialization expression of CondensedEditorialSearchResultContentView.artworkSize()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v12;

  v0 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v4);
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v8);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v10;
}

uint64_t variable initialization expression of CondensedInAppPurchaseContentView.titleLabel()
{
  type metadata accessor for DynamicTypeLabel(0);
  return DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
}

id variable initialization expression of CondensedInAppPurchaseContentView.offerButton()
{
  uint64_t v0;

  v0 = type metadata accessor for OfferButton();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

char *variable initialization expression of CondensedInAppPurchaseContentView.inAppPurchaseView()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v5;

  v0 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1188 != -1)
    swift_once(&qword_1007F1188, sub_1000D944C);
  InAppPurchaseIconLayout.Metrics.init(mainIconDimension:shouldPlaceTileAtOrigin:scaleToFit:)(0, 0, *(double *)&xmmword_100851910);
  v3 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseView(0));
  return sub_10021DFE0((uint64_t)v2, 1);
}

double variable initialization expression of CondensedInAppPurchaseContentView.tileOffset()
{
  return 0.0;
}

uint64_t variable initialization expression of TodayCardLockupLayout.Metrics.offerButtonSize()
{
  return 0;
}

uint64_t variable initialization expression of NotifyMeButtonPresenter.isSchedulingNotification()
{
  return 0;
}

uint64_t variable initialization expression of AppEventFormattedDatePresenter.currentFormattedDate@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DFA4(type metadata accessor for AppEventFormattedDatePresenter.CurrentFormattedDate, a1);
}

void *variable initialization expression of MetadataRibbonView.metadataRibbonItemViews()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of ObjectGraph.actionDispatcher@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F78F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_10000DF3C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of ObjectGraph.metricsPipeline@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DFA4((uint64_t (*)(_QWORD))&type metadata accessor for MetricsPipeline, a1);
}

double variable initialization expression of LinkableHeaderViewLayout.Metrics.bottomSpace@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of ShelfHeaderLayout.Metrics.eyebrowArtworkAspectRatio@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DFA4((uint64_t (*)(_QWORD))&type metadata accessor for AspectRatio, a1);
}

uint64_t sub_10000DFA4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t type metadata accessor for LinkableHeaderCollectionViewCell()
{
  return objc_opt_self(_TtC22SubscribePageExtension32LinkableHeaderCollectionViewCell);
}

void type metadata accessor for GKRefreshDataType(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3740, (uint64_t)&unk_100721570);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3748, (uint64_t)&unk_100721598);
}

void type metadata accessor for AVPlayerViewControllerPreferredUnobscuredArea(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3750, (uint64_t)&unk_1007215C8);
}

void type metadata accessor for Alignment(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3758, (uint64_t)&unk_1007215E8);
}

void type metadata accessor for Axis(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3760, (uint64_t)&unk_100721608);
}

void type metadata accessor for Distribution(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3768, (uint64_t)&unk_100721628);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3770, (uint64_t)&unk_100721648);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3778, (uint64_t)&unk_100721670);
}

void type metadata accessor for UITraitEnvironmentLayoutDirection(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3780, (uint64_t)&unk_100721698);
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3788, (uint64_t)&unk_1007216B8);
}

__n128 initializeWithTake for ProductPageAppEntity(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for Measurements(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3790, (uint64_t)&unk_100721730);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3798, (uint64_t)&unk_100721760);
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37A0, (uint64_t)&unk_1007217E8);
}

void type metadata accessor for UITextLayoutDirection(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37A8, (uint64_t)&unk_100721818);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37B0, (uint64_t)&unk_100721838);
}

void type metadata accessor for CAGradientLayerType(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37B8, (uint64_t)&unk_100721858);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37C0, (uint64_t)&unk_100721880);
}

uint64_t initializeBufferWithCopyOfBuffer for ProductRatingsCompactProductPageLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_10000E198(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000E1B8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37C8, (uint64_t)&unk_1007218F8);
}

__n128 initializeWithTake for SearchLandingPageGridProvider(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37D0, (uint64_t)&unk_100721980);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37D8, (uint64_t)&unk_100721A00);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37E0, (uint64_t)&unk_100721A80);
}

uint64_t getEnumTagSinglePayload for ReviewsHorizontalShelf.ScrollState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReviewsHorizontalShelf.ScrollState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F37E8, (uint64_t)&unk_100721B00);
}

uint64_t sub_10000E29C(uint64_t a1, uint64_t a2)
{
  return sub_10000F38C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_10000E2C0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_10000E2C8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_10000E2D0(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

void sub_10000E304()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

_QWORD *sub_10000E334@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_10000E348@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_10000E35C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10000E370(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10000E3A0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000E3CC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_10000E3F0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10000E404(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_10000E418(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_10000E42C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000E440(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000E454(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_10000E468(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000E47C()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_10000E48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_10000E4A4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_10000E4B8(uint64_t a1, uint64_t a2)
{
  return sub_10000F38C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10000E4C4(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_10000E538(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10000E5B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

_QWORD *sub_10000E5F4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_10000E600@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_10000E610(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

Swift::Int sub_10000E61C()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10000E660(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_10000E6A0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_10000E6B4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_10000F9FC(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

_QWORD *sub_10000E6F0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_10000E700(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_10000E70C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000E734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3900, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10066E150);
  v3 = sub_10000E99C(&qword_1007F3908, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10066E0F0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E7B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3D08, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10066E99C);
  v3 = sub_10000E99C((unint64_t *)&unk_1007F3D10, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10066E93C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E83C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10066F814);
  v3 = sub_10000E99C((unint64_t *)&unk_1007F3D20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10066E80C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E8C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3920, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10066DD44);
  v3 = sub_10000E99C(&qword_1007F3928, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10066DCE4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000E944()
{
  return sub_10000E99C(&qword_1007F37F0, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10066DCA8);
}

uint64_t sub_10000E970()
{
  return sub_10000E99C(&qword_1007F37F8, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10066DC7C);
}

uint64_t sub_10000E99C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000E9DC()
{
  return sub_10000E99C(&qword_1007F3800, (uint64_t (*)(uint64_t))type metadata accessor for CAGradientLayerType, (uint64_t)&unk_10066DD18);
}

uint64_t sub_10000EA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3CF8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10066EAF4);
  v3 = sub_10000E99C(&qword_1007F3D00, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10066EA94);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EA8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3CE8, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10066EDC8);
  v3 = sub_10000E99C(&qword_1007F3CF0, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10066ED68);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EB10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3910, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10066E000);
  v3 = sub_10000E99C(&qword_1007F3918, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10066DFA8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EB94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3CA8, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10066F434);
  v3 = sub_10000E99C(&qword_1007F3CB0, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10066F3DC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EC18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3C98, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10066F574);
  v3 = sub_10000E99C(&qword_1007F3CA0, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10066F51C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EC9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C((unint64_t *)&qword_1007F3CB8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10066F78C);
  v3 = sub_10000E99C(&qword_1007F3CC0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10066F2D0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000ED20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C(&qword_1007F3CD8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10066EF20);
  v3 = sub_10000E99C(&qword_1007F3CE0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10066EEC0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EDA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10000EDE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000E99C((unint64_t *)&qword_1007F3CC8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10066F7D0);
  v3 = sub_10000E99C(&qword_1007F3CD0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10066F018);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EE6C()
{
  return sub_10000E99C(&qword_1007F3808, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10066DF70);
}

uint64_t sub_10000EE98()
{
  return sub_10000E99C(&qword_1007F3810, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10066DF48);
}

uint64_t sub_10000EEC4()
{
  return sub_10000E99C(&qword_1007F3818, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10066DFD8);
}

uint64_t sub_10000EEF0()
{
  return sub_10000E99C(&qword_1007F3820, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10066E0B4);
}

uint64_t sub_10000EF1C()
{
  return sub_10000E99C(&qword_1007F3828, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10066E088);
}

uint64_t sub_10000EF48()
{
  return sub_10000E99C(&qword_1007F3830, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_10066E124);
}

unint64_t sub_10000EF74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F3AB0;
  if (!qword_1007F3AB0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F3AB0);
  }
  return result;
}

__n128 initializeWithTake for ReviewsHorizontalShelfDataSource.CardItem(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for IconGridView.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IconGridView.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AB8, (uint64_t)&unk_100721B80);
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AC0, (uint64_t)&unk_100721BB8);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AC8, (uint64_t)&unk_100721BD8);
}

void type metadata accessor for CategoryOptions(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AD0, (uint64_t)&unk_100721BF8);
}

void type metadata accessor for Mode(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AD8, (uint64_t)&unk_100721C20);
}

void type metadata accessor for Category(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AE0, (uint64_t)&unk_100721C48);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AE8, (uint64_t)&unk_100721C70);
}

void type metadata accessor for UIRectEdge(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AF0, (uint64_t)&unk_100721C98);
}

void type metadata accessor for ASDPurchaseHistoryContext(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3AF8, (uint64_t)&unk_100721CC0);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B00, (uint64_t)&unk_100721CE0);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B08, (uint64_t)&unk_100721D08);
}

void type metadata accessor for BuildType(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B10, (uint64_t)&unk_100721D30);
}

void type metadata accessor for ScreenClass(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B18, (uint64_t)&unk_100721D58);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B20, (uint64_t)&unk_100721D78);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B28, (uint64_t)&unk_100721D98);
}

void type metadata accessor for ContentHorizontalAlignment(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B30, (uint64_t)&unk_100721DB8);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B38, (uint64_t)&unk_100721DD8);
}

void type metadata accessor for DeviceType(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B40, (uint64_t)&unk_100721E00);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B48, (uint64_t)&unk_100721E28);
}

void type metadata accessor for NSLineBreakMode(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B50, (uint64_t)&unk_100721E50);
}

void type metadata accessor for NSWritingDirection(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B58, (uint64_t)&unk_100721E70);
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B60, (uint64_t)&unk_100721E90);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_10000F1E8(a1, &qword_1007F3B68, (uint64_t)&unk_100721F08);
}

void sub_10000F1E8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_10000F22C()
{
  return sub_10000E99C(&qword_1007F3B70, (uint64_t (*)(uint64_t))type metadata accessor for SymbolScale, (uint64_t)&unk_10066E670);
}

uint64_t sub_10000F258()
{
  return sub_10000E99C(&qword_1007F3B78, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10066E7D0);
}

uint64_t sub_10000F284()
{
  return sub_10000E99C(&qword_1007F3B80, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10066E7A4);
}

uint64_t sub_10000F2B0()
{
  return sub_10000E99C(&qword_1007F3B88, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10066E900);
}

uint64_t sub_10000F2DC()
{
  return sub_10000E99C(&qword_1007F3B90, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10066E8D4);
}

uint64_t sub_10000F308()
{
  return sub_10000E99C(&qword_1007F3B98, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_10066E970);
}

uint64_t sub_10000F334()
{
  return sub_10000E99C(&qword_1007F3BA0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10066EA58);
}

uint64_t sub_10000F360()
{
  return sub_10000E99C(&qword_1007F3BA8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10066EA2C);
}

uint64_t sub_10000F38C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10000F3C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000F408(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10000F478()
{
  return sub_10000E99C(&qword_1007F3BB0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10066EAC8);
}

uint64_t sub_10000F4A4()
{
  return sub_10000E99C(&qword_1007F3BB8, (uint64_t (*)(uint64_t))type metadata accessor for ScreenClass, (uint64_t)&unk_10066EC98);
}

uint64_t sub_10000F4D0()
{
  return sub_10000E99C(&qword_1007F3BC0, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10066ED2C);
}

uint64_t sub_10000F4FC()
{
  return sub_10000E99C(&qword_1007F3BC8, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10066ED00);
}

uint64_t sub_10000F528()
{
  return sub_10000E99C(&qword_1007F3BD0, (uint64_t (*)(uint64_t))type metadata accessor for BuildType, (uint64_t)&unk_10066ED9C);
}

uint64_t sub_10000F554()
{
  return sub_10000E99C(&qword_1007F3BD8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10066EE84);
}

uint64_t sub_10000F580()
{
  return sub_10000E99C(&qword_1007F3BE0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10066EE58);
}

uint64_t sub_10000F5AC()
{
  return sub_10000E99C(&qword_1007F3BE8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_10066EEF4);
}

uint64_t sub_10000F5D8()
{
  return sub_10000E99C(&qword_1007F3BF0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10066EFDC);
}

uint64_t sub_10000F604()
{
  return sub_10000E99C(&qword_1007F3BF8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10066EFB0);
}

uint64_t sub_10000F630()
{
  return sub_10000E99C(&qword_1007F3C00, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_10066F0F8);
}

uint64_t sub_10000F65C()
{
  return sub_10000E99C(&qword_1007F3C08, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_10066F0C4);
}

uint64_t sub_10000F688()
{
  return sub_10000E99C(&qword_1007F3C10, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_10066F124);
}

uint64_t sub_10000F6B4()
{
  return sub_10000E99C(&qword_1007F3C18, (uint64_t (*)(uint64_t))type metadata accessor for UIRectEdge, (uint64_t)&unk_10066F160);
}

uint64_t sub_10000F6E0()
{
  return sub_10000E99C(&qword_1007F3C20, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10066F294);
}

uint64_t sub_10000F70C()
{
  return sub_10000E99C(&qword_1007F3C28, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10066F268);
}

uint64_t sub_10000F738()
{
  return sub_10000E99C(&qword_1007F3C30, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10066F3A4);
}

uint64_t sub_10000F764()
{
  return sub_10000E99C(&qword_1007F3C38, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10066F37C);
}

uint64_t sub_10000F790()
{
  return sub_10000E99C(&qword_1007F3C40, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_10066F40C);
}

uint64_t sub_10000F7BC()
{
  return sub_10000E99C(&qword_1007F3C48, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10066F4E4);
}

uint64_t sub_10000F7E8()
{
  return sub_10000E99C(&qword_1007F3C50, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10066F4BC);
}

uint64_t sub_10000F814(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_10000F89C()
{
  return sub_10000E99C(&qword_1007F3C58, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_10066F54C);
}

uint64_t sub_10000F8C8()
{
  return sub_10000E99C(&qword_1007F3C60, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_10066F62C);
}

uint64_t sub_10000F8F4()
{
  return sub_10000E99C(&qword_1007F3C68, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_10066F5FC);
}

uint64_t sub_10000F920()
{
  return sub_10000E99C(&qword_1007F3C70, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_10066F654);
}

uint64_t sub_10000F94C()
{
  return sub_10000E99C(&qword_1007F3C78, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_10066F68C);
}

uint64_t sub_10000F978()
{
  return sub_10000E99C(&qword_1007F3C80, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10066F304);
}

uint64_t sub_10000F9A4()
{
  return sub_10000E99C(&qword_1007F3C88, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10066F04C);
}

uint64_t sub_10000F9D0()
{
  return sub_10000E99C(&qword_1007F3C90, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10066E840);
}

uint64_t sub_10000F9FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

char *sub_10000FAA8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v5 = &v2[qword_1008505F0];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = type metadata accessor for AdvertRotationControllerProvider(0);
  v7 = type metadata accessor for ObjectGraph(0);
  v8 = v2;
  inject<A, B>(_:from:)(&v16, v6, a2, v6, v7);
  *(_QWORD *)&v8[qword_1007F3E50] = v16;

  swift_retain(a1);
  swift_retain(a2);
  v9 = (char *)sub_1005CA640(a1, a2);
  v10 = *(void **)&v9[qword_100852E90];
  v11 = *(_QWORD *)&v9[qword_1007F3E50];
  v12 = v9;
  v13 = v10;
  swift_retain(v11);
  CompoundScrollObserver.addChild(_:)(v14, &protocol witness table for AdvertRotationControllerProvider);

  swift_release(v11);
  swift_release(a1);
  swift_release(a2);
  return v12;
}

id sub_10000FBC0()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id result;
  void *v14;
  objc_super v15[2];
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.receiver = v0;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, "viewDidLoad", v4);
  v7 = objc_msgSend(v0, "collectionView");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "setKeyboardDismissMode:", 1);

  }
  v9 = objc_msgSend(v0, "collectionView");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setAllowsSelection:", 1);

  }
  v11 = objc_msgSend(v0, "collectionView");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  }
  result = objc_msgSend(v0, "collectionView");
  if (result)
  {
    v14 = result;
    memset(v15, 0, sizeof(v15));
    static AutomationSemantics.page(name:id:)(0x614C686372616573, 0xED0000676E69646ELL, v15);
    sub_100011088((uint64_t)v15, &qword_1007F6E90);
    UIView.setAutomationSemantics(_:)(v6);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000FD68(void *a1)
{
  id v1;

  v1 = a1;
  sub_10000FBC0();

}

void sub_10000FD9C(void *a1, uint64_t a2)
{
  sub_10000FDD8(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10000FDB0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10000FE54(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_10000FDC4(void *a1, uint64_t a2)
{
  sub_10000FDD8(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10000FDD8(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_10000FE40(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10000FE54(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_10000FE54(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType();
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

uint64_t sub_10000FEC4()
{
  return sub_10000FF30((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_10000FEE0(void *a1)
{
  id v1;

  v1 = a1;
  sub_10000FEC4();

}

uint64_t sub_10000FF14()
{
  return sub_10000FF30((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_10000FF30(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_100010FD8(v11, (uint64_t)v22);
  if (v23)
  {
    sub_100011020((uint64_t)v22, (uint64_t)v18);
    sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
    v12 = v19;
    v13 = v20;
    sub_100011064(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v18);
  }
  else
  {
    v14 = sub_100011088((uint64_t)v22, (uint64_t *)&unk_100802A10);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_100010094(void *a1)
{
  id v1;

  v1 = a1;
  sub_10000FF14();

}

id sub_1000100C8()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F4420);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10066F860;
  v5 = *(_QWORD *)&v0[qword_100852E58];
  v6 = *(_QWORD *)&v0[qword_1007F3E50];
  v7 = sub_10000DF3C(&qword_1007F4428);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(v5);
  swift_retain(v6);
  v8 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v5, v6);
  v9 = sub_100010F98(&qword_1007F4430, &qword_1007F4428, (const char *)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *(_QWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 40) = v9;
  v10 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v11 = swift_allocObject(v10, 17, 7);
  *(_BYTE *)(v11 + 16) = 0;
  v12 = sub_10000E99C(&qword_1007F4438, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10069C8D0);
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v4 + 56) = v12;
  v13 = sub_10000E99C(&qword_1007F43D8, type metadata accessor for SearchLandingDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v14 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v24, ObjectType, v13);
  v15 = TimedMetricsPagePresenter.impressionsCalculator.getter(v14);
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph];
  swift_retain(v6);
  swift_retain(v16);
  result = objc_msgSend(v1, "collectionView");
  if (result)
  {
    v18 = result;
    v19 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    *(_QWORD *)(v4 + 64) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v24, v15, v6, v16, v18);
    *(_QWORD *)(v4 + 72) = &protocol witness table for ImpressionsCollectionElementsObserver;
    v20 = type metadata accessor for CompoundCollectionElementsObserver(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v21 = CompoundCollectionElementsObserver.init(children:)(v4);
    v22 = sub_10037105C();
    if (swift_dynamicCastClass(v22, v20))
    {
      v23 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_100010340, 0);
      CompoundCollectionElementsObserver.addChild(_:)(v23, &protocol witness table for CompoundCollectionElementsObserver);
      swift_unknownObjectRelease(v22);
      swift_release(v23);
    }
    else
    {
      swift_unknownObjectRelease(v22);
    }
    return (id)v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_100010340(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImpressionsCollectionElementsObserver(0);
  return swift_dynamicCastClass(a1, v2) != 0;
}

unint64_t sub_100010378@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SearchLandingPageShelfLayoutSpacingProvider;
  result = sub_100010F54();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000103A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_100852E58);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_objectGraph);
  v3 = sub_10000E99C(&qword_1007F4408, (uint64_t (*)(uint64_t))&type metadata accessor for SearchLandingDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v4 = type metadata accessor for SearchLandingPageShelfSupplementaryProvider();
  v5 = swift_allocObject(v4, 40, 7);
  *(_QWORD *)(v5 + 32) = 0;
  swift_unknownObjectWeakInit(v5 + 24, 0);
  *(_QWORD *)(v5 + 32) = v3;
  swift_unknownObjectWeakAssign(v6, v1);
  *(_QWORD *)(v5 + 16) = v2;
  sub_10000E99C(&qword_1007F4410, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingPageShelfSupplementaryProvider, (uint64_t)&unk_10068A030);
  swift_retain(v2);
  return v5;
}

uint64_t sub_10001047C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];

  v0 = sub_10000DF3C(&qword_1007F43E8);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10066F870;
  v2 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v3 = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(v3 + 16) = 0;
  v4 = sub_10000E99C(&qword_1007F43F0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_100687814);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_10000DF3C(&qword_1007F43F8);
  v6 = sub_100010F98(&qword_1007F4400, &qword_1007F43F8, byte_10067F0C0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v14, v5, v6);
  v7 = type metadata accessor for GenericPageItemSupplementaryProvider();
  v8 = swift_allocObject(v7, 64, 7);
  sub_100011020((uint64_t)v14, v8 + 16);
  v9 = type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  v10 = swift_allocObject(v9, 56, 7);
  sub_100010F3C(v14, v10 + 16);
  *(_QWORD *)(v8 + 56) = v10;
  v11 = sub_10000E99C(&qword_100803060, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider, (uint64_t)&unk_100687C98);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v11;
  v12 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v1);
}

uint64_t sub_1000105E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  _QWORD v23[5];
  _QWORD v24[5];
  __int128 v25;
  _QWORD v26[4];
  _QWORD v27[5];

  ObjectType = swift_getObjectType();
  v25 = xmmword_10066F870;
  v4 = sub_10000E99C(&qword_1007F43D8, type metadata accessor for SearchLandingDiffablePageViewController, (uint64_t)byte_10067F0C0);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v26[3] = swift_getObjectType();
  v26[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v27[3] = swift_getObjectType();
  v27[0] = v6;
  sub_100010E9C((uint64_t)v26, (uint64_t)v24);
  sub_100010E9C((uint64_t)v24, (uint64_t)v23);
  v7 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v22, v23, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    v22[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  if (*(_QWORD *)&v22[0])
  {
    v20 = v22[0];
    v8 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v8 = sub_10020070C(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_10020070C((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    *(_OWORD *)&v8[2 * v10 + 4] = v20;
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  sub_100010E9C((uint64_t)v27, (uint64_t)v24);
  sub_100010E9C((uint64_t)v24, (uint64_t)v23);
  v11 = sub_10000DF3C(&qword_1007F43E0);
  if ((swift_dynamicCast(v22, v23, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
    v22[0] = 0uLL;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  if (*(_QWORD *)&v22[0])
  {
    v21 = v22[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_10020070C(0, v8[2] + 1, 1, v8);
    v13 = v8[2];
    v12 = v8[3];
    v14 = v21;
    if (v13 >= v12 >> 1)
    {
      v19 = sub_10020070C((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
      v14 = v21;
      v8 = v19;
    }
    v8[2] = v13 + 1;
    *(_OWORD *)&v8[2 * v13 + 4] = v14;
  }
  swift_arrayDestroy(v26, v25, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v24, ObjectType, v4);
  v15 = *(_QWORD *)(v1 + qword_100852EA8);
  v16 = type metadata accessor for SearchLandingLayoutSectionProvider(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  sub_100011020((uint64_t)v24, (uint64_t)v23);
  sub_100011020((uint64_t)v23, (uint64_t)v22);
  swift_retain(v15);
  v17 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v22, v8, v15, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v23);
  result = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  a1[3] = v16;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v17;
  return result;
}

unint64_t sub_1000108F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PageGridCache.init()();
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for SearchLandingPageGridProvider;
  result = sub_100010E58();
  a1[4] = result;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void sub_100010974(void *a1, uint64_t a2, void *a3)
{
  id v4;
  char *v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)((uint64_t (*)(void))swift_getObjectType)();
  v4 = a3;
  v5 = (char *)v12.receiver;
  objc_msgSendSuper2(&v12, "scrollViewWillBeginDragging:", v4);
  v6 = &v5[qword_1008505F0];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[qword_1008505F0]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);

    swift_unknownObjectRelease(v9);
  }
  else
  {

  }
}

uint64_t sub_100010A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SearchLandingShelfComponentTypeMappingProvider();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(_QWORD *)(v3 + 16) = swift_allocObject(v4, 16, 7);
  a1[3] = v2;
  result = sub_10000E99C(&qword_1007F43C8, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingShelfComponentTypeMappingProvider, (uint64_t)"Y.\v");
  a1[4] = result;
  *a1 = v3;
  return result;
}

void sub_100010AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_10000DF3C(&qword_1007F43C0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100372E1C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:))
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  else
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100010B74(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v5;
  int v6;
  id v7;
  int v8;
  int v9;
  id v10;
  int v11;
  id v12;
  void *v13;
  objc_super v14;

  v3 = v2;
  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2, a2);
  v5 = objc_msgSendSuper2(&v14, "traitCollectionDidChange:", a1);
  if (a1)
    v6 = UITraitCollection.prefersAccessibilityLayouts.getter(v5) & 1;
  else
    v6 = 2;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = UITraitCollection.prefersAccessibilityLayouts.getter(v7);

  if (v6 == 2
    || ((v8 ^ (v6 != 0)) & 1) != 0
    || (!a1 ? (v9 = 2) : (v9 = UITraitCollection.prefersRightToLeftLayouts.getter() & 1),
        (v10 = objc_msgSend(v3, "traitCollection"),
         v11 = UITraitCollection.prefersRightToLeftLayouts.getter(),
         v10,
         v9 == 2)
     || ((v11 ^ (v9 != 0)) & 1) != 0))
  {
    v12 = objc_msgSend(v3, "collectionView");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100010CB4(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_100010B74((uint64_t)a3, (uint64_t)v6);

}

uint64_t sub_100010D0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_1007F3E50));
  return sub_100010E34(v0 + qword_1008505F0);
}

id MetadataRibbonView.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100010D6C(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_1007F3E50));
  return sub_100010E34(a1 + qword_1008505F0);
}

uint64_t type metadata accessor for SearchLandingDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F3E80;
  if (!qword_1007F3E80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchLandingDiffablePageViewController);
  return result;
}

uint64_t sub_100010DE0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_10066F8F8;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_100010E2C()
{
  return type metadata accessor for SearchLandingDiffablePageViewController(0);
}

uint64_t sub_100010E34(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_100010E58()
{
  unint64_t result;

  result = qword_1007F43D0;
  if (!qword_1007F43D0)
  {
    result = swift_getWitnessTable(&unk_100691638, &type metadata for SearchLandingPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F43D0);
  }
  return result;
}

uint64_t sub_100010E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100010EF8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100010F3C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_100010F54()
{
  unint64_t result;

  result = qword_1007F4418;
  if (!qword_1007F4418)
  {
    result = swift_getWitnessTable(&unk_10067060C, &type metadata for SearchLandingPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_1007F4418);
  }
  return result;
}

uint64_t sub_100010F98(unint64_t *a1, uint64_t *a2, const char *a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100010EF8(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100010FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_100802A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_100011064(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100011088(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10000DF3C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000110C4(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4042000000000000;
  return sub_1000110F8(a2, a1, &qword_100850610, &qword_100850618, qword_1008505F8);
}

uint64_t sub_1000110E0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 26.0;
  return sub_1000110F8(a2, a1, &qword_100850638, &qword_100850640, qword_100850620);
}

uint64_t sub_1000110F8(__n128 a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  double v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v18[5];

  v5 = a1.n128_f64[0];
  v9 = type metadata accessor for FontSource(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2608 != -1)
    swift_once(&qword_1007F2608, sub_1004164F4);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_1000117A8(v13, (uint64_t)qword_100855700);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v14, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  *a3 = type metadata accessor for StaticDimension(0);
  *a4 = &protocol witness table for StaticDimension;
  sub_1000117C0(a5);
  v18[3] = v9;
  v18[4] = &protocol witness table for FontSource;
  v15 = sub_1000117C0(v18);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  StaticDimension.init(_:scaledLike:)(v18, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

char *sub_10001125C(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  objc_super v29;

  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension22SearchTransparencyView_linkedLabel;
  v14 = qword_1007F2608;
  v15 = v4;
  if (v14 != -1)
    swift_once(&qword_1007F2608, sub_1004164F4);
  v16 = sub_1000117A8(v9, (uint64_t)qword_100855700);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLinkedLabel(0));
  *(_QWORD *)&v15[v13] = sub_100059FA0((uint64_t)v12, 0, 0, 0);

  v18 = (objc_class *)type metadata accessor for SearchTransparencyView();
  v29.receiver = v15;
  v29.super_class = v18;
  v19 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  v20 = OBJC_IVAR____TtC22SubscribePageExtension22SearchTransparencyView_linkedLabel;
  v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension22SearchTransparencyView_linkedLabel];
  v22 = v19;
  objc_msgSend(v22, "addSubview:", v21);
  objc_msgSend(v22, "setLayoutMargins:", 0.0, 32.0, 0.0, 32.0);
  sub_1000117FC();
  v23 = v22;
  v24 = (void *)static UIColor.componentBackgroundStandout.getter();
  objc_msgSend(v23, "setBackgroundColor:", v24);

  objc_msgSend(v23, "_setCornerRadius:", 10.0);
  v25 = *(id *)&v19[v20];
  v26 = (void *)static UIColor.secondaryText.getter();
  objc_msgSend(v25, "setTextColor:", v26);

  v27 = *(id *)&v19[v20];
  objc_msgSend(v27, "setTextAlignment:", 1);

  return v23;
}

id sub_1000115D8()
{
  char *v0;
  objc_class *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  objc_super v11;
  CGRect v12;
  CGRect v13;

  v1 = (objc_class *)type metadata accessor for SearchTransparencyView();
  v11.receiver = v0;
  v11.super_class = v1;
  objc_msgSendSuper2(&v11, "layoutSubviews");
  v2 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension22SearchTransparencyView_linkedLabel];
  LayoutMarginsAware<>.layoutFrame.getter(v1);
  objc_msgSend(v2, "measurementsWithFitting:in:", v0, v3, v4);
  v6 = v5;
  v8 = v7;

  v12.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  v9 = CGRectGetMidX(v12) - v6 * 0.5;
  v13.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  return objc_msgSend(v2, "setFrame:", v9, CGRectGetMidY(v13) - v8 * 0.5, v6, v8);
}

id sub_100011748()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchTransparencyView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchTransparencyView()
{
  return objc_opt_self(_TtC22SubscribePageExtension22SearchTransparencyView);
}

uint64_t sub_1000117A8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *sub_1000117C0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

unint64_t sub_1000117FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4D40;
  if (!qword_1007F4D40)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F4D40);
  }
  return result;
}

uint64_t sub_100011838()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for TopChartsCategoriesDataSource()
{
  return objc_opt_self(_TtC22SubscribePageExtension29TopChartsCategoriesDataSource);
}

uint64_t sub_100011880(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1000118FC()
{
  sub_100011DF8();
}

uint64_t sub_100011928(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

id sub_100011940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v6;
  void *v7;
  id result;
  void *v9;
  void *v10;
  void *v11;
  Class v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  objc_super v32;

  v5 = v4;
  v6 = (objc_class *)type metadata accessor for MetricsViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v32.receiver = v4;
  v32.super_class = v6;
  objc_msgSendSuper2(&v32, "viewDidLoad");
  v7 = *(void **)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x68));
  objc_msgSend(v4, "addChildViewController:", v7);
  result = objc_msgSend(v7, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = objc_msgSend(v5, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = result;
  result = objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = result;
  objc_msgSend(v10, "addSubview:", result);

  result = objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v12 = (Class)result;
  v13 = objc_msgSend(result, "superview");
  if (v13)
  {
    v14 = v13;
    -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = sub_10000DF3C(&qword_1007F5840);
    v17 = swift_allocObject(v16, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10066F9C0;
    v18 = -[objc_class leftAnchor](v12, "leftAnchor");
    v19 = objc_msgSend(v14, "leftAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v17 + 32) = v20;
    v21 = -[objc_class rightAnchor](v12, "rightAnchor");
    v22 = objc_msgSend(v14, "rightAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v17 + 40) = v23;
    v24 = -[objc_class topAnchor](v12, "topAnchor");
    v25 = objc_msgSend(v14, "topAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v17 + 48) = v26;
    v27 = -[objc_class bottomAnchor](v12, "bottomAnchor");
    v28 = objc_msgSend(v14, "bottomAnchor");
    v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

    *(_QWORD *)(v17 + 56) = v29;
    specialized Array._endMutation()(v30);
    sub_100011E7C();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "activateConstraints:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

    v12 = isa;
  }

  return objc_msgSend(v7, "didMoveToParentViewController:", v5);
}

void sub_100011CD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_100011940((uint64_t)v4, v1, v2, v3);

}

void sub_100011D08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_100011E50();
}

id sub_100011D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for MetricsViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100011D90(char *a1)
{
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x50) - 8) + 8))(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x60)]);

}

uint64_t type metadata accessor for MetricsViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011EB8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsViewController);
}

void sub_100011DF8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/MetricsViewController.swift", 50, 2, 30, 0);
  __break(1u);
}

void sub_100011E50()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.MetricsViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

unint64_t sub_100011E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F45C0;
  if (!qword_1007F45C0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F45C0);
  }
  return result;
}

uint64_t sub_100011EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

ValueMetadata *type metadata accessor for CopyTextActionImplementation()
{
  return &type metadata for CopyTextActionImplementation;
}

unint64_t sub_100011EF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F45C8;
  if (!qword_1007F45C8)
  {
    v1 = type metadata accessor for CopyTextAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007F45C8);
  }
  return result;
}

uint64_t sub_100011F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v9;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  CopyTextAction.text.getter();
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setString:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  sub_10000DF3C(&qword_100803510);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  return Promise.__allocating_init(value:)(v3);
}

uint64_t destroy for ProductRatingsCompactProductPageLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 7);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 12);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 17);
}

_OWORD *initializeWithCopy for ProductRatingsCompactProductPageLayout(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
  v5 = a2[5];
  a1[5] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 56, (uint64_t)a2 + 56);
  v6 = *(_OWORD *)((char *)a2 + 120);
  *(_OWORD *)((char *)a1 + 120) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6));
  v7 = a2[10];
  a1[10] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 136, (uint64_t)a2 + 136);
  return a1;
}

_QWORD *assignWithCopy for ProductRatingsCompactProductPageLayout(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_10001216C(a1 + 7, a2 + 7);
  sub_10001216C(a1 + 12, a2 + 12);
  sub_10001216C(a1 + 17, a2 + 17);
  return a1;
}

_QWORD *sub_10001216C(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for ProductRatingsCompactProductPageLayout(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ProductRatingsCompactProductPageLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 96));
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 136));
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsCompactProductPageLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsCompactProductPageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsCompactProductPageLayout()
{
  return &type metadata for ProductRatingsCompactProductPageLayout;
}

uint64_t initializeWithCopy for ProductRatingsCompactProductPageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

_QWORD *assignWithCopy for ProductRatingsCompactProductPageLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for ProductRatingsCompactProductPageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ProductRatingsCompactProductPageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsCompactProductPageLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsCompactProductPageLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsCompactProductPageLayout.Metrics()
{
  return &type metadata for ProductRatingsCompactProductPageLayout.Metrics;
}

double sub_1000125E4(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)v3;
  v8 = *(_QWORD *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 88);
  sub_100011064((_QWORD *)(v3 + 56), v8);
  v10 = a2 - (dispatch thunk of Placeable.measure(toFit:with:)(a1, v8, v9, a2, a3) + 4.0) - *(double *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 120);
  v12 = *(_QWORD *)(v3 + 128);
  sub_100011064(v4 + 12, v4[15]);
  dispatch thunk of Placeable.measure(toFit:with:)(a1, v11, v12, v10, a3);
  v14 = a3 - v13 - *(double *)(v3 + 48);
  v15 = *(_QWORD *)(v3 + 160);
  v16 = *(_QWORD *)(v3 + 168);
  sub_100011064(v4 + 17, v4[20]);
  dispatch thunk of Placeable.measure(toFit:with:)(a1, v15, v16, v10, v14);
  sub_100012C28(v3, (uint64_t)v20);
  v17 = v21;
  v18 = v22;
  sub_100011064(v20, v21);
  AnyDimension.value(with:)(a1, v17, v18);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
  return a2;
}

uint64_t sub_100012750(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double Height;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v48;
  double v49;
  double v50;
  double v51;
  double rect;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  v6 = v5;
  v12 = (_QWORD *)(v5 + 56);
  v13 = *(_QWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 88);
  sub_100011064((_QWORD *)(v5 + 56), v13);
  v15 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v13, v14, a4, a5) + 4.0;
  v56.origin.x = a2;
  v56.origin.y = a3;
  v56.size.width = a4;
  v56.size.height = a5;
  v16 = CGRectGetWidth(v56) - v15 - *(double *)(v5 + 40);
  v17 = (_QWORD *)(v5 + 96);
  v18 = *(_QWORD *)(v5 + 120);
  v19 = *(_QWORD *)(v5 + 128);
  sub_100011064((_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 120));
  v57.origin.x = a2;
  v57.origin.y = a3;
  v57.size.width = a4;
  v57.size.height = a5;
  Height = CGRectGetHeight(v57);
  v50 = v16;
  dispatch thunk of Placeable.measure(toFit:with:)(a1, v18, v19, v16, Height);
  v22 = v21;
  v58.origin.x = a2;
  v58.origin.y = a3;
  v58.size.width = a4;
  v58.size.height = a5;
  v23 = CGRectGetHeight(v58) - v22 - *(double *)(v5 + 48);
  v24 = *(_QWORD *)(v5 + 160);
  v25 = *(_QWORD *)(v5 + 168);
  sub_100011064((_QWORD *)(v6 + 136), *(_QWORD *)(v6 + 160));
  rect = dispatch thunk of Placeable.measure(toFit:with:)(a1, v24, v25, v16, v23);
  v27 = v26;
  v48 = v26;
  v49 = v28;
  v29 = v28;
  sub_100012C28(v5, (uint64_t)v53);
  v30 = v54;
  v31 = v55;
  sub_100011064(v53, v54);
  v32 = AnyDimension.value(with:)(a1, v30, v31);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v53);
  v51 = *(double *)(v6 + 48);
  if (v32 > v27 - v29 + v22 + v51)
    v33 = v32;
  else
    v33 = v27 - v29 + v22 + v51;
  v34 = a2;
  v59.origin.x = a2;
  v59.origin.y = a3;
  v59.size.width = a4;
  v59.size.height = a5;
  CGRectGetMinX(v59);
  v60.origin.x = a2;
  v60.origin.y = a3;
  v60.size.width = a4;
  v60.size.height = a5;
  CGRectGetMinY(v60);
  if (rect >= v50)
    v35 = v50;
  else
    v35 = rect;
  v61.origin.x = a2;
  v61.origin.y = a3;
  v61.size.width = a4;
  v61.size.height = a5;
  v36 = CGRectGetWidth(v61) - v35;
  v62.origin.x = v34;
  v62.origin.y = a3;
  v62.size.width = a4;
  v62.size.height = a5;
  v37 = v49 + v33 + CGRectGetMinY(v62) - v48;
  v63.origin.x = v34;
  v63.origin.y = a3;
  v63.size.width = a4;
  v63.size.height = a5;
  CGRectGetWidth(v63);
  v64.origin.x = v36;
  v64.origin.y = v37;
  v64.size.width = rect;
  v64.size.height = v48;
  CGRectGetMinY(v64);
  v38 = *(_QWORD *)(v6 + 80);
  v39 = *(_QWORD *)(v6 + 88);
  sub_100011064(v12, v38);
  v40 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v34);
  dispatch thunk of Placeable.place(at:with:)(a1, v38, v39, v40);
  v41 = *(_QWORD *)(v6 + 160);
  v42 = *(_QWORD *)(v6 + 168);
  sub_100011064((_QWORD *)(v6 + 136), v41);
  v43 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v34);
  dispatch thunk of Placeable.place(at:with:)(a1, v41, v42, v43);
  v45 = *(_QWORD *)(v6 + 120);
  v44 = *(_QWORD *)(v6 + 128);
  sub_100011064(v17, v45);
  v46 = CGRect.withLayoutDirection(using:relativeTo:)(a1, v34);
  return dispatch thunk of Placeable.place(at:with:)(a1, v45, v44, v46);
}

_OWORD *sub_100012B00@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;

  return sub_100012BF4(v1, a1);
}

uint64_t sub_100012B14(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100012C74();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_100012B58()
{
  unint64_t result;

  result = qword_1007F45D0;
  if (!qword_1007F45D0)
  {
    result = swift_getWitnessTable(&unk_10066FB28, &type metadata for ProductRatingsCompactProductPageLayout);
    atomic_store(result, (unint64_t *)&qword_1007F45D0);
  }
  return result;
}

unint64_t sub_100012BA0()
{
  unint64_t result;

  result = qword_1007F45D8;
  if (!qword_1007F45D8)
  {
    result = swift_getWitnessTable(&unk_10066FB00, &type metadata for ProductRatingsCompactProductPageLayout);
    atomic_store(result, (unint64_t *)&qword_1007F45D8);
  }
  return result;
}

uint64_t sub_100012BE4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006ADCFC, 1);
}

_OWORD *sub_100012BF4(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ProductRatingsCompactProductPageLayout(a2, a1);
  return a2;
}

uint64_t sub_100012C28(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  return a2;
}

unint64_t sub_100012C74()
{
  unint64_t result;

  result = qword_1007F45E0;
  if (!qword_1007F45E0)
  {
    result = swift_getWitnessTable(&unk_10066FB58, &type metadata for ProductRatingsCompactProductPageLayout);
    atomic_store(result, (unint64_t *)&qword_1007F45E0);
  }
  return result;
}

void sub_100012CBC(_QWORD *a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __n128 v24;
  Swift::String v25;
  __n128 v26;
  Swift::String v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  _QWORD *v32;

  v5 = v4;
  v30 = a2;
  v8 = type metadata accessor for LogMessage.StringInterpolation(0, a4);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OSLogger(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3468 != -1)
    swift_once(&qword_1007F3468, sub_10060249C);
  v16 = sub_1000117A8(v12, (uint64_t)qword_100857660);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_10000DF3C(&qword_1007FD430);
  v18 = type metadata accessor for LogMessage(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2);
  v20._countAndFlagsBits = 0x5370696B53646964;
  v20._object = (void *)0xED0000203A706574;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  v21 = a1[3];
  v22 = sub_100011064(a1, v21);
  v32 = (_QWORD *)v21;
  v23 = sub_1000117C0(v31);
  v24.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v23, v22, v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v31, v24);
  sub_1000131E0((uint64_t)v31);
  v25._countAndFlagsBits = 0x6E6F73616572202CLL;
  v25._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  v32 = &type metadata for String;
  v31[0] = v30;
  v31[1] = a3;
  v26 = swift_bridgeObjectRetain(a3);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v31, v26);
  sub_1000131E0((uint64_t)v31);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  LogMessage.init(stringInterpolation:)(v11);
  Logger.info(_:)(v19, v12, &protocol witness table for OSLogger);
  v28 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v28);
  swift_beginAccess(v5 + 32, v31, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(v5 + 32) + 16))
  {
    sub_100451348(0, 1);
    swift_endAccess(v31);
  }
  else
  {
    __break(1u);
  }
}

void sub_100012F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[40];

  swift_beginAccess(v0 + 32, v7, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v1 + 16))
  {
    sub_100011020(v1 + 32, (uint64_t)v8);
    v2 = sub_10000DF3C(&qword_1008107D0);
    if ((swift_dynamicCast(&v6, v8, v2, &type metadata for WelcomeOnboardingStep, 6) & 1) != 0)
    {
      v3 = v6;
      sub_10054A84C();
      v4 = swift_retain(v3);
      sub_10001348C(v5, v0, (uint64_t)&type metadata for WelcomeOnboardingStep, (uint64_t)&off_100748428, v4);
      swift_release_n(v3, 2);
    }
  }
}

void sub_100013008()
{
  sub_100013018(1);
}

void sub_100013010()
{
  sub_100013018(0);
}

void sub_100013018(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[40];

  v3 = v1;
  swift_beginAccess(v1 + 32, v13, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(v4 + 16))
  {
    sub_100011020(v4 + 32, (uint64_t)v14);
    v5 = sub_10000DF3C(&qword_1008107D0);
    v6 = type metadata accessor for AdPrivacyOnboardingStep();
    if ((swift_dynamicCast(&v12, v14, v5, v6, 6) & 1) != 0)
    {
      v7 = v12;
      v8 = sub_10040E928();
      objc_msgSend(v8, "setPersonalizedAds:", a1 & 1);

      sub_10040EEF4(v9);
      v10 = swift_retain(v7);
      sub_100013220(v11, v3, v10);
      swift_release_n(v7, 2);
    }
  }
}

void sub_1000130E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[40];

  swift_beginAccess(v0 + 32, v8, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v1 + 16))
  {
    sub_100011020(v1 + 32, (uint64_t)v9);
    v2 = sub_10000DF3C(&qword_1008107D0);
    if ((swift_dynamicCast(&v7, v9, v2, &type metadata for LocationPrivacyOnboardingStep, 6) & 1) != 0)
    {
      v4 = v7;
      sub_1002307B4(v3);
      v5 = swift_retain(v4);
      sub_10001348C(v6, v0, (uint64_t)&type metadata for LocationPrivacyOnboardingStep, (uint64_t)&off_100730610, v5);
      swift_release_n(v4, 2);
    }
  }
}

uint64_t sub_100013194()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for OnboardingPresenter()
{
  return objc_opt_self(_TtC22SubscribePageExtension19OnboardingPresenter);
}

uint64_t sub_1000131E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F6E90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100013220(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __n128 v22;
  Swift::String v23;
  __n128 v24;
  _QWORD v26[4];
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AdPrivacyOnboardingStep();
  v29 = &off_10073F1C8;
  v27[0] = a1;
  v13 = qword_1007F3468;
  swift_retain(a1);
  if (v13 != -1)
    swift_once(&qword_1007F3468, sub_10060249C);
  v14 = sub_1000117A8(v9, (uint64_t)qword_100857660);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  v15 = sub_10000DF3C(&qword_1007FD430);
  v16 = type metadata accessor for LogMessage(0);
  v17 = swift_allocObject(v15, ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
  v18._object = (void *)0x800000010062EA00;
  v18._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v28;
  v20 = sub_100011064(v27, v28);
  v26[3] = v19;
  v21 = sub_1000117C0(v26);
  v22.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v20, v19);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v26, v22);
  sub_1000131E0((uint64_t)v26);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.info(_:)(v17, v9, &protocol witness table for OSLogger);
  v24 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v24);
  swift_beginAccess(a2 + 32, v26, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16))
  {
    sub_100451348(0, 1);
    swift_endAccess(v26);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
  }
  else
  {
    __break(1u);
  }
}

void sub_10001348C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  __n128 v26;
  Swift::String v27;
  __n128 v28;
  _QWORD v30[4];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v9 = type metadata accessor for LogMessage.StringInterpolation(0, a5);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v30[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OSLogger(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a3;
  v33 = a4;
  v31[0] = a1;
  v17 = qword_1007F3468;
  swift_retain(a1);
  if (v17 != -1)
    swift_once(&qword_1007F3468, sub_10060249C);
  v18 = sub_1000117A8(v13, (uint64_t)qword_100857660);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
  v19 = sub_10000DF3C(&qword_1007FD430);
  v20 = type metadata accessor for LogMessage(0);
  v21 = swift_allocObject(v19, ((*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) | 7);
  *(_OWORD *)(v21 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
  v22._object = (void *)0x800000010062EA00;
  v22._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  v23 = v32;
  v24 = sub_100011064(v31, v32);
  v30[3] = v23;
  v25 = sub_1000117C0(v30);
  v26.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v25, v24, v23);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v30, v26);
  sub_1000131E0((uint64_t)v30);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  LogMessage.init(stringInterpolation:)(v12);
  Logger.info(_:)(v21, v13, &protocol witness table for OSLogger);
  v28 = swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v28);
  swift_beginAccess(a2 + 32, v30, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16))
  {
    sub_100451348(0, 1);
    swift_endAccess(v30);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  }
  else
  {
    __break(1u);
  }
}

void sub_1000136F0(void *a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  __n128 v23;
  Swift::String v24;
  __n128 v25;
  _QWORD v27[4];
  _QWORD v28[3];
  uint64_t v29;
  _UNKNOWN **v30;

  v5 = type metadata accessor for LogMessage.StringInterpolation(0, a3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OSLogger(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for JourneyDrivenOnboardingStep();
  v30 = &off_10073C108;
  v28[0] = a1;
  v13 = qword_1007F3468;
  v14 = a1;
  if (v13 != -1)
    swift_once(&qword_1007F3468, sub_10060249C);
  v15 = sub_1000117A8(v9, (uint64_t)qword_100857660);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = type metadata accessor for LogMessage(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_10066FBA0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
  v19._object = (void *)0x800000010062EA00;
  v19._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v20 = v29;
  v21 = sub_100011064(v28, v29);
  v27[3] = v20;
  v22 = sub_1000117C0(v27);
  v23.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v22, v21, v20);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v27, v23);
  sub_1000131E0((uint64_t)v27);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)(v8);
  Logger.info(_:)(v18, v9, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
  swift_beginAccess(a2 + 32, v27, 33, 0);
  if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16))
  {
    sub_100451348(0, 1);
    swift_endAccess(v27);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v28);
  }
  else
  {
    __break(1u);
  }
}

id CondensedEditorialSearchResultContentView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

char *CondensedEditorialSearchResultContentView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  double left;
  double bottom;
  double right;
  char *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  objc_class *v55;
  UITraitCollection v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t ObjectType;
  char v63[24];
  objc_super v64;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v10);
  v61 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v16;
  __chkstk_darwin(v16);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v4[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_itemLayoutContext];
  v22 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel;
  type metadata accessor for DynamicTypeLabel(0);
  v24 = v5;
  *(_QWORD *)&v5[v23] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v25 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel;
  *(_QWORD *)&v24[v25] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton;
  *(_QWORD *)&v24[v26] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v27 = enum case for CondensedSearchResultCardLayout.Configuration.standard(_:);
  v58 = v17;
  v59 = v18;
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 104);
  v28(&v24[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v18);
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_action] = 0;
  v29 = &v24[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_buttonHandler];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v30 = (double *)&v24[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize];
  v31 = v28(v20, v27, v18);
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v31);
  v60 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  v32 = v60(v20, v18);
  v33 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v32);
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *v30 = v33;
  *((_QWORD *)v30 + 1) = v35;

  v36 = (objc_class *)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v64.receiver = v24;
  v64.super_class = v36;
  v37 = objc_msgSendSuper2(&v64, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v41 = (char *)v37;
  objc_msgSend(v41, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v42 = *(void **)&v41[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel];
  objc_msgSend(v41, "addSubview:", v42);
  v43 = *(void **)&v41[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel];
  objc_msgSend(v41, "addSubview:", v43);
  v44 = *(void **)&v41[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton];
  objc_msgSend(v41, "addSubview:", v44);
  objc_msgSend(v42, "setLineBreakMode:", 4);
  objc_msgSend(v43, "setLineBreakMode:", 4);
  v45 = v44;
  v46 = objc_msgSend(v41, "traitCollection");
  v47 = v61;
  sub_100590BFC((uint64_t)v44, v46, v61);

  v48 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
  UIButton.configuration.setter(v47);
  v49 = sub_100590E04();
  v51 = v50;
  sub_100013EA0(v49, v50, &OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton);
  swift_bridgeObjectRelease(v51);
  v52 = &v41[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration];
  v53 = swift_beginAccess(&v41[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], v63, 0, 0);
  v54 = v59;
  (*(void (**)(char *, char *, uint64_t, __n128))(v58 + 16))(v20, v52, v59, v53);
  v55 = (objc_class *)objc_msgSend(v41, "traitCollection");
  v56.super.isa = v55;
  sub_10001423C((uint64_t)v20, v56);

  v60(v20, v54);
  return v41;
}

uint64_t type metadata accessor for CondensedEditorialSearchResultContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F4728;
  if (!qword_1007F4728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CondensedEditorialSearchResultContentView);
  return result;
}

uint64_t sub_100013E94(uint64_t a1, uint64_t a2)
{
  return sub_100013EA0(a1, a2, &OBJC_IVAR____TtC22SubscribePageExtension25CondensedAppEventCardView_viewButton);
}

uint64_t sub_100013EA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Class isa;
  uint64_t KeyPath;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  objc_class *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;

  v46 = a1;
  v6 = sub_10000DF3C(&qword_100800DD0);
  v7 = __chkstk_darwin(v6);
  v45 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FontSource(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AttributeContainer(0, v11);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AttributedString(0, v15);
  v48 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v21);
  v47 = (uint64_t)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v45 - v24;
  v26 = *(id *)&v3[*a3];
  UIButton.configuration.getter();

  v27 = swift_bridgeObjectRetain(a2);
  AttributeContainer.init()(v27);
  AttributedString.init(_:attributes:)(v46, a2, v17);
  if (qword_1007F2598 != -1)
    swift_once(&qword_1007F2598, sub_100415A10);
  v28 = type metadata accessor for FontUseCase(0);
  v29 = sub_1000117A8(v28, (uint64_t)qword_1008555B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v13, v29, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for FontSource.useCase(_:), v9);
  v30 = objc_msgSend(v3, "traitCollection");
  isa = FontSource.font(compatibleWith:)((UITraitCollection)v30).super.isa;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  KeyPath = swift_getKeyPath(&unk_10066FDA8);
  __chkstk_darwin(KeyPath);
  *(&v45 - 2) = v33;
  v34 = swift_getKeyPath(&unk_10066FDD8);
  v50 = isa;
  v35 = sub_100019294();
  v36 = isa;
  AttributedString.subscript.setter(&v50, v34, v35);
  v37 = type metadata accessor for UIButton.Configuration(0);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v25, 1, v37);
  v40 = v48;
  v39 = v49;
  if (!v38)
  {
    v41 = v45;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v20, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
    UIButton.Configuration.attributedTitle.setter(v41);
  }
  v42 = v47;
  sub_1000194E4((uint64_t)v25, v47, &qword_100804D10);
  v43 = v26;
  UIButton.configuration.setter(v42);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v39);
  return sub_100011088((uint64_t)v25, &qword_100804D10);
}

void sub_10001423C(uint64_t a1, UITraitCollection a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  void *v13;
  id v14;
  uint64_t v15;

  v4 = type metadata accessor for FontUseCase(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel);
  objc_msgSend(v9, "setNumberOfLines:", CondensedSearchResultCardLayout.Configuration.headerNumberOfLines.getter(v6));
  v10 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel);
  objc_msgSend(v10, "setNumberOfLines:", CondensedSearchResultCardLayout.Configuration.titleNumberOfLines(in:)(a2));
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  CondensedSearchResultCardLayout.Configuration.headerFont.getter();
  v11 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v8, a2.super.isa);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  objc_msgSend(v9, "setFont:", v11);

  CondensedSearchResultCardLayout.Configuration.titleFont.getter();
  v13 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v8, a2.super.isa);
  v12(v8, v4);
  objc_msgSend(v10, "setFont:", v13);

  v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v9, "setTextColor:", v14);

}

Swift::Void __swiftcall CondensedEditorialSearchResultContentView.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t OpaqueTypeConformance2;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t ObjectType;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  void *v89;
  _QWORD v90[3];
  uint64_t v91;
  void *v92;
  _QWORD v93[3];
  uint64_t v94;
  void *v95;
  __int128 v96;
  __int128 v97;
  void *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  objc_super v102;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_10000DF3C(&qword_1007F46D8);
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  v3 = __chkstk_darwin(v2);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for CondensedSearchResultCardLayout(0, v3);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LayoutRect(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin(v6);
  v79 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v71 - v16;
  __chkstk_darwin(v18);
  v72 = (char *)&v71 - v19;
  v20 = (objc_class *)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v102.receiver = v1;
  v102.super_class = v20;
  objc_msgSendSuper2(&v102, "layoutSubviews");
  v21 = LayoutMarginsAware<>.layoutFrame.getter(v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView];
  v71 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView;
  if (v28)
  {
    *((_QWORD *)&v100 + 1) = type metadata accessor for ArtworkView(0);
    v101 = sub_10000E99C((unint64_t *)&qword_1007F6C60, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    *(_QWORD *)&v99 = v28;
  }
  else if (*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid])
  {
    *(_QWORD *)&v87 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid];
    v29 = type metadata accessor for IconArtworkGridView();
    Measurable.placeable.getter(&v99, v29, &protocol witness table for UIView);
  }
  else
  {
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
  }
  v30 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid;
  v31 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid];
  v32 = v28;
  if (v31)
    objc_msgSend(v31, "_setContinuousCornerRadius:", 10.0);
  v33 = objc_msgSend(v1, "traitCollection", v71);
  v34 = UITraitCollection.prefersAccessibilityLayouts.getter(v33);

  if ((v34 & 1) != 0)
  {
    v35 = &v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration];
    v36 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], &v86, 0, 0);
    v37 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v35, v8, v36);
    CondensedSearchResultCardLayout.Configuration.metrics.getter(v37);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v38 = (uint64_t)v72;
    CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(*(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize], *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize + 8]);
    v39 = v84;
    v40 = *(void (**)(char *, uint64_t))(v83 + 8);
    v40(v17, v84);
    v41 = *(void **)&v1[v71];
    if (v41)
    {
      v88 = type metadata accessor for ArtworkView(0);
      v89 = &protocol witness table for UIView;
      *(_QWORD *)&v87 = v41;
      sub_100010F3C(&v87, (uint64_t)&v96);
    }
    else
    {
      v59 = *(void **)&v1[v30];
      if (v59)
      {
        *((_QWORD *)&v97 + 1) = type metadata accessor for IconArtworkGridView();
        v98 = &protocol witness table for UIView;
        *(_QWORD *)&v96 = v59;
      }
      else
      {
        v98 = 0;
        v96 = 0u;
        v97 = 0u;
      }
      v60 = v59;
      v41 = 0;
    }
    v61 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel];
    v94 = type metadata accessor for DynamicTypeLabel(0);
    v95 = &protocol witness table for UIView;
    v93[0] = v61;
    v62 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel];
    v91 = v94;
    v92 = &protocol witness table for UILabel;
    v90[0] = v62;
    v63 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton];
    v85[3] = sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
    v85[4] = &protocol witness table for UIView;
    v85[0] = v63;
    v64 = v41;
    v65 = v61;
    v66 = v62;
    v67 = v63;
    sub_100014AF0(v38, (uint64_t)&v96, (void (*)(_QWORD, _QWORD))v93, v90, (uint64_t)v85, &v87);
    v40((char *)v38, v39);
    sub_100011088((uint64_t)&v96, &qword_1007FAF60);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v85);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v90);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v93);
    v68 = v88;
    v69 = v89;
    sub_100011064(&v87, v88);
    v70 = v79;
    dispatch thunk of Layout.placeChildren(relativeTo:in:)(v1, v68, v69, v21, v23, v25, v27);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v70, v82);
    sub_100011088((uint64_t)&v99, &qword_1007F6C30);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v87);
  }
  else
  {
    v42 = &v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration];
    v43 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], v85, 0, 0);
    v44 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v42, v8, v43);
    CondensedSearchResultCardLayout.Configuration.metrics.getter(v44);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(*(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize], *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize + 8]);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v14, v84);
    sub_1000194E4((uint64_t)&v99, (uint64_t)&v87, &qword_1007F6C30);
    v45 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel];
    *((_QWORD *)&v97 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v98 = &protocol witness table for UILabel;
    *(_QWORD *)&v96 = v45;
    v46 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel];
    v94 = *((_QWORD *)&v97 + 1);
    v95 = &protocol witness table for UILabel;
    v93[0] = v46;
    v47 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton];
    v91 = sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
    v92 = &protocol witness table for UIButton;
    v90[0] = v47;
    v48 = v45;
    v49 = v46;
    v50 = v47;
    v51 = v73;
    CondensedSearchResultCardLayout.init(metrics:artwork:headerText:titleText:viewButton:isTextBaselineAligned:)(v17, &v87, &v96, v93, v90, 1);
    v52 = objc_msgSend(v1, "traitCollection");
    v53 = sub_10000E99C(&qword_1007F46E0, (uint64_t (*)(uint64_t))&type metadata accessor for CondensedSearchResultCardLayout, (uint64_t)&protocol conformance descriptor for CondensedSearchResultCardLayout);
    v55 = v75;
    v54 = v76;
    v56 = dispatch thunk of CustomLayout.layout.getter(v76, v53);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v56, &opaque type descriptor for <<opaque return type of CondensedSearchResultCardLayout.layout>>, 1);
    v58 = v78;
    dispatch thunk of Placeable.place(at:with:)(v52, v78, OpaqueTypeConformance2, v21);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v58);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v54);
    sub_100011088((uint64_t)&v99, &qword_1007F6C30);
  }
}

uint64_t sub_100014AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD)@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _BYTE *v77;
  void (*v78)(_BYTE *, _QWORD, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  void (*v104)(_BYTE *, uint64_t);
  _BYTE v106[4];
  unsigned int v107;
  void (*v108)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v109;
  _QWORD *v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(_BYTE *, uint64_t);
  uint64_t v122;
  void (*v123)(_BYTE *);
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  void (*v134)(_QWORD, _QWORD);
  _BYTE *v135;
  _BYTE *v136;
  __int128 v137;
  _QWORD *v138;
  uint64_t v139;
  _OWORD v140[2];
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  _QWORD v145[5];

  v114 = a5;
  v110 = a4;
  v134 = a3;
  v116 = a6;
  v117 = type metadata accessor for VerticalFlowLayout.HorizontalPlacement(0);
  v122 = *(_QWORD *)(v117 - 8);
  v8 = __chkstk_darwin(v117);
  v10 = &v106[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v106[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for VerticalFlowLayout.VerticalPlacement(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v106[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v106[-v21];
  v120 = type metadata accessor for VerticalFlowLayout.Child(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v115 = &v106[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v136 = &v106[-v25];
  __chkstk_darwin(v26);
  v135 = &v106[-v27];
  __chkstk_darwin(v28);
  v132 = &v106[-v29];
  __chkstk_darwin(v30);
  *(_QWORD *)&v137 = &v106[-v31];
  v138 = _swiftEmptyArrayStorage;
  sub_1000194E4(a2, (uint64_t)&v142, &qword_1007FAF60);
  v118 = a1;
  v113 = v11;
  v112 = v15;
  v111 = v22;
  v109 = v10;
  if (*((_QWORD *)&v143 + 1))
  {
    v130 = (uint64_t)v19;
    v32 = sub_100010F3C(&v142, (uint64_t)v145);
    v33 = CondensedSearchResultCardLayout.Metrics.artworkTopMargin.getter(&v142, v32);
    CondensedSearchResultCardLayout.Metrics.artworkAXBottomMargin.getter(v140, v33);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104))(v22, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v16);
    v34 = sub_10000DF3C((uint64_t *)&unk_100819230);
    v133 = v17;
    v35 = v16;
    v36 = swift_allocObject(v34, ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 3 * *(_QWORD *)(v12 + 72), *(unsigned __int8 *)(v12 + 80) | 7);
    *(_OWORD *)(v36 + 16) = xmmword_10066F860;
    v37 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
    v38 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v37);
    v39 = v119;
    static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v38);
    v139 = v36;
    v40 = sub_10000E99C(&qword_1007F4750, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
    v41 = sub_10000DF3C((uint64_t *)&unk_100819240);
    v42 = sub_100019528();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v139, v41, v42, v11, v40);
    v43 = v122;
    v44 = v117;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v122 + 104))(v10, enum case for VerticalFlowLayout.HorizontalPlacement.leading(_:), v117);
    v45 = v137;
    static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v145, &v142, v140, v22, v10, v15);
    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v10, v44);
    v131 = v12;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    v46 = *(void (**)(_BYTE *, uint64_t))(v133 + 8);
    v129 = v35;
    v46(v22, v35);
    sub_100011088((uint64_t)v140, (uint64_t *)&unk_100803C00);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v142);
    v47 = v132;
    v48 = v120;
    (*(void (**)(_BYTE *, uint64_t))(v39 + 16))(v132, v45);
    v49 = (unint64_t)v138;
    if ((swift_isUniquelyReferenced_nonNull_native(v138) & 1) == 0)
      v49 = sub_1002006F8(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
    v51 = *(_QWORD *)(v49 + 16);
    v50 = *(_QWORD *)(v49 + 24);
    v52 = v134;
    v53 = v131;
    v19 = (_BYTE *)v130;
    if (v51 >= v50 >> 1)
      v49 = sub_1002006F8(v50 > 1, v51 + 1, 1, v49);
    *(_QWORD *)(v49 + 16) = v51 + 1;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v39 + 32))(v49+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v51, v47, v48);
    v138 = (_QWORD *)v49;
    (*(void (**)(_QWORD, uint64_t))(v39 + 8))(v137, v48);
    v54 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v145);
    v16 = v129;
    v17 = v133;
    v55 = (uint64_t)v52;
  }
  else
  {
    v54 = sub_100011088((uint64_t)&v142, &qword_1007FAF60);
    v55 = (uint64_t)v134;
    v53 = v12;
  }
  CondensedSearchResultCardLayout.Metrics.headerTextSpace.getter(v145, v54);
  v144 = 0;
  v142 = 0u;
  v143 = 0u;
  sub_100011020(v55, (uint64_t)v140);
  v56 = sub_10000DF3C((uint64_t *)&unk_1007F8670);
  v57 = sub_10000DF3C((uint64_t *)&unk_10080E210);
  if (swift_dynamicCast(&v139, v140, v56, v57, 6))
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v139);
    v58 = *(void (**)(_QWORD))(v17 + 104);
    v107 = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
    v108 = (void (*)(_BYTE *, _QWORD, uint64_t))v58;
    v58(v19);
  }
  else
  {
    v108 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104);
    v108(v19, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v16);
    v107 = enum case for VerticalFlowLayout.VerticalPlacement.firstBaseline(_:);
  }
  v59 = v17;
  v133 = sub_10000DF3C((uint64_t *)&unk_100819230);
  v60 = *(_QWORD *)(v53 + 72);
  v61 = *(unsigned __int8 *)(v53 + 80);
  v130 = 2 * v60;
  v129 = v60;
  v132 = (_BYTE *)(((v61 + 32) & ~v61) + 3 * v60);
  v128 = (v61 + 32) & ~v61;
  v131 = v61 | 7;
  v62 = swift_allocObject(v133, v132, v61 | 7);
  v137 = xmmword_10066F860;
  *(_OWORD *)(v62 + 16) = xmmword_10066F860;
  v63 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v64 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v63);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v64);
  *(_QWORD *)&v140[0] = v62;
  v65 = sub_10000E99C(&qword_1007F4750, (uint64_t (*)(uint64_t))&type metadata accessor for VerticalFlowLayout.ExclusionCondition, (uint64_t)&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition);
  v126 = v65;
  v66 = sub_10000DF3C((uint64_t *)&unk_100819240);
  v125 = v66;
  v127 = sub_100019528();
  v67 = v112;
  v68 = v113;
  dispatch thunk of SetAlgebra.init<A>(_:)(v140, v66, v127, v113, v65);
  v124 = enum case for VerticalFlowLayout.HorizontalPlacement.leading(_:);
  v69 = v122;
  v123 = *(void (**)(_BYTE *))(v122 + 104);
  v70 = v109;
  v71 = v117;
  v123(v109);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v134, v145, &v142, v19, v70, v67);
  v134 = *(void (**)(_QWORD, _QWORD))(v69 + 8);
  v134(v70, v71);
  v122 = *(_QWORD *)(v53 + 8);
  ((void (*)(_BYTE *, uint64_t))v122)(v67, v68);
  v121 = *(void (**)(_BYTE *, uint64_t))(v59 + 8);
  v121(v19, v16);
  sub_100011088((uint64_t)&v142, (uint64_t *)&unk_100803C00);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v145);
  v72 = v110[3];
  v73 = v110[4];
  v74 = sub_100011064(v110, v72);
  v145[3] = v72;
  v145[4] = *(_QWORD *)(v73 + 8);
  v75 = sub_1000117C0(v145);
  v76 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v75, v74, v72);
  CondensedSearchResultCardLayout.Metrics.titleTextSpace.getter(&v142, v76);
  v141 = 0;
  memset(v140, 0, sizeof(v140));
  v77 = v111;
  v78 = v108;
  v108(v111, v107, v16);
  v79 = swift_allocObject(v133, v132, v131);
  *(_OWORD *)(v79 + 16) = v137;
  v80 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v81 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v80);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v81);
  v139 = v79;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v139, v125, v127, v68, v126);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v123)(v70, v124, v71);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v145, &v142, v140, v77, v70, v67);
  v134(v70, v71);
  ((void (*)(_BYTE *, uint64_t))v122)(v67, v68);
  v121(v77, v16);
  sub_100011088((uint64_t)v140, (uint64_t *)&unk_100803C00);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v142);
  v82 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v145);
  v83 = CondensedSearchResultCardLayout.Metrics.viewButtonAXTopMargin.getter(v145, v82);
  CondensedSearchResultCardLayout.Metrics.artworkBottomMargin.getter(&v142, v83);
  v78(v77, enum case for VerticalFlowLayout.VerticalPlacement.top(_:), v16);
  v84 = swift_allocObject(v133, v132, v131);
  *(_OWORD *)(v84 + 16) = v137;
  v85 = static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  v86 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter(v85);
  static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v86);
  *(_QWORD *)&v140[0] = v84;
  dispatch thunk of SetAlgebra.init<A>(_:)(v140, v125, v127, v68, v126);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v123)(v70, v124, v71);
  v87 = v115;
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)(v114, v145, &v142, v77, v70, v67);
  v134(v70, v71);
  ((void (*)(_BYTE *, uint64_t))v122)(v67, v68);
  v121(v77, v16);
  sub_100011088((uint64_t)&v142, (uint64_t *)&unk_100803C00);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v145);
  v88 = sub_10000DF3C((uint64_t *)&unk_1007F4760);
  v89 = v119;
  v90 = *(_QWORD *)(v119 + 72);
  v91 = *(unsigned __int8 *)(v119 + 80);
  v92 = (v91 + 32) & ~v91;
  v93 = 2 * v90;
  v94 = swift_allocObject(v88, v92 + 3 * v90, v91 | 7);
  *(_OWORD *)(v94 + 16) = v137;
  v95 = v94 + v92;
  v96 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v89 + 16);
  v97 = v135;
  v98 = v120;
  v96(v95, v135, v120);
  v99 = v95 + v90;
  v100 = v136;
  v96(v99, v136, v98);
  v96(v95 + v93, v87, v98);
  sub_100019724(v94);
  v101 = v138;
  v102 = type metadata accessor for VerticalFlowLayout(0);
  v103 = v116;
  v116[3] = v102;
  v103[4] = &protocol witness table for VerticalFlowLayout;
  v103[5] = &protocol witness table for VerticalFlowLayout;
  sub_1000117C0(v103);
  VerticalFlowLayout.init(expandChildrenToFit:children:)(0, v101);
  v104 = *(void (**)(_BYTE *, uint64_t))(v89 + 8);
  v104(v87, v98);
  v104(v100, v98);
  return ((uint64_t (*)(_BYTE *, uint64_t))v104)(v97, v98);
}

Swift::Void __swiftcall CondensedEditorialSearchResultContentView.prepareForReuse()()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_10000DF3C(&qword_100804D10);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel], "setText:", 0, v2);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel], "setText:", 0);
  sub_100017284(0);
  v5 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid;
  v6 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid];
  if (v6)
  {
    objc_msgSend(v6, "removeFromSuperview");
    v7 = *(void **)&v0[v5];
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)&v0[v5] = 0;

  if (*(_QWORD *)&v0[v5])
    objc_msgSend(v0, "addSubview:");
  objc_msgSend(v0, "setNeedsLayout");
  v8 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  UIButton.configuration.setter(v4);
}

Swift::Void __swiftcall CondensedEditorialSearchResultContentView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  objc_class *v32;
  UITraitCollection v33;
  uint64_t v34;
  char v35[24];
  objc_super v36;

  v2 = v1;
  isa = a1.value.super.isa;
  swift_getObjectType();
  v34 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v7);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (objc_class *)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  v36.receiver = v1;
  v36.super_class = v10;
  objc_msgSendSuper2(&v36, "traitCollectionDidChange:", isa);
  v11 = objc_msgSend(v1, "traitCollection");
  v12 = objc_msgSend(v11, "userInterfaceStyle");

  if (!isa || v12 != -[objc_class userInterfaceStyle](isa, "userInterfaceStyle"))
  {
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton];
    v14 = objc_msgSend(v2, "traitCollection", v34);
    sub_100590BFC(v13, v14, (uint64_t)v9);

    v15 = type metadata accessor for UIButton.Configuration(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
    UIButton.configuration.setter(v9);
    objc_msgSend(v2, "setNeedsLayout");
  }
  v16 = objc_msgSend(v2, "traitCollection", v34);
  v17 = objc_msgSend(v16, "preferredContentSizeCategory");

  if (!isa)
  {

LABEL_10:
    v26 = sub_100590E04();
    v28 = v27;
    sub_100013EA0(v26, v27, &OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton);
    swift_bridgeObjectRelease(v28);
    v29 = &v2[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration];
    v30 = swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], v35, 0, 0);
    v31 = v34;
    (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v6, v29, v34, v30);
    v32 = (objc_class *)objc_msgSend(v2, "traitCollection");
    v33.super.isa = v32;
    sub_10001423C((uint64_t)v6, v33);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
    objc_msgSend(v2, "setNeedsLayout");
    return;
  }
  v18 = -[objc_class preferredContentSizeCategory](isa, "preferredContentSizeCategory");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v24 = v22;
  if (v19 == v23 && v21 == v22)
  {

    swift_bridgeObjectRelease_n(v21, 2);
    return;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);

  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) == 0)
    goto LABEL_10;
}

uint64_t sub_100015C68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitCollection.getter();
  *a1 = result;
  return result;
}

double sub_100015C90(uint64_t a1, __n128 a2, double a3, uint64_t a4, objc_class *a5)
{
  double v6;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  Class v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Class v48;
  Swift::Int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  char v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD *);
  unsigned int v73;
  uint64_t v74;
  void (*v75)(char *);
  unsigned int v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  UITraitCollection v88;
  _QWORD v89[5];
  _QWORD v90[5];
  _QWORD v91[5];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v88.super.isa = a5;
  v6 = a2.n128_f64[0];
  v87 = type metadata accessor for FontSource(0, a2);
  v79 = *(_QWORD *)(v87 - 8);
  v8 = __chkstk_darwin(v87);
  v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for LabelPlaceholderCompatibility(0, v8);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v80 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AspectRatio(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - v20;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v22);
  AspectRatio.init(_:_:)(v23);
  v77 = a1;
  sub_1000177B4();
  v25 = v24;
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v28 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v84 = v21;
  v86 = v15;
  v29 = v28(v21, v15);
  v85 = (void (*)(uint64_t, uint64_t))v28;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v29);
  CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(v25, v27);
  v28(v18, v15);
  v30 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v81 = LayoutViewPlaceholder.init(representing:)(v25, v27);
  v31 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter();
  v71 = v32;
  v33 = v78;
  CondensedSearchResultCardLayout.Configuration.headerFont.getter();
  v76 = enum case for FontSource.useCase(_:);
  v34 = v79;
  v75 = *(void (**)(char *))(v79 + 104);
  v35 = v87;
  v75(v33);
  isa = v88.super.isa;
  v37 = FontSource.font(compatibleWith:)(v88).super.isa;
  v79 = *(_QWORD *)(v34 + 8);
  v38.n128_f64[0] = ((double (*)(char *, uint64_t))v79)(v33, v35);
  v39 = CondensedSearchResultCardLayout.Configuration.headerNumberOfLines.getter(v38);
  v40 = type metadata accessor for Feature(0);
  v93 = v40;
  v74 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v94 = v74;
  v41 = sub_1000117C0(&v92);
  v73 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v72 = *(void (**)(_QWORD *))(*(_QWORD *)(v40 - 8) + 104);
  v72(v41);
  LOBYTE(v12) = isFeatureEnabled(_:)(&v92);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v92);
  v68 = v12 & 1;
  v42 = v80;
  v43 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v31, v71, v37, 4, 4, 0, v39, 0, v68);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v97, v43);
  v82 = *(_QWORD *)(v82 + 8);
  v44 = v83;
  v45 = ((uint64_t (*)(char *, uint64_t))v82)(v42, v83);
  v77 = EditorialSearchResult.title.getter(v45);
  v71 = v46;
  CondensedSearchResultCardLayout.Configuration.titleFont.getter();
  v47 = v87;
  ((void (*)(char *, _QWORD, uint64_t))v75)(v33, v76, v87);
  v48 = FontSource.font(compatibleWith:)((UITraitCollection)isa).super.isa;
  ((void (*)(char *, uint64_t))v79)(v33, v47);
  v49 = CondensedSearchResultCardLayout.Configuration.titleNumberOfLines(in:)((UITraitCollection)isa);
  v93 = v40;
  v94 = v74;
  v50 = sub_1000117C0(&v92);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v72)(v50, v73, v40);
  LOBYTE(v39) = isFeatureEnabled(_:)(&v92);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v92);
  LOBYTE(v69) = v39 & 1;
  v51 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v77, v71, v48, 4, 4, 0, v49, 0, v69);
  LabelPlaceholderCompatibility.layoutTextView.getter(&v96, v51);
  v52 = ((uint64_t (*)(char *, uint64_t))v82)(v42, v44);
  v53 = static CondensedSearchResultCardLayout.estimatedSizeForViewButtonInAXLayouts.getter(v52);
  v55 = v54;
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v56 = LayoutViewPlaceholder.init(representing:)(v53, v55);
  v91[4] = &protocol witness table for LayoutViewPlaceholder;
  v91[3] = v30;
  v57 = v81;
  v91[0] = v81;
  v58 = v98;
  v59 = v99;
  v60 = sub_100011064(&v97, v98);
  v90[3] = v58;
  v90[4] = *(_QWORD *)(v59 + 8);
  v61 = sub_1000117C0(v90);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v61, v60, v58);
  v89[4] = &protocol witness table for LayoutViewPlaceholder;
  v89[3] = v30;
  v89[0] = v56;
  swift_retain(v57);
  swift_retain(v56);
  v62 = (uint64_t)v84;
  sub_100014AF0((uint64_t)v84, (uint64_t)v91, (void (*)(_QWORD, _QWORD))v90, &v96, (uint64_t)v89, &v92);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v89);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v90);
  sub_100011088((uint64_t)v91, &qword_1007FAF60);
  v63 = v93;
  v64 = v95;
  sub_100011064(&v92, v93);
  Measurable.measurements(fitting:with:)(v88.super.isa, v63, v64, v6, a3);
  v66 = v65;
  swift_release(v57);
  swift_release(v56);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v96);
  v85(v62, v86);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v92);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v97);
  return v66;
}

uint64_t sub_100016344(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[7];
  _BYTE v22[24];
  _QWORD v23[10];
  _QWORD v24[10];

  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v24[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v9);
    v12 = (uint64_t *)(a1 + 32);
    do
    {
      v13 = *v12;
      v12 += 2;
      swift_retain(v13);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = *(_QWORD *)(v24[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized ContiguousArray._endMutation()(v16);
      --v9;
    }
    while (v9);
    v10 = (_QWORD *)v24[0];
  }
  if (qword_1007F1598 != -1)
    swift_once(&qword_1007F1598, sub_1001BF220);
  v17 = sub_1000193A4((uint64_t)&xmmword_1008525E0, (uint64_t)v24);
  if (a4 > 0.0 && a5 > 0.0)
  {
    __chkstk_darwin(v17);
    v21[2] = v10;
    v21[3] = a3;
    *(CGFloat *)&v21[4] = a4;
    *(CGFloat *)&v21[5] = a5;
    v18 = sub_100019420();
    Copyable.copyWithOverrides(in:)(v23, sub_100019414, v21, &type metadata for IconArtworkGridView.Config, v18);
    v19 = a2 + OBJC_IVAR____TtC22SubscribePageExtension19IconArtworkGridView_config;
    swift_beginAccess(a2 + OBJC_IVAR____TtC22SubscribePageExtension19IconArtworkGridView_config, v22, 33, 0);
    sub_100019464((uint64_t)v23, v19);
    swift_endAccess(v22);
    sub_1001BF828();
    sub_1000193E0((uint64_t)v23);
    sub_1001BFBA0(a4, a5);
  }
  swift_bridgeObjectRelease(v10);
  return sub_1000193E0((uint64_t)v24);
}

void CondensedEditorialSearchResultContentView.applyData(from:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  char *v31;
  unsigned int *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  void (*v41)(char *, uint64_t);
  uint64_t KeyPath;
  void *v43;
  UITraitCollection v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  __n128 v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  double v63;
  double v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  double v76;
  double v77;
  double v78;
  double v79;
  id v80;
  double *v81;
  __objc2_meth_list **p_base_meths;
  id v83;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  double v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  _QWORD v109[3];

  v103 = a2;
  v3 = type metadata accessor for AspectRatio(0);
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  __chkstk_darwin(v3);
  v98 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v101 = *(_QWORD *)(v5 - 8);
  v102 = v5;
  __chkstk_darwin(v5);
  v108 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EditorialSearchResultType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v96 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v96 - v15;
  v107 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v17 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v96 - v21;
  v24 = __chkstk_darwin(v23);
  v106 = (char *)&v96 - v25;
  v26 = type metadata accessor for EditorialSearchResult(0, v24);
  v27 = sub_10000E99C(&qword_100809120, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v105 = a1;
  v28 = ItemLayoutContext.typedModel<A>(as:)(v109, v26, v26, v27);
  if (v109[0])
  {
    v97 = v109[0];
    EditorialSearchResult.type.getter(v28);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v16, v7);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
    if (v29 == enum case for EditorialSearchResultType.category(_:))
    {
      v30 = v107;
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v22, enum case for CondensedSearchResultCardLayout.Configuration.category(_:), v107);
      v31 = v104;
      goto LABEL_10;
    }
    v30 = v107;
    v31 = v104;
    if (v29 == enum case for EditorialSearchResultType.story(_:))
    {
      v32 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.stories(_:);
    }
    else
    {
      if (v29 != enum case for EditorialSearchResultType.developer(_:))
      {
        v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
        if (v29 != enum case for EditorialSearchResultType.appEventStory(_:))
        {
          v34(v22, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v107);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_10:
          v35 = (uint64_t)v106;
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v106, v22, v30);
          v36 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
          v37 = v36(v16, v7);
          v38 = v30;
          CondensedSearchResultCardLayout.Configuration.metrics.getter(v37);
          (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v35, v30);
          v39 = &v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration];
          v40 = swift_beginAccess(&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], v109, 33, 0);
          (*(void (**)(char *, char *, uint64_t, __n128))(v17 + 24))(v39, v19, v38, v40);
          swift_endAccess(v109);
          objc_msgSend(v31, "setNeedsLayout");
          v41 = *(void (**)(char *, uint64_t))(v17 + 8);
          v41(v19, v38);
          KeyPath = swift_getKeyPath(&unk_10066FC10);
          ItemLayoutContext.subscript.getter(v109);
          swift_release(KeyPath);
          v43 = (void *)v109[0];
          v44.super.isa = (Class)v109[0];
          sub_10001423C(v35, v44);

          v45 = v97;
          v46 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter();
          v48 = v47;
          EditorialSearchResult.type.getter(v46);
          sub_100016C94(v46, v48, (uint64_t)v10);
          v49 = swift_bridgeObjectRelease(v48);
          v50 = ((uint64_t (*)(char *, uint64_t, __n128))v36)(v10, v7, v49);
          v51 = *(void **)&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel];
          EditorialSearchResult.title.getter(v50);
          v104 = (char *)v41;
          if (v52)
          {
            v54 = v52;
            v55 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v53 = swift_bridgeObjectRelease(v54).n128_u64[0];
          }
          else
          {
            v55 = 0;
          }
          v57 = v102;
          v56 = v103;
          v58 = v101;
          objc_msgSend(v51, "setText:", v55, v53);

          v59 = EditorialSearchResult.collectionAdamIds.getter();
          if (v59)
          {
            v60 = v59;
            v61 = type metadata accessor for AdamId(0);
            v62 = Array.isNotEmpty.getter(v60, v61);
            swift_bridgeObjectRelease(v60);
            if ((v62 & 1) != 0)
            {
              v63 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v59);
              v65 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IconArtworkGridView()), "initWithFrame:", 0.0, 0.0, v63, v64);
              v66 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid;
              v67 = *(void **)&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid];
              if (v67)
              {
                objc_msgSend(v67, "removeFromSuperview");
                v68 = *(void **)&v31[v66];
              }
              else
              {
                v68 = 0;
              }
              *(_QWORD *)&v31[v66] = v65;
              v83 = v65;

              if (*(_QWORD *)&v31[v66])
                objc_msgSend(v31, "addSubview:");
              p_base_meths = &TodayCardChinLockupListView.base_meths;
              objc_msgSend(v31, "setNeedsLayout");

LABEL_27:
              v85 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v84);
              v79 = v86;
              v81 = (double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize];
              *(double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize] = v85;
              goto LABEL_28;
            }
          }
          v69 = EditorialSearchResult.editorialVideo.getter(v59);
          if (v69)
          {
            v70 = v69;
            v71 = Video.preview.getter();
            swift_release(v71);
            swift_release(v70);
          }
          else
          {
            v73 = EditorialSearchResult.editorialArtwork.getter();
            v74 = swift_release(v73);
            if (!v73)
            {
              v91 = EditorialSearchResult.iconArtwork.getter(v74);
              swift_release(v91);
              p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
              if (!v91)
                goto LABEL_29;
              v93 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v92);
              v95 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v93, v94);
              sub_100017284(v95);

              goto LABEL_27;
            }
          }
          v75 = v98;
          AspectRatio.init(_:_:)(v72);
          sub_1000177B4();
          v77 = v76;
          v79 = v78;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v75, v100);
          v80 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v77, v79);
          sub_100017284(v80);

          v81 = (double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize];
          *(double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize] = v77;
          p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
LABEL_28:
          v81[1] = v79;
          objc_msgSend(v31, (SEL)p_base_meths[408]);
LABEL_29:
          v87 = swift_allocObject(&unk_1007223E0, 24, 7);
          swift_unknownObjectWeakInit(v87 + 16, v31);
          v88 = swift_allocObject(&unk_100722408, 24, 7);
          swift_weakInit(v88 + 16, v45);
          v89 = (_QWORD *)swift_allocObject(&unk_100722430, 40, 7);
          v89[2] = v87;
          v89[3] = v88;
          v89[4] = v56;
          swift_retain(v87);
          swift_retain(v88);
          swift_retain(v56);
          sub_10001739C((uint64_t)sub_100018EFC, (uint64_t)v89);
          v90 = swift_release(v89);
          (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v108, v57, v90);
          ((void (*)(char *, uint64_t))v104)(v106, v107);
          swift_release(v87);
          objc_msgSend(v31, (SEL)p_base_meths[408], swift_release(v88).n128_f64[0]);
          swift_release(v45);
          return;
        }
        v33 = enum case for CondensedSearchResultCardLayout.Configuration.appEvent(_:);
LABEL_9:
        v34(v22, v33, v107);
        goto LABEL_10;
      }
      v32 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.developer(_:);
    }
    v33 = *v32;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
    goto LABEL_9;
  }
}

void sub_100016C94(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  unsigned int *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  NSString v23;
  Swift::String v24;
  unint64_t v25;
  id v26;
  NSString v27;
  id v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;

  v4 = v3;
  v8 = type metadata accessor for SystemImage(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialSearchResultType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
    if (v16 == enum case for EditorialSearchResultType.category(_:)
      || v16 == enum case for EditorialSearchResultType.story(_:))
    {
      v18 = (unsigned int *)&enum case for SystemImage.appstore(_:);
    }
    else
    {
      if (v16 != enum case for EditorialSearchResultType.developer(_:))
      {
        v29 = *(void (**)(char *, uint64_t))(v13 + 8);
        swift_bridgeObjectRetain(a2);
        v29(v15, v12);
        v30 = objc_allocWithZone((Class)NSMutableAttributedString);
        v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(a2);
        v28 = objc_msgSend(v30, "initWithString:", v23);
        v21 = 0;
        goto LABEL_12;
      }
      v18 = (unsigned int *)&enum case for SystemImage.personCropSquare(_:);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *v18, v8);
    swift_bridgeObjectRetain(a2);
    v19 = (void *)static SystemImage.load(_:with:)(v11, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v20 = (void *)objc_opt_self(NSTextAttachment);
    v21 = v19;
    v22 = objc_msgSend(v20, "textAttachmentWithImage:", v21);
    v23 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v22);
    v33 = 32;
    v34 = 0xE100000000000000;
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(a2);
    v25 = v34;
    v26 = objc_allocWithZone((Class)NSMutableAttributedString);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    v28 = objc_msgSend(v26, "initWithString:", v27);

    objc_msgSend(v28, "insertAttributedString:atIndex:", v23, 0);
LABEL_12:

    v31 = *(void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel);
    v32 = v28;
    objc_msgSend(v31, "setAttributedText:", v32);

  }
}

double sub_100016F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *Strong;
  double result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD v20[4];
  _BYTE v21[24];
  _BYTE v22[24];

  v7 = type metadata accessor for ActionRunner.Origin(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    v14 = UIResponder.nearestActionRunner.getter();

    if (v14)
    {
      swift_beginAccess(a3 + 16, v21, 0, 0);
      v15 = swift_weakLoadStrong(a3 + 16);
      if (v15 && (v16 = v15, v17 = EditorialSearchResult.clickAction.getter(), swift_release(v16), v17))
      {
        v20[3] = type metadata accessor for CondensedEditorialSearchResultContentView(0);
        v20[0] = v13;
        (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ActionRunner.Origin.userInitiated(_:), v7);
        v18 = v13;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v17, v20, v10, a4);

        swift_release(v17);
        v19 = swift_release(v14);
        (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v19);
        sub_100011088((uint64_t)v20, &qword_1007F6E90);
      }
      else
      {

        *(_QWORD *)&result = swift_release(v14).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

uint64_t static CondensedEditorialSearchResultContentView.sizingForArtworkPrefetch(in:asPartOf:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for ComponentPrefetchSizing(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

id CondensedEditorialSearchResultContentView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CondensedEditorialSearchResultContentView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100017284(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView;
  v9 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView];
  if (v9)
  {
    objc_msgSend(v9, "removeFromSuperview");
    v10 = *(void **)&v2[v8];
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)&v2[v8] = a1;
  v11 = a1;

  v12 = *(void **)&v2[v8];
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v2, "addSubview:", v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CornerStyle.continuous(_:), v4);
    ArtworkView.setCorner(radius:style:)(v7, 10.0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_10001739C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  v3 = v2;
  v6 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_action;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_action);
  if (v7)
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton), "removeAction:forControlEvents:", v7, 4095);
    v8 = *(void **)(v3 + v6);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v3 + v6) = 0;

  v9 = *(_QWORD *)(v3 + v6);
  if (v9)
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton), "addAction:forControlEvents:", v9, 64);
  v10 = (uint64_t *)(v3
                  + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_buttonHandler);
  v11 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_buttonHandler);
  v12 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_buttonHandler
                  + 8);
  *v10 = a1;
  v10[1] = a2;
  sub_100019320(a1, a2);
  result = sub_100019310(v11, v12);
  v14 = *v10;
  if (*v10)
  {
    v15 = v10[1];
    sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
    sub_100019320(v14, v15);
    swift_retain(v15);
    v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, v14, v15);
    v17 = *(_QWORD *)(v3 + v6);
    if (v17)
    {
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton), "removeAction:forControlEvents:", v17, 4095);
      v18 = *(void **)(v3 + v6);
    }
    else
    {
      v18 = 0;
    }
    *(_QWORD *)(v3 + v6) = v16;
    v19 = v16;

    v20 = *(_QWORD *)(v3 + v6);
    if (v20)
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton), "addAction:forControlEvents:", v20, 64);

    return sub_100019310(v14, v15);
  }
  return result;
}

void sub_100017564()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v0[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_headerLabel;
  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v1[v12] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_titleLabel;
  *(_QWORD *)&v1[v13] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_viewButton;
  *(_QWORD *)&v1[v14] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v15 = enum case for CondensedSearchResultCardLayout.Configuration.standard(_:);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v16(&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_configuration], enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v6);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_action] = 0;
  v17 = &v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_buttonHandler];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = (double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkSize];
  v19 = v16(v9, v15, v6);
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v19);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v21 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *v18 = v21;
  *((_QWORD *)v18 + 1) = v23;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CondensedEditorialSearchResultContentView.swift", 70, 2, 168, 0);
  __break(1u);
}

void sub_1000177B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AspectRatio(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = EditorialSearchResult.editorialVideo.getter(v6);
  if (v9)
  {
    v10 = v9;
    v11 = Video.preview.getter();
    v12 = swift_release(v10);
    v13 = Artwork.size.getter(v12);
    v14 = AspectRatio.init(_:_:)(v13);
    CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v14);
    v16 = ((uint64_t (*)(double))AspectRatio.width(fromHeight:))(v15);
    v18 = v17;
    CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v16);
    v21 = AspectRatio.width(fromHeight:)(v19);
    if (v18 >= v21)
      v18 = v21;
    v22 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v20);
    v24 = v23;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v1 + 104))(v3, enum case for FloatingPointRoundingRule.up(_:), v0, v22);
    CGSize.rounded(_:)(v3, v18, v24);
    swift_release(v11);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    CondensedSearchResultCardLayout.Metrics.artworkSize.getter(0);
  }
}

double sub_100017950(double a1, double a2, uint64_t a3, uint64_t a4, objc_class *a5)
{
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  double (*v49)(char *, uint64_t);
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t);
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(_QWORD *, char *, uint64_t);
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t OpaqueTypeConformance2;
  uint64_t v91;
  double v92;
  double v93;
  double v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  void (*v98)(char *, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t);
  char *v118;
  char *v119;
  char *v120;
  UITraitCollection v121;
  uint64_t v122;
  _QWORD v123[5];
  _QWORD v124[5];
  _QWORD v125[5];
  _QWORD v126[5];

  v121.super.isa = a5;
  v114 = sub_10000DF3C(&qword_1007F46D8);
  v115 = *(_QWORD *)(v114 - 8);
  v7 = __chkstk_darwin(v114);
  v112 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for CondensedSearchResultCardLayout(0, v7);
  v113 = *(_QWORD *)(v111 - 8);
  v9 = __chkstk_darwin(v111);
  v110 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for LabelPlaceholder(0, v9);
  v109 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v118 = (char *)&v98 - v13;
  v116 = type metadata accessor for FontUseCase(0);
  v117 = *(uint64_t (**)(char *, uint64_t))(v116 - 8);
  v14 = __chkstk_darwin(v116);
  v100 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for DynamicTextAppearance(0, v14);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v105 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v98 - v18;
  __chkstk_darwin(v20);
  v99 = (char *)&v98 - v21;
  __chkstk_darwin(v22);
  v119 = (char *)&v98 - v23;
  v24 = type metadata accessor for AspectRatio(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v104 = *(_QWORD *)(v122 - 8);
  v28 = v104;
  __chkstk_darwin(v122);
  v30 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v98 - v32;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v34);
  AspectRatio.init(_:_:)(v35);
  sub_1000177B4();
  v37 = v36;
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v40 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  v120 = v33;
  v41 = v122;
  v42 = v40(v33, v122);
  v107 = (void (*)(char *, uint64_t))v40;
  CondensedSearchResultCardLayout.Configuration.metrics.getter(v42);
  CondensedSearchResultCardLayout.Metrics.overriddingArtworkSize(with:)(v37, v39);
  v43 = v40(v30, v41);
  v44 = DynamicTextAppearance.init()(v43);
  v45 = v100;
  CondensedSearchResultCardLayout.Configuration.headerFont.getter(v44);
  v46 = v99;
  DynamicTextAppearance.withFontUseCase(_:)(v45);
  v98 = (void (*)(char *, uint64_t))*((_QWORD *)v117 + 1);
  v47 = v45;
  v98(v45, v116);
  v48 = v101;
  v49 = *(double (**)(char *, uint64_t))(v101 + 8);
  v50 = v103;
  v51.n128_f64[0] = v49(v19, v103);
  v117 = (uint64_t (*)(char *, uint64_t))v49;
  v52 = CondensedSearchResultCardLayout.Configuration.headerNumberOfLines.getter(v51);
  v53 = v119;
  DynamicTextAppearance.withNumberOfLines(_:)(v52);
  v54 = ((uint64_t (*)(char *, uint64_t))v49)(v46, v50);
  v55 = dispatch thunk of EditorialSearchResult.typeDisplayText.getter(v54);
  v57 = v56;
  v58 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v58(v46, v53, v50);
  v59 = LabelPlaceholder.Options.init(rawValue:)(0);
  v60 = v118;
  v61 = v57;
  v62 = v46;
  v63 = LabelPlaceholder.init(_:with:where:)(v55, v61, v46, v59);
  v64 = v105;
  v65 = DynamicTextAppearance.init()(v63);
  CondensedSearchResultCardLayout.Configuration.titleFont.getter(v65);
  DynamicTextAppearance.withFontUseCase(_:)(v47);
  v98(v47, v116);
  v66 = v117;
  v117(v64, v50);
  v67 = CondensedSearchResultCardLayout.Configuration.titleNumberOfLines(in:)(v121);
  DynamicTextAppearance.withNumberOfLines(_:)(v67);
  v68 = v66(v19, v50);
  v69 = EditorialSearchResult.title.getter(v68);
  v71 = v70;
  v72 = v62;
  v73 = v50;
  v58(v19, v62, v50);
  v74 = LabelPlaceholder.Options.init(rawValue:)(0);
  v75 = v106;
  LabelPlaceholder.init(_:with:where:)(v69, v71, v19, v74);
  v76 = v102;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v102, v120, v122);
  v126[3] = &type metadata for FixedSizedPlaceholder;
  v126[4] = sub_1000194A0();
  *(double *)v126 = v37;
  *(double *)&v126[1] = v39;
  v77 = v108;
  v125[3] = v108;
  v125[4] = &protocol witness table for LabelPlaceholder;
  v78 = sub_1000117C0(v125);
  v79 = v109;
  v80 = *(void (**)(_QWORD *, char *, uint64_t))(v109 + 16);
  v80(v78, v60, v77);
  v124[3] = v77;
  v124[4] = &protocol witness table for LabelPlaceholder;
  v81 = sub_1000117C0(v124);
  v82 = v75;
  v80(v81, v75, v77);
  v83 = type metadata accessor for EmptyPlaceable(0);
  swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
  v84 = EmptyPlaceable.init()();
  v123[3] = v83;
  v123[4] = sub_10000E99C(&qword_1007F4748, (uint64_t (*)(uint64_t))&type metadata accessor for EmptyPlaceable, (uint64_t)&protocol conformance descriptor for EmptyPlaceable);
  v123[0] = v84;
  v85 = v110;
  CondensedSearchResultCardLayout.init(metrics:artwork:headerText:titleText:viewButton:isTextBaselineAligned:)(v76, v126, v125, v124, v123, 1);
  v86 = sub_10000E99C(&qword_1007F46E0, (uint64_t (*)(uint64_t))&type metadata accessor for CondensedSearchResultCardLayout, (uint64_t)&protocol conformance descriptor for CondensedSearchResultCardLayout);
  v87 = v112;
  v88 = v111;
  v89 = dispatch thunk of CustomLayout.layout.getter(v111, v86);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v89, &opaque type descriptor for <<opaque return type of CondensedSearchResultCardLayout.layout>>, 1);
  v91 = v114;
  v92 = dispatch thunk of Placeable.measure(toFit:with:)(v121.super.isa, v114, OpaqueTypeConformance2, a1, a2);
  v94 = v93;
  (*(void (**)(char *, uint64_t, double))(v115 + 8))(v87, v91, v92);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v85, v88);
  v95 = *(void (**)(char *, uint64_t))(v79 + 8);
  v95(v82, v77);
  v96 = (void (*)(char *, uint64_t))v117;
  v117(v72, v73);
  v95(v118, v77);
  v96(v119, v73);
  v107(v120, v122);
  return v94;
}

double _s22SubscribePageExtension41CondensedEditorialSearchResultContentViewC6height2in8asPartOf12CoreGraphics7CGFloatV19AppStoreKitInternal17ItemLayoutContextV_9JetEngine15BaseObjectGraphCtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t KeyPath;
  char *v33;
  objc_class *v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  __n128 v40;
  double v41;
  void (*v43)(char *, _QWORD, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  objc_class *v50;

  v0 = type metadata accessor for EditorialSearchResultType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - v5;
  v7 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v8 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  v48 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v14 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PageGrid(0);
  v45 = *(_QWORD *)(v17 - 8);
  v46 = v17;
  v18 = __chkstk_darwin(v17);
  v49 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for EditorialSearchResult(0, v18);
  v21 = sub_10000E99C(&qword_100809120, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  ItemLayoutContext.typedModel<A>(as:)(&v50, v20, v20, v21);
  v23 = (uint64_t)v50;
  if (!v50)
    return 0.0;
  v44 = v13;
  ItemLayoutContext.parentShelfLayoutContext.getter(v22);
  if (qword_1007F1DE8 != -1)
    swift_once(&qword_1007F1DE8, sub_1003852A0);
  v24 = qword_100854230;
  swift_bridgeObjectRetain(qword_100854230);
  v25 = PageGrid.init(from:breakpointOverrides:)(v16, v24);
  EditorialSearchResult.type.getter(v25);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v26 == enum case for EditorialSearchResultType.category(_:))
  {
    v27 = enum case for CondensedSearchResultCardLayout.Configuration.category(_:);
    v29 = v47;
    v28 = v48;
  }
  else
  {
    v29 = v47;
    if (v26 != enum case for EditorialSearchResultType.story(_:))
    {
      v31 = (uint64_t)v44;
      if (v26 == enum case for EditorialSearchResultType.developer(_:))
      {
        v28 = v48;
        (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v10, enum case for CondensedSearchResultCardLayout.Configuration.developer(_:), v47);
      }
      else
      {
        v43 = *(void (**)(char *, _QWORD, uint64_t))(v48 + 104);
        if (v26 == enum case for EditorialSearchResultType.appEventStory(_:))
        {
          v43(v10, enum case for CondensedSearchResultCardLayout.Configuration.appEvent(_:), v47);
        }
        else
        {
          v43(v10, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v47);
          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        }
        v28 = v48;
      }
      goto LABEL_10;
    }
    v27 = enum case for CondensedSearchResultCardLayout.Configuration.stories(_:);
    v28 = v48;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v10, v27, v29);
  v31 = (uint64_t)v44;
LABEL_10:
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v31, v10, v29);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  KeyPath = swift_getKeyPath(&unk_10066FC10);
  ItemLayoutContext.subscript.getter(&v50);
  swift_release(KeyPath);
  v33 = v49;
  v34 = v50;
  v35 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v37 = v36;
  v39 = v38;
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v35) & 1) != 0)
  {
    v40.n128_f64[0] = v37;
    v41 = sub_100015C90(v23, v40, v39, v31, v34);
  }
  else
  {
    v41 = sub_100017950(v37, v39, v23, v31, v34);
  }
  v30 = v41;
  swift_release(v23);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v29);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
  return v30;
}

uint64_t _s22SubscribePageExtension41CondensedEditorialSearchResultContentViewC5fetch3for2in2on8asPartOfy19AppStoreKitInternal27ManagedArtworkModelProtocol_p_So6CGRectV0qrS00V6LoaderC9JetEngine15BaseObjectGraphCtF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t result;
  uint64_t (*v33)(char *, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  double *v56;
  double *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  void *v69;
  id v70;
  char *v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  char *v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  char *v91;
  double v92;
  double v93;
  double v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, _QWORD, uint64_t);
  uint64_t (*v109)(char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  _QWORD v126[5];
  _QWORD v127[6];

  v115 = a3;
  v5 = type metadata accessor for Artwork.Style(0, a2);
  v6 = __chkstk_darwin(v5);
  v111 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for Artwork.Crop(0, v6);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for AspectRatio(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for CondensedSearchResultCardLayout.Metrics(0);
  v11 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v13 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v124 = (char *)&v109 - v15;
  v16 = type metadata accessor for EditorialSearchResultType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v118 = (void (*)(char *, uint64_t))((char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (char *)&v109 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v109 - v23;
  v123 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(0);
  v125 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v122 = (char *)&v109 - v28;
  sub_100011020(a1, (uint64_t)v127);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v31 = type metadata accessor for EditorialSearchResult(0, v30);
  result = swift_dynamicCast(v126, v127, v29, v31, 6);
  if ((_DWORD)result)
  {
    v110 = a2;
    v119 = v126[0];
    EditorialSearchResult.type.getter(result);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v24, v16);
    v33 = *(uint64_t (**)(char *, uint64_t))(v17 + 88);
    v34 = v33(v21, v16);
    v109 = v33;
    if (v34 == enum case for EditorialSearchResultType.category(_:))
    {
      v35 = v125;
      v36 = v123;
      (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v26, enum case for CondensedSearchResultCardLayout.Configuration.category(_:), v123);
      goto LABEL_9;
    }
    v36 = v123;
    if (v34 == enum case for EditorialSearchResultType.story(_:))
    {
      v37 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.stories(_:);
    }
    else
    {
      if (v34 != enum case for EditorialSearchResultType.developer(_:))
      {
        v108 = *(void (**)(char *, _QWORD, uint64_t))(v125 + 104);
        if (v34 == enum case for EditorialSearchResultType.appEventStory(_:))
        {
          v108(v26, enum case for CondensedSearchResultCardLayout.Configuration.appEvent(_:), v123);
        }
        else
        {
          v108(v26, enum case for CondensedSearchResultCardLayout.Configuration.standard(_:), v123);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
        }
        v35 = v125;
LABEL_9:
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v122, v26, v36);
        v38 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
        v39 = v38(v24, v16);
        CondensedSearchResultCardLayout.Configuration.metrics.getter(v39);
        CondensedSearchResultCardLayout.Configuration.metrics.getter(v40);
        v42 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v41);
        v44 = v43;
        v45 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
        v46 = v120;
        v47 = v45(v13, v120);
        v48 = v119;
        v49 = EditorialSearchResult.collectionAdamIds.getter(v47);
        v50 = v110;
        if (v49)
        {
          v51 = v49;
          v52 = *(void **)&v121[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid];
          if (v52)
          {
            v53 = type metadata accessor for ArtworkIconFetcher(0);
            v54 = v52;
            BaseObjectGraph.optional<A>(_:)(v127, v53, v53);
            v55 = v127[0];
            if (v127[0])
            {
              v56 = (double *)swift_allocObject(&unk_100722500, 48, 7);
              *((_QWORD *)v56 + 2) = v54;
              *((_QWORD *)v56 + 3) = v50;
              v56[4] = v42;
              *((_QWORD *)v56 + 5) = v44;
              v57 = (double *)swift_allocObject(&unk_100722528, 48, 7);
              *((_QWORD *)v57 + 2) = v54;
              *((_QWORD *)v57 + 3) = v50;
              v57[4] = v42;
              *((_QWORD *)v57 + 5) = v44;
              v118 = (void (*)(char *, uint64_t))v45;
              v58 = v121;
              v127[0] = v121;
              v59 = type metadata accessor for CondensedEditorialSearchResultContentView(0);
              v60 = sub_10000E99C(&qword_1007F4738, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for NSObject);
              v61 = v54;
              swift_retain_n(v50, 2);
              v62 = v61;
              v63 = v58;
              AnyHashable.init<A>(_:)(v127, v59, v60);
              dispatch thunk of ArtworkIconFetcher.fetchArtworkIcons(for:partialCompletion:completion:handlerKey:)(v127, v51, sub_100019334, v56, sub_1000195AC, v57, v126);

              swift_release(v119);
              swift_release(v55);
              swift_release(v56);
              swift_release(v57);
              swift_bridgeObjectRelease(v51);
              sub_100011088((uint64_t)v126, (uint64_t *)&unk_1007F9850);
              sub_100019370((uint64_t)v127);
              v118(v124, v46);
              return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v122, v123);
            }
            swift_bridgeObjectRelease(v51);

            v48 = v119;
          }
          else
          {
            swift_bridgeObjectRelease(v49);
          }
        }
        v64 = EditorialSearchResult.editorialVideo.getter(v49);
        if (v64)
        {
          v65 = v64;
          v66 = Video.preview.getter();
          swift_release(v65);
        }
        else
        {
          v67 = EditorialSearchResult.editorialArtwork.getter();
          if (!v67)
            goto LABEL_25;
          v66 = v67;
        }
        v69 = *(void **)&v121[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView];
        if (v69)
        {
          v70 = v69;
          AspectRatio.init(_:_:)(v70);
          v71 = v124;
          sub_1000177B4();
          v73 = v72;
          v75 = v74;
          (*(void (**)(char *, uint64_t))(v116 + 8))(v10, v117);
          v76 = objc_msgSend(v70, "setContentMode:", 0);
          v77 = (char *)v118;
          EditorialSearchResult.type.getter(v76);
          v78 = v109(v77, v16);
          v79 = 0;
          if (v78 != enum case for EditorialSearchResultType.developer(_:)
            && v78 != enum case for EditorialSearchResultType.appEventStory(_:))
          {
            v80 = v112;
            v81 = Artwork.crop.getter();
            v79 = Artwork.Crop.preferredContentMode.getter(v81);
            (*(void (**)(char *, uint64_t))(v113 + 8))(v80, v114);
            v38((char *)v118, v16);
          }
          v82 = Artwork.config(_:mode:prefersLayeredImage:)(v79, 0, v73, v75);
          v83 = type metadata accessor for ArtworkView(0);
          v84 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v82, 2, 1, v70, v83, v84);

          swift_release(v82);
          swift_release(v66);
          v85 = swift_release(v119);
          v86 = v71;
          goto LABEL_34;
        }
        v68 = swift_release(v66);
LABEL_25:
        v87 = EditorialSearchResult.iconArtwork.getter(v68);
        if (v87)
        {
          v88 = v87;
          v89 = *(void **)&v121[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView];
          if (v89)
          {
            v90 = v89;
            v91 = v124;
            v92 = CondensedSearchResultCardLayout.Metrics.artworkSize.getter(v90);
            v94 = v93;
            v95 = v112;
            v96 = Artwork.crop.getter();
            v97 = Artwork.Crop.preferredContentMode.getter(v96);
            (*(void (**)(char *, uint64_t))(v113 + 8))(v95, v114);
            v98 = Artwork.config(_:mode:prefersLayeredImage:)(v97, 0, v92, v94);
            v99 = v111;
            Artwork.style.getter(v98);
            v100 = ArtworkView.style.setter(v99);
            v101 = objc_msgSend(v90, "setContentMode:", Artwork.contentMode.getter(v100));
            v102 = ArtworkLoaderConfig.size.getter(v101);
            v104 = ArtworkView.imageSize.setter(v102, v103);
            v105 = Artwork.backgroundColor.getter(v104);
            if (!v105)
            {
              sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
              v105 = static UIColor.placeholderBackground.getter();
            }
            ArtworkView.backgroundColor.setter(v105);
            v106 = type metadata accessor for ArtworkView(0);
            v107 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
            ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v98, 2, 1, v90, v106, v107);

            swift_release(v98);
            swift_release(v88);
            v85 = swift_release(v119);
            v86 = v91;
            goto LABEL_34;
          }
          swift_release(v87);
        }
        v85 = swift_release(v48);
        v86 = v124;
LABEL_34:
        ((void (*)(char *, uint64_t, __n128))v45)(v86, v46, v85);
        return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v122, v123);
      }
      v37 = (unsigned int *)&enum case for CondensedSearchResultCardLayout.Configuration.developer(_:);
    }
    v35 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v26, *v37, v123);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100018E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitCollection.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100018E80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100018EA4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100018EC8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100018EFC(uint64_t a1)
{
  uint64_t *v1;

  return sub_100016F88(a1, v1[2], v1[3], v1[4]);
}

void _s22SubscribePageExtension41CondensedEditorialSearchResultContentViewC20cancelArtworkFetches2on8asPartOf014deprioritizingL0y11AppStoreKit0K6LoaderC_9JetEngine15BaseObjectGraphCSbtF_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  UIImage_optional v20;

  v1 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_iconGrid];
  if (!v1)
    goto LABEL_15;
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension19IconArtworkGridView_iconViews];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension19IconArtworkGridView_iconViews];
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    v11 = v1;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (v3)
      goto LABEL_4;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v4 = v1;
    swift_bridgeObjectRetain(v2);
    if (v3)
    {
LABEL_4:
      if (v3 < 1)
      {
        __break(1u);
        return;
      }
      v5 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
        else
          v6 = *(id *)(v2 + 8 * v5 + 32);
        v7 = v6;
        ++v5;
        v8 = type metadata accessor for ArtworkView(0);
        v9 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v7, 1, v8, v9);

      }
      while (v3 != v5);
    }
  }

  swift_bridgeObjectRelease(v2);
  v0 = v18;
LABEL_15:
  v12 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension41CondensedEditorialSearchResultContentView_artworkView];
  if (v12)
  {
    v13 = v12;
    v14 = (char)v13;
    v19 = v13;
    v20.value.super.isa = 0;
    v20.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v20, v14);
    v15 = type metadata accessor for ArtworkView(0);
    v16 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v19, 1, v15, v16);

  }
}

uint64_t sub_1000190F0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10000E99C(&qword_1007F46E8, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for CondensedEditorialSearchResultContentView);
  result = sub_10000E99C(&qword_1007F46F0, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for CondensedEditorialSearchResultContentView);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10001914C()
{
  return sub_10000E99C(&qword_1007F46F8, type metadata accessor for CondensedEditorialSearchResultContentView, (uint64_t)&protocol conformance descriptor for CondensedEditorialSearchResultContentView);
}

uint64_t sub_100019178()
{
  return type metadata accessor for CondensedEditorialSearchResultContentView(0);
}

void sub_100019180(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4 = type metadata accessor for CondensedSearchResultCardLayout.Configuration(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = "\b";
      v6[6] = "\b";
      v6[7] = "\b";
      v6[8] = &unk_10066FD78;
      v6[9] = &unk_10066FD90;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

void sub_100019238(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F52D0)
  {
    v2 = type metadata accessor for ItemLayoutContext(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F52D0);
  }
}

unint64_t sub_100019294()
{
  unint64_t result;

  result = qword_10081BD40;
  if (!qword_10081BD40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_10081BD40);
  }
  return result;
}

uint64_t sub_1000192DC()
{
  return 8;
}

uint64_t sub_1000192E8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1000192F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100019304(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100019310(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_100019320(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_100019334(uint64_t a1)
{
  uint64_t v1;

  return sub_100016344(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40));
}

uint64_t sub_100019344()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100019370(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_1000193A4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IconArtworkGridView.Config(a2, a1);
  return a2;
}

uint64_t sub_1000193E0(uint64_t a1)
{
  destroy for IconArtworkGridView.Config(a1);
  return a1;
}

uint64_t sub_100019414(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C03F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

unint64_t sub_100019420()
{
  unint64_t result;

  result = qword_1007F4740;
  if (!qword_1007F4740)
  {
    result = swift_getWitnessTable(&unk_10067AC3C, &type metadata for IconArtworkGridView.Config);
    atomic_store(result, (unint64_t *)&qword_1007F4740);
  }
  return result;
}

uint64_t sub_100019464(uint64_t a1, uint64_t a2)
{
  assignWithCopy for IconArtworkGridView.Config(a2, a1);
  return a2;
}

unint64_t sub_1000194A0()
{
  unint64_t result;

  result = qword_100800DC0;
  if (!qword_100800DC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FixedSizedPlaceholder, &type metadata for FixedSizedPlaceholder);
    atomic_store(result, (unint64_t *)&qword_100800DC0);
  }
  return result;
}

uint64_t sub_1000194E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000DF3C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100019528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4758;
  if (!qword_1007F4758)
  {
    v1 = sub_100010EF8((uint64_t *)&unk_100819240);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1007F4758);
  }
  return result;
}

uint64_t sub_100019574(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

void sub_1000195B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1002005AC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_10000DF3C(&qword_1007F4900);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100019718(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001BDCC);
}

void sub_100019724(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1002006F8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for VerticalFlowLayout.Child(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v24 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v24, 1092, 0);
  __break(1u);
}

uint64_t sub_10001988C(uint64_t a1)
{
  return sub_10001A0D0(a1, &type metadata accessor for ArtworkLoaderConfig, &qword_1007F48B8, &qword_1007F48B0, (uint64_t *)sub_10001DDE4);
}

uint64_t sub_1000198B0(uint64_t a1)
{
  return sub_10001A0D0(a1, &type metadata accessor for Artwork, (unint64_t *)&unk_1007F48C8, &qword_1007F48C0, (uint64_t *)sub_10001DE38);
}

void sub_1000198D4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1002014A4(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for Dependency(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

uint64_t sub_100019A48(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001C45C);
}

uint64_t sub_100019A54(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001C678);
}

void sub_100019A60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100201A34(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  sub_10000DF3C(&qword_1007F4908);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100019BC0(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001C894);
}

void sub_100019BCC(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100201B60(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_100019D24(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001CCC0);
}

uint64_t sub_100019D30(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001CEDC);
}

uint64_t sub_100019D3C(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D0F8);
}

uint64_t sub_100019D48(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D314);
}

uint64_t sub_100019D54(uint64_t a1)
{
  return sub_10001A0D0(a1, (unint64_t *)type metadata accessor for DebugSetting, &qword_1007F4A00, &qword_1007F49F8, (uint64_t *)sub_10001DE38);
}

void sub_100019D78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100202028(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_10000DF3C((uint64_t *)&unk_10080E240);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100019ED8(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001D520);
}

uint64_t sub_100019EE4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001A0A0(uint64_t a1)
{
  return sub_100019EE4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10001DB74);
}

uint64_t sub_10001A0AC(uint64_t a1)
{
  return sub_10001A0D0(a1, (unint64_t *)type metadata accessor for DebugSection, &qword_1007F4928, &qword_1007F4920, (uint64_t *)sub_10001DE38);
}

uint64_t sub_10001A0D0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_10001C00C(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001A2E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100856150);
  qword_100850670 = v0;
  unk_100850678 = &protocol witness table for StaticDimension;
  v2 = sub_1000117C0(qword_100850658);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

char *sub_10001A364(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  double left;
  double bottom;
  double right;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  objc_super v26;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v14 = &v11[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator] = 0;
  v15 = &v11[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;

  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for AppEventSearchResultContentView();
  v16 = objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v20 = (char *)v16;
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView]);
  v21 = *(void **)&v20[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView];
  objc_msgSend(v20, "addSubview:", v21);
  v22 = *(void **)&v20[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer];
  objc_msgSend(v22, "addTarget:action:", v20, "handleTapWithGestureRecognizer:");
  objc_msgSend(v22, "setDelegate:", v20);
  v23 = v21;
  v24 = v22;
  objc_msgSend(v23, "addGestureRecognizer:", v24);

  return v20;
}

id sub_10001A5B8()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer], "removeTarget:action:", v0, 0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppEventSearchResultContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10001A6EC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  unint64_t v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  void *v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  double v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  double MaxY;
  double Width;
  double v33;
  char *v34;
  double v35;
  void *v36;
  uint64_t v38;
  _QWORD *v39;
  objc_super v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v1 = v0;
  v2 = type metadata accessor for AppEventCardLayout(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for AppEventSearchResultContentView();
  v40.receiver = v1;
  v40.super_class = v9;
  objc_msgSendSuper2(&v40, "layoutSubviews");
  v10 = LayoutMarginsAware<>.layoutFrame.getter(v9);
  v12 = v11;
  v14 = *(double *)&v13;
  v16 = v15;
  v17 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView];
  v18.n128_u64[0] = v13;
  sub_10015329C(v18, v15);
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  objc_msgSend(v17, "setFrame:");
  if ((MetadataRibbonView.hasContent.getter() & 1) != 0 || (sub_10007C270() & 1) != 0)
  {
    static StandardSearchResultContentViewMetrics.bottomMargin.getter();
    v19 = objc_msgSend(v1, "traitCollection");
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v39 = v4;
    v20 = v6;
    v21 = sub_10000DF3C(&qword_1007F5840);
    v22 = swift_allocObject(v21, 40, 7);
    *(_OWORD *)(v22 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v22 + 32) = v19;
    v23 = v19;
    v24 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v22);
    v25 = sub_100010F98((unint64_t *)&qword_1007F48A0, (uint64_t *)&unk_1007F4880, (const char *)&protocol conformance descriptor for <> Conditional<A, B>);
    v26 = dispatch thunk of AnyDimension.rawValue(in:)(v24, v5, v25);

    v27 = *(void (**)(char *, uint64_t))(v20 + 8);
    v4 = v39;
    v27(v8, v5);
  }
  else
  {
    if (qword_1007F0BA0 != -1)
      swift_once(&qword_1007F0BA0, sub_10001A2E0);
    v28 = qword_100850670;
    v29 = unk_100850678;
    sub_100011064(qword_100850658, qword_100850670);
    v30 = objc_msgSend(v1, "traitCollection");
    v26 = AnyDimension.value(with:)(v30, v28, v29);

  }
  v41.origin.x = v10;
  v41.origin.y = v12;
  v41.size.width = v14;
  v41.size.height = v16;
  CGRectGetMinX(v41);
  objc_msgSend(v17, "frame");
  MaxY = CGRectGetMaxY(v42);
  v43.origin.x = v10;
  v43.origin.y = v12;
  v43.size.width = v14;
  v43.size.height = v16;
  Width = CGRectGetWidth(v43);
  v44.origin.x = v10;
  v44.origin.y = v12;
  v44.size.width = v14;
  v44.size.height = v16;
  v33 = CGRectGetMaxY(v44);
  v34 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView];
  if (qword_1007F10B0 != -1)
    swift_once(&qword_1007F10B0, sub_1000B40CC);
  v35 = v33 - (v26 + MaxY);
  sub_1005B0F60(&unk_100851230, v34, Width, v35);
  v36 = *(void **)&v34[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView];
  sub_10015BF20((uint64_t)v4);
  sub_1005B08AC(v36, v4, Width, v35);
  sub_10001FA98((uint64_t)v4);
  objc_msgSend(v1, "bounds");
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  return objc_msgSend(v34, "setFrame:");
}

uint64_t sub_10001AC0C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView)
                 + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_mediaContentView);
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

void (*sub_10001ACC8(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
  return sub_10001AD28;
}

void sub_10001AD28(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10015D208((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_10015D208((uint64_t)v4);
    v3 = v4;
  }

}

id sub_10001AD88(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;

  sub_1001537D4(a1, a2, a3);
  v4 = *(char **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView);
  sub_1000B87D4();
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView];
  sub_10015CC74();
  v6 = &v4[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_initialLongPressLocation];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v4, "addSubview:", v5);
}

uint64_t type metadata accessor for AppEventSearchResultContentView()
{
  return objc_opt_self(_TtC22SubscribePageExtension31AppEventSearchResultContentView);
}

_QWORD *sub_10001AE74(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double (*v30)();
  double (**v31)();
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  swift_getObjectType();
  v5 = sub_10000DF3C(&qword_1007F4A50);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppEventSearchResult(0);
  v13 = sub_10001F65C((unint64_t *)&qword_1007F4890, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(&v38, v12, v12, v13);
  v15 = v38;
  if (v38)
  {
    v16 = static SearchPageGridBreakpointOverridable.pageGridWithSearchOverrides(for:)();
    v17 = PageGrid.columnWidth.getter(v16);
    v18 = *(char **)&v3[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView];
    *(double *)&v18[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_regularWidthColumnSpacing] = v17;
    v19 = AppEventSearchResult.lockup.getter(objc_msgSend(v18, "setNeedsLayout"));
    v37 = v9;
    v20 = v19;
    v21 = type metadata accessor for ItemLayoutContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
    v22 = type metadata accessor for ObjectGraph(0);
    v36 = v8;
    v23 = v22;
    v24 = swift_dynamicCastClassUnconditional(a2, v22, 0, 0, 0);
    sub_1000303E4(v20, (uint64_t)v7, v24);
    swift_release(v20);
    v25 = sub_100011088((uint64_t)v7, &qword_1007F4A50);
    v26 = AppEventSearchResult.appEvent.getter(v25);
    v27 = swift_dynamicCastClassUnconditional(a2, v23, 0, 0, 0);
    v28 = sub_1000826AC();
    sub_1001629A4(v26, v27);
    swift_release(v26);
    swift_unknownObjectRelease(v28);
    v29 = swift_allocObject(&unk_100722650, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, v3);
    v30 = (double (*)())swift_allocObject(&unk_100722678, 40, 7);
    *((_QWORD *)v30 + 2) = v29;
    *((_QWORD *)v30 + 3) = v15;
    *((_QWORD *)v30 + 4) = a2;
    v31 = (double (**)())&v3[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
    v32 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
    v33 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventViewTappedAction
                       + 8];
    *v31 = sub_10001FA8C;
    v31[1] = v30;
    swift_retain(v15);
    swift_retain(a2);
    sub_100019310(v32, v33);
    objc_msgSend(v3, "setNeedsLayout");
    v34 = swift_release(v15);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v37 + 8))(v11, v36, v34);
  }
  return result;
}

double sub_10001B160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  double result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  void *v17;
  id v18;
  __n128 v19;
  _QWORD v21[3];
  uint64_t v22;
  _BYTE v23[24];

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v23, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v13 = AppEventSearchResult.appEvent.getter();
      v14 = AppPromotion.clickAction.getter();
      swift_release(v13);
      if (v14)
      {
        v22 = type metadata accessor for AppEventSearchResultContentView();
        v21[0] = v11;
        v15 = (char *)v11;
        v16 = swift_retain(v14);
        dispatch thunk of Action.clickSender.setter(v21, v16);
        v17 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView];
        v22 = type metadata accessor for AppEventView(0);
        v21[0] = v17;
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
        v18 = v17;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v14, v21, v8, a3);

        swift_release_n(v14, 2);
        v19 = swift_release(v12);
        (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
        sub_100011088((uint64_t)v21, &qword_1007F6E90);
      }
      else
      {

        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

uint64_t sub_10001B308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator, v23, 1, 0);
  v5 = *v4;
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v5);
    v6 = *v4;
  }
  else
  {
    v6 = 0;
  }
  *v4 = 0;
  swift_release(v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock, v22, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100019310(v8, v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView);
  v11 = (_QWORD *)(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsCalculator, v21, 1, 0);
  v12 = *v11;
  if (*v11)
  {
    swift_retain(*v11);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v12);
    v13 = *v11;
  }
  else
  {
    v13 = 0;
  }
  *v11 = 0;
  swift_release(v13);
  v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v10 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_impressionsUpdateBlock, &v20, 1, 0);
  v15 = *v14;
  v16 = v14[1];
  *v14 = 0;
  v14[1] = 0;
  sub_100019310(v15, v16);
  v17 = type metadata accessor for SearchTagsRibbonView(0);
  v18 = sub_10001F65C((unint64_t *)&unk_10080C0C0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006723D0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v17, v18);
}

uint64_t sub_10001B4A0()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView)+ OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView)+ OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
}

void sub_10001B4D0(void *a1)
{
  sub_10015D208((uint64_t)a1);

}

uint64_t (*sub_10001B518(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10001ACC8(v2);
  return sub_10001B55C;
}

id sub_10001B560()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView)
                           + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView));
}

id sub_10001B584()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView);
}

double sub_10001B598()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView)+ OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_formattedDateView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppEventView(0);
  v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetHeight(v4);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1);
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_10001B620()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_formattedDateView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppEventView(0);
  v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2);
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_10001B6AC()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_10001B6F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

void *sub_10001B744(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_10001B78C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_10001B7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

void *sub_10001B840(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_10001B884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_10001F65C((unint64_t *)&unk_10080C0C0, 255, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006723D0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

uint64_t sub_10001B914(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100670034, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_10001B948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100670034, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_10001B994(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100670034, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001B55C;
}

id sub_10001B9FC()
{
  void *v0;

  return objc_msgSend(v0, "frame");
}

uint64_t sub_10001BA0C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_1007F47C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_10066FEB0);
}

uint64_t sub_10001BA38(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_1007F47D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_10066FEE0);
}

uint64_t sub_10001BA64(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_1007F47D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_10066FEFC);
}

uint64_t sub_10001BA90()
{
  return sub_10001F65C(&qword_1007F47E0, 255, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
}

uint64_t sub_10001BAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10001F65C(&qword_1007F47E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_10066FF5C);
  result = sub_10001F65C((unint64_t *)&unk_1007F47F0, v3, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultContentView, (uint64_t)&unk_10066FF8C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10001BB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  BOOL v19;
  uint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unint64_t v30;
  _QWORD v31[5];

  v4 = type metadata accessor for MetadataRibbonItemViewType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Feature(0);
  v31[3] = v8;
  v31[4] = sub_10001F65C((unint64_t *)&qword_1007F5400, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v9 = sub_1000117C0(v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.search_tags(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v31);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  if ((v8 & 1) == 0)
    a1 = a2;
  if (a1)
  {
    v10 = type metadata accessor for MetadataRibbonItem(0);
    if ((Array.isNotEmpty.getter(a1, v10) & 1) != 0)
    {
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)a1 >> 62)
        goto LABEL_25;
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      while (v12)
      {
        v30 = a1 & 0xC000000000000001;
        v13 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
        v29 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
        v14 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
        v28 = enum case for MetadataRibbonItemViewType.starRating(_:);
        v26 = enum case for MetadataRibbonItemViewType.divider(_:);
        v27 = enum case for MetadataRibbonItemViewType.textLabel(_:);
        v15 = 4;
        v25 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
        while (1)
        {
          v16 = v15 - 4;
          if (!v30)
            break;
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1);
          v19 = __OFADD__(v16, 1);
          v20 = v15 - 3;
          if (v19)
            goto LABEL_24;
LABEL_13:
          MetadataRibbonItem.viewContainerType.getter(v18);
          v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
          if (v21 == v13 || v21 == v29 || v21 == v14 || v21 == v28 || v21 == v27 || v21 == v26 || v21 == v25)
          {
            swift_bridgeObjectRelease(a1);
            swift_release(v17);
            return 1;
          }
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          swift_release(v17);
          ++v15;
          if (v20 == v12)
            goto LABEL_21;
        }
        v17 = *(_QWORD *)(a1 + 8 * v15);
        v18 = swift_retain(v17);
        v19 = __OFADD__(v16, 1);
        v20 = v15 - 3;
        if (!v19)
          goto LABEL_13;
LABEL_24:
        __break(1u);
LABEL_25:
        if (a1 >= 0)
          v23 = v11;
        else
          v23 = a1;
        swift_bridgeObjectRetain(a1);
        v12 = _CocoaArrayWrapper.endIndex.getter(v23);
      }
LABEL_21:
      swift_bridgeObjectRelease(a1);
    }
  }
  return 0;
}

uint64_t sub_10001BDCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F48E0, &qword_1007F48D8, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F48D8);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001BFE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001C00C(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for Artwork, (unint64_t *)&unk_1007F48C8, &qword_1007F48C0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10001DE38);
}

uint64_t sub_10001C00C(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100010F98(a5, a6, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10000DF3C(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001C21C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001C00C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for HeroCarouselScrollView.PageViewTracker, &qword_1007F4980, &qword_1007F4978, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10001DE38);
}

uint64_t sub_10001C240(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4958, &qword_1007F4950, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4950);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001C45C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4A48, &qword_1007F4A38, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4A38);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F4A40, UILabel_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001C678(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4A30, &qword_1007F4A28, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4A28);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F4A20, UICollectionViewLayoutAttributes_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001C894(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4918, &qword_1007F4910, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4910);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001CAB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F48F8, &qword_1007F48F0, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F48F0);
          v13 = sub_10001DEE0(v19, i, a3);
          v15 = *v14;
          v16 = swift_unknownObjectRetain(*v14);
          ((void (*)(uint64_t **, _QWORD, __n128))v13)(v19, 0, v16);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000DF3C(&qword_1007F48E8);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001CCC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98((unint64_t *)&unk_1007F49B0, &qword_1007F49A8, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F49A8);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, &qword_1007F49A0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001CEDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F49D8, &qword_1007F49C8, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F49C8);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, &qword_1007F49D0, NSCollectionLayoutSupplementaryItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D0F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4A18, &qword_1007F4A08, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4A08);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, &qword_1007F4A10, NSCollectionLayoutGroup_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D314(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F49C0, &qword_1007F4908, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4908);
          v13 = sub_10001DE8C(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CGColor(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D520(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F49F0, &qword_1007F49E8, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F49E8);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, &qword_1007F49E0, AMSNotificationSettingsItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D73C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4998, &qword_1007F4990, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4990);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F4988, NSValue_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001D958(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98(&qword_1007F4970, &qword_1007F4968, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C(&qword_1007F4968);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, &qword_1007F4960, CALayer_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001DB74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100010F98((unint64_t *)&unk_1007F4940, (uint64_t *)&unk_1007F4930, (const char *)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000DF3C((uint64_t *)&unk_1007F4930);
          v13 = sub_10001DD90(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F8E40, UIKeyCommand_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t (*sub_10001DD90(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10001DF60(v6, a2, a3);
  return sub_10001B55C;
}

uint64_t (*sub_10001DDE4(uint64_t **a1, unint64_t a2, uint64_t a3))()
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10001DFCC(v6, a2, a3);
  return sub_10001B55C;
}

uint64_t (*sub_10001DE38(uint64_t **a1, unint64_t a2, uint64_t a3))()
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10001E040(v6, a2, a3);
  return sub_10001B55C;
}

uint64_t (*sub_10001DE8C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10001E0AC(v6, a2, a3);
  return sub_10001B55C;
}

uint64_t (*sub_10001DEE0(uint64_t **a1, unint64_t a2, uint64_t a3))()
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10001E120(v6, a2, a3);
  return sub_10001B55C;
}

void sub_10001DF34(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_10001DF60(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s22SubscribePageExtension16SearchLinkLayoutV7MetricsVwxx;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10001DFCC(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for RotatedArtworkLoaderConfig;
  }
  __break(1u);
  return result;
}

uint64_t destroy for RotatedArtworkLoaderConfig(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *sub_10001E040(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)j__s22SubscribePageExtension26RotatedArtworkLoaderConfigVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10001E0AC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for SearchLinkLayout.Metrics;
  }
  __break(1u);
  return result;
}

void destroy for SearchLinkLayout.Metrics(id *a1)
{

}

uint64_t *sub_10001E120(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for TodayCardOverlayReusePool.Scrap;
  }
  __break(1u);
  return result;
}

uint64_t destroy for TodayCardOverlayReusePool.Scrap(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

double *sub_10001E194(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  double **v4;
  unint64_t v5;
  uint64_t v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  double *result;
  int64_t v13;
  uint64_t v14;
  double *v15;
  char *v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *v4;
  v8 = *((_QWORD *)*v4 + 2);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (double *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)result || v9 > *((_QWORD *)v7 + 3) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v13 = v8 + v6;
      else
        v13 = v8;
      result = sub_100202198(result, v13, 1, v7);
      v7 = result;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v14 = *((_QWORD *)v7 + 2);
  if ((*((_QWORD *)v7 + 3) >> 1) - v14 < v6)
    goto LABEL_25;
  if (v6 < 0)
  {
LABEL_27:
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_28;
  }
  v15 = &v7[2 * v14 + 4];
  v16 = (char *)(a2 + 16 * a3);
  if (v16 >= (char *)&v15[2 * v6] || v15 >= (double *)&v16[16 * v6])
  {
    result = (double *)memcpy(v15, v16, 16 * v6);
    if (!v6)
    {
LABEL_22:
      *v4 = v7;
      return result;
    }
    v18 = *((_QWORD *)v7 + 2);
    v19 = __OFADD__(v18, v6);
    v20 = v18 + v6;
    if (!v19)
    {
      *((_QWORD *)v7 + 2) = v20;
      goto LABEL_22;
    }
    goto LABEL_26;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_10001E328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *result;
  __n128 v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(_QWORD, _QWORD);
  void (*v29)(_QWORD, _QWORD);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  __n128 v44;
  void *v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  char *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t ObjectType;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89[3];
  uint64_t v90;
  uint64_t v91;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4880);
  v86 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v85 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_10080C0B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PageGrid(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AppEventSearchResult(0);
  v17 = sub_10001F65C((unint64_t *)&qword_1007F4890, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(v89, v16, v16, v17);
  v20 = v89[0];
  if (v89[0])
  {
    v77 = v4;
    ItemLayoutContext.parentShelfLayoutContext.getter(v19);
    if (qword_1007F1DE8 != -1)
      swift_once(&qword_1007F1DE8, sub_1003852A0);
    v82 = v13;
    v83 = v12;
    v87 = a1;
    v21 = qword_100854230;
    swift_bridgeObjectRetain(qword_100854230);
    PageGrid.init(from:breakpointOverrides:)(v11, v21);
    v22 = PageGrid.componentMeasuringSize(spanning:)(1.0);
    v24 = v23;
    v26 = AppEventSearchResult.lockup.getter(v25);
    v27 = swift_retain(v26);
    v79 = Lockup.title.getter(v27);
    v29 = v28;
    swift_release(v26);
    v30 = swift_retain(v26);
    v78 = Lockup.subtitle.getter(v30);
    v32 = v31;
    swift_release(v26);
    v33 = swift_retain(v26);
    v34 = Lockup.searchAd.getter(v33);
    v35 = swift_release(v26);
    v84 = a2;
    v80 = v20;
    v81 = v15;
    if (v34)
    {
      v36 = SearchAd.advertisingText.getter(v35);
      v38 = v37;
      v35 = swift_release(v34);
    }
    else
    {
      v36 = 0;
      v38 = 0;
    }
    v39 = MixedMediaLockup.metadataRibbonItems.getter(v35);
    v40 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
    v42 = MixedMediaLockup.searchTagRibbonItems.getter(v41);
    KeyPath = swift_getKeyPath(&unk_1006700A8);
    ItemLayoutContext.subscript.getter(v89);
    v44 = swift_release(KeyPath);
    v45 = v89[0];
    v44.n128_u64[0] = v22;
    sub_10015649C(v79, v29, v78, v32, v36, v38, v39, (uint64_t)v8, v44, v24, v42, v89[0]);
    v47 = v46;

    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v29);
    sub_100011088((uint64_t)v8, (uint64_t *)&unk_10080C0B0);
    swift_retain(v26);
    v49 = MixedMediaLockup.searchTagRibbonItems.getter(v48);
    v51 = MixedMediaLockup.metadataRibbonItems.getter(v50);
    LOBYTE(v39) = sub_10001BB20(v49, v51);
    swift_release(v26);
    swift_bridgeObjectRelease(v51);
    v52 = swift_bridgeObjectRelease(v49);
    if ((v39 & 1) != 0)
    {
      v53 = v85;
      static StandardSearchResultContentViewMetrics.bottomMargin.getter(v52);
      v54 = swift_getKeyPath(&unk_1006700A8);
      ItemLayoutContext.subscript.getter(v89);
      swift_release(v54);
      v55 = v89[0];
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v56 = sub_10000DF3C(&qword_1007F5840);
      v57 = swift_allocObject(v56, 40, 7);
      *(_OWORD *)(v57 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v57 + 32) = v55;
      v58 = v55;
      v59 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v57);
      v60 = sub_100010F98((unint64_t *)&qword_1007F48A0, (uint64_t *)&unk_1007F4880, (const char *)&protocol conformance descriptor for <> Conditional<A, B>);
      v61 = v77;
      v62 = dispatch thunk of AnyDimension.rawValue(in:)(v59, v77, v60);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v61);
      v64 = v80;
      v63 = v81;
    }
    else
    {
      v64 = v80;
      v63 = v81;
      if (qword_1007F0BA0 != -1)
        swift_once(&qword_1007F0BA0, sub_10001A2E0);
      sub_100011020((uint64_t)qword_100850658, (uint64_t)v89);
      v65 = v90;
      v66 = v91;
      sub_100011064(v89, v90);
      v67 = swift_getKeyPath(&unk_1006700A8);
      ItemLayoutContext.subscript.getter(&v88);
      swift_release(v67);
      v68 = v88;
      v62 = AnyDimension.value(with:)(v88, v65, v66);

      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v89);
    }
    v69 = type metadata accessor for AppEventView(0);
    v70 = AppEventSearchResult.appEvent.getter(v69);
    v71 = sub_1000826AC();
    ObjectType = swift_getObjectType();
    v73 = type metadata accessor for ObjectGraph(0);
    v74 = swift_dynamicCastClassUnconditional(v84, v73, 0, 0, 0);
    v75.n128_u64[0] = v22;
    sub_1001626C8(v70, v71, v74, v75, v24 - (v47 + v62), v69, ObjectType);
    swift_release(v26);
    swift_release(v70);
    swift_unknownObjectRelease(v71);
    v76 = swift_release(v64);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v82 + 8))(v63, v83, v76);
  }
  return result;
}

void sub_10001E8F8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallSearchLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppEventView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventTapGestureRecognizer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventViewTappedAction];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsCalculator] = 0;
  v5 = &v0[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_impressionsUpdateBlock];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/AppEventSearchResultContentView.swift", 60, 2, 45, 0);
  __break(1u);
}

uint64_t sub_10001EA10(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  BOOL v19;
  uint64_t v20;
  _BOOL8 v21;
  CGPoint v23;
  CGPoint v24;
  CGPoint v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v2 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView];
  v3 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView]
                + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_lockupView);
  if (!v3)
    return 0;
  v5 = v3;
  objc_msgSend(a1, "locationInView:", v1);
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  objc_msgSend(a1, "locationInView:", v2);
  v12 = v11;
  v14 = v13;
  objc_msgSend(a1, "locationInView:", v5);
  v16 = v15;
  v18 = v17;
  objc_msgSend(v2, "bounds");
  v23.x = v12;
  v23.y = v14;
  if (CGRectContainsPoint(v26, v23)
    && (objc_msgSend(v5, "bounds"), v24.x = v16, v24.y = v18, !CGRectContainsPoint(v27, v24))
    && *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventViewTappedAction])
  {
    objc_msgSend(v1, "bounds");
    v25.x = v7;
    v25.y = v9;
    v19 = CGRectContainsPoint(v28, v25);

    if (v19)
    {
      if (!v10)
        return 1;
      v20 = objc_opt_self(UIControl);
      v21 = swift_dynamicCastObjCClass(v10, v20) == 0;
    }
    else
    {
      v21 = 0;
    }
    v5 = v10;
  }
  else
  {

    v21 = 0;
  }

  return v21;
}

void sub_10001EBBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::Bool v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  Swift::Bool v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Swift::Bool v22;
  char *v23;
  UIImage_optional v24;
  UIImage_optional v25;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView);
  v4 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v5 = *(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v24.value.super.isa = 0;
  v24.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v24, v6);

  v7 = *(void **)(v3 + v4);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v10 = v7;
  v11 = a1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1, v8, v9);

  v13 = *(char **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_metadataRibbonView);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension18MetadataRibbonView_metadataRibbonItemViews];
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
    v23 = v13;
    swift_bridgeObjectRetain(v14);
    v17 = 32;
    do
    {
      v18 = *(void **)(v14 + v17);
      v19 = swift_dynamicCastClass(v18, v16);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC22SubscribePageExtension31MetadataRibbonIconWithLabelView_artworkView);
        v21 = v18;
        v25.value.super.isa = 0;
        v25.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v25, v22);
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v20, 1, v8, v9);

      }
      v17 += 16;
      --v15;
    }
    while (v15);

    swift_bridgeObjectRelease(v14);
  }
  sub_10043E720(v11, 1, v12);
}

uint64_t sub_10001ED78(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t Strong;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[40];
  _QWORD v90[5];

  v8 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v87 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.Style(0, v11);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork.Crop(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AppEvent(0, v18);
  v90[3] = v21;
  v90[4] = &protocol witness table for AppPromotion;
  v90[0] = a1;
  sub_100011020((uint64_t)v90, (uint64_t)v89);
  swift_retain(a1);
  v22 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  if (swift_dynamicCast(&v88, v89, v22, v21, 6))
  {
    v84 = v16;
    v23 = v88;
    if (qword_1007F13F0 != -1)
      swift_once(&qword_1007F13F0, sub_100159E50);
    v83 = v8;
    v24 = type metadata accessor for AppEventCardLayout.Metrics(0);
    v25 = sub_1000117A8(v24, (uint64_t)qword_100851FE0);
    v26 = AspectRatio.height(fromWidth:)(v25, a4);
    v28 = AppEvent.moduleVideo.getter(v27);
    v85 = v23;
    v86 = a2;
    if (v28)
    {
      v29 = v28;
      v30 = Video.preview.getter(v28);
      swift_release(v29);
    }
    else
    {
      v30 = AppEvent.moduleArtwork.getter();
      if (!v30)
        goto LABEL_13;
    }
    v31 = swift_retain(v30);
    v32 = Artwork.crop.getter(v31);
    v33 = Artwork.Crop.preferredContentMode.getter(v32);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v84);
    v34 = Artwork.config(_:mode:prefersLayeredImage:)(v33, 0, a4, v26);
    v35 = *(void **)(a3 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_artworkView);
    Artwork.style.getter(v34);
    v36 = ArtworkView.style.setter(v15);
    v37 = objc_msgSend(v35, "setContentMode:", Artwork.contentMode.getter(v36));
    v38 = ArtworkLoaderConfig.size.getter(v37);
    v40 = ArtworkView.imageSize.setter(v38, v39);
    v41 = Artwork.backgroundColor.getter(v40);
    if (!v41)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v41 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v41);
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_videoView);
    if (Strong)
    {
      v43 = (void *)Strong;
      v44 = type metadata accessor for VideoView(0);
      v45 = sub_10001F65C((unint64_t *)&unk_1007F4810, 255, type metadata accessor for VideoView, (uint64_t)"\t,\v");
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2, 1, v43, v44, v45);

    }
    else
    {
      v46 = type metadata accessor for ArtworkView(0);
      v47 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2, 1, v35, v46, v47);
    }
    v23 = v85;
    swift_release(v30);
    swift_release(v34);
LABEL_13:
    v48 = *(void **)(a3 + OBJC_IVAR____TtC22SubscribePageExtension16AppEventCardView_lockupView);
    if (v48)
    {
      v49 = v48;
      v50 = AppEvent.lockup.getter(v49);
      v51 = dispatch thunk of Lockup.artwork.getter(v50);
      swift_release(v50);
      if (v51)
      {
        v52 = &v49[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics];
        v53 = swift_beginAccess(&v49[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_metrics], v89, 0, 0);
        v54 = v87;
        v55 = v83;
        v56 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v87 + 16))(v10, v52, v83, v53);
        v57 = SmallLockupLayout.Metrics.artworkSize.getter(v56);
        v59 = v58;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v55);
        v61 = Artwork.crop.getter(v60);
        v62 = Artwork.Crop.preferredContentMode.getter(v61);
        v63 = v84;
        v87 = *(_QWORD *)(v17 + 8);
        ((void (*)(char *, uint64_t))v87)(v20, v84);
        v64 = Artwork.config(_:mode:prefersLayeredImage:)(v62, 0, v57, v59);
        v65 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
        v66 = *(id *)&v49[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView];
        Artwork.style.getter(v66);
        v67 = ArtworkView.style.setter(v15);
        v68 = objc_msgSend(v66, "setContentMode:", Artwork.contentMode.getter(v67));
        v69 = ArtworkLoaderConfig.size.getter(v68);
        v71 = ArtworkView.imageSize.setter(v69, v70);
        v72 = Artwork.backgroundColor.getter(v71);
        if (!v72)
        {
          sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
          v72 = static UIColor.placeholderBackground.getter();
        }
        ArtworkView.backgroundColor.setter(v72);

        v73 = *(id *)&v49[v65];
        v75 = Artwork.crop.getter(v74);
        v76 = Artwork.Crop.preferredContentMode.getter(v75);
        ((void (*)(char *, uint64_t))v87)(v20, v63);
        objc_msgSend(v73, "setContentMode:", v76);

        v77 = *(void **)&v49[v65];
        v78 = type metadata accessor for ArtworkView(0);
        v79 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        v80 = v77;
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v64, 2, 1, v80, v78, v79);

        swift_release(v51);
        swift_release(v64);

        v81 = v85;
        goto LABEL_20;
      }

    }
    v81 = v23;
LABEL_20:
    swift_release(v81);
    swift_release(v30);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v90);
}

void sub_10001F358(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[40];

  v6 = v5;
  v10 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011020(a1, (uint64_t)v46);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v14 = type metadata accessor for AppEventSearchResult(0);
  if (swift_dynamicCast(&v45, v46, v13, v14, 6))
  {
    v15 = v45;
    sub_10001EBBC(a2);
    v17 = AppEventSearchResult.lockup.getter(v16);
    v19 = Lockup.icon.getter(v18);
    swift_release(v17);
    if (v19)
    {
      v20 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
      v44 = *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView);
      v21 = qword_1007F14D8;
      v22 = *(id *)(v44 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
      if (v21 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v23 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v24 = sub_1000117A8(v23, (uint64_t)qword_100852280);
      v25 = SmallLockupLayout.Metrics.artworkSize.getter(v24);
      v27 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v22, "contentMode"), 0, v25, v26);
      Artwork.style.getter(v27);
      v28 = ArtworkView.style.setter(v12);
      v29 = objc_msgSend(v22, "setContentMode:", Artwork.contentMode.getter(v28));
      v30 = ArtworkLoaderConfig.size.getter(v29);
      v32 = ArtworkView.imageSize.setter(v30, v31);
      v33 = Artwork.backgroundColor.getter(v32);
      if (!v33)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v33 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v33);
      v34 = *(void **)(v44 + v20);
      v35 = type metadata accessor for ArtworkView(0);
      v36 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v37 = v34;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v27, 2, 1, v37, v35, v36);
      swift_release(v19);

      swift_release(v27);
    }
    v38 = objc_retain(*(id *)(*(_QWORD *)(v6
                                        + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_metadataRibbonView));
    sub_1002121C8(v39, a1, a2);

    v40 = *(_QWORD *)(v6 + OBJC_IVAR____TtC22SubscribePageExtension31AppEventSearchResultContentView_appEventView);
    v42 = AppEventSearchResult.appEvent.getter(v41);
    sub_10001ED78(v42, a2, *(_QWORD *)(v40 + OBJC_IVAR____TtC22SubscribePageExtension12AppEventView_appEventCardView), a5);
    swift_release(v42);
    swift_release(v15);
  }
}

uint64_t sub_10001F65C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_10001F69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  void *rawValue;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t KeyPath;
  __n128 v32;
  void *v33;
  _QWORD *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  void *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  Swift::OpaquePointer v50;

  v5 = type metadata accessor for ShelfLayoutContext(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageGrid(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppEventSearchResult(0);
  v13 = sub_10001F65C((unint64_t *)&qword_1007F4890, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  result = ItemLayoutContext.typedModel<A>(as:)(&v50, v12, v12, v13);
  rawValue = v50._rawValue;
  if (v50._rawValue)
  {
    v47 = a3;
    v48 = v8;
    v50._rawValue = _swiftEmptyArrayStorage;
    v16 = AppEventSearchResult.lockup.getter(result);
    v18 = Lockup.icon.getter(v17);
    swift_release(v16);
    if (v18)
    {
      if (qword_1007F14D8 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v20 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v21 = sub_1000117A8(v20, (uint64_t)qword_100852280);
      v22 = SmallLockupLayout.Metrics.artworkSize.getter(v21);
      v24 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v22, v23);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v26 = *(_QWORD *)(((unint64_t)v50._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      v25 = *(_QWORD *)(((unint64_t)v50._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v26 >= v25 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
      v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
      specialized Array._endMutation()(v27);
      swift_release(v18);
    }
    v28 = AppEventSearchResult.lockup.getter(v19);
    v30 = MixedMediaLockup.metadataRibbonItems.getter(v29);
    swift_release(v28);
    KeyPath = swift_getKeyPath(&unk_1006700A8);
    ItemLayoutContext.subscript.getter(&v49);
    v32 = swift_release(KeyPath);
    v33 = v49;
    v34 = sub_100212570(v30, (uint64_t)v49, v32);

    swift_bridgeObjectRelease(v30);
    sub_10001A0D0((uint64_t)v34, &type metadata accessor for ArtworkLoaderConfig, &qword_1007F48B8, &qword_1007F48B0, (uint64_t *)sub_10001DDE4);
    ItemLayoutContext.parentShelfLayoutContext.getter(v35);
    if (qword_1007F1DE8 != -1)
      swift_once(&qword_1007F1DE8, sub_1003852A0);
    v36 = qword_100854230;
    swift_bridgeObjectRetain(qword_100854230);
    v37 = PageGrid.init(from:breakpointOverrides:)(v7, v36);
    v38 = PageGrid.columnWidth.getter(v37);
    sub_10001E328(a1, v47);
    v40 = v39;
    v41 = type metadata accessor for AppEventView(0);
    v42 = AppEventSearchResult.appEvent.getter(v41);
    v43 = sub_1000826AC();
    swift_getObjectType();
    v44 = sub_100162804(v42, v43, v38, v40);
    swift_release(v42);
    swift_unknownObjectRelease(v43);
    sub_10001A0D0(v44, &type metadata accessor for ArtworkLoaderConfig, &qword_1007F48B8, &qword_1007F48B0, (uint64_t *)sub_10001DDE4);
    v45 = v50._rawValue;
    ArtworkLoader.prefetchArtwork(using:)(v50);
    swift_release(rawValue);
    v46 = swift_bridgeObjectRelease(v45);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v48, v46);
  }
  return result;
}

uint64_t sub_10001FA34()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001FA58()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_10001FA8C()
{
  uint64_t *v0;

  return sub_10001B160(v0[2], v0[3], v0[4]);
}

uint64_t sub_10001FA98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppEventCardLayout(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for SearchFocusPageGridProvider(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

uint64_t *_s22SubscribePageExtension27SearchFocusPageGridProviderVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for SearchFocusPageGridProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

__n128 initializeWithTake for SearchFocusPageGridProvider(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for SearchFocusPageGridProvider(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchFocusPageGridProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchFocusPageGridProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchFocusPageGridProvider()
{
  return &type metadata for SearchFocusPageGridProvider;
}

uint64_t sub_10001FCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>, double a13@<D5>)
{
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t KeyPath;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, _QWORD, uint64_t);
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  char *v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[3];

  v103 = a6;
  v104 = a5;
  v111 = a4;
  v115 = a7;
  v105 = sub_10000DF3C(&qword_1007F4A70);
  v102 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v101 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v100 = (char *)&v93 - v25;
  v99 = type metadata accessor for SearchFocusTwoColumnListDisplayOptions(0, v24);
  v98 = *(_QWORD *)(v99 - 8);
  v26 = __chkstk_darwin(v99);
  v97 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Shelf.ContentsMetadata(0, v26);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v107 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for PageGrid.Direction(0);
  v29 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v96 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v109 = (char *)&v93 - v32;
  __chkstk_darwin(v33);
  v112 = (char *)&v93 - v34;
  __chkstk_darwin(v35);
  v37 = (char *)&v93 - v36;
  v38 = type metadata accessor for Shelf.ContentType(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v41 = (char *)&v93 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v42);
  v94 = (uint64_t)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v47 = (char *)&v93 + *(int *)(v46 + 48) - v45;
  v114 = (uint64_t)&v93 - v45;
  sub_1000207A8(a2, (uint64_t)&v93 - v45);
  sub_1000207A8(a3, (uint64_t)v47);
  KeyPath = swift_getKeyPath(&unk_100670190);
  v49 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v110 = a1;
  ReadOnlyLens.subscript.getter(KeyPath, v49);
  v50 = swift_release(KeyPath);
  v95 = v39;
  v51 = v38;
  v52 = (*(uint64_t (**)(char *, uint64_t, __n128))(v39 + 88))(v41, v38, v50);
  if (v52 == enum case for Shelf.ContentType.singleColumnList(_:))
  {
    v53 = v113;
    v54 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v29 + 104))(v37, enum case for PageGrid.Direction.vertical(_:), v113);
    v55 = UITraitCollection.prefersAccessibilityLayouts.getter(v54);
    if ((v55 & 1) != 0)
      UITraitCollection.isSizeClassCompact.getter(v55);
    v56 = v112;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v112, v37, v53);
    v57 = sub_1005FB8C8(1);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000015, 0x800000010062EE00, v56, 0, v57, a8, a9, a10, a11, a12, a13);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v53);
    return sub_100011088(v114, &qword_1007F4A60);
  }
  if (v52 == enum case for Shelf.ContentType.twoColumnList(_:))
  {
    v58 = v29;
    v59 = *(void (**)(char *, _QWORD, uint64_t))(v29 + 104);
    v60 = v109;
    v61 = v113;
    v59(v109, enum case for PageGrid.Direction.vertical(_:), v113);
    v62 = swift_getKeyPath(&unk_1006701C0);
    v63 = v107;
    ReadOnlyLens.subscript.getter(v62, v49);
    v64 = swift_release(v62);
    v65 = v106;
    v66 = v108;
    if ((*(unsigned int (**)(char *, uint64_t, __n128))(v106 + 88))(v63, v108, v64) == enum case for Shelf.ContentsMetadata.searchFocusTwoColumnList(_:))
    {
      (*(void (**)(char *, uint64_t))(v65 + 96))(v63, v66);
      v67 = v98;
      v68 = v97;
      v69 = v99;
      v70 = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(v97, v63, v99);
      v71 = SearchFocusTwoColumnListDisplayOptions.numberOfColumns.getter(v70);
      v72 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    }
    else
    {
      v72 = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v63, v66);
      v71 = 1;
    }
    v82 = UITraitCollection.prefersAccessibilityLayouts.getter(v72);
    if ((v82 & 1) != 0 && (UITraitCollection.isSizeClassCompact.getter(v82) & 1) != 0)
      v71 = 1;
    v83 = v112;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v112, v60, v61);
    v84 = sub_1005FB8C8(v71);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0xD000000000000015, 0x800000010062EE00, v83, 0, v84, a8, a9, a10, a11, a12, a13);
    goto LABEL_15;
  }
  if (v52 == enum case for Shelf.ContentType.scrollablePill(_:))
  {
    v58 = v29;
    v73 = *(void (**)(char *, _QWORD, uint64_t))(v29 + 104);
    v60 = v112;
    v61 = v113;
    v73(v112, enum case for PageGrid.Direction.horizontal(_:), v113);
    v116[0] = 0x4020000000000000;
    v74 = sub_100020838();
    v75 = (uint64_t)v100;
    PageGrid.DirectionalValue.init(_:)(v116, &type metadata for CGFloat, v74);
    v116[0] = 0x4020000000000000;
    v76 = (uint64_t)v101;
    v77 = PageGrid.DirectionalValue.init(_:)(v116, &type metadata for CGFloat, v74);
    v78 = v96;
    (*(void (**)(char *, char *, uint64_t, __n128))(v58 + 16))(v96, v60, v61, v77);
    v79 = sub_100530AD4(v75, v76);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6D6F74737563, 0xE600000000000000, v78, 0, v79, a8, a9, a10, a11, a12, a13);
    v80 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    v81 = v105;
    v80(v76, v105);
    v80(v75, v81);
LABEL_15:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v61);
    return sub_100011088(v114, &qword_1007F4A60);
  }
  v86 = v103;
  v87 = v104;
  v116[0] = v104;
  v116[1] = v103;
  v88 = *(int *)(v42 + 48);
  v89 = v94;
  v90 = v94 + v88;
  v91 = v114;
  sub_1000207A8(v114, v94);
  sub_1000207A8((uint64_t)v47, v90);
  v92 = sub_1000207F4();
  swift_retain(v87);
  swift_retain(v86);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(v110, v89, v90, v111, &type metadata for SearchLandingPageGridProvider, v92, a8, a9, a10, a11, a12, a13);
  swift_release(v86);
  swift_release(v87);
  sub_100011088(v91, &qword_1007F4A60);
  sub_100011088(v90, &qword_1007F4A68);
  sub_100011088(v89, &qword_1007F4A68);
  return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v41, v51);
}

uint64_t sub_100020458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_100020764();
  return PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_100020508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  unint64_t v22;

  v22 = sub_100020764();
  return PageGridCaching.supplementaryPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, a2, a3, a4, a5, v22, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000205B8()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t sub_1000205C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t v11;

  return sub_10001FCD0(a1, a2, a3, a4, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000205CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  __int128 *v12;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v35 = a5;
  v36 = a6;
  v34 = a4;
  v22 = sub_10000DF3C(&qword_1007F4A60);
  __chkstk_darwin(v22);
  v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v33 - v26;
  v28 = *((_QWORD *)v12 + 2);
  v30 = (char *)&v33 + *(int *)(v29 + 48) - v26;
  sub_1000207A8(a2, (uint64_t)&v33 - v26);
  sub_1000207A8(a3, (uint64_t)v30);
  v37 = *v12;
  v38 = v28;
  v31 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_1000207A8((uint64_t)v27, (uint64_t)v24);
  sub_1000207A8((uint64_t)v30, v31);
  PageGridCaching.contentPageGrid(for:surroundedBy:containerSize:safeAreaInsets:traitCollection:)(a1, v24, v31, v34, v35, v36, a7, a8, a9, a10, a11, a12);
  sub_100011088((uint64_t)v27, &qword_1007F4A60);
  sub_100011088(v31, &qword_1007F4A68);
  return sub_100011088((uint64_t)v24, &qword_1007F4A68);
}

unint64_t sub_100020764()
{
  unint64_t result;

  result = qword_1007F4A58;
  if (!qword_1007F4A58)
  {
    result = swift_getWitnessTable(&unk_10067011C, &type metadata for SearchFocusPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F4A58);
  }
  return result;
}

uint64_t sub_1000207A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F4A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000207F4()
{
  unint64_t result;

  result = qword_1007F4A78;
  if (!qword_1007F4A78)
  {
    result = swift_getWitnessTable(&unk_1006915F8, &type metadata for SearchLandingPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_1007F4A78);
  }
  return result;
}

unint64_t sub_100020838()
{
  unint64_t result;

  result = qword_1007F4A80;
  if (!qword_1007F4A80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1007F4A80);
  }
  return result;
}

_QWORD *sub_100020880(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_100021A14(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    v15 = v1 & 0xC000000000000001;
    v5 = v1;
    while (v2 != v4)
    {
      if (v15)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        v7 = swift_retain(v6);
      }
      v8 = PageTab.title.getter(v7);
      v10 = v9;
      swift_release(v6);
      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_100021A14(v11 > 1, v12 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      v1 = v5;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v1 < 0)
      v14 = v1;
    else
      v14 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

char *sub_1000209F0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  double left;
  double bottom;
  double right;
  char *v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v6[OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_isFirstSetup] = 1;
  v14 = objc_allocWithZone((Class)UISegmentedControl);
  v15 = v6;
  v16 = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_segmentedControl] = v16;

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v21 = (char *)v17;
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_segmentedControl]);

  return v21;
}

void sub_100020CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v2;
  v41 = a2;
  v5 = type metadata accessor for ItemLayoutContext(0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v6 = *(_QWORD *)(v39 + 64);
  v7 = __chkstk_darwin(v5);
  v38 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageTabs(0, v7);
  v9 = sub_10000E99C(&qword_1007F4AE0, (uint64_t (*)(uint64_t))&type metadata accessor for PageTabs, (uint64_t)&protocol conformance descriptor for PageTabs);
  v43 = a1;
  ItemLayoutContext.typedModel<A>(as:)(&v48, v8, v8, v9);
  v10 = v48;
  if (v48)
  {
    v37 = *(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_segmentedControl);
    v11 = PageTabs.tabs.getter(objc_msgSend(v37, "removeAllSegments"));
    v12 = v11;
    v42 = v3;
    v31 = v10;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v29 = v11;
      else
        v29 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v13 = _CocoaArrayWrapper.endIndex.getter(v29);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v13)
      {
LABEL_4:
        v36 = sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        v14 = 0;
        v32 = v6 + 7;
        v33 = v12 & 0xC000000000000001;
        v34 = v13;
        v35 = v12;
        v16 = v39;
        v15 = v40;
        do
        {
          if (v33)
          {
            v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
          }
          else
          {
            v17 = *(_QWORD *)(v12 + 8 * v14 + 32);
            swift_retain(v17);
          }
          v47 = v14 + 1;
          v44 = v17;
          v18 = PageTab.title.getter();
          v45 = v19;
          v46 = v18;
          v20 = swift_allocObject(&unk_100722898, 24, 7);
          swift_unknownObjectWeakInit(v20 + 16, v42);
          v21 = swift_allocObject(&unk_1007228C0, 24, 7);
          swift_weakInit(v21 + 16, v17);
          v22 = swift_allocObject(&unk_1007228E8, 24, 7);
          swift_weakInit(v22 + 16, v41);
          v23 = v38;
          (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v38, v43, v15);
          v24 = *(unsigned __int8 *)(v16 + 80);
          v25 = (v24 + 40) & ~v24;
          v26 = (v32 + v25) & 0xFFFFFFFFFFFFFFF8;
          v27 = (char *)swift_allocObject(&unk_100722910, v26 + 8, v24 | 7);
          *((_QWORD *)v27 + 2) = v20;
          *((_QWORD *)v27 + 3) = v21;
          *((_QWORD *)v27 + 4) = v22;
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v27[v25], v23, v15);
          *(_QWORD *)&v27[v26] = v14;
          v28 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v46, v45, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100021930, v27);
          objc_msgSend(v37, "insertSegmentWithAction:atIndex:animated:", v28, v14, 0);
          swift_release(v44);

          v14 = v47;
          v12 = v35;
        }
        while (v34 != v47);
      }
    }
    swift_bridgeObjectRelease_n(v12, 2);
    v30 = v31;
    sub_100021028(v31, v43);
    swift_release(v30);
  }
}

uint64_t sub_100021028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  v6 = sub_10000DF3C(&qword_1007F7D40);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F4AE8);
  v33 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007F4AF0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100021988();
  v32 = a2;
  ItemLayoutContext.typedState<A>(as:)(&type metadata for SegmentedControlCollectionViewCell.State, &type metadata for SegmentedControlCollectionViewCell.State, v16);
  v17 = StateLens<A>.currentValue.getter(&v34, v12, v16);
  if ((v35 & 1) != 0)
  {
    v18 = PageTabs.tabs.getter(v17);
    swift_retain(a1);
    v31 = v3;
    v19 = sub_1000240DC(v18);
    v29 = v9;
    v30 = v13;
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease(v18);
    v23 = swift_release(a1);
    if ((v22 & 1) != 0)
      v24 = 0;
    else
      v24 = v20;
    ItemLayoutContext.mutableState.getter(v23);
    v25 = WritableStateLens.init(_:)(v8, &type metadata for SegmentedControlCollectionViewCell.State);
    v26 = __chkstk_darwin(v25);
    *(&v29 - 2) = v24;
    *((_BYTE *)&v29 - 8) = 0;
    v27 = v29;
    WritableStateLens<A>.updateValue(_:)(sub_100024254, v26);
    v13 = v30;
    v3 = v31;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v27);
  }
  else
  {
    v24 = v34;
  }
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_segmentedControl), "setSelectedSegmentIndex:", v24);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100021268()
{
  return ShelfLayoutContext.contentPageGrid.getter();
}

double sub_100021288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[5];
  char v46[24];
  char v47[24];
  char v48[32];

  v43 = a5;
  v44 = a6;
  v9 = sub_10000DF3C(&qword_1007F7D40);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007F4AE8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionRunner.Origin(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v22 = (void *)Strong;
    v23 = a3 + 16;
    swift_beginAccess(v23, v47, 0, 0);
    v24 = swift_weakLoadStrong(v23);
    if (v24)
    {
      v25 = v24;
      v26 = a4 + 16;
      swift_beginAccess(v26, v46, 0, 0);
      v27 = swift_weakLoadStrong(v26);
      if (v27)
      {
        v42 = v27;
        v28 = v22;
        v41 = v25;
        v29 = UIResponder.nearestActionRunner.getter();

        if (v29)
        {
          v31 = PageTab.action.getter();
          v40 = v28;
          v32 = v31;
          v33 = *(void **)&v40[OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_segmentedControl];
          v45[3] = sub_100019574(0, &qword_1007F4B00, UISegmentedControl_ptr);
          v45[0] = v33;
          (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for ActionRunner.Origin.userInitiated(_:), v16);
          v34 = v33;
          dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v32, v45, v19, v42);
          swift_release(v29);
          v35 = v32;
          v28 = v40;
          v36 = swift_release(v35);
          (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v36);
          sub_100011088((uint64_t)v45, &qword_1007F6E90);
        }
        ItemLayoutContext.mutableState.getter(v30);
        v37 = WritableStateLens.init(_:)(v11, &type metadata for SegmentedControlCollectionViewCell.State);
        __chkstk_darwin(v37);
        *(&v40 - 2) = v44;
        *((_BYTE *)&v40 - 8) = 0;
        sub_100021988();
        WritableStateLens<A>.updateValue(_:)(sub_100024420, v38);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

        swift_release(v41);
        v39 = v42;
      }
      else
      {

        v39 = v25;
      }
      *(_QWORD *)&result = swift_release(v39).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

void sub_100021574(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_100021584(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *(_BYTE *)(a1 + 8);
  result = *(unsigned __int8 *)(a2 + 8);
  if ((v3 & 1) == 0)
    return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(_DWORD)result;
  return result;
}

uint64_t sub_1000215EC()
{
  return type metadata accessor for SegmentedControlCollectionViewCell(0);
}

uint64_t type metadata accessor for SegmentedControlCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F4AC0;
  if (!qword_1007F4AC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SegmentedControlCollectionViewCell);
  return result;
}

void sub_100021630(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100670238;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_1000216B4()
{
  return sub_10000E99C(&qword_1007F4AD0, type metadata accessor for SegmentedControlCollectionViewCell, (uint64_t)&unk_100670250);
}

uint64_t sub_1000216E0(uint64_t a1)
{
  uint64_t v1;

  return static ConfigurableCell.reuseIdentifier(in:)(a1, v1);
}

uint64_t sub_1000216E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_10000E99C(&qword_1007F4AD8, type metadata accessor for SegmentedControlCollectionViewCell, (uint64_t)&unk_10067029C);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_100021754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

uint64_t sub_1000217A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  return swift_endAccess(v5);
}

void *sub_1000217FC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension34SegmentedControlCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return &j__swift_endAccess;
}

id sub_100021840()
{
  void *v0;

  return objc_msgSend(v0, "prepareForReuse");
}

uint64_t sub_100021858()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002187C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000218A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ItemLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 4));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_100021930(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ItemLayoutContext(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100021288(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(char **)((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_100021988()
{
  unint64_t result;

  result = qword_1007F4AF8;
  if (!qword_1007F4AF8)
  {
    result = swift_getWitnessTable(&unk_1006703C0, &type metadata for SegmentedControlCollectionViewCell.State);
    atomic_store(result, (unint64_t *)&qword_1007F4AF8);
  }
  return result;
}

uint64_t sub_1000219CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000239D4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4BC8, &qword_1008107D0);
  *v3 = result;
  return result;
}

uint64_t sub_1000219F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100021EC0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021A14(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100022048(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021A30(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000239D4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B98, (uint64_t *)&unk_1007F8670);
  *v3 = result;
  return result;
}

uint64_t sub_100021A5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000239D4(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10081AD00, &qword_1007F4900);
  *v3 = result;
  return result;
}

uint64_t sub_100021A88(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000221B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021AA4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10002231C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021AC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000231B4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4BB0, &qword_1007F4BB8);
  *v3 = result;
  return result;
}

uint64_t sub_100021AEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000231B4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B20, &qword_1007F4B28);
  *v3 = result;
  return result;
}

uint64_t sub_100021B18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000224A0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021B34(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023394(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B40, (uint64_t (*)(_QWORD))&type metadata accessor for AdamId);
  *v3 = result;
  return result;
}

uint64_t sub_100021B60(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100022628(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021B7C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000227B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021B98(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100022A68(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B10, &qword_1007F4B18);
  *v3 = result;
  return result;
}

uint64_t sub_100021BC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10002290C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021BE0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100022A68(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B90, &qword_1007F4908);
  *v3 = result;
  return result;
}

uint64_t sub_100021C0C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100022BF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021C28(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100022D7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021C44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000239D4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B60, (uint64_t *)&unk_1007F52E0);
  *v3 = result;
  return result;
}

uint64_t sub_100021C70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100022ED8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021C8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023394(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4B50, (uint64_t (*)(_QWORD))&type metadata accessor for SponsoredSearchAdvert);
  *v3 = result;
  return result;
}

uint64_t sub_100021CB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023394(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4C38, (uint64_t (*)(_QWORD))&type metadata accessor for DebugMetricsEvent);
  *v3 = result;
  return result;
}

uint64_t sub_100021CE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023394(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4C00, type metadata accessor for GuidedSearchTokenPaletteView.Token);
  *v3 = result;
  return result;
}

uint64_t sub_100021D10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000239D4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4C08, &qword_1007F4C10);
  *v3 = result;
  return result;
}

uint64_t sub_100021D3C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100023058(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100021D58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000231B4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4BE0, &qword_1007F4BE8);
  *v3 = result;
  return result;
}

uint64_t sub_100021D84(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023394(a1, a2, a3, (_QWORD *)*v3, &qword_100803400, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
  *v3 = result;
  return result;
}

uint64_t sub_100021DB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000231B4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4BF8, &qword_1008083A0);
  *v3 = result;
  return result;
}

uint64_t sub_100021DDC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023394(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4BF0, (uint64_t (*)(_QWORD))&type metadata accessor for PageFacets.Facet.Option);
  *v3 = result;
  return result;
}

uint64_t sub_100021E08(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023574(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021E24(char a1, int64_t a2, char a3)
{
  double **v3;
  uint64_t result;

  result = sub_1000236F4(a1, a2, a3, *v3);
  *v3 = (double *)result;
  return result;
}

uint64_t sub_100021E40(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10002387C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021E5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000239D4(a1, a2, a3, (_QWORD *)*v3, &qword_1007F4BA0, (uint64_t *)&unk_10080E210);
  *v3 = result;
  return result;
}

uint64_t sub_100021E88(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023B78(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021EA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100023CE0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100021EC0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B68);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8)
      memmove(v11 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_10000DF3C(&qword_1007F4B70);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100022048(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B08);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000221B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10002231C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B48);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v8])
      memmove(v13, v14, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v8] || v13 >= &v14[48 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000224A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B30);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10000DF3C(&qword_1007F4B38);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100022628(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4BC0);
    v11 = (char *)swift_allocObject(v10, 72 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 72);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[72 * v8])
      memmove(v13, v14, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[72 * v8] || v13 >= &v14[72 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000227B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007FB3B0);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10002290C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B88);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100022A68(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10000DF3C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    sub_10000DF3C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100022BF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B78);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10000DF3C(&qword_1007F4B80);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100022D7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4B58);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100022ED8(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4BA8);
    v11 = (double *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100023058(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000231B4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000DF3C(a5);
  v14 = *(_QWORD *)(sub_10000DF3C(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10000DF3C(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100023394(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000DF3C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100023574(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4C20);
    v11 = (double *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000236F4(char a1, int64_t a2, char a3, double *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C((uint64_t *)&unk_1007FAFC0);
    v11 = (double *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10000DF3C((uint64_t *)&unk_10080E240);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10002387C(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4BD8);
    v11 = (double *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  v16 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000239D4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10000DF3C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v11)
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v11 || v16 >= v17 + 40 * v11)
  {
    sub_10000DF3C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100023B78(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4C18);
    v11 = (double *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100023CE0(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C(&qword_1007F4BD0);
    v11 = (double *)swift_allocObject(v10, 80 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 80);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[80 * v8])
      memmove(v13, v14, 80 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[80 * v8] || v13 >= &v14[80 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

double sub_100023E60()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  NSString v22;
  void *v23;
  double v24;
  double v25;
  void *v27;
  void *v28;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (void **)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for PageTabs(0, v2);
  v6 = sub_10000E99C(&qword_1007F4AE0, (uint64_t (*)(uint64_t))&type metadata accessor for PageTabs, (uint64_t)&protocol conformance descriptor for PageTabs);
  v7 = ItemLayoutContext.typedModel<A>(as:)(&v28, v5, v5, v6);
  v8 = v28;
  if (!v28)
    return 0.0;
  v9 = PageTabs.tabs.getter(v7);
  v10 = sub_100020880(v9);
  swift_bridgeObjectRelease(v9);
  KeyPath = swift_getKeyPath(&unk_100670318);
  ItemLayoutContext.subscript.getter(v4);
  swift_release(KeyPath);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v14 = v13;
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v4, v0);
  v15 = swift_getKeyPath(&unk_100670348);
  ItemLayoutContext.subscript.getter(&v28);
  swift_release(v15);
  v16 = v28;
  v17 = v10[2];
  if (v17)
  {
    v27 = v28;
    swift_bridgeObjectRetain_n(v10, 2);
    v18 = v10 + 5;
    do
    {
      v19 = *v18;
      v20 = qword_1007F1D58;
      swift_bridgeObjectRetain(*v18);
      if (v20 != -1)
        swift_once(&qword_1007F1D58, sub_100368950);
      v18 += 2;
      v21 = (void *)qword_100809408;
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "addSegmentWithTitle:", v22);
      swift_bridgeObjectRelease(v19);

      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease_n(v10, 2);
    v16 = v27;
  }
  if (qword_1007F1D58 != -1)
    swift_once(&qword_1007F1D58, sub_100368950);
  v23 = (void *)qword_100809408;
  objc_msgSend((id)qword_100809408, "sizeThatFits:", v12, v14);
  v25 = v24;
  objc_msgSend(v23, "removeAllSegments");

  swift_release(v8);
  swift_bridgeObjectRelease(v10);
  return v25;
}

uint64_t sub_1000240DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v4 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain(v4);
      }
      v5 = PageTab.id.getter();
      v7 = v6;
      v9 = PageTabs.selectedTabId.getter();
      v10 = v8;
      if (v5 == v9 && v7 == v8)
      {
        swift_release(v4);
        swift_bridgeObjectRelease_n(v7, 2);
        return i;
      }
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
      swift_release(v4);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v10);
      if ((v11 & 1) != 0)
        return i;
      v12 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v12 == v2)
        return 0;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_100024254(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)result = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(result + 8) = v2;
  return result;
}

uint64_t sub_100024268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F4A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000242B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F4A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000242F8()
{
  return ShelfLayoutContext.contentPageGrid.getter();
}

uint64_t initializeBufferWithCopyOfBuffer for SegmentedControlCollectionViewCell.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SegmentedControlCollectionViewCell.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SegmentedControlCollectionViewCell.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SegmentedControlCollectionViewCell.State()
{
  return &type metadata for SegmentedControlCollectionViewCell.State;
}

unint64_t sub_100024394()
{
  unint64_t result;

  result = qword_1007F4C28;
  if (!qword_1007F4C28)
  {
    result = swift_getWitnessTable(&unk_1006703A4, &type metadata for SegmentedControlCollectionViewCell.State);
    atomic_store(result, (unint64_t *)&qword_1007F4C28);
  }
  return result;
}

unint64_t sub_1000243DC()
{
  unint64_t result;

  result = qword_1007F4C30;
  if (!qword_1007F4C30)
  {
    result = swift_getWitnessTable(&unk_10067037C, &type metadata for SegmentedControlCollectionViewCell.State);
    atomic_store(result, (unint64_t *)&qword_1007F4C30);
  }
  return result;
}

uint64_t sub_100024420(uint64_t a1)
{
  return sub_100024254(a1);
}

double sub_100024438(char a1, uint64_t a2, unint64_t a3, void *a4, double a5, double a6)
{
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  double v48;
  double v49;
  __n128 v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[40];
  _QWORD v63[5];
  _QWORD v64[5];
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v12 = type metadata accessor for MixedMediaLockupLayout(0);
  v61 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v58 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for LabelPlaceholderCompatibility(0, v13);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F4C98);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for MixedMediaLockupLayout.Metrics(0, v17);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v53 - v23;
  swift_getObjectType();
  v25.n128_f64[0] = a5;
  v26 = sub_100026004((uint64_t)a4, v25, a6);
  v28 = v27;
  v29 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v19, 1, 1, v29);
  sub_1002F82D4(a4, a1, (uint64_t)v19, (uint64_t)v24);
  sub_100011088((uint64_t)v19, &qword_1007F4C98);
  v30 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v32 = LayoutViewPlaceholder.init(measureWith:)(sub_1000259E0, 0, v31);
  if (a3)
  {
    v33 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v33 = a2 & 0xFFFFFFFFFFFFLL;
    if (v33)
      goto LABEL_7;
  }
  if ((a1 & 1) != 0)
  {
LABEL_7:
    v54 = v12;
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    v34 = qword_1007F2738;
    swift_bridgeObjectRetain(a3);
    if (v34 != -1)
      swift_once(&qword_1007F2738, sub_10041709C);
    v35 = type metadata accessor for FontUseCase(0);
    v36 = sub_1000117A8(v35, (uint64_t)qword_100855A90);
    v37 = objc_msgSend(a4, "traitCollection");
    v38 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v36, v37);

    v39 = type metadata accessor for Feature(0);
    *((_QWORD *)&v66 + 1) = v39;
    v67 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v40 = sub_1000117C0(&v65);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v40, enum case for Feature.measurement_with_labelplaceholder(_:), v39);
    LOBYTE(v39) = isFeatureEnabled(_:)(&v65);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v65);
    v52 = v39 & 1;
    v41 = v55;
    v42 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(a2, a3, v38, 4, 0, 0, 0, 0, v52);
    LabelPlaceholderCompatibility.layoutTextView.getter(v64, v42);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v57);
    sub_100026B0C((uint64_t)v64, (uint64_t)&v65);
    v12 = v54;
  }
  else
  {
    v67 = 0;
    v65 = 0u;
    v66 = 0u;
  }
  v43 = v59;
  v44 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v21, v24, v60);
  v64[3] = v30;
  v64[4] = &protocol witness table for LayoutViewPlaceholder;
  v64[0] = v32;
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  swift_retain(v32);
  v45 = LayoutViewPlaceholder.init(representing:)(v26, v28);
  v63[3] = v30;
  v63[4] = &protocol witness table for LayoutViewPlaceholder;
  v63[0] = v45;
  sub_100026AC4((uint64_t)&v65, (uint64_t)v62);
  v46 = v58;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v21, v64, v63, v62);
  v47 = sub_10000E99C(&qword_1007F4CA0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout, (uint64_t)&protocol conformance descriptor for MixedMediaLockupLayout);
  dispatch thunk of Measurable.measurements(fitting:in:)(a4, v12, v47, a5, a6);
  v49 = v48;
  v50 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v46, v12, v50);
  sub_100011088((uint64_t)&v65, &qword_1007FD370);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v44);
  return v49;
}

double sub_100024924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, double a10)
{
  uint64_t v10;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  __n128 v64;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[40];
  _QWORD v83[5];
  _QWORD v84[5];
  __int128 v85;
  __int128 v86;
  uint64_t v87;

  v73 = a6;
  v75 = a5;
  v74 = a4;
  v71 = a3;
  v81 = type metadata accessor for MixedMediaLockupLayout(0);
  v80 = *(_QWORD *)(v81 - 8);
  v17 = __chkstk_darwin(v81);
  v79 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for LabelPlaceholderCompatibility(0, v17);
  v69 = *(_QWORD *)(v70 - 8);
  v19 = __chkstk_darwin(v70);
  v68 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for MixedMediaLockupLayout.Metrics(0, v19);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v72 = (char *)&v67 - v24;
  v25 = type metadata accessor for LockupMediaLayout.DisplayType(0, v23);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v29);
  v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LockupMediaView(0);
  v32 = type metadata accessor for AspectRatio(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = a7;
  v34 = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 440))(a1, a2, v33, v73);
  swift_getObjectType();
  v35.n128_f64[0] = a9;
  v36 = sub_10058D638(a1, a2, (uint64_t)v31, v35, a10, (uint64_t)v28, (uint64_t)a8, v34);
  v38 = v37;
  v39 = v25;
  v40 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v39);
  v41 = (uint64_t)v31;
  v42 = v74;
  sub_100011088(v41, (uint64_t *)&unk_1007FA760);
  sub_1002F82D4(a8, 0, v75, v40);
  v43 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  v45 = LayoutViewPlaceholder.init(measureWith:)(sub_1000259E0, 0, v44);
  if (v42)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    v46 = qword_1007F2738;
    swift_bridgeObjectRetain(v42);
    if (v46 != -1)
      swift_once(&qword_1007F2738, sub_10041709C);
    v47 = type metadata accessor for FontUseCase(0);
    v48 = sub_1000117A8(v47, (uint64_t)qword_100855A90);
    v49 = objc_msgSend(a8, "traitCollection");
    v50 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v48, v49);

    v51 = type metadata accessor for Feature(0);
    *((_QWORD *)&v86 + 1) = v51;
    v87 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v52 = sub_1000117C0(&v85);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v52, enum case for Feature.measurement_with_labelplaceholder(_:), v51);
    LOBYTE(v51) = isFeatureEnabled(_:)(&v85);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v85);
    v66 = v51 & 1;
    v53 = v68;
    v54 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v71, v42, v50, 4, 0, 0, 0, 0, v66);
    LabelPlaceholderCompatibility.layoutTextView.getter(v84, v54);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v53, v70);
    sub_100026B0C((uint64_t)v84, (uint64_t)&v85);
  }
  else
  {
    v87 = 0;
    v85 = 0u;
    v86 = 0u;
  }
  v55 = v77;
  v56 = v76;
  v57 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v40, v78);
  v84[3] = v43;
  v84[4] = &protocol witness table for LayoutViewPlaceholder;
  v84[0] = v45;
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  swift_retain(v45);
  v58 = LayoutViewPlaceholder.init(representing:)(v36, v38);
  v83[3] = v43;
  v83[4] = &protocol witness table for LayoutViewPlaceholder;
  v83[0] = v58;
  sub_100026AC4((uint64_t)&v85, (uint64_t)v82);
  v59 = v79;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v56, v84, v83, v82);
  v60 = sub_10000E99C(&qword_1007F4CA0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout, (uint64_t)&protocol conformance descriptor for MixedMediaLockupLayout);
  v61 = v81;
  dispatch thunk of Measurable.measurements(fitting:in:)(a8, v81, v60, a9, a10);
  v63 = v62;
  v64 = swift_release(v45);
  (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v59, v61, v64);
  sub_100011088((uint64_t)&v85, &qword_1007FD370);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v40, v57);
  return v63;
}

uint64_t sub_100024EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  char *v6;
  char *v7;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  __n128 v44;
  int v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  void (*v53)(char *, _QWORD, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t result;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  id v88;
  __n128 v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  __n128 v94;
  id v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  void (*v102)(char *, uint64_t);
  double v103;
  uint64_t v104;
  uint64_t v105;
  NSString v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  id v112;
  __n128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t ObjectType;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  _BYTE v136[32];

  v7 = v6;
  v135 = a6;
  v124 = a5;
  v117 = a4;
  v133 = a3;
  ObjectType = swift_getObjectType();
  v131 = type metadata accessor for Shelf.PresentationHints(0);
  v121 = *(_QWORD *)(v131 - 8);
  v9 = __chkstk_darwin(v131);
  v130 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LockupMediaLayout.DisplayType(0, v9);
  v119 = *(_QWORD *)(v11 - 8);
  v120 = v11;
  __chkstk_darwin(v11);
  v118 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v122 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v129 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for ComponentLayoutOptions(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v16);
  v132 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v18);
  v128 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v20);
  v134 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v22);
  v125 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v24);
  v26 = (char *)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for MixedMediaLockup.LockupPosition(0, v28);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000DF3C(&qword_1007F4C90);
  __chkstk_darwin(v35);
  v37 = (char *)&v114 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10000DF3C(&qword_1007F4C98);
  *(_QWORD *)&v39 = __chkstk_darwin(v38).n128_u64[0];
  v41 = (char *)&v114 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = objc_msgSend(v135, "snapshotPageTraitEnvironment", v39);
  v43 = *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_pageTraits];
  v135 = v7;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_pageTraits] = v42;
  v44 = swift_unknownObjectRelease(v43);
  v127 = a1;
  MixedMediaLockup.overrideLockupPosition.getter(v44);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v37, 1, v31);
  v123 = v13;
  if (v45 == 1)
  {
    sub_100011088((uint64_t)v37, &qword_1007F4C90);
    v46 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v41, 1, 1, v46);
    v47 = v132;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v37, v31);
    v48 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v34, v31);
    if (v48 == enum case for MixedMediaLockup.LockupPosition.top(_:))
    {
      v49 = enum case for MixedMediaLockupLayout.LockupPosition.top(_:);
      v50 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v41, v49, v50);
    }
    else
    {
      v51 = v48;
      v52 = enum case for MixedMediaLockup.LockupPosition.bottom(_:);
      v50 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
      v53 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v50 - 8) + 104);
      if (v51 == v52)
      {
        v53(v41, enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:), v50);
      }
      else
      {
        v53(v41, enum case for MixedMediaLockupLayout.LockupPosition.top(_:), v50);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      }
    }
    v47 = v132;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
    type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v41, 0, 1, v50);
  }
  v54 = v133;
  v55 = v135;
  v56 = &v135[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess(&v135[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_overrideLockupPosition], v136, 33, 0);
  sub_100025FBC((uint64_t)v41, (uint64_t)v56);
  swift_endAccess(v136);
  objc_msgSend(v55, "setNeedsLayout");
  sub_100011088((uint64_t)v41, &qword_1007F4C98);
  v57 = *(void **)&v55[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView];
  v58 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v30, 1, 1, v58);
  v59 = type metadata accessor for OfferStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v26, 1, 1, v59);
  v60 = type metadata accessor for OfferEnvironment(0);
  v61 = (uint64_t)v125;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v125, 1, 1, v60);
  v62 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v63 = (uint64_t)v134;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v134, 1, 1, v62);
  v64 = type metadata accessor for OfferTint(0);
  v65 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v128, 1, 1, v64);
  v66 = v57;
  sub_10054F220(v127, v66, (uint64_t)v30, v54, 0, 0, (uint64_t)v26, v61, v65, v63);
  sub_100011088(v65, (uint64_t *)&unk_1007F76F0);
  v66[OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  sub_100192BDC();
  objc_msgSend(v66, "setNeedsLayout");

  sub_100011088(v63, (uint64_t *)&unk_1007F7C10);
  sub_100011088(v61, (uint64_t *)&unk_1007F7C20);
  sub_100011088((uint64_t)v26, (uint64_t *)&unk_1007F7700);
  v67 = sub_100011088((uint64_t)v30, (uint64_t *)&unk_1007F7710);
  v68 = ObjectType;
  v69 = (*(uint64_t (**)(uint64_t))(ObjectType + 192))(v67);
  v134 = 0;
  if ((v69 & 1) == 0)
    goto LABEL_21;
  v70 = MixedMediaLockup.screenshots.getter();
  v71 = v70;
  if ((unint64_t)v70 >> 62)
  {
    if (v70 >= 0)
      v70 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v70))
      goto LABEL_13;
LABEL_20:
    swift_bridgeObjectRelease(v71);
    v134 = 0;
    goto LABEL_21;
  }
  if (!*(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_20;
LABEL_13:
  if ((v71 & 0xC000000000000001) != 0)
  {
    v134 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v71);
  }
  else
  {
    if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v134 = *(char **)(v71 + 32);
    swift_retain(v134);
  }
  swift_bridgeObjectRelease(v71);
LABEL_21:
  v72 = (*(uint64_t (**)(void))(v68 + 200))();
  if ((v72 & 1) == 0)
  {
LABEL_32:
    v128 = 0;
    goto LABEL_33;
  }
  v74 = MixedMediaLockup.trailers.getter(v72);
  v71 = v74;
  if (!((unint64_t)v74 >> 62))
  {
    result = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_24;
    goto LABEL_31;
  }
  if (v74 >= 0)
    v74 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v74);
  if (!result)
  {
LABEL_31:
    v73 = swift_bridgeObjectRelease(v71);
    goto LABEL_32;
  }
LABEL_24:
  if ((v71 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v128 = *(char **)(v71 + 32);
    swift_retain(v128);
    goto LABEL_27;
  }
LABEL_43:
  v128 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v71);
LABEL_27:
  v73 = swift_bridgeObjectRelease(v71);
LABEL_33:
  v76 = v114;
  static ComponentLayoutOptions.isSingleVerticalColumn.getter(v73);
  v77 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v78 = v116;
  v79 = dispatch thunk of SetAlgebra.isSuperset(of:)(v76, v116, v77);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v76, v78);
  if ((v79 & 1) != 0)
  {
    v81 = type metadata accessor for AspectRatio(0);
    v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v47, 1, 1, v81);
  }
  else
  {
    v83 = (id)ASKDeviceTypeGetCurrent(v80);
    sub_1002F8F9C((uint64_t)v83);

    v84 = type metadata accessor for AspectRatio(0);
    v82 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v47, 0, 1, v84);
  }
  v85 = (uint64_t)v47;
  v86 = (uint64_t)v129;
  MixedMediaLockup.screenshotsDisplayStyle.getter(v82);
  v87 = v135;
  v88 = *(id *)&v135[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView];
  v90 = (id)ASKDeviceTypeGetCurrent(v89);
  v91 = (uint64_t)v118;
  v92 = (uint64_t)v134;
  v93 = v128;
  (*(void (**)(char *, char *, id, uint64_t))(v68 + 440))(v134, v128, v90, v86);

  v95 = (id)ASKDeviceTypeGetCurrent(v94);
  sub_10058D7F8(v92, v93, v85, v91, v86, v133);

  v96 = (*(uint64_t (**)(uint64_t, uint64_t))(v119 + 8))(v91, v120);
  v97 = *(void **)&v87[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_taglineLabel];
  v98 = v130;
  static Shelf.PresentationHints.showSupplementaryText.getter(v96);
  v99 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v100 = v131;
  v101 = dispatch thunk of SetAlgebra.isSuperset(of:)(v98, v131, v99);
  v102 = *(void (**)(char *, uint64_t))(v121 + 8);
  v102(v98, v100);
  if ((v101 & 1) != 0 && ((*(void (**)(uint64_t))(v68 + 456))(v127), v104))
  {
    v105 = v104;
    v106 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v103 = swift_bridgeObjectRelease(v105).n128_u64[0];
  }
  else
  {
    v106 = 0;
  }
  v107 = (uint64_t)v132;
  objc_msgSend(v97, "setText:", v106, v103);

  v108 = v130;
  static Shelf.PresentationHints.showSupplementaryText.getter(v109);
  v110 = v131;
  v111 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v131, v99);
  v102(v108, v110);
  v112 = v135;
  v135[OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = v111 & 1;
  objc_msgSend(v112, "setNeedsLayout");
  objc_msgSend(v112, "setNeedsLayout");
  swift_release(v128);
  v113 = swift_release(v134);
  (*(void (**)(char *, uint64_t, __n128))(v122 + 8))(v129, v123, v113);
  return sub_100011088(v107, (uint64_t *)&unk_1007FA760);
}

double sub_1000259E4(uint64_t a1, void *a2, __n128 a3, double a4)
{
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  __n128 v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[40];
  _QWORD v45[5];
  _QWORD v46[5];
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v7 = a3.n128_u64[0];
  v43 = type metadata accessor for MixedMediaLockupLayout.Metrics(0, a3);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MixedMediaLockupLayout(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for LabelPlaceholderCompatibility(0, v12);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v17.n128_u64[0] = v7;
  v18 = sub_100026004((uint64_t)a2, v17, a4);
  v20 = v19;
  v21 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = LayoutViewPlaceholder.init(measureWith:)(sub_1000259E0, 0, v22);
  if ((MixedMediaLockupLayout.Metrics.alwaysIncludeTaglineSpace.getter() & 1) != 0)
  {
    v38 = a1;
    v39 = v11;
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    if (qword_1007F2738 != -1)
      swift_once(&qword_1007F2738, sub_10041709C);
    v24 = type metadata accessor for FontUseCase(0);
    v25 = sub_1000117A8(v24, (uint64_t)qword_100855A90);
    v26 = objc_msgSend(a2, "traitCollection");
    v27 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v25, v26);

    v28 = type metadata accessor for Feature(0);
    *((_QWORD *)&v48 + 1) = v28;
    v49 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v29 = sub_1000117C0(&v47);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v29, enum case for Feature.measurement_with_labelplaceholder(_:), v28);
    LOBYTE(v28) = isFeatureEnabled(_:)(&v47);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v47);
    v30 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(0, 0xE000000000000000, v27, 4, 0, 0, 0, 0, v28 & 1);
    LabelPlaceholderCompatibility.layoutTextView.getter(v46, v30);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
    sub_100026B0C((uint64_t)v46, (uint64_t)&v47);
    v11 = v39;
    a1 = v38;
  }
  else
  {
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v9, a1, v43);
  v46[3] = v21;
  v46[4] = &protocol witness table for LayoutViewPlaceholder;
  v46[0] = v23;
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  swift_retain(v23);
  v31 = LayoutViewPlaceholder.init(representing:)(v18, v20);
  v45[3] = v21;
  v45[4] = &protocol witness table for LayoutViewPlaceholder;
  v45[0] = v31;
  sub_100026AC4((uint64_t)&v47, (uint64_t)v44);
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v9, v46, v45, v44);
  v32 = sub_10000E99C(&qword_1007F4CA0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout, (uint64_t)&protocol conformance descriptor for MixedMediaLockupLayout);
  dispatch thunk of Measurable.measurements(fitting:in:)(a2, v10, v32, *(double *)&v7, a4);
  v34 = v33;
  v35 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v35);
  sub_100011088((uint64_t)&v47, &qword_1007FD370);
  return v34;
}

void sub_100025DE0(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for SmallLockupView(0);
  if (qword_1007F14D8 != -1)
    swift_once(&qword_1007F14D8, sub_100190FCC);
  v6 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100852280);
  swift_getObjectType();
  sub_100193710(v7, a1, a2, a3);
}

void sub_100025EAC(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  sub_100026274(*a1, a2, a3, a5, a7, a8);
}

uint64_t sub_100025EC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  return sub_100024EC8(*a1, a2, a3, a4, a5, a6);
}

void sub_100025ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100027150(a1, a3);
}

void sub_100025ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;

  v5 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView);
  sub_100193ED4(a1, a2);

}

uint64_t sub_100025F34()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension15SmallLockupView_isDisplayingSearchAd);
}

id sub_100025F58(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_100026858(a1, a2, a5, a7);
}

uint64_t sub_100025F64()
{
  return sub_10000E99C(&qword_1007F4C40, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
}

uint64_t sub_100025F90()
{
  return sub_10000E99C(&qword_100807550, (uint64_t (*)(uint64_t))&type metadata accessor for NilState, (uint64_t)&protocol conformance descriptor for NilState);
}

uint64_t sub_100025FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F4C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_100026004(uint64_t a1, __n128 a2, double a3)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];

  v28 = a1;
  v4 = a2.n128_f64[0];
  v5 = type metadata accessor for LockupMediaLayout.DisplayType(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LockupMediaLayout.Metrics(0, v10);
  v26 = *(_QWORD *)(v13 - 8);
  v27 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AspectRatio(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (id)ASKDeviceTypeGetCurrent(v18);
  sub_1002F8F9C((uint64_t)v21);

  v29[3] = &type metadata for CGFloat;
  v29[4] = &protocol witness table for CGFloat;
  v29[0] = 0x4021000000000000;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v20, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LockupMediaLayout.DisplayType.none(_:), v5);
  sub_10052C770(0, 0, (uint64_t)v29, (uint64_t)v12, (uint64_t)v8, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007FA760);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v29);
  v22 = type metadata accessor for LockupMediaLayout(0);
  v23 = sub_10000E99C(&qword_1007F4CA8, (uint64_t (*)(uint64_t))&type metadata accessor for LockupMediaLayout, (uint64_t)&protocol conformance descriptor for LockupMediaLayout);
  v24 = dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v15, v28, v22, v23, v4, a3);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  return v24;
}

void sub_100026274(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t (*v26)(uint64_t, __n128);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  void (*v57)(uint64_t, _QWORD, uint64_t);
  uint64_t v58;
  __n128 v59;
  id v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  uint64_t (*v65)(uint64_t, __n128);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;

  v74 = a6;
  v10 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  v11 = __chkstk_darwin(v10);
  v66 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for MixedMediaLockup.LockupPosition(0, v11);
  v72 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v64 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C(&qword_1007F4C90);
  __chkstk_darwin(v14);
  v73 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F4C98);
  __chkstk_darwin(v16);
  v70 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ComponentLayoutOptions(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ComponentLayoutOptions.isSingleVerticalColumn.getter(v20);
  v23 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v24 = dispatch thunk of SetAlgebra.isSuperset(of:)(v22, v18, v23);
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v22, v18);
  v26 = *(uint64_t (**)(uint64_t, __n128))(v6 + 456);
  v71 = a1;
  v65 = v26;
  v27 = ((uint64_t (*)(uint64_t))v26)(a1);
  v29 = v28;
  static ComponentLayoutOptions.showSupplementaryText.getter();
  v30 = dispatch thunk of SetAlgebra.isSuperset(of:)(v22, v18, v23);
  v25(v22, v18);
  if ((v24 & 1) == 0)
  {
    sub_100024438(v30 & 1, v27, v29, v74, a2, a3);
    swift_bridgeObjectRelease(v29);
    return;
  }
  v31 = v74;
  v32 = swift_bridgeObjectRelease(v29);
  v34 = v6;
  if (((*(uint64_t (**)(__n128))(v6 + 192))(v32) & 1) == 0)
  {
    v63 = 0;
    v39 = (uint64_t)v70;
    v35 = v71;
    v40 = v69;
    v42 = v72;
    v41 = (uint64_t)v73;
    goto LABEL_15;
  }
  v35 = v71;
  v36 = v71;
  v37 = MixedMediaLockup.screenshots.getter();
  v38 = v37;
  v40 = v69;
  v39 = (uint64_t)v70;
  v42 = v72;
  v41 = (uint64_t)v73;
  if ((unint64_t)v37 >> 62)
  {
    if (v37 >= 0)
      v37 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v37))
      goto LABEL_5;
LABEL_14:
    v33 = swift_bridgeObjectRelease(v38);
    v63 = 0;
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_5:
  if ((v38 & 0xC000000000000001) != 0)
  {
    v63 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
  }
  else
  {
    if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v63 = *(_QWORD *)(v38 + 32);
    swift_retain(v63);
  }
  v33 = swift_bridgeObjectRelease(v38);
LABEL_15:
  v43 = (*(uint64_t (**)(__n128))(v34 + 200))(v33);
  if ((v43 & 1) == 0)
  {
LABEL_26:
    v46 = 0;
    goto LABEL_27;
  }
  v45 = MixedMediaLockup.trailers.getter(v43);
  v36 = v45;
  if (!((unint64_t)v45 >> 62))
  {
    if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
    goto LABEL_25;
  }
  if (v45 >= 0)
    v45 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v45))
  {
LABEL_25:
    v44 = swift_bridgeObjectRelease(v36);
    goto LABEL_26;
  }
LABEL_18:
  if ((v36 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v46 = *(_QWORD *)(v36 + 32);
    swift_retain(v46);
    goto LABEL_21;
  }
LABEL_38:
  v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v36);
LABEL_21:
  v44 = swift_bridgeObjectRelease(v36);
LABEL_27:
  v74 = (void *)v65(v35, v44);
  v48 = v47;
  MixedMediaLockup.overrideLockupPosition.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v41, 1, v40) == 1)
  {
    sub_100011088(v41, &qword_1007F4C90);
    v49 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v39, 1, 1, v49);
  }
  else
  {
    v51 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v64, v41, v40);
    v52 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v51, v40);
    if (v52 == enum case for MixedMediaLockup.LockupPosition.top(_:))
    {
      v53 = enum case for MixedMediaLockupLayout.LockupPosition.top(_:);
      v54 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v39, v53, v54);
    }
    else
    {
      v55 = v52;
      v56 = enum case for MixedMediaLockup.LockupPosition.bottom(_:);
      v54 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v54 - 8) + 104);
      if (v55 == v56)
      {
        v57(v39, enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:), v54);
        v42 = v72;
      }
      else
      {
        v57(v39, enum case for MixedMediaLockupLayout.LockupPosition.top(_:), v54);
        v42 = v72;
        (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v40);
      }
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v73, v40);
    type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
    v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v39, 0, 1, v54);
  }
  v58 = (uint64_t)v66;
  v59.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v50);
  v60 = (id)ASKDeviceTypeGetCurrent(v59);
  v61 = v63;
  sub_100024924(v63, v46, (uint64_t)v74, v48, v39, v58, (uint64_t)v60, v31, a2, a3);

  swift_bridgeObjectRelease(v48);
  swift_release(v46);
  v62 = swift_release(v61);
  (*(void (**)(uint64_t, uint64_t, __n128))(v67 + 8))(v58, v68, v62);
  sub_100011088(v39, &qword_1007F4C98);
}

id sub_100026858(double a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  id v27;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for Shelf.PresentationHints(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v11 = v10;
  static Shelf.PresentationHints.showSupplementaryText.getter(v12);
  v13 = sub_10000E99C((unint64_t *)&unk_10080FCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v14 = dispatch thunk of SetAlgebra.isSuperset(of:)(v9, v6, v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = sub_100024438(v14 & 1, 0, 0xE000000000000000, a4, v11, a2);
  v16 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v17 = objc_msgSend(v16, "absoluteDimension:", v11);
  v18 = objc_msgSend(v16, "absoluteDimension:", v15);
  v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v17, v18);

  v20 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v19);
  v21 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v22 = sub_10000DF3C(&qword_1007F5840);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v23 + 32) = v20;
  v30 = v23;
  specialized Array._endMutation()(v23);
  v24 = v30;
  sub_100019574(0, (unint64_t *)&qword_100800DA0, NSCollectionLayoutItem_ptr);
  v25 = v20;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v21, "verticalGroupWithLayoutSize:subitems:", v19, isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

  return v27;
}

uint64_t sub_100026AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007FD370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100026B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007FD370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100026B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  double v55;
  double v56;
  uint64_t v57;
  void *v58;
  __n128 v59;
  double v60;
  double v61;
  double v62;
  id v63;
  id v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[40];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v8 = type metadata accessor for LockupMediaLayout.DisplayType(0, v7);
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ScreenshotsDisplayStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Artwork.Style(0, v18);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011020(a1, (uint64_t)v76);
  v22 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v23 = type metadata accessor for MixedMediaLockup(0);
  if ((swift_dynamicCast(&v75, v76, v22, v23, 6) & 1) != 0)
  {
    v24 = v75;
    v25 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_pageTraits);
    if (!v25)
    {
      swift_release(v75);
      return;
    }
    v70 = v14;
    v71 = a2;
    v26 = v25;
    swift_retain(v75);
    v68 = v26;
    swift_unknownObjectRetain(v26);
    v28 = Lockup.icon.getter(v27);
    v29 = swift_release(v24);
    v72 = v24;
    v69 = v15;
    if (v28)
    {
      v30 = qword_1007F14D8;
      v31 = objc_retain(*(id *)(*(_QWORD *)(v3
                                          + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView)
                              + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
      if (v30 != -1)
        swift_once(&qword_1007F14D8, sub_100190FCC);
      v32 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v33 = sub_1000117A8(v32, (uint64_t)qword_100852280);
      v34 = SmallLockupLayout.Metrics.artworkSize.getter(v33);
      v36 = Artwork.config(_:mode:prefersLayeredImage:)(objc_msgSend(v31, "contentMode"), 0, v34, v35);
      Artwork.style.getter(v36);
      v37 = ArtworkView.style.setter(v21);
      v38 = objc_msgSend(v31, "setContentMode:", Artwork.contentMode.getter(v37));
      v39 = ArtworkLoaderConfig.size.getter(v38);
      v41 = ArtworkView.imageSize.setter(v39, v40);
      v42 = Artwork.backgroundColor.getter(v41);
      if (!v42)
      {
        sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
        v42 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v42);
      v43 = type metadata accessor for ArtworkView(0);
      v44 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v36, 2, 1, v31, v43, v44);
      swift_release(v28);

      v29 = swift_release(v36);
    }
    if (((*(uint64_t (**)(__n128))(ObjectType + 192))(v29) & 1) == 0)
    {
      v28 = 0;
      goto LABEL_22;
    }
    v45 = MixedMediaLockup.screenshots.getter();
    v46 = v45;
    if ((unint64_t)v45 >> 62)
    {
      if (v45 >= 0)
        v45 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v45))
        goto LABEL_12;
    }
    else if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_12:
      if ((v46 & 0xC000000000000001) != 0)
      {
        v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
      }
      else
      {
        if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = *(_QWORD *)(v46 + 32);
        swift_retain(v28);
      }
      swift_bridgeObjectRelease(v46);
LABEL_22:
      v47 = (*(uint64_t (**)(void))(ObjectType + 200))();
      if ((v47 & 1) == 0)
      {
        v49 = 0;
        goto LABEL_34;
      }
      v48 = MixedMediaLockup.trailers.getter(v47);
      v46 = v48;
      if ((unint64_t)v48 >> 62)
      {
        if (v48 >= 0)
          v48 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v48))
        {
LABEL_25:
          if ((v46 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            v49 = *(_QWORD *)(v46 + 32);
            swift_retain(v49);
            goto LABEL_28;
          }
LABEL_38:
          v49 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
LABEL_28:
          swift_bridgeObjectRelease(v46);
LABEL_34:
          v50.n128_f64[0] = MixedMediaLockup.screenshotsDisplayStyle.getter(v47);
          v51 = (id)ASKDeviceTypeGetCurrent(v50);
          v52 = type metadata accessor for MixedMediaLockupCollectionViewCell(0);
          LayoutMarginsAware<>.layoutFrame.getter(v52);
          v54 = v53;
          v56 = v55;
          type metadata accessor for LockupMediaView(0);
          v57 = type metadata accessor for AspectRatio(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v13, 1, 1, v57);
          (*(void (**)(uint64_t, uint64_t, id, char *))(ObjectType + 440))(v28, v49, v51, v17);
          v58 = v68;
          swift_getObjectType();
          v59.n128_u64[0] = v54;
          v60 = sub_10058D638(v28, v49, (uint64_t)v13, v59, v56, (uint64_t)v10, (uint64_t)v58, (uint64_t)v17);
          v62 = v61;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v10, v74);
          sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007FA760);

          v63 = objc_retain(*(id *)(v3
                                  + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView));
          v64 = objc_msgSend(v58, "traitCollection");
          v65.n128_f64[0] = v60;
          sub_10058CCC4(v28, v49, (uint64_t)v64, v71, (uint64_t)v17, v65, v62);
          swift_release(v72);
          swift_unknownObjectRelease(v58);

          swift_release(v49);
          v66 = swift_release(v28);
          (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v17, v70, v66);
          return;
        }
      }
      else if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease(v46);
      v49 = 0;
      goto LABEL_34;
    }
    swift_bridgeObjectRelease(v46);
    v28 = 0;
    goto LABEL_22;
  }
}

void sub_100027150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  Swift::Bool v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  id v30;
  _BYTE v31[40];
  char v32[24];
  UIImage_optional v33;

  v3 = v2;
  v5 = objc_retain(*(id *)(*(_QWORD *)(v2
                                     + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_lockupView)
                         + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
  ArtworkView.isImageHidden.setter(1);
  v6 = type metadata accessor for ArtworkView(0);
  v7 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v29 = v5;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v5, a2, v6, v7);
  v8 = *(char **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension34MixedMediaLockupCollectionViewCell_mediaView);
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews];
  swift_beginAccess(&v8[OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_imageViews], v32, 0, 0);
  v10 = *v9;
  v28 = v8;
  if ((unint64_t)*v9 >> 62)
  {
    if (v10 < 0)
      v21 = *v9;
    else
      v21 = v10 & 0xFFFFFFFFFFFFFF8;
    v22 = v8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v21);
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = v8;
    swift_bridgeObjectRetain(v10);
    if (!v11)
      goto LABEL_13;
  }
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  v13 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v10);
    else
      v14 = *(id *)(v10 + 8 * v13 + 32);
    v15 = v14;
    ++v13;
    v30 = v14;
    v16 = type metadata accessor for BorderedScreenshotView();
    v17 = sub_10000E99C(&qword_1007F4CB0, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v18 = v15;
    AnyHashable.init<A>(_:)(&v30, v16, v17);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v31, 1);
    sub_100019370((uint64_t)v31);
    v19 = *(id *)&v18[OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView];
    v33.value.super.isa = 0;
    v33.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v33, v20);

  }
  while (v11 != v13);
LABEL_13:
  swift_bridgeObjectRelease(v10);
  Strong = swift_unknownObjectWeakLoadStrong(&v28[OBJC_IVAR____TtC22SubscribePageExtension15LockupMediaView_videoView]);
  if (Strong)
  {
    v24 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_10080FD18), "setImage:", 0);
    v30 = v24;
    v25 = type metadata accessor for VideoView(0);
    v26 = sub_10000E99C((unint64_t *)&qword_1007F4CB8, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v27 = v24;
    AnyHashable.init<A>(_:)(&v30, v25, v26);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v31, 1);

    sub_100019370((uint64_t)v31);
  }

}

uint64_t type metadata accessor for SearchAdTransparencyLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F4CE8;
  if (!qword_1007F4CE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchAdTransparencyLabel);
  return result;
}

uint64_t sub_10002746C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_1006704D0;
  v2[4] = &unk_1006704E8;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + qword_100850688);
}

void sub_1000274D0(void *a1, id a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "layer");
  v4 = objc_msgSend(a1, "CGContext");
  objc_msgSend(v3, "renderInContext:", v4);

}

uint64_t sub_10002754C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_10002756C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

char *sub_1000275A0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  void *v23;
  char *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];

  v3 = type metadata accessor for AutomationSemantics(0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DirectionalTextAlignment(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_1007F4CC0;
  v14 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v15 = v1;
  *(_QWORD *)&v1[v13] = objc_msgSend(v14, "init");
  v16 = &v15[qword_1007F4CD8];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = &v15[qword_1007F4CE0];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  *(_QWORD *)&v15[qword_1007F4CC8] = a1;
  v18 = a1;
  sub_1000281F0(v18);
  *(_QWORD *)&v15[qword_1007F4CD0] = v19;

  v20 = type metadata accessor for FontUseCase(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DirectionalTextAlignment.none(_:), v6);
  v21 = (id)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v12, 2, 0, 1, 0, v9, 0, 0);
  objc_msgSend(v21, "setUserInteractionEnabled:", 1);
  memset(v30, 0, sizeof(v30));
  memset(v29, 0, sizeof(v29));
  v22 = (char *)v21;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x7369747265766461, 0xED0000746E656D65, v30, v29);
  sub_1000131E0((uint64_t)v29);
  sub_1000131E0((uint64_t)v30);
  UIView.setAutomationSemantics(_:)(v5);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  v23 = *(void **)&v22[qword_1007F4CC0];
  objc_msgSend(v23, "addTarget:action:", v22, "didTapLabelWithGestureRecognizer:");
  objc_msgSend(v23, "setDelegate:", v22);
  v24 = v22;
  v25 = v23;
  objc_msgSend(v24, "addGestureRecognizer:", v25);

  return v24;
}

double sub_100027874(char *a1)
{
  objc_class *ObjectType;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  UIView *v7;
  unint64_t v8;
  double v9;
  objc_super v11;
  _BYTE v12[40];
  CGRect v13;
  char v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = (uint64_t *)&a1[qword_1007F4CD8];
  if ((a1[qword_1007F4CD8 + 16] & 1) != 0)
  {
    v4 = a1;
  }
  else
  {
    v6 = *v3;
    v5 = v3[1];
    v7 = a1;
    sub_1000279C4(v6, v5, (uint64_t)v12);
    sub_100028408((uint64_t)v12, (uint64_t)&v13);
    if ((v14 & 1) == 0)
    {
      v8 = (unint64_t)UIAccessibilityConvertFrameToScreenCoordinates(v13, v7);
      goto LABEL_6;
    }
  }
  v11.receiver = a1;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "accessibilityFrame");
LABEL_6:
  v9 = *(double *)&v8;

  return v9;
}

id sub_100027958(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v11, "setAccessibilityFrame:", a3, a4, a5, a6);
}

void sub_1000279C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  id v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  v8 = objc_msgSend(v3, "attributedText");
  if (v8)
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)NSTextStorage), "initWithAttributedString:", v8);
    v10 = objc_msgSend(objc_allocWithZone((Class)NSLayoutManager), "init");
    objc_msgSend(v9, "addLayoutManager:", v10);
    objc_msgSend(v4, "bounds");
    v13 = objc_msgSend(objc_allocWithZone((Class)NSTextContainer), "initWithSize:", v11, v12);
    objc_msgSend(v13, "setLineFragmentPadding:", 0.0);
    objc_msgSend(v10, "addTextContainer:", v13);
    v22 = 0;
    v23 = 0;
    objc_msgSend(v10, "characterRangeForGlyphRange:actualGlyphRange:", a1, a2, &v22);
    objc_msgSend(v10, "boundingRectForGlyphRange:inTextContainer:", v22, v23, v13);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;

  }
  else
  {
    v15 = 0;
    v17 = 0;
    v19 = 0;
    v21 = 0;
  }
  *(_QWORD *)a3 = v15;
  *(_QWORD *)(a3 + 8) = v17;
  *(_QWORD *)(a3 + 16) = v19;
  *(_QWORD *)(a3 + 24) = v21;
  *(_BYTE *)(a3 + 32) = v8 == 0;
}

void sub_100027B98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  NSString *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSString *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  char v25[112];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v2, v25);
  *(_OWORD *)(inited + 16) = xmmword_10066F870;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v4 = qword_1007F1C08;
  v5 = NSForegroundColorAttributeName;
  if (v4 != -1)
    swift_once(&qword_1007F1C08, sub_1002FE0D4);
  v6 = (void *)qword_100853BF8;
  v7 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v8 = v6;
  v9 = NSFontAttributeName;
  v10 = objc_msgSend(v1, "font");
  *(_QWORD *)(inited + 104) = sub_10000DF3C(&qword_1007F4D48);
  *(_QWORD *)(inited + 80) = v10;
  v11 = sub_1003699BC(inited);
  sub_100019574(0, (unint64_t *)&unk_1007F4D50, NSAttributedString_ptr);
  v12 = sub_10000DF3C(&qword_1007F5840);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10066FE60;
  v14 = *(void **)&v1[qword_1007F4CD0];
  *(_QWORD *)(v13 + 32) = v14;
  v24 = v13;
  specialized Array._endMutation()(v13);
  v15 = v14;
  v16 = (void *)NSAttributedString.init(images:for:adjustsImageSizeForAccessibilityContentSizeCategory:interItemSpacing:defaultAttributes:imagesShouldRenderAsTemplates:)(v24, objc_msgSend(v1, "traitCollection"), 0, v11, 0, 4.0);
  v17 = objc_msgSend(v16, "length");
  v18 = &v1[qword_1007F4CD8];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = v17;
  v18[16] = 0;
  v19 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v16);
  v20 = *(_QWORD *)&v1[qword_1007F4CE0 + 8];
  if (v20)
  {
    v21 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v20);
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v21, "initWithString:", v22, swift_bridgeObjectRelease(v20).n128_f64[0]);

    objc_msgSend(v19, "appendAttributedString:", v23);
  }
  objc_msgSend(v1, "setAttributedText:", v19);

}

void sub_100027E1C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeLabel(0);
  v8 = (void (*)(uint64_t))method lookup function for DynamicTypeLabel(v7, &method descriptor for DynamicTypeLabel.updateFont(to:));
  v8(a1);
  v9 = *(void **)&v2[qword_1007F4CC8];
  v10 = objc_msgSend(v2, "traitCollection");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");

  UIView.traitOverrides.getter();
  UIMutableTraits.preferredContentSizeCategory.setter(v11, v4, &protocol witness table for UITraitOverrides);
  UIView.traitOverrides.setter(v6);
  objc_msgSend(v9, "updateTraitsIfNeeded");
  sub_1000281F0(v9);
  v12 = *(void **)&v2[qword_1007F4CD0];
  *(_QWORD *)&v2[qword_1007F4CD0] = v13;

  sub_100027B98();
}

BOOL sub_100027F54(_BYTE *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t *v4;
  _BOOL8 v5;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _BYTE *v12;
  uint64_t v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  _BYTE v24[40];
  double v25[4];
  char v26;
  CGPoint v27;
  CGRect v28;

  v4 = (uint64_t *)&a1[qword_1007F4CD8];
  if ((a1[qword_1007F4CD8 + 16] & 1) != 0)
    return 0;
  v9 = *v4;
  v8 = v4[1];
  v10 = a3;
  v11 = a4;
  v12 = a1;
  sub_1000279C4(v9, v8, (uint64_t)v24);
  v13 = sub_100028408((uint64_t)v24, (uint64_t)v25);
  if ((v26 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    v14 = CGRect.adding(outsets:)(v13, 10.0, 5.0, 10.0, 5.0, v25[0], v25[1], v25[2], v25[3]);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    objc_msgSend(v11, "locationInView:", v12);
    v27.x = v21;
    v27.y = v22;
    v28.origin.x = v14;
    v28.origin.y = v16;
    v28.size.width = v18;
    v28.size.height = v20;
    v5 = CGRectContainsPoint(v28, v27);
  }

  return v5;
}

void sub_100028070(char *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;

  v3 = *(_QWORD *)&a1[qword_1007F4CC8] + qword_100806E30;
  v4 = *(void (**)(uint64_t))v3;
  if (*(_QWORD *)v3)
  {
    v6 = *(_QWORD *)(v3 + 8);
    v7 = a3;
    v9 = a1;
    v8 = sub_100019320((uint64_t)v4, v6);
    v4(v8);
    sub_100019310((uint64_t)v4, v6);

  }
}

void sub_100028110()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.SearchAdTransparencyLabel", 48, "init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)", 119, 0);
  __break(1u);
}

uint64_t sub_10002813C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1007F4CE0 + 8));
}

uint64_t sub_10002818C(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1007F4CE0 + 8));
}

uint64_t sub_1000281E8()
{
  return type metadata accessor for SearchAdTransparencyLabel(0);
}

void sub_1000281F0(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  objc_msgSend(a1, "sizeToFit");
  objc_msgSend(a1, "bounds");
  v6 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithBounds:", v2, v3, v4, v5);
  v7 = swift_allocObject(&unk_100722B10, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  v8 = swift_allocObject(&unk_100722B38, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_1000283B8;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_1000283D0;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10002756C;
  v12[3] = &unk_100722B50;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = a1;
  swift_retain(v8);
  objc_msgSend(v6, "imageWithActions:", v9, swift_release(v10).n128_f64[0]);

  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 115, 28, 31, 1);
  swift_release(v7);
  swift_release(v8);
  if ((v6 & 1) != 0)
    __break(1u);
}

uint64_t sub_100028394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000283B8(void *a1)
{
  uint64_t v1;

  sub_1000274D0(a1, *(id *)(v1 + 16));
}

uint64_t sub_1000283C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000283D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000283F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100028400(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100028408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_100028450(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  double left;
  double bottom;
  double right;
  char *v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  v9 = &v4[OBJC_IVAR____TtC22SubscribePageExtension30SearchActionCollectionViewCell_itemLayoutContext];
  v10 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension30SearchActionCollectionViewCell_actionContentView;
  v12 = objc_allocWithZone((Class)type metadata accessor for SearchActionContentView(0));
  v13 = v4;
  *(_QWORD *)&v4[v11] = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v23.receiver = v13;
  v23.super_class = (Class)type metadata accessor for SearchActionCollectionViewCell(0);
  v14 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = (char *)v14;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v20 = objc_msgSend(v18, "contentView");
  v21 = *(id *)&v18[OBJC_IVAR____TtC22SubscribePageExtension30SearchActionCollectionViewCell_actionContentView];
  objc_msgSend(v20, "addSubview:", v21);

  return v18;
}

id sub_10002882C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchActionCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100028898()
{
  return type metadata accessor for SearchActionCollectionViewCell(0);
}

uint64_t type metadata accessor for SearchActionCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F4DA8;
  if (!qword_1007F4DA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchActionCollectionViewCell);
  return result;
}

void sub_1000288DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

double sub_100028954(uint64_t a1)
{
  type metadata accessor for SearchActionContentView(0);
  return sub_100535090(a1);
}

void sub_100028984(uint64_t a1, uint64_t a2)
{
  sub_100533968(a1, a2);
}

uint64_t sub_1000289AC(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  UIImage_optional v8;

  v4 = *(_QWORD *)(*(_QWORD *)(v3
                             + OBJC_IVAR____TtC22SubscribePageExtension30SearchActionCollectionViewCell_actionContentView)
                 + OBJC_IVAR____TtC22SubscribePageExtension23SearchActionContentView_iconView);
  v8.value.super.isa = 0;
  v8.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v8, a3);
  v5 = type metadata accessor for ArtworkView(0);
  v6 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1, v5, v6);
}

uint64_t sub_100028A34()
{
  return sub_10000E99C(&qword_1007F4DB8, type metadata accessor for SearchActionCollectionViewCell, (uint64_t)"Q&\v");
}

uint64_t sub_100028A60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F4A50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SearchLandingPageShelfLayoutSpacingProvider()
{
  return &type metadata for SearchLandingPageShelfLayoutSpacingProvider;
}

uint64_t sub_100028AB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  __n128 v22;
  uint64_t v24;

  v2 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - v16;
  ShelfLayoutContext.surroundingShelves.getter(v7, v4, v15);
  sub_100011088((uint64_t)v4, &qword_1007F4A68);
  sub_10002955C((uint64_t)v7, (uint64_t)v10);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18) == 1)
  {
    sub_100011088((uint64_t)v10, &qword_1007F4A68);
    v20 = type metadata accessor for Shelf.ContentType(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100670650);
    ReadOnlyLens.subscript.getter(KeyPath, v18);
    v22 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v10, v18, v22);
    v20 = type metadata accessor for Shelf.ContentType(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
  }
  sub_1000295A4((uint64_t)v17, (uint64_t)v13);
  type metadata accessor for Shelf.ContentType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20) == 1)
  {
    a1[3] = (uint64_t)&type metadata for Double;
    a1[4] = (uint64_t)&protocol witness table for Double;
    *a1 = 0;
  }
  else
  {
    sub_1002AD1EC(a1);
    sub_100011088((uint64_t)v17, (uint64_t *)&unk_1007F53A0);
    v17 = v13;
  }
  return sub_100011088((uint64_t)v17, (uint64_t *)&unk_1007F53A0);
}

uint64_t sub_100028D24@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  __n128 v14;
  int v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;

  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v10);
  KeyPath = swift_getKeyPath(&unk_100670650);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  v14 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v14);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v15 == enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:)
    || v15 == enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:))
  {
    if (qword_1007F2A00 != -1)
      swift_once(&qword_1007F2A00, sub_10042D0F4);
    v18 = type metadata accessor for StaticDimension(0);
    v19 = v18;
    v20 = qword_100856150;
    goto LABEL_13;
  }
  if (v15 == enum case for Shelf.ContentType.action(_:))
  {
    if (qword_1007F2A28 != -1)
      swift_once(&qword_1007F2A28, sub_10042D148);
    v18 = type metadata accessor for StaticDimension(0);
    v19 = v18;
    v20 = qword_1008561C8;
LABEL_13:
    v21 = sub_1000117A8(v18, (uint64_t)v20);
    *((_QWORD *)a2 + 3) = v19;
    *((_QWORD *)a2 + 4) = &protocol witness table for StaticDimension;
    v22 = sub_1000117C0(a2);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v22, v21, v19);
  }
  sub_1002AD47C(a1, a2, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100028F34@<X0>(double *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  __n128 v23;
  uint64_t KeyPath;
  __n128 v25;
  double (*v26)(char *, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  double *v43;
  char *v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  double *v54;
  _QWORD *v55;
  char *v56;
  char v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  double *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;

  v65 = a1;
  v1 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v59 - v6;
  v64 = type metadata accessor for Shelf.ContentType(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)&v59 - v10;
  __chkstk_darwin(v11);
  v62 = (char *)&v59 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - v14;
  v16 = type metadata accessor for PageGrid(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v22 = PageGrid.interRowSpace.getter(v21);
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  ShelfLayoutContext.shelf.getter(v23);
  KeyPath = swift_getKeyPath(&unk_100670650);
  ReadOnlyLens.subscript.getter(KeyPath, v1);
  v25 = swift_release(KeyPath);
  v26 = *(double (**)(char *, uint64_t, __n128))(v2 + 8);
  v27.n128_f64[0] = v26(v7, v1, v25);
  ShelfLayoutContext.shelf.getter(v27);
  v28 = swift_getKeyPath(&unk_100670680);
  ReadOnlyLens.subscript.getter(v28, v1);
  v29 = swift_release(v28);
  v26(v4, v1, v29);
  v30 = v66;
  if (*(_QWORD *)(v66 + 16))
  {
    sub_100011020(v66 + 32, (uint64_t)&v67);
  }
  else
  {
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
  }
  v31 = v22 * 0.5;
  swift_bridgeObjectRelease(v30);
  v32 = v64;
  v33 = v63;
  if (!*((_QWORD *)&v68 + 1))
  {
    sub_100011088((uint64_t)&v67, (uint64_t *)&unk_1008027C0);
    v70 = 0u;
    v71 = 0u;
    v72 = 0;
    goto LABEL_12;
  }
  v34 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v35 = sub_10000DF3C(&qword_1007F4DC8);
  if ((swift_dynamicCast(&v70, &v67, v34, v35, 6) & 1) == 0)
  {
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    goto LABEL_12;
  }
  if (!*((_QWORD *)&v71 + 1))
  {
LABEL_12:
    sub_100011088((uint64_t)&v70, &qword_1007F4DC0);
LABEL_13:
    v43 = v65;
    *((_QWORD *)v65 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v43 + 4) = &protocol witness table for CGFloat;
    *v43 = v31;
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v32);
  }
  sub_100010F3C(&v70, (uint64_t)v73);
  v36 = v74;
  v37 = v75;
  sub_100011064(v73, v74);
  if ((SearchAdProviding.isSearchAd.getter(v36, v37) & 1) == 0)
  {
LABEL_26:
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v73);
    goto LABEL_13;
  }
  v38 = *(void (**)(char *, _QWORD, uint64_t))(v33 + 104);
  v38(v62, enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:), v32);
  v39 = sub_100029514();
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v32, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v67, v32, v39);
  v40 = *((_QWORD *)&v70 + 1);
  v41 = *((_QWORD *)&v67 + 1);
  if (v70 == v67)
  {
    v42 = 1;
    v41 = *((_QWORD *)&v70 + 1);
  }
  else
  {
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, *((_QWORD *)&v70 + 1), v67, *((_QWORD *)&v67 + 1), 0);
  }
  v45 = v61;
  swift_bridgeObjectRelease(v40);
  v46 = swift_bridgeObjectRelease(v41);
  v47 = *(void (**)(char *, uint64_t, __n128))(v33 + 8);
  v47(v62, v32, v46);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v45, v15, v32);
  if ((v42 & 1) != 0)
    goto LABEL_18;
  v48 = v60;
  v38(v60, enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:), v32);
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v32, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v67, v32, v39);
  v49 = *((_QWORD *)&v70 + 1);
  v50 = *((_QWORD *)&v67 + 1);
  if (v70 != v67)
  {
    v56 = v45;
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, *((_QWORD *)&v70 + 1), v67, *((_QWORD *)&v67 + 1), 0);
    swift_bridgeObjectRelease(v49);
    v58 = swift_bridgeObjectRelease(v50);
    v47(v48, v32, v58);
    ((void (*)(char *, uint64_t))v47)(v56, v32);
    if ((v57 & 1) != 0)
      goto LABEL_19;
    if (qword_1007F1DC0 != -1)
      swift_once(&qword_1007F1DC0, sub_100380490);
    v31 = v31 + fabs(*(double *)&xmmword_100854120);
    goto LABEL_26;
  }
  v51 = swift_bridgeObjectRelease_n(*((_QWORD *)&v70 + 1), 2);
  v47(v48, v32, v51);
LABEL_18:
  ((void (*)(char *, uint64_t))v47)(v45, v32);
LABEL_19:
  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v52 = type metadata accessor for StaticDimension(0);
  v53 = sub_1000117A8(v52, (uint64_t)qword_100856150);
  v54 = v65;
  *((_QWORD *)v65 + 3) = v52;
  *((_QWORD *)v54 + 4) = &protocol witness table for StaticDimension;
  v55 = sub_1000117C0(v54);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v55, v53, v52);
  ((void (*)(char *, uint64_t))v47)(v15, v32);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v73);
}

unint64_t sub_100029514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4DD0;
  if (!qword_1007F4DD0)
  {
    v1 = type metadata accessor for Shelf.ContentType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Shelf.ContentType, v1);
    atomic_store(result, (unint64_t *)&qword_1007F4DD0);
  }
  return result;
}

uint64_t sub_10002955C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F4A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000295A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FlowActionRunner(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F4DE0;
  if (!qword_1007F4DE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FlowActionRunner);
  return result;
}

uint64_t sub_100029628(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_1008506A8);
}

uint64_t sub_100029670()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  id v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + qword_1007F4DD8);
  v3 = objc_msgSend(Strong, "nextResponder");

  if (!v3)
    return 0;
  v4 = UIResponder.nearestActionRunner.getter();

  if (v4 && v4 == v1)
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v6 = type metadata accessor for OSLogger(0, v5);
    sub_1000117A8(v6, (uint64_t)qword_100857618);
    v7 = sub_10000DF3C(&qword_1007FD430);
    v8 = type metadata accessor for LogMessage(0);
    v9 = swift_allocObject(v7, ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) | 7);
    *(_OWORD *)(v9 + 16) = xmmword_10066F860;
    LogMessage.init(stringLiteral:)(0xD000000000000046, 0x800000010062F7E0);
    LogMessage.init(stringLiteral:)(0xD000000000000039, 0x800000010062F830);
    LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010062F870);
    Logger.error(_:)(v9, v6, &protocol witness table for OSLogger);
    swift_release();
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  return v4;
}

void sub_100029820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  void (*v34)(char *, uint64_t, __n128);
  __n128 v35;
  __n128 v36;
  void (*v37)(char *, _QWORD, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void);
  uint64_t (*v59)(void);
  uint64_t (*v60)(void);
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  __n128 v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;

  v110 = a2;
  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowPage(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v108 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v109 = (char *)&v107 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v107 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v107 - v19;
  type metadata accessor for FlowAction(0);
  v21 = swift_dynamicCastClass(a1);
  if (v21)
  {
    v22 = v21;
    v107 = a1;
    swift_retain_n(a1, 2);
    FlowAction.page.getter(v23);
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
    v24(v17, enum case for FlowPage.arcadeWelcome(_:), v10);
    v25 = sub_10000E99C((unint64_t *)&unk_1007F79F0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPage, (uint64_t)&protocol conformance descriptor for FlowPage);
    dispatch thunk of RawRepresentable.rawValue.getter(&v114, v10, v25);
    dispatch thunk of RawRepresentable.rawValue.getter(&v112, v10, v25);
    v26 = v115;
    v27 = v113;
    if (v114 == v112 && v115 == v113)
    {
      v28 = 1;
      v27 = v115;
    }
    else
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v114, v115, v112, v113, 0);
    }
    swift_bridgeObjectRelease(v26);
    v33 = swift_bridgeObjectRelease(v27);
    v34 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
    v34(v17, v10, v33);
    ((void (*)(char *, uint64_t))v34)(v20, v10);
    if ((v28 & 1) != 0)
    {
      v36 = swift_release();
      sub_10002EA08(v22, v110, v36);
LABEL_19:
      swift_release();
      return;
    }
    v37 = v24;
    v38 = v109;
    FlowAction.page.getter(v35);
    v39 = v108;
    v37(v108, enum case for FlowPage.gameCenterDashboard(_:), v10);
    dispatch thunk of RawRepresentable.rawValue.getter(&v114, v10, v25);
    dispatch thunk of RawRepresentable.rawValue.getter(&v112, v10, v25);
    v40 = v115;
    v41 = v113;
    if (v114 == v112 && v115 == v113)
    {
      v42 = swift_bridgeObjectRelease_n(v115, 2);
      v34(v39, v10, v42);
      ((void (*)(char *, uint64_t))v34)(v38, v10);
      swift_release();
    }
    else
    {
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v114, v115, v112, v113, 0);
      swift_bridgeObjectRelease(v40);
      v44 = swift_bridgeObjectRelease(v41);
      v34(v39, v10, v44);
      ((void (*)(char *, uint64_t))v34)(v38, v10);
      v45 = swift_release();
      if ((v43 & 1) == 0)
      {
        sub_10002F110(v22, v110, v45);
        goto LABEL_19;
      }
    }
    type metadata accessor for GameCenter(0);
    v46 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v48 = static OS_dispatch_queue.main.getter(v47);
    v116 = v46;
    v117 = &protocol witness table for OS_dispatch_queue;
    v114 = v48;
    static GameCenter.withLocalPlayer(on:_:)(&v114, sub_10002D3A4, 0, v49);
LABEL_15:
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v114);
    goto LABEL_19;
  }
  v29 = a3;
  type metadata accessor for TabChangeAction(0);
  v30 = swift_dynamicCastClass(a1);
  if (v30)
  {
    v31 = v30;
    swift_retain(a1);
    sub_10002AADC(v31, v32, v29);
LABEL_23:
    swift_release();
    return;
  }
  type metadata accessor for SheetAction(0);
  v50 = swift_dynamicCastClass(a1);
  if (v50)
  {
    v51 = v50;
    swift_retain(a1);
    sub_10002AC0C(v51, v110, v29);
    goto LABEL_23;
  }
  type metadata accessor for AlertAction(0);
  v52 = swift_dynamicCastClass(a1);
  if (v52)
  {
    v53 = v52;
    swift_retain(a1);
    sub_10002B980(v53, v110, v29);
    goto LABEL_23;
  }
  type metadata accessor for AdTransparencyAction(0);
  if (!swift_dynamicCastClass(a1))
  {
    type metadata accessor for ShareSheetAction(0);
    v54 = swift_dynamicCastClass(a1);
    if (v54)
    {
      v55 = v54;
      swift_retain(a1);
      sub_10002F524(v55, v110);
      goto LABEL_23;
    }
    type metadata accessor for ReportConcernAction(0);
    v56 = swift_dynamicCastClass(a1);
    if (v56)
    {
      v57 = v56;
      swift_retain(a1);
      v58 = (uint64_t (*)(void))&ReportConcernAction.reasons.getter;
      v59 = (uint64_t (*)(void))&ReportConcernAction.explanation.getter;
      v60 = (uint64_t (*)(void))&ReportConcernAction.sendAction.getter;
      v61 = v57;
      v62 = v110;
      v63 = 11;
LABEL_31:
      sub_10002F870(v61, v62, v58, v59, v60, v63);
      goto LABEL_23;
    }
    type metadata accessor for ReviewSummaryReportConcernAction(0);
    v64 = swift_dynamicCastClass(a1);
    if (v64)
    {
      v65 = v64;
      swift_retain(a1);
      v58 = (uint64_t (*)(void))&ReviewSummaryReportConcernAction.concerns.getter;
      v59 = (uint64_t (*)(void))&ReviewSummaryReportConcernAction.comment.getter;
      v60 = (uint64_t (*)(void))&ReviewSummaryReportConcernAction.sendAction.getter;
      v61 = v65;
      v62 = v110;
      v63 = 12;
      goto LABEL_31;
    }
    type metadata accessor for CompoundAction(0);
    if (swift_dynamicCastClass(a1))
    {
      v107 = a1;
      v66 = swift_retain(a1);
      v67 = CompoundAction.actions.getter(v66);
      v68 = v67;
      if ((unint64_t)v67 >> 62)
      {
        if (v67 >= 0)
          v67 &= 0xFFFFFFFFFFFFFF8uLL;
        v69 = _CocoaArrayWrapper.endIndex.getter(v67);
      }
      else
      {
        v69 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v70 = v6;
      if (v69)
      {
        if (v69 < 1)
        {
          __break(1u);
        }
        else
        {
          v71 = 0;
          v109 = (char *)(v68 & 0xC000000000000001);
          v72 = enum case for ActionRunner.Origin.userInitiated(_:);
          v73 = v68;
          do
          {
            if (v109)
            {
              v74 = specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v68);
            }
            else
            {
              v74 = *(_QWORD *)(v68 + 8 * v71 + 32);
              swift_retain(v74);
            }
            ++v71;
            (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v9, v72, v5);
            sub_100407E60(v74, v110, (uint64_t)v9, v29);
            v70 = v6;
            v75 = swift_release();
            (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v75);
            v68 = v73;
          }
          while (v69 != v71);
          swift_release();
          swift_bridgeObjectRelease(v73);
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease(v68);
      }
      return;
    }
    type metadata accessor for GameCenterDashboardAction();
    if (swift_dynamicCastClass(a1))
    {
      swift_retain(a1);
      sub_10002FADC();
      goto LABEL_23;
    }
    type metadata accessor for GameCenterPlayerProfileAction(0);
    v76 = a1;
    if (swift_dynamicCastClass(a1))
    {
      swift_retain(a1);
      sub_10002FCFC();
      goto LABEL_23;
    }
    type metadata accessor for GameCenterAchievementsAction(0);
    v77 = swift_dynamicCastClass(a1);
    if (v77)
    {
      v78 = v77;
      type metadata accessor for GameCenter(0);
      v79 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v80 = v76;
      v81 = swift_retain(v76);
      v82 = static OS_dispatch_queue.main.getter(v81);
      v116 = v79;
      v117 = &protocol witness table for OS_dispatch_queue;
      v114 = v82;
      v83 = (_QWORD *)swift_allocObject(&unk_100722DC8, 32, 7);
      v84 = v111;
      v83[2] = v78;
      v83[3] = v84;
      swift_retain(v80);
      v85 = swift_retain(v84);
      v86 = sub_100030284;
LABEL_52:
      static GameCenter.withLocalPlayer(on:_:)(&v114, v86, v83, v85);
      swift_release();
      goto LABEL_15;
    }
    type metadata accessor for GameCenterInvitePlayerAction(0);
    v87 = swift_dynamicCastClass(a1);
    if (v87)
    {
      v88 = v87;
      type metadata accessor for GameCenter(0);
      v89 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v90 = v76;
      v91 = swift_retain(v76);
      v92 = static OS_dispatch_queue.main.getter(v91);
      v116 = v89;
      v117 = &protocol witness table for OS_dispatch_queue;
      v114 = v92;
      v83 = (_QWORD *)swift_allocObject(&unk_100722DA0, 40, 7);
      v83[2] = a3;
      v83[3] = v88;
      v93 = v111;
      v83[4] = v111;
      swift_retain(v90);
      swift_retain(v93);
      v85 = swift_retain(a3);
      v86 = sub_100030248;
      goto LABEL_52;
    }
    type metadata accessor for GameCenterDenylistPlayerAction(0);
    v94 = swift_dynamicCastClass(a1);
    if (v94)
    {
      v95 = v94;
      type metadata accessor for GameCenter(0);
      v96 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v97 = swift_retain(v76);
      v98 = static OS_dispatch_queue.main.getter(v97);
      v116 = v96;
      v117 = &protocol witness table for OS_dispatch_queue;
      v114 = v98;
      v99 = swift_retain(v76);
      static GameCenter.withLocalPlayer(on:_:)(&v114, sub_10003020C, v95, v99);
      swift_release();
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v114);
      goto LABEL_19;
    }
    type metadata accessor for GameCenterLeaderboardsAction(0);
    v100 = swift_dynamicCastClass(a1);
    if (v100)
    {
      v101 = v100;
      type metadata accessor for GameCenter(0);
      v102 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v103 = v76;
      v104 = swift_retain(v76);
      v105 = static OS_dispatch_queue.main.getter(v104);
      v116 = v102;
      v117 = &protocol witness table for OS_dispatch_queue;
      v114 = v105;
      v83 = (_QWORD *)swift_allocObject(&unk_100722D78, 32, 7);
      v106 = v111;
      v83[2] = v101;
      v83[3] = v106;
      swift_retain(v103);
      v85 = swift_retain(v106);
      v86 = sub_100030204;
      goto LABEL_52;
    }
    if (sub_100029670())
    {
      dispatch thunk of ActionRunner.handle(action:from:asPartOf:)(a1, v110, a3);
      goto LABEL_23;
    }
  }
}

double sub_10002A1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_1007F4DD8);
  v9 = objc_msgSend(Strong, "nextResponder");

  if (v9)
  {
    v11 = UIResponder.nearestActionRunner.getter();

    if (v11)
    {
      if (v11 == v4)
      {
        if (qword_1007F3450 != -1)
          swift_once(&qword_1007F3450, sub_10060243C);
        v12 = type metadata accessor for OSLogger(0, v10);
        sub_1000117A8(v12, (uint64_t)qword_100857618);
        v13 = sub_10000DF3C(&qword_1007FD430);
        v14 = type metadata accessor for LogMessage(0);
        v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) | 7);
        *(_OWORD *)(v15 + 16) = xmmword_10066F860;
        LogMessage.init(stringLiteral:)(0xD000000000000046, 0x800000010062F7E0);
        LogMessage.init(stringLiteral:)(0xD000000000000039, 0x800000010062F830);
        LogMessage.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010062F870);
        Logger.error(_:)(v15, v12, &protocol witness table for OSLogger);
        swift_release(v4);
        v10.n128_u64[0] = swift_bridgeObjectRelease(v15).n128_u64[0];
      }
      else
      {
        dispatch thunk of ActionRunner.send(metricsData:from:asPartOf:)(a1, a2, a3);
        v10.n128_u64[0] = swift_release(v11).n128_u64[0];
      }
    }
  }
  return v10.n128_f64[0];
}

uint64_t sub_10002A3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, uint64_t, __n128);
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unsigned int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t Strong;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71[24];
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;

  v64 = a3;
  v65 = a5;
  v63 = a4;
  v70 = a1;
  v6 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v6);
  v62 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowDestination(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v66 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FamilyCircleLookupResult(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - v18;
  v20 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v20);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (uint64_t *)((char *)&v61 - v24);
  v26 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = swift_retain(a2);
  v30 = FlowAction.presentationContext.getter(v29);
  v69 = v28;
  FlowAction.animationBehavior.getter(v30);
  v31 = swift_release();
  v32 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v32(v19, v70, v10, v31);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v19, v10);
  if (v33 == enum case for FamilyCircleLookupResult.notInFamily(_:))
  {
    ((void (*)(_BYTE *, char *, uint64_t))v32)(v13, v19, v10);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 96))(v13, v10);
    if (*v13 == 1)
    {
      v34 = sub_10000DF3C((uint64_t *)&unk_1007F79B0);
      v35 = (char *)v25 + *(int *)(v34 + 48);
      v36 = (char *)v25 + *(int *)(v34 + 64);
      v37 = v64;
      *v25 = v64;
      v38 = (unsigned int *)&enum case for ArcadeWelcomePage.ContentType.createNewFamily(_:);
LABEL_7:
      v40 = *v38;
      v41 = type metadata accessor for ArcadeWelcomePage.ContentType(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v35, v40, v41);
      v42 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v36, v63, v42);
      v43 = v68;
      swift_storeEnumTagMultiPayload(v25, v68, 17);
      v44 = v67;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v25, 0, 1, v43);
      v45 = swift_retain(v37);
      goto LABEL_9;
    }
  }
  else if (v33 == enum case for FamilyCircleLookupResult.inFamily(_:))
  {
    ((void (*)(_BYTE *, char *, uint64_t))v32)(v16, v19, v10);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 96))(v16, v10);
    if (*v16 == 1)
    {
      v39 = sub_10000DF3C((uint64_t *)&unk_1007F79B0);
      v35 = (char *)v25 + *(int *)(v39 + 48);
      v36 = (char *)v25 + *(int *)(v39 + 64);
      v37 = v64;
      *v25 = v64;
      v38 = (unsigned int *)&enum case for ArcadeWelcomePage.ContentType.familyOrganizer(_:);
      goto LABEL_7;
    }
  }
  v44 = v67;
  v43 = v68;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v25, 1, 1, v68);
LABEL_9:
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v19, v10, v45);
  sub_1000194E4((uint64_t)v25, (uint64_t)v22, &qword_1007F7950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v22, 1, v43) == 1)
  {
    sub_100011088((uint64_t)v25, &qword_1007F7950);
    sub_10002F0D4((uint64_t)v69, type metadata accessor for FlowPresentationHints);
    v46 = v22;
    v47 = &qword_1007F7950;
  }
  else
  {
    v48 = v66;
    v49 = v65 + 16;
    sub_10002EF34((uint64_t)v22, v66);
    swift_beginAccess(v49, v71, 0, 0);
    Strong = swift_weakLoadStrong(v49);
    if (!Strong)
    {
      sub_10002F0D4(v48, type metadata accessor for FlowDestination);
      sub_100011088((uint64_t)v25, &qword_1007F7950);
      return sub_10002F0D4((uint64_t)v69, type metadata accessor for FlowPresentationHints);
    }
    v51 = (void *)swift_unknownObjectUnownedLoadStrong(Strong + qword_1007F4DD8);
    sub_10050AC30((uint64_t)v72);
    swift_release();

    v52 = v73;
    if (v73)
    {
      v53 = v74;
      v54 = sub_100011064(v72, v73);
      v55 = FlowAction.referrerUrl.getter(v54);
      v57 = v56;
      v58 = (uint64_t)v62;
      FlowAction.referrerData.getter();
      v59 = (uint64_t)v69;
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 16))(v48, v69, v55, v57, v58, v52, v53);
      swift_bridgeObjectRelease(v57);
      sub_100011088(v58, (uint64_t *)&unk_1008086D0);
      sub_10002F0D4(v48, type metadata accessor for FlowDestination);
      sub_100011088((uint64_t)v25, &qword_1007F7950);
      sub_10002F0D4(v59, type metadata accessor for FlowPresentationHints);
      return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v72);
    }
    sub_10002F0D4(v48, type metadata accessor for FlowDestination);
    sub_100011088((uint64_t)v25, &qword_1007F7950);
    sub_10002F0D4((uint64_t)v69, type metadata accessor for FlowPresentationHints);
    v47 = (uint64_t *)&unk_100808370;
    v46 = (char *)v72;
  }
  return sub_100011088((uint64_t)v46, v47);
}

uint64_t sub_10002A94C(__n128 a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  _QWORD v16[4];

  v4 = *a3;
  v5 = type metadata accessor for OSLogger(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v9 = sub_1000117A8(v5, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_10000DF3C(&qword_1007FD430);
  v11 = type metadata accessor for LogMessage(0);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x800000010062F260);
  v16[3] = v4;
  v16[0] = a3;
  v13 = swift_retain(a3);
  static LogMessage.traceableSensitive(_:)(v16, v13);
  sub_100011088((uint64_t)v16, &qword_1007F6E90);
  Logger.error(_:)(v12, v5, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v12);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v14);
}

uint64_t sub_10002AADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for NavigationTab(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v20);

  v10 = v21;
  if (!v21)
    return sub_100011088((uint64_t)v20, (uint64_t *)&unk_100808370);
  v11 = v22;
  v12 = sub_100011064(v20, v21);
  v13 = TabChangeAction.navigationTab.getter(v12);
  v14 = TabChangeAction.popToRoot.getter(v13);
  v16 = TabChangeAction.actions.getter(v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(v8, v14 & 1, v16, a3, v10, v11);
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v17);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v20);
}

void sub_10002AC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __n128 v50;
  char v51;
  __n128 v52;
  uint64_t v54;
  char v55;
  __n128 v56;
  uint64_t v57;
  char v58;
  void *v59;
  NSString v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  NSString v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  __n128 v88;
  id v89;
  __n128 v90;
  id v91;
  id v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  char *v100;
  id v101;
  void *v102;
  double v103;
  double v104;
  void *v105;
  uint64_t v106;
  __n128 v107;
  char v108;
  _QWORD *v109;
  void *object;
  Swift::String v111;
  Swift::String v112;
  void *v113;
  NSString v114;
  id v115;
  id v116;
  void *Strong;
  void *v118;
  uint64_t (*v119)(uint64_t);
  id v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  _QWORD *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  void *v147;
  void **aBlock;
  uint64_t v149;
  void (*v150)(uint64_t, void *);
  void *v151;
  uint64_t (*v152)(uint64_t);
  _QWORD *v153;

  v4 = v3;
  v8 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v8);
  v128 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v127);
  v11 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Artwork.URLTemplate(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v13);
  v131 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v135 = *(_QWORD *)(v15 - 8);
  v136 = v15;
  v16 = __chkstk_darwin(v15);
  v129 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SheetActionStyle(0, v16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = SheetAction.style.getter(v20);
  v24 = SheetActionStyle.allowsDisplayOfTitle.getter(v23);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  if ((v24 & 1) != 0)
  {
    Action.title.getter(v26);
    v28 = v27;
    SheetAction.message.getter(v29);
    v31 = v30;
    if (v28)
    {
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      if (!v31)
        goto LABEL_8;
LABEL_6:
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      goto LABEL_9;
    }
    v32 = 0;
    if (v30)
      goto LABEL_6;
  }
  else
  {
    SheetAction.message.getter(v25);
    v31 = v33;
    v32 = 0;
    if (v33)
      goto LABEL_6;
  }
LABEL_8:
  v34 = 0;
LABEL_9:
  v142 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v34, 0);

  sub_1000194E4(a2, (uint64_t)&aBlock, &qword_1007F6E90);
  if (v151)
  {
    v35 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v36 = swift_dynamicCast(&v147, &aBlock, (char *)&type metadata for Any + 8, v35, 6);
    if ((v36 & 1) != 0)
    {
      v37 = v147;
      v38 = v142;
      objc_msgSend(v142, "setModalPresentationStyle:", 7);
      v39 = objc_msgSend(v38, "popoverPresentationController");
      if (v39)
      {
        v40 = v39;
        objc_msgSend(v39, "setSourceView:", v37);

      }
      v41 = objc_msgSend(v142, "popoverPresentationController");
      if (v41)
      {
        v42 = v41;
        objc_msgSend(v37, "bounds");
        objc_msgSend(v42, "setSourceRect:");

      }
    }
  }
  else
  {
    v36 = sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
  }
  v130 = v11;
  v43 = SheetAction.actions.getter(v36);
  if ((unint64_t)v43 >> 62)
  {
LABEL_60:
    if (v43 < 0)
      v106 = v43;
    else
      v106 = v43 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v43);
    v44 = _CocoaArrayWrapper.endIndex.getter(v106);
    swift_bridgeObjectRelease(v43);
    if (v44)
      goto LABEL_19;
LABEL_64:
    v107 = swift_bridgeObjectRelease(v43);
    v108 = SheetAction.isCancelable.getter(v107);
    v109 = v130;
    if ((v108 & 1) != 0)
    {
      SheetAction.cancelTitle.getter();
      if (!object)
      {
        v111._countAndFlagsBits = 0x435F4E4F49544341;
        v111._object = (void *)0xED00004C45434E41;
        v112._countAndFlagsBits = 0;
        v112._object = (void *)0xE000000000000000;
        object = localizedString(_:comment:)(v111, v112)._object;
      }
      v113 = object;
      v114 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v113);
      v115 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v114, 1, 0);

      v116 = v142;
      objc_msgSend(v142, "addAction:", v115);
      objc_msgSend(v116, "setPreferredAction:", v115);

    }
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4 + qword_1007F4DD8);
    sub_10050AC30((uint64_t)&aBlock);

    v118 = v151;
    if (v151)
    {
      v119 = v152;
      sub_100011064(&aBlock, (uint64_t)v151);
      v120 = v142;
      *v109 = v142;
      swift_storeEnumTagMultiPayload(v109, v127, 19);
      v121 = qword_1007F31E8;
      v122 = v120;
      if (v121 != -1)
        swift_once(&qword_1007F31E8, sub_10059EF30);
      v123 = type metadata accessor for FlowPresentationHints(0);
      v124 = sub_1000117A8(v123, (uint64_t)qword_100857130);
      v125 = type metadata accessor for ReferrerData(0);
      v126 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v128, 1, 1, v125);
      (*((void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, void *, uint64_t (*)(uint64_t)))v119
       + 2))(v109, v124, 0, 0, v126, v118, v119);

      sub_100011088(v126, (uint64_t *)&unk_1008086D0);
      sub_10002F0D4((uint64_t)v109, type metadata accessor for FlowDestination);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&aBlock);
    }
    else
    {

      sub_100011088((uint64_t)&aBlock, (uint64_t *)&unk_100808370);
    }
    return;
  }
  v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v44)
    goto LABEL_64;
LABEL_19:
  v45 = 0;
  v145 = v43 & 0xC000000000000001;
  v137 = 0x800000010062F8B0;
  v140 = a1;
  v141 = v4;
  v138 = a2;
  v139 = a3;
  v143 = v44;
  v144 = v43;
  while (1)
  {
    if (v145)
    {
      v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v43);
      v47 = v45 + 1;
      if (__OFADD__(v45, 1))
        goto LABEL_59;
    }
    else
    {
      v46 = *(_QWORD *)(v43 + 8 * v45 + 32);
      swift_retain(v46);
      v47 = v45 + 1;
      if (__OFADD__(v45, 1))
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    v48 = swift_allocObject(&unk_100722C38, 24, 7);
    swift_weakInit(v48 + 16);
    sub_1000194E4(a2, (uint64_t)&aBlock, &qword_1007F6E90);
    v49 = (_QWORD *)swift_allocObject(&unk_100722E68, 72, 7);
    v49[2] = v48;
    v49[3] = v46;
    sub_1000302E8((uint64_t)&aBlock, (uint64_t)(v49 + 4));
    v49[8] = a3;
    swift_retain(v46);
    v50 = swift_retain(a3);
    if (v45 == SheetAction.destructiveActionIndex.getter(v50) && (v51 & 1) == 0)
      v54 = 2;
    else
      v54 = 0;
    v55 = SheetAction.isCustom.getter(v52);
    v146 = v47;
    if ((v55 & 1) == 0)
    {
      Action.title.getter(v56);
      if (v64)
      {
        v65 = v64;
        swift_retain(v49);
        v66 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v65);
      }
      else
      {
        swift_retain(v49);
        v66 = 0;
      }
      v152 = sub_1000303B4;
      v153 = v49;
      aBlock = _NSConcreteStackBlock;
      v149 = 1107296256;
      v150 = sub_10060B64C;
      v151 = &unk_100722E80;
      v80 = _Block_copy(&aBlock);
      swift_release();
      v81 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v66, v54, v80);
      goto LABEL_56;
    }
    v57 = SheetAction.checkedIndex.getter();
    if ((v58 & 1) != 0 || v45 != v57)
    {
      v67 = Action.artwork.getter(v57);
      if (!v67)
        goto LABEL_48;
      v68 = v67;
      v69 = dispatch thunk of Artwork.isBundleImage.getter(v67);
      if ((v69 & 1) != 0)
      {
        v71 = v132;
        v72 = Artwork.template.getter(v70);
        v73 = Artwork.URLTemplate.rawValue.getter(v72);
        v75 = v74;
        (*(void (**)(char *, uint64_t))(v133 + 8))(v71, v134);
        v76 = (uint64_t)v131;
        URL.init(string:)(v73, v75);
        v77 = swift_bridgeObjectRelease(v75);
        v79 = v135;
        v78 = v136;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v135 + 48))(v76, 1, v136, v77) == 1)
        {
          sub_100011088(v76, (uint64_t *)&unk_1007F5150);
LABEL_47:
          swift_release();
LABEL_48:
          v63 = 0;
          goto LABEL_54;
        }
        v82 = v129;
        v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 32))(v129, v76, v78);
        v84 = URL.host.getter(v83);
        v85 = v79;
        v63 = v86;
        if (v86)
        {
          v87 = v84;
          if ((dispatch thunk of Artwork.isBundleImage.getter(v84) & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v135 + 8))(v82, v136);
            swift_release();
            swift_bridgeObjectRelease(v63);
            goto LABEL_48;
          }
          v89 = sub_1004853E8(v87, (uint64_t)v63, 0, v88);
          v90 = swift_bridgeObjectRelease(v63);
          (*(void (**)(char *, uint64_t, __n128))(v135 + 8))(v82, v136, v90);
          v91 = objc_msgSend(v89, "imageWithRenderingMode:", 2);

          v63 = objc_msgSend(v91, "_imageThatSuppressesAccessibilityHairlineThickening");
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v78);
        }
      }
      else
      {
        if ((dispatch thunk of Artwork.isSystemImage.getter(v69) & 1) == 0)
          goto LABEL_47;
        v63 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v68, 0, 1);
      }
      swift_release();
      goto LABEL_54;
    }
    v59 = (void *)objc_opt_self(UIImage);
    v60 = String._bridgeToObjectiveC()();
    v61 = objc_msgSend(v59, "kitImageNamed:", v60);

    if (!v61)
      goto LABEL_74;
    v62 = objc_msgSend(v61, "imageWithRenderingMode:", 2);

    v63 = objc_msgSend(v62, "_imageThatSuppressesAccessibilityHairlineThickening");
LABEL_54:
    v92 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    Action.title.getter(v93);
    v95 = v94;
    v97 = v96;
    v98 = objc_allocWithZone((Class)type metadata accessor for AlertActionTrailingImageView());
    v99 = v63;
    v100 = sub_1004373A4(v95, v97, v63);
    objc_msgSend(v92, "setView:", v100);

    v101 = objc_msgSend(v92, "view");
    if (!v101)
      break;
    v102 = v101;
    objc_msgSend(v101, "intrinsicContentSize");
    v104 = v103;

    objc_msgSend(v92, "setPreferredContentSize:", 0.0, v104);
    v105 = (void *)objc_opt_self(UIAlertAction);
    v152 = sub_1000303B4;
    v153 = v49;
    aBlock = _NSConcreteStackBlock;
    v149 = 1107296256;
    v150 = sub_10002B92C;
    v151 = &unk_100722EA8;
    v80 = _Block_copy(&aBlock);
    v66 = v92;
    swift_retain(v49);
    v81 = objc_msgSend(v105, "_actionWithContentViewController:style:handler:", v66, v54, v80, swift_release().n128_f64[0]);

    a1 = v140;
    v4 = v141;
    a2 = v138;
    a3 = v139;
LABEL_56:
    _Block_release(v80);

    if (v81)
    {
      objc_msgSend(v142, "addAction:", v81);

    }
    swift_release();
    swift_release();
    ++v45;
    v43 = v144;
    if (v146 == v143)
      goto LABEL_64;
  }

  __break(1u);
LABEL_74:
  __break(1u);
}

uint64_t sub_10002B828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  _BYTE v16[24];

  v9 = type metadata accessor for ActionRunner.Origin(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v14 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for ActionRunner.Origin.userInitiated(_:), v9);
    swift_retain(v14);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a3, a4, v12, a5);
    swift_release(v14);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return swift_release(v14);
  }
  return result;
}

void sub_10002B92C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_10002B980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  NSString v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t result;
  char v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *object;
  uint64_t v55;
  unint64_t v56;
  Swift::String v57;
  void *v58;
  NSString v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  NSString v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)();
  uint64_t v75;
  char v76;
  BOOL v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  void *Strong;
  void *v82;
  void (*v83)(uint64_t);
  _QWORD *v84;
  id v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  id v96;
  __n128 v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  id v107;
  id v108;
  void *v109;
  void *v110;
  void (*v111)(uint64_t);
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, void *, void (*)(uint64_t));
  id v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  void **aBlock;
  uint64_t v137;
  void (*v138)(uint64_t, void *);
  void *v139;
  void (*v140)(uint64_t);
  _QWORD *v141;
  void **v142;
  uint64_t v143;

  v130 = a2;
  v131 = a3;
  v125 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v125);
  v123 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = (_QWORD *)type metadata accessor for SystemImage(0);
  v129 = *(v132 - 1);
  __chkstk_darwin(v132);
  v128 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v6);
  v126 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for FlowDestination(0);
  v8 = __chkstk_darwin(v124);
  v127 = (char **)((char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for AlertActionStyle(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v135 = (char *)&v123 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v123 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v123 - v20;
  v134 = a1;
  AlertAction.style.getter(v22);
  v23 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
  v23(v18, enum case for AlertActionStyle.normal(_:), v10);
  v24 = sub_10000E99C(&qword_1007F4E70, (uint64_t (*)(uint64_t))&type metadata accessor for AlertActionStyle, (uint64_t)&protocol conformance descriptor for AlertActionStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v10, v24);
  dispatch thunk of RawRepresentable.rawValue.getter(&v142, v10, v24);
  v25 = v137;
  v26 = v143;
  if (aBlock == v142 && v137 == v143)
  {
    v27 = 1;
    v26 = v137;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v137, v142, v143, 0);
  }
  swift_bridgeObjectRelease(v25);
  v28 = swift_bridgeObjectRelease(v26);
  v29 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v29(v18, v10, v28);
  v30 = ((uint64_t (*)(char *, uint64_t))v29)(v21, v10);
  if ((v27 & 1) != 0)
  {
    v32 = Action.title.getter(v31);
    v34 = v33;
    AlertAction.message.getter(v32);
    v36 = v35;
    if (v34)
    {
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v34);
      if (v36)
      {
LABEL_8:
        v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v36);
        goto LABEL_19;
      }
    }
    else
    {
      v37 = 0;
      if (v35)
        goto LABEL_8;
    }
    v38 = 0;
LABEL_19:
    v132 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v37, v38, 1);

    v53 = AlertAction.buttonActions.getter();
    if ((AlertAction.isCancelable.getter() & 1) == 0)
    {
LABEL_26:
      v123 = (char *)v53;
      v129 = *(_QWORD *)(v53 + 16);
      if (v129)
      {
        v128 = (char *)objc_opt_self(UIAlertAction);
        v62 = 0;
        v63 = (uint64_t *)(v123 + 64);
        v64 = v133;
        do
        {
          v68 = *(v63 - 4);
          v69 = *(v63 - 3);
          v71 = *(v63 - 2);
          v70 = *(v63 - 1);
          v72 = *v63;
          if (v70)
          {
            v73 = swift_allocObject(&unk_100722E40, 32, 7);
            *(_QWORD *)(v73 + 16) = v70;
            *(_QWORD *)(v73 + 24) = v72;
            v74 = sub_100030368;
          }
          else
          {
            v74 = 0;
            v73 = 0;
          }
          swift_retain(v71);
          swift_bridgeObjectRetain(v69);
          v75 = sub_100019320(v70, v72);
          v77 = v62 == AlertAction.destructiveActionIndex.getter(v75) && (v76 & 1) == 0;
          v78 = 2;
          if (!v77)
            v78 = 0;
          v135 = (char *)v78;
          sub_1000194E4(v130, (uint64_t)&v142, &qword_1007F6E90);
          v79 = (_QWORD *)swift_allocObject(&unk_100722DF0, 104, 7);
          v79[2] = v68;
          v79[3] = v69;
          v79[4] = v71;
          v79[5] = v74;
          v79[6] = v73;
          v79[7] = v64;
          sub_1000302E8((uint64_t)&v142, (uint64_t)(v79 + 8));
          v80 = v131;
          v79[12] = v131;
          if (v69)
          {
            swift_bridgeObjectRetain(v69);
            swift_retain(v71);
            sub_100019320((uint64_t)v74, v73);
            swift_retain(v64);
            swift_retain(v80);
            v65 = String._bridgeToObjectiveC()();
          }
          else
          {
            swift_retain(v71);
            sub_100019320((uint64_t)v74, v73);
            swift_retain(v64);
            swift_retain(v80);
            v65 = 0;
          }
          ++v62;
          v63 += 5;
          v140 = sub_100030330;
          v141 = v79;
          aBlock = _NSConcreteStackBlock;
          v137 = 1107296256;
          v138 = sub_10060B64C;
          v139 = &unk_100722E08;
          v66 = _Block_copy(&aBlock);
          v67 = objc_msgSend(v128, "actionWithTitle:style:handler:", v65, v135, v66, swift_release().n128_f64[0]);
          _Block_release(v66);

          objc_msgSend(v132, "addAction:", v67);
          swift_release();
          swift_bridgeObjectRelease(v69);

          sub_100019310((uint64_t)v74, v73);
        }
        while (v129 != v62);
      }
      swift_bridgeObjectRelease(v123);
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v133 + qword_1007F4DD8);
      sub_10050AC30((uint64_t)&aBlock);

      v82 = v139;
      if (v139)
      {
        v83 = v140;
        sub_100011064(&aBlock, (uint64_t)v139);
        v84 = v127;
        v85 = v132;
        *v127 = v132;
        swift_storeEnumTagMultiPayload(v84, v124, 19);
        v86 = qword_1007F31E8;
        v87 = v85;
        if (v86 != -1)
          swift_once(&qword_1007F31E8, sub_10059EF30);
        v88 = sub_1000117A8(v125, (uint64_t)qword_100857130);
        v89 = type metadata accessor for ReferrerData(0);
        v90 = (uint64_t)v126;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v126, 1, 1, v89);
        (*((void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, void *, void (*)(uint64_t)))v83
         + 2))(v84, v88, 0, 0, v90, v82, v83);

        sub_100011088(v90, (uint64_t *)&unk_1008086D0);
        v91 = (uint64_t)v84;
        goto LABEL_53;
      }

      return sub_100011088((uint64_t)&aBlock, (uint64_t *)&unk_100808370);
    }
    if (*(_QWORD *)(v53 + 16))
    {
      AlertAction.cancelTitle.getter();
      if (object)
      {
LABEL_25:
        v58 = object;
        v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v58);
        v60 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v59, 1, 0);

        v61 = v132;
        objc_msgSend(v132, "addAction:", v60);
        objc_msgSend(v61, "setPreferredAction:", v60);

        goto LABEL_26;
      }
      v55 = 0x435F4E4F49544341;
      v56 = 0xED00004C45434E41;
    }
    else
    {
      v55 = 0x4F5F4E4F49544341;
      v56 = 0xE90000000000004BLL;
    }
    v57._countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(*(Swift::String *)&v55, v57)._object;
    goto LABEL_25;
  }
  v39 = v135;
  AlertAction.style.getter(v30);
  v23(v13, enum case for AlertActionStyle.toast(_:), v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v10, v24);
  dispatch thunk of RawRepresentable.rawValue.getter(&v142, v10, v24);
  v40 = v137;
  v41 = v143;
  if (aBlock == v142 && v137 == v143)
  {
    v42 = swift_bridgeObjectRelease_n(v137, 2);
    v29(v13, v10, v42);
    result = ((uint64_t (*)(char *, uint64_t))v29)(v39, v10);
  }
  else
  {
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v137, v142, v143, 0);
    swift_bridgeObjectRelease(v40);
    v45 = swift_bridgeObjectRelease(v41);
    v29(v13, v10, v45);
    result = ((uint64_t (*)(char *, uint64_t))v29)(v39, v10);
    if ((v44 & 1) == 0)
      return result;
  }
  v46 = Action.artwork.getter(result);
  v48 = v133;
  if (!v46)
    goto LABEL_50;
  v49 = v46;
  v50 = dispatch thunk of Artwork.isLocalImage.getter(v47);
  if ((v50 & 1) == 0)
    goto LABEL_49;
  v51 = dispatch thunk of Artwork.isSystemImage.getter(v50);
  if ((v51 & 1) != 0)
  {
    v52 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v49, 0, 1);
    goto LABEL_47;
  }
  if ((dispatch thunk of Artwork.isBundleImage.getter(v51) & 1) == 0)
  {
LABEL_49:
    v47 = swift_release();
LABEL_50:
    v94 = v128;
    v93 = v129;
    v95 = v132;
    (*(void (**)(char *, _QWORD, _QWORD *, __n128))(v129 + 104))(v128, enum case for SystemImage.exclamationmarkCircle(_:), v132, v47);
    v92 = (void *)static SystemImage.load(_:with:)(v94, 0);
    (*(void (**)(char *, _QWORD *))(v93 + 8))(v94, v95);
    goto LABEL_51;
  }
  v52 = sub_100485648(v49, 0);
LABEL_47:
  v92 = v52;
  v47 = swift_release();
  if (!v92)
    goto LABEL_50;
LABEL_51:
  v96 = objc_msgSend(v92, "imageWithRenderingMode:", 2, v47.n128_f64[0]);
  sub_100019574(0, &qword_1007F4E78, &off_10071EDA0);
  v98 = Action.title.getter(v97);
  v100 = v99;
  v102 = v101;
  v103 = AlertAction.message.getter(v98);
  v105 = v104;
  v106 = AlertAction.toastDuration.getter();
  v107 = v96;
  v108 = sub_10002C5D0(v106, v100, v102, v103, v105, v107);
  v109 = (void *)swift_unknownObjectUnownedLoadStrong(v48 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)&aBlock);

  v110 = v139;
  if (v139)
  {
    v111 = v140;
    sub_100011064(&aBlock, (uint64_t)v139);
    v112 = v127;
    *v127 = v108;
    swift_storeEnumTagMultiPayload(v112, v124, 19);
    v113 = enum case for FlowPresentationContext.infer(_:);
    v114 = type metadata accessor for FlowPresentationContext(0);
    v115 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 104))(v123, v113, v114);
    v116 = v115 + *(int *)(v125 + 20);
    v117 = enum case for FlowAnimationBehavior.never(_:);
    v118 = type metadata accessor for FlowAnimationBehavior(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 104))(v116, v117, v118);
    v119 = type metadata accessor for ReferrerData(0);
    v120 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v126, 1, 1, v119);
    v121 = (void (*)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, void *, void (*)(uint64_t)))*((_QWORD *)v111 + 2);
    v122 = v108;
    v121(v112, v115, 0, 0, v120, v110, v111);

    sub_100011088(v120, (uint64_t *)&unk_1008086D0);
    sub_10002F0D4(v115, type metadata accessor for FlowPresentationHints);
    v91 = (uint64_t)v112;
LABEL_53:
    sub_10002F0D4(v91, type metadata accessor for FlowDestination);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&aBlock);
  }

  return sub_100011088((uint64_t)&aBlock, (uint64_t *)&unk_100808370);
}

void sub_10002C4B8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  void (*v8)(__n128);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v7 = a2[2];
  v8 = (void (*)(__n128))a2[3];
  v9 = a2[4];
  v10 = type metadata accessor for ActionRunner.Origin(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v8)
  {
    v15 = swift_retain(v9);
    v8(v15);
    sub_100019310((uint64_t)v8, v9);
  }
  else if (v7)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))(v14, enum case for ActionRunner.Origin.userInitiated(_:), v10, v12);
    swift_retain(v7);
    sub_100407E60(v16, a4, (uint64_t)v14, a5);
    v17 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v17);
  }
}

id sub_10002C5D0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  NSString v12;
  NSString v13;
  id v14;

  v7 = v6;
  if (!a3)
  {
    v12 = 0;
    if (a5)
      goto LABEL_3;
LABEL_5:
    v13 = 0;
    goto LABEL_6;
  }
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  if (!a5)
    goto LABEL_5;
LABEL_3:
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a5);
LABEL_6:
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "initWithTitle:message:duration:image:", v12, v13, a6, a1);

  return v14;
}

double sub_10002C694(void *a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  if (a1)
  {
    type metadata accessor for GameCenter(0);
    v6 = a1;
    v7 = GameCenterAchievementsAction.bundleId.getter();
    v9 = v8;
    static GameCenter.fetchGameRecord(for:with:)(v6, v7, v8);
    swift_bridgeObjectRelease(v9);
    v10 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v11 = swift_retain(a4);
    v17[3] = v10;
    v17[4] = &protocol witness table for OS_dispatch_queue;
    v17[0] = static OS_dispatch_queue.main.getter(v11);
    Promise.then(perform:orCatchError:on:)(sub_10002FF38, a4, sub_10002CA40, 0, v17);

    swift_release();
    swift_release();
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v17);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v13 = type metadata accessor for OSLogger(0, a2);
    sub_1000117A8(v13, (uint64_t)qword_100857618);
    v14 = sub_10000DF3C(&qword_1007FD430);
    v15 = type metadata accessor for LogMessage(0);
    v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
    *(_OWORD *)(v16 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000056, 0x800000010062F2F0);
    Logger.error(_:)(v16, v13, &protocol witness table for OSLogger);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  return result;
}

uint64_t sub_10002C86C(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  void *Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v4 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *a1;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v21);

  v12 = v22;
  if (!v22)
    return sub_100011088((uint64_t)v21, (uint64_t *)&unk_100808370);
  v13 = v23;
  sub_100011064(v21, v22);
  *v9 = v10;
  v9[1] = _swiftEmptyArrayStorage;
  swift_storeEnumTagMultiPayload(v9, v7, 35);
  v14 = qword_1007F31E8;
  v15 = v10;
  if (v14 != -1)
    swift_once(&qword_1007F31E8, sub_10059EF30);
  v16 = type metadata accessor for FlowPresentationHints(0);
  v17 = sub_1000117A8(v16, (uint64_t)qword_100857130);
  v18 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v13 + 16))(v9, v17, 0, 0, v6, v12, v13);
  sub_100011088((uint64_t)v6, (uint64_t *)&unk_1008086D0);
  sub_10002F0D4((uint64_t)v9, type metadata accessor for FlowDestination);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
}

double sub_10002CA40(uint64_t a1, __n128 a2)
{
  return sub_10002E6C4(a2, a1, 0xD000000000000055, 0x800000010062F350);
}

double sub_10002CA5C(void *a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  if (a1)
  {
    type metadata accessor for GameCenter(0);
    v7 = a1;
    v8 = GameCenterLeaderboardsAction.bundleID.getter();
    v10 = v9;
    static GameCenter.fetchGameRecord(for:with:)(v7, v8, v9);
    swift_bridgeObjectRelease(v10);
    v11 = swift_allocObject(&unk_100722D00, 32, 7);
    *(_QWORD *)(v11 + 16) = a2;
    *(_QWORD *)(v11 + 24) = a3;
    v12 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    swift_retain(a2);
    v13 = swift_retain(a3);
    v19[3] = v12;
    v19[4] = &protocol witness table for OS_dispatch_queue;
    v19[0] = static OS_dispatch_queue.main.getter(v13);
    Promise.then(perform:orCatchError:on:)(sub_1000301AC, v11, sub_10002D388, 0, v19);

    swift_release();
    swift_release();
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v15 = type metadata accessor for OSLogger(0, a4);
    sub_1000117A8(v15, (uint64_t)qword_100857618);
    v16 = sub_10000DF3C(&qword_1007FD430);
    v17 = type metadata accessor for LogMessage(0);
    v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
    *(_OWORD *)(v18 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD000000000000057, 0x800000010062F630);
    Logger.error(_:)(v18, v15, &protocol witness table for OSLogger);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  return result;
}

void sub_10002CC5C(void **a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  _QWORD v19[6];

  v4 = *a1;
  v5 = objc_msgSend(objc_allocWithZone((Class)GKGameInternal), "init");
  GameCenterLeaderboardsAction.bundleID.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setBundleIdentifier:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v9 = objc_msgSend(objc_allocWithZone((Class)GKGame), "initWithInternalRepresentation:", v5);
  v10 = (void *)objc_opt_self(GKLeaderboard);
  v11 = sub_10000DF3C(&qword_1007F4B08);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v12 + 32) = GameCenterLeaderboardsAction.leaderboardID.getter();
  *(_QWORD *)(v12 + 40) = v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v15 = swift_allocObject(&unk_100722D28, 32, 7);
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = v4;
  v19[4] = sub_1000301E0;
  v19[5] = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10002D2FC;
  v19[3] = &unk_100722D40;
  v16 = _Block_copy(v19);
  v17 = v9;
  swift_retain(a3);
  v18 = v4;
  objc_msgSend(v10, "loadLeaderboardsWithIDs:setIdentifier:game:completionHandler:", isa, 0, v17, v16, swift_release().n128_f64[0]);
  _Block_release(v16);

}

double sub_10002CE24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *Strong;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[8];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  v8 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (id)type metadata accessor for FlowDestination(0);
  v12 = __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for OSLogger(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v19 = sub_1000117A8(v15, (uint64_t)qword_100857618);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
    v20 = sub_10000DF3C(&qword_1007FD430);
    v21 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ 2 * *(_QWORD *)(v21 + 72), *(unsigned __int8 *)(v21 + 80) | 7);
    *(_OWORD *)(v22 + 16) = xmmword_10066F870;
    LogMessage.init(stringLiteral:)(0xD000000000000030, 0x800000010062F770);
    swift_getErrorValue(a2, v44, &v42);
    v23 = v42;
    v24 = v43;
    v46 = v43;
    v25 = sub_1000117C0(v45);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v25, v23, v24);
    static LogMessage.sensitive(_:)(v45);
    sub_100011088((uint64_t)v45, &qword_1007F6E90);
    Logger.error(_:)(v22, v15, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(a2);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return result;
  }
  if (a1)
  {
    v27 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v37 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v37 = a1;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v37))
      {
LABEL_8:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_25;
          }
          v29 = *(id *)(a1 + 32);
        }
        v30 = v29;
        swift_bridgeObjectRelease(a1);
        Strong = (void *)swift_unknownObjectUnownedLoadStrong(a3 + qword_1007F4DD8);
        sub_10050AC30((uint64_t)v45);

        v15 = v46;
        if (!v46)
        {

          sub_100011088((uint64_t)v45, (uint64_t *)&unk_100808370);
          return result;
        }
        v27 = v47;
        sub_100011064(v45, v46);
        *v14 = v30;
        v14[1] = a4;
        swift_storeEnumTagMultiPayload(v14, v11, 33);
        v32 = qword_1007F31E8;
        v11 = v30;
        v33 = a4;
        if (v32 == -1)
        {
LABEL_13:
          v34 = type metadata accessor for FlowPresentationHints(0);
          v35 = sub_1000117A8(v34, (uint64_t)qword_100857130);
          v36 = type metadata accessor for ReferrerData(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v10, 1, 1, v36);
          (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v27 + 16))(v14, v35, 0, 0, v10, v15, v27);

          sub_100011088((uint64_t)v10, (uint64_t *)&unk_1008086D0);
          sub_10002F0D4((uint64_t)v14, type metadata accessor for FlowDestination);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v45);
          return result;
        }
LABEL_25:
        swift_once(&qword_1007F31E8, sub_10059EF30);
        goto LABEL_13;
      }
    }
    else
    {
      v28 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v28)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease(a1);
  }
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  sub_1000117A8(v15, (uint64_t)qword_100857618);
  v38 = sub_10000DF3C(&qword_1007FD430);
  v39 = type metadata accessor for LogMessage(0);
  v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
  *(_OWORD *)(v40 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(0xD000000000000056, 0x800000010062F710);
  Logger.error(_:)(v40, v15, &protocol witness table for OSLogger);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v40).n128_u64[0];
  return result;
}

double sub_10002D2FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100019574(0, &qword_1007F4E68, GKLeaderboard_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_10002D388(uint64_t a1, __n128 a2)
{
  return sub_10002E6C4(a2, a1, 0xD000000000000056, 0x800000010062F690);
}

double sub_10002D3A4(void *a1, __n128 a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;

  if (a1)
  {
    v3 = (void *)objc_opt_self(GKDaemonProxy);
    v4 = a1;
    v5 = objc_msgSend(v3, "proxyForPlayer:", v4);
    v6 = objc_msgSend(v5, "utilityService");

    v7 = objc_msgSend((id)objc_opt_self(GKGame), "currentGame");
    v8 = objc_msgSend(v7, "internal");

    v9 = getpid();
    v10 = sub_100369F50((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "openDashboardAsRemoteAlertForGame:hostPID:deeplink:", v8, v9, isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

    swift_unknownObjectRelease(v6);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v12 = type metadata accessor for OSLogger(0, a2);
    sub_1000117A8(v12, (uint64_t)qword_100857618);
    v13 = sub_10000DF3C(&qword_1007FD430);
    v14 = type metadata accessor for LogMessage(0);
    v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) | 7);
    *(_OWORD *)(v15 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000005DLL, 0x800000010062F290);
    Logger.error(_:)(v15, v12, &protocol witness table for OSLogger);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  return result;
}

void sub_10002D5C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  int v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  __int128 v50;
  _QWORD v51[3];
  uint64_t v52;
  void *v53;

  v7 = sub_10000DF3C(&qword_1007F4E30);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v51[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GameCenterInvitePlayerAction.InvitationType(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (_QWORD *)((char *)&v51[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    *(_QWORD *)&v50 = a4;
    v16 = type metadata accessor for ASKBagContract(0);
    v17 = type metadata accessor for BaseObjectGraph(0);
    v18 = a1;
    inject<A, B>(_:from:)(v51, v16, a2, v16, v17);
    v19 = v51[0];
    GameCenterInvitePlayerAction.invitationType.getter(v20);
    v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v15, v11);
    if (v21 == enum case for GameCenterInvitePlayerAction.InvitationType.messages(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
      v23 = *v15;
      v24 = v15[1];
      type metadata accessor for GameCenter(0);
      static GameCenter.inviteFriendViewController(localPlayer:contactId:)(a1, v23, v24);
      v25 = swift_allocObject(&unk_100722C38, 24, 7);
      swift_weakInit(v25 + 16);
      v26 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      v28 = static OS_dispatch_queue.main.getter(v27);
      v52 = v26;
      v53 = &protocol witness table for OS_dispatch_queue;
      v51[0] = v28;
      Promise.then(perform:orCatchError:on:)(sub_10002FF40, v25, sub_10002E6A8, 0, v51);
      swift_release();
      swift_release();
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);

      swift_release();
      swift_bridgeObjectRelease(v24);
      return;
    }
    if (v21 == enum case for GameCenterInvitePlayerAction.InvitationType.player(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
      v33 = *v15;
      v34 = v15[1];
      v35 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v10, 1, 1, v35);
      v36 = (_QWORD *)swift_allocObject(&unk_100722CB0, 56, 7);
      v36[2] = 0;
      v36[3] = 0;
      v36[4] = v33;
      v36[5] = v34;
      v36[6] = v19;
      sub_10002DF34((uint64_t)v10, (uint64_t)&unk_1007F4E50, (uint64_t)v36);

LABEL_11:
      swift_release();
      return;
    }
    if (v21 == enum case for GameCenterInvitePlayerAction.InvitationType.contact(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
      v50 = *(_OWORD *)v15;
      v37 = v15[2];
      v38 = v15[3];
      v39 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v10, 1, 1, v39);
      v40 = swift_allocObject(&unk_100722C88, 72, 7);
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      *(_OWORD *)(v40 + 32) = v50;
      *(_QWORD *)(v40 + 48) = v37;
      *(_QWORD *)(v40 + 56) = v38;
      *(_QWORD *)(v40 + 64) = v19;
      sub_10002DF34((uint64_t)v10, (uint64_t)&unk_1007F4E40, v40);

      goto LABEL_11;
    }
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v41 = type metadata accessor for OSLogger(0, v22);
    sub_1000117A8(v41, (uint64_t)qword_100857618);
    v42 = sub_10000DF3C(&qword_1007FD430);
    v43 = type metadata accessor for LogMessage(0);
    v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
    *(_OWORD *)(v44 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000007ELL, 0x800000010062F420);
    Logger.error(_:)(v44, v41, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v44);
    type metadata accessor for GameCenter(0);
    static GameCenter.inviteFriendViewController(localPlayer:contactId:)(a1, 0, 0);
    v45 = swift_allocObject(&unk_100722C38, 24, 7);
    swift_weakInit(v45 + 16);
    v46 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
    v48 = static OS_dispatch_queue.main.getter(v47);
    v52 = v46;
    v53 = &protocol witness table for OS_dispatch_queue;
    v51[0] = v48;
    Promise.then(perform:orCatchError:on:)(sub_10002FF40, v45, sub_10002E6A8, 0, v51);
    swift_release();
    swift_release();
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);

    v49 = swift_release();
    (*(void (**)(uint64_t *, uint64_t, __n128))(v12 + 8))(v15, v11, v49);
  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v29 = type metadata accessor for OSLogger(0, v13);
    sub_1000117A8(v29, (uint64_t)qword_100857618);
    v30 = sub_10000DF3C(&qword_1007FD430);
    v31 = type metadata accessor for LogMessage(0);
    v32 = swift_allocObject(v30, ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) | 7);
    *(_OWORD *)(v32 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000006CLL, 0x800000010062F3B0);
    Logger.error(_:)(v32, v29, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease(v32);
  }
}

uint64_t sub_10002DB94(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[11] = a6;
  v7[12] = a7;
  v7[10] = a5;
  v8 = type metadata accessor for OSLogger(0, a1);
  v7[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[14] = v9;
  v7[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GameCenter.PushFriendInvitationType(0);
  v7[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[17] = v11;
  v7[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10002DC20, 0, 0);
}

uint64_t sub_10002DC20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[17];
  v1 = (_QWORD *)v0[18];
  v3 = v0[16];
  v5 = v0[10];
  v4 = v0[11];
  type metadata accessor for GameCenter(0);
  *v1 = v5;
  v1[1] = v4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v1, enum case for GameCenter.PushFriendInvitationType.player(_:), v3);
  v6 = async function pointer to static GameCenter.sendFriendInvitationViaPush(_:bag:)[1];
  swift_bridgeObjectRetain(v4);
  v7 = (_QWORD *)swift_task_alloc(v6);
  v0[19] = v7;
  *v7 = v0;
  v7[1] = sub_10002DCCC;
  return static GameCenter.sendFriendInvitationViaPush(_:bag:)(v0[18], v0[12]);
}

uint64_t sub_10002DCCC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*v1 + 144);
  v2 = *(_QWORD *)(*v1 + 152);
  v4 = *(_QWORD *)(*v1 + 128);
  v5 = *(_QWORD *)(*v1 + 136);
  v6 = *v1;
  *(_QWORD *)(v6 + 160) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    return swift_task_switch(sub_10002DD78, 0, 0);
  v8 = *(_QWORD *)(v6 + 120);
  swift_task_dealloc(*(_QWORD *)(v6 + 144));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10002DD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = sub_1000117A8(v4, (uint64_t)qword_100857618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_10000DF3C(&qword_1007FD430);
  v7 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v8 = swift_allocObject(v6, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 2 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000006FLL, 0x800000010062F4A0);
  swift_getErrorValue(v1, v0 + 72, v0 + 48);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v10;
  v11 = sub_1000117C0((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, v9, v10);
  static LogMessage.sensitive(_:)(v0 + 16);
  sub_100011088(v0 + 16, &qword_1007F6E90);
  Logger.error(_:)(v8, v4, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v8);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v12 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002DF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_100011088(a1, &qword_1007F4E30);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      v12 = swift_unknownObjectRetain(v9);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
      v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_100722CD8, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_1007F4E60, v17);
}

uint64_t sub_10002E080(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9[13] = a8;
  v9[14] = a9;
  v9[11] = a6;
  v9[12] = a7;
  v9[10] = a5;
  v10 = type metadata accessor for OSLogger(0, a1);
  v9[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[16] = v11;
  v9[17] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GameCenter.PushFriendInvitationType(0);
  v9[18] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v9[19] = v13;
  v9[20] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10002E110, 0, 0);
}

uint64_t sub_10002E110()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[19];
  v1 = (_QWORD *)v0[20];
  v3 = v0[18];
  v5 = v0[12];
  v4 = v0[13];
  v7 = v0[10];
  v6 = v0[11];
  type metadata accessor for GameCenter(0);
  *v1 = v7;
  v1[1] = v6;
  v1[2] = v5;
  v1[3] = v4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v1, enum case for GameCenter.PushFriendInvitationType.contact(_:), v3);
  v8 = async function pointer to static GameCenter.sendFriendInvitationViaPush(_:bag:)[1];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v4);
  v9 = (_QWORD *)swift_task_alloc(v8);
  v0[21] = v9;
  *v9 = v0;
  v9[1] = sub_10002E1D4;
  return static GameCenter.sendFriendInvitationViaPush(_:bag:)(v0[20], v0[14]);
}

uint64_t sub_10002E1D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*v1 + 160);
  v2 = *(_QWORD *)(*v1 + 168);
  v4 = *(_QWORD *)(*v1 + 144);
  v5 = *(_QWORD *)(*v1 + 152);
  v6 = *v1;
  *(_QWORD *)(v6 + 176) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    return swift_task_switch(sub_10002E280, 0, 0);
  v8 = *(_QWORD *)(v6 + 136);
  swift_task_dealloc(*(_QWORD *)(v6 + 160));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10002E280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = sub_1000117A8(v4, (uint64_t)qword_100857618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_10000DF3C(&qword_1007FD430);
  v7 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v8 = swift_allocObject(v6, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 2 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD000000000000070, 0x800000010062F510);
  swift_getErrorValue(v1, v0 + 72, v0 + 48);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v10;
  v11 = sub_1000117C0((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, v9, v10);
  static LogMessage.sensitive(_:)(v0 + 16);
  sub_100011088(v0 + 16, &qword_1007F6E90);
  Logger.error(_:)(v8, v4, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease(v8);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v12 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002E43C(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t result;
  void *Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, _BYTE *, _QWORD, _QWORD, _BYTE *, uint64_t, uint64_t);
  id v25;
  _BYTE v26[24];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v4 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v10);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v26, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(result + qword_1007F4DD8);
    sub_10050AC30((uint64_t)v27);
    swift_release();

    v16 = v28;
    if (v28)
    {
      v17 = v29;
      sub_100011064(v27, v28);
      *v12 = v13;
      swift_storeEnumTagMultiPayload(v12, v10, 19);
      v18 = enum case for FlowPresentationContext.presentModalOverFullScreen(_:);
      v19 = type metadata accessor for FlowPresentationContext(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v9, v18, v19);
      v20 = &v9[*(int *)(v7 + 20)];
      v21 = enum case for FlowAnimationBehavior.never(_:);
      v22 = type metadata accessor for FlowAnimationBehavior(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
      v23 = type metadata accessor for ReferrerData(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
      v24 = *(void (**)(_QWORD *, _BYTE *, _QWORD, _QWORD, _BYTE *, uint64_t, uint64_t))(v17 + 16);
      v25 = v13;
      v24(v12, v9, 0, 0, v6, v16, v17);
      sub_100011088((uint64_t)v6, (uint64_t *)&unk_1008086D0);
      sub_10002F0D4((uint64_t)v9, type metadata accessor for FlowPresentationHints);
      sub_10002F0D4((uint64_t)v12, type metadata accessor for FlowDestination);
      return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
    }
    else
    {
      return sub_100011088((uint64_t)v27, (uint64_t *)&unk_100808370);
    }
  }
  return result;
}

double sub_10002E6A8(uint64_t a1, __n128 a2)
{
  return sub_10002E6C4(a2, a1, 0xD000000000000042, 0x800000010062F590);
}

double sub_10002E6C4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v6 = type metadata accessor for OSLogger(0, a1);
  sub_1000117A8(v6, (uint64_t)qword_100857618);
  v7 = sub_10000DF3C(&qword_1007FD430);
  v8 = type metadata accessor for LogMessage(0);
  v9 = swift_allocObject(v7, ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) | 7);
  *(_OWORD *)(v9 + 16) = xmmword_10066FBA0;
  LogMessage.init(stringLiteral:)(a3, a4);
  Logger.error(_:)(v9, v6, &protocol witness table for OSLogger);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

double sub_10002E7B0(void *a1, __n128 a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (a1)
  {
    type metadata accessor for GameCenter(0);
    v3 = a1;
    v4 = GameCenterDenylistPlayerAction.contactId.getter();
    v6 = v5;
    static GameCenter.addContactToDenyList(_:for:)(v4);

  }
  else
  {
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v7 = type metadata accessor for OSLogger(0, a2);
    sub_1000117A8(v7, (uint64_t)qword_100857618);
    v8 = sub_10000DF3C(&qword_1007FD430);
    v9 = type metadata accessor for LogMessage(0);
    v6 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) | 7);
    *(_OWORD *)(v6 + 16) = xmmword_10066FBA0;
    LogMessage.init(stringLiteral:)(0xD00000000000004DLL, 0x800000010062F5E0);
    Logger.error(_:)(v6, v7, &protocol witness table for OSLogger);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

void sub_10002E8D8()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.FlowActionRunner", 39, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_10002E904()
{
  uint64_t v0;

  return swift_unknownObjectUnownedDestroy(v0 + qword_1007F4DD8);
}

uint64_t sub_10002E914()
{
  uint64_t v0;

  v0 = ActionRunner.deinit();
  swift_unknownObjectUnownedDestroy(v0 + qword_1007F4DD8);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_10002E950()
{
  return type metadata accessor for FlowActionRunner(0);
}

uint64_t sub_10002E958(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10002E9BC;
  return v6(a1);
}

uint64_t sub_10002E9BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10002EA08(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  void *v64;

  v5 = type metadata accessor for OSLogger(0, a3);
  v61 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FamilyCircleLookupTask(0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v60 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  v11 = *(_QWORD *)(v55 + 64);
  __chkstk_darwin(v10);
  v54 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v59 = (char *)&v52 - v13;
  v14 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FlowDestination(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v23 = (char *)&v52 - v22;
  sub_1000194E4(a2, (uint64_t)v62, &qword_1007F6E90);
  swift_retain(a1);
  sub_10011BB90(v24, (uint64_t)v62, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100011088((uint64_t)v16, &qword_1007F7950);
  }
  else
  {
    sub_10002EF34((uint64_t)v16, (uint64_t)v23);
    sub_10002EF78((uint64_t)v23, (uint64_t)v20);
    if (swift_getEnumCaseMultiPayload(v20, v17) == 17)
    {
      v25 = *v20;
      v26 = sub_10000DF3C((uint64_t *)&unk_1007F79B0);
      v27 = (char *)v20 + *(int *)(v26 + 48);
      v28 = (char *)v20 + *(int *)(v26 + 64);
      v30 = v55;
      v29 = v56;
      v53 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
      v31 = v59;
      v53(v59, v28, v56);
      v32 = type metadata accessor for ArcadeWelcomePage.ContentType(0);
      v33 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v27, v32);
      v34 = FamilyCircleLookupTask.init()(v33);
      v61 = FamilyCircleLookupTask.perform()(v34);
      v35 = swift_allocObject(&unk_100722C38, 24, 7);
      swift_weakInit(v35 + 16);
      v36 = v54;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v54, v31, v29);
      v37 = *(unsigned __int8 *)(v30 + 80);
      v38 = (v37 + 32) & ~v37;
      v39 = (v11 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      v40 = swift_allocObject(&unk_100722C60, v39 + 8, v37 | 7);
      *(_QWORD *)(v40 + 16) = a1;
      *(_QWORD *)(v40 + 24) = v25;
      v53((char *)(v40 + v38), v36, v29);
      *(_QWORD *)(v40 + v39) = v35;
      v41 = sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
      swift_retain(v25);
      swift_retain_n(a1, 2);
      v43 = static OS_dispatch_queue.main.getter(v42);
      v63 = v41;
      v64 = &protocol witness table for OS_dispatch_queue;
      v62[0] = v43;
      Promise.then(perform:orCatchError:on:)(sub_10002F078, v40, sub_10002F0CC, a1, v62);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v59, v29);
      return sub_10002F0D4((uint64_t)v23, type metadata accessor for FlowDestination);
    }
    sub_10002F0D4((uint64_t)v23, type metadata accessor for FlowDestination);
    sub_10002F0D4((uint64_t)v20, type metadata accessor for FlowDestination);
  }
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v45 = sub_1000117A8(v5, (uint64_t)qword_100857618);
  v46 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v7, v45, v5);
  v47 = sub_10000DF3C(&qword_1007FD430);
  v48 = type metadata accessor for LogMessage(0);
  v49 = swift_allocObject(v47, ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) | 7);
  *(_OWORD *)(v49 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD000000000000020, 0x800000010062F230);
  v63 = type metadata accessor for FlowAction(0);
  v62[0] = a1;
  v50 = swift_retain(a1);
  static LogMessage.traceableSensitive(_:)(v62, v50);
  sub_100011088((uint64_t)v62, &qword_1007F6E90);
  Logger.error(_:)(v49, v5, &protocol witness table for OSLogger);
  v51 = swift_bridgeObjectRelease(v49);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v7, v5, v51);
}

uint64_t sub_10002EF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002EF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002EFBC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002EFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10002F078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10002A3C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10002F0CC(uint64_t a1, __n128 a2)
{
  uint64_t *v2;

  return sub_10002A94C(a2, a1, v2);
}

uint64_t sub_10002F0D4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002F110(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v30;
  uint64_t v31;
  void *Strong;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v5 = type metadata accessor for OSLogger(0, a3);
  v41 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FlowDestination(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000194E4(a2, (uint64_t)v42, &qword_1007F6E90);
  swift_retain(a1);
  sub_10011BB90(v20, (uint64_t)v42, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100011088((uint64_t)v15, &qword_1007F7950);
    if (qword_1007F3450 != -1)
      swift_once(&qword_1007F3450, sub_10060243C);
    v21 = sub_1000117A8(v5, (uint64_t)qword_100857618);
    v23 = v40;
    v22 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v21, v5);
    v24 = sub_10000DF3C(&qword_1007FD430);
    v25 = type metadata accessor for LogMessage(0);
    v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) | 7);
    *(_OWORD *)(v26 + 16) = xmmword_10066F870;
    LogMessage.init(stringLiteral:)(0xD000000000000020, 0x800000010062F230);
    v43 = type metadata accessor for FlowAction(0);
    v42[0] = a1;
    v27 = swift_retain(a1);
    static LogMessage.traceableSensitive(_:)(v42, v27);
    sub_100011088((uint64_t)v42, &qword_1007F6E90);
    Logger.error(_:)(v26, v5, &protocol witness table for OSLogger);
    v28 = swift_bridgeObjectRelease(v26);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v22 + 8))(v23, v5, v28);
  }
  else
  {
    sub_10002EF34((uint64_t)v15, (uint64_t)v19);
    v30 = swift_retain(a1);
    v31 = FlowAction.presentationContext.getter(v30);
    FlowAction.animationBehavior.getter(v31);
    swift_release();
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v39 + qword_1007F4DD8);
    sub_10050AC30((uint64_t)v42);

    v33 = v43;
    if (v43)
    {
      v34 = v44;
      v35 = sub_100011064(v42, v43);
      v36 = FlowAction.referrerUrl.getter(v35);
      v38 = v37;
      FlowAction.referrerData.getter();
      (*(void (**)(char *, char *, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v34 + 16))(v19, v12, v36, v38, v9, v33, v34);
      swift_bridgeObjectRelease(v38);
      sub_100011088((uint64_t)v9, (uint64_t *)&unk_1008086D0);
      sub_10002F0D4((uint64_t)v12, type metadata accessor for FlowPresentationHints);
      sub_10002F0D4((uint64_t)v19, type metadata accessor for FlowDestination);
      return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v42);
    }
    else
    {
      sub_10002F0D4((uint64_t)v12, type metadata accessor for FlowPresentationHints);
      sub_10002F0D4((uint64_t)v19, type metadata accessor for FlowDestination);
      return sub_100011088((uint64_t)v42, (uint64_t *)&unk_100808370);
    }
  }
}

uint64_t sub_10002F524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  id v14;
  void *Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD v26[2];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  id v30;

  v4 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000194E4(a2, (uint64_t)v27, &qword_1007F6E90);
  if (v28)
  {
    v10 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    if ((swift_dynamicCast(&v30, v27, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
    {
      v11 = v30;
      goto LABEL_9;
    }
  }
  else
  {
    sub_100011088((uint64_t)v27, &qword_1007F6E90);
  }
  sub_1000194E4(a2, (uint64_t)v27, &qword_1007F6E90);
  if (!v28)
  {
    v25 = &qword_1007F6E90;
    return sub_100011088((uint64_t)v27, v25);
  }
  v12 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  result = swift_dynamicCast(&v30, v27, (char *)&type metadata for Any + 8, v12, 6);
  if ((result & 1) == 0)
    return result;
  v14 = v30;
  result = (uint64_t)objc_msgSend(v30, "view");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v11 = (id)result;

LABEL_9:
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v27);

  v16 = v28;
  if (!v28)
  {

    v25 = (uint64_t *)&unk_100808370;
    return sub_100011088((uint64_t)v27, v25);
  }
  v17 = v29;
  v26[1] = sub_100011064(v27, v28);
  v18 = sub_10000DF3C(&qword_1007F7990);
  v19 = *(int *)(v18 + 80);
  *v9 = ShareSheetAction.data.getter(v18);
  v9[1] = ShareSheetAction.activities.getter();
  ShareSheetAction.shareSheetStyle.getter();
  *(_QWORD *)((char *)v9 + v19) = v11;
  swift_storeEnumTagMultiPayload(v9, v7, 10);
  v20 = qword_1007F31E8;
  v21 = v11;
  if (v20 != -1)
    swift_once(&qword_1007F31E8, sub_10059EF30);
  v22 = type metadata accessor for FlowPresentationHints(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100857130);
  v24 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v17 + 16))(v9, v23, 0, 0, v6, v16, v17);

  sub_100011088((uint64_t)v6, (uint64_t *)&unk_1008086D0);
  sub_10002F0D4((uint64_t)v9, type metadata accessor for FlowDestination);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
}

uint64_t sub_10002F830(uint64_t a1, uint64_t a2)
{
  return sub_10002F870(a1, a2, (uint64_t (*)(void))&ReportConcernAction.reasons.getter, (uint64_t (*)(void))&ReportConcernAction.explanation.getter, (uint64_t (*)(void))&ReportConcernAction.sendAction.getter, 0xBu);
}

uint64_t sub_10002F850(uint64_t a1, uint64_t a2)
{
  return sub_10002F870(a1, a2, (uint64_t (*)(void))&ReviewSummaryReportConcernAction.concerns.getter, (uint64_t (*)(void))&ReviewSummaryReportConcernAction.comment.getter, (uint64_t (*)(void))&ReviewSummaryReportConcernAction.sendAction.getter, 0xCu);
}

uint64_t sub_10002F870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void), unsigned int a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void *Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(void);
  unsigned int v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v38 = a6;
  v37 = a4;
  v9 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v6 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v39);

  v19 = v40;
  if (!v40)
    return sub_100011088((uint64_t)v39, (uint64_t *)&unk_100808370);
  v35 = v41;
  v36 = sub_100011064(v39, v40);
  v20 = a3();
  v21 = v37();
  v22 = a5;
  v23 = v21;
  v25 = v24;
  v26 = v22();
  *v17 = v20;
  v17[1] = v23;
  v17[2] = v25;
  v17[3] = v26;
  swift_storeEnumTagMultiPayload(v17, v15, v38);
  v27 = enum case for FlowPresentationContext.presentModalFormSheet(_:);
  v28 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v14, v27, v28);
  v29 = &v14[*(int *)(v12 + 20)];
  v30 = enum case for FlowAnimationBehavior.infer(_:);
  v31 = type metadata accessor for FlowAnimationBehavior(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v29, v30, v31);
  v32 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
  (*(void (**)(uint64_t *, char *, _QWORD, _QWORD, char *, uint64_t))(v35 + 16))(v17, v14, 0, 0, v11, v19);
  sub_100011088((uint64_t)v11, (uint64_t *)&unk_1008086D0);
  sub_10002F0D4((uint64_t)v14, type metadata accessor for FlowPresentationHints);
  sub_10002F0D4((uint64_t)v17, type metadata accessor for FlowDestination);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v39);
}

uint64_t sub_10002FADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v1 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v21);

  v11 = v22;
  if (!v22)
    return sub_100011088((uint64_t)v21, (uint64_t *)&unk_100808370);
  v12 = v23;
  sub_100011064(v21, v22);
  swift_storeEnumTagMultiPayload(v9, v7, 48);
  v13 = enum case for FlowPresentationContext.push(_:);
  v14 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v6, v13, v14);
  v15 = &v6[*(int *)(v4 + 20)];
  v16 = enum case for FlowAnimationBehavior.always(_:);
  v17 = type metadata accessor for FlowAnimationBehavior(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 1, 1, v18);
  (*(void (**)(char *, char *, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v12 + 16))(v9, v6, 0, 0, v3, v11, v12);
  sub_100011088((uint64_t)v3, (uint64_t *)&unk_1008086D0);
  sub_10002F0D4((uint64_t)v6, type metadata accessor for FlowPresentationHints);
  sub_10002F0D4((uint64_t)v9, type metadata accessor for FlowDestination);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
}

uint64_t sub_10002FCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *Strong;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v1 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + qword_1007F4DD8);
  sub_10050AC30((uint64_t)v23);

  v11 = v24;
  if (!v24)
    return sub_100011088((uint64_t)v23, (uint64_t *)&unk_100808370);
  v12 = v25;
  v13 = sub_100011064(v23, v24);
  *v9 = GameCenterPlayerProfileAction.playerId.getter(v13);
  v9[1] = v14;
  swift_storeEnumTagMultiPayload(v9, v7, 34);
  v15 = enum case for FlowPresentationContext.push(_:);
  v16 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v6, v15, v16);
  v17 = &v6[*(int *)(v4 + 20)];
  v18 = enum case for FlowAnimationBehavior.always(_:);
  v19 = type metadata accessor for FlowAnimationBehavior(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  v20 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
  (*(void (**)(_QWORD *, char *, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v12 + 16))(v9, v6, 0, 0, v3, v11, v12);
  sub_100011088((uint64_t)v3, (uint64_t *)&unk_1008086D0);
  sub_10002F0D4((uint64_t)v6, type metadata accessor for FlowPresentationHints);
  sub_10002F0D4((uint64_t)v9, type metadata accessor for FlowDestination);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v23);
}

uint64_t sub_10002FF38(void **a1)
{
  uint64_t v1;

  return sub_10002C86C(a1, v1);
}

uint64_t sub_10002FF40(void **a1)
{
  uint64_t v1;

  return sub_10002E43C(a1, v1);
}

uint64_t sub_10002FF48()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10002FF84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1007F4E3C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100030018;
  return sub_10002E080(v12, a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100030018()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100030060()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100030094(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007F4E4C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000303C4;
  return sub_10002DB94(v10, a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100030114()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100030138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007F4E5C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100030018;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1007F4E58 + dword_1007F4E58))(a1, v4);
}

void sub_1000301AC(void **a1)
{
  uint64_t v1;

  sub_10002CC5C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1000301B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1000301E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10002CE24(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1000301E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000301F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_100030204(void *a1, __n128 a2)
{
  uint64_t v2;

  return sub_10002CA5C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

double sub_10003020C(void *a1, __n128 a2)
{
  return sub_10002E7B0(a1, a2);
}

uint64_t sub_100030214()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100030248(void *a1)
{
  uint64_t *v1;

  sub_10002D5C4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100030258()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100030284(void *a1, __n128 a2)
{
  uint64_t v2;

  return sub_10002C694(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10003028C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  if (v0[5])
    swift_release(v0[6]);
  swift_release(v0[7]);
  if (v0[11])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 8);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1000302E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F6E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100030330(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  _OWORD v4[2];
  uint64_t v5;

  v2 = *(_OWORD *)(v1 + 32);
  v4[0] = *(_OWORD *)(v1 + 16);
  v4[1] = v2;
  v3 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 48);
  sub_10002C4B8(a1, v4, v3, v1 + 64, *(_QWORD *)(v1 + 96));
}

uint64_t sub_100030368()
{
  uint64_t v0;

  return sub_1001016F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100030370()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  if (v0[7])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 4);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000303B4(uint64_t a1)
{
  uint64_t *v1;

  return sub_10002B828(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[8]);
}

void sub_1000303E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, _QWORD, uint64_t, __n128);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  void *v52;
  void *v53;
  unsigned int v54;
  uint64_t v55;
  void *v56;
  void *v57;
  unsigned int v58;
  uint64_t v59;
  id v60;
  double v61;
  uint64_t v62;
  _QWORD *v63;
  __n128 v64;
  uint64_t v65;
  _QWORD *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  id v88;
  float v89;
  id v90;
  NSString v91;
  uint64_t v92;
  __n128 v93;
  char v94;
  char v95;
  id v96;
  char v97;
  uint64_t v98;
  double v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  double v131;
  char v132;
  uint64_t v133;
  double v134;
  char v135;
  uint64_t v136;
  void *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  id v146;
  float v147;
  id v148;
  NSString v149;
  uint64_t v150;
  uint64_t v151;
  double v152;
  char v153;
  uint64_t v154;
  double v155;
  __n128 v156;
  char v157;
  char v158;
  uint64_t v159;
  double v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  char v167;
  uint64_t v168;
  double v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t ObjectType;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD v184[3];
  uint64_t v185;
  uint64_t v186;

  v182 = a1;
  v183 = a3;
  v171 = a2;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v173 = *(_QWORD *)(v3 - 8);
  v174 = v3;
  __chkstk_darwin(v3);
  v172 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F4A50);
  v6 = __chkstk_darwin(v5);
  v175 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OfferLabelStyle(0, v6);
  v178 = *(_QWORD *)(v8 - 8);
  v179 = v8;
  __chkstk_darwin(v8);
  v176 = (char *)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v177 = (char *)&v170 - v11;
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v12);
  v14 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v15);
  v17 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v18);
  v20 = (char *)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v21);
  v23 = (char *)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v170 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v25);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v170 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v170 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v29 + 104);
  v36(v31, enum case for OfferButtonPresenterViewAlignment.right(_:), v28, v33);
  ((void (*)(char *, _QWORD, uint64_t))v36)(v27, enum case for OfferButtonPresenterViewAlignment.left(_:), v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
  v37 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  v38 = v27;
  v39 = v181;
  AccessibilityConditional.init(value:axValue:)(v31, v38, v28, v37);
  v40 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v35, 0, 1, v40);
  v41 = type metadata accessor for OfferStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v23, 1, 1, v41);
  v42 = type metadata accessor for OfferEnvironment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v20, 1, 1, v42);
  v43 = type metadata accessor for OfferTint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v17, 1, 1, v43);
  v44 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v14, 1, 1, v44);
  v45 = v182;
  sub_10054F220(v182, v39, (uint64_t)v35, v183, 0, 1, (uint64_t)v23, (uint64_t)v20, (uint64_t)v17, (uint64_t)v14);
  sub_100011088((uint64_t)v14, (uint64_t *)&unk_1007F7C10);
  sub_100011088((uint64_t)v17, (uint64_t *)&unk_1007F76F0);
  sub_100011088((uint64_t)v20, (uint64_t *)&unk_1007F7C20);
  v46 = (uint64_t)v23;
  v47 = v45;
  sub_100011088(v46, (uint64_t *)&unk_1007F7700);
  sub_100011088((uint64_t)v35, (uint64_t *)&unk_1007F7710);
  v48 = type metadata accessor for MixedMediaLockup(0);
  v49 = swift_dynamicCastClass(v45, v48);
  if (v49)
    *(_QWORD *)&v50 = swift_retain(v45).n128_u64[0];
  v51 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel;
  v52 = *(void **)&v39[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel];
  if (v52 && (objc_msgSend(v52, "isHidden", v50) & 1) == 0 && (v53 = *(void **)&v39[v51]) != 0)
    v54 = objc_msgSend(v53, "hasContent");
  else
    v54 = 0;
  v55 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel;
  v56 = *(void **)&v39[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel];
  if (v56 && (objc_msgSend(v56, "isHidden") & 1) == 0 && (v57 = *(void **)&v39[v55]) != 0)
    v58 = objc_msgSend(v57, "hasContent");
  else
    v58 = 0;
  v59 = Lockup.searchAd.getter();
  *(_QWORD *)&v61 = swift_release(v59).n128_u64[0];
  if (v59
    || (v62 = type metadata accessor for Feature(0),
        v185 = v62,
        v186 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature), v63 = sub_1000117C0(v184), (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v63, enum case for Feature.search_tags(_:), v62), LOBYTE(v62) = isFeatureEnabled(_:)(v184), v60 = (id)_s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v184), (v62 & 1) != 0))
  {
    if ((v54 & 1) != 0)
    {
      objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel], "setHidden:", 1, v61);
      v60 = *(id *)&v39[v55];
      if (v60)
        v60 = objc_msgSend(v60, "setHidden:", 1);
      v58 = 0;
    }
    else if (v58)
    {
      v58 = 1;
      v60 = objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel], "setHidden:", 1, v61);
    }
  }
  v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_useAdsLocale] = Lockup.useAdsLocale.getter(v60) & 1;
  if (v49)
  {
    v64 = swift_retain(v49);
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includesMetadataInformationInLockup] = MixedMediaLockup.showMetadataInformationInLockup.getter(v64) & 1;
    v65 = type metadata accessor for Feature(0);
    v185 = v65;
    v186 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v66 = sub_1000117C0(v184);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v66, enum case for Feature.search_tags(_:), v65);
    LOBYTE(v65) = isFeatureEnabled(_:)(v184);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v184);
    if ((v65 & 1) == 0 || (v68 = MixedMediaLockup.showMetadataInformationInLockup.getter(v67), (v68 & 1) == 0))
    {
      v97 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
      v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
      sub_10015425C(v97);
      v98 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
      v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
      objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
      v99 = 1.0;
      if (!v39[v98])
        v99 = 0.0;
      v96 = objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v99);
      if ((v54 & 1) != 0)
      {
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel], "setHidden:", 0);
        v96 = *(id *)&v39[v55];
        if (v96)
          v96 = objc_msgSend(v96, "setHidden:", 0);
      }
      else if (v58)
      {
        v96 = objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel], "setHidden:", 0);
      }
      goto LABEL_53;
    }
    v69 = Lockup.offerDisplayProperties.getter(v68);
    if (v69)
    {
      v71 = v69;
      v72 = v177;
      OfferDisplayProperties.offerLabelStyle.getter(v69);
      v73 = v178;
      v74 = v179;
      v75 = v176;
      (*(void (**)(char *, _QWORD, uint64_t))(v178 + 104))(v176, enum case for OfferLabelStyle.none(_:), v179);
      v76 = sub_10000E99C(&qword_1007F4E80, (uint64_t (*)(uint64_t))&type metadata accessor for OfferLabelStyle, (uint64_t)&protocol conformance descriptor for OfferLabelStyle);
      v77 = dispatch thunk of static Equatable.== infix(_:_:)(v72, v75, v74, v76);
      v78 = *(void (**)(char *, uint64_t))(v73 + 8);
      v78(v75, v74);
      v78(v72, v74);
      if ((v77 & 1) == 0)
      {
        v151 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
        v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
        v152 = 1.0;
        if (!v39[v151])
          v152 = 0.0;
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v152);
        v153 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
        v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
        sub_10015425C(v153);
        swift_release(v71);
        goto LABEL_53;
      }
      v70 = swift_release(v71);
    }
    v79 = Lockup.rating.getter(v70);
    if (v79)
    {
      v80 = (void *)v79;
      v81 = v39;
      Lockup.ratingCount.getter();
      if (v82)
      {
        v83 = v82;
        v84 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
        v81[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 1;
        v85 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView;
        objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 1.0);
        v86 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel;
        v87 = 0.0;
        if (v81[v84])
          v87 = 1.0;
        objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v87);
        v88 = *(id *)&v81[v85];
        objc_msgSend(v80, "floatValue");
        sub_10042AA4C(v89);

        v90 = *(id *)&v81[v86];
        v91 = String._bridgeToObjectiveC()();
        v92 = v83;
        v39 = v81;
        objc_msgSend(v90, "setText:", v91, swift_bridgeObjectRelease(v92).n128_f64[0]);

        v94 = Lockup.isEditorsChoice.getter(v93);
        v95 = v81[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
        v81[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = v94 & 1;
        sub_10015425C(v95);

LABEL_53:
        v114 = MixedMediaLockup.searchTagRibbonItems.getter(v96);
        if (v114)
        {
          v115 = v114;
          if ((sub_1000D88A0(v114, 0) & 1) != 0)
          {
            v116 = MixedMediaLockup.shouldEvenlyDistributeRibbonItems.getter();
            sub_10007B7A0(v115, v116 & 1, v183);
          }
          swift_bridgeObjectRelease(v115);
        }
        v117 = v49;
LABEL_58:
        v118 = swift_release(v117).n128_u64[0];
LABEL_59:
        objc_msgSend(v39, "setNeedsLayout", *(double *)&v118);
        swift_release(v49);
        return;
      }

    }
    v154 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
    v155 = 1.0;
    if (!v39[v154])
      v155 = 0.0;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v155);
    v157 = Lockup.isEditorsChoice.getter(v156);
    v158 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = v157 & 1;
    sub_10015425C(v158);
    goto LABEL_53;
  }
  v100 = swift_dynamicCastClass(v45, v48);
  if (!v100)
  {
LABEL_62:
    v119 = Lockup.offerDisplayProperties.getter(v100);
    if (v119)
    {
      v121 = v119;
      v183 = 0;
      v122 = v177;
      OfferDisplayProperties.offerLabelStyle.getter(v119);
      v123 = v178;
      v124 = v179;
      v125 = v176;
      (*(void (**)(char *, _QWORD, uint64_t))(v178 + 104))(v176, enum case for OfferLabelStyle.none(_:), v179);
      v126 = sub_10000E99C(&qword_1007F4E80, (uint64_t (*)(uint64_t))&type metadata accessor for OfferLabelStyle, (uint64_t)&protocol conformance descriptor for OfferLabelStyle);
      v127 = dispatch thunk of static Equatable.== infix(_:_:)(v122, v125, v124, v126);
      v128 = *(void (**)(char *, uint64_t))(v123 + 8);
      v128(v125, v124);
      v128(v122, v124);
      if ((v127 & 1) == 0)
      {
        v133 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
        v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
        v134 = 1.0;
        if (!v39[v133])
          v134 = 0.0;
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v134);
        v135 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
        v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
        sub_10015425C(v135);
        v118 = swift_release(v121).n128_u64[0];
        v49 = v183;
        goto LABEL_59;
      }
      v120 = swift_release(v121);
      v49 = v183;
    }
    if ((v54 | v58) != 1 || (v129 = Lockup.searchAd.getter(), v120 = swift_release(v129), v129))
    {
      if ((Lockup.isEditorsChoice.getter(v120) & 1) != 0)
      {
        v130 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
        v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
        v131 = 1.0;
        if (!v39[v130])
          v131 = 0.0;
        objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v131);
        v132 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
        v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 1;
LABEL_90:
        sub_10015425C(v132);
        goto LABEL_59;
      }
      v136 = ((uint64_t (*)(void))Lockup.rating.getter)();
      if (v136)
      {
        v137 = (void *)v136;
        v138 = v39;
        Lockup.ratingCount.getter();
        if (v139)
        {
          v140 = v139;
          v141 = v138[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
          v138[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
          sub_10015425C(v141);
          v142 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
          v138[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 1;
          v143 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView;
          objc_msgSend(*(id *)&v138[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 1.0);
          v144 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel;
          v145 = 0.0;
          if (v138[v142])
            v145 = 1.0;
          objc_msgSend(*(id *)&v138[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v145);
          v146 = *(id *)&v138[v143];
          objc_msgSend(v137, "floatValue");
          sub_10042AA4C(v147);

          v148 = *(id *)&v138[v144];
          v149 = String._bridgeToObjectiveC()();
          v150 = v140;
          v39 = v138;
          objc_msgSend(v148, "setText:", v149, swift_bridgeObjectRelease(v150).n128_f64[0]);

          goto LABEL_59;
        }

      }
    }
    v159 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
    v160 = 1.0;
    if (!v39[v159])
      v160 = 0.0;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v160);
    v132 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
    goto LABEL_90;
  }
  v101 = swift_retain(v45);
  v102 = MixedMediaLockup.metadataRibbonItems.getter(v101);
  if (!v102)
  {
    swift_release(v45);
    goto LABEL_62;
  }
  v103 = v102;
  if ((sub_1000D88A0(0, v102) & 1) == 0)
  {
    swift_release(v45);
    swift_bridgeObjectRelease(v103);
    goto LABEL_62;
  }
  v104 = MixedMediaLockup.screenshots.getter();
  v105 = v104;
  if ((unint64_t)v104 >> 62)
  {
    if (v104 >= 0)
      v104 &= 0xFFFFFFFFFFFFFF8uLL;
    _CocoaArrayWrapper.endIndex.getter(v104);
  }
  swift_bridgeObjectRelease(v105);
  v107 = MixedMediaLockup.trailers.getter(v106);
  v108 = v107;
  v109 = (uint64_t)v175;
  if (!((unint64_t)v107 >> 62))
  {
    if (*(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_43;
LABEL_97:
    v112 = v39;
LABEL_98:
    swift_bridgeObjectRelease(v108);
    sub_1000242B0(v171, v109);
    v161 = type metadata accessor for ItemLayoutContext(0);
    v162 = *(_QWORD *)(v161 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v109, 1, v161) == 1)
    {
      sub_100011088(v109, &qword_1007F4A50);
    }
    else
    {
      v163 = type metadata accessor for BundleSearchResult(0);
      v164 = sub_10000E99C(&qword_1007F4E88, (uint64_t (*)(uint64_t))&type metadata accessor for BundleSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
      ItemLayoutContext.typedModel<A>(is:)(v163, v163, v164);
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v109, v161);
    }
    v39 = v112;
    v165 = (uint64_t)v172;
    _s22SubscribePageExtension18MetadataRibbonViewC7metrics19AppStoreKitInternal0deF6LayoutV7MetricsVvpfi_0();
    sub_100210974(v103, v165, v183);
    v166 = swift_bridgeObjectRelease(v103);
    (*(void (**)(uint64_t, uint64_t, __n128))(v173 + 8))(v165, v174, v166);
    v167 = v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice];
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeEditorsChoice] = 0;
    sub_10015425C(v167);
    v168 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings;
    v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_includeRatings] = 0;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_userRatingView], "setAlpha:", 0.0);
    v169 = 1.0;
    if (!v39[v168])
      v169 = 0.0;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel], "setAlpha:", v169);
    v117 = v47;
    goto LABEL_58;
  }
  if (v107 >= 0)
    v107 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v107))
    goto LABEL_97;
LABEL_43:
  if ((v108 & 0xC000000000000001) != 0)
  {
    v110 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v108);
LABEL_46:
    swift_bridgeObjectRelease(v108);
    v108 = Trailers.videos.getter(v111);
    swift_release(v110);
    v112 = v39;
    if ((unint64_t)v108 >> 62)
    {
      if (v108 < 0)
        v113 = v108;
      else
        v113 = v108 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v108);
      _CocoaArrayWrapper.endIndex.getter(v113);
      swift_bridgeObjectRelease(v108);
    }
    goto LABEL_98;
  }
  if (*(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v110 = *(_QWORD *)(v108 + 32);
    swift_retain(v110);
    goto LABEL_46;
  }
  __break(1u);
}

double sub_10003151C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSString v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  void (*v26)();
  void (**v27)();
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  char *v48;
  id v49;
  double v50;
  NSString v51;
  _QWORD v52[5];

  v3 = v2;
  if (a1)
  {
    v6 = objc_allocWithZone((Class)type metadata accessor for SearchAdTransparencyButton(0));
    v7 = objc_msgSend(v6, "init", swift_retain(a1).n128_f64[0]);
    v8 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton;
    v9 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton];
    if (v9)
    {
      objc_msgSend(v9, "removeFromSuperview");
      v10 = *(void **)&v3[v8];
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)&v3[v8] = v7;
    v14 = v7;

    if (*(_QWORD *)&v3[v8])
      objc_msgSend(v3, "addSubview:");

    v15 = *(void **)&v3[v8];
    if (v15)
    {
      v16 = v15;
      v17 = SearchAd.adTransparencyAction.getter();
      Action.title.getter(v18);
      v20 = v19;
      v21 = swift_release(v17).n128_u64[0];
      if (v20)
      {
        v22 = String._bridgeToObjectiveC()();
        v21 = swift_bridgeObjectRelease(v20).n128_u64[0];
      }
      else
      {
        v22 = 0;
      }
      objc_msgSend(v16, "setTitle:forState:", v22, 0, *(double *)&v21);

      v24 = *(_QWORD *)&v3[v8];
      if (v24)
      {
        v25 = swift_allocObject(&unk_100722F00, 24, 7);
        swift_unknownObjectWeakInit(v25 + 16);
        v26 = (void (*)())swift_allocObject(&unk_100722F28, 40, 7);
        *((_QWORD *)v26 + 2) = v25;
        *((_QWORD *)v26 + 3) = a1;
        *((_QWORD *)v26 + 4) = a2;
        v27 = (void (**)())(v24 + qword_100806E30);
        v28 = *(_QWORD *)(v24 + qword_100806E30);
        v29 = *(_QWORD *)(v24 + qword_100806E30 + 8);
        *v27 = sub_100031B9C;
        v27[1] = v26;
        swift_retain(a1);
        swift_retain(a2);
        sub_100019310(v28, v29);
      }
    }
    v30 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_editorsChoiceView];
    if (v30)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v31 = v30;
      v32 = (void *)static UIColor.secondaryText.getter(v31);
      objc_msgSend(v31, "setTintColor:", v32);

    }
    v33 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel];
    v34 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v35 = static UIColor.secondaryText.getter(v34);
    objc_msgSend(v33, "setTextColor:", v35);

    v36 = type metadata accessor for Feature(0);
    v52[3] = v36;
    v52[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v37 = sub_1000117C0(v52);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v37, enum case for Feature.search_tags(_:), v36);
    LOBYTE(v35) = isFeatureEnabled(_:)(v52);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v52);
    v38 = *(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_ratingCountLabel];
    v39 = v38;
    if ((v35 & 1) != 0)
      v40 = static UIColor.secondaryText.getter(v38);
    else
      v40 = static UIColor.tertiaryText.getter(v38);
    v41 = (void *)v40;
    objc_msgSend(v39, "setTextColor:", v40);

    SearchAd.advertisingText.getter(v42);
    v44 = v43;
    v45 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_descriptionLabel];
    v46 = objc_msgSend(v45, "superview");
    if (!v46)
      goto LABEL_25;
    v47 = v46;
    sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v48 = v3;
    v49 = v47;
    LOBYTE(v47) = static NSObject.== infix(_:_:)(v49, v48);

    if ((v47 & 1) == 0)
LABEL_25:
      objc_msgSend(v3, "addSubview:", v45);
    objc_msgSend(v45, "setHidden:", v44 == 0);
    if (v44)
    {
      v51 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v50 = swift_bridgeObjectRelease(v44).n128_u64[0];
    }
    else
    {
      v51 = 0;
    }
    objc_msgSend(v45, "setText:", v51, v50);

    objc_msgSend(v3, "setNeedsLayout");
    v3[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_isDisplayingSearchAd] = 1;
    sub_1001543A4();
    objc_msgSend(v3, "setNeedsLayout");
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  else
  {
    v2[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_isDisplayingSearchAd] = 0;
    sub_1001543A4();
    v11 = OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton;
    v12 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_searchAdTransparencyButton];
    if (v12)
    {
      objc_msgSend(v12, "removeFromSuperview");
      v13 = *(void **)&v3[v11];
    }
    else
    {
      v13 = 0;
    }
    *(_QWORD *)&v3[v11] = 0;

    if (*(_QWORD *)&v3[v11])
      objc_msgSend(v3, "addSubview:");
  }
  return result;
}

void sub_1000319F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD v16[4];
  _BYTE v17[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v13 = SearchAd.adTransparencyAction.getter();
      v16[3] = type metadata accessor for SearchAd(0);
      v16[0] = a2;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      swift_retain(a2);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v13, v16, v9, a3);
      swift_release(v12);
      v14 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v14);
      sub_100011088((uint64_t)v16, &qword_1007F6E90);
    }
  }
}

uint64_t sub_100031B30()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension21SmallSearchLockupView_isDisplayingSearchAd);
}

uint64_t sub_100031B44()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100031B68()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100031B9C()
{
  uint64_t *v0;

  sub_1000319F0(v0[2], v0[3], v0[4]);
}

void sub_100031BA8()
{
  qword_1008506D0 = (uint64_t)&type metadata for Double;
  unk_1008506D8 = &protocol witness table for Double;
  qword_1008506B8 = 0x4030000000000000;
  qword_100850700 = (uint64_t)&type metadata for Double;
  unk_100850708 = &protocol witness table for Double;
  qword_1008506E8 = 0x4020000000000000;
  byte_1008506E0 = 1;
}

char *sub_100031BE4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  objc_class *v26;
  char *v27;
  char *v28;
  id v29;
  void *v30;
  char *v31;
  id v32;
  id v33;
  double left;
  double bottom;
  double right;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  objc_super v47;
  objc_super v48;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v5[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_rateAction];
  v19 = sub_10000DF3C(&qword_1007F4EE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v5[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_isSingleColumn] = 0;
  v20 = qword_1007F2430;
  v21 = v5;
  if (v20 != -1)
    swift_once(&qword_1007F2430, sub_100414E1C);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100855178);
  v24 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v17, v23, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_titleLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 4, 0, 0, v14, 0, 0);
  v26 = (objc_class *)type metadata accessor for StarRatingControl();
  v27 = (char *)objc_allocWithZone(v26);
  *(_QWORD *)&v27[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_lastSentRating] = 0;
  v28 = &v27[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_touchOutsideMargin];
  *(_OWORD *)v28 = xmmword_100670750;
  *((_OWORD *)v28 + 1) = xmmword_100670750;
  v48.receiver = v27;
  v48.super_class = v26;
  v29 = objc_msgSendSuper2(&v48, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v30 = (void *)objc_opt_self(UIColor);
  v31 = (char *)v29;
  v32 = objc_msgSend(v30, "clearColor");
  objc_msgSend(v31, "setBackgroundColor:", v32);

  objc_msgSend(v31, "setContentMode:", 3);
  *(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_ratingControl] = v31;

  v47.receiver = v21;
  v47.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v37 = (char *)v33;
  objc_msgSend(v37, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v38 = OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_titleLabel;
  v39 = *(void **)&v37[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_titleLabel];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v40 = v39;
  v41 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v40, "setTextColor:", v41);

  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[v38]);
  v42 = *(void **)&v37[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_ratingControl];
  objc_msgSend(v37, "addSubview:", v42);
  sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
  v43 = swift_allocObject(&unk_100722F90, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v37);
  v44 = v42;
  v45 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10003296C, v43);
  objc_msgSend(v44, "addAction:forControlEvents:", v45, 4096);

  return v37;
}

void sub_100032050(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD v26[4];
  uint64_t v27;
  char v28[24];
  char v29[24];

  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F4EF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F4EE0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = (char *)Strong;
    v16 = Strong + OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_rateAction;
    swift_beginAccess(Strong + OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_rateAction, v28, 0, 0);
    sub_100032974(v16, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {

      sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007F4EF0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      ObjectGraphPair.value.getter(v26, v10);
      v17 = v26[0];
      dispatch thunk of RateAction.rating.setter(*(_QWORD *)(*(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_ratingControl]+ OBJC_IVAR____TtC22SubscribePageExtension17StarRatingControl_rating), 0);
      swift_release(v17);
      v18 = v15;
      v19 = UIResponder.nearestActionRunner.getter();

      if (v19)
      {
        ObjectGraphPair.value.getter(&v27, v10);
        v25 = v27;
        v26[3] = type metadata accessor for ProductTapToRateView(0);
        v26[0] = v18;
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ActionRunner.Origin.action(_:), v3);
        v24 = v18;
        v20 = ObjectGraphPair.objectGraph.getter(v10);
        v21 = v25;
        dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v25, v26, v6, v20);

        swift_release(v19);
        swift_release(v21);
        v22 = swift_release(v20);
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v22);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_100011088((uint64_t)v26, &qword_1007F6E90);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      }
    }
  }
}

uint64_t sub_1000323E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11[2];
  __int128 v12;
  uint64_t v13;
  void *v14;
  _OWORD v15[5];
  uint64_t v16;
  _QWORD v17[5];
  char v18;

  if (qword_1007F0BA8 != -1)
    swift_once(&qword_1007F0BA8, sub_100031BA8);
  sub_100032858((uint64_t)&qword_1008506B8, (uint64_t)v17);
  v18 = *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_isSingleColumn);
  sub_100032858((uint64_t)v17, (uint64_t)v15);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension20ProductTapToRateView_titleLabel);
  v13 = type metadata accessor for DynamicTypeLabel(0);
  v14 = &protocol witness table for UILabel;
  *(_QWORD *)&v12 = v3;
  v4 = type metadata accessor for StarRatingControl();
  v5 = v3;
  Measurable.placeable.getter(v11, v4, &protocol witness table for UIView);
  sub_100032894(v17);
  a1[3] = (uint64_t)&type metadata for ProductTapToRateLayout;
  a1[4] = sub_1000328C8();
  v6 = swift_allocObject(&unk_100722F68, 184, 7);
  *a1 = v6;
  v7 = v15[3];
  v8 = v15[4];
  *(_OWORD *)(v6 + 48) = v15[2];
  *(_OWORD *)(v6 + 64) = v7;
  *(_OWORD *)(v6 + 80) = v8;
  *(_QWORD *)(v6 + 96) = v16;
  v9 = v15[1];
  *(_OWORD *)(v6 + 16) = v15[0];
  *(_OWORD *)(v6 + 32) = v9;
  sub_100010F3C(&v12, v6 + 104);
  return sub_100010F3C(v11, v6 + 144);
}

uint64_t sub_100032738()
{
  return type metadata accessor for ProductTapToRateView(0);
}

uint64_t type metadata accessor for ProductTapToRateView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F4EC8;
  if (!qword_1007F4EC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductTapToRateView);
  return result;
}

void sub_10003277C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100032800(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100670798;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_100032800(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F4ED8)
  {
    v2 = sub_100010EF8(&qword_1007F4EE0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F4ED8);
  }
}

uint64_t sub_100032858(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductTapToRateLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_100032894(_QWORD *a1)
{
  destroy for ProductTapToRateLayout.Metrics(a1);
  return a1;
}

unint64_t sub_1000328C8()
{
  unint64_t result;

  result = qword_1007F4EE8;
  if (!qword_1007F4EE8)
  {
    result = swift_getWitnessTable(&unk_100685A10, &type metadata for ProductTapToRateLayout);
    atomic_store(result, (unint64_t *)&qword_1007F4EE8);
  }
  return result;
}

uint64_t sub_10003290C()
{
  _QWORD *v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 2);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 8);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 13);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 18);
  return swift_deallocObject(v0, 184, 7);
}

uint64_t sub_100032948()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10003296C(uint64_t a1)
{
  uint64_t v1;

  sub_100032050(a1, v1);
}

uint64_t sub_100032974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1000329BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t i;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  if (a1 < 0)
    v17 = a1;
  else
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v17);
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v9 = *(id *)(a1 + 8 * i + 32);
      v10 = v9;
      v11 = objc_opt_self(UILabel);
      v12 = swift_dynamicCastObjCClass(v10, v11);
      if (v12)
      {
        v13 = v12;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v16);
      }
      else
      {
        v5 = objc_msgSend(v10, "subviews");
        v6 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
        v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

        v8 = sub_1000329BC(v7);
        swift_bridgeObjectRelease(v7);
        sub_100019A48(v8);
      }

    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_100032C90(void *a1)
{
  _BYTE *v1;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat *v26;
  CGFloat *v27;
  char v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat MidX;
  double v36;
  double MidY;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  double v41;
  double v42;
  id v43;
  double v44;
  id v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  id v56;
  void *v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  double MinY;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  NSString v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  NSString v79;
  double v80;
  double v81;
  void *v82;
  char *v83;
  CGFloat v84;
  void *v85;
  CGFloat m22;
  id v87;
  __n128 v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  void *v95;
  CGFloat *v96;
  id v97;
  CGFloat v98;
  void *v99;
  CGFloat v100;
  id v101;
  id v102;
  CGFloat v103;
  void *v104;
  CGFloat v105;
  id v106;
  CGFloat m43;
  CGFloat m44;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  CGFloat v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat v119;
  double v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  CGFloat v128;
  double v129;
  CGFloat v130;
  uint64_t v131;
  id v132;
  CATransform3D aBlock;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;

  v124 = type metadata accessor for DispatchWorkItemFlags(0);
  v127 = *(_QWORD *)(v124 - 8);
  v3 = __chkstk_darwin(v124);
  v123 = (char *)&m43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for DispatchQoS(0, v3);
  v125 = *(_QWORD *)(v126 - 8);
  v5 = __chkstk_darwin(v126);
  v122 = (char *)&m43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for DispatchTime(0, v5);
  v7 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v9 = (char *)&m43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v121 = (char *)&m43 - v12;
  v132 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey, v11);
  if (v132)
  {
    objc_msgSend(v132, "frame");
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;
  }
  else
  {
    v21 = objc_msgSend(a1, "containerView");
    objc_msgSend(v21, "bounds");
    v14 = v22;
    v16 = v23;
    v18 = v24;
    v20 = v25;

  }
  *(double *)&v26 = COERCE_DOUBLE(swift_allocObject(&unk_100722FB8, 48, 7));
  v27 = (CGFloat *)&v1[OBJC_IVAR____TtC22SubscribePageExtension21BouncyToRectAnimation_toRect];
  v28 = v1[OBJC_IVAR____TtC22SubscribePageExtension21BouncyToRectAnimation_toRect + 32];
  v128 = v20;
  if ((v28 & 1) != 0)
  {
    v134.origin.x = v14;
    v134.origin.y = v16;
    v134.size.width = v18;
    v134.size.height = v20;
    v29 = CGRectGetWidth(v134) * 0.3;
    v135.origin.x = v14;
    v135.origin.y = v16;
    v135.size.width = v18;
    v135.size.height = v128;
    v30 = CGRectGetHeight(v135) * 0.3;
    v20 = v128;
    v136.origin.x = v14;
    v136.origin.y = v16;
    v136.size.width = v18;
    v136.size.height = v128;
    v137 = CGRectInset(v136, v29, v30);
    x = v137.origin.x;
    y = v137.origin.y;
    width = v137.size.width;
    height = v137.size.height;
  }
  else
  {
    width = v27[2];
    height = v27[3];
    x = *v27;
    y = v27[1];
  }
  v26[2] = x;
  v26[3] = y;
  v26[4] = width;
  v26[5] = height;
  v138.origin.x = v14;
  v138.origin.y = v16;
  v138.size.width = v18;
  v138.size.height = v20;
  v120 = CGRectGetWidth(v138);
  v139.origin.x = x;
  v139.origin.y = y;
  v139.size.width = width;
  v139.size.height = height;
  v117 = CGRectGetWidth(v139);
  v140.origin.x = v14;
  v140.origin.y = v16;
  v140.size.width = v18;
  v140.size.height = v20;
  *(_QWORD *)&v115 = CGRectGetHeight(v140);
  v141.origin.x = x;
  v141.origin.y = y;
  v141.size.width = width;
  v141.size.height = height;
  *(_QWORD *)&v114 = CGRectGetHeight(v141);
  v142.origin.x = v14;
  v142.origin.y = v16;
  v142.size.width = v18;
  v142.size.height = v20;
  *(_QWORD *)&v113 = CGRectGetMidX(v142);
  v143.origin.x = x;
  v143.origin.y = y;
  v143.size.width = width;
  v143.size.height = height;
  MidX = CGRectGetMidX(v143);
  v144.size.width = v18;
  v36 = MidX;
  v130 = v14;
  v144.origin.x = v14;
  v118 = v16;
  v144.origin.y = v16;
  v119 = v144.size.width;
  v144.size.height = v20;
  MidY = CGRectGetMidY(v144);
  v129 = x;
  v145.origin.x = x;
  v38 = y;
  v145.origin.y = y;
  v116 = width;
  v145.size.width = width;
  v39 = height;
  v145.size.height = height;
  v40 = CGRectGetMidY(v145);
  v41 = sqrt((v120 - v117) * (v120 - v117) + (*(double *)&v115 - *(double *)&v114)
                                           * (*(double *)&v115 - *(double *)&v114));
  v42 = sqrt((*(double *)&v113 - v36) * (*(double *)&v113 - v36) + (MidY - v40) * (MidY - v40));
  if (v41 > v42)
    v42 = v41;
  v117 = v42 / 0.7 / v42;
  v43 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  v44 = *(double *)&v43;
  if (*(double *)&v43 != 0.0)
  {
    v45 = v43;
    v46 = objc_msgSend(a1, "containerView");
    objc_msgSend(v46, "bounds");
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v54 = v53;

    objc_msgSend(v45, "setFrame:", v48, v50, v52, v54);
    v55 = v45;
    v56 = objc_msgSend(a1, "containerView");
    objc_msgSend(v56, "insertSubview:below:", v55, v132);

  }
  v120 = v44;
  v57 = v1;
  v58 = v129;
  v146.origin.x = v129;
  v59 = v38;
  v146.origin.y = v38;
  v60 = v116;
  v146.size.width = v116;
  v61 = v39;
  v146.size.height = v39;
  MinY = CGRectGetMinY(v146);
  v147.origin.x = v130;
  v63 = v118;
  v147.origin.y = v118;
  v64 = v119;
  v147.size.width = v119;
  v65 = v128;
  v147.size.height = v128;
  v66 = MinY - CGRectGetMinY(v147);
  v148.origin.x = v58;
  v148.origin.y = v59;
  v148.size.width = v60;
  v148.size.height = v61;
  v67 = CGRectGetMidX(v148);
  v68 = v130;
  v149.origin.x = v130;
  v149.origin.y = v63;
  v149.size.width = v64;
  v149.size.height = v65;
  v69 = CGRectGetMidX(v149);
  CATransform3DMakeTranslation(&aBlock, v67 - v69, v66, 0.0);
  v115 = *(_OWORD *)&aBlock.m11;
  v114 = *(_OWORD *)&aBlock.m13;
  v113 = *(_OWORD *)&aBlock.m21;
  v112 = *(_OWORD *)&aBlock.m23;
  v111 = *(_OWORD *)&aBlock.m31;
  v110 = *(_OWORD *)&aBlock.m33;
  v109 = *(_OWORD *)&aBlock.m41;
  m43 = aBlock.m43;
  m44 = aBlock.m44;
  v26[3] = v63;
  v150.origin.x = v68;
  v150.origin.y = v63;
  v150.size.width = v64;
  v150.size.height = v65;
  v70 = CGRectGetWidth(v150);
  v151.origin.x = v129;
  v151.origin.y = v63;
  v151.size.width = v60;
  v151.size.height = v61;
  v71 = CGRectGetWidth(v151);
  v130 = *(double *)&v26;
  v26[2] = v68 + (v70 - v71) * 0.5;
  v72 = String._bridgeToObjectiveC()();
  v73 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v72);

  v74 = (void *)objc_opt_self(NSValue);
  v75 = v73;
  *(_OWORD *)&aBlock.m11 = v115;
  *(_OWORD *)&aBlock.m13 = v114;
  *(_OWORD *)&aBlock.m21 = v113;
  *(_OWORD *)&aBlock.m23 = v112;
  *(_OWORD *)&aBlock.m31 = v111;
  *(_OWORD *)&aBlock.m33 = v110;
  *(_OWORD *)&aBlock.m41 = v109;
  aBlock.m43 = m43;
  aBlock.m44 = m44;
  v76 = objc_msgSend(v74, "valueWithCATransform3D:", &aBlock);
  objc_msgSend(v75, "setToValue:", v76);

  objc_msgSend(v75, "setDamping:", 16.0);
  objc_msgSend(v75, "setMass:", 1.0);
  objc_msgSend(v75, "setStiffness:", 150.0);
  objc_msgSend(v75, "setInitialVelocity:", v117);
  v77 = v75;
  objc_msgSend(v77, "settlingDuration");
  objc_msgSend(v77, "setDuration:");

  objc_msgSend(v77, "setFillMode:", kCAFillModeForwards);
  objc_msgSend(v77, "setRemovedOnCompletion:", 0);
  if (v132)
  {
    v78 = objc_msgSend(v132, "layer");
    v79 = String._bridgeToObjectiveC()();
    objc_msgSend(v78, "addAnimation:forKey:", v77, v79);

  }
  objc_msgSend(v77, "settlingDuration");
  v81 = v80 * 0.65;
  sub_100019574(0, (unint64_t *)&qword_100801C70, OS_dispatch_queue_ptr);
  v82 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  v83 = v121;
  + infix(_:_:)(v9, v81);
  v129 = *(double *)(v7 + 8);
  (*(void (**)(char *, uint64_t))&v129)(v9, v131);
  v84 = COERCE_DOUBLE(swift_allocObject(&unk_100722FE0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v84 + 16) = a1;
  *(_QWORD *)(*(_QWORD *)&v84 + 24) = v57;
  *(_QWORD *)&aBlock.m21 = sub_100033CD4;
  aBlock.m22 = v84;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_1000BD6CC;
  *(_QWORD *)&aBlock.m14 = &unk_100722FF8;
  v85 = _Block_copy(&aBlock);
  m22 = aBlock.m22;
  swift_unknownObjectRetain(a1);
  v87 = v57;
  v88 = swift_release(*(_QWORD *)&m22);
  v89 = v122;
  static DispatchQoS.unspecified.getter(v88);
  *(_QWORD *)&aBlock.m11 = _swiftEmptyArrayStorage;
  v90 = sub_100033D20();
  v91 = sub_10000DF3C((uint64_t *)&unk_1007F8E00);
  v92 = sub_100033D68();
  v93 = v123;
  v94 = v124;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v91, v92, v124, v90);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v83, v89, v93, v85);
  _Block_release(v85);

  (*(void (**)(char *, uint64_t))(v127 + 8))(v93, v94);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v89, v126);
  (*(void (**)(char *, uint64_t))&v129)(v83, v131);
  v95 = (void *)objc_opt_self(UIView);
  v96 = (CGFloat *)swift_allocObject(&unk_100723030, 40, 7);
  v97 = v132;
  *((_QWORD *)v96 + 2) = v87;
  *((_QWORD *)v96 + 3) = v97;
  v98 = v130;
  v96[4] = v130;
  *(_QWORD *)&aBlock.m21 = sub_100033DE8;
  *(_QWORD *)&aBlock.m22 = v96;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_1000BD6CC;
  *(_QWORD *)&aBlock.m14 = &unk_100723048;
  v99 = _Block_copy(&aBlock);
  v100 = aBlock.m22;
  v101 = v87;
  v102 = v97;
  swift_retain(*(_QWORD *)&v98);
  swift_release(*(_QWORD *)&v100);
  v103 = COERCE_DOUBLE(swift_allocObject(&unk_100723080, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v103 + 16) = v97;
  *(_QWORD *)&aBlock.m21 = sub_100033E18;
  aBlock.m22 = v103;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_100129140;
  *(_QWORD *)&aBlock.m14 = &unk_100723098;
  v104 = _Block_copy(&aBlock);
  v105 = aBlock.m22;
  v106 = v102;
  swift_release(*(_QWORD *)&v105);
  objc_msgSend(v95, "animateWithDuration:delay:options:animations:completion:", 131201, v99, v104, 0.35, 0.0);

  _Block_release(v104);
  _Block_release(v99);
  swift_release(*(_QWORD *)&v98);
}

id sub_100033878(uint64_t a1, void *a2, double *a3)
{
  _QWORD *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  _BYTE v14[24];

  v6 = (_QWORD *)(a1 + OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks);
  result = (id)((uint64_t (*)(uint64_t, _BYTE *, _QWORD, _QWORD))swift_beginAccess)(a1 + OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks, v14, 0, 0);
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain(*v6);
    v10 = (_BYTE *)(v8 + 48);
    do
    {
      if (*v10 == 1)
      {
        v12 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v10 - 2);
        v11 = *((_QWORD *)v10 - 1);
        swift_retain(v11);
        v12(1, 1);
        swift_release(v11);
      }
      v10 += 24;
      --v9;
    }
    while (v9);
    result = (id)swift_bridgeObjectRelease(v8);
  }
  if (a2)
  {
    swift_beginAccess(a3 + 2, &v13, 0, 0);
    result = objc_msgSend(a2, "setFrame:", a3[2], a3[3], a3[4], a3[5]);
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC22SubscribePageExtension21BouncyToRectAnimation_toRect + 32) == 1)
      return objc_msgSend(a2, "setAlpha:", 0.0);
  }
  return result;
}

void sub_100033998(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;

  if (!a2)
    goto LABEL_16;
  v2 = objc_msgSend(a2, "subviews");
  v3 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v5 = (uint64_t)sub_1000329BC(v4);
  swift_bridgeObjectRelease(v4);
  v6 = objc_msgSend(objc_allocWithZone((Class)CATransition), "init");
  v7 = (void *)objc_opt_self(CAMediaTimingFunction);
  v8 = v6;
  v9 = objc_msgSend(v7, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  objc_msgSend(v8, "setTimingFunction:", v9);

  objc_msgSend(v8, "setType:");
  objc_msgSend(v8, "setDuration:", 0.2);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v21 = v5;
    else
      v21 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v10 = _CocoaArrayWrapper.endIndex.getter(v21);
    if (v10)
      goto LABEL_4;
LABEL_14:

    swift_bridgeObjectRelease_n(v5, 2);
    return;
  }
  v10 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (!v10)
    goto LABEL_14;
LABEL_4:
  if (v10 >= 1)
  {
    v11 = 0;
    v12 = v5 & 0xC000000000000001;
    v13 = v5;
    do
    {
      if (v12)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v5);
      else
        v14 = *(id *)(v5 + 8 * v11 + 32);
      v15 = v14;
      ++v11;
      v16 = objc_msgSend(v14, "layer");
      objc_msgSend(v16, "setMasksToBounds:", 1);

      v17 = objc_msgSend(v15, "layer");
      static String._unconditionallyBridgeFromObjectiveC(_:)(kCATransitionFade);
      v19 = v18;
      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "addAnimation:forKey:", v8, v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

      v5 = v13;
    }
    while (v10 != v11);
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

id sub_100033C48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BouncyToRectAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BouncyToRectAnimation()
{
  return objc_opt_self(_TtC22SubscribePageExtension21BouncyToRectAnimation);
}

uint64_t sub_100033C98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100033CA8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100033CD4()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "completeTransition:", 1);
  sub_10044C93C(2);
}

uint64_t sub_100033D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100033D18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100033D20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4F40;
  if (!qword_1007F4F40)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1007F4F40);
  }
  return result;
}

unint64_t sub_100033D68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4F50;
  if (!qword_1007F4F50)
  {
    v1 = sub_100010EF8((uint64_t *)&unk_1007F8E00);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1007F4F50);
  }
  return result;
}

uint64_t sub_100033DB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_100033DE8()
{
  uint64_t v0;

  return sub_100033878(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(double **)(v0 + 32));
}

uint64_t sub_100033DF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100033E18(int a1)
{
  uint64_t v1;

  sub_100033998(a1, *(id *)(v1 + 16));
}

id sub_100033E30()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  NSString v8;
  objc_super v10;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnMinYBySection;
  *(_QWORD *)&v0[v1] = sub_10036D70C((uint64_t)_swiftEmptyArrayStorage);
  v2 = OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins;
  v3 = v0;
  *(_QWORD *)&v0[v2] = sub_10036A090((uint64_t)_swiftEmptyArrayStorage);

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  v4 = objc_msgSendSuper2(&v10, "init");
  v5 = sub_100019574(0, (unint64_t *)&qword_1007F6090, UICollectionReusableView_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  v7 = v4;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forDecorationViewOfKind:", ObjCClassFromMetadata, v8);

  return v7;
}

id sub_100034030(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  id result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  char **v25;
  __n128 v26;
  id v27;
  void *v28;
  id v29;
  char *v30;
  char *v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  double v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  char v62[24];
  char v63[24];
  unint64_t v64;
  objc_super v65;

  v9 = type metadata accessor for IndexPath(0);
  v59 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v58 = (char *)&v52 - v13;
  v14 = (objc_class *)type metadata accessor for ShelfDisplayingFlowLayout();
  v65.receiver = v4;
  v65.super_class = v14;
  result = objc_msgSendSuper2(&v65, "layoutAttributesForElementsInRect:", a1, a2, a3, a4);
  if (!result)
    return result;
  v16 = result;
  v17 = sub_100019574(0, (unint64_t *)&qword_1007F4A20, UICollectionViewLayoutAttributes_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v64 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v51 = v18;
    else
      v51 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v51);
    v19 = (uint64_t)result;
    if (result)
      goto LABEL_4;
LABEL_28:
    swift_bridgeObjectRelease(v18);
    v50 = _swiftEmptyArrayStorage;
LABEL_29:
    v61 = v18;
    sub_100019A54((uint64_t)v50);
    return (id)v61;
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain(v18);
  if (!v19)
    goto LABEL_28;
LABEL_4:
  if (v19 >= 1)
  {
    v20 = v4;
    v21 = &v4[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnMinYBySection];
    v22 = v18 & 0xC000000000000001;
    v57 = &v4[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins];
    swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins], v63, 0, 0);
    v52 = v21;
    swift_beginAccess(v21, v62, 0, 0);
    v23 = 0;
    v24 = &selRef_activityViewController_itemForActivityType_;
    v25 = &selRef_activityViewController_itemForActivityType_;
    v55 = v18 & 0xC000000000000001;
    v56 = 0x800000010062FB00;
    v54 = v18;
    v53 = v19;
    while (1)
    {
      if (v22)
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v18);
      else
        v27 = *(id *)(v18 + 8 * v23 + 32);
      v28 = v27;
      if (objc_msgSend(v27, v24[418]))
        goto LABEL_9;
      v29 = objc_msgSend(v28, v25[416]);
      v30 = v58;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v29);

      v31 = v20;
      v32 = sub_100034AC0(0xD00000000000001FLL, v56);
      v60 = *(void (**)(char *, uint64_t))(v59 + 8);
      v60(v30, v9);
      if (v32)
      {
        v33 = v32;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
        v35 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v34 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v35 >= v34 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
        v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
        specialized Array._endMutation()(v36);

        v19 = v53;
        v18 = v54;
        v22 = v55;
      }
      v20 = v31;
      v25 = &selRef_activityViewController_itemForActivityType_;
      v37 = objc_msgSend(v28, "indexPath");
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v37);

      v38 = *(_QWORD *)v57;
      if (*(_QWORD *)(*(_QWORD *)v57 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)v57);
        v39 = sub_10036C524((uint64_t)v11);
        if ((v40 & 1) != 0)
        {
          v41 = *(_QWORD *)(v38 + 56) + 16 * v39;
          v42 = *(double *)v41;
          v43 = *(double *)(v41 + 8);
          swift_bridgeObjectRelease(v38);
          v45 = IndexPath.section.getter(v44);
          v46 = *(_QWORD *)v52;
          if (*(_QWORD *)(*(_QWORD *)v52 + 16))
          {
            v47 = sub_10036C110(v45);
            if ((v48 & 1) != 0)
            {
              v49 = v43 + *(double *)(*(_QWORD *)(v46 + 56) + 8 * v47);
              v60(v11, v9);
              objc_msgSend(v28, "frame");
              objc_msgSend(v28, "setFrame:", v42, v49);
              goto LABEL_8;
            }
          }
        }
        else
        {
          v26 = swift_bridgeObjectRelease(v38);
        }
      }
      ((void (*)(char *, uint64_t, __n128))v60)(v11, v9, v26);
LABEL_8:
      v24 = &selRef_activityViewController_itemForActivityType_;
LABEL_9:
      ++v23;

      if (v19 == v23)
      {
        swift_bridgeObjectRelease(v18);
        v50 = (_QWORD *)v64;
        goto LABEL_29;
      }
    }
  }
  __break(1u);
  return result;
}

id sub_1000344E4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Class isa;
  objc_class *v7;
  id v8;
  id v9;
  uint64_t v10;
  double v11;
  double v12;
  char v13;
  char v14;
  objc_super v16;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = (objc_class *)type metadata accessor for ShelfDisplayingFlowLayout();
  v16.receiver = v1;
  v16.super_class = v7;
  v8 = objc_msgSendSuper2(&v16, "layoutAttributesForItemAtIndexPath:", isa);

  if (v8)
  {
    v9 = objc_msgSend(v8, "indexPath");
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v9);

    v10 = sub_100034DC0((uint64_t)v5);
    v12 = v11;
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v14 & 1) == 0)
    {
      objc_msgSend(v8, "frame");
      objc_msgSend(v8, "setFrame:", *(double *)&v10, v12);
    }
  }
  return v8;
}

void *sub_10003493C(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  objc_super v19;

  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  v9 = objc_msgSendSuper2(&v19, "invalidationContextForBoundsChange:", a1, a2, a3, a4);
  v10 = objc_opt_self(UICollectionViewFlowLayoutInvalidationContext);
  v11 = (void *)swift_dynamicCastObjCClassUnconditional(v9, v10, 0, 0, 0);
  v12 = objc_msgSend(v4, "collectionView");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "bounds");
    v15 = v14;
    v17 = v16;

    if (v15 != a3)
      goto LABEL_6;
  }
  else
  {
    v17 = 0.0;
    if (a3 != 0.0)
    {
LABEL_6:
      objc_msgSend(v11, "setInvalidateFlowLayoutAttributes:", 1);
      objc_msgSend(v11, "setInvalidateFlowLayoutDelegateMetrics:", 1);
      return v11;
    }
  }
  if (v17 != a4)
    goto LABEL_6;
  return v11;
}

id sub_100034AC0(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  double v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  Class isa;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  NSString v29;
  Class v30;
  id v31;
  CGFloat v32;
  double Width;
  objc_super v35;
  __objc2_prot *v36;
  __objc2_prot *v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v4 = objc_msgSend(v2, "collectionView");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(v2, "collectionView");
  if (!v6)
    goto LABEL_11;
  v7 = v6;
  v8 = objc_msgSend(v6, "delegate");

  if (!v8)
    goto LABEL_11;
  v37 = &OBJC_PROTOCOL____TtP22SubscribePageExtension49UICollectionViewDelegateShelfDisplayingFlowLayout_;
  v9 = (void *)swift_dynamicCastObjCProtocolConditional(v8, 1, &v37);
  if (!v9)
    goto LABEL_14;
  v10 = objc_msgSend(v9, "collectionView:layout:shouldProvideBackgroundAtSection:", v5, v2, IndexPath.section.getter(v9));
  *(_QWORD *)&v11 = swift_unknownObjectRelease(v8).n128_u64[0];
  if ((v10 & 1) == 0)
    goto LABEL_11;
  v12 = objc_msgSend(v2, "collectionView", v11);
  if (!v12)
    goto LABEL_11;
  v13 = v12;
  v8 = objc_msgSend(v12, "delegate");

  if (!v8)
    goto LABEL_11;
  v36 = &OBJC_PROTOCOL____TtP22SubscribePageExtension49UICollectionViewDelegateShelfDisplayingFlowLayout_;
  v14 = (void *)swift_dynamicCastObjCProtocolConditional(v8, 1, &v36);
  if (!v14)
  {
LABEL_14:

    swift_unknownObjectRelease(v8);
    return 0;
  }
  objc_msgSend(v14, "collectionView:layout:insetForBackgroundAtSection:", v5, v2, IndexPath.section.getter(v14));
  v16 = v15;
  v18 = v17;
  swift_unknownObjectRelease(v8);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v35.receiver = v2;
  v35.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  v20 = objc_msgSendSuper2(&v35, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v20)
  {
LABEL_11:

    return 0;
  }
  objc_msgSend(v20, "frame");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRetain(a2);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v30 = IndexPath._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForDecorationViewOfKind:withIndexPath:", v29, v30);

  v38.origin.x = v22;
  v38.origin.y = v24;
  v38.size.width = v26;
  v38.size.height = v28;
  v32 = CGRectGetMinY(v38) - v16;
  objc_msgSend(v5, "bounds");
  Width = CGRectGetWidth(v39);
  v40.origin.x = v22;
  v40.origin.y = v24;
  v40.size.width = v26;
  v40.size.height = v28;
  objc_msgSend(v31, "setFrame:", 0.0, v32, Width, v18 + v16 + CGRectGetHeight(v40));
  objc_msgSend(v31, "setZIndex:", -1);

  return v31;
}

uint64_t sub_100034DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  _BYTE v15[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins, v15, 0, 0);
  v5 = *v4;
  if (!*(_QWORD *)(*v4 + 16))
    return 0;
  swift_bridgeObjectRetain(*v4);
  v6 = sub_10036C524(a1);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v6);
  swift_bridgeObjectRelease(v5);
  v10 = IndexPath.section.getter(v9);
  v11 = v2 + OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnMinYBySection;
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnMinYBySection, &v14, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v11 + 16))
    return 0;
  sub_10036C110(v10);
  if ((v12 & 1) == 0)
    return 0;
  return v8;
}

void sub_100034EC4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  unint64_t v23;
  unsigned __int8 v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  char **v36;
  uint64_t v37;
  uint64_t v38;
  NSIndexPath v39;
  char **v40;
  Class isa;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  Class v48;
  objc_class *v49;
  id v50;
  double MinY;
  uint64_t v52;
  void (*v53)(uint64_t, char *, uint64_t);
  uint64_t v54;
  unint64_t *v55;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  double v67;
  _QWORD *v68;
  double *v69;
  double *v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  unint64_t v74;
  __n128 v75;
  void (*v76)(uint64_t, uint64_t, __n128);
  double v77;
  unint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t *v96;
  CGFloat left;
  char *v98;
  uint64_t v99;
  void *v100;
  id v101;
  uint64_t v102;
  char *v103;
  __int128 v104;
  id v105;
  unint64_t *v106;
  uint64_t v107;
  char *v108;
  objc_super v109;
  _QWORD *v110;
  _BYTE v111[24];
  __objc2_prot *v112;
  char v113[24];
  char v114[32];
  CGRect v115;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v108 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v94 - v6;
  v8 = sub_10036D70C((uint64_t)_swiftEmptyArrayStorage);
  v9 = (unint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnMinYBySection];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnMinYBySection], v114, 1, 0);
  v10 = *v9;
  *v9 = v8;
  swift_bridgeObjectRelease(v10);
  v11 = sub_10036A090((uint64_t)_swiftEmptyArrayStorage);
  v12 = (unint64_t *)&v1[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension25ShelfDisplayingFlowLayout_multiColumnOrigins], v113, 1, 0);
  v13 = *v12;
  v106 = v12;
  *v12 = v11;
  v105 = objc_msgSend(v1, "collectionView", swift_bridgeObjectRelease(v13).n128_f64[0]);
  if (!v105)
    return;
  v14 = objc_msgSend(v1, "collectionView");
  if (!v14
    || (v15 = v14, v16 = objc_msgSend(v14, "delegate"), v15, !v16))
  {

    return;
  }
  v112 = &OBJC_PROTOCOL____TtP22SubscribePageExtension49UICollectionViewDelegateShelfDisplayingFlowLayout_;
  v17 = swift_dynamicCastObjCProtocolConditional(v16, 1, &v112);
  if (!v17)
    goto LABEL_57;
  v18 = (void *)v17;
  v19 = (unint64_t)objc_msgSend(v105, "numberOfSections");
  if ((v19 & 0x8000000000000000) == 0)
  {
    v20 = v19;
    if (v19)
    {
      v21 = 0;
      left = UIEdgeInsetsZero.left;
      v22 = &selRef_activityViewController_itemForActivityType_;
      v104 = xmmword_10066F870;
      v98 = v1;
      v103 = v7;
      v101 = v16;
      v100 = v18;
      v96 = v9;
      v95 = v19;
      while (v21 != v20)
      {
        if (objc_msgSend(v18, v22[399], v105, v1, v21))
        {
          v107 = (uint64_t)objc_msgSend(v18, "collectionView:layout:multiColumnCountAtSection:", v105, v1, v21);
          if (v107 >= 2)
          {
            v24 = objc_msgSend(v18, "respondsToSelector:", "collectionView:layout:insetForSectionAtIndex:");
            v25 = left;
            if ((v24 & 1) != 0)
            {
              objc_msgSend(v18, "collectionView:layout:insetForSectionAtIndex:", v105, v1, v21);
              v25 = v26;
            }
            v27 = v105;
            objc_msgSend(v18, "collectionView:layout:multiColumnMarginAt:", v105, v1, v21);
            v29 = v28;
            v30 = (unint64_t)objc_msgSend(v27, "numberOfItemsInSection:", v21);
            if ((v30 & 0x8000000000000000) != 0)
              goto LABEL_63;
            v31 = v30;
            v102 = v21;
            if (v30)
            {
              v32 = 0;
              v99 = v107 - 1;
              v33 = 0.0;
              v34 = 1.79769313e308;
              v35 = 0.0;
              v36 = &selRef_activityViewController_itemForActivityType_;
              while (v31 != v32)
              {
                v37 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
                v38 = swift_allocObject(v37, 48, 7);
                *(_OWORD *)(v38 + 16) = v104;
                *(_QWORD *)(v38 + 32) = v21;
                *(_QWORD *)(v38 + 40) = v32;
                IndexPath.init(arrayLiteral:)();
                if ((objc_msgSend(v18, "respondsToSelector:", v36[405]) & 1) != 0)
                {
                  swift_unknownObjectRetain(v16);
                  v39.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
                  v40 = v36;
                  isa = v39.super.isa;
                  objc_msgSend(v18, v40[405], v105, v1, v39.super.isa);
                  v43 = v42;
                  v45 = v44;
                  swift_unknownObjectRelease(v16);

                  v46 = IndexPath.item.getter();
                  v47 = IndexPath.item.getter();
                  if (!(v46 / v107))
                  {
                    v48 = IndexPath._bridgeToObjectiveC()().super.isa;
                    v49 = (objc_class *)type metadata accessor for ShelfDisplayingFlowLayout();
                    v109.receiver = v1;
                    v109.super_class = v49;
                    v50 = objc_msgSendSuper2(&v109, "layoutAttributesForItemAtIndexPath:", v48);

                    if (v50)
                    {
                      objc_msgSend(v50, "frame");
                      MinY = CGRectGetMinY(v115);

                      if (v34 >= MinY)
                        v34 = MinY;
                    }
                  }
                  v52 = v3;
                  v53 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 16);
                  v54 = (uint64_t)v108;
                  v3 = v2;
                  v53((uint64_t)v108, v103, v2);
                  v55 = v106;
                  swift_beginAccess(v106, v111, 33, 0);
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v55);
                  v110 = (_QWORD *)*v55;
                  v57 = v110;
                  *v55 = 0x8000000000000000;
                  v59 = sub_10036C524(v54);
                  v60 = v57[2];
                  v61 = (v58 & 1) == 0;
                  v62 = v60 + v61;
                  if (__OFADD__(v60, v61))
                    goto LABEL_60;
                  v63 = v58;
                  if (v57[3] >= v62)
                  {
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      sub_10010D740();
                  }
                  else
                  {
                    sub_100108440(v62, isUniquelyReferenced_nonNull_native);
                    v64 = sub_10036C524((uint64_t)v108);
                    if ((v63 & 1) != (v65 & 1))
                      goto LABEL_67;
                    v59 = v64;
                  }
                  v66 = v47 % v107;
                  v67 = v25 + (v29 + v43) * (double)v66;
                  v68 = v110;
                  if ((v63 & 1) != 0)
                  {
                    v69 = (double *)(v110[7] + 16 * v59);
                    *v69 = v67;
                    v69[1] = v35;
                    v2 = v3;
                  }
                  else
                  {
                    v110[(v59 >> 6) + 8] |= 1 << v59;
                    v2 = v3;
                    v53(v68[6] + *(_QWORD *)(v52 + 72) * v59, v108, v3);
                    v70 = (double *)(v68[7] + 16 * v59);
                    *v70 = v67;
                    v70[1] = v35;
                    v71 = v68[2];
                    v72 = __OFADD__(v71, 1);
                    v73 = v71 + 1;
                    if (v72)
                      goto LABEL_61;
                    v68[2] = v73;
                  }
                  v74 = *v106;
                  *v106 = (unint64_t)v68;
                  v75 = swift_bridgeObjectRelease(v74);
                  v3 = v52;
                  v76 = *(void (**)(uint64_t, uint64_t, __n128))(v52 + 8);
                  v76((uint64_t)v108, v2, v75);
                  swift_endAccess(v111);
                  if (v33 > v35 + v45)
                    v77 = v33;
                  else
                    v77 = v35 + v45;
                  v7 = v103;
                  ((void (*)(char *, uint64_t))v76)(v103, v2);
                  if (v66 == v99)
                    v33 = 0.0;
                  else
                    v33 = v77;
                  if (v66 == v99)
                    v35 = v77;
                  v1 = v98;
                  v16 = v101;
                  v18 = v100;
                  v21 = v102;
                  v36 = &selRef_activityViewController_itemForActivityType_;
                }
                else
                {
                  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
                }
                if (v31 == ++v32)
                  goto LABEL_48;
              }
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
              break;
            }
            v34 = 1.79769313e308;
LABEL_48:
            v78 = v96;
            swift_beginAccess(v96, v111, 33, 0);
            v79 = swift_isUniquelyReferenced_nonNull_native(*v78);
            v80 = v21;
            v110 = (_QWORD *)*v78;
            v81 = v110;
            *v78 = 0x8000000000000000;
            v83 = sub_10036C110(v80);
            v84 = v81[2];
            v85 = (v82 & 1) == 0;
            v86 = v84 + v85;
            if (__OFADD__(v84, v85))
              goto LABEL_64;
            v87 = v82;
            if (v81[3] >= v86)
            {
              v22 = &selRef_activityViewController_itemForActivityType_;
              if ((v79 & 1) == 0)
                sub_10010D5B4();
            }
            else
            {
              sub_100108198(v86, v79);
              v88 = sub_10036C110(v102);
              v22 = &selRef_activityViewController_itemForActivityType_;
              if ((v87 & 1) != (v89 & 1))
                goto LABEL_68;
              v83 = v88;
            }
            v21 = v102;
            v90 = v110;
            if ((v87 & 1) != 0)
            {
              *(double *)(v110[7] + 8 * v83) = v34;
            }
            else
            {
              v110[(v83 >> 6) + 8] |= 1 << v83;
              v91 = 8 * v83;
              *(_QWORD *)(v90[6] + v91) = v21;
              *(double *)(v90[7] + v91) = v34;
              v92 = v90[2];
              v72 = __OFADD__(v92, 1);
              v93 = v92 + 1;
              if (v72)
                goto LABEL_65;
              v90[2] = v93;
            }
            v23 = *v78;
            *v78 = (unint64_t)v90;
            swift_bridgeObjectRelease(v23);
            swift_endAccess(v111);
            v16 = v101;
            v18 = v100;
            v20 = v95;
          }
        }
        if (++v21 == v20)
          goto LABEL_57;
      }
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_57:

    swift_unknownObjectRelease(v16);
    return;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v3);
  __break(1u);
LABEL_68:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

id sub_10003570C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfDisplayingFlowLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfDisplayingFlowLayout()
{
  return objc_opt_self(_TtC22SubscribePageExtension25ShelfDisplayingFlowLayout);
}

uint64_t sub_100035794()
{
  return sub_10000E99C(&qword_1007F5000, type metadata accessor for ScreenshotShelfCollectionViewCell, (uint64_t)&unk_100670830);
}

double sub_1000357C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  double v13;
  double v14;
  double v15;
  void (*v16)(_QWORD *, uint64_t);
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t v22;
  uint64_t v23;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Screenshots(0);
  v5 = sub_10000E99C(&qword_1007F5008, (uint64_t (*)(uint64_t))&type metadata accessor for Screenshots, (uint64_t)&protocol conformance descriptor for Screenshots);
  v6 = ItemLayoutContext.typedModel<A>(as:)(&v23, v4, v4, v5);
  v7 = v23;
  if (!v23)
    return 0.0;
  v8 = Screenshots.artwork.getter(v6);
  v10 = Screenshots.mediaPlatform.getter(v9);
  v11 = (char *)sub_1000826AC();
  KeyPath = swift_getKeyPath(&unk_100670880);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  v13 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v15 = v14;
  v16 = *(void (**)(_QWORD *, uint64_t))(v1 + 8);
  v16(v3, v0);
  v17 = swift_getKeyPath(&unk_100670880);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v17);
  v18 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v16(v3, v0);
  sub_1002A2978(v8, v10, v11, 0.0, 0.0, v13, v15, v18);
  v20 = v19;
  swift_bridgeObjectRelease(v8);
  swift_release(v10);
  swift_unknownObjectRelease(v11);
  swift_release(v7);
  return v20;
}

void sub_100035994()
{
  qword_1007F5010 = 0x4020000000000000;
}

id sub_1000359A4()
{
  uint64_t v0;
  _QWORD *v1;
  id result;
  _QWORD v3[5];

  v0 = type metadata accessor for Feature.iOS(0);
  v3[3] = v0;
  v3[4] = sub_1000365B4();
  v1 = sub_1000117C0(v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Feature.iOS.review_summarization(_:), v0);
  LOBYTE(v0) = isFeatureEnabled(_:)(v3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v3);
  if ((v0 & 1) != 0)
  {
    result = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  else
  {
    sub_1000117FC();
    result = (id)static UIColor.reviewBackground.getter();
  }
  qword_1007F5018 = (uint64_t)result;
  return result;
}

id sub_100035A54(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double left;
  double bottom;
  double right;
  id v19;
  objc_super v21;

  v9 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_itemLayoutContext];
  v10 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_editorsChoiceReviewView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView] = 0;
  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for GenericProductReviewCollectionViewCell(0);
  v11 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v12 = objc_allocWithZone((Class)UIView);
  v13 = v11;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = objc_msgSend(v14, "layer");
  if (qword_1007F0BB0 != -1)
    swift_once(&qword_1007F0BB0, sub_100035994);
  objc_msgSend(v15, "setCornerRadius:", *(double *)&qword_1007F5010);

  if (qword_1007F0BB8 != -1)
    swift_once(&qword_1007F0BB8, sub_1000359A4);
  objc_msgSend(v14, "setBackgroundColor:", qword_1007F5018);
  objc_msgSend(v13, "setBackgroundView:", v14);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  objc_msgSend(v13, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v19 = objc_msgSend(v13, "contentView");
  objc_msgSend(v19, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  return v13;
}

void sub_100035D60()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for GenericProductReviewCollectionViewCell(0);
  objc_msgSendSuper2(&v16, "layoutSubviews");
  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");

  v2 = objc_msgSend(v0, "backgroundView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v3, "setFrame:");

  }
  v4 = OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView;
  v5 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView];
  if (v5)
  {
    if ((objc_msgSend(v5, "isHidden") & 1) == 0)
    {
      v6 = *(void **)&v0[v4];
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v0, "bounds");
        objc_msgSend(v7, "setFrame:");

      }
    }
  }
  v8 = OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_editorsChoiceReviewView;
  v9 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_editorsChoiceReviewView];
  if (v9)
  {
    if ((objc_msgSend(v9, "isHidden") & 1) == 0)
    {
      v10 = *(void **)&v0[v8];
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v0, "bounds");
        objc_msgSend(v11, "setFrame:");

      }
    }
  }
  v12 = OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView;
  v13 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView];
  if (v13 && (objc_msgSend(v13, "isHidden") & 1) == 0)
  {
    v14 = *(void **)&v0[v12];
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v0, "bounds");
      objc_msgSend(v15, "setFrame:");

    }
  }
}

id sub_100035F38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id result;
  objc_super v21;

  v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for GenericProductReviewCollectionViewCell(0);
  objc_msgSendSuper2(&v21, "prepareForReuse");
  v2 = OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView;
  v3 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView];
  if (v3)
  {
    objc_msgSend(v3, "setHidden:", 1);
    v4 = *(char **)&v1[v2];
    if (v4)
    {
      v5 = (uint64_t *)&v4[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler];
      v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler];
      v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreReviewTapHandler + 8];
      *v5 = 0;
      v5[1] = 0;
      v8 = v4;
      sub_100019310(v6, v7);
      v9 = (uint64_t *)&v8[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler];
      v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler];
      v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_moreResponseTapHandler + 8];
      *v9 = 0;
      v9[1] = 0;
      sub_100019310(v10, v11);
      v12 = *v5;
      v13 = v5[1];
      *v5 = 0;
      v5[1] = 0;
      sub_100019310(v12, v13);
      v14 = *v9;
      v15 = v9[1];
      *v9 = 0;
      v9[1] = 0;
      sub_100019310(v14, v15);

    }
  }
  v16 = OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_editorsChoiceReviewView;
  v17 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_editorsChoiceReviewView];
  if (v17)
  {
    objc_msgSend(v17, "setHidden:", 1);
    v18 = *(void **)&v1[v16];
    if (v18)
    {
      v19 = v18;
      sub_1003EB5CC(0, 0);

    }
  }
  result = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView];
  if (result)
    return objc_msgSend(result, "setHidden:", 1);
  return result;
}

void sub_1000360A0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView);
  if (v1)
  {
    v2 = v1;
    if (!objc_msgSend(v2, "isHidden"))
    {
      v4 = (void *)objc_opt_self(UIView);
      v5 = swift_allocObject(&unk_100723190, 24, 7);
      *(_QWORD *)(v5 + 16) = v2;
      aBlock[4] = sub_1000365AC;
      v11 = v5;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BD6CC;
      aBlock[3] = &unk_1007231A8;
      v6 = _Block_copy(aBlock);
      v7 = v11;
      v8 = v2;
      swift_release(v7);
      objc_msgSend(v4, "animateWithDuration:animations:", v6, 0.5);
      _Block_release(v6);

      return;
    }

  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView);
  if (v3)
  {
    v9 = v3;
    if (!objc_msgSend(v9, "isHidden"))
      objc_msgSend(v9, "setClipsToBounds:", 0);

  }
}

id sub_1000361E8()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t *v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView);
  if (v1)
  {
    v2 = v1;
    if (!objc_msgSend(v2, "isHidden"))
    {
      v5 = &OBJC_IVAR____TtC22SubscribePageExtension17ProductReviewView_cardContentView;
LABEL_10:
      v4 = *(id *)&v2[*v5];

      return v4;
    }

  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView);
  if (!v3)
    return 0;
  v2 = v3;
  if (!objc_msgSend(v2, "isHidden"))
  {
    v5 = &OBJC_IVAR____TtC22SubscribePageExtension17ReviewSummaryView_previewContainer;
    goto LABEL_10;
  }

  return 0;
}

id sub_100036298()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenericProductReviewCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100036324()
{
  return type metadata accessor for GenericProductReviewCollectionViewCell(0);
}

uint64_t type metadata accessor for GenericProductReviewCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F5060;
  if (!qword_1007F5060)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GenericProductReviewCollectionViewCell);
  return result;
}

void sub_100036368(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    v4[3] = "\b";
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_1000363E8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_reviewSummaryView);
  if (v1)
  {
    v2 = v1;
    if ((objc_msgSend(v2, "isHidden") & 1) == 0)
      objc_msgSend(v2, "setClipsToBounds:", 1);

  }
}

void sub_100036450()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD aBlock[5];
  uint64_t v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38GenericProductReviewCollectionViewCell_userReviewView);
  if (v1)
  {
    v7 = v1;
    if (objc_msgSend(v7, "isHidden"))
    {

    }
    else
    {
      v2 = (void *)objc_opt_self(UIView);
      v3 = swift_allocObject(&unk_100723140, 24, 7);
      *(_QWORD *)(v3 + 16) = v7;
      aBlock[4] = sub_10003658C;
      v9 = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BD6CC;
      aBlock[3] = &unk_100723158;
      v4 = _Block_copy(aBlock);
      v5 = v9;
      v6 = v7;
      swift_release(v5);
      objc_msgSend(v2, "animateWithDuration:animations:", v4, 0.4);
      _Block_release(v4);

    }
  }
}

uint64_t sub_100036568()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10003658C()
{
  uint64_t v0;

  return sub_100293300(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100036594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000365A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1000365AC()
{
  uint64_t v0;

  return sub_1002932F8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1000365B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F52F0;
  if (!qword_1007F52F0)
  {
    v1 = type metadata accessor for Feature.iOS(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.iOS, v1);
    atomic_store(result, (unint64_t *)&qword_1007F52F0);
  }
  return result;
}

id sub_100036660()
{
  void *v0;

  return objc_msgSend(v0, "setDelegate:", v0);
}

uint64_t sub_100036674(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[2];
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v73._countAndFlagsBits = a1;
  v73._object = a2;
  v62 = sub_10000DF3C(&qword_1007F7900);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  v5 = __chkstk_darwin(v4);
  v72 = (char **)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = type metadata accessor for FlowOrigin(0, v5);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v71 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowAnimationBehavior(0);
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  __chkstk_darwin(v8);
  v69 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for FlowPresentationContext(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetrics(0, v11);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FlowPage(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v23);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v59 - v27;
  v75 = type metadata accessor for URL(0);
  v29 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension25StoreNavigationController_objectGraph);
  if (result)
  {
    *(_QWORD *)&v77 = 0;
    *((_QWORD *)&v77 + 1) = 0xE000000000000000;
    v74 = result;
    swift_retain(result);
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease(*((_QWORD *)&v77 + 1));
    *(_QWORD *)&v77 = 0xD00000000000001BLL;
    *((_QWORD *)&v77 + 1) = 0x800000010062FF10;
    String.append(_:)(v73);
    v33 = *((_QWORD *)&v77 + 1);
    URL.init(string:)(v77, *((_QWORD *)&v77 + 1));
    v34 = swift_bridgeObjectRelease(v33);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48))(v28, 1, v75, v34);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v35 = v75;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v28, v75);
      v79 = 0;
      v77 = 0u;
      v78 = 0u;
      v36 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
      v59 = v22;
      v36(v22, enum case for FlowPage.product(_:), v19);
      v37 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
      v73._object = v31;
      v37(v25, v31, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v35);
      v38 = type metadata accessor for ReferrerData(0);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v18, 1, 1, v38);
      memset(v76, 0, sizeof(v76));
      static ActionMetrics.notInstrumented.getter(v39);
      v40 = v65;
      (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v65, enum case for FlowPresentationContext.infer(_:), v64);
      v41 = v69;
      (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v69, enum case for FlowAnimationBehavior.infer(_:), v67);
      v42 = v71;
      v43 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v68 + 104))(v71, enum case for FlowOrigin.inapp(_:), v70);
      v44 = static FlowActionPresentation.stackPush.getter(v43);
      v46 = v45;
      v47 = type metadata accessor for FlowAction(0);
      swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
      v48 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(&v77, 0, 0, 0, v59, v25, 0, 0, v18, v76, v14, v40, v41, v42, 0, v44, v46);
      v49 = sub_10000DF3C(&qword_1007F78F0);
      v50 = v72;
      BaseObjectGraph.optional<A>(_:)(v72, v49, v49);
      v51 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v51 + 48))(v50, 1, v49) == 1)
      {
        (*(void (**)(void *, uint64_t))(v29 + 8))(v73._object, v75);
        swift_release(v74);
        swift_release(v48);
        return sub_100037038((uint64_t)v50);
      }
      else
      {
        *((_QWORD *)&v78 + 1) = v47;
        v79 = sub_10001F65C((unint64_t *)&qword_1007F5160, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
        *(_QWORD *)&v77 = v48;
        v52 = v60;
        v53 = v61;
        v54 = v62;
        (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v62);
        v55 = swift_retain(v48);
        v56 = v74;
        v57 = ActionDispatcher.perform(_:withMetrics:asPartOf:)(&v77, v52, v74, v49, v55);
        swift_release(v48);
        swift_release(v56);
        v58 = swift_release(v57);
        (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v52, v54, v58);
        (*(void (**)(void *, uint64_t))(v29 + 8))(v73._object, v75);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v77);
        return (*(uint64_t (**)(_QWORD *, uint64_t))(v51 + 8))(v50, v49);
      }
    }
  }
  return result;
}

id sub_100036D38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StoreNavigationController()
{
  return objc_opt_self(_TtC22SubscribePageExtension25StoreNavigationController);
}

uint64_t sub_100036D98()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x68))();
}

id sub_100036DD0(uint64_t a1, char a2)
{
  id *v2;

  return objc_msgSend(*v2, "pushViewController:animated:", a1, a2 & 1);
}

id sub_100036DEC(char a1)
{
  id *v1;

  return objc_msgSend(*v1, "popViewControllerAnimated:", a1 & 1);
}

id sub_100036E18(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char v9;
  id result;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = &v2[OBJC_IVAR____TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins];
  v5 = *(double *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins];
  v6 = *(double *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
                    + 8];
  v7 = *(double *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
                    + 16];
  v8 = *(double *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
                    + 24];
  v9 = v2[OBJC_IVAR____TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange__cachedLayoutMargins
        + 32];
  result = objc_msgSend(v2, "layoutMargins");
  if ((v9 & 1) != 0
    || (v5 == v11 ? (v15 = v6 == v12) : (v15 = 0),
        v15 ? (v16 = v7 == v13) : (v16 = 0),
        v16 ? (v17 = v8 == v14) : (v17 = 0),
        !v17))
  {
    objc_msgSend(v2, "layoutMargins");
    *(_QWORD *)v4 = v18;
    *((_QWORD *)v4 + 1) = v19;
    *((_QWORD *)v4 + 2) = v20;
    *((_QWORD *)v4 + 3) = v21;
    v4[32] = 0;
    v22.receiver = v2;
    v22.super_class = ObjectType;
    return objc_msgSendSuper2(&v22, "layoutMarginsDidChange");
  }
  return result;
}

uint64_t type metadata accessor for NavigationBarManualCheckLayoutMarginsChange()
{
  return objc_opt_self(_TtC22SubscribePageExtension43NavigationBarManualCheckLayoutMarginsChange);
}

uint64_t sub_10003700C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C((unint64_t *)&unk_1007F5130, a2, (uint64_t (*)(uint64_t))type metadata accessor for StoreNavigationController, (uint64_t)"M(\v");
}

uint64_t sub_100037038(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100037078(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v7 = v5 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_15;
LABEL_11:
      v10 = a2();
      v11 = swift_release(v8);
      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
        goto LABEL_20;
    }
    v8 = *(_QWORD *)(a1 + 8 * v5);
    swift_retain(v8);
    v9 = v5 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_11;
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

void sub_1000371F8()
{
  qword_1007F5170 = 0x4028000000000000;
}

char *sub_100037208(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  objc_super v33;
  _QWORD v34[12];
  __int128 v35;
  _OWORD v36[3];

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayKind];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  swift_weakInit(&v4[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayReusePool], 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks] = _swiftEmptyArrayStorage;
  v12 = objc_allocWithZone((Class)type metadata accessor for MultiAppFallbackIconView(0));
  v13 = v4;
  v14 = objc_msgSend(v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_multiAppIconView] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_gradientView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiAppFallbackGradientView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v34[0] = sub_100158F34;
  v34[1] = 0;
  v34[2] = sub_10055BABC;
  v34[3] = 0;
  v34[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v34[5] = 0;
  v34[6] = sub_100158F34;
  v34[7] = 0;
  v34[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v34[9] = 0;
  v34[10] = sub_10055BAC4;
  v34[11] = 0;
  if (qword_1007F30D8 != -1)
    swift_once(&qword_1007F30D8, sub_100562FC4);
  v35 = xmmword_100856F70;
  v36[0] = *(_OWORD *)&qword_100856F80;
  *(_OWORD *)((char *)v36 + 9) = *(_OWORD *)((char *)&qword_100856F88 + 1);
  v15 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView] = sub_10056339C((uint64_t)v34, &v35);
  v16 = type metadata accessor for InfoLayerOverlayContainerView();
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");

  v33.receiver = v13;
  v33.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_gradientView;
  v19 = *(void **)&v17[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_gradientView];
  v20 = v17;
  v21 = v19;
  objc_msgSend(v21, "frame");
  objc_msgSend(v21, "setFrame:");

  v22 = *(void **)&v17[v18];
  objc_msgSend(v22, "setClipsToBounds:", 1);
  objc_msgSend(v22, "_setContinuousCornerRadius:", 14.0);
  objc_msgSend(v20, "_setContinuousCornerRadius:", 14.0);
  v23 = objc_msgSend(v20, "contentView");
  objc_msgSend(v23, "addSubview:", v22);

  v24 = objc_msgSend(v20, "contentView");
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_multiAppIconView]);

  v25 = objc_msgSend(v20, "contentView");
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView]);

  v26 = objc_msgSend(v20, "contentView");
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer]);

  v27 = objc_msgSend(v20, "contentView");
  objc_msgSend(v27, "setClipsToBounds:", 1);

  sub_10003B02C();
  v28 = v20;
  v29 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v30 = UIView.registerForTraitChanges<A>(_:handler:)(v29, sub_10003AF50, 0, ObjectType);
  swift_unknownObjectRelease(v30);

  swift_bridgeObjectRelease(v29);
  v31 = v28;
  sub_1004F8578();

  return v31;
}

id sub_100037608()
{
  uint64_t v0;
  int v1;
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning);
  *(_BYTE *)(*(_QWORD *)(v0
                       + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView)
           + qword_100818390) = v1;
  sub_10056418C();
  v2 = *(_BYTE **)(v0
                 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer);
  v3 = &v2[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isTransitioning];
  v2[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isTransitioning] = v1;
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_sizeCategory] == 4)
    v4 = v1 ^ 1u;
  else
    v4 = 0;
  objc_msgSend(v2, "setHidden:", v4);
  v2[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isLayoutRequired] = (*v3 & 1) == 0;
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_1000376CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning);
}

id sub_1000376E0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning) = a1;
  return sub_100037608();
}

__n128 sub_1000376F4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1
                + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets
                + 32);
  result = *(__n128 *)(v1
                     + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets);
  v4 = *(_OWORD *)(v1
                 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets
                 + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

id sub_100037718(uint64_t a1)
{
  _BYTE *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  char v7;
  id result;
  BOOL v9;
  BOOL v10;
  double v11[5];
  _BYTE v12[40];

  v3 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets];
  v4 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 8];
  v6 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets
                    + 16];
  v5 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets
                    + 24];
  v7 = v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 32];
  sub_10003AF9C(a1, (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets]);
  result = (id)sub_10003AF9C(a1, (uint64_t)v12);
  if ((v12[32] & 1) != 0)
  {
    if ((v7 & 1) != 0)
      return result;
    return objc_msgSend(v1, "setNeedsLayout");
  }
  result = (id)sub_10003AF9C(a1, (uint64_t)v11);
  if ((v7 & 1) != 0)
    return objc_msgSend(v1, "setNeedsLayout");
  v9 = v11[0] == v3 && v11[1] == v4;
  v10 = v9 && v11[2] == v6;
  if (!v10 || v11[3] != v5)
    return objc_msgSend(v1, "setNeedsLayout");
  return result;
}

void sub_1000377D4()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  id v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  _OWORD v25[3];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = v1;
  v3 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v4 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v4 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  sub_10048C8E4(v1, v0[*v4], (uint64_t)v25);
  v5 = v26;

  v6 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView];
  v7 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer];
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayKind];
  v9 = v0[v3];
  v10 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  if (!v9)
    v10 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v11 = v0[v10];
  v12 = v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayKind + 8];
  v13 = v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
  v27 = v25[0];
  v28 = v25[1];
  v29 = v25[2];
  v30 = v5;
  v31 = v6;
  v32 = v7;
  v33 = v8;
  v34 = v12;
  v35 = v11;
  v36 = v13;
  v37 = v9;
  v38 = 0;
  v14 = v6;
  v15 = v7;
  objc_msgSend(v0, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = objc_msgSend(v0, "traitCollection");
  sub_1004FBAA8((uint64_t)v24, v17, v19, v21, v23);

}

void sub_10003795C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  char v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double MinX;
  double v27;
  double v28;
  double v29;
  CGFloat x;
  CGFloat y;
  CGFloat v32;
  CGFloat v33;
  double v34;
  id v35;
  double v36;
  double v37;
  double v38;
  uint64_t *v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double MidX;
  double MinY;
  double Width;
  double Height;
  uint64_t v56;
  uint64_t *v57;
  char v58;
  id v59;
  double v60;
  double v61;
  uint64_t *v62;
  char v63;
  id v64;
  double v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  double v71;
  double v72;
  double v73;
  id v74;
  id v75;
  double v76;
  double v77;
  double v78;
  double v79;
  _BYTE v81[24];
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v2);
  v4 = &v81[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v81[-v7 - 8];
  v9 = *(char **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_multiAppIconView];
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC22SubscribePageExtension24MultiAppFallbackIconView_configuration];
  if (v10)
  {
    v11 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
    v12 = *(_QWORD *)(v10 + 24);
    if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
      v13 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v13 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    if (v0[*v13] == 6
      && (v14 = objc_msgSend(v0, "traitCollection", v6),
          v15 = UITraitCollection.prefersAccessibilityLayouts.getter(v14),
          v14,
          (v15 & 1) == 0))
    {
      objc_msgSend(v1, "bounds");
      sub_100037F28(v12, v46, v47);
      v49 = v48;
      v51 = v50;
      objc_msgSend(v1, "bounds");
      MidX = CGRectGetMidX(v88);
      objc_msgSend(v1, "bounds");
      MinY = CGRectGetMinY(v89);
      objc_msgSend(v1, "bounds");
      Width = CGRectGetWidth(v90);
      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v91);
      v56 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid], v81, 0, 0);
      sub_10003AFE4(v56, (uint64_t)v8);
      if (v1[v11])
        v57 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v57 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v58 = v1[*v57];
      v59 = objc_msgSend(v1, "traitCollection");
      sub_1004FB140((uint64_t)v8, v58, v59);
      v61 = v60;

      sub_100011088((uint64_t)v8, &qword_1008027B0);
      sub_10003AFE4(v56, (uint64_t)v4);
      if (v1[v11])
        v62 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v62 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v63 = v1[*v62];
      v64 = objc_msgSend(v1, "traitCollection");
      sub_1004FB140((uint64_t)v4, v63, v64);
      v66 = v65;

      sub_100011088((uint64_t)v4, &qword_1008027B0);
      v67 = CGRect.subtracting(insets:)(v49, v61 * 0.5, v51, v66, MidX, MinY, Width * 0.5, Height);
      v69 = v68;
      v71 = v70;
      v73 = v72;
      v74 = objc_msgSend(v9, "traitCollection");
      sub_1002A5220((uint64_t)v74, v71, v73);

      v92.origin.x = v67;
      v92.origin.y = v69;
      v92.size.width = v71;
      v92.size.height = v73;
      CGRectGetMidX(v92);
      v93.origin.x = v67;
      v93.origin.y = v69;
      v93.size.width = v71;
      v93.size.height = v73;
      CGRectGetMinY(v93);
      v75 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v1, "bounds");
      v45 = CGRect.withLayoutDirection(using:relativeTo:)(v75, v76);
      v19 = v77;
      v36 = v78;
      v38 = v79;

    }
    else
    {
      objc_msgSend(v1, "bounds");
      sub_100037F28(v12, v16, v17);
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;
      objc_msgSend(v1, "bounds");
      MinX = CGRectGetMinX(v82);
      objc_msgSend(v1, "bounds");
      v27 = CGRectGetMinY(v83);
      objc_msgSend(v1, "bounds");
      v28 = CGRectGetWidth(v84);
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView], "frame");
      v29 = CGRectGetMinY(v85);
      v86.origin.x = CGRect.subtracting(insets:)(v19, v21, v23, v25, MinX, v27, v28, v29);
      x = v86.origin.x;
      y = v86.origin.y;
      v32 = v86.size.width;
      v33 = v86.size.height;
      v34 = CGRectGetHeight(v86);
      v35 = objc_msgSend(v9, "traitCollection");
      v36 = sub_1002A5220((uint64_t)v35, 1.79769313e308, v34);
      v38 = v37;

      if (v1[v11])
        v39 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v39 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v40 = x;
      v41 = y;
      v42 = v32;
      v43 = v33;
      if (v1[*v39] == 4)
      {
        v19 = CGRectGetMinY(*(CGRect *)&v40);
      }
      else
      {
        v44 = CGRectGetMidY(*(CGRect *)&v40) + v38 * -0.5;
        if (v44 > v19)
          v19 = v44;
      }
      objc_msgSend(v1, "bounds");
      v45 = floor(CGRectGetMidX(v87) + v36 * -0.5);
    }
    objc_msgSend(v9, "setFrame:", v45, v19, v36, v38);
  }
}

uint64_t sub_100037F28(uint64_t a1, double a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  id v25;
  char v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  double v30;
  double v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  int v41;
  double v42;
  uint64_t *v43;
  int v44;
  double v45;
  id v46;
  char v47;
  uint64_t v48;
  char *v49;
  id v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t *v54;
  double v55;
  char v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char v63;
  id v64;
  unint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  char v71;
  double v72;
  double v73;
  uint64_t *v74;
  char v75;
  uint64_t v77;
  uint64_t *v78;
  char v79;
  id v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  _BYTE v85[24];

  v4 = v3;
  v8 = sub_10000DF3C(&qword_1008027B0);
  __chkstk_darwin(v8);
  v84 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v83 = (char *)&v82 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v82 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v82 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - v19;
  *(_QWORD *)&v22 = __chkstk_darwin(v21).n128_u64[0];
  v24 = (char *)&v82 - v23;
  v25 = objc_msgSend(v3, "traitCollection", v22);
  v26 = UITraitCollection.prefersAccessibilityLayouts.getter(v25);

  v29 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v30 = 0.0;
  if (v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1
    && (v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets + 32] & 1) == 0)
  {
    v31 = *(double *)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_parentSafeAreaInsets];
    v32 = objc_msgSend(v4, "traitCollection");
    v33 = objc_msgSend(v32, "userInterfaceIdiom");

    if (!v33)
    {
      v34 = objc_msgSend(v4, "traitCollection");
      v35 = UITraitCollection.isSizeClassCompact.getter(v34);

      v28.n128_f64[0] = fmax(v31, 0.0);
      if ((v35 & 1) != 0)
        v30 = v28.n128_f64[0];
      else
        v30 = 0.0;
    }
  }
  if (a1 == 1)
  {
    v36 = v4[v29];
    if (v4[v29])
      v40 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v40 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v41 = v4[*v40];
    if (v41 == 4)
    {
      if (qword_1007F0C18 != -1)
        swift_once(&qword_1007F0C18, sub_10004A480);
      v42 = (a2 - *(double *)&xmmword_100850860) * 0.5;
      goto LABEL_28;
    }
    if (!((v41 != 6) | v26 & 1))
    {
      v61 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid], v85, 0, 0);
      sub_10003AFE4(v61, (uint64_t)v24);
      if (v36)
        v62 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v62 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v55 = a3 * 0.17;
      v63 = v4[*v62];
      v64 = objc_msgSend(v4, "traitCollection");
      sub_1004FB140((uint64_t)v24, v63, v64);
      v59 = v65;

      v60 = (uint64_t)v24;
      goto LABEL_64;
    }
    goto LABEL_43;
  }
  if (a1 == 2)
  {
    v36 = v4[v29];
    if (v4[v29])
      v43 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v43 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v44 = v4[*v43];
    if (v44 == 4)
    {
      *(double *)&v39 = 38.0;
      goto LABEL_27;
    }
    if (!((v44 != 6) | v26 & 1))
    {
      v77 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid], v85, 0, 0);
      sub_10003AFE4(v77, (uint64_t)v20);
      if (v36)
        v78 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v78 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v55 = a3 * 0.15;
      v79 = v4[*v78];
      v80 = objc_msgSend(v4, "traitCollection");
      sub_1004FB140((uint64_t)v20, v79, v80);
      v59 = v81;

      v60 = (uint64_t)v20;
      goto LABEL_64;
    }
LABEL_43:
    if (!v36)
      goto LABEL_44;
    goto LABEL_30;
  }
  if (a1 != 3)
  {
    if ((v4[v29] & 1) == 0)
    {
LABEL_44:
      v66 = objc_msgSend(v4, "traitCollection");
      v67 = UITraitCollection.prefersRightToLeftLayouts.getter();

      v68 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      v69 = &v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      if ((v67 & 1) != 0)
      {
        swift_beginAccess(v69, v85, 0, 0);
        v14 = v83;
        sub_10003AFE4(v68, (uint64_t)v83);
        if (v4[v29])
          v70 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
        else
          v70 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
        v71 = v4[*v70];
        v50 = objc_msgSend(v4, "traitCollection");
        sub_1004FB140((uint64_t)v14, v71, v50);
        v52 = v72;
        goto LABEL_55;
      }
      swift_beginAccess(v69, v85, 0, 0);
      v14 = v84;
      sub_10003AFE4(v68, (uint64_t)v84);
      if (v4[v29])
        v74 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v74 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v75 = v4[*v74];
      v50 = objc_msgSend(v4, "traitCollection");
      sub_1004FB140((uint64_t)v14, v75, v50);
      goto LABEL_54;
    }
LABEL_30:
    v46 = objc_msgSend(v4, "traitCollection");
    v47 = UITraitCollection.prefersRightToLeftLayouts.getter();

    v48 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
    v49 = &v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
    if ((v47 & 1) != 0)
    {
      swift_beginAccess(v49, v85, 0, 0);
      sub_10003AFE4(v48, (uint64_t)v14);
      v50 = objc_msgSend(v4, "traitCollection");
      sub_1004FAFA8((uint64_t)v14, v50);
      v52 = v51;
LABEL_55:

      sub_100011088((uint64_t)v14, &qword_1008027B0);
      v45 = v30 + v52;
      goto LABEL_56;
    }
    swift_beginAccess(v49, v85, 0, 0);
    sub_10003AFE4(v48, (uint64_t)v14);
    v50 = objc_msgSend(v4, "traitCollection");
    sub_1004FAFA8((uint64_t)v14, v50);
LABEL_54:
    v52 = v73;
    goto LABEL_55;
  }
  v36 = v4[v29];
  if (v4[v29])
    v37 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v37 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v38 = v4[*v37];
  if (v38 != 4)
  {
    if (!((v38 != 6) | v26 & 1))
    {
      v53 = (uint64_t)&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid];
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_pageGrid], v85, 0, 0);
      sub_10003AFE4(v53, (uint64_t)v17);
      if (v36)
        v54 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
      else
        v54 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
      v55 = a3 * 0.15;
      v56 = v4[*v54];
      v57 = objc_msgSend(v4, "traitCollection");
      sub_1004FB140((uint64_t)v17, v56, v57);
      v59 = v58;

      v60 = (uint64_t)v17;
LABEL_64:
      sub_100011088(v60, &qword_1008027B0);
      v27.n128_f64[0] = v55;
      v28.n128_u64[0] = v59;
      return static UIEdgeInsets.vertical(top:bottom:)(v27, v28);
    }
    goto LABEL_43;
  }
  *(double *)&v39 = 54.0;
LABEL_27:
  v42 = *(double *)&v39;
LABEL_28:
  v45 = v30 + v42;
LABEL_56:
  if (qword_1007F0BC0 != -1)
    swift_once(&qword_1007F0BC0, sub_1000371F8);
  v28.n128_u64[0] = qword_1007F5170;
  v27.n128_f64[0] = v45;
  return static UIEdgeInsets.vertical(top:bottom:)(v27, v28);
}

void sub_1000386DC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  double v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;

  v1 = v0;
  sub_1004FB2EC();
  v2 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v3 = 0.0;
  else
    v3 = 14.0;
  objc_msgSend(v0, "_setContinuousCornerRadius:", v3);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_gradientView], "_setContinuousCornerRadius:", v3);
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay];
  if (v5)
  {
    v6 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
    swift_unknownObjectRetain(v5);
    v9 = (void *)v8(ObjectType, v6);
    swift_unknownObjectRelease(v5);
    objc_msgSend(v9, "_setContinuousCornerRadius:", v3);

  }
  *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView]
           + qword_100818388) = v1[v2];
  sub_100563D88();
  *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer]
           + OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isExpanded) = v1[v2];
  sub_1004F8578();
}

id sub_100038808()
{
  unsigned __int8 *v0;
  id result;
  uint64_t *v2;
  int v3;
  _BYTE *v4;
  char v5;
  _BYTE *v6;

  result = objc_msgSend(v0, "setNeedsLayout");
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v3 = v0[*v2];
  if (v3 != 7)
  {
    *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView]
             + qword_100818348) = v3;
    sub_100563CE8();
    v4 = *(_BYTE **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer];
    v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_sizeCategory] = v3;
    if (v3 == 4)
      v5 = v4[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_isTransitioning] ^ 1;
    else
      v5 = 0;
    objc_msgSend(v4, "setHidden:", v5 & 1);
    v6 = *(_BYTE **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_multiAppIconView];
    v6[OBJC_IVAR____TtC22SubscribePageExtension24MultiAppFallbackIconView_sizeCategory] = v3;
    objc_msgSend(v6, "setNeedsLayout");
    return objc_msgSend(v0, "setNeedsLayout");
  }
  return result;
}

id sub_100038924()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;
  id result;
  int v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory] == 4)
  {
    v2 = objc_msgSend(v0, "contentView");
    objc_msgSend(v2, "setClipsToBounds:", 1);

  }
  result = objc_msgSend(v0, "setNeedsLayout");
  v4 = v0[v1];
  if (v4 != 7)
  {
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView];
    *(_BYTE *)(v5 + qword_100818350) = v4;
    *(_BYTE *)(*(_QWORD *)(v5 + qword_100818358)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v4;
    *(_BYTE *)(*(_QWORD *)(v5 + qword_100818360)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v4;
    *(_BYTE *)(*(_QWORD *)(v5 + qword_100818370)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v4;
    *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer]
             + OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_originalSizeCategory) = v4;
  }
  return result;
}

void sub_100038A24(void *a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1004F7F14((uint64_t)a1, a2, a3 & 1);
  v9 = swift_dynamicCastClass(a1, ObjectType);
  if (v9)
  {
    if ((a3 & 1) == 0)
    {
      v10 = (char *)v9;
      v11 = *(void **)(v9
                     + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView);
      v18 = a1;
      v12 = v11;
      sub_100566058(v12);

      objc_msgSend(v4, "setOverrideUserInterfaceStyle:", objc_msgSend(v10, "overrideUserInterfaceStyle"));
      v13 = *(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_multiAppIconView]
                      + OBJC_IVAR____TtC22SubscribePageExtension24MultiAppFallbackIconView_configuration);
      swift_retain(v13);
      sub_1002A5780(v14);
      swift_release(v13);
      v15 = swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_gradientView]
                                               + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors));
      sub_100055C20(v15);
      v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks];
      v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks];
      *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks] = v16;
      swift_bridgeObjectRetain(v16);
      objc_msgSend(v4, "setNeedsLayout", swift_bridgeObjectRelease(v17).n128_f64[0]);

    }
  }
}

void sub_100038B94(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  __n128 v48;
  unint64_t v49;
  uint64_t v50;
  __n128 v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  __n128 v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  char *v67;
  __n128 v68;
  void (*v69)(char *, _QWORD, uint64_t);
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  Swift::Int v88;
  Swift::Int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  Swift::Int v98;
  Swift::Int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  Swift::Int v111;
  Swift::Int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int v163;
  uint64_t v164;
  _QWORD *v165;
  unint64_t v166;
  _QWORD *v167;
  unint64_t v168;
  _QWORD v169[12];

  v5 = v4;
  v161 = a4;
  v9 = type metadata accessor for EditorialDisplayOptions(0);
  v159 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v158 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TodayCard.Style(0);
  v162 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v160 = (char *)&v143 - v15;
  __chkstk_darwin(v16);
  v157 = (char *)&v143 - v17;
  v18 = sub_10000DF3C(&qword_1007F51D8);
  __chkstk_darwin(v18);
  v164 = (uint64_t)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FB730(a1, a2, a3);
  v21 = TodayCard.media.getter(v20);
  v22 = type metadata accessor for TodayCardMediaMultiAppFallback(0);
  v23 = swift_dynamicCastClass(v21, v22);
  v25 = swift_release(v21);
  if (v23)
    goto LABEL_5;
  v26 = TodayCard.media.getter(v24);
  v27 = type metadata accessor for TodayCardMediaRiver(0);
  v28 = swift_dynamicCastClass(v26, v27);
  v25 = swift_release(v26);
  if (v28)
    goto LABEL_5;
  v30 = TodayCard.media.getter(v29);
  v31 = type metadata accessor for TodayCardMediaAppIcon(0);
  v32 = swift_dynamicCastClass(v30, v31);
  v25 = swift_release(v30);
  if (v32
    || (v34 = TodayCard.media.getter(v33),
        v35 = type metadata accessor for TodayCardMediaList(0),
        v36 = swift_dynamicCastClass(v34, v35),
        v25 = swift_release(v34),
        v36))
  {
LABEL_5:
    v152 = v9;
    v37 = v11;
    v153 = v22;
    v154 = v13;
    v155 = a3;
    v156 = v5;
    v38 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView];
    v39 = TodayCard.heading.getter(v25);
    v41 = v40;
    v146 = TodayCard.title.getter();
    v43 = v42;
    v145 = TodayCard.shortTitle.getter();
    v147 = v44;
    v45 = v164;
    TodayCard.titleCharacteristics.getter();
    v46 = type metadata accessor for StringCharacteristics(0);
    v47.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
    v143 = TodayCard.inlineDescription.getter(v47);
    v144 = v49;
    v163 = a2;
    v151 = v41;
    v150 = v38;
    v149 = v43;
    v148 = v39;
    v50 = (uint64_t)v157;
    if (a2 == 4)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v162 + 104))(v157, enum case for TodayCard.Style.dark(_:), v37);
      v52 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v53 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v54 = sub_1000D6130;
      v55 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    }
    else
    {
      TodayCard.style.getter(v48);
      v55 = sub_10055B6D0;
      v52 = sub_10055B8A8;
      v53 = sub_10055B8D0;
      v54 = sub_10055B6F8;
    }
    v56 = (uint64_t)v158;
    TodayCard.editorialDisplayOptions.getter(v51);
    v169[0] = sub_100051330;
    v169[1] = 0;
    v169[2] = v55;
    v169[3] = 0;
    v169[4] = v52;
    v169[5] = 0;
    v169[6] = v53;
    v169[7] = 0;
    v169[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v169[9] = 0;
    v169[10] = v54;
    v169[11] = 0;
    v57 = v144;
    v58 = v151;
    v59 = v149;
    v60 = v147;
    v61 = v164;
    sub_100561F94(v148, v151, v146, v149, v145, v147, v164, v143, v144, v50, v163, v56, 0, 0, 0, (uint64_t)v169, 1);
    v62 = v57;
    v63 = 1;
    swift_bridgeObjectRelease(v62);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v59);
    v64 = swift_bridgeObjectRelease(v58);
    (*(void (**)(uint64_t, uint64_t, __n128))(v159 + 8))(v56, v152, v64);
    v65 = v162;
    v66 = *(void (**)(uint64_t, uint64_t))(v162 + 8);
    v66(v50, v37);
    sub_100011088(v61, &qword_1007F51D8);
    v67 = v160;
    TodayCard.style.getter(v68);
    v69 = *(void (**)(char *, _QWORD, uint64_t))(v65 + 104);
    v70 = v154;
    v69(v154, enum case for TodayCard.Style.white(_:), v37);
    v71 = sub_10000E99C((unint64_t *)&qword_1008103A0, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard.Style, (uint64_t)&protocol conformance descriptor for TodayCard.Style);
    dispatch thunk of RawRepresentable.rawValue.getter(&v167, v37, v71);
    dispatch thunk of RawRepresentable.rawValue.getter(&v165, v37, v71);
    v72 = v168;
    v73 = v166;
    v74 = v37;
    if (v167 != v165 || (v75 = v168, v168 != v166))
    {
      v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v167, v168, v165, v166, 0);
      v75 = v73;
    }
    swift_bridgeObjectRelease(v72);
    v76 = swift_bridgeObjectRelease(v75);
    ((void (*)(char *, uint64_t, __n128))v66)(v70, v74, v76);
    v66((uint64_t)v67, v74);
    if ((v63 & 1) != 0)
      v77 = 1;
    else
      v77 = 2;
    v78 = v156;
    objc_msgSend(v156, "setOverrideUserInterfaceStyle:", v77, v143, v144);
    v79 = v163;
    v80 = v161;
    sub_1005BFB5C(a1, v155, v163, v161);
    v82 = TodayCard.media.getter(v81);
    if (swift_dynamicCastClass(v82, v153))
    {
      v83 = swift_retain(v82);
      v84 = TodayCardMediaMultiAppFallback.lockups.getter(v83);
      v85 = (uint64_t)sub_100037078(v84, (uint64_t (*)(void))&dispatch thunk of Lockup.artwork.getter);
      swift_bridgeObjectRelease(v84);
      v86 = (unint64_t)v85 >> 62;
      if ((unint64_t)v85 >> 62)
      {
        if (v85 < 0)
          v91 = v85;
        else
          v91 = v85 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v85);
        v90 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRetain(v85);
        v92 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(v85);
        if ((v92 & 0x8000000000000000) == 0)
          goto LABEL_104;
        __break(1u);
        goto LABEL_92;
      }
      if (*(uint64_t *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
        v87 = 3;
      else
        v87 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
      if ((v85 & 0xC000000000000001) != 0)
        goto LABEL_20;
LABEL_23:
      if (v86)
      {
        if (v85 < 0)
          v100 = v85;
        else
          v100 = v85 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v85);
        v91 = _CocoaArrayWrapper.subscript.getter(0, v87, v100);
        v92 = v101;
        v90 = v102;
        v75 = v103;
        swift_bridgeObjectRelease_n(v85, 2);
        if ((v75 & 1) == 0)
          goto LABEL_74;
      }
      else
      {
        v90 = 0;
        v91 = v85 & 0xFFFFFFFFFFFFFF8;
        v92 = (v85 & 0xFFFFFFFFFFFFFF8) + 32;
        v75 = (2 * v87) | 1;
        if ((v75 & 1) == 0)
          goto LABEL_74;
      }
      v85 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v104 = swift_unknownObjectRetain_n(v91, 2);
      v105 = (_QWORD *)swift_dynamicCastClass(v104, v85);
      if (!v105)
      {
        swift_unknownObjectRelease(v91);
        v105 = _swiftEmptyArrayStorage;
      }
      v86 = v105[2];
      swift_release(v105);
      v106 = (v75 >> 1) - v90;
      if (!__OFSUB__(v75 >> 1, v90))
      {
LABEL_78:
        v130 = v91;
        if (v86 == v106)
        {
          v123 = (_QWORD *)swift_dynamicCastClass(v91, v85);
          swift_release_n(v82, 2);
          swift_unknownObjectRelease(v91);
          if (v123)
            goto LABEL_82;
          swift_unknownObjectRelease(v91);
LABEL_81:
          v123 = _swiftEmptyArrayStorage;
LABEL_82:
          v131 = OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks;
          v132 = *(_QWORD *)&v78[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks];
          swift_bridgeObjectRetain(v132);
          sub_1001063BC((uint64_t)v123, v132);
          v134 = v133;
          swift_bridgeObjectRelease(v132);
          if ((v134 & 1) != 0)
          {
            swift_bridgeObjectRelease(v123);
          }
          else
          {
            v135 = *(_QWORD *)&v78[v131];
            *(_QWORD *)&v78[v131] = v123;
            swift_bridgeObjectRelease(v135);
            sub_1000398A0(v80, v79);
            objc_msgSend(v78, "setNeedsLayout");
          }
          return;
        }
LABEL_92:
        swift_unknownObjectRelease(v130);
LABEL_74:
        v123 = sub_10052E510(v91, v92, v90, v75);
        swift_release_n(v82, 2);
        swift_unknownObjectRelease(v91);
        goto LABEL_82;
      }
      __break(1u);
LABEL_47:
      v107 = type metadata accessor for TodayCardMediaList(v94);
      v108 = swift_dynamicCastClass(v82, v107);
      if (!v108)
      {
LABEL_68:
        v119 = type metadata accessor for TodayCardMediaAppIcon(v108);
        if (swift_dynamicCastClass(v82, v119))
        {
          v120 = sub_10000DF3C(&qword_1007F5840);
          v121 = swift_allocObject(v120, 40, 7);
          *(_OWORD *)(v121 + 16) = xmmword_10066FE60;
          v122 = TodayCardMediaAppIcon.icon.getter();
          *(_QWORD *)(v121 + 32) = v122;
          v167 = (_QWORD *)v121;
          specialized Array._endMutation()(v122);
          v123 = v167;
          swift_release(v82);
          goto LABEL_82;
        }
        swift_release(v82);
        goto LABEL_81;
      }
      v109 = swift_retain(v82);
      v110 = TodayCardMediaList.lockups.getter(v109);
      v85 = (uint64_t)sub_100037078(v110, (uint64_t (*)(void))&dispatch thunk of Lockup.artwork.getter);
      swift_bridgeObjectRelease(v110);
      v86 = (unint64_t)v85 >> 62;
      if (!((unint64_t)v85 >> 62))
      {
        if (*(uint64_t *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
          v87 = 3;
        else
          v87 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
        if ((v85 & 0xC000000000000001) == 0)
          goto LABEL_56;
LABEL_53:
        if (v87)
        {
          type metadata accessor for Artwork(0);
          v111 = 0;
          do
          {
            v112 = v111 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v111);
            v111 = v112;
          }
          while (v87 != v112);
        }
        goto LABEL_56;
      }
LABEL_98:
      if (v85 < 0)
        v91 = v85;
      else
        v91 = v85 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v85);
      v90 = _CocoaArrayWrapper.endIndex.getter(v91);
      swift_bridgeObjectRelease(v85);
      swift_bridgeObjectRetain(v85);
      v138 = _CocoaArrayWrapper.endIndex.getter(v91);
      swift_bridgeObjectRelease(v85);
      if (v138 < 0)
      {
        __break(1u);
        goto LABEL_103;
      }
      while (1)
      {
        if (v90 >= 3)
          v141 = 3;
        else
          v141 = v90;
        if (v90 >= 0)
          v87 = v141;
        else
          v87 = 3;
        swift_bridgeObjectRetain(v85);
        v142 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(v85);
        if (v142 < v87)
        {
          __break(1u);
LABEL_128:
          v78 = v156;
          v80 = v161;
          v79 = v163;
          if ((v85 & 0xC000000000000001) != 0)
          {
LABEL_20:
            if (v87)
            {
              type metadata accessor for Artwork(0);
              v88 = 0;
              do
              {
                v89 = v88 + 1;
                _ArrayBuffer._typeCheckSlowPath(_:)(v88);
                v88 = v89;
              }
              while (v87 != v89);
            }
          }
          goto LABEL_23;
        }
        v78 = v156;
        v80 = v161;
        v79 = v163;
        if ((v85 & 0xC000000000000001) != 0)
          goto LABEL_53;
LABEL_56:
        if (v86)
        {
          if (v85 < 0)
            v124 = v85;
          else
            v124 = v85 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v85);
          v91 = _CocoaArrayWrapper.subscript.getter(0, v87, v124);
          v92 = v125;
          v90 = v126;
          v75 = v127;
          swift_bridgeObjectRelease_n(v85, 2);
          if ((v75 & 1) == 0)
            goto LABEL_74;
        }
        else
        {
          v90 = 0;
          v91 = v85 & 0xFFFFFFFFFFFFFF8;
          v92 = (v85 & 0xFFFFFFFFFFFFFF8) + 32;
          v75 = (2 * v87) | 1;
          if ((v75 & 1) == 0)
            goto LABEL_74;
        }
        v85 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v128 = swift_unknownObjectRetain_n(v91, 2);
        v129 = (_QWORD *)swift_dynamicCastClass(v128, v85);
        if (!v129)
        {
          swift_unknownObjectRelease(v91);
          v129 = _swiftEmptyArrayStorage;
        }
        v86 = v129[2];
        swift_release(v129);
        v106 = (v75 >> 1) - v90;
        if (!__OFSUB__(v75 >> 1, v90))
          goto LABEL_78;
LABEL_103:
        __break(1u);
LABEL_104:
        if (v90 >= 3)
          v139 = 3;
        else
          v139 = v90;
        if (v90 >= 0)
          v87 = v139;
        else
          v87 = 3;
        swift_bridgeObjectRetain(v85);
        v136 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(v85);
        if (v136 >= v87)
          goto LABEL_128;
        __break(1u);
LABEL_112:
        v140 = v90 >= 3 ? 3 : v90;
        v97 = v90 >= 0 ? v140 : 3;
        swift_bridgeObjectRetain(v85);
        v91 = _CocoaArrayWrapper.endIndex.getter(v136);
        swift_bridgeObjectRelease(v85);
        if (v91 >= v97)
          break;
        __break(1u);
      }
      v78 = v156;
      v80 = v161;
      v79 = v163;
      if ((v85 & 0xC000000000000001) != 0)
        goto LABEL_32;
    }
    else
    {
      v93 = type metadata accessor for TodayCardMediaRiver(0);
      v94 = swift_dynamicCastClass(v82, v93);
      if (!v94)
        goto LABEL_47;
      v95 = swift_retain(v82);
      v96 = TodayCardMediaRiver.lockups.getter(v95);
      v85 = (uint64_t)sub_100037078(v96, (uint64_t (*)(void))&dispatch thunk of Lockup.artwork.getter);
      swift_bridgeObjectRelease(v96);
      v86 = (unint64_t)v85 >> 62;
      if ((unint64_t)v85 >> 62)
      {
        if (v85 < 0)
          v136 = v85;
        else
          v136 = v85 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v85);
        v90 = _CocoaArrayWrapper.endIndex.getter(v136);
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRetain(v85);
        v137 = _CocoaArrayWrapper.endIndex.getter(v136);
        swift_bridgeObjectRelease(v85);
        if (v137 < 0)
        {
          __break(1u);
          goto LABEL_98;
        }
        goto LABEL_112;
      }
      if (*(uint64_t *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
        v97 = 3;
      else
        v97 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
      if ((v85 & 0xC000000000000001) != 0)
      {
LABEL_32:
        if (v97)
        {
          type metadata accessor for Artwork(0);
          v98 = 0;
          do
          {
            v99 = v98 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v98);
            v98 = v99;
          }
          while (v97 != v99);
        }
      }
    }
    if (v86)
    {
      if (v85 < 0)
        v113 = v85;
      else
        v113 = v85 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v85);
      v91 = _CocoaArrayWrapper.subscript.getter(0, v97, v113);
      v92 = v114;
      v90 = v115;
      v75 = v116;
      swift_bridgeObjectRelease_n(v85, 2);
      if ((v75 & 1) == 0)
        goto LABEL_74;
    }
    else
    {
      v90 = 0;
      v91 = v85 & 0xFFFFFFFFFFFFFF8;
      v92 = (v85 & 0xFFFFFFFFFFFFFF8) + 32;
      v75 = (2 * v97) | 1;
      if ((v75 & 1) == 0)
        goto LABEL_74;
    }
    v85 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v117 = swift_unknownObjectRetain_n(v91, 2);
    v118 = (_QWORD *)swift_dynamicCastClass(v117, v85);
    if (!v118)
    {
      swift_unknownObjectRelease(v91);
      v118 = _swiftEmptyArrayStorage;
    }
    v86 = v118[2];
    swift_release(v118);
    v106 = (v75 >> 1) - v90;
    if (!__OFSUB__(v75 >> 1, v90))
      goto LABEL_78;
    __break(1u);
    goto LABEL_68;
  }
}

void sub_1000398A0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;

  v3 = v2;
  v6 = OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v31 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks);
    else
      v31 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = type metadata accessor for MultiAppFallbackIconView.Configuration();
  v10 = swift_allocObject(v9, 40, 7);
  swift_unknownObjectWeakInit(v10 + 16, 0);
  v11 = sub_10036D9D4(_swiftEmptyArrayStorage);
  v12 = 3;
  if (v8 < 3)
    v12 = v8;
  *(_QWORD *)(v10 + 24) = v12;
  *(_QWORD *)(v10 + 32) = v11;
  swift_retain(v10);
  sub_1002A5780(v13);
  swift_release(v10);
  v14 = *(_QWORD *)(v3 + v6);
  v15 = swift_bridgeObjectRetain(v14);
  v16 = sub_100037078(v15, (uint64_t (*)(void))&Artwork.backgroundColor.getter);
  swift_bridgeObjectRelease(v14);
  sub_100055C20((uint64_t)v16);
  v17 = type metadata accessor for ArtworkLoader(0);
  v36 = *(_QWORD *)(a1 + qword_100854050);
  if (v36)
  {
    v18 = *(_QWORD *)(v3 + v6);
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v32 = *(_QWORD *)(v3 + v6);
      else
        v32 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v36);
      swift_bridgeObjectRetain(v18);
      v17 = _CocoaArrayWrapper.endIndex.getter(v32);
      v19 = v17;
      if (v17)
        goto LABEL_8;
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(v36);
      v17 = swift_bridgeObjectRetain(v18);
      if (v19)
      {
LABEL_8:
        if (v19 >= 1)
        {
          v20 = 0;
          v33 = v18 & 0xC000000000000001;
          v34 = v18;
          v21 = a2;
          v35 = v3;
          while (1)
          {
            if (v33)
            {
              v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
            }
            else
            {
              v26 = *(_QWORD *)(v18 + 8 * v20 + 32);
              swift_retain(v26);
            }
            v27 = v6;
            v28 = *(_QWORD *)(v3 + v6);
            if ((unint64_t)v28 >> 62)
            {
              if (v28 < 0)
                v30 = v28;
              else
                v30 = v28 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v28);
              v29 = _CocoaArrayWrapper.endIndex.getter(v30);
              swift_bridgeObjectRelease(v28);
              if (v21 == 4)
              {
LABEL_32:
                if (v29 == 1)
                {
                  v22 = &xmmword_100850860;
                  if (qword_1007F0C18 != -1)
                  {
                    swift_once(&qword_1007F0C18, sub_10004A480);
                    v22 = &xmmword_100850860;
                  }
                  goto LABEL_12;
                }
                if (v29 == 2)
                {
                  v22 = &xmmword_1007F5580;
                  if (qword_1007F0C28 != -1)
                  {
                    swift_once(&qword_1007F0C28, sub_10004A4B0);
                    v22 = &xmmword_1007F5580;
                  }
                  goto LABEL_12;
                }
LABEL_10:
                v22 = &xmmword_1007F55B0;
                if (qword_1007F0C48 != -1)
                {
                  swift_once(&qword_1007F0C48, sub_10004A50C);
                  v22 = &xmmword_1007F55B0;
                }
                goto LABEL_12;
              }
            }
            else
            {
              v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v21 == 4)
                goto LABEL_32;
            }
            if (v21 != 5)
              goto LABEL_10;
            if (v29 == 1)
            {
              v22 = &xmmword_1007F5560;
              if (qword_1007F0C10 != -1)
              {
                swift_once(&qword_1007F0C10, sub_10004A468);
                v22 = &xmmword_1007F5560;
              }
              goto LABEL_12;
            }
            if (v29 == 2)
            {
              v22 = &xmmword_1007F5570;
              if (qword_1007F0C20 != -1)
              {
                swift_once(&qword_1007F0C20, sub_10004A498);
                v22 = &xmmword_1007F5570;
              }
              goto LABEL_12;
            }
            if (v29 != 3)
              goto LABEL_10;
            v22 = &xmmword_1007F55A0;
            if (qword_1007F0C40 != -1)
            {
              swift_once(&qword_1007F0C40, sub_10004A4F0);
              v22 = &xmmword_1007F55A0;
            }
LABEL_12:
            v23 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)v22, *((double *)v22 + 1));
            v38 = 0;
            memset(v37, 0, sizeof(v37));
            v24 = swift_allocObject(&unk_100723278, 32, 7);
            *(_QWORD *)(v24 + 16) = v10;
            *(_QWORD *)(v24 + 24) = v20;
            v25 = swift_retain(v10);
            ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v23, 2, 1, v37, sub_10003AF94, v24, v25);
            swift_release(v26);
            swift_release(v23);
            swift_release(v24);
            sub_100011088((uint64_t)v37, (uint64_t *)&unk_1007F9850);
            ++v20;
            v6 = v27;
            v18 = v34;
            v3 = v35;
            if (v19 == v20)
              goto LABEL_46;
          }
        }
        __break(1u);
        goto LABEL_48;
      }
    }
LABEL_46:
    swift_release(v10);
    swift_bridgeObjectRelease(v18);
    swift_release(v36);
    return;
  }
LABEL_48:
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v17);
  __break(1u);
}

void sub_100039D3C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  _BYTE v15[24];

  if (a1 && (a6 & 0x8000000000000000) == 0 && *(_QWORD *)(a5 + 24) > a6)
  {
    swift_beginAccess(a5 + 32, v15, 33, 0);
    v9 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a5 + 32));
    v14 = *(_QWORD *)(a5 + 32);
    *(_QWORD *)(a5 + 32) = 0x8000000000000000;
    sub_10010B9C0((uint64_t)v9, a6, isUniquelyReferenced_nonNull_native);
    v11 = *(_QWORD *)(a5 + 32);
    *(_QWORD *)(a5 + 32) = v14;
    swift_bridgeObjectRelease(v11);
    swift_endAccess(v15);
    Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
    if (Strong)
    {
      v13 = (void *)Strong;
      sub_1002A4620(a1, a6);

      v9 = v13;
    }

  }
}

void sub_100039E18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *rawValue;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __int128 *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __int128 *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  __int128 *v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t k;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t j;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  Swift::OpaquePointer using;

  v0 = type metadata accessor for TodayCard(0);
  v1 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v2 = ItemLayoutContext.typedModel<A>(as:)(&using, v0, v0, v1);
  rawValue = using._rawValue;
  if (using._rawValue)
  {
    v4 = TodayCard.media.getter(v2);
    swift_release(rawValue);
    v5 = type metadata accessor for TodayCardMediaMultiAppFallback(0);
    if (swift_dynamicCastClass(v4, v5))
    {
      v6 = swift_retain(v4);
      v7 = TodayCardMediaMultiAppFallback.lockups.getter(v6);
      v8 = v7;
      if ((unint64_t)v7 >> 62)
      {
        if (v7 >= 0)
          v7 &= 0xFFFFFFFFFFFFFF8uLL;
        v9 = _CocoaArrayWrapper.endIndex.getter(v7);
      }
      else
      {
        v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v10 = swift_bridgeObjectRelease(v8);
      switch(v9)
      {
        case 3:
          if (qword_1007F0C40 != -1)
            swift_once(&qword_1007F0C40, sub_10004A4F0);
          v11 = &xmmword_1007F55A0;
          break;
        case 2:
          if (qword_1007F0C20 != -1)
            swift_once(&qword_1007F0C20, sub_10004A498);
          v11 = &xmmword_1007F5570;
          break;
        case 1:
          if (qword_1007F0C10 != -1)
            swift_once(&qword_1007F0C10, sub_10004A468);
          v11 = &xmmword_1007F5560;
          break;
        default:
          if (qword_1007F0C48 != -1)
            swift_once(&qword_1007F0C48, sub_10004A50C);
          v11 = &xmmword_1007F55B0;
          break;
      }
      v19 = *(double *)v11;
      v18 = *((double *)v11 + 1);
      v20 = TodayCardMediaMultiAppFallback.lockups.getter(v10);
      v14 = v20;
      using._rawValue = _swiftEmptyArrayStorage;
      if ((unint64_t)v20 >> 62)
      {
        if (v20 < 0)
          v76 = v20;
        else
          v76 = v20 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v20);
        v21 = _CocoaArrayWrapper.endIndex.getter(v76);
        if (!v21)
          goto LABEL_127;
      }
      else
      {
        v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v20);
        if (!v21)
          goto LABEL_127;
      }
      if (v21 >= 1)
      {
        for (i = 0; i != v21; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0)
          {
            v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
          }
          else
          {
            v23 = *(_QWORD *)(v14 + 8 * i + 32);
            v24 = swift_retain(v23);
          }
          v25 = Lockup.icon.getter(v24);
          if (v25)
          {
            v26 = v25;
            v27 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v19, v18);
            swift_release(v23);
            swift_release(v26);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
            v30 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
            v29 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v30 >= v29 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
            v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
            specialized Array._endMutation()(v31);
          }
          else
          {
            swift_release(v23);
          }
        }
LABEL_98:
        swift_bridgeObjectRelease(v14);
        v75 = using._rawValue;
LABEL_128:
        swift_bridgeObjectRelease(v14);
        ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v75);
        swift_release_n(v4, 2);
        v60 = v75;
        goto LABEL_129;
      }
      __break(1u);
    }
    else
    {
      v12 = type metadata accessor for TodayCardMediaRiver(0);
      if (!swift_dynamicCastClass(v4, v12))
      {
        v32 = type metadata accessor for TodayCardMediaList(0);
        if (!swift_dynamicCastClass(v4, v32))
        {
          v51 = type metadata accessor for TodayCardMediaAppIcon(0);
          if (!swift_dynamicCastClass(v4, v51))
          {
            swift_release(v4);
            return;
          }
          v52 = qword_1007F0C10;
          swift_retain(v4);
          if (v52 == -1)
            goto LABEL_75;
          goto LABEL_132;
        }
        v33 = swift_retain(v4);
        v14 = TodayCardMediaList.lockups.getter(v33);
        if (!((unint64_t)v14 >> 62))
        {
          v34 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_45;
        }
LABEL_119:
        if (v14 < 0)
          v79 = v14;
        else
          v79 = v14 & 0xFFFFFFFFFFFFFF8;
        v34 = _CocoaArrayWrapper.endIndex.getter(v79);
LABEL_45:
        v35 = swift_bridgeObjectRelease(v14);
        switch(v34)
        {
          case 3:
            if (qword_1007F0C40 != -1)
              swift_once(&qword_1007F0C40, sub_10004A4F0);
            v36 = &xmmword_1007F55A0;
            break;
          case 2:
            if (qword_1007F0C20 != -1)
              swift_once(&qword_1007F0C20, sub_10004A498);
            v36 = &xmmword_1007F5570;
            break;
          case 1:
            if (qword_1007F0C10 != -1)
              swift_once(&qword_1007F0C10, sub_10004A468);
            v36 = &xmmword_1007F5560;
            break;
          default:
            if (qword_1007F0C48 != -1)
              swift_once(&qword_1007F0C48, sub_10004A50C);
            v36 = &xmmword_1007F55B0;
            break;
        }
        v62 = *(double *)v36;
        v61 = *((double *)v36 + 1);
        v63 = TodayCardMediaList.lockups.getter(v35);
        v14 = v63;
        using._rawValue = _swiftEmptyArrayStorage;
        if ((unint64_t)v63 >> 62)
        {
          if (v63 < 0)
            v80 = v63;
          else
            v80 = v63 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v63);
          v64 = _CocoaArrayWrapper.endIndex.getter(v80);
          if (v64)
            goto LABEL_87;
        }
        else
        {
          v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v63);
          if (v64)
          {
LABEL_87:
            if (v64 >= 1)
            {
              for (j = 0; j != v64; ++j)
              {
                if ((v14 & 0xC000000000000001) != 0)
                {
                  v66 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v14);
                }
                else
                {
                  v66 = *(_QWORD *)(v14 + 8 * j + 32);
                  v67 = swift_retain(v66);
                }
                v68 = Lockup.icon.getter(v67);
                if (v68)
                {
                  v69 = v68;
                  v70 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v62, v61);
                  swift_release(v66);
                  swift_release(v69);
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
                  v73 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v72 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v73 >= v72 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
                  v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v70);
                  specialized Array._endMutation()(v74);
                }
                else
                {
                  swift_release(v66);
                }
              }
              goto LABEL_98;
            }
            __break(1u);
LABEL_132:
            swift_once(&qword_1007F0C10, sub_10004A468);
LABEL_75:
            v53 = xmmword_1007F5560;
            v54 = sub_10000DF3C(&qword_1007F5840);
            v55 = swift_allocObject(v54, 40, 7);
            *(_OWORD *)(v55 + 16) = xmmword_10066FE60;
            v56 = TodayCardMediaAppIcon.icon.getter();
            v57 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&v53, *((double *)&v53 + 1));
            swift_release(v56);
            *(_QWORD *)(v55 + 32) = v57;
            using._rawValue = (void *)v55;
            specialized Array._endMutation()(v58);
            v59 = using._rawValue;
            ArtworkLoader.prefetchArtwork(using:)(using);
            swift_release_n(v4, 2);
            v60 = v59;
LABEL_129:
            swift_bridgeObjectRelease(v60);
            return;
          }
        }
LABEL_127:
        swift_bridgeObjectRelease(v14);
        v75 = _swiftEmptyArrayStorage;
        goto LABEL_128;
      }
      v13 = swift_retain(v4);
      v14 = TodayCardMediaRiver.lockups.getter(v13);
      if (!((unint64_t)v14 >> 62))
      {
        v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
        v16 = swift_bridgeObjectRelease(v14);
        switch(v15)
        {
          case 3:
            if (qword_1007F0C40 != -1)
              swift_once(&qword_1007F0C40, sub_10004A4F0);
            v17 = &xmmword_1007F55A0;
            break;
          case 2:
            if (qword_1007F0C20 != -1)
              swift_once(&qword_1007F0C20, sub_10004A498);
            v17 = &xmmword_1007F5570;
            break;
          case 1:
            if (qword_1007F0C10 != -1)
              swift_once(&qword_1007F0C10, sub_10004A468);
            v17 = &xmmword_1007F5560;
            break;
          default:
            if (qword_1007F0C48 != -1)
              swift_once(&qword_1007F0C48, sub_10004A50C);
            v17 = &xmmword_1007F55B0;
            break;
        }
        v38 = *(double *)v17;
        v37 = *((double *)v17 + 1);
        v39 = TodayCardMediaRiver.lockups.getter(v16);
        v14 = v39;
        using._rawValue = _swiftEmptyArrayStorage;
        if ((unint64_t)v39 >> 62)
        {
          if (v39 < 0)
            v78 = v39;
          else
            v78 = v39 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v39);
          v40 = _CocoaArrayWrapper.endIndex.getter(v78);
          if (!v40)
            goto LABEL_127;
        }
        else
        {
          v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v39);
          if (!v40)
            goto LABEL_127;
        }
        if (v40 >= 1)
        {
          for (k = 0; k != v40; ++k)
          {
            if ((v14 & 0xC000000000000001) != 0)
            {
              v42 = specialized _ArrayBuffer._getElementSlowPath(_:)(k, v14);
            }
            else
            {
              v42 = *(_QWORD *)(v14 + 8 * k + 32);
              v43 = swift_retain(v42);
            }
            v44 = Lockup.icon.getter(v43);
            if (v44)
            {
              v45 = v44;
              v46 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v38, v37);
              swift_release(v42);
              swift_release(v45);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
              v49 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
              v48 = *(_QWORD *)(((unint64_t)using._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v49 >= v48 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
              v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v46);
              specialized Array._endMutation()(v50);
            }
            else
            {
              swift_release(v42);
            }
          }
          goto LABEL_98;
        }
        __break(1u);
        goto LABEL_119;
      }
    }
    if (v14 < 0)
      v77 = v14;
    else
      v77 = v14 & 0xFFFFFFFFFFFFFF8;
    v15 = _CocoaArrayWrapper.endIndex.getter(v77);
    goto LABEL_14;
  }
}

uint64_t sub_10003A750()
{
  return sub_1005627E0();
}

void sub_10003A778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t ObjectType;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v21[6];

  v5 = v4;
  if (a3)
  {
    ObjectType = swift_getObjectType(a3, a2);
    v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(ObjectType, a4);
    objc_msgSend(v10, "removeFromSuperview");

  }
  if (a1)
  {
    v11 = swift_getObjectType(a1, a2);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    swift_unknownObjectRetain(a1);
    v13 = (void *)v12(v11, a2);
    v14 = *(char **)&v5[OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer];
    v15 = OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView;
    v16 = *(void **)&v14[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView];
    *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension29InfoLayerOverlayContainerView_overlayView] = v13;
    v17 = v13;

    v18 = *(void **)&v14[v15];
    if (v18)
    {
      objc_msgSend(v18, "setAnchorPoint:", 0.0, 1.0);
      v19 = *(void **)&v14[v15];
      if (v19)
      {
        v21[0] = 0x3FF0000000000000;
        v21[1] = 0;
        v21[2] = 0;
        v21[3] = 0x3FF0000000000000;
        v21[4] = 0;
        v21[5] = 0;
        objc_msgSend(v19, "setTransform:", v21);
      }
    }
    objc_msgSend(v14, "addSubview:", v17);
    objc_msgSend(v17, "setOverrideUserInterfaceStyle:", objc_msgSend(v5, "overrideUserInterfaceStyle"));
    objc_msgSend(v5, "_continuousCornerRadius");
    objc_msgSend(v17, "_setContinuousCornerRadius:");
    v20 = objc_msgSend(v17, "layer");
    objc_msgSend(v20, "setMaskedCorners:", 12);
    swift_unknownObjectRelease(a1);

  }
}

void sub_10003A918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v6, v24, 1, 0);
  swift_weakAssign(v6, a2);
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v3 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock, &v23, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100019310(v8, v9);
  v10 = (void (*)(__n128))*v7;
  if (*v7)
  {
    v11 = v7[1];
    v12 = swift_retain(v11);
    v10(v12);
    sub_100019310((uint64_t)v10, v11);
  }
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay);
  if (v13)
  {
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay + 8);
    ObjectType = swift_getObjectType();
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
    swift_unknownObjectRetain(v13);
    v17 = (void *)v16(ObjectType, v14);
    swift_unknownObjectRelease(v13);
    v18 = swift_getObjectType();
    v19 = swift_conformsToProtocol2(v18, &protocol descriptor for NestedModelImpressionsRecording);
    if (v19)
      v20 = v19;
    else
      v20 = 0;
    if (v19)
      v21 = v17;
    else
      v21 = 0;
    if (v21)
    {
      v22 = swift_getObjectType();
      dispatch thunk of NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v22, v20);
    }

  }
}

void sub_10003AA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsCalculator, v21, 1, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    ImpressionsCalculator.removeAllElements()();
    swift_release(v6);
  }
  swift_weakAssign(v4, 0);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_impressionsUpdateBlock, &v20, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_100019310(v8, v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay + 8);
    ObjectType = swift_getObjectType();
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    swift_unknownObjectRetain(v10);
    v14 = (void *)v13(ObjectType, v11);
    swift_unknownObjectRelease(v10);
    v15 = swift_getObjectType();
    v16 = swift_conformsToProtocol2(v15, &protocol descriptor for NestedModelImpressionsRecording);
    if (v16)
      v17 = v16;
    else
      v17 = 0;
    if (v16)
      v18 = v14;
    else
      v18 = 0;
    if (v18)
    {
      v19 = swift_getObjectType();
      dispatch thunk of NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v19, v17);
    }

  }
}

uint64_t sub_10003ACCC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay));
  swift_weakDestroy(v0 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayReusePool);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_multiAppIconView));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerLabelsView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_infoLayerOverlayContainer));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_artworks));
}

uint64_t sub_10003ADD0()
{
  return type metadata accessor for MultiAppFallbackCardCollectionViewCell(0);
}

uint64_t type metadata accessor for MultiAppFallbackCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F51C8;
  if (!qword_1007F51C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MultiAppFallbackCardCollectionViewCell);
  return result;
}

uint64_t sub_10003AE14(uint64_t a1)
{
  _QWORD v2[8];

  v2[0] = "\t";
  v2[1] = &unk_100670A60;
  v2[2] = &unk_100670A78;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 8, v2, a1 + 608);
}

uint64_t sub_10003AE88()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayKind);
}

uint64_t sub_10003AEA0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayKind;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t sub_10003AEBC()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay));
}

uint64_t sub_10003AEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlay);
  *v3 = a1;
  v3[1] = a2;
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10003AF08()
{
  uint64_t v0;

  return swift_weakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayReusePool);
}

uint64_t sub_10003AF18(uint64_t a1)
{
  uint64_t v1;

  swift_weakAssign(v1 + OBJC_IVAR____TtC22SubscribePageExtension38MultiAppFallbackCardCollectionViewCell_overlayReusePool, a1);
  return swift_release(a1);
}

void sub_10003AF50()
{
  sub_1004F8578();
}

uint64_t sub_10003AF70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10003AF94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100039D3C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_10003AF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F51E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003AFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1008027B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003B02C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008075A0;
  if (!qword_1008075A0)
  {
    v1 = objc_opt_self(UITraitCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1008075A0);
  }
  return result;
}

BOOL sub_10003B068(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10003B07C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10003B0C0()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10003B0E8(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

id sub_10003B128()
{
  _BYTE *v0;
  uint64_t ObjectType;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  objc_super v8;

  ObjectType = swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_kind] = 0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for GradientView();
  v2 = objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10003B47C();
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v4 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v4 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v5 = v2;
  v6 = UIView.registerForTraitChanges<A>(_:handler:)(v4, sub_10003B8F8, 0, ObjectType);
  swift_unknownObjectRelease(v6);
  swift_bridgeObjectRelease(v4);

  return v5;
}

void sub_10003B2E4(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;

  v3 = objc_msgSend(v1, "layer");
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (a1)
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (v7)
    {
      specialized ContiguousArray.reserveCapacity(_:)(v7);
      v8 = 0;
      do
      {
        v9 = v8 + 1;
        v10 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)(a1 + 8 * v8 + 32));
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v11 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
        specialized ContiguousArray._endMutation()(v12);
        v8 = v9;
      }
      while (v7 != v9);
    }
    swift_bridgeObjectRelease(a1);
    sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setLocations:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0], isa);
  }
  else
  {
    objc_msgSend(v5, "setLocations:", 0, v6, 0);
  }

}

id sub_10003B47C()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  Class isa;
  uint64_t v7;
  id result;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = v0;
  v2 = objc_msgSend(v0, "layer");
  v3 = objc_opt_self(CAGradientLayer);
  v4 = (void *)swift_dynamicCastObjCClassUnconditional(v2, v3, 0, 0, 0);
  isa = *(Class *)&v0[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  if (!isa)
    goto LABEL_19;
  if (!((unint64_t)isa >> 62))
  {
    v7 = *(_QWORD *)(((unint64_t)isa & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors]);
    if (v7)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease(isa);
    v10 = _swiftEmptyArrayStorage;
LABEL_18:
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v10).n128_u64[0];
LABEL_19:
    objc_msgSend(v4, "setColors:", isa, v5);

    return objc_msgSend(v1, "setNeedsDisplay");
  }
  if ((uint64_t)isa >= 0)
    v17 = (unint64_t)isa & 0xFFFFFFFFFFFFFF8;
  else
    v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  swift_bridgeObjectRetain(isa);
  v7 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v7)
    goto LABEL_17;
LABEL_4:
  v21 = _swiftEmptyArrayStorage;
  result = (id)sub_100021A88(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v18 = v4;
    v9 = 0;
    v10 = v21;
    do
    {
      if (((unint64_t)isa & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, isa);
      else
        v11 = *((id *)isa + v9 + 4);
      v12 = v11;
      v13 = objc_msgSend(v11, "CGColor", v18, (_QWORD)v19);
      type metadata accessor for CGColor(0);
      v20 = v14;

      *(_QWORD *)&v19 = v13;
      v21 = v10;
      v16 = v10[2];
      v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_100021A88(v15 > 1, v16 + 1, 1);
        v10 = v21;
      }
      ++v9;
      v10[2] = v16 + 1;
      sub_10003B8E8(&v19, &v10[4 * v16 + 4]);
    }
    while (v7 != v9);
    swift_bridgeObjectRelease(isa);
    v4 = v18;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id sub_10003B6C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GradientView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for GradientView()
{
  return objc_opt_self(_TtC22SubscribePageExtension12GradientView);
}

_BYTE *initializeBufferWithCopyOfBuffer for NavigationAccessory.Location(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EditorsChoiceUseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientView.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10003B810 + 4 * byte_100670AA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10003B844 + 4 * byte_100670AA0[v4]))();
}

uint64_t sub_10003B844(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003B84C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10003B854);
  return result;
}

uint64_t sub_10003B860(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10003B868);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10003B86C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003B874(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003B880(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10003B888(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for GradientView.Kind()
{
  return &type metadata for GradientView.Kind;
}

unint64_t sub_10003B8A4()
{
  unint64_t result;

  result = qword_1007F5220;
  if (!qword_1007F5220)
  {
    result = swift_getWitnessTable(&unk_100670B1C, &type metadata for GradientView.Kind);
    atomic_store(result, (unint64_t *)&qword_1007F5220);
  }
  return result;
}

_OWORD *sub_10003B8E8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id sub_10003B8F8()
{
  return sub_10003B47C();
}

double sub_10003B918(uint64_t *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_10003B9F4(a2, *a1, a4, a6, a7);
}

void sub_10003B92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v5 = ArcadeDownloadPackCard.numberOfPlaceholders.getter();
  if ((v6 & 1) != 0)
  {
    v7 = ArcadeDownloadPackCard.lockups.getter(v5);
    sub_10055C680(v7, 0, 1, a3);
    objc_msgSend(v3, "layoutIfNeeded", swift_bridgeObjectRelease(v7).n128_f64[0]);
  }
  else
  {
    sub_10055C3B0(v5);
  }
}

uint64_t sub_10003B9C8()
{
  return sub_10000E99C(&qword_1007F5230, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeDownloadPackCard, (uint64_t)&protocol conformance descriptor for ArcadeDownloadPackCard);
}

double sub_10003B9F4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  double v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v7 = ArcadeDownloadPackCard.numberOfPlaceholders.getter();
  if ((v9 & 1) != 0)
  {
    v11 = ArcadeDownloadPackCard.lockups.getter(v7);
    v12 = v11;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 >= 0)
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      v10 = _CocoaArrayWrapper.endIndex.getter(v11);
    }
    else
    {
      v10 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v10 = v7;
  }
  v13 = objc_msgSend(a5, "traitCollection", v8);
  sub_1005617BC(v10, v13);

  return a1;
}

uint64_t sub_10003BAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, uint64_t, uint64_t);
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v14;
  double left;
  double bottom;
  double right;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  _QWORD v22[3];
  void *v23;
  void *v24;
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[5];
  _QWORD v29[5];
  _QWORD v30[5];
  _QWORD v31[3];
  void *v32;
  void *v33;

  v0 = type metadata accessor for ReviewsContainerLayout.Metrics(0);
  sub_100045464(v0, qword_100850740);
  sub_1000117A8(v0, (uint64_t)qword_100850740);
  v1 = type metadata accessor for Feature.iOS(0);
  v32 = (void *)v1;
  v2 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v33 = (void *)v2;
  v3 = sub_1000117C0(v31);
  v4 = enum case for Feature.iOS.review_summarization(_:);
  v5 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 104);
  v5(v3, enum case for Feature.iOS.review_summarization(_:), v1);
  v6 = isFeatureEnabled(_:)(v31);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  if ((v6 & 1) != 0)
  {
    v32 = &type metadata for Double;
    v33 = &protocol witness table for Double;
    v31[0] = 0x4032000000000000;
  }
  else
  {
    if (qword_1007F2A00 != -1)
      swift_once(&qword_1007F2A00, sub_10042D0F4);
    v7 = type metadata accessor for StaticDimension(0);
    v8 = sub_1000117A8(v7, (uint64_t)qword_100856150);
    v32 = (void *)v7;
    v33 = &protocol witness table for StaticDimension;
    v9 = sub_1000117C0(v31);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v9, v8, v7);
  }
  v30[3] = &type metadata for Double;
  v30[4] = &protocol witness table for Double;
  v30[0] = 0x4038000000000000;
  v29[3] = &type metadata for Double;
  v29[4] = &protocol witness table for Double;
  v28[4] = &protocol witness table for Double;
  v29[0] = 0x4038000000000000;
  v28[3] = &type metadata for Double;
  v28[0] = 0x4042000000000000;
  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v10 = type metadata accessor for StaticDimension(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_100856150);
  v27[3] = v10;
  v27[4] = &protocol witness table for StaticDimension;
  v12 = sub_1000117C0(v27);
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v26[3] = v10;
  v26[4] = &protocol witness table for StaticDimension;
  v14 = sub_1000117C0(v26);
  v13(v14, v11, v10);
  v25[3] = type metadata accessor for ZeroDimension(0);
  v25[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v25);
  static ZeroDimension.zero.getter();
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v23 = (void *)v1;
  v24 = (void *)v2;
  v18 = sub_1000117C0(v22);
  v5(v18, v4, v1);
  v19 = isFeatureEnabled(_:)(v22);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v22);
  if ((v19 & 1) != 0)
  {
    v23 = &type metadata for Double;
    v24 = &protocol witness table for Double;
    v22[0] = 0x4042000000000000;
  }
  else
  {
    v23 = (void *)v10;
    v24 = &protocol witness table for StaticDimension;
    v20 = sub_1000117C0(v22);
    v13(v20, v11, v10);
  }
  return ReviewsContainerLayout.Metrics.init(ratingsBottomSpace:tapToRateTopSpace:tapToRateBottomSpace:reviewSummaryBottomSpace:reviewsShelfTopSpace:editorsChoiceTopSpace:columnSpacer:marginInsets:bottomEdgeSpace:)(v31, v30, v29, v28, v27, v26, v25, v22, UIEdgeInsetsZero.top, left, bottom, right);
}

char *sub_10003BD80(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);
  id v24;
  unint64_t *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  objc_super v47;
  _QWORD v48[5];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_itemLayoutContext];
  v12 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView;
  v14 = objc_allocWithZone((Class)type metadata accessor for ProductTapToRateCollectionViewCell());
  v15 = v5;
  *(_QWORD *)&v5[v13] = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductReviewActionsCell()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReviewSummaryCollectionViewCell(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsSeparatorView;
  *(_QWORD *)&v15[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_pageTraits] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView] = 0;
  v19 = &v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v20 = &v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_scrollObserver];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = type metadata accessor for Feature.iOS(0);
  v48[3] = v21;
  v48[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v22 = sub_1000117C0(v48);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v22, enum case for Feature.iOS.review_summarization(_:), v21);
  LOBYTE(v21) = isFeatureEnabled(_:)(v48);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v48);
  if ((v21 & 1) != 0)
  {
    v23 = type metadata accessor for ProductRatingsCollectionViewCell;
    v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductRatingsCollectionViewCell(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v25 = (unint64_t *)&unk_1007F5420;
    v26 = &unk_10069B034;
  }
  else
  {
    v23 = type metadata accessor for ProductRatingsLegacyCollectionViewCell;
    v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductRatingsLegacyCollectionViewCell(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v25 = (unint64_t *)&unk_1007F5410;
    v26 = &unk_10067ECB8;
  }
  v27 = sub_10000E99C(v25, v23, (uint64_t)v26);
  v28 = &v15[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView];
  *(_QWORD *)v28 = v24;
  *((_QWORD *)v28 + 1) = v27;

  v47.receiver = v15;
  v47.super_class = ObjectType;
  v29 = (char *)objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  v30 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsSeparatorView;
  v31 = *(void **)&v29[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsSeparatorView];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v32 = v29;
  v33 = v31;
  v34 = (void *)static UIColor.defaultLine.getter();
  objc_msgSend(v33, "setBackgroundColor:", v34);

  v35 = objc_msgSend(v32, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v29[v30]);

  v36 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView;
  objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView], "setHidden:", 1);
  v37 = objc_msgSend(v32, "contentView");
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v32[v36]);

  v38 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView;
  objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView], "setHidden:", 1);
  v39 = objc_msgSend(v32, "contentView");
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v32[v38]);

  v40 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView;
  objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView], "setHidden:", 1);
  v41 = objc_msgSend(v32, "contentView");
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v32[v40]);

  v42 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView;
  objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView], "setHidden:", 1);
  v43 = objc_msgSend(v32, "contentView");
  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v32[v42]);

  v44 = objc_msgSend(v32, "contentView");
  objc_msgSend(v44, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v45 = objc_msgSend(v32, "layer");
  objc_msgSend(v45, "setAllowsGroupOpacity:", 0);

  return v32;
}

id sub_10003C2A0()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf];
  if (v2)
  {
    v3 = v2;
    sub_100098E30(v3);

  }
  v4 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice + 8];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  sub_100019310(v5, v6);
  v8.receiver = v0;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "dealloc");
}

uint64_t sub_10003C320()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf);
  if (v1)
  {
    v2 = v1;
    sub_100098E30(v2);

  }
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice + 8);
  *v3 = 0;
  v3[1] = 0;
  return sub_100019310(v4, v5);
}

uint64_t sub_10003C474()
{
  return type metadata accessor for ReviewsContainerCell(0);
}

uint64_t type metadata accessor for ReviewsContainerCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F52C0;
  if (!qword_1007F52C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReviewsContainerCell);
  return result;
}

uint64_t sub_10003C4B8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[5];
  __int128 v64;
  __int128 v65;
  void *v66;
  __int128 v67;
  __int128 v68;
  void *v69;
  _QWORD v70[5];
  _QWORD v71[5];
  _QWORD v72[5];
  _QWORD v73[5];
  objc_super v74;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = __chkstk_darwin(v3);
  v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReviewsContainerLayout(0, v4);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReviewsContainerLayout.Metrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - v13;
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v18 = (char *)&v52 - v17;
  v74.receiver = v1;
  v74.super_class = ObjectType;
  objc_msgSendSuper2(&v74, "layoutSubviews", v16);
  v19 = objc_msgSend(v1, "contentView");
  objc_msgSend(v1, "bounds");
  objc_msgSend(v19, "setBounds:");

  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_pageTraits];
  if (v20)
  {
    v21 = qword_1007F0BC8;
    swift_unknownObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_pageTraits]);
    if (v21 != -1)
      swift_once(&qword_1007F0BC8, sub_10003BAA8);
    v22 = sub_1000117A8(v8, (uint64_t)qword_100850740);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v24 = v23(v14, v22, v8);
    __chkstk_darwin(v24);
    *(&v52 - 2) = v20;
    Copyable.copyWithOverrides(in:)(v18, sub_1000461AC, &v52 - 4, v8, &protocol witness table for ReviewsContainerLayout.Metrics);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    *(_QWORD *)&v25 = swift_unknownObjectRelease(v20).n128_u64[0];
  }
  else
  {
    if (qword_1007F0BC8 != -1)
      swift_once(&qword_1007F0BC8, sub_10003BAA8);
    v26 = sub_1000117A8(v8, (uint64_t)qword_100850740);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v23(v18, v26, v8);
  }
  v27 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView;
  if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView], "isHidden", v25))
  {
    v28 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView;
    v29 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView];
    if (!v29)
    {
      v30 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductNoRatingsView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v31 = objc_msgSend(v1, "contentView");
      objc_msgSend(v31, "addSubview:", v30);

      v32 = *(void **)&v1[v28];
      *(_QWORD *)&v1[v28] = v30;
      v33 = v30;

      v29 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    v29 = *(void **)&v1[v27];
  }
  v33 = v29;
LABEL_13:
  v34 = v29;
  v53 = v11;
  v54 = v18;
  v56 = v8;
  v23(v11, (uint64_t)v18, v8);
  v35 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v73[3] = v35;
  v73[4] = &protocol witness table for UIView;
  v73[0] = v33;
  v36 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView];
  v72[3] = type metadata accessor for ProductTapToRateCollectionViewCell();
  v72[4] = &protocol witness table for UIView;
  v72[0] = v36;
  v37 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView];
  v71[3] = type metadata accessor for ProductReviewActionsCell();
  v71[4] = &protocol witness table for UIView;
  v71[0] = v37;
  v38 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView];
  v70[3] = type metadata accessor for ReviewSummaryCollectionViewCell(0);
  v70[4] = &protocol witness table for UIView;
  v70[0] = v38;
  v39 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf];
  if (v39)
  {
    *((_QWORD *)&v68 + 1) = sub_10000DF3C(&qword_1007F5300);
    v69 = &protocol witness table for UIView;
    *(_QWORD *)&v67 = v39;
    v40 = v39;
  }
  else
  {
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
  }
  v41 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView];
  v55 = v9;
  if (v41)
  {
    *((_QWORD *)&v65 + 1) = type metadata accessor for EditorsChoiceCollectionViewCell(0);
    v66 = &protocol witness table for UIView;
    *(_QWORD *)&v64 = v41;
  }
  else
  {
    v66 = 0;
    v64 = 0u;
    v65 = 0u;
  }
  v42 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsSeparatorView];
  v63[3] = v35;
  v63[4] = &protocol witness table for UIView;
  v63[0] = v42;
  v43 = v33;
  v44 = v36;
  v45 = v37;
  v46 = v38;
  v47 = v41;
  v48 = v42;
  v49 = v57;
  ReviewsContainerLayout.init(metrics:ratingsView:tapToRateView:actionsView:reviewSummaryView:reviewsShelf:editorsChoiceView:ratingsSeparatorView:)(v53, v73, v72, v71, v70, &v67, &v64, v63);
  objc_msgSend(v1, "bounds");
  v50 = v60;
  ReviewsContainerLayout.placeChildren(relativeTo:in:)(v1);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v50, v62);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v54, v56);
}

uint64_t sub_10003C9F0()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "prepareForReuse");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf];
  if (v1)
  {
    v2 = v1;
    sub_100098E30(v2);

  }
  v3 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice + 8];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  return sub_100019310(v4, v5);
}

void sub_10003CA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)(char *, uint64_t);
  uint64_t v13;
  char *v14;
  __objc2_meth_list **p_base_meths;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __n128 v69;
  char *v70;
  uint64_t v71;
  char *v72;
  __n128 v73;
  uint64_t (*v74)(char *, uint64_t);
  id v75;
  void *v76;
  void *v77;
  id v78;
  NSString v79;
  void *v80;
  id v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __objc2_meth_list **v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  void *v117;
  _QWORD *v118;
  uint64_t v119;
  __n128 v120;
  id v121;
  uint64_t v122;
  double v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  id v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  id v147;
  id v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  id v152;
  id v153;
  void *v154;
  id v155;
  uint64_t v156;
  id v157;
  __n128 v158;
  __objc2_meth_list **v159;
  uint64_t v160;
  uint64_t v161;
  __n128 v162;
  uint64_t v163;
  double v164;
  void *v165;
  uint64_t v166;
  void (*v167)();
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (**v171)();
  uint64_t v172;
  uint64_t v173;
  id v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  id *v178;
  uint64_t (*v179)(char *, uint64_t);
  uint64_t v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t (*v190)(char *, uint64_t);
  double v191;
  void *v192;
  id v193;
  char v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  _QWORD *v201;
  char v202;
  uint64_t (*v203)(char *, uint64_t);
  uint64_t (**v204)(char *, uint64_t);
  uint64_t v205;
  __n128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (**v226)(char *, uint64_t);
  uint64_t v227;
  char *v228;
  _QWORD v229[3];
  uint64_t v230;
  uint64_t v231;

  v222 = a7;
  v223 = a6;
  v224 = a5;
  v215 = a3;
  v213 = a2;
  v9 = type metadata accessor for Shelf.PresentationHints(0);
  v217 = *(_QWORD *)(v9 - 8);
  v218 = v9;
  __chkstk_darwin(v9);
  v221 = (char *)&v209 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = sub_10000DF3C(&qword_1007F7D40);
  v211 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v210 = (char *)&v209 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for LegacyAppState(0);
  v12 = *(uint64_t (***)(char *, uint64_t))(v214 - 8);
  __chkstk_darwin(v214);
  v14 = (char *)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_base_meths = (__objc2_meth_list **)type metadata accessor for AdamId(0);
  v16 = (uint64_t)*(p_base_meths - 1);
  __chkstk_darwin(p_base_meths);
  v18 = (char *)&v209 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ComponentLayoutOptions(0);
  v219 = *(_QWORD *)(v19 - 8);
  v220 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v209 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v209 - v23;
  v26 = __chkstk_darwin(v25);
  v227 = (uint64_t)&v209 - v27;
  v28 = Shelf.items.getter(v26);
  v29 = *(_QWORD *)(v28 + 16);
  v30 = swift_bridgeObjectRelease(v28);
  if (v29)
  {
    v225 = a1;
    v31 = a1;
    v32 = Shelf.items.getter(v30);
    if (!*(_QWORD *)(v32 + 16))
    {
      __break(1u);
      goto LABEL_71;
    }
    v33 = v32;
    sub_100011020(v32 + 32, (uint64_t)v229);
    swift_bridgeObjectRelease(v33);
    v34 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v35 = type metadata accessor for ReviewsContainer(0);
    v36 = swift_dynamicCast(&v228, v229, v34, v35, 6);
    if ((v36 & 1) == 0)
      return;
    v216 = v228;
    v37 = ComponentLayoutOptions.init()(v36);
    if (!v213)
    {
      static ComponentLayoutOptions.isFirstSection.getter(v37);
      sub_10003DB6C(v24, (uint64_t)v21);
      v38 = v220;
      v39 = *(void (**)(char *, uint64_t))(v219 + 8);
      v39(v21, v220);
      v39(v24, v38);
    }
    v213 = a4;
    v40 = (uint64_t *)(a4 + qword_100854060);
    v41 = *v40;
    if (!*v40)
    {
      v208 = sub_10000DF3C(&qword_1007FDEA0);
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v208);
      __break(1u);
      return;
    }
    v42 = v40[1];
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v41);
    v44 = v216;
    ReviewsContainer.adamId.getter(v45);
    v209 = v41;
    v46 = dispatch thunk of AppStateController.stateMachine(forApp:)(v18, ObjectType, v42);
    v48 = v47;
    (*(void (**)(char *, __objc2_meth_list **))(v16 + 8))(v18, p_base_meths);
    v49 = swift_getObjectType();
    dispatch thunk of AppStateMachine.currentState.getter(v49, v48);
    v50 = swift_unknownObjectRelease(v46);
    LOBYTE(v46) = LegacyAppState.hasBeenPurchased.getter(v50);
    v51 = v12[1](v14, v214);
    if ((v46 & 1) != 0)
    {
      LODWORD(v214) = 1;
    }
    else
    {
      v51 = ReviewsContainer.alwaysAllowReviews.getter(v51);
      LODWORD(v214) = v51;
    }
    v12 = v226;
    v14 = v44;
    v52 = ReviewsContainer.ratings.getter(v51);
    v54 = &unk_100850000;
    if (!v52)
    {
      v62 = 1;
      v63 = 1;
      goto LABEL_20;
    }
    v55 = v52;
    v56 = Ratings.status.getter(v53);
    if (v57)
    {
      v58 = v57;
      if (String.count.getter(v56, v57) >= 1)
      {
        v59 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView;
        v60 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                        + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView);
        if (v60)
        {
          v61 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                          + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView);
        }
        else
        {
          v74 = (uint64_t (*)(char *, uint64_t))objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductNoRatingsView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
          v75 = objc_msgSend(v12, "contentView");
          objc_msgSend(v75, "addSubview:", v74);

          v76 = *(uint64_t (**)(char *, uint64_t))((char *)v226 + v59);
          *(uint64_t (**)(char *, uint64_t))((char *)v226 + v59) = v74;
          v61 = v74;

          v12 = v226;
          v60 = 0;
        }
        v77 = *(void **)((char *)v61 + OBJC_IVAR____TtC22SubscribePageExtension20ProductNoRatingsView_statusLabel);
        v78 = v60;
        v79 = String._bridgeToObjectiveC()();
        objc_msgSend(v77, "setText:", v79);

        objc_msgSend(v61, "setNeedsLayout");
        swift_bridgeObjectRelease(v58);
        swift_release(v55);

        v62 = 0;
        v63 = 1;
        v14 = v216;
LABEL_20:
        v80 = *(uint64_t (**)(char *, uint64_t))((char *)v12 + v54[236]);
        p_base_meths = &TodayCardChinLockupListView.base_meths;
        objc_msgSend(v80, "setHidden:", v63);
        v81 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                        + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView);
        if (v81)
          v81 = objc_msgSend(v81, "setHidden:", v62);
        v82 = ReviewsContainer.tapToRate.getter(v81);
        v24 = v222;
        a4 = v213;
        if (v82)
        {
          v84 = v82;
          if ((v214 & 1) != 0)
          {
            v85 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView;
            v86 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                            + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView);
            v87 = swift_getObjectType();
            v88 = v86;
            v89 = (uint64_t)v210;
            v90 = v87;
            v14 = v216;
            dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(1, v90, v223, v91);
            v92 = (uint64_t)v221;
            Shelf.presentationHints.getter(v93);
            sub_1000443E4(v84, v89, a4, v227, v92, (uint64_t)v88);

            (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v92, v218);
            v94 = v89;
            p_base_meths = &TodayCardChinLockupListView.base_meths;
            (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v94, v212);
            objc_msgSend(*(uint64_t (**)(char *, uint64_t))((char *)v12 + v85), "setHidden:", 0);
            v95 = swift_release(v84);
            goto LABEL_27;
          }
          *(_QWORD *)&v83 = swift_release(v82).n128_u64[0];
        }
        objc_msgSend(*(uint64_t (**)(char *, uint64_t))((char *)v12+ OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView), "setHidden:", 1, v83);
LABEL_27:
        v31 = ReviewsContainer.reviews.getter(v95);
        if (!((unint64_t)v31 >> 62))
        {
          v96 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_29;
        }
LABEL_71:
        if (v31 < 0)
          v207 = v31;
        else
          v207 = v31 & 0xFFFFFFFFFFFFFF8;
        v96 = _CocoaArrayWrapper.endIndex.getter(v207);
LABEL_29:
        v97 = v225;
        swift_bridgeObjectRelease(v31);
        v99 = &TodayCardChinLockupListView.base_meths;
        if (v96 <= 0)
        {
          v122 = ReviewsContainer.editorsChoice.getter(v98);
          *(_QWORD *)&v123 = swift_release(v122).n128_u64[0];
          if (!v122
            || (v124 = objc_msgSend(v24, "traitCollection", v123),
                v125 = objc_msgSend(v124, "horizontalSizeClass"),
                v124,
                v125 == (id)1))
          {
            v121 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                             + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf);
            if (v121)
              v121 = objc_msgSend(v121, (SEL)p_base_meths[396], 1, v123);
LABEL_43:
            v144 = ReviewsContainer.editorsChoice.getter(v121);
            if (v144)
            {
              v146 = v144;
              v147 = objc_msgSend(v24, (SEL)v99[471]);
              v148 = objc_msgSend(v147, "horizontalSizeClass");

              if (v148 == (id)1)
              {
                v149 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView;
                v150 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                                 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView);
                if (v150)
                  goto LABEL_49;
                v151 = type metadata accessor for EditorsChoiceCollectionViewCell(0);
                v152 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v151)), "init");
                sub_10004433C(v152);

                v153 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v12, "didTapEditorsChoice");
                v154 = *(uint64_t (**)(char *, uint64_t))((char *)v12 + v149);
                if (v154)
                {
                  v155 = v154;
                  objc_msgSend(v155, "addGestureRecognizer:", v153);

                }
                v150 = *(uint64_t (**)(char *, uint64_t))((char *)v12 + v149);
                if (v150)
                {
LABEL_49:
                  v156 = swift_getObjectType();
                  v157 = v150;
                  v158 = swift_retain(v146);
                  v225 = v149;
                  v159 = v99;
                  v160 = (uint64_t)v210;
                  p_base_meths = &TodayCardChinLockupListView.base_meths;
                  dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(3, v156, v223, v158);
                  v161 = (uint64_t)v221;
                  Shelf.presentationHints.getter(v162);
                  sub_100044A90(v146, v160, v227, v161, v24, v157);

                  v14 = v216;
                  (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v161, v218);
                  v163 = v160;
                  v99 = v159;
                  (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v163, v212);
                  *(_QWORD *)&v164 = swift_release(v146).n128_u64[0];
                  v165 = *(uint64_t (**)(char *, uint64_t))((char *)v12 + v225);
                  if (v165)
                    objc_msgSend(v165, "setHidden:", 0, v164);
                }
                v166 = swift_allocObject(&unk_1007234B0, 24, 7);
                swift_unknownObjectWeakInit(v166 + 16);
                v167 = (void (*)())swift_allocObject(&unk_1007234D8, 64, 7);
                *((_QWORD *)v167 + 2) = v166;
                *((_QWORD *)v167 + 3) = v146;
                v168 = v223;
                v169 = v224;
                *((_QWORD *)v167 + 4) = v224;
                *((_QWORD *)v167 + 5) = v168;
                v170 = v213;
                *((_QWORD *)v167 + 6) = v213;
                *((_QWORD *)v167 + 7) = v14;
                v171 = (void (**)())((char *)v12
                                   + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice);
                v172 = *(uint64_t *)((char *)v12
                                  + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice);
                v173 = *(uint64_t *)((char *)v12
                                  + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice
                                  + 8);
                *v171 = sub_100044CD0;
                v171[1] = v167;
                swift_retain(v14);
                swift_retain(v170);
                swift_unknownObjectRetain(v169);
                v174 = (id)sub_100019310(v172, v173);
                goto LABEL_55;
              }
              v145 = swift_release(v146).n128_u64[0];
            }
            v174 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                             + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView);
            v170 = v213;
            if (v174)
              v174 = objc_msgSend(v174, (SEL)p_base_meths[396], 1, *(double *)&v145);
LABEL_55:
            if ((v214 & 1) != 0
              && ((v175 = ReviewsContainer.writeReviewAction.getter(v174), v176 = swift_release(v175), v175)
               || (v177 = ReviewsContainer.supportAction.getter(v176), v145 = swift_release(v177).n128_u64[0], v177)))
            {
              v178 = (id *)((char *)v12 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView);
              v179 = objc_retain(*(uint64_t (**)(char *, uint64_t))((char *)v12
                                                                           + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView));
              v180 = ReviewsContainer.writeReviewAction.getter(v179);
              v182 = ReviewsContainer.supportAction.getter(v181);
              sub_100536A28(v180, v182, v24, v170);

              v183 = v182;
              v14 = v216;
              swift_release(v183);
              v184 = v180;
              v12 = v226;
              v145 = swift_release(v184).n128_u64[0];
              v185 = 0;
            }
            else
            {
              v178 = (id *)((char *)v12 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView);
              v185 = 1;
            }
            objc_msgSend(*v178, (SEL)p_base_meths[396], v185, *(double *)&v145);
            v187 = ReviewsContainer.reviewSummary.getter(v186);
            if (v187)
            {
              v188 = v187;
              v189 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView;
              v190 = objc_retain(*(uint64_t (**)(char *, uint64_t))((char *)v12
                                                                           + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView));
              sub_10057BBB0(v188, 0, 1);
              objc_msgSend(v190, "setNeedsLayout");

              v12 = v226;
              objc_msgSend(*(uint64_t (**)(char *, uint64_t))((char *)v226 + v189), (SEL)p_base_meths[396], 0);
              *(_QWORD *)&v191 = swift_release(v188).n128_u64[0];
            }
            else
            {
              objc_msgSend(*(uint64_t (**)(char *, uint64_t))((char *)v12+ OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView), (SEL)p_base_meths[396], 1);
            }
            v192 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                             + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsSeparatorView);
            v193 = objc_msgSend(v12, (SEL)v99[471], v191);
            v194 = UITraitCollection.isSizeClassCompact.getter(v193);

            if ((v194 & 1) != 0)
            {
              v195 = type metadata accessor for Feature.iOS(0);
              v230 = v195;
              v231 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
              v196 = sub_1000117C0(v229);
              v197 = enum case for Feature.iOS.review_summarization(_:);
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v195 - 8) + 104))(v196, enum case for Feature.iOS.review_summarization(_:), v195);
              LOBYTE(v195) = isFeatureEnabled(_:)(v229);
              _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v229);
              v198 = v209;
              if ((v195 & 1) != 0)
              {
                v199 = 1;
LABEL_68:
                objc_msgSend(v192, (SEL)p_base_meths[396], v199 & 1);
                v203 = (uint64_t (*)(char *, uint64_t))objc_msgSend(v24, "snapshotPageTraitEnvironment");
                v204 = v226;
                v205 = *(uint64_t *)((char *)v226
                                  + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_pageTraits);
                *(uint64_t (**)(char *, uint64_t))((char *)v226
                                                          + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_pageTraits) = v203;
                swift_unknownObjectRetain(v203);
                objc_msgSend(v204, "setNeedsLayout", swift_unknownObjectRelease(v205).n128_f64[0]);
                swift_release(v14);
                swift_unknownObjectRelease(v198);
                v206 = swift_unknownObjectRelease(v203);
                (*(void (**)(uint64_t, uint64_t, __n128))(v219 + 8))(v227, v220, v206);
                return;
              }
            }
            else
            {
              v197 = enum case for Feature.iOS.review_summarization(_:);
              v198 = v209;
            }
            v200 = type metadata accessor for Feature.iOS(0);
            v230 = v200;
            v231 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
            v201 = sub_1000117C0(v229);
            (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 104))(v201, v197, v200);
            v202 = isFeatureEnabled(_:)(v229);
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v229);
            v199 = v202 ^ 1;
            goto LABEL_68;
          }
        }
        v100 = (uint64_t)v14;
        objc_msgSend(v12, "frame", swift_retain(v14).n128_f64[0]);
        swift_retain(v97);
        v101 = v215;
        v102 = swift_retain(v215);
        v103 = v221;
        Shelf.presentationHints.getter(v102);
        v104 = type metadata accessor for ReviewsHorizontalShelfDataSource(0);
        swift_allocObject(v104, *(unsigned int *)(v104 + 48), *(unsigned __int16 *)(v104 + 52));
        swift_retain(a4);
        v105 = v224;
        swift_unknownObjectRetain(v224);
        swift_unknownObjectRetain(v24);
        v106 = (uint64_t)v103;
        v107 = v225;
        v108 = a4;
        v109 = sub_1004514D0(v100, v225, 2, v101, v106, a4, v105, v223, v24);
        swift_release(v100);
        swift_release(v107);
        swift_release(v101);
        swift_release(v108);
        *(_QWORD *)&v110 = swift_unknownObjectRelease(v105).n128_u64[0];
        v111 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf;
        v112 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                         + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf);
        if (v112)
        {
          v113 = *(_QWORD *)((swift_isaMask & *v112) + 0x60);
          v114 = *(_QWORD *)((char *)v112 + v113);
          *(_QWORD *)((char *)v112 + v113) = v109;
          v115 = v112;
          swift_retain_n(v109, 2);
          v116 = v115;
          swift_release(v114);
          objc_msgSend(v116, "setContentSize:", 0.0, 0.0);
          *((_BYTE *)v116 + *(_QWORD *)((swift_isaMask & *v116) + 0xA0)) = 1;
          objc_msgSend(v116, "invalidateIntrinsicContentSize");
          objc_msgSend(v116, "setNeedsLayout");

          p_base_meths = &TodayCardChinLockupListView.base_meths;
          objc_msgSend(v116, "setHidden:", 0, swift_release(v109).n128_f64[0]);

          v99 = &TodayCardChinLockupListView.base_meths;
        }
        else
        {
          v126 = objc_msgSend(v12, "contentView", v110);
          v127 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
          v128 = LayoutMarginsAware<>.layoutFrame.getter(v127);
          v130 = v129;
          v132 = v131;
          v134 = v133;

          v135 = objc_allocWithZone((Class)sub_10000DF3C(&qword_1007F5300));
          swift_retain(v109);
          v137 = sub_100044588(v136, v128, v130, v132, v134);
          swift_release(v109);
          sub_100044240(v137);

          v138 = *(uint64_t (**)(char *, uint64_t))((char *)v12 + v111);
          p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
          v99 = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
          if (!v138)
            goto LABEL_41;
          v139 = *(_QWORD *)((swift_isaMask & *v138) + 0x98);
          v140 = *((_BYTE *)v138 + v139);
          *((_BYTE *)v138 + v139) = 1;
          if ((v140 & 1) == 0)
          {
            v141 = sub_10000DF3C(&qword_1007F5308);
            v142 = swift_allocObject(v141, 40, 7);
            *(_QWORD *)(v142 + 24) = 0;
            *(_QWORD *)(v142 + 32) = 0;
            swift_unknownObjectUnownedInit(v142 + 16, v138);
            v143 = v138;
            sub_10004499C(v142);

            swift_release(v142);
          }
        }
        v117 = *(uint64_t (**)(char *, uint64_t))((char *)v12 + v111);
        if (v117)
        {
          v118 = v117;
          objc_msgSend(v12, "frame");
          v119 = (uint64_t)v221;
          Shelf.presentationHints.getter(v120);
          v24 = v222;
          sub_1000996F8(v215, v119, v213, v224, v223, v222, v118);
          swift_release(v109);

          v121 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v217 + 8))(v119, v218);
LABEL_42:
          v14 = v216;
          goto LABEL_43;
        }
LABEL_41:
        swift_release(v109);
        v24 = v222;
        goto LABEL_42;
      }
      swift_bridgeObjectRelease(v58);
    }
    v65 = *(uint64_t (**)(char *, uint64_t))((char *)v12
                                                    + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView);
    v64 = *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsView + 8);
    v66 = swift_getObjectType();
    v230 = type metadata accessor for Ratings(0);
    v231 = sub_10000E99C(&qword_1007F5310, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
    v229[0] = v55;
    v67 = swift_getObjectType();
    v68 = v65;
    v69 = swift_retain(v55);
    v70 = v210;
    v71 = v67;
    v14 = v216;
    dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(0, v71, v223, v69);
    v72 = v221;
    Shelf.presentationHints.getter(v73);
    (*(void (**)(_QWORD *, char *, uint64_t, uint64_t, char *, char *, uint64_t))(*(_QWORD *)(v64 + 8) + 80))(v229, v70, v213, v227, v72, v222, v66);
    swift_release(v55);

    (*(void (**)(char *, uint64_t))(v217 + 8))(v72, v218);
    v54 = (_QWORD *)&unk_100850000;
    (*(void (**)(char *, uint64_t))(v211 + 8))(v70, v212);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v229);
    v63 = 0;
    v62 = 1;
    goto LABEL_20;
  }
}

uint64_t sub_10003DB6C(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;

  v31 = a1;
  v4 = sub_10000DF3C(&qword_1007F5318);
  __chkstk_darwin(v4);
  v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - v7;
  v9 = type metadata accessor for ComponentLayoutOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v28 = v2;
  v17(v12, v2, v9, v14);
  v18 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  dispatch thunk of SetAlgebra.intersection(_:)(a2, v9, v18);
  v19 = sub_10000E99C(&qword_1007F5328, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v27 = a2;
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v16, a2, v9, v19) ^ 1;
  v30 = v4;
  v21 = &v8[*(int *)(v4 + 48)];
  *v8 = v20 & 1;
  if ((v20 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    v23 = v27;
    ((void (*)(char *, uint64_t, uint64_t))v17)(v21, v27, v9);
    ((void (*)(char *, uint64_t, uint64_t))v17)(v12, v23, v9);
    dispatch thunk of SetAlgebra.formUnion(_:)(v12, v9, v18);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v21, v16, v9);
  }
  v24 = &v29[*(int *)(v30 + 48)];
  v22(v24, v21, v9);
  v22(v31, v24, v9);
  return v20 & 1;
}

void sub_10003DDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  void *v20;
  void *v21;
  uint64_t ObjectType;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[40];
  uint64_t v43;
  _QWORD v44[5];
  char v45[32];

  v39 = a6;
  v41 = a3;
  v9 = sub_10000DF3C(&qword_1007F5358);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007F7D40);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v34 - v17;
  a1 += 16;
  swift_beginAccess(a1, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v20 = (void *)Strong;
    v38 = a4;
    v21 = *(void **)(Strong + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView);
    if (v21)
    {
      v34 = type metadata accessor for EditorsChoice(0);
      v44[3] = v34;
      v44[4] = sub_10000E99C(&qword_1007F5360, (uint64_t (*)(uint64_t))&type metadata accessor for EditorsChoice, (uint64_t)&protocol conformance descriptor for EditorsChoice);
      v44[0] = a2;
      v35 = v9;
      ObjectType = swift_getObjectType();
      v37 = v21;
      v23 = swift_retain(a2);
      v36 = ObjectType;
      v24 = v38;
      dispatch thunk of ComponentContainerDelegate.mutableState(ofItem:)(3, ObjectType, v38, v23);
      sub_100011020((uint64_t)v44, (uint64_t)v42);
      v25 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
      swift_dynamicCast(&v43, v42, v25, v34, 7);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
      WritableStateLens.init(_:)(v15, &_s5StateVN_7);
      sub_100044CE0();
      v26 = v35;
      WritableStateLens<A>.updateValue(_:)(sub_100141088, v27);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v26);
      v28 = swift_release(v43);
      (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v18, v12, v28);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
      v30 = ReviewsContainer.reviews.getter(v29);
      v31 = v30;
      if ((unint64_t)v30 >> 62)
      {
        if (v30 >= 0)
          v30 &= 0xFFFFFFFFFFFFFF8uLL;
        v32 = _CocoaArrayWrapper.endIndex.getter(v30);
      }
      else
      {
        v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v33 = swift_bridgeObjectRelease(v31);
      dispatch thunk of ComponentContainerDelegate.propagateSelection(ofItem:)(v32, v36, v24, v33);

      v20 = v37;
    }

  }
}

void sub_10003E060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, __n128 a7)
{
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  _QWORD *v130;
  __n128 v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  _QWORD v148[2];
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE v171[32];
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  void *v175;
  __int128 v176;
  __int128 v177;
  void *v178;
  _QWORD v179[5];
  _QWORD v180[5];
  _QWORD v181[5];
  _QWORD v182[6];

  v168 = a6;
  v157 = a5;
  v164 = a4;
  v170 = a3;
  v155 = a1;
  v8 = a7.n128_f64[0];
  v9 = type metadata accessor for ReviewsContainerLayout(0, a7);
  v162 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v161 = (char *)v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for ReviewsContainerLayout.Metrics(0);
  v159 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v160 = (char *)v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v158 = (char *)v148 - v13;
  __chkstk_darwin(v14);
  v167 = (_QWORD *)((char *)v148 - v15);
  v16 = type metadata accessor for Shelf.PresentationHints(0);
  v151 = *(_QWORD *)(v16 - 8);
  v152 = v16;
  __chkstk_darwin(v16);
  v150 = (char *)v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for LegacyAppState(0);
  v156 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v19 = (char *)v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for AdamId(0);
  v20 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v22 = (char *)v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ComponentLayoutOptions(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)v148 - v28;
  v153 = a2;
  v166 = sub_100043DF8();
  if (!v166)
    return;
  v149 = v9;
  v165 = swift_allocBox(v23);
  v30 = ComponentLayoutOptions.init()();
  if (!v155)
  {
    static ComponentLayoutOptions.isFirstSection.getter(v30);
    sub_10003DB6C(v29, (uint64_t)v26);
    v31 = *(void (**)(char *, uint64_t))(v24 + 8);
    v31(v26, v23);
    v31(v29, v23);
  }
  v32 = *(_QWORD *)(v170 + qword_100854060);
  if (!v32)
  {
    v147 = sub_10000DF3C(&qword_1007FDEA0);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v147);
    __break(1u);
    return;
  }
  v33 = *(_QWORD *)(v170 + qword_100854060 + 8);
  ObjectType = swift_getObjectType();
  v35 = swift_unknownObjectRetain(v32);
  v36 = v166;
  ReviewsContainer.adamId.getter(v35);
  v155 = v32;
  v37 = dispatch thunk of AppStateController.stateMachine(forApp:)(v22, ObjectType, v33);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v154);
  v40 = swift_getObjectType();
  dispatch thunk of AppStateMachine.currentState.getter(v40, v39);
  v41 = swift_unknownObjectRelease(v37);
  LOBYTE(v37) = LegacyAppState.hasBeenPurchased.getter(v41);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v19, v163);
  v43 = v168;
  v44 = v169;
  if ((v37 & 1) != 0)
  {
    LODWORD(v163) = 1;
  }
  else
  {
    v42 = ReviewsContainer.alwaysAllowReviews.getter(v42);
    LODWORD(v163) = v42;
  }
  v45 = v164;
  v46 = v157;
  v47 = ReviewsContainer.ratings.getter(v42);
  if (v47)
  {
    v49 = v47;
    v50 = Ratings.status.getter(v48);
    if (v51)
    {
      v52 = v50;
      v53 = v51;
      if (String.count.getter(v50, v51) >= 1)
      {
        v54 = (_QWORD *)swift_allocObject(&unk_1007235C8, 40, 7);
        v54[2] = v52;
        v54[3] = v53;
        v54[4] = v43;
        v55 = type metadata accessor for LayoutViewPlaceholder(0);
        swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
        swift_unknownObjectRetain(v43);
        v57 = LayoutViewPlaceholder.init(measureWith:)(sub_1000451D0, v54, v56);
        swift_release(v49);
        goto LABEL_17;
      }
      swift_bridgeObjectRelease(v53);
    }
    v60 = (_QWORD *)swift_allocObject(&unk_1007235A0, 72, 7);
    v60[2] = v148[1];
    v60[3] = v49;
    v60[4] = v45;
    v60[5] = v46;
    v61 = v170;
    v62 = v165;
    v60[6] = v170;
    v60[7] = v62;
    v60[8] = v43;
    v63 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
    swift_unknownObjectRetain(v43);
    swift_unknownObjectRetain(v45);
    swift_retain(v61);
    v64 = swift_retain(v62);
    v58 = LayoutViewPlaceholder.init(measureWith:)(sub_100045190, v60, v64);
  }
  else
  {
    v59 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
    v58 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  }
  v57 = v58;
LABEL_17:
  v65 = ReviewsContainer.ratings.getter(v58);
  v67 = v65;
  if (v65)
    v66 = swift_release(v65);
  v68 = LayoutViewPlaceholder.isHidden.setter(v67 == 0, v66);
  v69 = ReviewsContainer.tapToRate.getter(v68);
  v157 = v57;
  if (v69)
  {
    v70 = v69;
    if ((v163 & 1) != 0)
    {
      v71 = (_QWORD *)swift_allocObject(&unk_100723578, 64, 7);
      v71[2] = v70;
      v71[3] = v45;
      v72 = v170;
      v71[4] = v46;
      v71[5] = v72;
      v73 = v165;
      v71[6] = v165;
      v71[7] = v43;
      v74 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
      swift_unknownObjectRetain(v43);
      swift_unknownObjectRetain(v45);
      swift_retain(v72);
      v75 = swift_retain(v73);
      v164 = LayoutViewPlaceholder.init(measureWith:)(sub_10004512C, v71, v75);
      goto LABEL_24;
    }
    swift_release(v69);
  }
  v77 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
  v78 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v79 = swift_retain(v78);
  LayoutViewPlaceholder.isHidden.setter(1, v79);
  v164 = v78;
  v76 = swift_release(v78);
LABEL_24:
  v80 = ReviewsContainer.reviews.getter(v76);
  v81 = v80;
  if ((unint64_t)v80 >> 62)
  {
    if (v80 >= 0)
      v80 &= 0xFFFFFFFFFFFFFF8uLL;
    v82 = _CocoaArrayWrapper.endIndex.getter(v80);
  }
  else
  {
    v82 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v84 = swift_bridgeObjectRelease(v81);
  if (v82 > 0
    || (v92 = ReviewsContainer.editorsChoice.getter(v83), *(_QWORD *)&v93 = swift_release(v92).n128_u64[0], v92)
    && (v94 = objc_msgSend(v43, "traitCollection", v93),
        v95 = objc_msgSend(v94, "horizontalSizeClass"),
        v94,
        v95 != (id)1))
  {
    v85 = (uint64_t)v150;
    v86 = v153;
    Shelf.presentationHints.getter(v84);
    swift_getObjectType();
    v87 = sub_100099A54(v8, v36, v86, v85, v43);
    v89 = v88;
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v85, v152);
    v90 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
    v91 = LayoutViewPlaceholder.init(representing:)(v87, v89);
    v156 = v91;
  }
  else
  {
    v156 = 0;
  }
  v96 = ReviewsContainer.editorsChoice.getter(v91);
  if (v96)
  {
    v97 = v96;
    v98 = objc_msgSend(v43, "traitCollection");
    v99 = objc_msgSend(v98, "horizontalSizeClass");

    if (v99 == (id)1)
    {
      v100 = (_QWORD *)swift_allocObject(&unk_100723550, 64, 7);
      v100[2] = v97;
      v100[3] = v45;
      v101 = v170;
      v100[4] = v46;
      v100[5] = v101;
      v102 = v165;
      v100[6] = v165;
      v100[7] = v43;
      v103 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v103, *(unsigned int *)(v103 + 48), *(unsigned __int16 *)(v103 + 52));
      swift_unknownObjectRetain(v43);
      swift_unknownObjectRetain(v45);
      swift_retain(v101);
      v104 = swift_retain(v102);
      v170 = LayoutViewPlaceholder.init(measureWith:)(sub_100044D74, v100, v104);
      if ((v163 & 1) == 0)
        goto LABEL_40;
      goto LABEL_37;
    }
    swift_release(v97);
  }
  v170 = 0;
  if ((v163 & 1) == 0)
  {
LABEL_40:
    v113 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v113, *(unsigned int *)(v113 + 48), *(unsigned __int16 *)(v113 + 52));
    v111 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    v114 = swift_retain(v111);
    LayoutViewPlaceholder.isHidden.setter(1, v114);
    v112 = swift_release(v111);
    goto LABEL_41;
  }
LABEL_37:
  v105 = ReviewsContainer.writeReviewAction.getter();
  v106 = swift_release(v105);
  if (!v105)
  {
    v107 = ReviewsContainer.supportAction.getter(v106);
    swift_release(v107);
    if (!v107)
      goto LABEL_40;
  }
  v108 = swift_allocObject(&unk_100723528, 32, 7);
  *(_QWORD *)(v108 + 16) = v36;
  *(_QWORD *)(v108 + 24) = v43;
  v109 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v109, *(unsigned int *)(v109 + 48), *(unsigned __int16 *)(v109 + 52));
  swift_unknownObjectRetain(v43);
  v110 = swift_retain(v36);
  v111 = LayoutViewPlaceholder.init(measureWith:)(sub_100044D68, v108, v110);
LABEL_41:
  v115 = ReviewsContainer.reviewSummary.getter(v112);
  if (v115)
  {
    v116 = v115;
    v117 = swift_allocObject(&unk_100723500, 32, 7);
    *(_QWORD *)(v117 + 16) = v116;
    *(_QWORD *)(v117 + 24) = v43;
    v118 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
    swift_unknownObjectRetain(v43);
    v120 = LayoutViewPlaceholder.init(measureWith:)(sub_100044D30, v117, v119);
  }
  else
  {
    v121 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v121, *(unsigned int *)(v121 + 48), *(unsigned __int16 *)(v121 + 52));
    v120 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    v122 = swift_retain(v120);
    LayoutViewPlaceholder.isHidden.setter(1, v122);
    swift_release(v120);
  }
  v123 = qword_1007F0BC8;
  swift_unknownObjectRetain(v43);
  v124 = v43;
  if (v123 != -1)
    swift_once(&qword_1007F0BC8, sub_10003BAA8);
  v125 = sub_1000117A8(v44, (uint64_t)qword_100850740);
  v126 = v158;
  v127 = v159;
  v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v159 + 16);
  v129 = v128(v158, v125, v44);
  __chkstk_darwin(v129);
  v148[-2] = v124;
  v130 = v167;
  Copyable.copyWithOverrides(in:)(v167, sub_100044D24, &v148[-4], v44, &protocol witness table for ReviewsContainerLayout.Metrics);
  v163 = *(_QWORD *)(v127 + 8);
  ((void (*)(char *, uint64_t))v163)(v126, v44);
  v131 = swift_unknownObjectRelease(v124);
  v132 = v160;
  ((void (*)(char *, _QWORD *, uint64_t, __n128))v128)(v160, v130, v44, v131);
  v133 = type metadata accessor for LayoutViewPlaceholder(0);
  v182[3] = v133;
  v182[4] = &protocol witness table for LayoutViewPlaceholder;
  v135 = v156;
  v134 = v157;
  v181[4] = &protocol witness table for LayoutViewPlaceholder;
  v182[0] = v157;
  v181[3] = v133;
  v180[4] = &protocol witness table for LayoutViewPlaceholder;
  v181[0] = v164;
  v180[3] = v133;
  v180[0] = v111;
  v179[3] = v133;
  v179[4] = &protocol witness table for LayoutViewPlaceholder;
  v179[0] = v120;
  if (v156)
  {
    *((_QWORD *)&v177 + 1) = v133;
    v178 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v176 = v156;
  }
  else
  {
    v178 = 0;
    v176 = 0u;
    v177 = 0u;
  }
  v136 = v170;
  v137 = v168;
  if (v170)
  {
    *((_QWORD *)&v174 + 1) = v133;
    v175 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v173 = v170;
  }
  else
  {
    v175 = 0;
    v173 = 0u;
    v174 = 0u;
  }
  v172 = 0;
  memset(v171, 0, sizeof(v171));
  swift_retain(v156);
  swift_retain(v136);
  swift_retain(v134);
  v138 = v164;
  swift_retain(v164);
  swift_retain(v111);
  swift_retain(v120);
  v139 = v120;
  v140 = v111;
  v141 = v136;
  v142 = v161;
  ReviewsContainerLayout.init(metrics:ratingsView:tapToRateView:actionsView:reviewSummaryView:reviewsShelf:editorsChoiceView:ratingsSeparatorView:)(v132, v182, v181, v180, v179, &v176, &v173, v171);
  v143 = sub_10000E99C((unint64_t *)&unk_1007F5370, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsContainerLayout, (uint64_t)&protocol conformance descriptor for ReviewsContainerLayout);
  v144 = v137;
  v145 = v149;
  dispatch thunk of Measurable.measurements(fitting:in:)(v144, v149, v143, v8, 1.79769313e308);
  swift_release(v134);
  swift_release(v138);
  swift_release(v135);
  swift_release(v141);
  swift_release(v140);
  swift_release(v139);
  swift_release(v166);
  v146 = swift_unknownObjectRelease(v155);
  (*(void (**)(char *, uint64_t, __n128))(v162 + 8))(v142, v145, v146);
  ((void (*)(_QWORD *, uint64_t))v163)(v167, v169);
  swift_release(v165);
}

double sub_10003EC18(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  __n128 v11;

  type metadata accessor for ProductNoRatingsView();
  swift_getObjectType();
  v11.n128_f64[0] = a1;
  return sub_1000E1D50(a4, a5, a6, v11, a2);
}

double sub_10003EC84(double a1, double a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  __n128 v29;
  char *v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _BYTE v36[24];

  v34 = a7;
  v35 = a5;
  v14 = type metadata accessor for ComponentLayoutOptions(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_10080FCC0);
  __chkstk_darwin(v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F5380);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = swift_projectBox(a9, v23);
  ObjectType = swift_getObjectType();
  dispatch thunk of ComponentContainerDelegate.state(ofItem:)(0, ObjectType, v34);
  v28 = type metadata accessor for NilState(0);
  StateLens.init(_:)(v20, v28);
  v29 = swift_beginAccess(v26, v36, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v26, v14, v29);
  v30 = (char *)swift_getObjectType();
  v31 = sub_1000451DC(v35, a1, a2, (uint64_t)v25, (uint64_t)v17, a10, v30);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  return v31;
}

double sub_10003EE58(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  double v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v33 = a6;
  v34 = a4;
  v13 = type metadata accessor for ComponentLayoutOptions(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C(&qword_10080FCC0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F5380);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_projectBox(a8, v22);
  ObjectType = swift_getObjectType();
  dispatch thunk of ComponentContainerDelegate.state(ofItem:)(1, ObjectType, v33);
  v27 = type metadata accessor for NilState(0);
  StateLens.init(_:)(v19, v27);
  v28 = swift_beginAccess(v25, v35, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, v25, v13, v28);
  swift_getObjectType();
  v29.n128_f64[0] = a1;
  v30 = sub_100045864(v29, a2, v34, (uint64_t)v24, (uint64_t)v16, a9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  return v30;
}

double sub_10003F02C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  __n128 v27;
  double v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v31 = a6;
  v32 = a4;
  v13 = type metadata accessor for ComponentLayoutOptions(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C(&qword_10080FCC0);
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F5390);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_projectBox(a8, v22);
  ObjectType = swift_getObjectType();
  dispatch thunk of ComponentContainerDelegate.state(ofItem:)(3, ObjectType, v31);
  StateLens.init(_:)(v19, &_s5StateVN_7);
  v27 = swift_beginAccess(v25, v33, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, v25, v13, v27);
  swift_getObjectType();
  v28 = sub_10054BF28(a1, a2, v32, (uint64_t)v24, (uint64_t)v16, a9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  return v28;
}

double sub_10003F1FC(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;

  v8 = ReviewsContainer.writeReviewAction.getter();
  v9 = ReviewsContainer.supportAction.getter();
  type metadata accessor for ProductReviewActionsView(0);
  if (!v8)
  {
    v11 = 0;
    v13 = 0;
    if (v9)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    v17 = 0;
    goto LABEL_6;
  }
  v10 = swift_retain(v8);
  v11 = Action.title.getter(v10);
  v13 = v12;
  swift_release(v8);
  if (!v9)
    goto LABEL_5;
LABEL_3:
  v14 = swift_retain(v9);
  v15 = Action.title.getter(v14);
  v17 = v16;
  swift_release(v9);
LABEL_6:
  swift_getObjectType();
  v18 = sub_1003CC6A0(v11, v13, v15, v17, a5, a1, a2);
  swift_release(v9);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v13);
  swift_release(v8);
  return v18;
}

double sub_10003F328(int a1, void *a2, id a3, double a4, double a5)
{
  id v8;
  double v9;

  v8 = objc_msgSend(a3, "traitCollection");
  v9 = sub_1001DC184(a2, 0, v8, a4, a5);

  return v9;
}

void sub_10003F3A4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  objc_class *v41;
  char *v42;
  double *v43;
  id v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __n128 v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, char *, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  void (**v121)(char *, uint64_t);
  BOOL v122;
  uint64_t v123;
  char *v124;
  double v125;
  __n128 v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (**v132)(char *, uint64_t);
  __n128 v133;
  double v134;
  double v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (**v140)(char *, uint64_t);
  id v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (**v155)(char *, uint64_t);
  uint64_t v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (**v164)(char *, uint64_t);
  __n128 v165;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  __n128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (**v174)(char *, uint64_t);
  __n128 v175;
  uint64_t v176;
  uint64_t v177;
  __n128 v178;
  uint64_t v179;
  void (**v180)(char *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t (*v185)(char *, uint64_t, uint64_t);
  uint64_t v186;
  _QWORD *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  double v196;
  double v197;
  double v198;
  uint64_t v199;
  void (**v200)(char *, uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t (*v208)(char *, uint64_t);
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  double (*v214)(char *, uint64_t);
  char *v215;
  uint64_t v216;
  char *v217;
  void (**v218)(char *, uint64_t);
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t (**v236)(_QWORD, uint64_t);
  uint64_t v237;
  uint64_t v238;
  _BYTE v239[32];
  uint64_t v240;
  __int128 v241;
  __int128 v242;
  void *v243;
  __int128 v244;
  __int128 v245;
  void *v246;
  _QWORD v247[5];
  _QWORD v248[5];
  _QWORD v249[5];
  _QWORD v250[5];
  objc_super v251;

  v235 = a2;
  v4 = type metadata accessor for ReviewsContainerLayout(0, a3);
  v224 = *(_QWORD *)(v4 - 8);
  v225 = v4;
  __chkstk_darwin(v4);
  v223 = (char *)&v203 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = type metadata accessor for ReviewsContainerLayout.Metrics(0);
  v221 = *(_QWORD *)(v234 - 8);
  __chkstk_darwin(v234);
  v222 = (char *)&v203 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v220 = (char *)&v203 - v8;
  __chkstk_darwin(v9);
  v233 = (uint64_t *)((char *)&v203 - v10);
  v11 = type metadata accessor for Shelf.PresentationHints(0);
  v212 = *(_QWORD *)(v11 - 8);
  v213 = v11;
  __chkstk_darwin(v11);
  v211 = (char *)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ShelfLayoutContext(0);
  v227 = *(_QWORD *)(v13 - 8);
  v228 = v13;
  __chkstk_darwin(v13);
  v226 = v14;
  v230 = (char *)&v203 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LegacyAppState(0);
  v236 = *(uint64_t (***)(_QWORD, uint64_t))(v15 - 8);
  v237 = v15;
  __chkstk_darwin(v15);
  v231 = (char *)&v203 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AdamId(0);
  v218 = *(void (***)(char *, uint64_t))(v17 - 8);
  v219 = v17;
  __chkstk_darwin(v17);
  v217 = (char *)&v203 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ComponentLayoutOptions(0);
  v207 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v205 = (char *)&v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v204 = (char *)&v203 - v22;
  v23 = type metadata accessor for PageGrid(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v203 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v203 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v29);
  ReadOnlyLens.value.getter(v250, v27);
  v32 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  v209 = v31;
  v210 = v27;
  v208 = v32;
  v32(v31, v27);
  v33 = v250[0];
  v34 = sub_100043DF8();
  swift_release(v33);
  v238 = v34;
  if (v34)
  {
    v36 = ShelfLayoutContext.contentPageGrid.getter(v35);
    v37 = PageGrid.containerWidth.getter(v36);
    v38 = *(double (**)(char *, uint64_t))(v24 + 8);
    v215 = v26;
    v216 = v23;
    v214 = v38;
    v39 = ((uint64_t (*)(char *, uint64_t))v38)(v26, v23);
    v40 = ShelfLayoutContext.traitCollection.getter(v39);
    v41 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    v42 = (char *)objc_allocWithZone(v41);
    v43 = (double *)&v42[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
    *v43 = v37;
    v43[1] = 1.79769313e308;
    *(_QWORD *)&v42[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v40;
    v251.receiver = v42;
    v251.super_class = v41;
    v44 = objc_msgSendSuper2(&v251, "init");
    v232 = swift_allocBox(v19);
    ComponentLayoutOptions.init()(v232);
    v46 = a1;
    if (!ShelfLayoutContext.index.getter(v45))
    {
      v47 = (uint64_t)v205;
      static ComponentLayoutOptions.isFirstSection.getter(0);
      v48 = v204;
      sub_10003DB6C(v204, v47);
      v49 = *(void (**)(uint64_t, uint64_t))(v207 + 8);
      v49(v47, v19);
      v49((uint64_t)v48, v19);
    }
    v50 = *(_QWORD *)(v235 + qword_100854060);
    if (v50)
    {
      v51 = *(_QWORD *)(v235 + qword_100854060 + 8);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v50);
      v53 = v217;
      v54 = v238;
      ReviewsContainer.adamId.getter(v55);
      v56 = dispatch thunk of AppStateController.stateMachine(forApp:)(v53, ObjectType, v51);
      v58 = v57;
      v218[1](v53, v219);
      v59 = swift_getObjectType();
      v60 = v231;
      dispatch thunk of AppStateMachine.currentState.getter(v59, v58);
      v61 = swift_unknownObjectRelease(v56);
      LOBYTE(v56) = LegacyAppState.hasBeenPurchased.getter(v61);
      v62 = ((uint64_t (**)(char *, uint64_t))v236)[1](v60, v237);
      if ((v56 & 1) != 0)
      {
        LODWORD(v63) = 1;
      }
      else
      {
        v62 = ReviewsContainer.alwaysAllowReviews.getter(v62);
        LODWORD(v63) = v62;
      }
      v64 = ReviewsContainer.ratings.getter(v62);
      v229 = v46;
      v207 = v50;
      LODWORD(v219) = v63;
      if (v64)
      {
        v66 = v64;
        v67 = Ratings.status.getter(v65);
        if (v68)
        {
          v70 = v67;
          v71 = v68;
          if (String.count.getter(v67, v68) >= 1)
          {
            v72 = (_QWORD *)swift_allocObject(&unk_1007236B8, 40, 7);
            v72[2] = v70;
            v72[3] = v71;
            v72[4] = v44;
            v73 = type metadata accessor for LayoutViewPlaceholder(0);
            swift_allocObject(v73, *(unsigned int *)(v73 + 48), *(unsigned __int16 *)(v73 + 52));
            v74 = v44;
            v237 = LayoutViewPlaceholder.init(measureWith:)(sub_1000457E8, v72, v75);
            swift_release(v66);
            goto LABEL_17;
          }
          v69 = swift_bridgeObjectRelease(v71);
        }
        v236 = (uint64_t (**)(_QWORD, uint64_t))v44;
        v78 = v227;
        v79 = v230;
        v80 = v46;
        v81 = v228;
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v227 + 16))(v230, v80, v228, v69);
        v82 = *(unsigned __int8 *)(v78 + 80);
        v83 = (v82 + 32) & ~v82;
        v84 = (v226 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
        v63 = (v84 + 15) & 0xFFFFFFFFFFFFFFF8;
        v85 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
        v86 = swift_allocObject(&unk_100723690, v85 + 8, v82 | 7);
        *(_QWORD *)(v86 + 16) = v206;
        *(_QWORD *)(v86 + 24) = v66;
        v87 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 32);
        v44 = v236;
        v88 = v79;
        v54 = v238;
        v87(v86 + v83, v88, v81);
        v89 = v235;
        *(_QWORD *)(v86 + v84) = v235;
        v90 = v232;
        *(_QWORD *)(v86 + v63) = v232;
        LOBYTE(v63) = v219;
        *(_QWORD *)(v86 + v85) = v44;
        v91 = type metadata accessor for LayoutViewPlaceholder(0);
        swift_allocObject(v91, *(unsigned int *)(v91 + 48), *(unsigned __int16 *)(v91 + 52));
        v92 = v44;
        v93 = v89;
        v46 = v229;
        swift_retain(v93);
        v94 = swift_retain(v90);
        v76 = LayoutViewPlaceholder.init(measureWith:)(sub_100045738, v86, v94);
      }
      else
      {
        v77 = type metadata accessor for LayoutViewPlaceholder(0);
        swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
        v76 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
      }
      v237 = v76;
LABEL_17:
      v95 = ReviewsContainer.ratings.getter(v76);
      v97 = v95;
      if (v95)
        v96 = swift_release(v95);
      v98 = LayoutViewPlaceholder.isHidden.setter(v97 == 0, v96);
      v99 = ReviewsContainer.tapToRate.getter(v98);
      if (v99)
      {
        v100 = v99;
        if ((v63 & 1) != 0)
        {
          v236 = (uint64_t (**)(_QWORD, uint64_t))v44;
          v101 = v227;
          v102 = v230;
          v103 = v46;
          v104 = v228;
          (*(void (**)(char *, uint64_t, uint64_t))(v227 + 16))(v230, v103, v228);
          v105 = *(unsigned __int8 *)(v101 + 80);
          v106 = (v105 + 24) & ~v105;
          v107 = (v226 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
          v63 = (v107 + 15) & 0xFFFFFFFFFFFFFFF8;
          v108 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
          v109 = swift_allocObject(&unk_100723668, v108 + 8, v105 | 7);
          *(_QWORD *)(v109 + 16) = v100;
          v110 = *(void (**)(uint64_t, char *, uint64_t))(v101 + 32);
          v44 = v236;
          v111 = v102;
          v54 = v238;
          v110(v109 + v106, v111, v104);
          v112 = v235;
          *(_QWORD *)(v109 + v107) = v235;
          v113 = v232;
          *(_QWORD *)(v109 + v63) = v232;
          LOBYTE(v63) = v219;
          *(_QWORD *)(v109 + v108) = v44;
          v114 = type metadata accessor for LayoutViewPlaceholder(0);
          swift_allocObject(v114, *(unsigned int *)(v114 + 48), *(unsigned __int16 *)(v114 + 52));
          v115 = v44;
          v116 = v112;
          v46 = v229;
          swift_retain(v116);
          v117 = swift_retain(v113);
          v231 = (char *)LayoutViewPlaceholder.init(measureWith:)(sub_1000455E0, v109, v117);
          goto LABEL_24;
        }
        swift_release(v99);
      }
      v118 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
      v119 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
      v120 = swift_retain(v119);
      LayoutViewPlaceholder.isHidden.setter(1, v120);
      v231 = (char *)v119;
      swift_release(v119);
LABEL_24:
      v121 = (void (**)(char *, uint64_t))v44;
      v122 = sub_100042A14(v54, v121);

      if (v122)
      {
        v124 = v215;
        ShelfLayoutContext.contentPageGrid.getter(v123);
        v125 = PageGrid.componentMeasuringSize(spanning:)(1.0);
        v126.n128_f64[0] = v214(v124, v216);
        v127 = v209;
        ShelfLayoutContext.shelf.getter(v126);
        v128 = v210;
        ReadOnlyLens.value.getter(v250, v210);
        v129 = v208(v127, v128);
        v130 = v250[0];
        v131 = (uint64_t)v211;
        ShelfLayoutContext.shelfPresentationHints.getter(v129);
        v132 = v121;
        v133.n128_f64[0] = v125;
        v134 = sub_100043E94(v133, v54, v130, v131, v132);
        v136 = v135;
        swift_release(v130);

        (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v131, v213);
        v137 = type metadata accessor for LayoutViewPlaceholder(0);
        swift_allocObject(v137, *(unsigned int *)(v137 + 48), *(unsigned __int16 *)(v137 + 52));
        v123 = LayoutViewPlaceholder.init(representing:)(v134, v136);
        v236 = (uint64_t (**)(_QWORD, uint64_t))v123;
      }
      else
      {
        v236 = 0;
      }
      v138 = ReviewsContainer.editorsChoice.getter(v123);
      if (v138)
      {
        v139 = v138;
        v140 = v121;
        v141 = objc_msgSend(v140, "traitCollection");
        v142 = objc_msgSend(v141, "horizontalSizeClass");

        if (v142 == (id)1)
        {
          v218 = v121;
          v143 = v227;
          v144 = v228;
          (*(void (**)(char *, uint64_t, uint64_t))(v227 + 16))(v230, v46, v228);
          v145 = *(unsigned __int8 *)(v143 + 80);
          v146 = (v145 + 24) & ~v145;
          v147 = (v226 + v146 + 7) & 0xFFFFFFFFFFFFFFF8;
          v148 = (v147 + 15) & 0xFFFFFFFFFFFFFFF8;
          v149 = (v148 + 15) & 0xFFFFFFFFFFFFFFF8;
          v150 = swift_allocObject(&unk_100723640, v149 + 8, v145 | 7);
          *(_QWORD *)(v150 + 16) = v139;
          v151 = *(void (**)(uint64_t, char *, uint64_t))(v143 + 32);
          v121 = v218;
          v151(v150 + v146, v230, v144);
          v152 = v235;
          *(_QWORD *)(v150 + v147) = v235;
          v153 = v232;
          *(_QWORD *)(v150 + v148) = v232;
          *(_QWORD *)(v150 + v149) = v140;
          v54 = v238;
          v154 = type metadata accessor for LayoutViewPlaceholder(0);
          swift_allocObject(v154, *(unsigned int *)(v154 + 48), *(unsigned __int16 *)(v154 + 52));
          v155 = v140;
          swift_retain(v152);
          v156 = v153;
          LOBYTE(v153) = v219;
          v157 = swift_retain(v156);
          v138 = LayoutViewPlaceholder.init(measureWith:)(sub_100045518, v150, v157);
          v158 = v138;
          if ((v153 & 1) == 0)
            goto LABEL_36;
LABEL_33:
          v159 = ReviewsContainer.writeReviewAction.getter(v138);
          v160 = swift_release(v159);
          if (v159 || (v161 = ReviewsContainer.supportAction.getter(v160), swift_release(v161), v161))
          {
            v162 = swift_allocObject(&unk_100723618, 32, 7);
            *(_QWORD *)(v162 + 16) = v54;
            *(_QWORD *)(v162 + 24) = v121;
            v163 = type metadata accessor for LayoutViewPlaceholder(0);
            swift_allocObject(v163, *(unsigned int *)(v163 + 48), *(unsigned __int16 *)(v163 + 52));
            v164 = v121;
            v165 = swift_retain(v54);
            v166 = LayoutViewPlaceholder.init(measureWith:)(sub_10004550C, v162, v165);
            goto LABEL_37;
          }
LABEL_36:
          v168 = type metadata accessor for LayoutViewPlaceholder(0);
          swift_allocObject(v168, *(unsigned int *)(v168 + 48), *(unsigned __int16 *)(v168 + 52));
          v166 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
          v169 = swift_retain(v166);
          LayoutViewPlaceholder.isHidden.setter(1, v169);
          v167 = swift_release(v166);
LABEL_37:
          v170 = ReviewsContainer.reviewSummary.getter(v167);
          if (v170)
          {
            v171 = v170;
            v172 = swift_allocObject(&unk_1007235F0, 32, 7);
            *(_QWORD *)(v172 + 16) = v171;
            *(_QWORD *)(v172 + 24) = v121;
            v173 = type metadata accessor for LayoutViewPlaceholder(0);
            swift_allocObject(v173, *(unsigned int *)(v173 + 48), *(unsigned __int16 *)(v173 + 52));
            v174 = v121;
            v235 = LayoutViewPlaceholder.init(measureWith:)(sub_1000454A8, v172, v175);
          }
          else
          {
            v176 = type metadata accessor for LayoutViewPlaceholder(0);
            swift_allocObject(v176, *(unsigned int *)(v176 + 48), *(unsigned __int16 *)(v176 + 52));
            v177 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
            v178 = swift_retain(v177);
            LayoutViewPlaceholder.isHidden.setter(1, v178);
            v235 = v177;
            swift_release(v177);
          }
          v179 = qword_1007F0BC8;
          v180 = v121;
          if (v179 != -1)
            swift_once(&qword_1007F0BC8, sub_10003BAA8);
          v181 = v234;
          v182 = sub_1000117A8(v234, (uint64_t)qword_100850740);
          v183 = v220;
          v184 = v221;
          v185 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v221 + 16);
          v186 = v185(v220, v182, v181);
          __chkstk_darwin(v186);
          *(&v203 - 2) = (uint64_t)v180;
          v187 = v233;
          Copyable.copyWithOverrides(in:)(v233, sub_1000461AC, &v203 - 4, v181, &protocol witness table for ReviewsContainerLayout.Metrics);
          v230 = *(char **)(v184 + 8);
          ((void (*)(char *, uint64_t))v230)(v183, v181);

          v188 = v222;
          v185(v222, (uint64_t)v187, v181);
          v189 = type metadata accessor for LayoutViewPlaceholder(0);
          v250[3] = v189;
          v250[4] = &protocol witness table for LayoutViewPlaceholder;
          v249[4] = &protocol witness table for LayoutViewPlaceholder;
          v250[0] = v237;
          v249[3] = v189;
          v248[4] = &protocol witness table for LayoutViewPlaceholder;
          v249[0] = v231;
          v248[3] = v189;
          v248[0] = v166;
          v247[3] = v189;
          v247[4] = &protocol witness table for LayoutViewPlaceholder;
          v247[0] = v235;
          if (v236)
          {
            *((_QWORD *)&v245 + 1) = v189;
            v246 = &protocol witness table for LayoutViewPlaceholder;
            *(_QWORD *)&v244 = v236;
            v191 = v215;
            v190 = v216;
            if (v158)
            {
LABEL_44:
              *((_QWORD *)&v242 + 1) = v189;
              v243 = &protocol witness table for LayoutViewPlaceholder;
              *(_QWORD *)&v241 = v158;
LABEL_47:
              v228 = v158;
              v240 = 0;
              memset(v239, 0, sizeof(v239));
              swift_retain(v236);
              swift_retain(v158);
              v192 = v237;
              swift_retain(v237);
              v193 = v231;
              swift_retain(v231);
              swift_retain(v166);
              swift_retain(v235);
              v194 = v223;
              v195 = ReviewsContainerLayout.init(metrics:ratingsView:tapToRateView:actionsView:reviewSummaryView:reviewsShelf:editorsChoiceView:ratingsSeparatorView:)(v188, v250, v249, v248, v247, &v244, &v241, v239);
              ShelfLayoutContext.contentPageGrid.getter(v195);
              v196 = PageGrid.componentMeasuringSize(spanning:)(1.0);
              v198 = v197;
              v214(v191, v190);
              v199 = sub_10000E99C((unint64_t *)&unk_1007F5370, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsContainerLayout, (uint64_t)&protocol conformance descriptor for ReviewsContainerLayout);
              v200 = v180;
              v201 = v225;
              dispatch thunk of Measurable.measurements(fitting:in:)(v200, v225, v199, v196, v198);
              swift_release(v192);
              swift_release(v193);
              swift_release(v236);
              swift_release(v228);
              swift_release(v166);
              swift_release(v235);
              swift_release(v238);
              swift_unknownObjectRelease(v207);

              (*(void (**)(char *, uint64_t))(v224 + 8))(v194, v201);
              ((void (*)(_QWORD *, uint64_t))v230)(v233, v234);
              swift_release(v232);
              return;
            }
          }
          else
          {
            v246 = 0;
            v244 = 0u;
            v245 = 0u;
            v191 = v215;
            v190 = v216;
            if (v158)
              goto LABEL_44;
          }
          v243 = 0;
          v241 = 0u;
          v242 = 0u;
          goto LABEL_47;
        }
        swift_release(v139);
      }
      v158 = 0;
      if ((v63 & 1) == 0)
        goto LABEL_36;
      goto LABEL_33;
    }
    v202 = sub_10000DF3C(&qword_1007FDEA0);
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v202);
    __break(1u);
  }
}

double sub_100040244(__n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  uint64_t v30;

  v10 = a1.n128_f64[0];
  v11 = type metadata accessor for DynamicTextAppearance(0, a1);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v30 - v17;
  v19 = type metadata accessor for LabelPlaceholder(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  DynamicTextAppearance.init()(v23);
  if (qword_1007F23C8 != -1)
    swift_once(&qword_1007F23C8, sub_100414BCC);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100855040);
  DynamicTextAppearance.withFontUseCase(_:)(v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v26 = LabelPlaceholder.Options.init(rawValue:)(0);
  swift_bridgeObjectRetain(a5);
  v27 = objc_msgSend(a6, "traitCollection", LabelPlaceholder.init(_:with:where:)(a4, a5, v18, v26).n128_f64[0]);
  v28 = LabelPlaceholder.measure(toFit:with:)(v27, v10, a2);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  return v28;
}

double sub_100040418(double a1, double a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  double v41;
  double v42;
  __n128 v43;
  double v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v66 = a5;
  v12 = sub_10000DF3C(&qword_1008027B0);
  v13 = __chkstk_darwin(v12);
  v59 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ProductRatingsLayout.Metrics(0, v13);
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DynamicTextAppearance(0, v16);
  v62 = *(_QWORD *)(v19 - 8);
  v63 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v58 - v24;
  v26 = type metadata accessor for LabelPlaceholder(0, v23);
  v64 = *(_QWORD *)(v26 - 8);
  v65 = v26;
  __chkstk_darwin(v26);
  v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v29);
  v31 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DF3C((uint64_t *)&unk_1007F5380);
  v67 = *(_QWORD *)(v32 - 8);
  v68 = v32;
  __chkstk_darwin(v32);
  v34 = (char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = 0;
  AnyHashable.init<A>(_:)(&v69, &type metadata for Int, &protocol witness table for Int);
  v35 = StatePath.init(component:)(v70, &type metadata for AnyHashable);
  v70[0] = ShelfLayoutContext.stateStore.getter(v35);
  v36 = type metadata accessor for NilState(0);
  v37 = sub_10000DF3C(&qword_100803430);
  v38 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
  StateLens.init<A>(contentsOf:in:)(v31, v70, v36, v37, v38);
  v39 = type metadata accessor for Feature.iOS(0);
  v70[3] = v39;
  v70[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v40 = sub_1000117C0(v70);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v40, enum case for Feature.iOS.review_summarization(_:), v39);
  LOBYTE(v39) = isFeatureEnabled(_:)(v70);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v70);
  if ((v39 & 1) != 0)
  {
    objc_msgSend(a9, "pageMarginInsets");
    v41 = CGSize.subtracting(insets:)(objc_msgSend(a9, "pageMarginInsets"));
    v43.n128_f64[0] = sub_100042AD4(v66, a9, 1, v41, v42);
    v44 = v43.n128_f64[0];
LABEL_8:
    v50 = v68;
    goto LABEL_9;
  }
  type metadata accessor for ProductRatingsLegacyCollectionViewCell(0);
  v46 = Ratings.status.getter(v45);
  if (!v47)
  {
    v55 = type metadata accessor for PageGrid(0);
    v56 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v59, 1, 1, v55);
    sub_10024034C(a9, v56, (uint64_t)v18);
    sub_100011088(v56, &qword_1008027B0);
    v44 = static ProductRatingsLayout.estimatedMeasurements(fitting:using:in:)(v18, a9, a1, a2);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v18, v61);
    goto LABEL_8;
  }
  v48 = v47;
  v49 = v46;
  DynamicTextAppearance.init()(v46);
  v50 = v68;
  if (qword_1007F23C8 != -1)
    swift_once(&qword_1007F23C8, sub_100414BCC);
  v51 = type metadata accessor for FontUseCase(0);
  v52 = sub_1000117A8(v51, (uint64_t)qword_100855040);
  DynamicTextAppearance.withFontUseCase(_:)(v52);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v63);
  v53 = LabelPlaceholder.Options.init(rawValue:)(0);
  swift_bridgeObjectRetain(v48);
  v54 = objc_msgSend(a9, "traitCollection", LabelPlaceholder.init(_:with:where:)(v49, v48, v25, v53).n128_f64[0]);
  v44 = LabelPlaceholder.measure(toFit:with:)(v54, a1, a2);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v28, v65);
  v43 = swift_bridgeObjectRelease(v48);
LABEL_9:
  (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v34, v50, v43);
  return v44;
}

double sub_1000408E4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _QWORD v36[5];

  v33 = a4;
  v34 = a8;
  v11 = type metadata accessor for ComponentLayoutOptions(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000DF3C((uint64_t *)&unk_1007F5380);
  v18 = *(_QWORD *)(v32 - 8);
  v19 = __chkstk_darwin(v32);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_projectBox(a7, v19);
  v35 = 1;
  AnyHashable.init<A>(_:)(&v35, &type metadata for Int, &protocol witness table for Int);
  v23 = StatePath.init(component:)(v36, &type metadata for AnyHashable);
  v36[0] = ShelfLayoutContext.stateStore.getter(v23);
  v24 = type metadata accessor for NilState(0);
  v25 = sub_10000DF3C(&qword_100803430);
  v26 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
  StateLens.init<A>(contentsOf:in:)(v17, v36, v24, v25, v26);
  v27 = swift_beginAccess(v22, v36, 0, 0);
  v28 = ((__n128 (*)(char *, uint64_t, uint64_t, __n128))*(_QWORD *)(v12 + 16))(v14, v22, v11, v27);
  v28.n128_f64[0] = a1;
  v29 = sub_100045864(v28, a2, v33, (uint64_t)v21, (uint64_t)v14, v34);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v32);
  return v29;
}

double sub_100040B04(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[5];

  v30 = a4;
  v31 = a8;
  v11 = type metadata accessor for ComponentLayoutOptions(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F5390);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = swift_projectBox(a7, v20);
  v32 = 3;
  AnyHashable.init<A>(_:)(&v32, &type metadata for Int, &protocol witness table for Int);
  v24 = StatePath.init(component:)(v33, &type metadata for AnyHashable);
  v33[0] = ShelfLayoutContext.stateStore.getter(v24);
  v25 = sub_10000DF3C(&qword_100803430);
  v26 = sub_100010F98((unint64_t *)&qword_1007F53D0, &qword_100803430, (const char *)&protocol conformance descriptor for TransientStateStore<A>);
  StateLens.init<A>(contentsOf:in:)(v17, v33, &_s5StateVN_7, v25, v26);
  v27 = swift_beginAccess(v23, v33, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, v23, v11, v27);
  v28 = sub_100045E9C(a1, a2, v30, (uint64_t)v22, (uint64_t)v14, v31);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  return v28;
}

double sub_100040D1C(uint64_t a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;

  v8 = ReviewsContainer.writeReviewAction.getter(a1);
  v10 = ReviewsContainer.supportAction.getter(v9);
  type metadata accessor for ProductReviewActionsView(0);
  if (!v8)
  {
    v13 = 0;
    v15 = 0;
    if (v10)
      goto LABEL_3;
LABEL_5:
    v18 = 0;
    v20 = 0;
    goto LABEL_6;
  }
  v11 = swift_retain(v8);
  Action.title.getter(v11);
  v13 = v12;
  v15 = v14;
  swift_release(v8);
  if (!v10)
    goto LABEL_5;
LABEL_3:
  v16 = swift_retain(v10);
  Action.title.getter(v16);
  v18 = v17;
  v20 = v19;
  swift_release(v10);
LABEL_6:
  v21 = sub_1000421C0(v13, v15, v18, v20, a5, a2, a3);
  swift_release(v10);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v15);
  swift_release(v8);
  return v21;
}

uint64_t sub_100040E3C(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD v5[5];

  swift_getObjectType();
  PageTraitEnvironment.pageColumnMargin.getter();
  v5[3] = &type metadata for CGFloat;
  v5[4] = &protocol witness table for CGFloat;
  v5[0] = v3;
  ReviewsContainerLayout.Metrics.columnSpacer.setter(v5);
  return ReviewsContainerLayout.Metrics.marginInsets.setter(objc_msgSend(a2, "pageMarginInsets"));
}

void sub_100040F2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100670BB8;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_100670BD0;
    v4[7] = &unk_100670BD0;
    v4[8] = &unk_100670BD0;
    v4[9] = &unk_100670BD0;
    v4[10] = &unk_100670BE8;
    v4[11] = &unk_100670BE8;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

uint64_t sub_100040FD0(CGFloat a1, CGFloat a2)
{
  _QWORD *v2;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  CGPoint v22;
  CGRect v23;

  sub_1000415A4();
  v5 = *(_QWORD *)((swift_isaMask & *v2) + 0x60);
  v6 = (double *)(*(_QWORD *)((char *)v2 + v5)
                + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout);
  v7 = *v6;
  v8 = v6[1];
  objc_msgSend(v2, "contentSize");
  v23.size.width = v9;
  v23.size.height = v10;
  v23.origin.x = v8;
  v23.origin.y = v7;
  v22.x = a1;
  v22.y = a2;
  result = CGRectContainsPoint(v23, v22);
  if (!(_DWORD)result)
    return 0;
  v12 = *(_QWORD *)((char *)v2 + v5);
  v13 = v12 + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout;
  v14 = floor((a1 - v8) / (*(double *)(v13 + 32) + *(double *)(v13 + 48)));
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v15 = (uint64_t)v14;
  if ((uint64_t)v14 < 0)
    return 0;
  v16 = *(_QWORD *)(*(_QWORD *)(v12 + 32) + 16);
  v17 = *(_QWORD *)(v13 + 72);
  v18 = ceil((double)v16 / (double)v17);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
    goto LABEL_23;
  if (v18 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v15 >= (uint64_t)v18)
    return 0;
  v19 = floor((a2 - v7) / (*(double *)(v13 + 40) + *(double *)(v13 + 56)));
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = 0;
  v20 = (uint64_t)v19;
  if (((uint64_t)v19 & 0x8000000000000000) == 0 && v17 > v20)
  {
    v21 = v15 * v17;
    if ((unsigned __int128)(v15 * (__int128)v17) >> 64 == (v15 * v17) >> 63)
    {
      result = v21 + v20;
      if (!__OFADD__(v21, v20))
        return result;
LABEL_30:
      __break(1u);
      return result;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1000411E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  _BYTE v19[24];

  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf);
  if (!v2)
    return 0;
  v4 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xB8));
  swift_beginAccess(v4, v19, 0, 0);
  v5 = *v4;
  v6 = v5 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain(v5);
  v12 = 0;
  while (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v12 << 6);
LABEL_6:
    if (*(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v14) == a1)
    {
      v18 = *(id *)(*(_QWORD *)(v5 + 56) + 8 * v14);
      swift_release(v5);
      return (uint64_t)v18;
    }
  }
  v15 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v15 >= v10)
    goto LABEL_24;
  v16 = *(_QWORD *)(v6 + 8 * v15);
  ++v12;
  if (v16)
    goto LABEL_22;
  v12 = v15 + 1;
  if (v15 + 1 >= v10)
    goto LABEL_24;
  v16 = *(_QWORD *)(v6 + 8 * v12);
  if (v16)
    goto LABEL_22;
  v12 = v15 + 2;
  if (v15 + 2 >= v10)
    goto LABEL_24;
  v16 = *(_QWORD *)(v6 + 8 * v12);
  if (v16)
    goto LABEL_22;
  v12 = v15 + 3;
  if (v15 + 3 >= v10)
    goto LABEL_24;
  v16 = *(_QWORD *)(v6 + 8 * v12);
  if (v16)
    goto LABEL_22;
  v17 = v15 + 4;
  if (v17 >= v10)
  {
LABEL_24:
    swift_release(v5);
    return 0;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  v12 = v17;
  if (v16)
  {
LABEL_22:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_6;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      goto LABEL_24;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100041398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100044D80(a2, a4);
}

uint64_t sub_1000413B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;

  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Shelf.ContentType(0);
  LODWORD(a2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a2, 1, v9);
  result = 0;
  if ((_DWORD)a2 == 1)
  {
    if (qword_1007F2A20 != -1)
      swift_once(&qword_1007F2A20, sub_10042D138);
    v11 = type metadata accessor for StaticDimension(0);
    v12 = sub_1000117A8(v11, (uint64_t)qword_1008561B0);
    static Dimensions.defaultRoundingRule.getter(v12);
    v13 = AnyDimension.value(in:rounded:)(a3, v8, v11, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return *(_QWORD *)&v13;
  }
  return result;
}

uint64_t sub_1000414F8(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  void *v4;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  id v13;
  uint64_t v14;

  v4 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf);
  if (!v4)
    return 0;
  v8 = v4;
  objc_msgSend(v8, "convertPoint:fromCoordinateSpace:", a1, a2, a3);
  v10 = v9;
  v12 = v11;
  v13 = v8;
  v14 = sub_100040FD0(v10, v12);

  return v14;
}

void sub_1000415A4()
{
  _QWORD *v0;
  double v1;
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  double v6;
  float64x2_t v7;
  int8x16_t v8;
  float64x2_t v9;
  double *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;

  objc_msgSend(v0, "contentSize");
  if (v2 != 0.0 || v1 != 0.0)
    return;
  v3 = *(_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60));
  v4 = (double)*(uint64_t *)(*(_QWORD *)(v3 + 32) + 16);
  v5 = v3 + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout;
  v6 = ceil(v4 / (double)*(uint64_t *)(v5 + 72));
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v7.f64[0] = (double)(uint64_t)v6;
  v8 = (int8x16_t)vaddq_f64(vaddq_f64(*(float64x2_t *)v5, *(float64x2_t *)(v5 + 16)), (float64x2_t)0);
  v7.f64[1] = (double)*(uint64_t *)(v5 + 72);
  v9 = vaddq_f64((float64x2_t)vextq_s8(v8, v8, 8uLL), vmulq_f64(*(float64x2_t *)(v5 + 32), v7));
  __asm { FMOV            V2.2D, #-1.0 }
  objc_msgSend(v0, "setContentSize:", vaddq_f64(v9, vmulq_f64(vaddq_f64(v7, _Q2), *(float64x2_t *)(v5 + 48))));
  sub_100041758();
  v15 = (double *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xA8));
  if (((_BYTE)v15[2] & 1) == 0)
  {
    objc_msgSend(v0, "setContentOffset:", *v15, v15[1]);
    *v15 = 0.0;
    v15[1] = 0.0;
    *((_BYTE *)v15 + 16) = 1;
    v16 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x88));
    v17 = *v16;
    if (*v16)
    {
      v18 = v16[1];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v17);
      dispatch thunk of ScrollObserver.didScroll(in:)(v0, ObjectType, v18);
      swift_unknownObjectRelease(v17);
    }
  }
}

id sub_100041758()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  double Width;
  id result;
  double v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  CGRect v18;

  v1 = *(_QWORD *)((swift_isaMask & *v0) + 0x60);
  v2 = *(double *)(*(_QWORD *)((char *)v0 + v1)
                 + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout
                 + 32)
     + *(double *)(*(_QWORD *)((char *)v0 + v1)
                 + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout
                 + 48);
  objc_msgSend(v0, "frame");
  Width = CGRectGetWidth(v18);
  result = objc_msgSend(v0, "contentInset");
  v6 = ceil((Width - v5) / v2);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = (uint64_t)v6;
  v8 = (_QWORD *)(swift_isaMask & *v0);
  v9 = *(_QWORD *)((char *)v0 + v8[14]);
  if (*((_BYTE *)v0 + v8[15]) != 1)
    goto LABEL_9;
  v10 = __OFADD__(v7, v9);
  v11 = v7 + v9;
  if (v10)
    goto LABEL_16;
  if (v11 + 0x4000000000000000 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = 2 * v11;
  v9 = *(_QWORD *)(*(_QWORD *)((char *)v0 + v1)
                 + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout
                 + 72);
  v1 = v12 * v9;
  v7 = (unsigned __int128)(v12 * (__int128)v9) >> 64;
  if (v7 == v1 >> 63)
  {
LABEL_12:
    swift_beginAccess((char *)v0 + v8[22], v17, 33, 0);
    v16 = sub_10000DF3C((uint64_t *)&unk_1007F53B0);
    ReusePool.limit.setter(v1, v16);
    return (id)swift_endAccess(v17);
  }
  __break(1u);
LABEL_9:
  if (v9 + 0x4000000000000000 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v13 = 2 * v9;
  v14 = *(_QWORD *)(*(_QWORD *)((char *)v0 + v1)
                  + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout
                  + 72);
  v15 = 2 * v9 * v14;
  if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != v15 >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v1 = v7 + v15;
  if (!__OFADD__(v7, v15))
    goto LABEL_12;
LABEL_20:
  __break(1u);
  return result;
}

double sub_10004191C(char a1, char a2, char a3, unsigned __int8 a4, id a5, double a6)
{
  int v11;
  id v13;
  void *v14;
  id v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  double v34;
  double v35;
  char v36;
  Swift::String v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  double v45;

  v11 = a4;
  v13 = objc_msgSend(a5, "traitCollection");
  v14 = v13;
  if (v11 == 1)
  {
    v15 = objc_msgSend(v13, "preferredContentSizeCategory");
    v16 = UIContentSizeCategory.isAccessibilityCategory.getter(v15);

    if ((v16 & 1) != 0)
      goto LABEL_6;
  }
  else
  {

  }
  sub_1005995D0(a2);
  v18 = v17;
  sub_1005995FC(a2);
  v20 = v19;
  v21 = dbl_100670C28[a2];
  objc_msgSend(v18, "size");
  v23 = v22;
  objc_msgSend(v20, "size");
  v25 = v24;

  a6 = a6 - (v21 + v23 + v25);
LABEL_6:
  if ((a1 & 1) != 0)
    goto LABEL_12;
  v26 = 0xD00000000000001ALL;
  v27 = 0x8000000100630390;
  if ((a3 & 1) != 0)
  {
    v30 = localizedStringForAdsLanguage(_:)(*(Swift::String *)&v26);
    object = v30._object;
    countAndFlagsBits = v30._countAndFlagsBits;
  }
  else
  {
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v32 = localizedString(_:comment:)(*(Swift::String *)&v26, v31);
    object = v32._object;
    countAndFlagsBits = v32._countAndFlagsBits;
  }
  v33 = object;
  sub_100041D98(countAndFlagsBits, (uint64_t)object, 1, a2, a4, a5, 1.79769313e308);
  v35 = v34;
  swift_bridgeObjectRelease(v33);
  v36 = CGFloat.isLessThanOrEffectivelyEqualTo(_:accuracy:)(a6, 0.0001, v35);
  if (a4)
  {
    if ((v36 & 1) == 0)
    {
LABEL_12:
      if ((a3 & 1) != 0)
      {
        v37._object = (void *)0x8000000100630310;
        v37._countAndFlagsBits = 0xD000000000000017;
        v40 = localizedStringForAdsLanguage(_:)(v37);
        v39 = v40._object;
        v38 = v40._countAndFlagsBits;
      }
      else
      {
        v41._countAndFlagsBits = 0xD000000000000050;
        v42._object = (void *)0x8000000100630310;
        v41._object = (void *)0x8000000100630330;
        v42._countAndFlagsBits = 0xD000000000000017;
        v43 = localizedString(_:comment:)(v42, v41);
        v39 = v43._object;
        v38 = v43._countAndFlagsBits;
      }
      v44 = v39;
      sub_100041D98(v38, (uint64_t)v39, 2, a2, a4, a5, a6);
      v35 = v45;
      swift_bridgeObjectRelease(v44);
    }
  }
  return v35;
}

double sub_100041B50(char a1, char a2, char a3, unsigned __int8 a4, id a5, double a6)
{
  int v11;
  id v13;
  void *v14;
  id v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  double v34;
  double v35;
  char v36;
  Swift::String v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  double v45;

  v11 = a4;
  v13 = objc_msgSend(a5, "traitCollection");
  v14 = v13;
  if (v11 == 1)
  {
    v15 = objc_msgSend(v13, "preferredContentSizeCategory");
    v16 = UIContentSizeCategory.isAccessibilityCategory.getter(v15);

    if ((v16 & 1) != 0)
      goto LABEL_6;
  }
  else
  {

  }
  sub_1005995D0(a2);
  v18 = v17;
  sub_1005995FC(a2);
  v20 = v19;
  v21 = dbl_100670C28[a2];
  objc_msgSend(v18, "size");
  v23 = v22;
  objc_msgSend(v20, "size");
  v25 = v24;

  a6 = a6 - (v21 + v23 + v25);
LABEL_6:
  if ((a1 & 1) != 0)
    goto LABEL_12;
  v26 = 0xD00000000000001ALL;
  v27 = 0x8000000100630390;
  if ((a3 & 1) != 0)
  {
    v30 = localizedStringForAdsLanguage(_:)(*(Swift::String *)&v26);
    object = v30._object;
    countAndFlagsBits = v30._countAndFlagsBits;
  }
  else
  {
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v32 = localizedString(_:comment:)(*(Swift::String *)&v26, v31);
    object = v32._object;
    countAndFlagsBits = v32._countAndFlagsBits;
  }
  v33 = object;
  sub_100041FB0(countAndFlagsBits, (uint64_t)object, 1, a2, a4, a5, 1.79769313e308);
  v35 = v34;
  swift_bridgeObjectRelease(v33);
  v36 = CGFloat.isLessThanOrEffectivelyEqualTo(_:accuracy:)(a6, 0.0001, v35);
  if (a4)
  {
    if ((v36 & 1) == 0)
    {
LABEL_12:
      if ((a3 & 1) != 0)
      {
        v37._object = (void *)0x8000000100630310;
        v37._countAndFlagsBits = 0xD000000000000017;
        v40 = localizedStringForAdsLanguage(_:)(v37);
        v39 = v40._object;
        v38 = v40._countAndFlagsBits;
      }
      else
      {
        v41._countAndFlagsBits = 0xD000000000000050;
        v42._object = (void *)0x8000000100630310;
        v41._object = (void *)0x8000000100630330;
        v42._countAndFlagsBits = 0xD000000000000017;
        v43 = localizedString(_:comment:)(v42, v41);
        v39 = v43._object;
        v38 = v43._countAndFlagsBits;
      }
      v44 = v39;
      sub_100041FB0(v38, (uint64_t)v39, 2, a2, a4, a5, a6);
      v35 = v45;
      swift_bridgeObjectRelease(v44);
    }
  }
  return v35;
}

void sub_100041D98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned __int8 a5, void *a6, double a7)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];

  v23 = a1;
  v24 = a2;
  v11 = a5;
  v25 = type metadata accessor for FontUseCase(0);
  v12 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EditorsChoiceView();
  v15 = objc_msgSend(a6, "traitCollection");
  sub_10059996C(a4);

  v16 = objc_msgSend(a6, "traitCollection");
  v17 = v16;
  if (v11 == 1)
  {
    v18 = objc_msgSend(v16, "preferredContentSizeCategory", v23, v24);
    v19 = UIContentSizeCategory.isAccessibilityCategory.getter(v18);

    if ((v19 & 1) != 0)
    {
      v20 = 4;
      goto LABEL_6;
    }
  }
  else
  {

  }
  v20 = 1;
LABEL_6:
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = type metadata accessor for Feature(0);
    v26[3] = v21;
    v26[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v22 = sub_1000117C0(v26);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v22, enum case for Feature.measurement_with_labelplaceholder(_:), v21);
    LOBYTE(v21) = isFeatureEnabled(_:)(v26);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
    static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v23, v24, v14, v20, 4, 0, a3, 0, a7 + 1.0, 1.79769313e308, a6, v21 & 1);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  }
}

void sub_100041FB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned __int8 a5, void *a6, double a7)
{
  int v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];

  v24 = a1;
  v25 = a2;
  v11 = a5;
  v26 = type metadata accessor for FontUseCase(0);
  v12 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v26).n128_u64[0];
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a6, "traitCollection", v13);
  sub_10059996C(a4);

  v17 = objc_msgSend(a6, "traitCollection");
  v18 = v17;
  if (v11 == 1)
  {
    v19 = objc_msgSend(v17, "preferredContentSizeCategory");
    v20 = UIContentSizeCategory.isAccessibilityCategory.getter(v19);

    if ((v20 & 1) != 0)
    {
      v21 = 4;
      goto LABEL_6;
    }
  }
  else
  {

  }
  v21 = 1;
LABEL_6:
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    v22 = type metadata accessor for Feature(0);
    v27[3] = v22;
    v27[4] = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v23 = sub_1000117C0(v27);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v23, enum case for Feature.measurement_with_labelplaceholder(_:), v22);
    LOBYTE(v22) = isFeatureEnabled(_:)(v27);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v27);
    static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v24, v25, v15, v21, 4, 0, a3, 0, a7 + 1.0, 1.79769313e308, a6, v22 & 1);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v26);
  }
}

double sub_1000421C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  UIFontTextStyle *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  NSString *v31;
  void *v32;
  id v33;
  UIFont v34;
  double v35;
  double v36;
  NSString v37;
  uint64_t v38;
  uint64_t inited;
  NSString *v40;
  objc_class *v41;
  unint64_t v42;
  Class isa;
  double v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  NSString *v49;
  unint64_t v50;
  Class v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  void (*v57)(char *, uint64_t);
  double v58;
  double v59;
  id v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[72];
  _BYTE v72[72];
  _QWORD v73[6];

  v70 = a4;
  v69 = a3;
  v68 = type metadata accessor for FloatingPointRoundingRule(0);
  v67 = *(_QWORD *)(v68 - 8);
  v12 = __chkstk_darwin(v68);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FontSource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (UIFontTextStyle *)((char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Feature.iOS(0);
  v73[3] = v22;
  v73[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v23 = sub_1000117C0(v73);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v23, enum case for Feature.iOS.review_summarization(_:), v22);
  LOBYTE(v22) = isFeatureEnabled(_:)(v73);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v73);
  if ((v22 & 1) == 0)
  {
    *v18 = UIFontTextStyleBody;
    (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for FontSource.textStyle(_:), v15);
    v31 = UIFontTextStyleBody;
    v32 = a5;
    v33 = objc_msgSend(a5, "traitCollection");
    v34.super.isa = FontSource.font(compatibleWith:)((UITraitCollection)v33).super.isa;

    (*(void (**)(UIFontTextStyle *, uint64_t))(v16 + 8))(v18, v15);
    v35 = 0.0;
    v36 = 0.0;
    if (a2)
    {
      v37 = String._bridgeToObjectiveC()();
      v38 = sub_10000DF3C(&qword_1007FC280);
      inited = swift_initStackObject(v38, v71);
      *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 64) = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      *(UIFont *)(inited + 40) = v34;
      v40 = NSFontAttributeName;
      v41 = v34.super.isa;
      v42 = sub_1003699BC(inited);
      type metadata accessor for Key(0);
      sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v42);
      objc_msgSend(v37, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, a6, a7);
      v36 = v44;

    }
    if (v70)
    {
      v45 = String._bridgeToObjectiveC()();
      v46 = sub_10000DF3C(&qword_1007FC280);
      v47 = swift_initStackObject(v46, v72);
      *(_OWORD *)(v47 + 16) = xmmword_10066FBA0;
      *(_QWORD *)(v47 + 32) = NSFontAttributeName;
      *(_QWORD *)(v47 + 64) = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      *(UIFont *)(v47 + 40) = v34;
      v48 = v34.super.isa;
      v49 = NSFontAttributeName;
      v50 = sub_1003699BC(v47);
      type metadata accessor for Key(0);
      sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
      v51 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v50);
      objc_msgSend(v45, "boundingRectWithSize:options:attributes:context:", 1, v51, 0, a6, a7);
      v35 = v52;

    }
    v53 = v68;
    if (qword_1007F1EF0 != -1)
      swift_once(&qword_1007F1EF0, sub_1003CA9E8);
    v54 = qword_1008544A0;
    v55 = qword_1008544A8;
    sub_100011064(qword_100854488, qword_1008544A0);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v54);
    v56 = AnyDimension.value(in:rounded:)(v32, v14, v54, v55);
    v57 = *(void (**)(char *, uint64_t))(v67 + 8);
    v57(v14, v53);
    v58 = v36 + v35;
    if (qword_1007F1EF8 != -1)
      swift_once(&qword_1007F1EF8, sub_1003CAA00);
    v59 = v58 + v56 + *(double *)&qword_1008544B0 + v56 + *(double *)&qword_1008544B0;
    v60 = objc_msgSend(v32, "traitCollection", v67);
    v61 = UITraitCollection.isSizeClassRegular.getter(v60);

    if ((v61 & 1) != 0)
    {
      if (qword_1007F1F08 != -1)
        swift_once(&qword_1007F1F08, sub_1003CAAB0);
      v62 = qword_1008544D8;
      v63 = qword_1008544E0;
      sub_100011064(qword_1008544C0, qword_1008544D8);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v62);
      AnyDimension.value(in:rounded:)(v32, v14, v62, v63);
      v57(v14, v53);
    }
    if (v59 <= a6)
    {
      if (qword_1007F1EE8 == -1)
      {
LABEL_29:
        v64 = qword_100854478;
        v65 = unk_100854480;
        sub_100011064(qword_100854460, qword_100854478);
        j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v64);
        AnyDimension.value(in:rounded:)(v32, v14, v64, v65);

        v57(v14, v53);
        return a6;
      }
    }
    else if (qword_1007F1EE8 == -1)
    {
      goto LABEL_29;
    }
    swift_once(&qword_1007F1EE8, sub_1003CA8D8);
    goto LABEL_29;
  }
  sub_100019574(0, (unint64_t *)&qword_10080E4C0, UIButton_ptr);
  if (qword_1007F1F10 != -1)
    swift_once(&qword_1007F1F10, sub_1003CABE8);
  sub_1003CA470((void *)qword_1008544E8, a1, a2);
  v24 = (void *)UIButton.init(configuration:primaryAction:)(v21, 0);
  objc_msgSend(v24, "sizeThatFits:", a6, a7);
  v26 = v25;
  if (qword_1007F1F18 != -1)
    swift_once(&qword_1007F1F18, sub_1003CABFC);
  sub_1003CA470((void *)qword_1008544F0, v69, v70);
  v27 = (void *)UIButton.init(configuration:primaryAction:)(v21, 0);
  objc_msgSend(v27, "sizeThatFits:", a6, a7);
  v29 = v28;
  if (qword_1007F1F00 != -1)
    swift_once(&qword_1007F1F00, sub_1003CAAA0);
  v30 = a6 * 0.5 + *(double *)&qword_1008544B8 * -0.5;
  if ((v30 < v26 || v30 < v29) && qword_1007F1F20 != -1)
    swift_once(&qword_1007F1F20, sub_1003CAC10);

  return a6;
}

BOOL sub_100042A14(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  id v9;
  id v10;

  v3 = ReviewsContainer.reviews.getter();
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
    v5 = _CocoaArrayWrapper.endIndex.getter(v3);
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = swift_bridgeObjectRelease(v4);
  if (v5 > 0)
    return 1;
  v8 = ReviewsContainer.editorsChoice.getter(v6);
  swift_release(v8);
  if (!v8)
    return 0;
  v9 = objc_msgSend(a2, "traitCollection");
  v10 = objc_msgSend(v9, "horizontalSizeClass");

  return v10 != (id)1;
}

double sub_100042AD4(char *a1, void *a2, int a3, double a4, double a5)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  double v47;
  id v48;
  double v49;
  char *v50;
  char *v51;
  float v52;
  id v53;
  double v54;
  Class isa;
  Swift::Int v56;
  void *object;
  uint64_t v58;
  float v59;
  void *v60;
  char *v61;
  uint64_t v62;
  uint64_t inited;
  NSString *v64;
  unint64_t v65;
  id v66;
  NSString v67;
  Class v68;
  id v69;
  char *v70;
  char v71;
  char *v72;
  uint64_t v73;
  id v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;
  __n128 v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  Swift::Int v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;
  __n128 v100;
  uint64_t v101;
  char *v102;
  __n128 v103;
  char *v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  void (*v108)(_QWORD *, char *, uint64_t);
  char *v109;
  _QWORD *v110;
  _QWORD *v111;
  char *v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  id v143;
  char *v144;
  _QWORD v145[28];
  _QWORD v146[5];
  uint64_t v147[5];
  _QWORD v148[5];
  _QWORD v149[5];
  uint64_t v150[5];
  char v151;
  char v152[80];
  NSNumber_optional v153;

  v127 = a3;
  v143 = a2;
  v8 = type metadata accessor for Adaptive(0);
  v133 = *(_QWORD *)(v8 - 8);
  v134 = v8;
  v9 = __chkstk_darwin(v8);
  v132 = (uint64_t)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TextAppearance(0, v9);
  v130 = *(_QWORD *)(v11 - 8);
  v131 = v11;
  __chkstk_darwin(v11);
  v126 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v125 = (char *)&v119 - v15;
  v16 = type metadata accessor for FontSource(0, v14);
  v128 = *(_QWORD *)(v16 - 8);
  v129 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = (_QWORD *)type metadata accessor for FontUseCase(0);
  v19 = *(v139 - 1);
  v20 = __chkstk_darwin(v139);
  v22 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DynamicTextAppearance(0, v20);
  v136 = *(_QWORD *)(v23 - 8);
  v137 = v23;
  __chkstk_darwin(v23);
  v25 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v138 = (char *)&v119 - v28;
  v29 = type metadata accessor for LabelPlaceholder(0, v27);
  v30 = *(_QWORD *)(v29 - 8);
  v140 = v29;
  v141 = v30;
  __chkstk_darwin(v29);
  v32 = (char *)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v119 - v34;
  v37 = __chkstk_darwin(v36);
  v142 = (char *)&v119 - v38;
  v39 = Ratings.status.getter(v37);
  if (v40)
  {
    v41 = v39;
    v42 = v40;
    DynamicTextAppearance.init()(v39);
    if (qword_1007F23C8 != -1)
      swift_once(&qword_1007F23C8, sub_100414BCC);
    v43 = sub_1000117A8((uint64_t)v139, (uint64_t)qword_100855040);
    v44 = v138;
    DynamicTextAppearance.withFontUseCase(_:)(v43);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v25, v137);
    v45 = LabelPlaceholder.Options.init(rawValue:)(0);
    swift_bridgeObjectRetain(v42);
    v46 = v142;
    *(_QWORD *)&v47 = LabelPlaceholder.init(_:with:where:)(v41, v42, v44, v45).n128_u64[0];
    v48 = objc_msgSend(v143, "traitCollection", v47);
    v49 = LabelPlaceholder.measure(toFit:with:)(v48, a4, a5);

    (*(void (**)(char *, uint64_t))(v141 + 8))(v46, v140);
    swift_bridgeObjectRelease(v42);
  }
  else
  {
    v120 = v22;
    v121 = v25;
    v122 = v19;
    v123 = v18;
    v51 = v125;
    v50 = v126;
    v135 = v35;
    v124 = v32;
    v52 = Ratings.ratingAverage.getter(v39);
    v53 = objc_allocWithZone((Class)NSNumber);
    *(float *)&v54 = v52;
    v153.value.super.super.isa = (Class)objc_msgSend(v53, "initWithFloat:", v54);
    isa = v153.value.super.super.isa;
    v153.is_nil = 1;
    object = localizedStringForDecimal(_:_:)(v153, v56).value._object;

    if (!object)
    {
      v59 = Ratings.ratingAverage.getter(v58);
      Float.description.getter(v59);
      object = v60;
    }
    v61 = v50;
    v126 = a1;
    v62 = sub_10000DF3C(&qword_1007FC280);
    inited = swift_initStackObject(v62, v152);
    *(_OWORD *)(inited + 16) = xmmword_10066FBA0;
    *(_QWORD *)(inited + 64) = &type metadata for CGFloat;
    *(_QWORD *)(inited + 32) = NSKernAttributeName;
    *(_QWORD *)(inited + 40) = 0xC010000000000000;
    v64 = NSKernAttributeName;
    v65 = sub_1003699BC(inited);
    v66 = objc_allocWithZone((Class)NSAttributedString);
    v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    type metadata accessor for Key(0);
    sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
    v68 = Dictionary._bridgeToObjectiveC()().super.isa;
    v69 = objc_msgSend(v66, "initWithString:attributes:", v67, v68, swift_bridgeObjectRelease(v65).n128_f64[0]);

    v125 = (char *)v69;
    v70 = v121;
    DynamicTextAppearance.init()(v125);
    v71 = v127;
    v72 = v120;
    if (qword_1007F2C38 != -1)
      swift_once(&qword_1007F2C38, sub_10049AA58);
    v127 = v71 & 1;
    v73 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
    sub_1000117A8(v73, (uint64_t)qword_100856760);
    v74 = objc_msgSend(v143, "snapshotPageTraitEnvironment");
    v145[0] = v74;
    Conditional.evaluate(with:)(v145, v73);
    swift_unknownObjectRelease(v74);
    v75 = v72;
    v76 = v138;
    DynamicTextAppearance.withFontUseCase(_:)(v72);
    v77 = v122;
    v78 = v75;
    v79 = v139;
    (*(void (**)(char *, _QWORD *))(v122 + 8))(v78, v139);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v70, v137);
    v80 = LabelPlaceholder.Options.init(rawValue:)(0);
    LabelPlaceholder.init(_:with:where:)(v69, v76, v80);
    v81 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
    v138 = (char *)LayoutViewPlaceholder.init(measureWith:)(sub_100399EC8, 0, v82);
    if (qword_1007F23E0 != -1)
      swift_once(&qword_1007F23E0, sub_100414D2C);
    v83 = sub_1000117A8((uint64_t)v79, (uint64_t)qword_100855088);
    v84 = v123;
    (*(void (**)(char *, uint64_t, id))(v77 + 16))(v123, v83, v79);
    v86 = v128;
    v85 = v129;
    (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v84, enum case for FontSource.useCase(_:), v129);
    v87 = (_QWORD *)FontSource.font(in:for:)(v143, sub_10039A18C, 0);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v84, v85);
    v88._object = (void *)0x80000001006302D0;
    v88._countAndFlagsBits = 0xD000000000000012;
    v89._countAndFlagsBits = 0;
    v89._object = (void *)0xE000000000000000;
    v90 = localizedStringWithCount(_:count:comment:)(v88, 5, v89);
    TextAppearance.init()(v91);
    TextAppearance.withFont(_:)(v87);
    v92 = v131;
    v93 = *(void (**)(char *, uint64_t))(v130 + 8);
    v93(v61, v131);
    v94 = LabelPlaceholder.Options.init(rawValue:)(0);
    v95 = LabelPlaceholder.init(_:with:where:)(v90._countAndFlagsBits, v90._object, v51, v94);
    v96 = Ratings.totalNumberOfRatings.getter(v95);
    v97._countAndFlagsBits = 0xD000000000000013;
    v97._object = (void *)0x80000001006302F0;
    v98._countAndFlagsBits = 0;
    v98._object = (void *)0xE000000000000000;
    v99 = localizedStringWithCount(_:count:comment:)(v97, v96, v98);
    TextAppearance.init()(v100);
    v139 = v87;
    TextAppearance.withFont(_:)(v87);
    v93(v61, v92);
    v101 = LabelPlaceholder.Options.init(rawValue:)(0);
    v102 = v124;
    LabelPlaceholder.init(_:with:where:)(v99._countAndFlagsBits, v99._object, v51, v101);
    swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
    v137 = LayoutViewPlaceholder.init(measureWith:)(sub_10039A204, 0, v103);
    v104 = v102;
    v105 = v135;
    if (qword_1007F2C30 != -1)
      swift_once(&qword_1007F2C30, sub_10049A5E4);
    v106 = v140;
    v146[3] = v140;
    v146[4] = &protocol witness table for LabelPlaceholder;
    v107 = sub_1000117C0(v146);
    v108 = *(void (**)(_QWORD *, char *, uint64_t))(v141 + 16);
    v108(v107, v142, v106);
    v109 = v138;
    v144 = v138;
    Measurable.placeable.getter(v147, v81, &protocol witness table for LayoutViewPlaceholder);
    v148[3] = v106;
    v148[4] = &protocol witness table for LabelPlaceholder;
    v110 = sub_1000117C0(v148);
    v108(v110, v105, v106);
    v149[3] = v106;
    v149[4] = &protocol witness table for LabelPlaceholder;
    v111 = sub_1000117C0(v149);
    v112 = v104;
    v108(v111, v104, v106);
    v113 = v137;
    v144 = (char *)v137;
    Measurable.placeable.getter(v150, v81, &protocol witness table for LayoutViewPlaceholder);
    sub_1000457F4((uint64_t)&xmmword_100856680, (uint64_t)v145);
    v151 = v127;
    v114 = objc_msgSend(v143, "traitCollection");
    v115 = v132;
    sub_100057028(v132);
    v116 = v134;
    v49 = dispatch thunk of Placeable.measure(toFit:with:)(v114, v134, &protocol witness table for Adaptive, a4, a5);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v115, v116);

    swift_release(v109);
    swift_release(v113);

    sub_100045830(v145);
    v117 = *(void (**)(char *, uint64_t))(v141 + 8);
    v117(v112, v106);
    v117(v135, v106);
    v117(v142, v106);
  }
  return v49;
}

double sub_100043414(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7, double a8, double a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD);
  void (*v30)(_QWORD *, _QWORD, uint64_t);
  uint64_t v31;
  id v32;
  id v33;
  double v34;
  double v35;
  char v36;
  uint64_t v37;
  void (*v38)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v39;
  char v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  char v50;
  char v51;
  unsigned __int8 v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  char v61;
  NSString *v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  id v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  double left;
  double bottom;
  double right;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  id v87;
  double v88;
  double v89;
  void (*v90)(char *, uint64_t);
  char v91;
  _QWORD *v92;
  char v93;
  uint64_t v94;
  _QWORD *v95;
  double v96;
  _QWORD *v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  uint64_t v117;
  int v118;
  unsigned int v119;
  _QWORD v120[3];
  uint64_t v121;
  uint64_t v122;

  v110 = a6;
  v111 = a4;
  v112 = a5;
  v108 = a3;
  v101 = a2;
  v118 = a1;
  v107 = type metadata accessor for FloatingPointRoundingRule(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for StaticDimension(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for FontUseCase(0);
  v117 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v109 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PageGrid.Direction(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v99 - v20;
  v100 = type metadata accessor for PageGrid(0);
  v22 = *(_QWORD *)(v100 - 8);
  *(_QWORD *)&v23 = __chkstk_darwin(v100).n128_u64[0];
  v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = a7;
  v26 = objc_msgSend(a7, "traitCollection", v23);
  v27 = type metadata accessor for Feature.iOS(0);
  v121 = v27;
  v114 = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v122 = v114;
  v28 = sub_1000117C0(v120);
  v29 = *(void (**)(_QWORD))(*(_QWORD *)(v27 - 8) + 104);
  v119 = enum case for Feature.iOS.review_summarization(_:);
  v30 = (void (*)(_QWORD *, _QWORD, uint64_t))v29;
  v29(v28);
  LOBYTE(a7) = isFeatureEnabled(_:)(v120);
  v31 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
  v115 = v26;
  if ((a7 & 1) == 0)
  {
    v42 = a8 + -20.0 + -20.0;
    v43 = v113;
    v37 = v114;
    v32 = v116;
    v44 = v109;
    v38 = v30;
    v45 = v108;
    if ((v118 & 1) == 0)
      goto LABEL_14;
    goto LABEL_7;
  }
  if ((UITraitCollection.isSizeClassRegular.getter(v31) & 1) != 0)
  {
    v32 = v116;
    v33 = objc_msgSend(v116, "pageMarginInsets");
    v35 = v34;
    v36 = UITraitCollection.prefersAccessibilityLayouts.getter(v33);
    v37 = v114;
    v38 = v30;
    if ((v36 & 1) != 0
      && (v121 = v27,
          v122 = v114,
          v39 = sub_1000117C0(v120),
          v30(v39, v119, v27),
          v40 = isFeatureEnabled(_:)(v120),
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120),
          (v40 & 1) != 0))
    {
      *(double *)&v41 = 52.0;
    }
    else
    {
      *(double *)&v41 = 242.0;
    }
    v89 = *(double *)&v41;
    v91 = v118;
    v43 = v113;
    v44 = v109;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v21, enum case for PageGrid.Direction.vertical(_:), v15);
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    v83 = sub_100418380(0.0);
    PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v18, 0, v83, a8, a9, UIEdgeInsetsZero.top, left, bottom, right);
    v84 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    v85 = PageGrid.horizontalMargins.getter(v84);
    v35 = v86;
    v87 = v116;
    objc_msgSend(v116, "pageMarginInsets", v85);
    v89 = v88;
    v90 = *(void (**)(char *, uint64_t))(v22 + 8);
    v32 = v87;
    v90(v25, v100);
    v91 = v118;
    v43 = v113;
    v37 = v114;
    v44 = v109;
    v38 = v30;
  }
  v45 = v108;
  v42 = a8 - v35 - v89;
  if ((v91 & 1) != 0)
  {
LABEL_7:
    v121 = v27;
    v122 = v37;
    v46 = sub_1000117C0(v120);
    v47 = v119;
    v30(v46, v119, v27);
    v48 = isFeatureEnabled(_:)(v120);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
    v121 = v27;
    v122 = v37;
    v49 = sub_1000117C0(v120);
    v30(v49, v47, v27);
    v50 = isFeatureEnabled(_:)(v120);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
    if ((v48 & 1) != 0)
      v51 = 3;
    else
      v51 = 4;
    if ((v50 & 1) != 0)
      v52 = 1;
    else
      v52 = 2;
    sub_100045D24(v51, 0, 1, v32, v42, 0, v52);
    v121 = v27;
    v122 = v37;
    v53 = sub_1000117C0(v120);
    v54 = v47;
    v38 = v30;
    v30(v53, v54, v27);
    isFeatureEnabled(_:)(v120);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
  }
LABEL_14:
  if (v45)
  {
    v121 = v27;
    v122 = v37;
    v55 = sub_1000117C0(v120);
    v38(v55, v119, v27);
    v56 = isFeatureEnabled(_:)(v120);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
    if ((v56 & 1) == 0 && String.count.getter(v101, v45) > 0)
    {
      if (qword_1007F1FD0 != -1)
        swift_once(&qword_1007F1FD0, sub_1003E7B50);
      v57 = v104;
      v58 = sub_1000117A8(v104, (uint64_t)qword_1008545C0);
      v59 = v105;
      static Dimensions.defaultRoundingRule.getter(v58);
      AnyDimension.value(in:rounded:)(v32, v59, v57, &protocol witness table for StaticDimension);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v59, v107);
    }
  }
  v121 = v27;
  v122 = v37;
  v60 = sub_1000117C0(v120);
  v38(v60, v119, v27);
  v61 = isFeatureEnabled(_:)(v120);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
  if ((v61 & 1) != 0)
  {
    *(_QWORD *)v44 = UIFontTextStyleBody;
    *((_DWORD *)v44 + 2) = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v44, enum case for FontUseCase.preferredFont(_:), v43);
    v62 = UIFontTextStyleBody;
  }
  else
  {
    if (qword_1007F22C8 != -1)
      swift_once(&qword_1007F22C8, sub_100413D94);
    v63 = sub_1000117A8(v43, (uint64_t)qword_100854D40);
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v44, v63, v43);
  }
  v121 = v27;
  v122 = v37;
  v64 = sub_1000117C0(v120);
  v38(v64, v119, v27);
  v65 = isFeatureEnabled(_:)(v120);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
  if ((v65 & 1) == 0)
  {
    if (qword_1007F1FD8 != -1)
      swift_once(&qword_1007F1FD8, sub_1003E7C9C);
    v66 = v104;
    v67 = sub_1000117A8(v104, (uint64_t)qword_1008545D8);
    v68 = v103;
    v69 = v102;
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v67, v66);
    v71 = v105;
    static Dimensions.defaultRoundingRule.getter(v70);
    sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
    v72 = v115;
    v73 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v44, v115);
    StaticDimension.value(compatibleWith:rounded:)(v72, v71);
    UIFont.estimatedFirstBaseline.getter(v74);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v71, v107);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v66);
    v43 = v113;
    v37 = v114;
    v32 = v116;
  }
  v75 = objc_msgSend(v32, "traitCollection");
  v76 = objc_msgSend(v75, "horizontalSizeClass");

  if ((v110 & 1) != 0)
  {
LABEL_33:
    v79 = 9999;
    goto LABEL_45;
  }
  if (v76 != (id)1)
  {
    if (v76 == (id)2)
    {
      v77 = (v118 & 1) == 0;
      v78 = 8;
      goto LABEL_41;
    }
    goto LABEL_33;
  }
  if ((v118 & 1) != 0)
  {
    v121 = v27;
    v122 = v37;
    v92 = sub_1000117C0(v120);
    v38(v92, v119, v27);
    v93 = isFeatureEnabled(_:)(v120);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
    v77 = (v93 & 1) == 0;
    v78 = 3;
LABEL_41:
    if (v77)
      v79 = v78;
    else
      v79 = 6;
    goto LABEL_45;
  }
  v79 = 5;
LABEL_45:
  v94 = type metadata accessor for Feature(0);
  v121 = v94;
  v122 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v95 = sub_1000117C0(v120);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v94 - 8) + 104))(v95, enum case for Feature.measurement_with_labelplaceholder(_:), v94);
  LOBYTE(v94) = isFeatureEnabled(_:)(v120);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
  v96 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v111, v112, v44, 4, 0, 0, v79, 0, v42, 1.79769313e308, v32, v94 & 1);
  if ((v118 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, double))(v117 + 8))(v44, v43, v96);

  }
  else
  {
    v121 = v27;
    v122 = v37;
    v97 = sub_1000117C0(v120);
    v38(v97, v119, v27);
    isFeatureEnabled(_:)(v120);

    (*(void (**)(char *, uint64_t))(v117 + 8))(v44, v43);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v120);
  }
  return a8;
}

uint64_t sub_100043DF8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  v0 = ((uint64_t (*)(void))Shelf.items.getter)();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_bridgeObjectRelease(v0);
  if (v1)
  {
    result = Shelf.items.getter(v2);
    if (!*(_QWORD *)(result + 16))
    {
      __break(1u);
      return result;
    }
    v4 = result;
    sub_100011020(result + 32, (uint64_t)v8);
    swift_bridgeObjectRelease(v4);
    v5 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v6 = type metadata accessor for ReviewsContainer(0);
    if (swift_dynamicCast(&v7, v8, v5, v6, 6))
      return v7;
  }
  return 0;
}

double sub_100043E94(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  char v13;
  uint64_t v14;
  __n128 v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v24;
  double v25;
  id v26;
  id v27;

  v6 = a1.n128_u64[0];
  v7 = ReviewsContainer.reviews.getter(a1);
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    v9 = _CocoaArrayWrapper.endIndex.getter(v7);
  }
  else
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v9 > 0
    || (v24 = ReviewsContainer.editorsChoice.getter(v10),
        *(_QWORD *)&v25 = swift_release(v24).n128_u64[0],
        v22 = 0.0,
        v24)
    && (v26 = objc_msgSend(a5, "traitCollection", v25),
        v27 = objc_msgSend(v26, "horizontalSizeClass"),
        v26,
        v27 != (id)1))
  {
    v12 = objc_msgSend(a5, "traitCollection", v11);
    v13 = UITraitCollection.prefersAccessibilityLayouts.getter(v12);

    if ((v13 & 1) == 0)
      v14 = Shelf.rowsPerColumn.getter();
    v15.n128_f64[0] = sub_1001433C4(v14);
    v16 = v15.n128_f64[0];
    if (qword_1007F1940 != -1)
      swift_once(&qword_1007F1940, sub_10028F210);
    v17 = type metadata accessor for ProductReviewLayout.Metrics(0, v15);
    v18 = sub_1000117A8(v17, (uint64_t)qword_100853578);
    v19 = type metadata accessor for ProductReviewLayout(0);
    v20 = sub_10000E99C((unint64_t *)&qword_1007F53F0, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReviewLayout, (uint64_t)&protocol conformance descriptor for ProductReviewLayout);
    dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v18, a5, v19, v20, v16, 1.79769313e308);
    objc_msgSend(a5, "pageMarginInsets", sub_1001434B0(v21));
    objc_msgSend(a5, "pageMarginInsets");
    return *(double *)&v6;
  }
  return v22;
}

void sub_100044098()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;

  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_itemLayoutContext];
  v2 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_tapToRateView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductTapToRateCollectionViewCell()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_actionsView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProductReviewActionsCell()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewSummaryView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReviewSummaryCollectionViewCell(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_ratingsSeparatorView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_noRatingsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_pageTraits] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView] = 0;
  v7 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_didSelectEditorsChoice];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_scrollObserver];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ReviewsContainerCell.swift", 49, 2, 79, 0);
  __break(1u);
}

id sub_100044240(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf;
  v5 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_reviewsShelf];
  if (v5 && (v6 = v5, sub_100098D70(0, 0), v6, (v7 = *(void **)&v2[v4]) != 0))
  {
    objc_msgSend(v7, "removeFromSuperview");
    v8 = *(void **)&v2[v4];
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)&v2[v4] = a1;
  v9 = a1;

  v10 = *(void **)&v2[v4];
  if (v10)
  {
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_scrollObserver];
    v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_scrollObserver + 8];
    swift_unknownObjectRetain(v11);
    v13 = v10;
    sub_100098D70(v11, v12);

    v14 = objc_msgSend(v2, "contentView");
    objc_msgSend(v14, "addSubview:", v13);

  }
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_10004433C(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension20ReviewsContainerCell_editorsChoiceView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "addSubview:", v8);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1000443E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  _BYTE v25[40];
  _QWORD v26[5];

  v23[1] = a5;
  v23[2] = a6;
  v23[0] = a4;
  v9 = sub_10000DF3C(&qword_1007F7D40);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F5330);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TapToRate(0, v15);
  v26[3] = v18;
  v26[4] = sub_10000E99C(&qword_1007F5338, (uint64_t (*)(uint64_t))&type metadata accessor for TapToRate, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  v26[0] = a1;
  sub_100011020((uint64_t)v26, (uint64_t)v25);
  swift_retain(a1);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  if (swift_dynamicCast(&v24, v25, v19, v18, 6))
  {
    v20 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    v21 = type metadata accessor for NilState(0);
    WritableStateLens.init(_:)(v12, v21);
    sub_1000800D4(v20, (uint64_t)v17, a3);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    swift_release(v20);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
}

_QWORD *sub_100044588(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  _BOOL8 v27;
  id v28;
  id v29;
  uint64_t v31;
  objc_class *ObjectType;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DF3C(&qword_1007F5348);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x68));
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x70)) = 1;
  *((_BYTE *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x78)) = 0;
  v15 = *(_QWORD *)((swift_isaMask & *v5) + 0x80);
  v16 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  v17 = v5;
  *(_QWORD *)((char *)v5 + v15) = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  v18 = (_QWORD *)((char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0x88));
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)((char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0x90)) = 0;
  *((_BYTE *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0x98)) = 0;
  *((_BYTE *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0xA0)) = 0;
  v19 = (char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0xA8);
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v20 = type metadata accessor for ReviewsHorizontalShelfDataSource.CardView();
  ViewRecycler.init()(v20);
  v21 = sub_100010F98(&qword_1007F5350, &qword_1007F5348, (const char *)&protocol conformance descriptor for ViewRecycler<A>);
  ReusePool.init(recycler:limit:)(v13, 5, v11, v21);
  v22 = *(_QWORD *)((swift_isaMask & *v17) + 0xB8);
  *(_QWORD *)((char *)v17 + v22) = sub_10036DBD4(_swiftEmptyArrayStorage);
  v23 = (char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0xC0);
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  v24 = (char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0xC8);
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  *(_QWORD *)((char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0xD0)) = 0;
  *(_QWORD *)((char *)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0x60)) = a1;
  swift_retain(a1);

  v33.receiver = v17;
  v33.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v33, "initWithFrame:", a2, a3, a4, a5);
  objc_msgSend(v25, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v25, "setShowsVerticalScrollIndicator:", 0);
  objc_msgSend(v25, "setScrollsToTop:", 0);
  objc_msgSend(v25, "setBounces:", 1);
  objc_msgSend(v25, "setAlwaysBounceHorizontal:", 1);
  objc_msgSend(v25, "setDecelerationRate:", UIScrollViewDecelerationRateFast);
  objc_msgSend(v25, "setDelegate:", *(_QWORD *)((char *)v25 + *(_QWORD *)((swift_isaMask & *v25) + 0x80)));
  objc_msgSend(v25, "setContentInsetAdjustmentBehavior:", 2);
  v26 = v25;
  v27 = objc_msgSend(v26, "effectiveUserInterfaceLayoutDirection") == (id)1;
  v28 = objc_msgSend(v26, "layer");
  objc_msgSend(v28, "setFlipsHorizontalAxis:", v27);

  v29 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v29, "addObserver:selector:name:object:", v26, "lowMemoryWarning:", UIApplicationDidReceiveMemoryWarningNotification, 0);

  return v26;
}

double sub_10004499C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x90);
  v4 = *(_QWORD *)((char *)v1 + v3);
  if (v4)
    v5 = sub_100010F98(&qword_1007F5340, &qword_1007F5308, "97\v");
  else
    v5 = 0;
  swift_retain(v4);
  CompoundScrollObserver.removeChild(_:)(v6, v5);
  swift_release(v4);
  v7 = *(_QWORD *)((char *)v1 + v3);
  *(_QWORD *)((char *)v1 + v3) = a1;
  swift_retain(a1);
  swift_release(v7);
  v8 = *(_QWORD *)((char *)v1 + v3);
  if (v8)
    v9 = sub_100010F98(&qword_1007F5340, &qword_1007F5308, "97\v");
  else
    v9 = 0;
  swift_retain(v8);
  CompoundScrollObserver.addChild(_:)(v10, v9);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_100044A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v22 = a4;
  v23 = a5;
  v21 = a3;
  v9 = sub_10000DF3C(&qword_1007F7D40);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F5358);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for EditorsChoice(0);
  v26[3] = v17;
  v26[4] = sub_10000E99C(&qword_1007F5360, (uint64_t (*)(uint64_t))&type metadata accessor for EditorsChoice, (uint64_t)&protocol conformance descriptor for EditorsChoice);
  v26[0] = a1;
  sub_100011020((uint64_t)v26, (uint64_t)v25);
  swift_retain(a1);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  if (swift_dynamicCast(&v24, v25, v18, v17, 6))
  {
    v19 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    WritableStateLens.init(_:)(v12, &_s5StateVN_7);
    sub_100044CE0();
    WritableStateLens<A>.currentValue.getter(v25, v13);
    sub_1005F7640(v19, v25[0], v21, v22, v23);
    objc_msgSend(a6, "setNeedsLayout");
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_release(v19);
  }
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v26);
}

uint64_t sub_100044C68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100044C8C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_100044CD0()
{
  uint64_t *v0;

  sub_10003DDA0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

unint64_t sub_100044CE0()
{
  unint64_t result;

  result = qword_1007F5368;
  if (!qword_1007F5368)
  {
    result = swift_getWitnessTable(&unk_10069D924, &_s5StateVN_7);
    atomic_store(result, (unint64_t *)&qword_1007F5368);
  }
  return result;
}

uint64_t sub_100044D24(uint64_t a1)
{
  uint64_t v1;

  return sub_100040E3C(a1, *(void **)(v1 + 16));
}

double sub_100044D30(int a1, double a2, double a3)
{
  uint64_t v3;

  return sub_10003F328(a1, *(void **)(v3 + 16), *(id *)(v3 + 24), a2, a3);
}

uint64_t sub_100044D3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100044D68(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  return sub_10003F1FC(a2, a3, a1, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_100044D74(uint64_t a1)
{
  return sub_100045138(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003F02C);
}

uint64_t sub_100044D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v30 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Shelf.ContentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_100810B10);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F53A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v29 - v18;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))((char *)&v29 - v18, enum case for Shelf.ContentType.reviews(_:), v6, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  v20 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1000295A4(a1, (uint64_t)v12);
  sub_1000295A4((uint64_t)v19, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v21((uint64_t)v12, 1, v6) == 1)
  {
    sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F53A0);
    if (v21(v20, 1, v6) == 1)
    {
      sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F53A0);
      return 0;
    }
    goto LABEL_6;
  }
  sub_1000295A4((uint64_t)v12, (uint64_t)v15);
  if (v21(v20, 1, v6) == 1)
  {
    sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F53A0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
LABEL_6:
    sub_100011088((uint64_t)v12, (uint64_t *)&unk_100810B10);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v20, v6);
  v26 = sub_10000E99C((unint64_t *)&qword_100810B20, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v27 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v9, v6, v26);
  v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v9, v6);
  sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F53A0);
  v28(v15, v6);
  sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007F53A0);
  if ((v27 & 1) != 0)
    return 0;
LABEL_7:
  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v22 = type metadata accessor for StaticDimension(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100856150);
  static Dimensions.defaultRoundingRule.getter(v23);
  v24 = AnyDimension.value(in:rounded:)(v29, v5, v22, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v30);
  return *(_QWORD *)&v24;
}

uint64_t sub_1000450E8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_unknownObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10004512C(uint64_t a1)
{
  return sub_100045138(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003EE58);
}

uint64_t sub_100045138(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_10004514C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_unknownObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_100045190(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  return sub_10003EC84(a2, a3, a1, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(void **)(v3 + 64));
}

uint64_t sub_1000451A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1000451D0(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  return sub_10003EC18(a2, a3, a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

double sub_1000451DC(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, void *a6, char *a7)
{
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  _QWORD v36[5];

  v12 = sub_10000DF3C(&qword_1008027B0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v36[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ProductRatingsLayout.Metrics(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v36[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Feature.iOS(0);
  v36[3] = v20;
  v36[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v21 = sub_1000117C0(v36);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v21, enum case for Feature.iOS.review_summarization(_:), v20);
  LOBYTE(v20) = isFeatureEnabled(_:)(v36);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v36);
  if ((v20 & 1) != 0)
  {
    objc_msgSend(a6, "pageMarginInsets");
    v22 = CGSize.subtracting(insets:)(objc_msgSend(a6, "pageMarginInsets"));
    v24 = v23;
    v25 = type metadata accessor for ProductRatingsCollectionViewCell(0);
    return sub_10039A278(a1, a6, 1, v22, v24, v25, a7);
  }
  else
  {
    type metadata accessor for ProductRatingsLegacyCollectionViewCell(0);
    v28 = Ratings.status.getter(v27);
    if (v29)
    {
      v30 = v28;
      v31 = v29;
      type metadata accessor for ProductNoRatingsView();
      v32.n128_f64[0] = a2;
      v26 = sub_1000E1D50(v30, v31, a6, v32, a3);
      swift_bridgeObjectRelease(v31);
    }
    else
    {
      v33 = type metadata accessor for PageGrid(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
      sub_10024034C(a6, (uint64_t)v15, (uint64_t)v19);
      sub_100011088((uint64_t)v15, &qword_1008027B0);
      v26 = static ProductRatingsLayout.estimatedMeasurements(fitting:using:in:)(v19, a6, a2, a3);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  return v26;
}

uint64_t *sub_100045464(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

double sub_1000454A8(double a1, double a2)
{
  uint64_t v2;

  return sub_1001DC184(*(void **)(v2 + 16), 0, *(void **)(*(_QWORD *)(v2 + 24)+ OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection), a1, a2);
}

uint64_t sub_1000454E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_10004550C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  return sub_100040D1C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_100045518(uint64_t a1, double a2, double a3)
{
  return sub_1000455EC(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, double, double))sub_100040B04, a2, a3);
}

uint64_t sub_100045528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));

  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_1000455E0(uint64_t a1, double a2, double a3)
{
  return sub_1000455EC(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, double, double))sub_1000408E4, a2, a3);
}

uint64_t sub_1000455EC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, double, double), double a3, double a4)
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v8 = *(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(a1, *(_QWORD *)(v4 + 16), v4 + v9, *(_QWORD *)(v4 + v10), *(_QWORD *)(v4 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a3, a4);
}

uint64_t sub_100045680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));

  return swift_deallocObject(v0, v8 + 8, v5);
}

double sub_100045738(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100040418(a2, a3, a1, *(_QWORD *)(v3 + 16), *(char **)(v3 + 24), v3 + v8, *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1000457BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_1000457E8(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;

  return sub_100040244(a2, a3, a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1000457F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_100045830(_QWORD *a1)
{
  destroy for ProductRatingsLayout(a1);
  return a1;
}

double sub_100045864(__n128 a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _BYTE *v22;
  double v23;
  uint64_t v24;
  _BYTE *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  id v49;
  _BYTE v51[4];
  int v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[11];
  _QWORD v61[5];
  _QWORD v62[6];

  v8 = a1.n128_f64[0];
  v9 = type metadata accessor for DynamicTextAppearance(0, a1);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v51[-v14];
  __chkstk_darwin(v16);
  v18 = &v51[-v17];
  v20 = __chkstk_darwin(v19);
  v22 = &v51[-v21];
  v55 = type metadata accessor for LabelPlaceholder(0, v20);
  v54 = *(_QWORD *)(v55 - 8);
  *(_QWORD *)&v23 = __chkstk_darwin(v55).n128_u64[0];
  v25 = &v51[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = a6;
  v26 = objc_msgSend(a6, "traitCollection", v23);
  v27 = type metadata accessor for Feature.iOS(0);
  v60[3] = v27;
  v60[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v28 = sub_1000117C0(v60);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v28, enum case for Feature.iOS.review_summarization(_:), v27);
  LOBYTE(v27) = isFeatureEnabled(_:)(v60);
  v29 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v60);
  v56 = v26;
  if ((v27 & 1) != 0 && (v30 = UITraitCollection.isSizeClassRegular.getter(v29), (v30 & 1) != 0))
    v52 = UITraitCollection.prefersAccessibilityLayouts.getter(v30) ^ 1;
  else
    v52 = 0;
  v31 = TapToRate.title.getter();
  v33 = v32;
  DynamicTextAppearance.init()(v31);
  if (qword_1007F2430 != -1)
    swift_once(&qword_1007F2430, sub_100414E1C);
  v34 = type metadata accessor for FontUseCase(0);
  v35 = sub_1000117A8(v34, (uint64_t)qword_100855178);
  DynamicTextAppearance.withFontUseCase(_:)(v35);
  v36 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v36(v12, v9);
  DynamicTextAppearance.withNumberOfLines(_:)(1);
  v36(v15, v9);
  DynamicTextAppearance.withLineBreakMode(_:)(4);
  v36(v18, v9);
  v37 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v31, v33, v22, v37);
  v38 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  v40 = LayoutViewPlaceholder.init(measureWith:)(sub_1002AE86C, 0, v39);
  if (qword_1007F0BA8 != -1)
    swift_once(&qword_1007F0BA8, sub_100031BA8);
  v41 = v55;
  v61[3] = v55;
  v61[4] = &protocol witness table for LabelPlaceholder;
  v42 = sub_1000117C0(v61);
  v43 = v54;
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v54 + 16))(v42, v25, v41);
  v57[0] = v40;
  Measurable.placeable.getter(v62, v38, &protocol witness table for LayoutViewPlaceholder);
  sub_100032858((uint64_t)&qword_1008506B8, (uint64_t)v60);
  v44 = objc_msgSend(v53, "traitCollection");
  v45 = sub_10033E5AC((uint64_t)v44, v8, a2);
  sub_10033E708(v45, v57);
  v46 = v58;
  v47 = v59;
  sub_100011064(v57, v58);
  v48 = dispatch thunk of Placeable.measure(toFit:with:)(v44, v46, v47, v8, a2);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v57);
  swift_release(v40);

  sub_100045CF0(v60);
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v25, v41);
  if ((v52 & 1) != 0)
  {

  }
  else
  {
    v49 = v56;
    if (qword_1007F1880 != -1)
      swift_once(&qword_1007F1880, sub_10024C620);

  }
  return v48;
}

_QWORD *sub_100045CF0(_QWORD *a1)
{
  destroy for ProductTapToRateLayout(a1);
  return a1;
}

void sub_100045D24(char a1, char a2, int a3, id a4, double a5, char a6, unsigned __int8 a7)
{
  int v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v13 = a7;
  v14 = objc_msgSend(a4, "traitCollection");
  v15 = v14;
  if (v13 == 1)
  {
    v16 = objc_msgSend(v14, "preferredContentSizeCategory");
    v17 = UIContentSizeCategory.isAccessibilityCategory.getter(v16);

    if ((v17 & 1) != 0)
      goto LABEL_6;
  }
  else
  {

  }
  sub_1005995D0(a1);
  v19 = v18;
  sub_1005995FC(a1);
  v21 = v20;
  objc_msgSend(v19, "size");
  objc_msgSend(v21, "size");

LABEL_6:
  sub_10004191C(a2 & 1, a1, a6 & 1, a7, a4, a5);
}

double sub_100045E9C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v31;
  uint64_t v32;

  v9 = type metadata accessor for ComponentLayoutOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C((uint64_t *)&unk_1007F5390);
  v14 = sub_100044CE0();
  v15 = StateLens<A>.currentValue.getter(&v32, v13, v14);
  if (v32 == 2)
  {
    v15 = (_QWORD *)EditorsChoice.isCollapsed.getter(v15);
    v16 = (char)v15;
  }
  else
  {
    v16 = v32 & 1;
  }
  static ComponentLayoutOptions.overflowed.getter(v15);
  v17 = sub_10000E99C((unint64_t *)&qword_1007F5320, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  v18 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v9, v17);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = v18 | ~v16;
  v21 = EditorsChoice.showsBadge.getter(v19);
  v22 = v21;
  v23 = EditorsChoice.title.getter(v21);
  v25 = v24;
  v26 = EditorsChoice.notes.getter();
  v28 = v27;
  v29 = sub_100043414(v22 & 1, v23, v25, v26, v27, v20 & 1, a6, a1, a2);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v25);
  return v29;
}

void sub_10004602C(char a1, char a2, int a3, id a4, double a5, char a6, unsigned __int8 a7)
{
  int v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v13 = a7;
  v14 = objc_msgSend(a4, "traitCollection");
  v15 = v14;
  if (v13 == 1)
  {
    v16 = objc_msgSend(v14, "preferredContentSizeCategory");
    v17 = UIContentSizeCategory.isAccessibilityCategory.getter(v16);

    if ((v17 & 1) != 0)
      goto LABEL_6;
  }
  else
  {

  }
  sub_1005995D0(a1);
  v19 = v18;
  sub_1005995FC(a1);
  v21 = v20;
  objc_msgSend(v19, "size");
  objc_msgSend(v21, "size");

LABEL_6:
  sub_100041B50(a2 & 1, a1, a6 & 1, a7, a4, a5);
}

uint64_t sub_1000461B0()
{
  return sub_10000E99C(&qword_1007F5430, type metadata accessor for PrivacyFooterCollectionViewCell, (uint64_t)&unk_100670C50);
}

double sub_1000461E0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  __n128 v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD v65[5];
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;

  v0 = type metadata accessor for PageGrid(0);
  v62 = *(_QWORD *)(v0 - 8);
  v63 = v0;
  v1 = __chkstk_darwin(v0);
  v61 = (uint64_t *)((char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for PrivacyFooterLayout.Metrics(0, v1);
  v59 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v60 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PrivacyFooterLayout(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v64 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LabelPlaceholderCompatibility(0, v8);
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PrivacyFooter(0, v15);
  v19 = sub_10000E99C(&qword_1007F5438, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyFooter, (uint64_t)&protocol conformance descriptor for PrivacyFooter);
  ItemLayoutContext.typedModel<A>(as:)(v66, v18, v18, v19);
  v20 = v66[0];
  if (!v66[0])
    return 0.0;
  v55 = v7;
  v56 = v6;
  sub_1000466E4();
  if (qword_1007F2520 != -1)
    swift_once(&qword_1007F2520, sub_1004158A4);
  v21 = sub_1000117A8(v13, (uint64_t)qword_100855448);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
  KeyPath = swift_getKeyPath(&unk_100670CA0);
  ItemLayoutContext.subscript.getter(v66);
  swift_release(KeyPath);
  v23 = (void *)v66[0];
  v24 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v17, v66[0]);

  v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v26 = PrivacyFooter.bodyText.getter(v25);
  v27 = LinkableText.styledText.getter();
  swift_release(v26);
  v28 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(v24);
  swift_release(v27);
  v29 = type metadata accessor for Feature(0);
  v67 = v29;
  v68 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v30 = sub_1000117C0(v66);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v30, enum case for Feature.measurement_with_labelplaceholder(_:), v29);
  v31 = v28;
  v32 = (id)v24;
  LOBYTE(v24) = isFeatureEnabled(_:)(v66);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  v33 = LabelPlaceholderCompatibility.init(attributedText:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v28, v32, 4, 0, 0, 0, 0, v24 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v66, v33);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
  if (qword_1007F12E0 != -1)
    swift_once(&qword_1007F12E0, sub_10012E790);
  v34 = sub_1000117A8(v3, (uint64_t)qword_100851BA8);
  v35 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v60, v34, v3);
  v36 = v67;
  v37 = v68;
  v38 = sub_100011064(v66, v67);
  v65[3] = v36;
  v65[4] = *(_QWORD *)(v37 + 8);
  v39 = sub_1000117C0(v65);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v39, v38, v36);
  v40 = v64;
  PrivacyFooterLayout.init(metrics:bodyLabel:actionButtons:)(v35, v65, _swiftEmptyArrayStorage);
  v41 = swift_getKeyPath(&unk_100670CD0);
  v42 = v61;
  ItemLayoutContext.subscript.getter(v61);
  swift_release(v41);
  v43 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v45 = v44;
  (*(void (**)(_QWORD *, uint64_t))(v62 + 8))(v42, v63);
  v46 = swift_getKeyPath(&unk_100670D00);
  ItemLayoutContext.subscript.getter(v65);
  swift_release(v46);
  v47 = v65[0];
  v48 = sub_10000E99C((unint64_t *)&unk_1007F5450, (uint64_t (*)(uint64_t))&type metadata accessor for PrivacyFooterLayout, (uint64_t)&protocol conformance descriptor for PrivacyFooterLayout);
  v49 = v56;
  dispatch thunk of Measurable.measurements(fitting:in:)(v47, v56, v48, v43, v45);
  v51 = v50;

  swift_release(v20);
  v52 = swift_unknownObjectRelease(v47);
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v40, v49, v52);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v66);
  return v51;
}

unint64_t sub_1000466E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F5440;
  if (!qword_1007F5440)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F5440);
  }
  return result;
}

void sub_10004672C()
{
  qword_1008507A0 = 0x4079500000000000;
}

void sub_100046740(uint64_t a1)
{
  sub_1000467A4(a1, qword_1008507A8);
}

void sub_100046764(uint64_t a1)
{
  sub_1000467A4(a1, qword_1008507C0);
}

void sub_100046784(uint64_t a1)
{
  sub_1000467A4(a1, qword_1008507D8);
}

void sub_1000467A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for AspectRatio(0);
  sub_100045464(v3, a2);
  v4 = sub_1000117A8(v3, (uint64_t)a2);
  AspectRatio.init(_:_:)(v4);
}

uint64_t sub_100046800(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_1008507F0);
  sub_1000117A8(v5, (uint64_t)qword_1008507F0);
  if (qword_1007F2648 != -1)
    swift_once(&qword_1007F2648, sub_100416984);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_1008557C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 28.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10004694C(uint64_t a1)
{
  return sub_100046AB8(a1, qword_100850808);
}

uint64_t sub_100046958(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100850820);
  sub_1000117A8(v5, (uint64_t)qword_100850820);
  if (qword_1007F2650 != -1)
    swift_once(&qword_1007F2650, sub_100416A14);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_1008557D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 35.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100046AAC(uint64_t a1)
{
  return sub_100046AB8(a1, qword_100850838);
}

uint64_t sub_100046AB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_10000DF3C(&qword_1007F5460);
  sub_100045464(v3, a2);
  sub_1000117A8(v3, (uint64_t)a2);
  v7 = 2;
  v8 = 0;
  v4 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v8, &v7, v4, v5);
}

double sub_100046B3C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double v26;
  uint64_t v27;
  int v28;
  double v29;
  void (*v31)(char *, uint64_t);
  _QWORD v33[5];

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v33[-1] - v10;
  v12 = type metadata accessor for FontSource(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v33[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "userInterfaceIdiom", v14) == (id)1 && objc_msgSend(a1, "horizontalSizeClass") == (id)2)
  {
    *(double *)&v17 = 44.0;
LABEL_11:
    v18 = *(double *)&v17;
    goto LABEL_12;
  }
  v18 = 39.0;
  if (JUScreenClassHasRoundedCorners() && a2)
  {
    v19 = objc_msgSend(a2, "window");
    if (!v19)
    {
      *(double *)&v17 = 39.0;
      goto LABEL_11;
    }
    v20 = v19;
    objc_msgSend(v19, "safeAreaInsets");
    v22 = v21;

    if (v22 > 0.0)
      v18 = v22 + 11.0;
    else
      v18 = 39.0;
  }
LABEL_12:
  if (qword_1007F2648 != -1)
    swift_once(&qword_1007F2648, sub_100416984);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_1000117A8(v23, (uint64_t)qword_1008557C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for FontSource.useCase(_:), v12);
  v33[3] = v12;
  v33[4] = &protocol witness table for FontSource;
  v25 = sub_1000117C0(v33);
  (*(void (**)(_QWORD *, char *, uint64_t))(v13 + 16))(v25, v16, v12);
  v26 = CGFloat.scalingLike(_:with:)(v33, a1, v18);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v33);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Dimensions.defaultRoundingRule.getter(v27);
  *(double *)v33 = v26;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v28 == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    v29 = round(v26);
LABEL_24:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    return v29;
  }
  if (v28 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v29 = rint(v26);
    goto LABEL_24;
  }
  if (v28 == enum case for FloatingPointRoundingRule.up(_:))
  {
    v29 = ceil(v26);
    goto LABEL_24;
  }
  if (v28 == enum case for FloatingPointRoundingRule.down(_:))
  {
    v29 = floor(v26);
    goto LABEL_24;
  }
  if (v28 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v29 = trunc(v26);
    goto LABEL_24;
  }
  if (v28 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    if ((*(_QWORD *)&v26 & 0x8000000000000000) != 0)
      return floor(v26);
    else
      return ceil(v26);
  }
  else
  {
    Double._roundSlowPath(_:)(v11);
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v11, v4);
    v31(v7, v4);
    return *(double *)v33;
  }
}

double sub_100046EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  char v73;
  char v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _BYTE *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t Strong;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  unsigned int (*v103)(uint64_t, uint64_t, uint64_t);
  char *v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  _BYTE *v131;
  char *v132;
  _QWORD v133[6];

  v3 = sub_10000DF3C((uint64_t *)&unk_1007FA750);
  __chkstk_darwin(v3);
  v122 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v121 = (char *)&v113 - v6;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v8 = __chkstk_darwin(v7);
  v120 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for ProductMediaMetadata(0, v8);
  v130 = *(_QWORD *)(v125 - 8);
  v10 = __chkstk_darwin(v125);
  v124 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VideoControls(0, v10);
  __chkstk_darwin(v12);
  v129 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v128 = (char *)&v113 - v15;
  v16 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v17 = __chkstk_darwin(v16);
  v127 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for VideoFillMode(0, v17);
  v19 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v126 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for VideoConfiguration(0, v21);
  v118 = *(_QWORD *)(v22 - 8);
  v119 = v22;
  v23 = __chkstk_darwin(v22);
  v117 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Shelf.ContentsMetadata(0, v23);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (uint64_t *)((char *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_10000DF3C(&qword_1007F5468);
  __chkstk_darwin(v33);
  v132 = (char *)&v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for ProductMediaItem(0);
  v36 = sub_10000E99C((unint64_t *)&qword_1007F5470, (uint64_t (*)(uint64_t))&type metadata accessor for ProductMediaItem, (uint64_t)&protocol conformance descriptor for ProductMediaItem);
  v37 = ItemLayoutContext.typedModel<A>(as:)(v133, v35, v35, v36);
  v39 = v133[0];
  if (v133[0])
  {
    v114 = a2;
    v40 = ProductMediaItem.screenshot.getter(v37);
    if (v40)
    {
      v115 = v40;
      v123 = v39;
    }
    else
    {
      v41 = ((uint64_t (*)(void))ProductMediaItem.video.getter)();
      if (!v41)
      {
        *(_QWORD *)&result = swift_release(v39).n128_u64[0];
        return result;
      }
      v42 = v41;
      v123 = v39;
      v115 = Video.preview.getter(v41);
      swift_release(v42);
    }
    KeyPath = swift_getKeyPath(&unk_100670DA8);
    ItemLayoutContext.subscript.getter(v32);
    swift_release(KeyPath);
    v44 = swift_getKeyPath(&unk_100670DD8);
    ReadOnlyLens.subscript.getter(v44, v29);
    v45 = swift_release(v44);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v30 + 8))(v32, v29, v45);
    if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v28, v25) == enum case for Shelf.ContentsMetadata.productMedia(_:))
    {
      (*(void (**)(char *, uint64_t))(v26 + 96))(v28, v25);
      v46 = v130;
      v47 = v132;
      v48 = v125;
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v132, v28, v125);
      v49 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v48);
    }
    else
    {
      v46 = v130;
      v48 = v125;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v132, 1, 1, v125);
      v49 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    }
    v50 = v131;
    v51 = v123;
    v52 = ProductMediaItem.video.getter(v49);
    if (v52)
    {
      v53 = v52;
      v54 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v19 + 104))(v126, enum case for VideoFillMode.scaleAspectFit(_:), v116);
      v55 = Video.preview.getter(v54);
      Artwork.size.getter(v55);
      v56 = v127;
      AspectRatio.init(_:_:)(v57);
      swift_release(v55);
      v58 = type metadata accessor for AspectRatio(0);
      v59 = 1;
      v60 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v56, 0, 1, v58);
      v61 = Video.playbackControls.getter(v60);
      v62 = Video.autoPlayPlaybackControls.getter(v61);
      v63 = Video.canPlayFullScreen.getter(v62);
      v64 = Video.allowsAutoPlay.getter();
      v65 = Video.looping.getter();
      v66 = v132;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v132, 1, v48))
      {
        v67 = 0;
      }
      else
      {
        v68 = v124;
        v69 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 16))(v124, v66, v48);
        v70 = ProductMediaMetadata.platform.getter(v69);
        v71 = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v68, v48);
        v67 = MediaPlatform.deviceCornerRadiusFactor.getter(v71, v72);
        v74 = v73;
        v75 = v70;
        v46 = v130;
        swift_release(v75);
        v59 = v74 & 1;
      }
      v76 = v117;
      VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v126, v127, v128, v129, v63 & 1, v64 & 1, v65 & 1, 1, v67, v59);
      v77 = type metadata accessor for VideoViewManager(0);
      v78 = v114;
      v79 = BaseObjectGraph.inject<A>(_:)(v133, v77, v77);
      v80 = v133[0];
      v81 = Video.playbackId.getter(v133, v79);
      v82 = (uint64_t)v120;
      Video.videoUrl.getter(v81);
      v83 = type metadata accessor for URL(0);
      v84 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
      v85 = (uint64_t)v121;
      v86 = Video.templateMediaEvent.getter(v84);
      v87 = (uint64_t)v122;
      Video.templateClickEvent.getter(v86);
      v88 = type metadata accessor for VideoView(0);
      v89 = sub_10000E99C(&qword_1007F47E0, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
      v90 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v133, v82, v76, v85, v87, v78, v88, v89);
      sub_100011088(v87, (uint64_t *)&unk_1007FA750);
      sub_100011088(v85, (uint64_t *)&unk_1007FA750);
      sub_100011088(v82, (uint64_t *)&unk_1007F5150);
      sub_100011088((uint64_t)v133, (uint64_t *)&unk_1007F9850);
      v91 = v131;
      sub_10038ED68((uint64_t)v90);
      swift_release(v53);
      swift_release(v80);

      (*(void (**)(char *, uint64_t))(v118 + 8))(v76, v119);
      v51 = v123;
      v50 = v91;
    }
    v92 = *(_QWORD *)&v50[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_borderedScreenshotView];
    v93 = *(id *)(v92 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
    v94 = ProductMediaItem.screenshot.getter(v93);
    v96 = v94;
    if (v94)
      *(_QWORD *)&v95 = swift_release(v94).n128_u64[0];
    objc_msgSend(v93, "setHidden:", v96 == 0, v95);

    Strong = swift_unknownObjectWeakLoadStrong(&v50[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_videoView]);
    v98 = (uint64_t)v132;
    if (Strong)
    {
      v99 = (void *)Strong;
      v100 = ProductMediaItem.video.getter(Strong);
      v102 = v100;
      if (v100)
        *(_QWORD *)&v101 = swift_release(v100).n128_u64[0];
      objc_msgSend(v99, "setHidden:", v102 == 0, v101);

    }
    v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
    if (v103(v98, 1, v48)
      || (v104 = v124,
          v105 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))(v124, v98, v48),
          v106 = ProductMediaMetadata.hasPortraitMedia.getter(v105),
          v107 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v104, v48),
          (v106 & 1) == 0))
    {
      v108 = 0;
    }
    else
    {
      v108 = dispatch thunk of Artwork.isPortrait.getter(v107) ^ 1;
    }
    v50[OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_shouldForcePortrait] = v108 & 1;
    if (v103(v98, 1, v48))
    {
      v109 = 0;
    }
    else
    {
      v110 = v124;
      v111 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))(v124, v98, v48);
      v109 = ProductMediaMetadata.platform.getter(v111);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v110, v48);
    }
    v112 = *(_QWORD *)(v92 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform);
    *(_QWORD *)(v92 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_platform) = v109;
    swift_retain(v109);
    swift_release(v112);
    sub_10022E900();
    objc_msgSend(v50, "setNeedsLayout", swift_release(v109).n128_f64[0]);
    swift_release(v115);
    swift_release(v51);
    sub_100011088(v98, &qword_1007F5468);
  }
  return result;
}

uint64_t sub_1000477BC()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_1000477DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000242B0(v3, a1);
}

uint64_t sub_100047830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100024268(a1, v3);
  return swift_endAccess(v5);
}

void *sub_10004788C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension34ProductMediaItemCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_1000478DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100670D60, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100047940()
{
  return ShelfLayoutContext.shelf.getter();
}

id sub_100047AF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchHintsCollectionViewDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchHintsCollectionViewDataSource()
{
  return objc_opt_self(_TtC22SubscribePageExtension35SearchHintsCollectionViewDataSource);
}

uint64_t sub_100047B58()
{
  return sub_10000E99C(&qword_1007F54B0, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_10068430C);
}

double sub_100047B88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for AppEvent(0, v5);
  v9 = sub_10000E99C(&qword_1007F54B8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEvent, (uint64_t)&protocol conformance descriptor for AppPromotion);
  ItemLayoutContext.typedModel<A>(as:)(&v25, v8, v8, v9);
  v10 = v25;
  if (!v25)
    return 0.0;
  KeyPath = swift_getKeyPath(&unk_100670E88);
  ItemLayoutContext.subscript.getter(v7);
  swift_release(KeyPath);
  v12 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v14 = v13;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  v15 = sub_1000826AC();
  v16 = type metadata accessor for AppEventView(0);
  ObjectType = swift_getObjectType();
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(a2, v18, 0, 0, 0);
  v20 = swift_unknownObjectRetain(v15);
  v20.n128_f64[0] = v12;
  sub_1001626C8(v10, v15, v19, v20, v14, v16, ObjectType);
  v22 = v21;
  swift_unknownObjectRelease_n(v15, 2);
  swift_release(v10);
  return v22;
}

double sub_100047D30(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  double v23;
  double v24;
  uint64_t v26;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100670E88);
  ItemLayoutContext.subscript.getter(v6);
  swift_release(KeyPath);
  v8 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v10 = v9;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v11 = sub_1000826AC();
  v12 = type metadata accessor for AppEventView(0);
  type metadata accessor for Placeholder(0);
  v13 = static Placeholder.appEventTitleText.getter();
  v15 = v14;
  v16 = static Placeholder.appEventKindText.getter();
  v18 = v17;
  v19 = static Placeholder.appEventSubtitleText.getter();
  v21 = v20;
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v11);
  sub_1001628A0(v13, v15, v16, v18, v19, v21, a2, v11, v8, v10, v12, ObjectType);
  v24 = v23;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v21);
  swift_unknownObjectRelease_n(v11, 2);
  return v24;
}

uint64_t sub_100047EB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (!v1
    || (v9 = v1,
        v2 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr),
        v3 = v1,
        v4 = sub_10000DF3C(&qword_1007F5538),
        (swift_dynamicCast(&v10, &v9, v2, v4, 6) & 1) == 0))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    goto LABEL_6;
  }
  v5 = *((_QWORD *)&v11 + 1);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_6:
    sub_100011088((uint64_t)&v10, &qword_1007F5528);
    return 0;
  }
  v6 = v12;
  sub_100011064(&v10, *((uint64_t *)&v11 + 1));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v10);
  return v7;
}

uint64_t sub_100047F9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (!v1
    || (v9 = v1,
        v2 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr),
        v3 = v1,
        v4 = sub_10000DF3C(&qword_1007F5538),
        (swift_dynamicCast(&v10, &v9, v2, v4, 6) & 1) == 0))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    goto LABEL_6;
  }
  v5 = *((_QWORD *)&v11 + 1);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_6:
    sub_100011088((uint64_t)&v10, &qword_1007F5528);
    return 0;
  }
  v6 = v12;
  sub_100011064(&v10, *((uint64_t *)&v11 + 1));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v10);
  return v7;
}

id sub_100048080(void *a1, id a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  int v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  void *v71;
  id v72;
  Class isa;
  id v74;
  void *v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  char *v80;
  id v81;
  uint64_t v82;
  void *v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;

  v4 = v3;
  v8 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v8);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v76 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v76 - v15;
  v82 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v21 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AppPromotionPresentable);
  if (v21)
    v22 = v21;
  else
    v22 = 0;
  if (v21)
    v23 = a1;
  else
    v23 = 0;
  if (v23)
  {
    v80 = v10;
    v24 = (_QWORD *)(v4
                   + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
    v25 = *(void **)(v4
                   + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
    *v24 = v23;
    v24[1] = v22;
    v81 = a1;

    swift_unknownObjectWeakAssign(v4+ OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_presentingViewController, a3);
    v83 = a3;
    v26 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v27 = a3;
    v28 = sub_10000DF3C(&qword_1007F5548);
    v29 = (_QWORD *)&unk_100850000;
    if (!swift_dynamicCast(&v84, &v83, v26, v28, 6))
    {
      v86 = 0;
      v84 = 0u;
      v85 = 0u;
      sub_100011088((uint64_t)&v84, (uint64_t *)&unk_1007F5550);
      v39 = 0;
      v43 = v81;
      goto LABEL_39;
    }
    v30 = *((_QWORD *)&v85 + 1);
    v31 = v86;
    sub_100011064(&v84, *((uint64_t *)&v85 + 1));
    v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v84);
    if (!v32)
    {
      v39 = 0;
      goto LABEL_38;
    }
    v79 = a2;
    v33 = objc_msgSend(v32, "visibleViewController");
    if (v33)
    {
      v34 = v33;
      v35 = type metadata accessor for SearchViewController(0);
      v36 = swift_dynamicCastClass(v34, v35);
      if (v36)
      {
        v37 = v36;

        v38 = (char *)objc_retain(*(id *)(v37
                                        + OBJC_IVAR____TtC22SubscribePageExtension20SearchViewController_searchResultsContainerViewController));

        v39 = *(void **)&v38[OBJC_IVAR____TtC22SubscribePageExtension36SearchResultsContainerViewController_activeSearchSectionViewController];
        v40 = v39;

        if (v39)
        {
          v41 = v40;
          goto LABEL_21;
        }
        goto LABEL_28;
      }

    }
    v40 = objc_msgSend(v32, "visibleViewController");

    if (v40)
    {
      v44 = objc_opt_self(UICollectionViewController);
      v45 = swift_dynamicCastObjCClass(v40, v44);
      if (v45)
      {
        v41 = (void *)v45;
        v39 = (void *)v45;
LABEL_21:
        a2 = v79;
        v46 = v40;
        swift_unknownObjectWeakAssign(v4+ OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController, v41);
        v79 = v41;
        v47 = objc_msgSend(v41, "collectionView");
        v48 = v47;
        if (v47 && (v49 = objc_msgSend(v47, "indexPathsForSelectedItems")) != 0)
        {
          v50 = v49;
          v78 = v48;
          v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v82);

          if (*(_QWORD *)(v51 + 16))
          {
            v52 = v82;
            (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v16, v51 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v82);
            v53 = 0;
          }
          else
          {
            v53 = 1;
            v52 = v82;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v53, 1, v52);
          v54 = swift_bridgeObjectRelease(v51);
          v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v16, 1, v52, v54);
          v48 = v78;
          if (v55 != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, v52);
            v72 = v48;
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v74 = objc_msgSend(v72, "cellForItemAtIndexPath:", isa);

            v75 = *(void **)(v4
                           + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
            *(_QWORD *)(v4
                      + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell) = v74;

            v29 = (_QWORD *)&unk_100850000;
            (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v82);
            v43 = v81;
            goto LABEL_39;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, 1, 1, v82);
        }
        sub_100011088((uint64_t)v16, &qword_1007F5520);
        v56 = *(void **)(v4
                       + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_originatingView);
        if (v56)
        {
          v78 = v48;
          v57 = v56;
          v77 = v57;
          while (1)
          {
            v58 = objc_opt_self(UICollectionViewCell);
            v59 = swift_dynamicCastObjCClass(v57, v58);
            if (v59)
              break;
            v60 = objc_msgSend(v57, "superview");

            v57 = v60;
            if (!v60)
            {

              goto LABEL_37;
            }
          }
          v29 = &unk_100850000;
          v71 = *(void **)(v4
                         + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
          *(_QWORD *)(v4
                    + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell) = v59;

          v43 = v81;
LABEL_39:
          v61 = *(void **)(v4 + v29[267]);
          if (!v61)
          {
LABEL_49:
            v42 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppPromotionDetailPagePresentationController()), "initWithPresentedViewController:presentingViewController:", v23, a2);

            return v42;
          }
          if (v39)
          {
            v62 = v61;
            v63 = objc_msgSend(v39, "collectionView");
            if (v63)
            {
              v64 = v63;
              v65 = objc_msgSend(v63, "indexPathForCell:", v62);

              if (v65)
              {
                v66 = (uint64_t)v80;
                static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v65);

                v67 = 0;
              }
              else
              {
                v67 = 1;
                v66 = (uint64_t)v80;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v66, v67, 1, v82);
              sub_100049F24(v66, (uint64_t)v13);
              goto LABEL_48;
            }
          }
          else
          {
            v68 = v61;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v82);
LABEL_48:
          v69 = v4
              + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath;
          swift_beginAccess(v4 + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath, &v84, 33, 0);
          sub_100049F6C((uint64_t)v13, v69);
          swift_endAccess(&v84);

          goto LABEL_49;
        }

LABEL_37:
LABEL_38:
        v43 = v81;
        v29 = &unk_100850000;
        goto LABEL_39;
      }

    }
    v39 = 0;
LABEL_28:
    a2 = v79;
    goto LABEL_38;
  }
  return 0;
}

void sub_100048784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  CGFloat m44;
  void *v16;
  void *v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  CGFloat m24;
  CGFloat m23;
  CGFloat m22;
  CGFloat m21;
  CGFloat m14;
  CGFloat m13;
  CGFloat m12;
  CGFloat m11;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;

  v4 = (void *)sub_100047EB8();
  if (v4
    && (v5 = v4,
        v6 = objc_msgSend(v4, "layer"),
        v5,
        v7 = objc_msgSend(v6, "presentationLayer"),
        v6,
        v7))
  {
    objc_msgSend(v7, "transform");
    m12 = v39;
    m11 = v38;
    m14 = v41;
    m13 = v40;
    m22 = v43;
    m21 = v42;
    m31 = v46;
    m24 = v45;
    m23 = v44;
    m32 = v47;
    m33 = v48;
    m34 = v49;
    m41 = v50;
    m42 = v51;
    m43 = v52;
    m44 = v53;

  }
  else
  {
    v16 = (void *)sub_100047EB8();
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "layer");

      objc_msgSend(v18, "transform");
      m12 = v39;
      m11 = v38;
      m14 = v41;
      m13 = v40;
      m22 = v43;
      m21 = v42;
      m31 = v46;
      m24 = v45;
      m23 = v44;
      m32 = v47;
      m33 = v48;
      m34 = v49;
      m41 = v50;
      m42 = v51;
      m43 = v52;
      m44 = v53;

    }
    else
    {
      m12 = CATransform3DIdentity.m12;
      m11 = CATransform3DIdentity.m11;
      m14 = CATransform3DIdentity.m14;
      m13 = CATransform3DIdentity.m13;
      m22 = CATransform3DIdentity.m22;
      m21 = CATransform3DIdentity.m21;
      m31 = CATransform3DIdentity.m31;
      m24 = CATransform3DIdentity.m24;
      m23 = CATransform3DIdentity.m23;
      m32 = CATransform3DIdentity.m32;
      m33 = CATransform3DIdentity.m33;
      m34 = CATransform3DIdentity.m34;
      m41 = CATransform3DIdentity.m41;
      m42 = CATransform3DIdentity.m42;
      m43 = CATransform3DIdentity.m43;
      m44 = CATransform3DIdentity.m44;
    }
  }
  v19 = *(double *)(a3
                  + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
  if (v19 != 0.0)
  {
    v20 = *(_QWORD *)(a3
                    + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController
                    + 8);
    ObjectType = swift_getObjectType();
    v38 = v19;
    v22 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 8) + 8))(ObjectType);
    v23 = objc_msgSend(v22, "layer");

    v38 = m11;
    v39 = m12;
    v40 = m13;
    v41 = m14;
    v42 = m21;
    v43 = m22;
    v44 = m23;
    v45 = m24;
    v46 = m31;
    v47 = m32;
    v48 = m33;
    v49 = m34;
    v50 = m41;
    v51 = m42;
    v52 = m43;
    v53 = m44;
    objc_msgSend(v23, "setTransform:", &v38);

  }
  v24 = (void *)sub_100047EB8();
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "layer");

    objc_msgSend(v26, "removeAllAnimations");
  }
  v27 = (void *)sub_100047EB8();
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "layer");

    v38 = m11;
    v39 = m12;
    v40 = m13;
    v41 = m14;
    v42 = m21;
    v43 = m22;
    v44 = m23;
    v45 = m24;
    v46 = m31;
    v47 = m32;
    v48 = m33;
    v49 = m34;
    v50 = m41;
    v51 = m42;
    v52 = m43;
    v53 = m44;
    objc_msgSend(v29, "setTransform:", &v38);

  }
}

void sub_100048AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v4 = *(void **)(a3 + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (v4
    && (*(_QWORD *)&v26 = *(_QWORD *)(a3
                                    + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell),
        v5 = sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr),
        v6 = v4,
        v7 = sub_10000DF3C(&qword_1007F5538),
        (swift_dynamicCast(&v34, &v26, v5, v7, 6) & 1) != 0))
  {
    v8 = *((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v9 = v36;
      sub_100011064(&v34, *((uint64_t *)&v35 + 1));
      v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v34);
      v11 = objc_msgSend(v10, "layer", (_QWORD)v26);

      v12 = *(_OWORD *)&CATransform3DIdentity.m13;
      v26 = *(_OWORD *)&CATransform3DIdentity.m11;
      v27 = v12;
      v13 = *(_OWORD *)&CATransform3DIdentity.m23;
      v28 = *(_OWORD *)&CATransform3DIdentity.m21;
      v29 = v13;
      v14 = *(_OWORD *)&CATransform3DIdentity.m33;
      v30 = *(_OWORD *)&CATransform3DIdentity.m31;
      v31 = v14;
      v15 = *(_OWORD *)&CATransform3DIdentity.m43;
      v32 = *(_OWORD *)&CATransform3DIdentity.m41;
      v33 = v15;
      objc_msgSend(v11, "setTransform:", &v26);

      goto LABEL_7;
    }
  }
  else
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  sub_100011088((uint64_t)&v34, &qword_1007F5528);
LABEL_7:
  v16 = a3
      + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController;
  v17 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
  if (v17)
  {
    v18 = *(_QWORD *)(v16 + 8);
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v26 = v17;
    v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 8) + 8))(ObjectType);
    v21 = objc_msgSend(v20, "layer");

    v22 = *(_OWORD *)&CATransform3DIdentity.m13;
    v26 = *(_OWORD *)&CATransform3DIdentity.m11;
    v27 = v22;
    v23 = *(_OWORD *)&CATransform3DIdentity.m23;
    v28 = *(_OWORD *)&CATransform3DIdentity.m21;
    v29 = v23;
    v24 = *(_OWORD *)&CATransform3DIdentity.m33;
    v30 = *(_OWORD *)&CATransform3DIdentity.m31;
    v31 = v24;
    v25 = *(_OWORD *)&CATransform3DIdentity.m43;
    v32 = *(_OWORD *)&CATransform3DIdentity.m41;
    v33 = v25;
    objc_msgSend(v21, "setTransform:", &v26);

  }
}

void sub_100048C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);
  id v7;

  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(a3
                  + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
    if (v3)
    {
      v4 = *(_QWORD *)(a3
                     + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController
                     + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(a3+ OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController), a2);
      v6 = *(void (**)(uint64_t, uint64_t))(v4 + 48);
      v7 = v3;
      v6(ObjectType, v4);

    }
  }
}

char *sub_100048D84(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  Class isa;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  void *v66;
  objc_class *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  double *v71;
  id v72;
  id v73;
  char *v74;
  void *v75;
  objc_class *v76;
  char *v77;
  char *v78;
  char *v79;
  id v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  char *v84;
  char *v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  id v93;
  char v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  char *v101;
  char v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v107;
  void *v108;
  double v109;
  id v110;
  char v111[24];
  objc_super v112;
  void *v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  objc_super v117;

  v2 = v1;
  v4 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v4);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController]);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "collectionView");

    if (v14)
    {
      v15 = (uint64_t)&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath];
      swift_beginAccess(&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceIndexPath], v111, 0, 0);
      sub_100049EBC(v15, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {

        sub_100011088((uint64_t)v6, &qword_1007F5520);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v17 = objc_msgSend(v14, "cellForItemAtIndexPath:", isa);

        if (v17)
        {
          v18 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell];
          *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell] = v17;

          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

        }
      }
    }
  }
  v19 = OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell;
  v20 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell];
  if (!v20)
    goto LABEL_24;
  v21 = swift_unknownObjectWeakLoadStrong(v11);
  if (!v21)
    goto LABEL_24;
  v22 = (void *)v21;
  v23 = v20;
  v24 = sub_100047EB8();
  if (v24)
  {
    v25 = (void *)v24;
    v26 = sub_100047F9C();
    if (!v26)
    {

      goto LABEL_24;
    }
    v27 = (void *)v26;
    v28 = *(void **)&v2[v19];
    v110 = v23;
    if (v28
      && (v113 = v28,
          *(double *)&v29 = COERCE_DOUBLE(sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr)), v30 = v28, v31 = sub_10000DF3C(&qword_1007F5538), (swift_dynamicCast(&v114, &v113, v29, v31, 6) & 1) != 0))
    {
      v109 = *(double *)&v29;
      v32 = *((_QWORD *)&v115 + 1);
      if (*((_QWORD *)&v115 + 1))
      {
        v108 = v27;
        v33 = v116;
        sub_100011064(&v114, *((uint64_t *)&v115 + 1));
        v34 = (*(double (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33);
        v36 = v35;
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v114);
        v37 = *(void **)&v2[v19];
        if (v37
          && (v113 = *(void **)&v2[v19],
              v38 = v37,
              (swift_dynamicCast(&v114, &v113, *(_QWORD *)&v109, v31, 6) & 1) != 0))
        {
          v39 = *((_QWORD *)&v115 + 1);
          v40 = v108;
          if (*((_QWORD *)&v115 + 1))
          {
            v41 = v116;
            sub_100011064(&v114, *((uint64_t *)&v115 + 1));
            v109 = (*(double (**)(uint64_t, uint64_t))(v41 + 32))(v39, v41);
            v107 = v42;
            v44 = v43;
            v46 = v45;
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v114);
            v47 = v110;
            objc_msgSend(v110, "bounds");
            v49 = v48;
            v51 = v50;
            v53 = v52;
            v55 = v54;
            v56 = objc_msgSend(v22, "view");
            objc_msgSend(v47, "convertRect:toView:", v56, v49, v51, v53, v55);
            v58 = v57;
            v60 = v59;

            objc_msgSend(v40, "bounds");
            objc_msgSend(v40, "convertRect:toCoordinateSpace:", v47);
            v62 = v34 + v58 + v61;
            v64 = v36 + v60 + v63;
            v65 = swift_unknownObjectWeakLoadStrong(v11);
            v66 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController];
            v67 = (objc_class *)type metadata accessor for AppPromotionDetailPageCloseAnimation();
            v68 = (char *)objc_allocWithZone(v67);
            *(_QWORD *)&v68[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toCardView] = v25;
            *(_QWORD *)&v68[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController] = v65;
            v69 = &v68[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toBounds];
            v70 = v107;
            *(double *)v69 = v109;
            *((_QWORD *)v69 + 1) = v70;
            *((_QWORD *)v69 + 2) = v44;
            *((_QWORD *)v69 + 3) = v46;
            v69[32] = 0;
            v71 = (double *)&v68[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toCenter];
            *v71 = v62;
            v71[1] = v64;
            *((_BYTE *)v71 + 16) = 0;
            *(_QWORD *)&v68[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_detailPageViewController] = v66;
            v112.receiver = v68;
            v112.super_class = v67;
            v72 = v66;
            v73 = v25;
            v74 = (char *)objc_msgSendSuper2(&v112, "init");

            goto LABEL_25;
          }
        }
        else
        {
          v116 = 0;
          v114 = 0u;
          v115 = 0u;
          v40 = v108;
        }

        goto LABEL_22;
      }
    }
    else
    {
      v116 = 0;
      v114 = 0u;
      v115 = 0u;
    }

LABEL_22:
    sub_100011088((uint64_t)&v114, &qword_1007F5528);
    goto LABEL_24;
  }

LABEL_24:
  v75 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController];
  v76 = (objc_class *)type metadata accessor for AppPromotionDetailPageCloseAnimation();
  v77 = (char *)objc_allocWithZone(v76);
  *(_QWORD *)&v77[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toCardView] = 0;
  *(_QWORD *)&v77[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toCollectionViewController] = 0;
  v78 = &v77[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toBounds];
  *(_OWORD *)v78 = 0u;
  *((_OWORD *)v78 + 1) = 0u;
  v78[32] = 1;
  v79 = &v77[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_toCenter];
  *(_QWORD *)v79 = 0;
  *((_QWORD *)v79 + 1) = 0;
  v79[16] = 1;
  *(_QWORD *)&v77[OBJC_IVAR____TtC22SubscribePageExtension36AppPromotionDetailPageCloseAnimation_detailPageViewController] = v75;
  v117.receiver = v77;
  v117.super_class = v76;
  v80 = v75;
  v74 = (char *)objc_msgSendSuper2(&v117, "init");
LABEL_25:
  v81 = swift_allocObject(&unk_1007237A0, 24, 7);
  *(_QWORD *)(v81 + 16) = v2;
  v82 = &v74[OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks];
  swift_beginAccess(&v74[OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks], &v114, 33, 0);
  v83 = *(_QWORD **)v82;
  v84 = v74;
  v85 = v2;
  swift_retain(v81);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v83);
  *(_QWORD *)v82 = v83;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v83 = sub_1002015D8(0, v83[2] + 1, 1, v83);
    *(_QWORD *)v82 = v83;
  }
  v88 = v83[2];
  v87 = v83[3];
  if (v88 >= v87 >> 1)
  {
    v83 = sub_1002015D8((_QWORD *)(v87 > 1), v88 + 1, 1, v83);
    *(_QWORD *)v82 = v83;
  }
  v83[2] = v88 + 1;
  v89 = &v83[3 * v88];
  v89[4] = sub_100049EA4;
  v89[5] = v81;
  *((_BYTE *)v89 + 48) = 0;
  swift_endAccess(&v114);

  swift_release(v81);
  v90 = swift_allocObject(&unk_1007237C8, 24, 7);
  *(_QWORD *)(v90 + 16) = a1;
  swift_beginAccess(v82, &v114, 33, 0);
  v91 = *(_QWORD **)v82;
  v92 = v84;
  v93 = a1;
  swift_retain(v90);
  v94 = swift_isUniquelyReferenced_nonNull_native(v91);
  *(_QWORD *)v82 = v91;
  if ((v94 & 1) == 0)
  {
    v91 = sub_1002015D8(0, v91[2] + 1, 1, v91);
    *(_QWORD *)v82 = v91;
  }
  v96 = v91[2];
  v95 = v91[3];
  if (v96 >= v95 >> 1)
  {
    v91 = sub_1002015D8((_QWORD *)(v95 > 1), v96 + 1, 1, v91);
    *(_QWORD *)v82 = v91;
  }
  v91[2] = v96 + 1;
  v97 = &v91[3 * v96];
  v97[4] = sub_100049EAC;
  v97[5] = v90;
  *((_BYTE *)v97 + 48) = 1;
  swift_endAccess(&v114);

  swift_release(v90);
  v98 = swift_allocObject(&unk_1007237F0, 24, 7);
  *(_QWORD *)(v98 + 16) = v85;
  swift_beginAccess(v82, &v114, 33, 0);
  v99 = *(_QWORD **)v82;
  v100 = v92;
  v101 = v85;
  swift_retain(v98);
  v102 = swift_isUniquelyReferenced_nonNull_native(v99);
  *(_QWORD *)v82 = v99;
  if ((v102 & 1) == 0)
  {
    v99 = sub_1002015D8(0, v99[2] + 1, 1, v99);
    *(_QWORD *)v82 = v99;
  }
  v104 = v99[2];
  v103 = v99[3];
  if (v104 >= v103 >> 1)
  {
    v99 = sub_1002015D8((_QWORD *)(v103 > 1), v104 + 1, 1, v99);
    *(_QWORD *)v82 = v99;
  }
  v99[2] = v104 + 1;
  v105 = &v99[3 * v104];
  v105[4] = sub_100049EB4;
  v105[5] = v98;
  *((_BYTE *)v105 + 48) = 2;
  swift_endAccess(&v114);

  swift_release(v98);
  return v100;
}

void sub_100049624(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_100723818, 24, 7);
  *(_QWORD *)(v5 + 16) = a3;
  v9[4] = sub_100049F04;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1000BD6CC;
  v9[3] = &unk_100723830;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = a3;
  swift_release(v7);
  objc_msgSend(v4, "animateWithDuration:animations:", v6, 0.1);
  _Block_release(v6);
}

void sub_1000496F0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  id v6;

  v2 = *(void **)(a1
                + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController);
  if (v2)
  {
    v3 = *(_QWORD *)(a1
                   + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController
                   + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(a1+ OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_detailPageViewController), a2);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v6 = v2;
    v5(1, ObjectType, v3);

  }
}

void sub_100049784(int a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = objc_msgSend(a3, "_existingPresentationControllerImmediate:effective:", 1, 1);
  if (v3)
  {
    v11 = v3;
    v4 = type metadata accessor for AppPromotionDetailPagePresentationController();
    v5 = swift_dynamicCastClass(v11, v4);
    if (v5)
    {
      v6 = v5
         + OBJC_IVAR____TtC22SubscribePageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal;
      swift_beginAccess(v5 + OBJC_IVAR____TtC22SubscribePageExtension44AppPromotionDetailPagePresentationController_interactiveDismissal, v15, 0, 0);
      if (*(_QWORD *)(v6 + 24))
      {
        sub_100011020(v6, (uint64_t)v12);
        v7 = v13;
        v8 = v14;
        sub_100011064(v12, v13);
        v9 = *(void (**)(uint64_t, uint64_t))(v8 + 24);
        v10 = v11;
        v9(v7, v8);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);

      }
      else
      {

      }
    }
    else
    {

    }
  }
}

double sub_100049890(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *Strong;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F5520);
  *(_QWORD *)&result = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
    return result;
  v13 = OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell;
  v14 = *(void **)(a3 + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell);
  if (!v14
    || (v44 = *(_QWORD *)(a3
                        + OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell),
        v15 = (void *)sub_100019574(0, (unint64_t *)&qword_1007F5530, UICollectionViewCell_ptr),
        v16 = v14,
        v17 = sub_10000DF3C(&qword_1007F5538),
        (swift_dynamicCast(&v45, &v44, v15, v17, 6) & 1) == 0))
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    goto LABEL_11;
  }
  v18 = *((_QWORD *)&v46 + 1);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_11:
    sub_100011088((uint64_t)&v45, &qword_1007F5528);
    goto LABEL_12;
  }
  v43 = v15;
  v19 = v47;
  sub_100011064(&v45, *((uint64_t *)&v46 + 1));
  v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v45);
  v21 = (void *)sub_100047F9C();
  if (!v21)
  {

    goto LABEL_12;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", v20);
  v23 = *(void **)(a3 + v13);
  if (!v23
    || (v44 = *(_QWORD *)(a3 + v13), v24 = v23, (swift_dynamicCast(&v45, &v44, v43, v17, 6) & 1) == 0))
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    goto LABEL_24;
  }
  v25 = *((_QWORD *)&v46 + 1);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_24:

    goto LABEL_11;
  }
  v26 = v47;
  sub_100011064(&v45, *((uint64_t *)&v46 + 1));
  v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
  objc_msgSend(v27, "setNeedsLayout");

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v45);
LABEL_12:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3+ OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController);
  if (Strong)
  {
    v29 = Strong;
    v30 = objc_msgSend(Strong, "collectionView");

    if (v30)
    {
      v31 = objc_msgSend(v30, "indexPathsForSelectedItems");
      if (v31)
      {
        v32 = v31;
        v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v5);

        v34 = *(_QWORD *)(v33 + 16);
        if (v34)
        {
          v42 = v33;
          v43 = v30;
          v35 = v33 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v36 = *(_QWORD *)(v6 + 72);
          v37 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
          while (1)
          {
            v37(v12, v35, v5);
            v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
            v38(v12, 0, 1, v5);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
              break;
            (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            objc_msgSend(v43, "deselectItemAtIndexPath:animated:", isa, 0);

            v35 += v36;
            if (!--v34)
            {
              v33 = v42;
              v30 = v43;
              goto LABEL_22;
            }
          }

          v40 = v42;
        }
        else
        {
          v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_22:
          v38(v12, 1, 1, v5);

          v40 = v33;
        }
        *(_QWORD *)&result = swift_bridgeObjectRelease(v40).n128_u64[0];
      }
      else
      {

      }
    }
  }
  return result;
}

id sub_100049CA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppPromotionDetailPageTransitioningDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100049D5C()
{
  return type metadata accessor for AppPromotionDetailPageTransitioningDelegate(0);
}

uint64_t type metadata accessor for AppPromotionDetailPageTransitioningDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F5508;
  if (!qword_1007F5508)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionDetailPageTransitioningDelegate);
  return result;
}

void sub_100049DA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = &unk_100670F28;
  v4[2] = &unk_100670F40;
  v4[3] = &unk_100670F40;
  sub_100049E2C(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = "\b";
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_100049E2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007FD410)
  {
    v2 = type metadata accessor for IndexPath(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007FD410);
  }
}

uint64_t sub_100049E80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100049EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100049624(a1, a2, *(void **)(v2 + 16));
}

void sub_100049EAC(int a1, int a2)
{
  uint64_t v2;

  sub_100049784(a1, a2, *(id *)(v2 + 16));
}

double sub_100049EB4(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_100049890(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100049EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F5520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100049F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000496F0(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100049F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100049F1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100049F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F5520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F5520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100049FB4()
{
  char *v0;
  void *v1;
  double v2;
  uint64_t Strong;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidY;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  double *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  _BYTE v57[24];
  objc_super v58;
  CGRect v59;
  CGRect v60;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCell];
  v2 = 0.0;
  if (v1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController]);
    if (Strong)
    {
      v4 = (void *)Strong;
      v5 = v1;
      v6 = sub_100047EB8();
      if (v6)
      {
        v7 = (void *)v6;
        objc_msgSend(v5, "bounds");
        v9 = v8;
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v16 = objc_msgSend(v4, "view");
        objc_msgSend(v5, "convertRect:toView:", v16, v9, v11, v13, v15);
        v18 = v17;
        v20 = v19;

        objc_msgSend(v7, "bounds");
        objc_msgSend(v7, "convertRect:toCoordinateSpace:", v5);
        x = v59.origin.x;
        y = v59.origin.y;
        width = v59.size.width;
        height = v59.size.height;
        v2 = v18 + CGRectGetMidX(v59);
        v60.origin.x = x;
        v60.origin.y = y;
        v60.size.width = width;
        v60.size.height = height;
        MidY = CGRectGetMidY(v60);

        v26 = 0;
        v27 = v20 + MidY;
        goto LABEL_7;
      }

    }
  }
  v26 = 1;
  v27 = 0.0;
LABEL_7:
  v28 = sub_100047EB8();
  v29 = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC22SubscribePageExtension43AppPromotionDetailPageTransitioningDelegate_sourceCollectionViewController]);
  v30 = (objc_class *)type metadata accessor for AppPromotionPageOpenAnimation();
  v31 = (char *)objc_allocWithZone(v30);
  *(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionPageOpenAnimation_fromCardView] = v28;
  *(_QWORD *)&v31[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionPageOpenAnimation_fromCollectionViewController] = v29;
  v32 = (double *)&v31[OBJC_IVAR____TtC22SubscribePageExtension29AppPromotionPageOpenAnimation_fromCenter];
  *v32 = v2;
  v32[1] = v27;
  *((_BYTE *)v32 + 16) = v26;
  v58.receiver = v31;
  v58.super_class = v30;
  v33 = (char *)objc_msgSendSuper2(&v58, "init");
  v34 = swift_allocObject(&unk_100723868, 24, 7);
  *(_QWORD *)(v34 + 16) = v0;
  v35 = &v33[OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks];
  swift_beginAccess(&v33[OBJC_IVAR____TtC22SubscribePageExtension27AnimatedTransitionWithTasks_tasks], v57, 33, 0);
  v36 = *(_QWORD **)v35;
  v37 = v0;
  swift_retain(v34);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
  *(_QWORD *)v35 = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v36 = sub_1002015D8(0, v36[2] + 1, 1, v36);
    *(_QWORD *)v35 = v36;
  }
  v40 = v36[2];
  v39 = v36[3];
  if (v40 >= v39 >> 1)
  {
    v36 = sub_1002015D8((_QWORD *)(v39 > 1), v40 + 1, 1, v36);
    *(_QWORD *)v35 = v36;
  }
  v36[2] = v40 + 1;
  v41 = &v36[3 * v40];
  v41[4] = sub_10004A438;
  v41[5] = v34;
  *((_BYTE *)v41 + 48) = 0;
  swift_endAccess(v57);
  swift_release(v34);
  v42 = swift_allocObject(&unk_100723890, 24, 7);
  *(_QWORD *)(v42 + 16) = v37;
  swift_beginAccess(v35, v57, 33, 0);
  v43 = *(_QWORD **)v35;
  v44 = v37;
  swift_retain(v42);
  v45 = swift_isUniquelyReferenced_nonNull_native(v43);
  *(_QWORD *)v35 = v43;
  if ((v45 & 1) == 0)
  {
    v43 = sub_1002015D8(0, v43[2] + 1, 1, v43);
    *(_QWORD *)v35 = v43;
  }
  v47 = v43[2];
  v46 = v43[3];
  if (v47 >= v46 >> 1)
  {
    v43 = sub_1002015D8((_QWORD *)(v46 > 1), v47 + 1, 1, v43);
    *(_QWORD *)v35 = v43;
  }
  v43[2] = v47 + 1;
  v48 = &v43[3 * v47];
  v48[4] = sub_10004A440;
  v48[5] = v42;
  *((_BYTE *)v48 + 48) = 1;
  swift_endAccess(v57);
  swift_release(v42);
  v49 = swift_allocObject(&unk_1007238B8, 24, 7);
  *(_QWORD *)(v49 + 16) = v44;
  swift_beginAccess(v35, v57, 33, 0);
  v50 = *(_QWORD **)v35;
  v51 = v44;
  swift_retain(v49);
  v52 = swift_isUniquelyReferenced_nonNull_native(v50);
  *(_QWORD *)v35 = v50;
  if ((v52 & 1) == 0)
  {
    v50 = sub_1002015D8(0, v50[2] + 1, 1, v50);
    *(_QWORD *)v35 = v50;
  }
  v54 = v50[2];
  v53 = v50[3];
  if (v54 >= v53 >> 1)
  {
    v50 = sub_1002015D8((_QWORD *)(v53 > 1), v54 + 1, 1, v50);
    *(_QWORD *)v35 = v50;
  }
  v50[2] = v54 + 1;
  v55 = &v50[3 * v54];
  v55[4] = sub_10004A448;
  v55[5] = v49;
  *((_BYTE *)v55 + 48) = 2;
  swift_endAccess(v57);
  swift_release(v49);
  return v33;
}

void sub_10004A438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100048784(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10004A440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100048AB0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10004A448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100048C84(a1, a2, *(_QWORD *)(v2 + 16));
}

int64x2_t sub_10004A468()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4064000000000000uLL);
  xmmword_1007F5560 = (__int128)result;
  return result;
}

int64x2_t sub_10004A480()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4056800000000000uLL);
  xmmword_100850860 = (__int128)result;
  return result;
}

int64x2_t sub_10004A498()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4062000000000000uLL);
  xmmword_1007F5570 = (__int128)result;
  return result;
}

int64x2_t sub_10004A4B0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050800000000000uLL);
  xmmword_1007F5580 = (__int128)result;
  return result;
}

void sub_10004A4CC()
{
  qword_1007F5590 = 0x4054000000000000;
}

void sub_10004A4DC()
{
  qword_1007F5598 = 0x4040800000000000;
}

int64x2_t sub_10004A4F0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x405FC00000000000uLL);
  xmmword_1007F55A0 = (__int128)result;
  return result;
}

int64x2_t sub_10004A50C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050800000000000uLL);
  xmmword_1007F55B0 = (__int128)result;
  return result;
}

void sub_10004A528()
{
  qword_1007F55C0 = 0x4034000000000000;
}

void sub_10004A538()
{
  qword_1007F55C8 = 0x4024000000000000;
}

uint64_t sub_10004A548(uint64_t a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18[2];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v14 = a2;
    else
      v14 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v13 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a2);
    if (v13 == 3)
      goto LABEL_11;
  }
  else
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13 == 3)
      goto LABEL_11;
  }
  if (v13 == 2)
  {
    sub_10004A924(a2, a3, v18, a6, a7);
    goto LABEL_12;
  }
  if (v13 != 1)
  {
LABEL_11:
    sub_10004AD24(a2, a3, v18, a6, a7);
    goto LABEL_12;
  }
  sub_10004A784(a2, a3, v18, a6, a7);
LABEL_12:
  sub_100010F3C(v18, (uint64_t)v19);
  v15 = v20;
  v16 = v21;
  sub_100011064(v19, v20);
  dispatch thunk of Placeable.place(at:with:)(a1, v15, v16, a4);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v19);
}

void sub_10004A68C(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (v10 == 3)
      goto LABEL_11;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10 == 3)
      goto LABEL_11;
  }
  if (v10 == 2)
  {
    sub_10004A924(a1, a2, a3, a4, a5);
    return;
  }
  if (v10 == 1)
  {
    sub_10004A784(a1, a2, a3, a4, a5);
    return;
  }
LABEL_11:
  sub_10004AD24(a1, a2, a3, a4, a5);
}

uint64_t sub_10004A784@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  void *v5;
  id v10;
  __n128 v11;
  double v12;
  double v13;
  double v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_15;
    }
    v10 = *(id *)(a1 + 32);
  }
  v5 = v10;
  if (a2 == 4)
  {
    if (qword_1007F0C18 == -1)
    {
LABEL_6:
      v13 = *((double *)&xmmword_100850860 + 1);
      v12 = *(double *)&xmmword_100850860;
      goto LABEL_12;
    }
LABEL_15:
    swift_once(&qword_1007F0C18, sub_10004A480);
    goto LABEL_6;
  }
  if (qword_1007F0C10 != -1)
    swift_once(&qword_1007F0C10, sub_10004A468);
  v11.n128_f64[0] = fmin(a4 / *(double *)&xmmword_1007F5560, 1.0);
  if (a5 / *((double *)&xmmword_1007F5560 + 1) < v11.n128_f64[0])
    v11.n128_f64[0] = a5 / *((double *)&xmmword_1007F5560 + 1);
  v12 = CGSize.scaled(_:)(v11);
  v13 = v14;
LABEL_12:
  v21[0] = v5;
  v15 = sub_10000EF74();
  LayoutView.withMeasurements(representing:)(v22, v15, &protocol witness table for UIView, v12, v13);
  v16 = v23;
  v17 = v24;
  sub_100011064(v22, v23);
  v18 = Measurable.placeable.getter(v21, v16, *(_QWORD *)(v17 + 8));
  v19 = static Center.Axis.neither.getter(v18);
  a3[3] = type metadata accessor for Center(0);
  a3[4] = &protocol witness table for Center;
  sub_1000117C0(a3);
  Center.init(_:filling:)(v21, v19);

  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v22);
}

void sub_10004A924(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  __n128 v22;
  double v23;
  double v24;
  double v25;
  __int128 v26;
  double v27;
  double v28;
  double v29;
  double v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  id v41;
  id v42;
  _QWORD *v43;
  _QWORD v44[5];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  v11 = type metadata accessor for DisjointStack(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - v16;
  v43 = a3;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
      if (v18 != 1)
      {
        v19 = *(void **)(a1 + 32);
        v20 = *(void **)(a1 + 40);
        v42 = v19;
        v21 = v20;
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, a1);
LABEL_5:
  v5 = v21;
  if (a2 == 4)
  {
    if (qword_1007F0C28 == -1)
    {
LABEL_7:
      v24 = *((double *)&xmmword_1007F5580 + 1);
      v23 = *(double *)&xmmword_1007F5580;
      if (qword_1007F0C38 != -1)
        swift_once(&qword_1007F0C38, sub_10004A4DC);
      v25 = *(double *)&qword_1007F5598;
      goto LABEL_18;
    }
LABEL_22:
    swift_once(&qword_1007F0C28, sub_10004A4B0);
    goto LABEL_7;
  }
  if (qword_1007F0C20 != -1)
    swift_once(&qword_1007F0C20, sub_10004A498);
  v26 = xmmword_1007F5570;
  if (qword_1007F0C30 != -1)
    swift_once(&qword_1007F0C30, sub_10004A4CC);
  v27 = *(double *)&qword_1007F5590;
  v28 = fmin(a4 / (*(double *)&v26 + *(double *)&qword_1007F5590), 1.0);
  if (a5 / (*((double *)&v26 + 1) + *(double *)&qword_1007F5590) >= v28)
    v29 = v28;
  else
    v29 = a5 / (*((double *)&v26 + 1) + *(double *)&qword_1007F5590);
  v22.n128_f64[0] = v29;
  v23 = CGSize.scaled(_:)(v22);
  v24 = v30;
  v25 = v27 * v29;
LABEL_18:
  DisjointStack.init(with:)(0, 0);
  v44[0] = v5;
  v31 = sub_10000EF74();
  LayoutView.withMeasurements(representing:)(v45, v31, &protocol witness table for UIView, v23, v24);
  v33 = v46;
  v32 = v47;
  sub_100011064(v45, v46);
  Measurable.placeable.getter(v44, v33, *(_QWORD *)(v32 + 8));
  DisjointStack.inserting(_:at:with:)(v44, 0, 0, sub_10004B1B0, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v14, v11);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v45);
  v35 = v42;
  v44[0] = v42;
  LayoutView.withMeasurements(representing:)(v45, v31, &protocol witness table for UIView, v23, v24);
  v37 = v46;
  v36 = v47;
  sub_100011064(v45, v46);
  Measurable.placeable.getter(v44, v37, *(_QWORD *)(v36 + 8));
  v38 = swift_allocObject(&unk_1007238E0, 24, 7);
  *(double *)(v38 + 16) = v25;
  v39 = v43;
  v43[3] = v11;
  v39[4] = &protocol witness table for DisjointStack;
  sub_1000117C0(v39);
  DisjointStack.inserting(_:at:with:)(v44, 1, 0, sub_10004B36C, v38);
  swift_release(v38);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  v34(v17, v11);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v45);
  v40 = objc_msgSend(v35, "layer");
  objc_msgSend(v40, "setZPosition:", 2.0);

  v41 = objc_msgSend(v5, "layer");
  objc_msgSend(v41, "setZPosition:", 1.0);

}

uint64_t sub_10004AD24@<X0>(unint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  __n128 v25;
  double v26;
  double v27;
  double v28;
  __int128 v29;
  double v30;
  double v31;
  double v32;
  double v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v48;
  id v49;
  _QWORD *v50;
  _QWORD v51[5];
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v10 = type metadata accessor for HorizontalStack(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v48 - v18;
  v50 = a3;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
    {
      if (v20 != 1)
      {
        if (v20 >= 3)
        {
          v21 = *(void **)(a1 + 32);
          v22 = *(void **)(a1 + 40);
          v23 = *(void **)(a1 + 48);
          v49 = v21;
          a3 = v22;
          v24 = v23;
          goto LABEL_6;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_23;
  }
  v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  a3 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, a1);
  v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, a1);
LABEL_6:
  v48 = v24;
  if (a2 == 4)
  {
    if (qword_1007F0C48 == -1)
    {
LABEL_8:
      v27 = *((double *)&xmmword_1007F55B0 + 1);
      v26 = *(double *)&xmmword_1007F55B0;
      if (qword_1007F0C58 != -1)
        swift_once(&qword_1007F0C58, sub_10004A538);
      v28 = *(double *)&qword_1007F55C8;
      goto LABEL_19;
    }
LABEL_24:
    swift_once(&qword_1007F0C48, sub_10004A50C);
    goto LABEL_8;
  }
  if (qword_1007F0C40 != -1)
    swift_once(&qword_1007F0C40, sub_10004A4F0);
  v29 = xmmword_1007F55A0;
  if (qword_1007F0C50 != -1)
    swift_once(&qword_1007F0C50, sub_10004A528);
  v30 = *(double *)&qword_1007F55C0;
  v31 = fmin(a4 / (*(double *)&v29 * 3.0 + v30 + v30), 1.0);
  if (a5 / *((double *)&v29 + 1) >= v31)
    v32 = v31;
  else
    v32 = a5 / *((double *)&v29 + 1);
  v25.n128_f64[0] = v32;
  v26 = CGSize.scaled(_:)(v25);
  v27 = v33;
  v28 = v30 * v32;
LABEL_19:
  HorizontalStack.init(with:)(0, 0);
  v51[0] = a3;
  v34 = sub_10000EF74();
  LayoutView.withMeasurements(representing:)(v52, v34, &protocol witness table for UIView, v26, v27);
  v35 = v53;
  v36 = v54;
  sub_100011064(v52, v53);
  Measurable.placeable.getter(v51, v35, *(_QWORD *)(v36 + 8));
  v37 = swift_allocObject(&unk_100723908, 24, 7);
  *(double *)(v37 + 16) = v28;
  HorizontalStack.adding(_:with:)(v51, sub_10004B384, v37);
  swift_release(v37);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v38 = *(void (**)(char *, uint64_t))(v11 + 8);
  v38(v13, v10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v52);
  v39 = v49;
  v51[0] = v49;
  LayoutView.withMeasurements(representing:)(v52, v34, &protocol witness table for UIView, v26, v27);
  v40 = v53;
  v41 = v54;
  sub_100011064(v52, v53);
  Measurable.placeable.getter(v51, v40, *(_QWORD *)(v41 + 8));
  v42 = swift_allocObject(&unk_100723930, 24, 7);
  *(double *)(v42 + 16) = v28;
  HorizontalStack.adding(_:with:)(v51, sub_10004B384, v42);
  swift_release(v42);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v38(v16, v10);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v52);
  v43 = v48;
  v51[0] = v48;
  LayoutView.withMeasurements(representing:)(v52, v34, &protocol witness table for UIView, v26, v27);
  v44 = v53;
  v45 = v54;
  sub_100011064(v52, v53);
  Measurable.placeable.getter(v51, v44, *(_QWORD *)(v45 + 8));
  v46 = v50;
  v50[3] = v10;
  v46[4] = &protocol witness table for HorizontalStack;
  sub_1000117C0(v46);
  HorizontalStack.adding(_:with:)(v51, 0, 0);

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v51);
  v38(v19, v10);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v52);
}

uint64_t sub_10004B1B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *, uint64_t, uint64_t);
  uint64_t v7;

  v0 = type metadata accessor for DisjointStack.EdgePosition(0);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2[3] = &type metadata for Double;
  v2[4] = &protocol witness table for Double;
  *v2 = 0;
  v3 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v5 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v5(v2, enum case for DisjointStack.EdgePosition.anchored(_:), v0);
  DisjointStack.Properties.topEdge.setter(v2);
  v2[3] = &type metadata for Double;
  v2[4] = &protocol witness table for Double;
  *v2 = 0;
  v5(v2, v3, v0);
  return DisjointStack.Properties.leadingEdge.setter(v2);
}

uint64_t sub_10004B280(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v9;

  v2 = type metadata accessor for DisjointStack.EdgePosition(0);
  __chkstk_darwin();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v4 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v4 + 4) = &protocol witness table for CGFloat;
  *(double *)v4 = a1;
  v5 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v7(v4, enum case for DisjointStack.EdgePosition.anchored(_:), v2);
  DisjointStack.Properties.topEdge.setter(v4);
  *((_QWORD *)v4 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v4 + 4) = &protocol witness table for CGFloat;
  *(double *)v4 = a1;
  v7(v4, v5, v2);
  return DisjointStack.Properties.leadingEdge.setter(v4);
}

uint64_t sub_10004B35C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B36C()
{
  uint64_t v0;

  return sub_10004B280(*(double *)(v0 + 16));
}

uint64_t sub_10004B374()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B388()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B398()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];

  v1 = *(_QWORD *)(v0 + 16);
  v3[3] = &type metadata for CGFloat;
  v3[4] = &protocol witness table for CGFloat;
  v3[0] = v1;
  return HorizontalStack.Properties.trailingSpacing.setter(v3);
}

double sub_10004B3E4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(_QWORD *, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  CGFloat bottom;
  CGFloat right;
  void (*v40)(uint64_t, char *, uint64_t);
  double result;
  __int128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  void *v53;
  void *v54;
  __int128 v55;
  uint64_t v56;
  void *v57;
  __int128 v58;
  uint64_t v59;
  void *v60;
  __int128 v61;
  void *v62;
  void *v63;
  __int128 v64;
  void *v65;
  void *v66;
  __int128 v67;
  void *v68;
  void *v69;
  __int128 v70;
  void *v71;
  void *v72;

  v49 = sub_10000DF3C((uint64_t *)&unk_100801F80);
  v43 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v1 = (char *)&v42 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C(&qword_1007F55F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - v7;
  __chkstk_darwin(v9);
  v51 = (char *)&v42 - v10;
  __chkstk_darwin(v11);
  v50 = (char *)&v42 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - v14;
  v16 = (int *)type metadata accessor for ProductLockupInlineUberLayout.Metrics(0);
  sub_100045464((uint64_t)v16, qword_100850870);
  v17 = sub_1000117A8((uint64_t)v16, (uint64_t)qword_100850870);
  if (qword_1007F0D98 != -1)
    swift_once(&qword_1007F0D98, sub_10004DFDC);
  v18 = sub_1000117A8(v2, (uint64_t)qword_100850BA8);
  v45 = v3;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v19(v15, v18, v2);
  if (qword_1007F0D88 != -1)
    swift_once(&qword_1007F0D88, sub_10004DCE8);
  v20 = sub_1000117A8(v2, (uint64_t)qword_100850B78);
  v19(v50, v20, v2);
  if (qword_1007F0DB0 != -1)
    swift_once(&qword_1007F0DB0, sub_10004E298);
  v21 = sub_1000117A8(v2, (uint64_t)qword_100850BF0);
  v19(v51, v21, v2);
  if (qword_1007F0D38 != -1)
    swift_once(&qword_1007F0D38, sub_10004D908);
  v71 = &type metadata for CGFloat;
  v72 = &protocol witness table for CGFloat;
  *(_QWORD *)&v70 = qword_100850AB8;
  if (qword_1007F0D48 != -1)
    swift_once(&qword_1007F0D48, sub_10004D928);
  v48 = v1;
  v22 = sub_1000117A8(v2, (uint64_t)qword_100850AC8);
  v19(v8, v22, v2);
  if (qword_1007F0D30 != -1)
    swift_once(&qword_1007F0D30, sub_10004D8F8);
  v44 = v15;
  v46 = v8;
  v47 = v5;
  v23 = v43;
  v68 = &type metadata for CGFloat;
  v69 = &protocol witness table for CGFloat;
  *(_QWORD *)&v67 = qword_100850AB0;
  v65 = &type metadata for Double;
  v66 = &protocol witness table for Double;
  *(_QWORD *)&v64 = 0;
  v62 = &type metadata for Double;
  v63 = &protocol witness table for Double;
  *(_QWORD *)&v61 = 0;
  if (qword_1007F0DF8 != -1)
    swift_once(&qword_1007F0DF8, sub_10004E880);
  v24 = type metadata accessor for StaticDimension(0);
  v25 = sub_1000117A8(v24, (uint64_t)qword_100850CB8);
  v59 = v24;
  v60 = &protocol witness table for StaticDimension;
  v26 = sub_1000117C0(&v58);
  v27 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v27(v26, v25, v24);
  if (qword_1007F0E00 != -1)
    swift_once(&qword_1007F0E00, sub_10004E9F0);
  v28 = sub_1000117A8(v24, (uint64_t)qword_100850CD0);
  v56 = v24;
  v57 = &protocol witness table for StaticDimension;
  v29 = sub_1000117C0(&v55);
  v27(v29, v28, v24);
  if (qword_1007F0D50 != -1)
    swift_once(&qword_1007F0D50, sub_10004D93C);
  v30 = v49;
  v31 = sub_1000117A8(v49, (uint64_t)qword_100850AE0);
  v32 = v23;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v34 = v48;
  v33(v48, v31, v30);
  v35 = v47;
  if (qword_1007F0D68 != -1)
    swift_once(&qword_1007F0D68, sub_10004DAE8);
  v53 = &type metadata for CGFloat;
  v54 = &protocol witness table for CGFloat;
  *(_QWORD *)&v52 = qword_100850B28;
  if (qword_1007F0D60 != -1)
    swift_once(&qword_1007F0D60, sub_10004DACC);
  v36 = sub_1000117A8(v2, (uint64_t)qword_100850B10);
  v19(v35, v36, v2);
  if (qword_1007F0D70 != -1)
    swift_once(&qword_1007F0D70, sub_10004DAFC);
  v37 = sub_1000117A8(v2, (uint64_t)qword_100850B30);
  v19((char *)(v17 + v16[19]), v37, v2);
  v42 = *(_OWORD *)&UIEdgeInsetsZero.top;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 0;
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v40(v17 + v16[7], v44, v2);
  v40(v17 + v16[6], v50, v2);
  v40(v17 + v16[8], v51, v2);
  sub_100010F3C(&v70, v17 + v16[9]);
  v40(v17 + v16[10], v46, v2);
  sub_100010F3C(&v67, v17 + v16[14]);
  sub_100010F3C(&v64, v17 + v16[15]);
  sub_100010F3C(&v61, v17 + v16[16]);
  sub_100010F3C(&v58, v17 + v16[11]);
  sub_100010F3C(&v55, v17 + v16[12]);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v17 + v16[13], v34, v30);
  sub_100010F3C(&v52, v17 + v16[17]);
  v40(v17 + v16[18], v35, v2);
  result = *(double *)&v42;
  *(_OWORD *)v17 = v42;
  *(CGFloat *)(v17 + 16) = bottom;
  *(CGFloat *)(v17 + 24) = right;
  return result;
}

uint64_t sub_10004BA44@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t (*v50)(_QWORD *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  double left;
  double bottom;
  double right;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  double *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  void *v96;
  __int128 v97;
  uint64_t v98;
  void *v99;
  __int128 v100;
  uint64_t v101;
  void *v102;
  __int128 v103;
  void *v104;
  void *v105;
  __int128 v106;
  uint64_t v107;
  void *v108;
  __int128 v109;
  void *v110;
  void *v111;
  __int128 v112;
  void *v113;
  void *v114;

  v81 = a2;
  v82 = a1;
  v2 = type metadata accessor for OfferButtonMetrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v77 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v78 = (char *)&v76 - v6;
  v79 = type metadata accessor for ProductLockupLayout.Metrics.OfferSubtitleMetrics(0);
  __chkstk_darwin(v79);
  v84 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007FED90);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v93 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v92 = (uint64_t)&v76 - v12;
  __chkstk_darwin(v13);
  v91 = (uint64_t)&v76 - v14;
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F55D0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v90 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v89 = (uint64_t)&v76 - v19;
  __chkstk_darwin(v20);
  v88 = (uint64_t)&v76 - v21;
  v22 = sub_10000DF3C(&qword_1007F55F0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v83 = (uint64_t)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v87 = (char *)&v76 - v26;
  __chkstk_darwin(v27);
  v86 = (char *)&v76 - v28;
  __chkstk_darwin(v29);
  v85 = (char *)&v76 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v76 - v32;
  v113 = &type metadata for Double;
  v114 = &protocol witness table for Double;
  v111 = &protocol witness table for Double;
  *(_QWORD *)&v112 = 0;
  v110 = &type metadata for Double;
  *(_QWORD *)&v109 = 0;
  if (qword_1007F0DD0 != -1)
    swift_once(&qword_1007F0DD0, sub_10004E5EC);
  v34 = sub_1000117A8(v22, (uint64_t)qword_100850C50);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v80 = v33;
  v35(v33, v34, v22);
  if (qword_1007F0D78 != -1)
    swift_once(&qword_1007F0D78, sub_10004DB10);
  v36 = sub_1000117A8(v22, (uint64_t)qword_100850B48);
  v35(v85, v36, v22);
  if (qword_1007F0C88 != -1)
    swift_once(&qword_1007F0C88, sub_10004CABC);
  v37 = sub_1000117A8(v15, (uint64_t)qword_1008508B8);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v38(v88, v37, v15);
  if (qword_1007F0E20 != -1)
    swift_once(&qword_1007F0E20, sub_10004ECAC);
  v39 = sub_1000117A8(v8, (uint64_t)qword_100850D30);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v40(v91, v39, v8);
  if (qword_1007F0DA8 != -1)
    swift_once(&qword_1007F0DA8, sub_10004E0F4);
  v41 = sub_1000117A8(v22, (uint64_t)qword_100850BD8);
  v35(v86, v41, v22);
  if (qword_1007F0CA0 != -1)
    swift_once(&qword_1007F0CA0, sub_10004CC08);
  v42 = sub_1000117A8(v15, (uint64_t)qword_100850900);
  v38(v89, v42, v15);
  if (qword_1007F0E30 != -1)
    swift_once(&qword_1007F0E30, sub_10004EDAC);
  v43 = sub_1000117A8(v8, (uint64_t)qword_100850D60);
  v40(v92, v43, v8);
  if (qword_1007F0DB8 != -1)
    swift_once(&qword_1007F0DB8, sub_10004E40C);
  v44 = sub_1000117A8(v22, (uint64_t)qword_100850C08);
  v35(v87, v44, v22);
  if (qword_1007F0CB0 != -1)
    swift_once(&qword_1007F0CB0, sub_10004CDA8);
  v45 = sub_1000117A8(v15, (uint64_t)qword_100850930);
  v38(v90, v45, v15);
  if (qword_1007F0E38 != -1)
    swift_once(&qword_1007F0E38, sub_10004EDC0);
  v76 = (void (*)(uint64_t, uint64_t, uint64_t))v35;
  v46 = sub_1000117A8(v8, (uint64_t)qword_100850D78);
  v40(v93, v46, v8);
  if (qword_1007F0D20 != -1)
    swift_once(&qword_1007F0D20, sub_10004D8D0);
  v47 = type metadata accessor for StaticDimension(0);
  v48 = sub_1000117A8(v47, (uint64_t)qword_100850A90);
  v107 = v47;
  v108 = &protocol witness table for StaticDimension;
  v49 = sub_1000117C0(&v106);
  v50 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
  v51 = v50(v49, v48, v47);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v51) & 1) != 0)
  {
    if (qword_1007F2DA0 != -1)
      swift_once(&qword_1007F2DA0, sub_1004D0ED4);
    v52 = qword_100813E28;
  }
  else
  {
    if (qword_1007F2DA8 != -1)
      swift_once(&qword_1007F2DA8, sub_1004D1380);
    v52 = qword_100813E40;
  }
  v53 = sub_1000117A8(v2, (uint64_t)v52);
  v54 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v77, v53, v2);
  v55 = v78;
  v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v78, v54, v2);
  OfferButtonMetrics.inAppPurchaseTextSpace.getter(&v103, v56);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v55, v2);
  if (qword_1007F0CB8 != -1)
    swift_once(&qword_1007F0CB8, sub_10004CDD8);
  v57 = sub_1000117A8(v15, (uint64_t)qword_100850948);
  v58 = v79;
  v59 = v84;
  v38(v84 + *(int *)(v79 + 20), v57, v15);
  v60 = static TextConfiguration.maxSubtitleWidth(with:)(v82);
  v61 = v59 + *(int *)(v58 + 24);
  *(_QWORD *)(v61 + 24) = &type metadata for CGFloat;
  *(_QWORD *)(v61 + 32) = &protocol witness table for CGFloat;
  *(double *)v61 = v60;
  v62 = static TextConfiguration.subtitleHorizontalSpacing.getter();
  v63 = v59 + *(int *)(v58 + 28);
  *(_QWORD *)(v63 + 24) = &type metadata for CGFloat;
  *(_QWORD *)(v63 + 32) = &protocol witness table for CGFloat;
  *(double *)v63 = v62;
  sub_100010F3C(&v103, v59);
  if (qword_1007F0D28 != -1)
    swift_once(&qword_1007F0D28, sub_10004D8E8);
  v104 = &type metadata for CGFloat;
  v105 = &protocol witness table for CGFloat;
  *(_QWORD *)&v103 = qword_100850AA8;
  v64 = (uint64_t)v80;
  if (qword_1007F0DF0 != -1)
    swift_once(&qword_1007F0DF0, sub_10004E85C);
  v65 = sub_1000117A8(v47, (uint64_t)qword_100850CA0);
  v101 = v47;
  v102 = &protocol witness table for StaticDimension;
  v66 = sub_1000117C0(&v100);
  v50(v66, v65, v47);
  if (qword_1007F0E08 != -1)
    swift_once(&qword_1007F0E08, sub_10004EB3C);
  v67 = sub_1000117A8(v22, (uint64_t)qword_100850CE8);
  v76(v83, v67, v22);
  if (qword_1007F0E10 != -1)
    swift_once(&qword_1007F0E10, sub_10004EB50);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v71 = sub_1000117A8(v47, (uint64_t)qword_100850D00);
  v98 = v47;
  v99 = &protocol witness table for StaticDimension;
  v72 = sub_1000117C0(&v97);
  v50(v72, v71, v47);
  if (qword_1007F0DC8 != -1)
    swift_once(&qword_1007F0DC8, sub_10004E5D4);
  v73 = sub_1000117A8(v47, (uint64_t)qword_100850C38);
  v95 = v47;
  v96 = &protocol witness table for StaticDimension;
  v74 = sub_1000117C0(&v94);
  v50(v74, v73, v47);
  return ProductLockupLayout.Metrics.init(layoutMargins:bannerViewHeight:secondaryBannerViewHeight:iconSize:iconHorizontalMargin:titleSpace:titleFont:titleMaxNumberOfLines:subtitleSpace:subtitleFont:subtitleMaxNumberOfLines:tertiaryTitleSpace:tertiaryTitleFont:tertiaryTitleMaxNumberOfLines:offerTopSpace:offerSubtitleMetrics:shareButtonLeadingMargin:expandedOfferSubtitleSpace:expandedOfferHorizontalMargin:compactExpandedOfferShareButtonTopSpace:bottomSpace:)(&v112, &v109, v64, (uint64_t)v85, v88, v91, (uint64_t)v86, v89, v81, UIEdgeInsetsZero.top, left, bottom, right, 0.0, 0.0, v92, (uint64_t)v87, v90, v93,
           &v106,
           v84,
           &v103,
           &v100,
           v83,
           &v97,
           &v94);
}

uint64_t sub_10004C3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  __int128 v33;
  void (*v34)(uint64_t, char *, uint64_t);
  __int128 v36;
  __int128 v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  __int128 v51;
  void *v52;
  void *v53;
  __int128 v54;
  void *v55;
  void *v56;
  __int128 v57;
  void *v58;
  void *v59;

  v0 = sub_10000DF3C(&qword_1007F55F0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v41 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - v4;
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - v13;
  v15 = (int *)type metadata accessor for ProductLockupAccessibilityLayout.Metrics(0);
  sub_100045464((uint64_t)v15, qword_100850888);
  v16 = sub_1000117A8((uint64_t)v15, (uint64_t)qword_100850888);
  v58 = &type metadata for Double;
  v59 = &protocol witness table for Double;
  v56 = &protocol witness table for Double;
  *(_QWORD *)&v57 = 0;
  v55 = &type metadata for Double;
  *(_QWORD *)&v54 = 0;
  if (qword_1007F0D80 != -1)
    swift_once(&qword_1007F0D80, sub_10004DB24);
  v17 = sub_1000117A8(v0, (uint64_t)qword_100850B60);
  v39 = v1;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v18(v14, v17, v0);
  if (qword_1007F0DA8 != -1)
    swift_once(&qword_1007F0DA8, sub_10004E0F4);
  v19 = sub_1000117A8(v0, (uint64_t)qword_100850BD8);
  v18(v11, v19, v0);
  v18(v8, v19, v0);
  if (qword_1007F0DB8 != -1)
    swift_once(&qword_1007F0DB8, sub_10004E40C);
  v20 = sub_1000117A8(v0, (uint64_t)qword_100850C08);
  v18(v5, v20, v0);
  if (qword_1007F0D28 != -1)
    swift_once(&qword_1007F0D28, sub_10004D8E8);
  v38 = v8;
  v40 = v5;
  v52 = &type metadata for CGFloat;
  v53 = &protocol witness table for CGFloat;
  *(_QWORD *)&v51 = qword_100850AA8;
  if (qword_1007F0D20 != -1)
    swift_once(&qword_1007F0D20, sub_10004D8D0);
  v21 = type metadata accessor for StaticDimension(0);
  v22 = sub_1000117A8(v21, (uint64_t)qword_100850A90);
  v49 = v21;
  v50 = &protocol witness table for StaticDimension;
  v23 = sub_1000117C0(&v48);
  v24 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v24(v23, v22, v21);
  if (qword_1007F0DC0 != -1)
    swift_once(&qword_1007F0DC0, sub_10004E5B0);
  v25 = sub_1000117A8(v21, (uint64_t)qword_100850C20);
  v46 = v21;
  v47 = &protocol witness table for StaticDimension;
  v26 = sub_1000117C0(&v45);
  v24(v26, v25, v21);
  if (qword_1007F0DE8 != -1)
    swift_once(&qword_1007F0DE8, sub_10004E734);
  v27 = sub_1000117A8(v0, (uint64_t)qword_100850C88);
  v18(v41, v27, v0);
  if (qword_1007F0DF0 != -1)
    swift_once(&qword_1007F0DF0, sub_10004E85C);
  v37 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v36 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  v28 = sub_1000117A8(v21, (uint64_t)qword_100850CA0);
  v43 = v21;
  v44 = &protocol witness table for StaticDimension;
  v29 = sub_1000117C0(&v42);
  v24(v29, v28, v21);
  v30 = v39;
  if (qword_1007F0DD8 != -1)
    swift_once(&qword_1007F0DD8, sub_10004E600);
  v31 = qword_100850C68;
  v32 = (uint64_t *)(v16 + v15[17]);
  v32[3] = (uint64_t)&type metadata for CGFloat;
  v32[4] = (uint64_t)&protocol witness table for CGFloat;
  *v32 = v31;
  v33 = v36;
  *(_OWORD *)v16 = v37;
  *(_OWORD *)(v16 + 16) = v33;
  sub_100010F3C(&v57, v16 + 32);
  sub_100010F3C(&v54, v16 + 72);
  *(_QWORD *)(v16 + 112) = 0;
  *(_QWORD *)(v16 + 120) = 0;
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v34(v16 + v15[8], v14, v0);
  v34(v16 + v15[9], v11, v0);
  v34(v16 + v15[10], v38, v0);
  v34(v16 + v15[11], v40, v0);
  sub_100010F3C(&v51, v16 + v15[12]);
  sub_100010F3C(&v48, v16 + v15[13]);
  sub_100010F3C(&v45, v16 + v15[14]);
  v34(v16 + v15[15], v41, v0);
  return sub_100010F3C(&v42, v16 + v15[16]);
}

id sub_10004C948()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  qword_1008508A0 = (uint64_t)result;
  return result;
}

UIColor sub_10004C980()
{
  UIColor result;

  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 1.0).super.isa;
  qword_1008508A8 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10004C9D8()
{
  UIColor result;

  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  result.super.isa = UIColor.init(light:lightHighContrast:dark:darkHighContrast:)((UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.8), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.8), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.8), (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0,
                                  0.8)).super.isa;
  qword_1008508B0 = (uint64_t)result.super.isa;
  return result;
}

uint64_t sub_10004CABC(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_1008508B8, (uint64_t)sub_10004CAD0);
}

uint64_t sub_10004CAD0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CC38(a1, &qword_1007F0CD0, (uint64_t)qword_100850970, (uint64_t)sub_10004CF98, a2);
}

uint64_t sub_10004CAEC(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_1008508D0, (uint64_t)sub_10004CB00);
}

void sub_10004CB00(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10004CB4C(a1, &qword_1007F2348, (uint64_t)qword_100854EC0, (uint64_t)sub_1004149BC, a2);
}

uint64_t sub_10004CB1C(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_1008508E8, (uint64_t)sub_10004CB30);
}

void sub_10004CB30(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10004CB4C(a1, &qword_1007F2350, (uint64_t)qword_100854ED8, (uint64_t)sub_1004149D8, a2);
}

void sub_10004CB4C(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v9 = *a1;
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (*a2 != -1)
    swift_once(a2, a4);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, a3);
  v12 = objc_msgSend(v9, "traitCollection");
  v13 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v11, v12);

  *a5 = v13;
}

uint64_t sub_10004CC08(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_100850900, (uint64_t)sub_10004CC1C);
}

uint64_t sub_10004CC1C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CC38(a1, &qword_1007F0CE0, (uint64_t)qword_1008509A0, (uint64_t)sub_10004D190, a2);
}

uint64_t sub_10004CC38@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  void *v20;

  v10 = type metadata accessor for FontUseCase(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (*a2 != -1)
    swift_once(a2, a4);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
  sub_1000117A8(v15, a3);
  v20 = v14;
  v16 = objc_msgSend(v14, "traitCollection", Conditional.evaluate(with:)(&v20, v15).n128_f64[0]);
  v17 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v13, v16);

  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a5 = v17;
  return result;
}

uint64_t sub_10004CD78(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_100850918, (uint64_t)sub_10004CD8C);
}

uint64_t sub_10004CD8C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CC38(a1, &qword_1007F0CE8, (uint64_t)qword_1008509B8, (uint64_t)sub_10004D2F8, a2);
}

uint64_t sub_10004CDA8(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_100850930, (uint64_t)sub_10004CDBC);
}

uint64_t sub_10004CDBC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CC38(a1, &qword_1007F0CF0, (uint64_t)qword_1008509D0, (uint64_t)sub_10004D42C, a2);
}

uint64_t sub_10004CDD8(uint64_t a1)
{
  return sub_10004CDEC(a1, qword_100850948, (uint64_t)sub_10004CE7C);
}

uint64_t sub_10004CDEC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_10000DF3C((uint64_t *)&unk_1007F55D0);
  sub_100045464(v5, a2);
  sub_1000117A8(v5, (uint64_t)a2);
  v6 = sub_10000DF3C(&qword_1007F5D10);
  v7 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  return Conditional.init(_:)(a3, 0, v6, v7);
}

void sub_10004CE7C(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10004CB4C(a1, &qword_1007F25A8, (uint64_t)qword_1008555E0, (uint64_t)sub_100415FA0, a2);
}

void sub_10004CE98()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "_preferredFontForTextStyle:addingSymbolicTraits:weight:", UIFontTextStyleCaption1, 0x8000, UIFontWeightMedium);
  if (!v1)
    v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  v2 = sub_100274690();

  qword_100850960 = (uint64_t)v2;
}

void sub_10004CF3C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  v1 = sub_100274690();

  qword_100850968 = (uint64_t)v1;
}

double sub_10004CF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
  sub_100045464(v7, qword_100850970);
  sub_1000117A8(v7, (uint64_t)qword_100850970);
  if (qword_1007F2340 != -1)
    swift_once(&qword_1007F2340, sub_1004149A0);
  v8 = sub_1000117A8(v0, (uint64_t)qword_100854EA8);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_1007F2338 != -1)
    swift_once(&qword_1007F2338, sub_100414984);
  v10 = sub_1000117A8(v0, (uint64_t)qword_100854E90);
  v9(v3, v10, v0);
  v11 = sub_10000DF3C(&qword_1007F5D10);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0).n128_u64[0];
  return result;
}

uint64_t sub_10004D100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100045464(v0, qword_100850988);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100850988);
  if (qword_1007F2348 != -1)
    swift_once(&qword_1007F2348, sub_1004149BC);
  v2 = sub_1000117A8(v0, (uint64_t)qword_100854EC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

double sub_10004D190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
  sub_100045464(v7, qword_1008509A0);
  sub_1000117A8(v7, (uint64_t)qword_1008509A0);
  if (qword_1007F2360 != -1)
    swift_once(&qword_1007F2360, sub_100414A0C);
  v8 = sub_1000117A8(v0, (uint64_t)qword_100854F08);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_1007F2358 != -1)
    swift_once(&qword_1007F2358, sub_1004149F4);
  v10 = sub_1000117A8(v0, (uint64_t)qword_100854EF0);
  v9(v3, v10, v0);
  v11 = sub_10000DF3C(&qword_1007F5D10);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0).n128_u64[0];
  return result;
}

double sub_10004D2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  double result;
  uint64_t v12;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
  sub_100045464(v7, qword_1008509B8);
  sub_1000117A8(v7, (uint64_t)qword_1008509B8);
  if (qword_1007F2378 != -1)
    swift_once(&qword_1007F2378, sub_100414A54);
  v8 = sub_1000117A8(v0, (uint64_t)qword_100854F50);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  v9(v3, v8, v0);
  v10 = sub_10000DF3C(&qword_1007F5D10);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v10, v0).n128_u64[0];
  return result;
}

double sub_10004D42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
  sub_100045464(v7, qword_1008509D0);
  sub_1000117A8(v7, (uint64_t)qword_1008509D0);
  if (qword_1007F2370 != -1)
    swift_once(&qword_1007F2370, sub_100414A3C);
  v8 = sub_1000117A8(v0, (uint64_t)qword_100854F38);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_1007F2368 != -1)
    swift_once(&qword_1007F2368, sub_100414A24);
  v10 = sub_1000117A8(v0, (uint64_t)qword_100854F20);
  v9(v3, v10, v0);
  v11 = sub_10000DF3C(&qword_1007F5D10);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0).n128_u64[0];
  return result;
}

uint64_t sub_10004D594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F55E0);
  sub_100045464(v7, qword_1008509E8);
  sub_1000117A8(v7, (uint64_t)qword_1008509E8);
  if (qword_1007F25B0 != -1)
    swift_once(&qword_1007F25B0, sub_100416060);
  v8 = sub_1000117A8(v0, (uint64_t)qword_1008555F8);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_1007F25A8 != -1)
    swift_once(&qword_1007F25A8, sub_100415FA0);
  v10 = sub_1000117A8(v0, (uint64_t)qword_1008555E0);
  v9(v3, v10, v0);
  v11 = sub_10000DF3C(&qword_1007F5D10);
  return Conditional<>.init(accessibleLayoutValue:regularLayoutValue:)(v6, v3, v11, v0);
}

uint64_t sub_10004D6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DF3C(&qword_1007F5460);
  sub_100045464(v0, qword_100850A00);
  sub_1000117A8(v0, (uint64_t)qword_100850A00);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

uint64_t sub_10004D784()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1007F2A08 != -1)
    swift_once(&qword_1007F2A08, sub_10042D104);
  v0 = type metadata accessor for StaticDimension(0);
  v1 = sub_1000117A8(v0, (uint64_t)qword_100856168);
  qword_100850A30 = v0;
  unk_100850A38 = &protocol witness table for StaticDimension;
  v2 = sub_1000117C0(qword_100850A18);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v2, v1, v0);
}

uint64_t sub_10004D808(uint64_t a1)
{
  return sub_10004D81C(a1, &qword_100850A58, &qword_100850A60, qword_100850A40);
}

uint64_t sub_10004D81C(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_1007F2A00 != -1)
    swift_once(&qword_1007F2A00, sub_10042D0F4);
  v7 = type metadata accessor for StaticDimension(0);
  v8 = sub_1000117A8(v7, (uint64_t)qword_100856150);
  *a2 = v7;
  *a3 = &protocol witness table for StaticDimension;
  v9 = sub_1000117C0(a4);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v9, v8, v7);
}

uint64_t sub_10004D8BC(uint64_t a1)
{
  return sub_10004D81C(a1, &qword_100850A80, &qword_100850A88, qword_100850A68);
}

uint64_t sub_10004D8D0(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 13.0;
  return sub_10004E628(a2, a1, qword_100850A90, (void **)&UIFontTextStyleFootnote);
}

void sub_10004D8E8()
{
  qword_100850AA8 = 0x4030000000000000;
}

void sub_10004D8F8()
{
  qword_100850AB0 = 0x4034000000000000;
}

void sub_10004D908()
{
  qword_100850AB8 = 0x4038000000000000;
}

void sub_10004D918()
{
  qword_100850AC0 = 0x4033000000000000;
}

void sub_10004D928(uint64_t a1)
{
  sub_10004EF38(31.0, 0.0, a1, qword_100850AC8);
}

uint64_t sub_10004D93C(uint64_t a1)
{
  return sub_10004D97C(30.0, 39.0, a1, qword_100850AE0, (uint64_t)&off_1007208C0);
}

uint64_t sub_10004D960(uint64_t a1)
{
  return sub_10004D97C(28.0, 28.0, a1, qword_100850AF8, (uint64_t)&off_1007208E8);
}

uint64_t sub_10004D97C(double a1, double a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  __n128 v18;
  double v20;
  uint64_t v21;

  v9 = sub_10000DF3C(&qword_1007F55F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - v13;
  v15 = sub_10000DF3C((uint64_t *)&unk_100801F80);
  sub_100045464(v15, a4);
  sub_1000117A8(v15, (uint64_t)a4);
  v16 = sub_100172564(a5);
  v21 = 0x4044000000000000;
  v20 = a1;
  v17 = sub_10000DF3C(&qword_1007F5D10);
  Conditional<>.init(regularValue:compactValue:)(&v21, &v20, v17, &type metadata for CGFloat);
  v21 = 0x4044000000000000;
  v20 = a2;
  v18 = Conditional<>.init(regularValue:compactValue:)(&v21, &v20, v17, &type metadata for CGFloat);
  return Conditional<>.init(whenOneOf:use:otherwiseUse:)(v16, v14, v11, v9, v18);
}

void sub_10004DACC(uint64_t a1)
{
  sub_10004EF38(113.0, 0.0, a1, qword_100850B10);
}

void sub_10004DAE8()
{
  qword_100850B28 = 0x4080E00000000000;
}

void sub_10004DAFC(uint64_t a1)
{
  sub_10004EF38(20.0, 0.0, a1, qword_100850B30);
}

uint64_t sub_10004DB10(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_10004DB3C(a2, 17.0, a1, qword_100850B48);
}

uint64_t sub_10004DB24(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4042000000000000;
  return sub_10004DB3C(a2, 26.0, a1, qword_100850B60);
}

uint64_t sub_10004DB3C(__n128 a1, double a2, uint64_t a3, uint64_t *a4)
{
  double v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;

  v5 = a1.n128_f64[0];
  v7 = type metadata accessor for FontSource(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - v12;
  v14 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v14, a4);
  sub_1000117A8(v14, (uint64_t)a4);
  if (qword_1007F2340 != -1)
    swift_once(&qword_1007F2340, sub_1004149A0);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_1000117A8(v15, (uint64_t)qword_100854EA8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17(v13, v16, v15);
  v18 = enum case for FontSource.useCase(_:);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v19(v13, enum case for FontSource.useCase(_:), v7);
  if (qword_1007F2338 != -1)
    swift_once(&qword_1007F2338, sub_100414984);
  v20 = sub_1000117A8(v15, (uint64_t)qword_100854E90);
  v17(v10, v20, v15);
  v19(v10, v18, v7);
  return Conditional<>.init(regularConstant:compactConstant:regularSource:compactSource:)(v13, v10, v5, a2);
}

uint64_t sub_10004DCE8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - v6;
  v8 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v8, qword_100850B78);
  sub_1000117A8(v8, (uint64_t)qword_100850B78);
  if (qword_1007F2348 != -1)
    swift_once(&qword_1007F2348, sub_1004149BC);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100854EC0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  v12 = enum case for FontSource.useCase(_:);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13(v7, enum case for FontSource.useCase(_:), v1);
  v11(v4, v10, v9);
  v13(v4, v12, v1);
  return Conditional<>.init(regularConstant:compactConstant:regularSource:compactSource:)(v7, v4, 33.0, 34.0);
}

uint64_t sub_10004DE68(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - v6;
  v8 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v8, qword_100850B90);
  sub_1000117A8(v8, (uint64_t)qword_100850B90);
  if (qword_1007F2350 != -1)
    swift_once(&qword_1007F2350, sub_1004149D8);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100854ED8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  v12 = enum case for FontSource.useCase(_:);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13(v7, enum case for FontSource.useCase(_:), v1);
  v11(v4, v10, v9);
  v13(v4, v12, v1);
  return Conditional<>.init(regularConstant:compactConstant:regularSource:compactSource:)(v7, v4, 29.0, 30.0);
}

uint64_t sub_10004DFDC(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4040800000000000;
  return sub_10004E010(a2, 32.0, a1, qword_100850BA8);
}

uint64_t sub_10004DFFC(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 28.0;
  return sub_10004E010(a2, 26.0, a1, qword_100850BC0);
}

uint64_t sub_10004E010(__n128 a1, double a2, uint64_t a3, uint64_t *a4)
{
  double v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  UIFontTextStyle *v10;
  uint64_t v11;
  NSString *v12;
  uint64_t v14;

  v5 = a1.n128_f64[0];
  v7 = type metadata accessor for FontSource(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (UIFontTextStyle *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v11, a4);
  sub_1000117A8(v11, (uint64_t)a4);
  *v10 = UIFontTextStyleFootnote;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FontSource.textStyle(_:), v7);
  v12 = UIFontTextStyleFootnote;
  return Conditional<>.init(regularConstant:compactConstant:source:)(v10, v5, a2);
}

uint64_t sub_10004E0F4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - v6;
  v8 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v8, qword_100850BD8);
  sub_1000117A8(v8, (uint64_t)qword_100850BD8);
  if (qword_1007F2360 != -1)
    swift_once(&qword_1007F2360, sub_100414A0C);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100854F08);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  v12 = enum case for FontSource.useCase(_:);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13(v7, enum case for FontSource.useCase(_:), v1);
  if (qword_1007F2358 != -1)
    swift_once(&qword_1007F2358, sub_1004149F4);
  v14 = sub_1000117A8(v9, (uint64_t)qword_100854EF0);
  v11(v4, v14, v9);
  v13(v4, v12, v1);
  return Conditional<>.init(regularConstant:compactConstant:regularSource:compactSource:)(v7, v4, 32.0, 23.0);
}

uint64_t sub_10004E298(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - v6;
  v8 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v8, qword_100850BF0);
  sub_1000117A8(v8, (uint64_t)qword_100850BF0);
  if (qword_1007F2378 != -1)
    swift_once(&qword_1007F2378, sub_100414A54);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100854F50);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  v12 = enum case for FontSource.useCase(_:);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13(v7, enum case for FontSource.useCase(_:), v1);
  v11(v4, v10, v9);
  v13(v4, v12, v1);
  return Conditional<>.init(regularConstant:compactConstant:regularSource:compactSource:)(v7, v4, 25.0, 25.0);
}

uint64_t sub_10004E40C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - v6;
  v8 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v8, qword_100850C08);
  sub_1000117A8(v8, (uint64_t)qword_100850C08);
  if (qword_1007F2370 != -1)
    swift_once(&qword_1007F2370, sub_100414A3C);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100854F38);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  v12 = enum case for FontSource.useCase(_:);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13(v7, enum case for FontSource.useCase(_:), v1);
  if (qword_1007F2368 != -1)
    swift_once(&qword_1007F2368, sub_100414A24);
  v14 = sub_1000117A8(v9, (uint64_t)qword_100854F20);
  v11(v4, v14, v9);
  v13(v4, v12, v1);
  return Conditional<>.init(regularConstant:compactConstant:regularSource:compactSource:)(v7, v4, 32.0, 23.0);
}

uint64_t sub_10004E5B0(uint64_t a1, __n128 a2)
{
  return sub_10004E8A4(a2, a1, qword_100850C20, &qword_1007F25B0, (uint64_t)qword_1008555F8, (uint64_t)sub_100416060);
}

uint64_t sub_10004E5D4(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 20.0;
  return sub_10004E628(a2, a1, qword_100850C38, (void **)&UIFontTextStyleBody);
}

void sub_10004E5EC(uint64_t a1)
{
  sub_10004EF38(28.0, 16.0, a1, qword_100850C50);
}

void sub_10004E600()
{
  qword_100850C68 = 0x4044000000000000;
}

uint64_t sub_10004E610(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 8.0;
  return sub_10004E628(a2, a1, qword_100850C70, (void **)&UIFontTextStyleCaption1);
}

uint64_t sub_10004E628(__n128 a1, uint64_t a2, uint64_t *a3, void **a4)
{
  double v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  _QWORD v17[5];

  v4 = a1.n128_f64[0];
  v7 = type metadata accessor for FontSource(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for StaticDimension(0);
  sub_100045464(v11, a3);
  sub_1000117A8(v11, (uint64_t)a3);
  v12 = *a4;
  *v10 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FontSource.textStyle(_:), v7);
  v17[3] = v7;
  v17[4] = &protocol witness table for FontSource;
  v13 = sub_1000117C0(v17);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v13, v10, v7);
  v14 = v12;
  StaticDimension.init(_:scaledLike:)(v17, v4);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10004E734(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v5, qword_100850C88);
  sub_1000117A8(v5, (uint64_t)qword_100850C88);
  if (qword_1007F2380 != -1)
    swift_once(&qword_1007F2380, sub_100414A6C);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100854F68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  return Conditional<>.init(regularConstant:compactConstant:source:)(v4, 41.0, 34.0);
}

uint64_t sub_10004E85C(uint64_t a1, __n128 a2)
{
  return sub_10004E8A4(a2, a1, qword_100850CA0, &qword_1007F2388, (uint64_t)qword_100854F80, (uint64_t)sub_100414A88);
}

uint64_t sub_10004E880(uint64_t a1, __n128 a2)
{
  return sub_10004E8A4(a2, a1, qword_100850CB8, &qword_1007F2390, (uint64_t)qword_100854F98, (uint64_t)sub_100414AA0);
}

uint64_t sub_10004E8A4(__n128 a1, uint64_t a2, uint64_t *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v20[5];

  v10 = type metadata accessor for FontSource(0, a1);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticDimension(0);
  sub_100045464(v14, a3);
  sub_1000117A8(v14, (uint64_t)a3);
  if (*a4 != -1)
    swift_once(a4, a6);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_1000117A8(v15, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for FontSource.useCase(_:), v10);
  v20[3] = v10;
  v20[4] = &protocol witness table for FontSource;
  v17 = sub_1000117C0(v20);
  (*(void (**)(_QWORD *, char *, uint64_t))(v11 + 16))(v17, v13, v10);
  StaticDimension.init(_:scaledLike:)(v20, 20.0);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10004E9F0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100850CD0);
  sub_1000117A8(v5, (uint64_t)qword_100850CD0);
  if (qword_1007F2390 != -1)
    swift_once(&qword_1007F2390, sub_100414AA0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100854F98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 18.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_10004EB3C(uint64_t a1)
{
  sub_10004EF38(20.0, 16.0, a1, qword_100850CE8);
}

uint64_t sub_10004EB50(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100850D00);
  sub_1000117A8(v5, (uint64_t)qword_100850D00);
  if (qword_1007F2388 != -1)
    swift_once(&qword_1007F2388, sub_100414A88);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100854F80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 10.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10004EC9C(uint64_t a1)
{
  return sub_10004EE74(a1, qword_100850D18, 3);
}

uint64_t sub_10004ECAC(uint64_t a1)
{
  return sub_10004ECD8(a1, qword_100850D30, (uint64_t)sub_10004ECC0);
}

uint64_t sub_10004ECC4(uint64_t a1)
{
  return sub_10004ECD8(a1, qword_100850D48, (uint64_t)sub_10004ED50);
}

uint64_t sub_10004ECD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_10000DF3C((uint64_t *)&unk_1007FED90);
  sub_100045464(v5, a2);
  sub_1000117A8(v5, (uint64_t)a2);
  v6 = sub_10000DF3C(&qword_1007F5D10);
  return Conditional.init(_:)(a3, 0, v6, &type metadata for Int);
}

void sub_10004ED50(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  char v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, "traitCollection");
  v4 = UITraitCollection.prefersAccessibilityLayouts.getter(v3);

  v5 = 2;
  if ((v4 & 1) != 0)
    v5 = 0;
  *a2 = v5;
}

uint64_t sub_10004EDAC(uint64_t a1)
{
  return sub_10004ECD8(a1, qword_100850D60, (uint64_t)sub_10004ECC0);
}

uint64_t sub_10004EDC0(uint64_t a1)
{
  return sub_10004ECD8(a1, qword_100850D78, (uint64_t)sub_10004ECC0);
}

void sub_10004EDD4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = objc_msgSend(*a1, "traitCollection");
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v3) & 1) != 0)
  {

    v4 = 0;
  }
  else
  {
    v5 = UITraitCollection.isSizeClassRegular.getter();

    v4 = 1;
    if ((v5 & 1) == 0)
      v4 = 2;
  }
  *a2 = v4;
}

uint64_t sub_10004EE44(uint64_t a1)
{
  return sub_10004EE74(a1, qword_100850D90, 1);
}

uint64_t sub_10004EE54(uint64_t a1)
{
  return sub_10004EE74(a1, qword_100850DA8, 1);
}

uint64_t sub_10004EE64(uint64_t a1)
{
  return sub_10004EE74(a1, qword_100850DC0, 3);
}

uint64_t sub_10004EE74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_10000DF3C((uint64_t *)&unk_1007FED90);
  sub_100045464(v5, a2);
  sub_1000117A8(v5, (uint64_t)a2);
  v8 = a3;
  v9 = 0;
  v6 = sub_10000DF3C(&qword_1007F5D10);
  return Conditional<>.init(accessibleLayoutValue:regularLayoutValue:)(&v9, &v8, v6, &type metadata for Int);
}

void sub_10004EEF8(uint64_t a1)
{
  sub_10004EF38(36.0, 0.0, a1, qword_100850DD8);
}

void sub_10004EF10(uint64_t a1)
{
  sub_10004EF38(1.0, 0.0, a1, qword_100850DF0);
}

void sub_10004EF24(uint64_t a1)
{
  sub_10004EF38(0.0, 1.0, a1, qword_100850E08);
}

void sub_10004EF38(double a1, double a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;

  v7 = sub_10000DF3C(&qword_1007F55F0);
  sub_100045464(v7, a4);
  sub_1000117A8(v7, (uint64_t)a4);
  v9 = a2;
  v10 = a1;
  v8 = sub_10000DF3C(&qword_1007F5D10);
  Conditional<>.init(regularValue:compactValue:)(&v10, &v9, v8, &type metadata for CGFloat);
}

void sub_10004EFC0()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.1);
  v1 = objc_msgSend(v0, "CGColor");

  qword_100850E20 = (uint64_t)v1;
}

CGFloat sub_10004F024(uint64_t a1)
{
  return sub_10004F054(4.0, a1, &xmmword_1007F55F8, &xmmword_1007F5608, &xmmword_1007F5618);
}

CGFloat sub_10004F03C(uint64_t a1)
{
  return sub_10004F054(-3.0, a1, &xmmword_1007F5628, &xmmword_1007F5638, &xmmword_1007F5648);
}

CGFloat sub_10004F054(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGFloat result;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;

  CGAffineTransformMakeTranslation(&v11, 0.0, a1);
  result = v11.a;
  v9 = *(_OWORD *)&v11.c;
  v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

void sub_10004F0AC(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  void *v26;
  void *v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)();
  uint64_t (*v32)();
  uint64_t (*v33)();
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t (*v43)();
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char isEscapingClosureAtFileLocation;
  void **v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t (*v55)();
  _QWORD *v56;
  uint64_t (*v57)();
  _QWORD *v58;
  void *v59;
  uint64_t v60;

  v2 = v1;
  v4 = v1 + 4;
  v5 = *v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = v2[5];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v8 + 8) + 16))(*((unsigned __int8 *)v2 + 16), ObjectType);

  }
  v10 = swift_unknownObjectWeakLoadStrong(v2 + 6);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = v2[7];
    v13 = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v12 + 8) + 16))(*((unsigned __int8 *)v2 + 16), v13);

  }
  v14 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 3);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "traitCollection");

    if (v16)
    {
      v17 = v16;
      v18 = UITraitCollection.isSizeClassCompact.getter(v17);
      if ((v18 & 1) != 0)
      {
        v19 = UITraitCollection.prefersAccessibilityLayouts.getter(v18);

        if ((v19 & 1) != 0)
        {
          v20 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 6);
          if (v20)
          {
            v21 = v20;
            objc_msgSend(v20, "setUserInteractionEnabled:", 0);

          }
          v22 = (void *)swift_unknownObjectWeakLoadStrong(v4);
          if (v22)
          {
            v23 = v22;
            v24 = 1;
            objc_msgSend(v22, "setUserInteractionEnabled:", 1);
LABEL_18:

            goto LABEL_20;
          }
          v24 = 1;
          goto LABEL_20;
        }
      }
      else
      {

      }
    }
  }
  v25 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 6);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setUserInteractionEnabled:", *((unsigned __int8 *)v2 + 16));

  }
  v27 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (v27)
  {
    v23 = v27;
    objc_msgSend(v27, "setUserInteractionEnabled:", (v2[2] & 1) == 0);
    v24 = 0;
    goto LABEL_18;
  }
  v24 = 0;
LABEL_20:
  v57 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  v58 = 0;
  v28 = *((_BYTE *)v2 + 16);
  if (v24)
  {
    v29 = swift_allocObject(&unk_100723A98, 40, 7);
    v30 = 0;
    *(_QWORD *)(v29 + 16) = v2;
    *(_BYTE *)(v29 + 24) = v28;
    *(_QWORD *)(v29 + 32) = v5;
    v31 = (uint64_t (*)())sub_10005059C;
    v59 = sub_10005059C;
    v60 = v29;
    v32 = sub_1000505AC;
    v33 = static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
    v55 = sub_1000505AC;
    v56 = v2;
  }
  else
  {
    if ((v2[2] & 1) != 0)
    {
      v34 = swift_unknownObjectWeakLoadStrong(v2 + 6);
      if (v34)
      {
        v35 = (void *)v34;
        objc_msgSend(*(id *)(v34 + OBJC_IVAR____TtC22SubscribePageExtension25AppPromotionLearnMoreView_contentView), "scrollToTopAnimated:", 0);

      }
      v29 = swift_allocObject(&unk_100723958, 32, 7);
      *(_QWORD *)(v29 + 16) = v2;
      *(_QWORD *)(v29 + 24) = v5;
      v31 = (uint64_t (*)())sub_1000504F4;
      v59 = sub_1000504F4;
      v60 = v29;
      v33 = sub_1000504FC;
      v57 = sub_1000504FC;
      v58 = v2;
      v32 = sub_100050504;
    }
    else
    {
      v29 = swift_allocObject(&unk_100723A70, 32, 7);
      *(_QWORD *)(v29 + 16) = v2;
      *(_QWORD *)(v29 + 24) = v5;
      v31 = (uint64_t (*)())sub_100050568;
      v59 = sub_100050568;
      v60 = v29;
      v33 = sub_100050570;
      v57 = sub_100050570;
      v58 = v2;
      v32 = sub_1000505E8;
    }
    v55 = v32;
    v56 = v2;
    swift_retain(v2);
    v30 = v2;
  }
  swift_retain_n(v2, 2);
  v36 = (void *)objc_opt_self(UIView);
  if ((a1 & 1) != 0)
  {
    v53 = v31;
    v54 = v29;
    v49 = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_1000BD6CC;
    v52 = &unk_1007239E8;
    v37 = _Block_copy(&v49);
    v38 = v54;
    swift_retain(v29);
    swift_release(v38);
    v53 = v32;
    v54 = (uint64_t)v2;
    v49 = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_100129140;
    v52 = &unk_100723A10;
    v39 = _Block_copy(&v49);
    v40 = v54;
    swift_retain(v2);
    swift_release(v40);
    objc_msgSend(v36, "animateWithDuration:delay:options:animations:completion:", 4, v37, v39, 0.4, 0.0);
    _Block_release(v39);
    _Block_release(v37);
    v53 = v33;
    v54 = (uint64_t)v30;
    v49 = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_1000BD6CC;
    v52 = &unk_100723A38;
    v41 = _Block_copy(&v49);
    v42 = v54;
    swift_retain(v30);
    swift_release(v42);
    objc_msgSend(v36, "animateWithDuration:delay:options:animations:completion:", 4, v41, 0, 0.2, 0.2);
    _Block_release(v41);
    v43 = 0;
    v44 = 0;
LABEL_32:
    swift_release(v2);
    swift_release(v58);
    swift_release(v60);
    sub_100019310((uint64_t)v43, (uint64_t)v44);
    return;
  }
  v44 = (_QWORD *)swift_allocObject(&unk_100723980, 40, 7);
  v44[2] = &v59;
  v44[3] = &v57;
  v44[4] = &v55;
  v45 = swift_allocObject(&unk_1007239A8, 32, 7);
  *(_QWORD *)(v45 + 16) = sub_100050534;
  *(_QWORD *)(v45 + 24) = v44;
  v53 = sub_100030368;
  v54 = v45;
  v49 = _NSConcreteStackBlock;
  v50 = 1107296256;
  v51 = sub_100101718;
  v52 = &unk_1007239C0;
  v46 = _Block_copy(&v49);
  v47 = v54;
  swift_retain(v45);
  objc_msgSend(v36, "performWithoutAnimation:", v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v45, "", 127, 186, 44, 1);
  swift_release(v45);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v43 = sub_100050534;
    v2 = v56;
    goto LABEL_32;
  }
  __break(1u);
}

void sub_10004F610(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  double v48;
  uint64_t v49;
  void *v50;
  id v51;
  double v52;
  void *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;

  v4 = a1 + 48;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 48);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(a1 + 56);
    ObjectType = swift_getObjectType();
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 32))(ObjectType);

    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain(v9);
      v11 = 0;
      while (1)
      {
        v12 = *(void **)(v9 + 8 * v11 + 32);
        if (v12)
          objc_msgSend(v12, "setAlpha:", 0.0);
        if (v10 - 1 == v11)
          break;
        if (__OFADD__(++v11, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v9);
    }
    swift_bridgeObjectRelease(v9);
  }
  v13 = swift_unknownObjectWeakLoadStrong(v4);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = *(_QWORD *)(a1 + 56);
    v16 = swift_getObjectType();
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 8) + 40))(v16);

    if (qword_1007F0E78 == -1)
    {
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
        goto LABEL_15;
    }
    else
    {
      swift_once(&qword_1007F0E78, sub_10004F024);
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
LABEL_15:
        v58 = xmmword_1007F5608;
        v59 = xmmword_1007F55F8;
        v57 = xmmword_1007F5618;
        swift_bridgeObjectRetain(v17);
        v19 = 0;
        do
        {
          v20 = *(void **)(v17 + 8 * v19++ + 32);
          v60 = v59;
          v61 = v58;
          v62 = v57;
          objc_msgSend(v20, "setTransform:", &v60, v57, v58);
        }
        while (v18 != v19);
        swift_bridgeObjectRelease_n(v17, 2);
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease(v17);
  }
LABEL_20:
  v21 = swift_unknownObjectWeakLoadStrong(v4);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = *(_QWORD *)(a1 + 56);
    v24 = swift_getObjectType();
    v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 48))(v24);

    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain(v25);
      v27 = 0;
      while (1)
      {
        v28 = *(void **)(v25 + 8 * v27 + 32);
        if (v28)
          objc_msgSend(v28, "setAlpha:", 0.0);
        if (v26 - 1 == v27)
          break;
        if (__OFADD__(++v27, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v25);
    }
    swift_bridgeObjectRelease(v25);
  }
  v29 = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (v29)
  {
    v30 = (void *)v29;
    v31 = *(_QWORD *)(a1 + 40);
    v32 = swift_getObjectType();
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v31 + 8) + 32))(v32);

    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      swift_bridgeObjectRetain(v33);
      v35 = 0;
      while (1)
      {
        v36 = *(void **)(v33 + 8 * v35 + 32);
        if (v36)
          objc_msgSend(v36, "setAlpha:", 1.0);
        if (v34 - 1 == v35)
          break;
        if (__OFADD__(++v35, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v33);
    }
    swift_bridgeObjectRelease(v33);
  }
  v37 = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (v37)
  {
    v38 = (void *)v37;
    v39 = *(_QWORD *)(a1 + 40);
    v40 = swift_getObjectType();
    v41 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v39 + 8) + 40))(v40);

    v42 = *(_QWORD *)(v41 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain(v41);
      v43 = 0;
      do
      {
        v44 = *(void **)(v41 + 8 * v43++ + 32);
        *(_QWORD *)&v61 = 0;
        v60 = 0x3FF0000000000000uLL;
        *((_QWORD *)&v61 + 1) = 0x3FF0000000000000;
        v62 = 0uLL;
        objc_msgSend(v44, "setTransform:", &v60);
      }
      while (v42 != v43);
      swift_bridgeObjectRelease(v41);
    }
    swift_bridgeObjectRelease(v41);
  }
  v45 = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (v45)
  {
    v46 = (void *)v45;
    v47 = objc_retain(*(id *)(v45
                            + OBJC_IVAR____TtC22SubscribePageExtension33AppPromotionDetailPageContentView_learnMoreButton));

    v48 = 1.0;
    if ((a2 & 1) != 0)
      v48 = 0.0;
    objc_msgSend(v47, "setAlpha:", v48);

  }
  v49 = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (v49)
  {
    v50 = (void *)v49;
    v51 = objc_retain(*(id *)(v49
                            + OBJC_IVAR____TtC22SubscribePageExtension33AppPromotionDetailPageContentView_inlineLearnMoreLabel));

    v52 = 0.0;
    if ((a2 & 1) != 0)
      v52 = 1.0;
    objc_msgSend(v51, "setAlpha:", v52);

  }
  v53 = (void *)swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (v53)
  {
    v54 = v53;
    objc_msgSend(v53, "setNeedsLayout");

  }
  v55 = swift_unknownObjectWeakLoadStrong(a1 + 24);
  if (v55)
  {
    v56 = (void *)v55;
    sub_10049E758();

  }
}

double sub_10004FA54(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[3];

  v2 = a1 + 48;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 48);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(a1 + 56);
    ObjectType = swift_getObjectType();
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 32))(ObjectType);

    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain(v7);
      v9 = 0;
      v10 = v8 - 1;
      while (1)
      {
        v11 = *(void **)(v7 + 8 * v9 + 32);
        if (v11)
          objc_msgSend(v11, "setAlpha:", 0.0);
        if (v10 == v9)
          break;
        if (__OFADD__(++v9, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v7);
    }
    swift_bridgeObjectRelease(v7);
  }
  v12 = swift_unknownObjectWeakLoadStrong(v2);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(_QWORD *)(a1 + 56);
    v15 = swift_getObjectType();
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 40))(v15);

    if (qword_1007F0E78 == -1)
    {
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
        goto LABEL_15;
    }
    else
    {
      swift_once(&qword_1007F0E78, sub_10004F024);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
LABEL_15:
        v31 = xmmword_1007F5608;
        v32 = xmmword_1007F55F8;
        v30 = xmmword_1007F5618;
        swift_bridgeObjectRetain(v16);
        v18 = 0;
        do
        {
          v19 = *(void **)(v16 + 8 * v18++ + 32);
          v33[0] = v32;
          v33[1] = v31;
          v33[2] = v30;
          objc_msgSend(v19, "setTransform:", v33, v30, v31, v32);
        }
        while (v17 != v18);
        swift_bridgeObjectRelease_n(v16, 2);
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease(v16);
  }
LABEL_20:
  v20 = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (v20)
  {
    v22 = (void *)v20;
    v23 = *(_QWORD *)(a1 + 40);
    v24 = swift_getObjectType();
    v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 48))(v24);

    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain(v25);
      v27 = 0;
      v28 = v26 - 1;
      while (1)
      {
        v29 = *(void **)(v25 + 8 * v27 + 32);
        if (v29)
          objc_msgSend(v29, "setAlpha:", 1.0);
        if (v28 == v27)
          break;
        if (__OFADD__(++v27, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v25);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_10004FC84(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t result;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v32[6];

  v2 = a1 + 32;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 8) + 32))(ObjectType);

    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain(v8);
      v10 = 0;
      v11 = v9 - 1;
      while (1)
      {
        v12 = *(void **)(v8 + 8 * v10 + 32);
        if (v12)
          objc_msgSend(v12, "setAlpha:", 1.0);
        if (v11 == v10)
          break;
        if (__OFADD__(++v10, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v8);
    }
    swift_bridgeObjectRelease(v8);
  }
  v13 = swift_unknownObjectWeakLoadStrong(v2);
  if (v13)
  {
    v15 = (void *)v13;
    v16 = *(_QWORD *)(a1 + 40);
    v17 = swift_getObjectType(v13, v14);
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 40))(v17);

    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain(v18);
      v20 = 0;
      do
      {
        v21 = *(void **)(v18 + 8 * v20++ + 32);
        v32[1] = 0;
        v32[2] = 0;
        v32[0] = 0x3FF0000000000000;
        v32[3] = 0x3FF0000000000000;
        v32[4] = 0;
        v32[5] = 0;
        objc_msgSend(v21, "setTransform:", v32);
      }
      while (v19 != v20);
      swift_bridgeObjectRelease_n(v18, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v18);
    }
  }
  result = swift_unknownObjectWeakLoadStrong(a1 + 48);
  if (result)
  {
    v24 = (void *)result;
    v25 = *(_QWORD *)(a1 + 56);
    v26 = swift_getObjectType(result, v23);
    v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v25 + 8) + 48))(v26);

    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      swift_bridgeObjectRetain(v27);
      v29 = 0;
      v30 = v28 - 1;
      while (1)
      {
        v31 = *(void **)(v27 + 8 * v29 + 32);
        if (v31)
          objc_msgSend(v31, "setAlpha:", 0.0);
        if (v30 == v29)
          break;
        if (__OFADD__(++v29, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v27);
    }
    return swift_bridgeObjectRelease(v27);
  }
  return result;
}

double sub_10004FE80(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[3];

  v2 = a1 + 32;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 32))(ObjectType);

    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain(v7);
      v9 = 0;
      v10 = v8 - 1;
      while (1)
      {
        v11 = *(void **)(v7 + 8 * v9 + 32);
        if (v11)
          objc_msgSend(v11, "setAlpha:", 0.0);
        if (v10 == v9)
          break;
        if (__OFADD__(++v9, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v7);
    }
    swift_bridgeObjectRelease(v7);
  }
  v12 = swift_unknownObjectWeakLoadStrong(v2);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(_QWORD *)(a1 + 40);
    v15 = swift_getObjectType();
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 40))(v15);

    if (qword_1007F0E80 == -1)
    {
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
        goto LABEL_15;
    }
    else
    {
      swift_once(&qword_1007F0E80, sub_10004F03C);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
LABEL_15:
        v31 = xmmword_1007F5638;
        v32 = xmmword_1007F5628;
        v30 = xmmword_1007F5648;
        swift_bridgeObjectRetain(v16);
        v18 = 0;
        do
        {
          v19 = *(void **)(v16 + 8 * v18++ + 32);
          v33[0] = v32;
          v33[1] = v31;
          v33[2] = v30;
          objc_msgSend(v19, "setTransform:", v33, v30, v31, v32);
        }
        while (v17 != v18);
        swift_bridgeObjectRelease_n(v16, 2);
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease(v16);
  }
LABEL_20:
  v20 = swift_unknownObjectWeakLoadStrong(a1 + 48);
  if (v20)
  {
    v22 = (void *)v20;
    v23 = *(_QWORD *)(a1 + 56);
    v24 = swift_getObjectType();
    v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 48))(v24);

    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain(v25);
      v27 = 0;
      v28 = v26 - 1;
      while (1)
      {
        v29 = *(void **)(v25 + 8 * v27 + 32);
        if (v29)
          objc_msgSend(v29, "setAlpha:", 1.0);
        if (v28 == v27)
          break;
        if (__OFADD__(++v27, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v25);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000500B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t result;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v32[6];

  v2 = a1 + 48;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 48);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(a1 + 56);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 8) + 32))(ObjectType);

    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain(v8);
      v10 = 0;
      v11 = v9 - 1;
      while (1)
      {
        v12 = *(void **)(v8 + 8 * v10 + 32);
        if (v12)
          objc_msgSend(v12, "setAlpha:", 1.0);
        if (v11 == v10)
          break;
        if (__OFADD__(++v10, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v8);
    }
    swift_bridgeObjectRelease(v8);
  }
  v13 = swift_unknownObjectWeakLoadStrong(v2);
  if (v13)
  {
    v15 = (void *)v13;
    v16 = *(_QWORD *)(a1 + 56);
    v17 = swift_getObjectType(v13, v14);
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 40))(v17);

    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain(v18);
      v20 = 0;
      do
      {
        v21 = *(void **)(v18 + 8 * v20++ + 32);
        v32[1] = 0;
        v32[2] = 0;
        v32[0] = 0x3FF0000000000000;
        v32[3] = 0x3FF0000000000000;
        v32[4] = 0;
        v32[5] = 0;
        objc_msgSend(v21, "setTransform:", v32);
      }
      while (v19 != v20);
      swift_bridgeObjectRelease_n(v18, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v18);
    }
  }
  result = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (result)
  {
    v24 = (void *)result;
    v25 = *(_QWORD *)(a1 + 40);
    v26 = swift_getObjectType(result, v23);
    v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v25 + 8) + 48))(v26);

    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      swift_bridgeObjectRetain(v27);
      v29 = 0;
      v30 = v28 - 1;
      while (1)
      {
        v31 = *(void **)(v27 + 8 * v29 + 32);
        if (v31)
          objc_msgSend(v31, "setAlpha:", 0.0);
        if (v30 == v29)
          break;
        if (__OFADD__(++v29, 1))
        {
          __break(1u);
          break;
        }
      }
      swift_bridgeObjectRelease(v27);
    }
    return swift_bridgeObjectRelease(v27);
  }
  return result;
}

uint64_t sub_1000502AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);

  v6 = *(void (**)(uint64_t))a1;
  v5 = *(_QWORD *)(a1 + 8);
  v7 = swift_retain(v5);
  v6(v7);
  swift_release(v5);
  v9 = *(void (**)(uint64_t))a2;
  v8 = *(_QWORD *)(a2 + 8);
  v10 = swift_retain(v8);
  v9(v10);
  swift_release(v8);
  v12 = *(void (**)(uint64_t))a3;
  v11 = *(_QWORD *)(a3 + 8);
  swift_retain(v11);
  v12(1);
  return swift_release(v11);
}

uint64_t sub_10005031C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 24);
  sub_100010E34(v0 + 32);
  sub_100010E34(v0 + 48);

  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for AppPromotionDisplayModeTransitionCoordinator()
{
  return objc_opt_self(_TtC22SubscribePageExtension44AppPromotionDisplayModeTransitionCoordinator);
}

uint64_t sub_100050378(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;

  v8 = v7;
  v14 = a1 & 1;
  *(_BYTE *)(v8 + 16) = 0;
  swift_unknownObjectWeakInit(v8 + 24, 0);
  *(_QWORD *)(v8 + 40) = 0;
  swift_unknownObjectWeakInit(v8 + 32, 0);
  *(_QWORD *)(v8 + 56) = 0;
  swift_unknownObjectWeakInit(v8 + 48, 0);
  *(_BYTE *)(v8 + 16) = v14;
  swift_unknownObjectWeakAssign(v8 + 24, a2);
  *(_QWORD *)(v8 + 40) = a4;
  swift_unknownObjectWeakAssign(v8 + 32, a3);
  *(_QWORD *)(v8 + 56) = a6;
  swift_unknownObjectWeakAssign(v8 + 48, a5);
  *(_QWORD *)(v8 + 64) = a7;
  Strong = swift_unknownObjectWeakLoadStrong(v8 + 32);
  if (Strong)
  {
    v16 = (void *)Strong;
    v17 = *(_QWORD *)(v8 + 40);
    ObjectType = swift_getObjectType();
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v21 = a7;
    v20(v14, ObjectType, v19);

  }
  else
  {
    v22 = a7;
  }
  v23 = swift_unknownObjectWeakLoadStrong(v8 + 48);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = *(_QWORD *)(v8 + 56);
    v26 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 + 8) + 16))(v14, v26);

  }
  sub_10004F0AC(0);
  return v8;
}

uint64_t sub_1000504D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1000504F4()
{
  uint64_t v0;

  return sub_10004FE80(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000504FC()
{
  uint64_t v0;

  return sub_1000500B0(v0);
}

uint64_t sub_100050504()
{
  return dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();
}

uint64_t sub_100050524()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100050534()
{
  uint64_t *v0;

  return sub_1000502AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_100050540()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100050550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100050560(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_100050568()
{
  uint64_t v0;

  return sub_10004FA54(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100050570()
{
  uint64_t v0;

  return sub_10004FC84(v0);
}

uint64_t sub_100050578()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10005059C()
{
  uint64_t v0;

  sub_10004F610(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1000505AC()
{
  return dispatch thunk of VideoPlaybackCoordinator.resumeAutoPlayVideo()();
}

uint64_t sub_1000505EC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  sub_100045464(v5, qword_100850E28);
  sub_1000117A8(v5, (uint64_t)qword_100850E28);
  if (qword_1007F2678 != -1)
    swift_once(&qword_1007F2678, sub_100416C5C);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_1000117A8(v6, (uint64_t)qword_100855850);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FontSource.useCase(_:), v1);
  v11[3] = v1;
  v11[4] = &protocol witness table for FontSource;
  v8 = sub_1000117C0(v11);
  (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  StaticDimension.init(_:scaledLike:)(v11, 36.0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10005073C(__n128 a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v20[3];
  uint64_t v21;
  void *v22;

  v2 = type metadata accessor for FontSource(0, a1);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "traitCollection", v4);
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (id)1
    && (v9 = objc_msgSend(v1, "traitCollection"),
        v10 = objc_msgSend(v9, "horizontalSizeClass"),
        v9,
        v10 == (id)2)
    && *((_BYTE *)v1 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_isExpanded) == 1)
  {
    if (qword_1007F2678 != -1)
      swift_once(&qword_1007F2678, sub_100416C5C);
    v11 = type metadata accessor for FontUseCase(0);
    v12 = sub_1000117A8(v11, (uint64_t)qword_100855850);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, v12, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for FontSource.useCase(_:), v2);
    v21 = v2;
    v22 = &protocol witness table for FontSource;
    v13 = sub_1000117C0(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v13, v6, v2);
    v14 = 24.0;
  }
  else
  {
    if (qword_1007F2678 != -1)
      swift_once(&qword_1007F2678, sub_100416C5C);
    v15 = type metadata accessor for FontUseCase(0);
    v16 = sub_1000117A8(v15, (uint64_t)qword_100855850);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v16, v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for FontSource.useCase(_:), v2);
    v21 = v2;
    v22 = &protocol witness table for FontSource;
    v17 = sub_1000117C0(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v17, v6, v2);
    v14 = 20.0;
  }
  StaticDimension.init(_:scaledLike:)(v20, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

char *sub_10005098C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  id v26;
  char *v27;
  void *v28;
  char *v29;
  uint64_t v31;
  objc_class *ObjectType;
  objc_super v33;
  _OWORD v34[2];
  _OWORD v35[2];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v31 = type metadata accessor for AutomationSemantics(0);
  v10 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DirectionalTextAlignment(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_isExpanded] = 0;
  v5[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_sizeCategory] = 7;
  v20 = qword_1007F2678;
  v21 = v5;
  if (v20 != -1)
    swift_once(&qword_1007F2678, sub_100416C5C);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100855850);
  v24 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v19, v23, v22);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v25(v19, 0, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DirectionalTextAlignment.none(_:), v13);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_label] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v19, 2, 0, 0, 0, v16, 0, 0);
  memset(v35, 0, sizeof(v35));
  memset(v34, 0, sizeof(v34));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6C6562616CLL, 0xE500000000000000, v35, v34);
  sub_100011088((uint64_t)v34, &qword_1007F6E90);
  sub_100011088((uint64_t)v35, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);

  v33.receiver = v21;
  v33.super_class = ObjectType;
  v27 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  v28 = *(void **)&v27[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_label];
  v25(v19, 1, 1, v22);
  v29 = v27;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v19);
  objc_msgSend(v28, "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(v29, "addSubview:", v28);

  return v29;
}

double sub_100050D30(double a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  double v13;
  double v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  __n128 v17;
  uint64_t v18;
  uint64_t v20;

  v3 = type metadata accessor for StaticDimension(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "layoutMargins", v9);
  v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_label];
  objc_msgSend(v12, "sizeThatFits:", a1 - v13 - v14, 1.79769313e308);
  if (qword_1007F0E88 != -1)
    swift_once(&qword_1007F0E88, sub_1000505EC);
  v15 = sub_1000117A8(v3, (uint64_t)qword_100850E28);
  static Dimensions.defaultRoundingRule.getter(v15);
  AnyDimension.value(in:rounded:)(v1, v11, v3, &protocol witness table for StaticDimension);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  objc_msgSend(v12, "firstBaselineFromTop");
  v18 = sub_10005073C(v17);
  static Dimensions.defaultRoundingRule.getter(v18);
  AnyDimension.value(in:rounded:)(v1, v11, v3, &protocol witness table for StaticDimension);
  v16(v11, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v12, "lastBaselineFromBottom");
  return a1;
}

id sub_100050F70()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double MinX;
  double MinY;
  double v23;
  double v24;
  objc_super v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26.receiver = v1;
  v26.super_class = ObjectType;
  objc_msgSendSuper2(&v26, "layoutSubviews", v5);
  v8 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  if (qword_1007F0E88 != -1)
    swift_once(&qword_1007F0E88, sub_1000505EC);
  v15 = type metadata accessor for StaticDimension(0);
  v16 = sub_1000117A8(v15, (uint64_t)qword_100850E28);
  static Dimensions.defaultRoundingRule.getter(v16);
  v17 = AnyDimension.value(in:rounded:)(v1, v7, v15, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v18 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_label];
  objc_msgSend(v18, "sizeThatFits:", v12, v14);
  v20 = v19;
  v27.origin.x = v8;
  v27.origin.y = v10;
  v27.size.width = v12;
  v27.size.height = v14;
  MinX = CGRectGetMinX(v27);
  v28.origin.x = v8;
  v28.origin.y = v10;
  v28.size.width = v12;
  v28.size.height = v14;
  MinY = CGRectGetMinY(v28);
  objc_msgSend(v18, "firstBaselineFromTop");
  v24 = MinY + v17 - v23;
  v29.origin.x = v8;
  v29.origin.y = v10;
  v29.size.width = v12;
  v29.size.height = v14;
  return objc_msgSend(v18, "setFrame:", MinX, v24, CGRectGetWidth(v29), v20);
}

uint64_t type metadata accessor for TodayCardParagraphOverlayView()
{
  return objc_opt_self(_TtC22SubscribePageExtension29TodayCardParagraphOverlayView);
}

void sub_1000512DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  sub_1000513E4(*a1, a3, a4, a5);
}

id sub_1000512F0()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

id sub_100051314(char a1)
{
  _BYTE *v1;

  v1[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_isExpanded] = a1;
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_100051330()
{
  return 1;
}

uint64_t sub_10005133C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "accessibilityElements");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  return v3;
}

unint64_t sub_10005139C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F5758;
  if (!qword_1007F5758)
  {
    v1 = type metadata accessor for TodayCardParagraphOverlay(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCardOverlay, v1);
    atomic_store(result, (unint64_t *)&qword_1007F5758);
  }
  return result;
}

void sub_1000513E4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  char *v4;
  char *v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  id v21;
  int v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD aBlock[5];
  uint64_t v63;

  v5 = v4;
  v57 = a2;
  v7 = a4;
  v8 = type metadata accessor for Paragraph.Alignment(0);
  __chkstk_darwin(v8);
  v59 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F5808);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TodayCard.Style(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v56 - v19;
  TodayCardParagraphOverlay.style.getter(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v16, v13);
    v21 = (id)sub_100011088((uint64_t)v12, &qword_1007F5808);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v21 = (id)(*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v20, v12, v13);
  }
  v22 = v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_sizeCategory];
  v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_sizeCategory] = v7;
  if (v7 == 7)
  {
    if (v22 == 7)
      goto LABEL_9;
  }
  else if (v22 != 7)
  {
    switch(v7)
    {
      case 6:
        if (v22 == 6)
          goto LABEL_9;
        break;
      case 5:
        if (v22 == 5)
          goto LABEL_9;
        break;
      case 4:
        if (v22 == 4)
          goto LABEL_9;
        break;
      default:
        if ((v22 - 7) <= 0xFFFFFFFC && v22 == v7)
          goto LABEL_9;
        break;
    }
  }
  v21 = objc_msgSend(v4, "setNeedsLayout");
LABEL_9:
  v60 = v14;
  v61 = v13;
  v58 = v20;
  v23 = (void *)TodayCard.Style.overlayBackgroundColor.getter(v21);
  objc_msgSend(v5, "setBackgroundColor:", v23);

  v24 = objc_msgSend(v5, "traitCollection");
  v25 = v24;
  v26 = 12.0;
  v27 = 12.0;
  if (v7 != 4)
  {
    v28 = PageGrid.horizontalDirectionalMargins.getter(v24);
    v27 = 20.0;
    v26 = v29 <= 20.0 ? v29 : 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v28);
    if (v30 <= 20.0)
      v27 = v30;
  }
  v31 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v25, "layoutDirection"), 0.0, v26, 0.0, v27);
  v33 = v32;
  v35 = v34;
  v37 = v36;

  v38 = TodayCardParagraphOverlay.paragraph.getter(objc_msgSend(v5, "setLayoutMargins:", v31, v33, v35, v37));
  v39 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardParagraphOverlayView_label];
  v57 = v38;
  v40 = (void *)Paragraph.text.getter();
  v41 = objc_msgSend(v5, "traitCollection");
  v42 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v40);
  v43 = objc_msgSend(v40, "length");
  v44 = swift_allocObject(&unk_100723B58, 41, 7);
  *(_QWORD *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = v41;
  *(_QWORD *)(v44 + 32) = v42;
  *(_BYTE *)(v44 + 40) = 1;
  v45 = swift_allocObject(&unk_100723B80, 32, 7);
  *(_QWORD *)(v45 + 16) = sub_100051938;
  *(_QWORD *)(v45 + 24) = v44;
  aBlock[4] = sub_100051958;
  v63 = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10057C188;
  aBlock[3] = &unk_100723B98;
  v46 = _Block_copy(aBlock);
  v47 = v63;
  v48 = v41;
  v49 = v42;
  swift_retain(v45);
  objc_msgSend(v40, "enumerateAttributesInRange:options:usingBlock:", 0, v43, 0x100000, v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);
  LOBYTE(v47) = swift_isEscapingClosureAtFileLocation(v45, "", 113, 30, 92, 1);

  swift_release(v44);
  *(_QWORD *)&v50 = swift_release(v45).n128_u64[0];
  if ((v47 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v39, "setAttributedText:", v49, v50);

    v51 = (uint64_t)v59;
    v52 = v57;
    Paragraph.alignment.getter();
    v53 = objc_msgSend(v39, "setTextAlignment:", sub_100071A20(v51));
    v54 = v58;
    v55 = (void *)TodayCard.Style.overlayDetailTextColor.getter(v53);
    objc_msgSend(v39, "setTextColor:", v55);
    swift_release(v52);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v61);
  }
}

uint64_t sub_100051904()
{
  id *v0;

  return swift_deallocObject(v0, 41, 7);
}

void sub_100051938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10057CE00(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(unsigned __int8 *)(v4 + 40));
}

uint64_t sub_100051948()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100051958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100133068(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_100051960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100051970(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100051978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  Class isa;
  __n128 v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  Swift::String v66;
  void *object;
  Swift::String v68;
  id v69;
  uint64_t v70;
  Swift::String v71;
  void *v72;
  Swift::String v73;
  id v74;
  uint64_t v75;
  Swift::String v76;
  void *v77;
  Swift::String v78;
  id v79;
  uint64_t v80;
  Swift::String v81;
  void *v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  id v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  id v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  id v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  id v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  char *v174;
  uint64_t v175;
  void (*v176)(char *, char *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;

  v0 = type metadata accessor for UUID(0);
  v181 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v180 = (char *)&v170 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v174 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v170 - v6;
  v179 = sub_10000DF3C(&qword_1007F5840);
  v8 = swift_allocObject(v179, 56, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1006710E0;
  v178 = type metadata accessor for BoolUserDefaultsDebugSetting();
  swift_allocObject(v178, 97, 7);
  *(_QWORD *)(v8 + 32) = sub_1005FC4AC(0xD00000000000001ALL, 0x80000001006307A0, 0, 0xD000000000000019, 0x80000001006307C0, 0);
  if (qword_1007F3498 != -1)
    swift_once(&qword_1007F3498, sub_10060B650);
  v9 = sub_1000117A8(v2, (uint64_t)qword_100857750);
  v10 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v172 = v9;
  v175 = v3;
  v176 = v10;
  ((void (*)(char *))v10)(v7);
  v11 = type metadata accessor for LocalPreferences(0);
  v177 = static LocalPreferences.AppStoreKitInternal.getter();
  v12 = (id)((uint64_t (*)(void))ASKBuildTypeGetCurrent)();
  v13 = (void *)ASKBuildTypeDebug;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeDebug);
  v16 = v15;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v19 = v17;
  if (v14 == v18 && v16 == v17)
  {
    swift_bridgeObjectRelease_n(v16, 2);
LABEL_7:

    v21 = (void *)ASKBuildTypeConvergence;
    v22 = 1;
LABEL_13:
    v30 = v175;
    goto LABEL_14;
  }
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  if ((v20 & 1) != 0)
    goto LABEL_7;
  v171 = v0;
  v21 = (void *)ASKBuildTypeConvergence;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeConvergence);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {
    swift_bridgeObjectRelease_n(v25, 2);
LABEL_12:

    v22 = 1;
    v0 = v171;
    goto LABEL_13;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
    goto LABEL_12;
  v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKBuildTypeInternal);
  v163 = v162;
  v165 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v166 = v164;
  if (v161 == v165 && v163 == v164)
  {

    v167 = swift_bridgeObjectRelease_n(v163, 2);
    v0 = v171;
    v30 = v175;
LABEL_37:
    v169 = static LocalPreferences.currentApplication.getter(v167);
    Preferences.subscript.getter(&v183, v172, v11, &type metadata for Bool, &protocol witness table for LocalPreferences);
    swift_release(v169);
    v22 = v183 & 1;
    goto LABEL_14;
  }
  v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v161, v163, v165, v164, 0);

  swift_bridgeObjectRelease(v163);
  v167 = swift_bridgeObjectRelease(v166);
  v0 = v171;
  v30 = v175;
  if ((v168 & 1) != 0)
    goto LABEL_37;
  v22 = 0;
LABEL_14:
  v31 = (uint64_t)v174;
  v176(v174, v7, v2);
  v32 = type metadata accessor for BoolPreferencesDebugSetting(0);
  v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v34 = v177;
  v35 = sub_1003E5E0C(0xD00000000000001BLL, 0x80000001006307E0, 0, 0, v22, v31, v177, v33);
  v36 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v7, v2, v36);
  *(_QWORD *)(v8 + 40) = v35;
  v37 = v178;
  swift_allocObject(v178, 97, 7);
  v38 = sub_1005FC4AC(0xD000000000000025, 0x8000000100630800, 0, 0xD000000000000021, 0x8000000100630830, 0);
  *(_QWORD *)(v8 + 48) = v38;
  v183 = v8;
  v39 = specialized Array._endMutation()(v38);
  v185 = v183;
  v40 = (id)ASKBuildTypeGetCurrent(v39);
  v41 = sub_10000DF3C(&qword_1007F5848);
  v42 = swift_allocObject(v41, 56, 7);
  *(_OWORD *)(v42 + 16) = xmmword_10066F860;
  *(_QWORD *)(v42 + 32) = v13;
  *(_QWORD *)(v42 + 40) = v21;
  v43 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(v42 + 48) = ASKBuildTypeInternal;
  type metadata accessor for BuildType(0);
  v44 = v13;
  v45 = v21;
  v46 = v43;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v48 = swift_bridgeObjectRelease(v42);
  LOBYTE(v42) = ASKBuildTypeIsAnyOf(v40, isa, v48);

  v49 = v180;
  if ((v42 & 1) != 0)
  {
    swift_allocObject(v37, 97, 7);
    v50 = sub_1005FC4AC(0xD00000000000001ALL, 0x8000000100630860, 0, 0xD000000000000013, 0x8000000100630880, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
    v52 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v51 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v52 >= v51 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
    v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
    specialized Array._endMutation()(v53);
    v54 = swift_allocObject(&unk_100723BE0, 24, 7);
    v55 = v173;
    *(_QWORD *)(v54 + 16) = v173;
    v56 = type metadata accessor for ActionDebugSetting();
    swift_allocObject(v56, 120, 7);
    v57 = v55;
    v58 = sub_1004804B8(0xD000000000000013, 0x80000001006308A0, 0, 0, 0, 0, (uint64_t)sub_1000529EC, v54);
    swift_release(v54);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
    v61 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v60 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v61 >= v60 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
    v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v58);
    specialized Array._endMutation()(v62);
    v183 = 0;
    v184 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease(v184);
    v183 = 0xD000000000000011;
    v184 = 0x80000001006308C0;
    v63 = (void *)objc_opt_self(NSURLCache);
    v64 = objc_msgSend(v63, "sharedURLCache");
    v65 = (uint64_t)objc_msgSend(v64, "currentMemoryUsage");

    v182 = v65 / 0x100000;
    v66._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v66._object;
    String.append(_:)(v66);
    swift_bridgeObjectRelease(object);
    v68._countAndFlagsBits = 47;
    v68._object = (void *)0xE100000000000000;
    String.append(_:)(v68);
    v69 = objc_msgSend(v63, "sharedURLCache");
    v70 = (uint64_t)objc_msgSend(v69, "memoryCapacity");

    v182 = v70 / 0x100000;
    v71._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v72 = v71._object;
    String.append(_:)(v71);
    swift_bridgeObjectRelease(v72);
    v73._countAndFlagsBits = 0x203A44202C424DLL;
    v73._object = (void *)0xE700000000000000;
    String.append(_:)(v73);
    v74 = objc_msgSend(v63, "sharedURLCache");
    v75 = (uint64_t)objc_msgSend(v74, "currentDiskUsage");

    v182 = v75 / 0x100000;
    v76._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v77 = v76._object;
    String.append(_:)(v76);
    swift_bridgeObjectRelease(v77);
    v78._countAndFlagsBits = 47;
    v78._object = (void *)0xE100000000000000;
    String.append(_:)(v78);
    v79 = objc_msgSend(v63, "sharedURLCache");
    v80 = (uint64_t)objc_msgSend(v79, "diskCapacity");

    v182 = v80 / 0x100000;
    v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v82 = v81._object;
    String.append(_:)(v81);
    swift_bridgeObjectRelease(v82);
    v83._countAndFlagsBits = 2703949;
    v83._object = (void *)0xE300000000000000;
    String.append(_:)(v83);
    v84 = v183;
    v85 = v184;
    v86 = swift_allocObject(&unk_100723C08, 24, 7);
    *(_QWORD *)(v86 + 16) = v57;
    swift_allocObject(v56, 120, 7);
    v87 = v57;
    v88 = sub_1004804B8(v84, v85, 0, 0, 0, 0, (uint64_t)sub_100052A0C, v86);
    swift_release(v86);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
    v91 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v90 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v91 >= v90 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
    v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v88);
    specialized Array._endMutation()(v92);
    v93 = swift_allocObject(&unk_100723C30, 24, 7);
    *(_QWORD *)(v93 + 16) = v87;
    swift_allocObject(v56, 120, 7);
    v94 = v87;
    v95 = sub_1004804B8(0xD000000000000015, 0x80000001006308E0, 0, 0, 0, 0, (uint64_t)sub_100052A10, v93);
    swift_release(v93);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
    v98 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v97 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v49 = v180;
    if (v98 >= v97 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
    v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v95);
    specialized Array._endMutation()(v99);
    v100 = swift_allocObject(&unk_100723C58, 24, 7);
    *(_QWORD *)(v100 + 16) = v94;
    v101 = type metadata accessor for ActionRunnerActionDebugSetting();
    v102 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v102[7] = 0xD000000000000028;
    v102[8] = 0x8000000100630900;
    v102[9] = sub_100052A18;
    v102[10] = v100;
    v103 = v94;
    v104 = swift_retain(v100);
    v105 = UUID.init()(v104);
    v106 = UUID.uuidString.getter(v105);
    v108 = v107;
    v109 = *(void (**)(char *, uint64_t))(v181 + 8);
    v109(v49, v0);
    v183 = v106;
    v184 = v108;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v100);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v110);
    v112 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v111 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v112 >= v111 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v111 > 1, v112 + 1, 1);
    v113 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v112, v102);
    specialized Array._endMutation()(v113);
    v114 = swift_allocObject(&unk_100723C80, 24, 7);
    *(_QWORD *)(v114 + 16) = v103;
    v115 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v115[7] = 0xD000000000000025;
    v115[8] = 0x8000000100630930;
    v115[9] = sub_100052A40;
    v115[10] = v114;
    v116 = v103;
    v117 = swift_retain(v114);
    v118 = UUID.init()(v117);
    v119 = UUID.uuidString.getter(v118);
    v121 = v120;
    v109(v49, v0);
    v183 = v119;
    v184 = v121;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v114);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v122);
    v124 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v123 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v124 >= v123 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v123 > 1, v124 + 1, 1);
    v125 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v124, v115);
    specialized Array._endMutation()(v125);
    v126 = swift_allocObject(&unk_100723CA8, 24, 7);
    *(_QWORD *)(v126 + 16) = v116;
    v127 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v127[7] = 0xD000000000000029;
    v127[8] = 0x8000000100630960;
    v127[9] = sub_100052A68;
    v127[10] = v126;
    v128 = v116;
    v129 = swift_retain(v126);
    v130 = UUID.init()(v129);
    v131 = UUID.uuidString.getter(v130);
    v133 = v132;
    v109(v49, v0);
    v183 = v131;
    v184 = v133;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v126);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
    v136 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v135 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v136 >= v135 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
    v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v127);
    specialized Array._endMutation()(v137);
    v138 = swift_allocObject(&unk_100723CD0, 24, 7);
    *(_QWORD *)(v138 + 16) = v128;
    v139 = (_QWORD *)swift_allocObject(v101, 88, 7);
    v139[7] = 0xD00000000000002DLL;
    v139[8] = 0x8000000100630990;
    v139[9] = sub_100052A84;
    v139[10] = v138;
    v140 = v128;
    v141 = swift_retain(v138);
    v142 = UUID.init()(v141);
    v143 = UUID.uuidString.getter(v142);
    v145 = v144;
    v109(v49, v0);
    v183 = v143;
    v184 = v145;
    AnyHashable.init<A>(_:)(&v183, &type metadata for String, &protocol witness table for String);
    swift_release(v138);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
    v148 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v147 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v148 >= v147 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
    v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v139);
    specialized Array._endMutation()(v149);
  }
  v150 = swift_allocObject(v179, 40, 7);
  *(_OWORD *)(v150 + 16) = xmmword_10066FE60;
  v151 = v185;
  v152 = type metadata accessor for DebugSection();
  v153 = (_QWORD *)swift_allocObject(v152, 56, 7);
  v155 = UUID.init()(v154);
  v156 = UUID.uuidString.getter(v155);
  v158 = v157;
  v159 = (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v49, v0);
  v153[2] = v156;
  v153[3] = v158;
  v153[4] = 0x73676E6974746553;
  v153[5] = 0xE800000000000000;
  v153[6] = v151;
  *(_QWORD *)(v150 + 32) = v153;
  v183 = v150;
  specialized Array._endMutation()(v159);
  return v183;
}

void sub_100052860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v2 = sub_10000DF3C(&qword_1007F5850);
  v3 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(&v6, v2, a1, v2, v3);
  v4 = v6;
  objc_msgSend(v6, "invalidateMediaToken");
  v5 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v5, "notify");
  swift_unknownObjectRelease(v4);

}

uint64_t sub_100052904(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void))
{
  uint64_t v4;

  v4 = a2(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  return a3();
}

uint64_t sub_10005293C(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for UpdateGranularNotificationSettingsAction(0);
  swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
  return UpdateGranularNotificationSettingsAction.init(settingIDs:)(a2);
}

id sub_100052978()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DefaultSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DefaultSettings()
{
  return objc_opt_self(_TtC22SubscribePageExtension15DefaultSettings);
}

uint64_t sub_1000529C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000529EC()
{
  sub_100052AA4();
}

void sub_100052A10(uint64_t a1)
{
  sub_100052860(a1);
}

uint64_t sub_100052A18()
{
  uint64_t v0;

  return sub_100052904(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))&type metadata accessor for UserNotificationsAuthorizationAction, (uint64_t (*)(void))&UserNotificationsAuthorizationAction.init());
}

uint64_t sub_100052A40()
{
  uint64_t v0;

  return sub_100052904(*(_QWORD *)(v0 + 16), (uint64_t (*)(_QWORD))&type metadata accessor for UserNotificationsAuthorizationWithPrewarmAction, (uint64_t (*)(void))&UserNotificationsAuthorizationWithPrewarmAction.init());
}

uint64_t sub_100052A68()
{
  uint64_t v0;

  return sub_10005293C(*(_QWORD *)(v0 + 16), 0);
}

uint64_t sub_100052A84()
{
  uint64_t v0;

  return sub_10005293C(*(_QWORD *)(v0 + 16), (uint64_t)&off_100720E08);
}

void sub_100052AA4()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  __int128 *p_aBlock;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 aBlock;
  __int128 v36;
  uint64_t (*v37)();
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  _BYTE v43[40];

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension21DebugSettingsProvider_debugSettingsViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension21DebugSettingsProvider_debugSettingsViewController);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "presentingViewController");

  if (!v4)
    goto LABEL_7;
  v5 = objc_opt_self(UITabBarController);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
    goto LABEL_6;
  v7 = objc_msgSend(v6, "selectedViewController");

  if (v7)
  {
    v8 = objc_opt_self(UINavigationController);
    v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
    v4 = v7;
    if (v9)
      goto LABEL_10;
LABEL_6:

  }
LABEL_7:
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  v9 = v10;
  if (!v10)
  {
LABEL_37:
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    sub_100053054((uint64_t)&v39);
    v16 = 0;
    goto LABEL_38;
  }
  v11 = objc_msgSend(v10, "presentingViewController");

  if (!v11)
  {
    v9 = 0;
    goto LABEL_37;
  }
  v12 = objc_opt_self(UINavigationController);
  v9 = (void *)swift_dynamicCastObjCClass(v11, v12);
  if (!v9)
  {

    goto LABEL_37;
  }
LABEL_10:
  v13 = objc_msgSend(v9, "viewControllers");
  v14 = sub_1000531A4();
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(char **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_12;
LABEL_36:
    swift_bridgeObjectRelease(v15);
    goto LABEL_37;
  }
  if (v15 < 0)
    v25 = v15;
  else
    v25 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v15);
  v16 = (char *)_CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v15);
  if (!v16)
    goto LABEL_36;
LABEL_12:
  v17 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
  }
  else if ((v15 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v17 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = (char *)*(id *)(v15 + 8 * (_QWORD)v17 + 32);
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_52;
  }
  v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
LABEL_17:
  v16 = v18;
  swift_bridgeObjectRelease(v15);
  if (!v16)
    goto LABEL_37;
  v34 = v16;
  v19 = v16;
  v20 = sub_10000DF3C(&qword_1007F5868);
  if ((swift_dynamicCast(&v39, &v34, v14, v20, 6) & 1) == 0)
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    goto LABEL_24;
  }
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_24:
    sub_100053054((uint64_t)&v39);
    v21 = objc_msgSend(v19, "childViewControllers");
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v14);

    if (!((unint64_t)v15 >> 62))
    {
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_26;
      goto LABEL_56;
    }
LABEL_52:
    if (v15 < 0)
      v32 = v15;
    else
      v32 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v15);
    if (v33)
    {
LABEL_26:
      if ((v15 & 0xC000000000000001) != 0)
      {
        v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
      }
      else
      {
        if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v22 = (char *)*(id *)(v15 + 32);
      }
      v23 = v22;
      swift_bridgeObjectRelease(v15);
      v34 = v23;
      v24 = sub_10000DF3C(&qword_1007F5868);
      if ((swift_dynamicCast(&v39, &v34, v14, v24, 6) & 1) != 0)
      {
        if (*((_QWORD *)&v40 + 1))
          goto LABEL_31;
LABEL_39:
        sub_100053054((uint64_t)&v39);
        aBlock = 0u;
        v36 = 0u;
        v37 = 0;
        goto LABEL_40;
      }
LABEL_38:
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
      goto LABEL_39;
    }
LABEL_56:
    swift_bridgeObjectRelease(v15);
    goto LABEL_38;
  }
LABEL_31:
  sub_100010F3C(&v39, (uint64_t)v42);
  sub_100010F3C(v42, (uint64_t)&aBlock);
LABEL_40:
  sub_100053094((uint64_t)&aBlock, (uint64_t)v43);
  sub_1000530DC((uint64_t)v43, (uint64_t)&aBlock);
  if (*((_QWORD *)&v36 + 1))
  {
    sub_100010F3C(&aBlock, (uint64_t)v42);
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    if (v26
      && (v27 = v26,
          v28 = objc_msgSend(v26, "presentingViewController"),
          v27,
          v28))
    {
      sub_100011020((uint64_t)v42, (uint64_t)&v39);
      v29 = swift_allocObject(&unk_100723CF8, 56, 7);
      sub_100010F3C(&v39, v29 + 16);
      v37 = sub_100053148;
      v38 = v29;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v36 = sub_1000BD6CC;
      *((_QWORD *)&v36 + 1) = &unk_100723D10;
      v30 = _Block_copy(&aBlock);
      objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, v30, swift_release(v38).n128_f64[0]);
      _Block_release(v30);

    }
    else
    {

    }
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v42);
    p_aBlock = (__int128 *)v43;
  }
  else
  {
    sub_100053054((uint64_t)v43);

    p_aBlock = &aBlock;
  }
  sub_100053054((uint64_t)p_aBlock);
}

void sub_100052F7C()
{
  id v0;
  __CFNotificationCenter *v1;
  __CFString *v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(NSURLCache), "sharedURLCache");
  objc_msgSend(v0, "removeAllCachedResponses");

  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  v2 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterPostNotification(v1, v2, 0, 0, 1u);

  v3 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
  objc_msgSend(v3, "notify");

}

uint64_t sub_100053054(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F5858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100053094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000530DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053124()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100053148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  sub_100011064(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_10005318C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005319C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000531A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F5540;
  if (!qword_1007F5540)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F5540);
  }
  return result;
}

uint64_t sub_1000531F8(uint64_t a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  void (*v35)(_QWORD);
  double left;
  double bottom;
  double right;
  uint64_t v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v44;
  __int128 v45;
  __n128 v46;
  __int128 v47;
  __n128 v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  __n128 v56;
  __int128 v57;
  BOOL v58;
  __n128 v59;
  __n128 v60;
  double v61;
  double v62;
  __int128 v63;
  __n128 v64;
  int64x2_t v66;
  double v67;
  double top;
  uint64_t v69;
  _BOOL4 v70;
  int64x2_t v71;
  uint64_t v72;
  void (*v73)(int64x2_t *, _QWORD, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];

  v71.i64[0] = a1;
  v1 = sub_10000DF3C(&qword_1007F5870);
  v2 = __chkstk_darwin(v1);
  v4 = &v66.i8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for PageGrid.HorizontalMargins(0, v2);
  v74 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (int64x2_t *)((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v8);
  v10 = &v66.i8[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v66.i8[-v12];
  __chkstk_darwin(v14);
  v16 = &v66.i8[-v15];
  __chkstk_darwin(v17);
  v19 = &v66.i8[-v18];
  v20 = sub_10000DF3C(&qword_1007F5878);
  v21 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v76 = v22;
  v25 = swift_allocObject(v20, v24 + 6 * v22, v23 | 7);
  *(_OWORD *)(v25 + 16) = xmmword_100671120;
  v69 = v25;
  v75 = v25 + v24;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v26 = xmmword_100856810;
  v78[0] = 0x3FF0000000000000;
  v27 = sub_100020838();
  v28 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4030000000000000;
  v78[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v28);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v35 = *(void (**)(_QWORD))(v74 + 104);
  LODWORD(v74) = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v73 = (void (*)(int64x2_t *, _QWORD, uint64_t))v35;
  v35(v7);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v78[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v39 = v75;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v26, *((double *)&v26 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v72 = v39 + v76;
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v40 = xmmword_100856820;
  v78[0] = 0x3FF0000000000000;
  v41 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v41);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v7 = _Q0;
  v73(v7, v74, v5);
  LOBYTE(v78[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v72 = v5;
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v45 = xmmword_100856830;
  v77 = 0x4000000000000000;
  v78[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v44);
  v70 = v71.i64[0] < 2;
  LOBYTE(v78[0]) = v71.i64[0] < 2;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v46);
  v66 = vdupq_n_s64(0x4041000000000000uLL);
  *v7 = v66;
  v73(v7, v74, v72);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v67 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v45, *((double *)&v45 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v47 = xmmword_100856870;
  v78[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  LOBYTE(v78[0]) = v70;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0x4034000000000000;
  v48 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v48);
  *v7 = v66;
  v73(v7, v74, v72);
  v49 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v47, *((double *)&v47 + 1), v49, v51, v53, v55);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v57 = xmmword_100856880;
  v77 = 0x4000000000000000;
  v78[0] = 0x4004000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v56);
  v58 = v71.i64[0] < 3;
  LOBYTE(v78[0]) = v71.i64[0] < 3;
  LOBYTE(v77) = v70;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for Bool, &protocol witness table for Bool, v59);
  v78[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v60);
  v71 = vdupq_n_s64(0x404A000000000000uLL);
  *v7 = v71;
  v73(v7, v74, v72);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v62 = v67;
  v61 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v57, *((double *)&v57 + 1), top, v67, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v63 = xmmword_100856890;
  v78[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  LOBYTE(v78[0]) = v58;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0x4038000000000000;
  v64 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v64);
  *v7 = v71;
  v73(v7, v74, v72);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v63, *((double *)&v63 + 1), v61, v62, bottom, right);
  return v69;
}

char *sub_100053B44(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_super v31;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[qword_100850E40] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[qword_100850E48] = 0;
  v18 = objc_allocWithZone((Class)type metadata accessor for LegacyMultiAppFallbackView());
  v19 = v5;
  v20 = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v19[qword_100850E50] = v20;
  if (qword_1007F2678 != -1)
    swift_once(&qword_1007F2678, sub_100416C5C);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_1000117A8(v21, (uint64_t)qword_100855850);
  v23 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v17, v22, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DirectionalTextAlignment.leading(_:), v11);
  v24 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v19[qword_100850E58] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 2, 4, 0, 0, v14, 0, 0);

  v31.receiver = v19;
  v31.super_class = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  v26 = objc_msgSend(v25, "contentView");
  objc_msgSend(v26, "setClipsToBounds:", 1);

  v27 = objc_msgSend(v25, "contentView");
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v25[qword_100850E58]);

  v28 = objc_msgSend(v25, "contentView");
  v29 = *(id *)&v25[qword_100850E50];
  objc_msgSend(v28, "addSubview:", v29);

  return v25;
}

char *sub_100053E28(double a1, double a2, double a3, double a4)
{
  return sub_100053B44(a1, a2, a3, a4);
}

double sub_100053E48(CGFloat *a1)
{
  char *v1;
  CGFloat v3;
  CGFloat v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  CGFloat v11;
  CGFloat v12;
  void *v13;
  double Width;
  double v15;
  double v16;
  double MinX;
  double v18;
  double v19;
  double result;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  sub_1003CDB50();
  v3 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] == 1)
  {
    sub_1004F8D74();
    v8 = v7;
  }
  else
  {
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "layoutMargins");
    v8 = v10;

  }
  v11 = v6 - v8;
  v21.origin.x = v3;
  v21.origin.y = v4;
  v21.size.width = v11;
  v21.size.height = v5;
  v12 = CGRectGetMaxY(v21) + -20.0;
  v13 = *(void **)&v1[qword_100850E58];
  v22.origin.x = v3;
  v22.origin.y = v4;
  v22.size.width = v11;
  v22.size.height = v5;
  Width = CGRectGetWidth(v22);
  v23.origin.x = v3;
  v23.origin.y = v4;
  v23.size.width = v11;
  v23.size.height = v5;
  objc_msgSend(v13, "sizeThatFits:", Width, CGRectGetHeight(v23));
  v16 = v15;
  v24.origin.x = v3;
  v24.origin.y = v4;
  v24.size.width = v11;
  v24.size.height = v5;
  MinX = CGRectGetMinX(v24);
  objc_msgSend(v13, "lastBaselineFromBottom");
  v19 = floor(v12 - v16 + v18);
  v25.origin.x = v3;
  v25.origin.y = v4;
  v25.size.width = v11;
  v25.size.height = v5;
  objc_msgSend(v13, "setFrame:", MinX, v19, CGRectGetWidth(v25), v16);
  result = v5 - (v16 + 54.0);
  a1[3] = result;
  return result;
}

id sub_100053FDC(CGFloat *a1)
{
  char *v1;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v3 = objc_msgSend(v1, "contentView");
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v24.origin.x = v5;
  v24.origin.y = v7;
  v24.size.width = v9;
  v24.size.height = v11;
  CGRectGetWidth(v24);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v25.origin.x = *a1;
  v25.origin.y = v13;
  v25.size.width = v14;
  v25.size.height = v15;
  CGRectGetHeight(v25);
  v16 = *(void **)&v1[qword_100850E50];
  v19 = sub_1005022F4(v17, v18);
  v21 = v20;
  v26.origin.x = v12;
  v26.origin.y = v13;
  v26.size.width = v14;
  v26.size.height = v15;
  v22 = floor(CGRectGetMidX(v26) - v19 * 0.5);
  v27.origin.x = v12;
  v27.origin.y = v13;
  v27.size.width = v14;
  v27.size.height = v15;
  return objc_msgSend(v16, "setFrame:", v22, floor(CGRectGetMidY(v27) - v21 * 0.5), v19, v21);
}

void sub_100054100(void *a1)
{
  char *v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = (char *)v2.receiver;
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_10050223C(0);
  objc_msgSend(*(id *)&v1[qword_100850E58], "setText:", 0, v2.receiver, v2.super_class);

}

void sub_10005417C(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1005A3708(a1, a2, a3 & 1);
  v9 = swift_dynamicCastClass(a1, ObjectType);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)(*(_QWORD *)(v9 + qword_100850E50)
                    + OBJC_IVAR____TtC22SubscribePageExtension26LegacyMultiAppFallbackView_configuration);
    swift_retain(v11);
    v18 = a1;
    sub_10050223C(v11);
    *(_QWORD *)&v12 = swift_release(v11).n128_u64[0];
    if ((a3 & 1) != 0)
    {
      v17 = v18;
    }
    else
    {
      v13 = *(void **)(v4 + qword_100850E58);
      v14 = *(void **)(v10 + qword_100850E58);
      v15 = objc_msgSend(v14, "text", v12);
      objc_msgSend(v13, "setText:", v15);

      v16 = objc_msgSend(v14, "textColor");
      objc_msgSend(v13, "setTextColor:", v16);

      v17 = v16;
    }

  }
}

void sub_1000542D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  NSString v29;
  __n128 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _OWORD v79[2];
  uint64_t v80;

  v5 = v4;
  v10 = type metadata accessor for Artwork.Style(0, a2);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  __chkstk_darwin(v10);
  v74 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v71 - v13;
  __chkstk_darwin(v15);
  v78 = (char *)&v71 - v16;
  v17 = type metadata accessor for TodayCard.Style(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1005C0808(a1, a2, a3, a4, v19);
  v23 = TodayCard.media.getter(v22);
  v24 = type metadata accessor for TodayCardMediaMultiAppFallback(0);
  if (!swift_dynamicCastClass(v23, v24))
  {
    swift_release(v23);
    return;
  }
  v72 = v23;
  v73 = v5;
  v25 = *(void **)(v5 + qword_100850E58);
  TodayCardMediaMultiAppFallback.additionalText.getter();
  if (v26)
  {
    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(v25, "setText:", v29, v27);

  v31 = TodayCard.style.getter(v30);
  v32 = (void *)TodayCard.Style.overlayDetailTextColor.getter(v31);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  objc_msgSend(v25, "setTextColor:", v32);

  v33 = type metadata accessor for ArtworkLoader(0);
  v34 = *(_QWORD *)(a4 + qword_100854050);
  if (!v34)
    goto LABEL_47;
  v35 = swift_retain(*(_QWORD *)(a4 + qword_100854050));
  v36 = TodayCardMediaMultiAppFallback.lockups.getter(v35);
  v37 = v36;
  *(_QWORD *)&v79[0] = _swiftEmptyArrayStorage;
  v77 = v34;
  if (!((unint64_t)v36 >> 62))
  {
    v38 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    v33 = swift_bridgeObjectRetain(v36);
    if (v38)
      goto LABEL_9;
LABEL_24:
    swift_bridgeObjectRelease(v37);
    v47 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_25:
    v49 = swift_bridgeObjectRelease(v37);
    TodayCardMediaMultiAppFallback.dominantStyle.getter(v49);
    v50 = v74;
    v51 = v75;
    v52 = v76;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for Artwork.Style.roundedRect(_:), v76);
    Artwork.Style.orIfUnspecified(_:)(v50);
    v53 = *(void (**)(char *, uint64_t))(v51 + 8);
    v53(v50, v52);
    v74 = (char *)v53;
    v53(v14, v52);
    if ((unint64_t)v47 >> 62)
    {
      if (v47 < 0)
        v70 = v47;
      else
        v70 = v47 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v47);
      v54 = _CocoaArrayWrapper.endIndex.getter(v70);
      swift_bridgeObjectRelease(v47);
    }
    else
    {
      v54 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v14, v78, v52);
    v55 = type metadata accessor for LegacyMultiAppFallbackView.Configuration(0);
    v56 = swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
    swift_unknownObjectWeakInit(v56 + 16, 0);
    v57 = OBJC_IVAR____TtCC22SubscribePageExtension26LegacyMultiAppFallbackView13Configuration_images;
    *(_QWORD *)(v56 + v57) = sub_10036D9E0(_swiftEmptyArrayStorage);
    swift_unknownObjectWeakAssign(v56 + 16, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v56 + OBJC_IVAR____TtCC22SubscribePageExtension26LegacyMultiAppFallbackView13Configuration_style, v14, v52);
    *(_QWORD *)(v56 + OBJC_IVAR____TtCC22SubscribePageExtension26LegacyMultiAppFallbackView13Configuration_numberOfIcons) = v54;
    swift_retain(v56);
    sub_10050223C(v58);
    swift_release(v56);
    if ((unint64_t)v47 >> 62)
    {
      if (v47 < 0)
        v60 = v47;
      else
        v60 = v47 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v47);
      v59 = _CocoaArrayWrapper.endIndex.getter(v60);
      swift_bridgeObjectRelease(v47);
      if (!v59)
        goto LABEL_40;
    }
    else
    {
      v59 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v59)
      {
LABEL_40:
        swift_release(v72);
        swift_release(v77);
        swift_bridgeObjectRelease(v47);
        v69 = swift_release(v56);
        ((void (*)(char *, uint64_t, __n128))v74)(v78, v76, v69);
        return;
      }
    }
    if (v59 >= 1)
    {
      v61 = 0;
      v62 = v47 & 0xC000000000000001;
      v63 = v47;
      do
      {
        if (v62)
        {
          v64 = specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v47);
        }
        else
        {
          v64 = *(_QWORD *)(v47 + 8 * v61 + 32);
          swift_retain(v64);
        }
        v65 = Artwork.Style.iconHeight(fromWidth:)(178.0);
        v66 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, 178.0, v65);
        v80 = 0;
        memset(v79, 0, sizeof(v79));
        v67 = swift_allocObject(&unk_100723D60, 32, 7);
        *(_QWORD *)(v67 + 16) = v56;
        *(_QWORD *)(v67 + 24) = v61;
        v68 = swift_retain(v56);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v66, 2, 1, v79, sub_100054E30, v67, v68);
        swift_release(v64);
        swift_release(v66);
        swift_release(v67);
        sub_100054E38((uint64_t)v79);
        ++v61;
        v47 = v63;
      }
      while (v59 != v61);
      goto LABEL_40;
    }
    goto LABEL_46;
  }
  if (v36 < 0)
    v48 = v36;
  else
    v48 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v36);
  v33 = _CocoaArrayWrapper.endIndex.getter(v48);
  v38 = v33;
  if (!v33)
    goto LABEL_24;
LABEL_9:
  if (v38 >= 1)
  {
    for (i = 0; i != v38; ++i)
    {
      if ((v37 & 0xC000000000000001) != 0)
      {
        v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v37);
        v42 = v41;
      }
      else
      {
        v42 = *(_QWORD *)(v37 + 8 * i + 32);
        swift_retain(v42);
      }
      v43 = dispatch thunk of Lockup.artwork.getter(v41);
      swift_release(v42);
      if (v43)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
        v46 = *(_QWORD *)((*(_QWORD *)&v79[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v45 = *(_QWORD *)((*(_QWORD *)&v79[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v46 >= v45 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
        v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v43);
        specialized Array._endMutation()(v40);
      }
    }
    swift_bridgeObjectRelease(v37);
    v47 = *(_QWORD *)&v79[0];
    goto LABEL_25;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v33);
  __break(1u);
}

void sub_1000548F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8;
  id v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  id v15;
  uint64_t v16;
  _BYTE v17[24];

  if (a1
    && *(_QWORD *)(a5
                 + OBJC_IVAR____TtCC22SubscribePageExtension26LegacyMultiAppFallbackView13Configuration_numberOfIcons) > a6)
  {
    v8 = a1;
    v9 = objc_msgSend(v8, "CGImage");
    v10 = (_QWORD *)(a5 + OBJC_IVAR____TtCC22SubscribePageExtension26LegacyMultiAppFallbackView13Configuration_images);
    swift_beginAccess(a5 + OBJC_IVAR____TtCC22SubscribePageExtension26LegacyMultiAppFallbackView13Configuration_images, v17, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
    v16 = *v10;
    *v10 = 0x8000000000000000;
    sub_10010BB08((uint64_t)v9, a6, isUniquelyReferenced_nonNull_native);
    v12 = *v10;
    *v10 = v16;
    swift_bridgeObjectRelease(v12);
    swift_endAccess(v17);
    Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
    if (Strong)
    {
      v14 = (void *)Strong;
      v15 = objc_msgSend(v8, "CGImage");
      sub_100501244((uint64_t)v15, a6);

      v8 = v14;
    }
    else
    {
      v15 = v8;
    }

  }
}

void sub_100054A28()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;

  v0 = type metadata accessor for TodayCard(0);
  v1 = sub_100054DC4();
  v2 = ItemLayoutContext.typedModel<A>(as:)(&v26, v0, v0, v1);
  v3 = v26;
  if (v26)
  {
    v4 = TodayCard.media.getter(v2);
    swift_release(v3);
    v5 = type metadata accessor for TodayCardMediaMultiAppFallback(0);
    if (!swift_dynamicCastClass(v4, v5)
      || (v7 = TodayCardMediaMultiAppFallback.lockups.getter(v6),
          v8 = type metadata accessor for Lockup(0),
          v9 = Array.isNotEmpty.getter(v7, v8),
          v10 = swift_bridgeObjectRelease(v7),
          (v9 & 1) == 0))
    {
      swift_release(v4);
      return;
    }
    v11 = TodayCardMediaMultiAppFallback.lockups.getter(v10);
    v12 = v11;
    v26 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v25 = v11;
      else
        v25 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v13 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (v13)
        goto LABEL_6;
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v13)
      {
LABEL_6:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v13; ++i)
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
          }
          else
          {
            v15 = *(_QWORD *)(v12 + 8 * i + 32);
            v16 = swift_retain(v15);
          }
          v17 = Lockup.icon.getter(v16);
          if (v17)
          {
            v18 = v17;
            v19 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, 178.0, 178.0);
            swift_release(v15);
            swift_release(v18);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v22 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v21 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v22 >= v21 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
            v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
            specialized Array._endMutation()(v23);
          }
          else
          {
            swift_release(v15);
          }
        }
        swift_bridgeObjectRelease(v12);
        v24 = (_QWORD *)v26;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease(v12);
    v24 = _swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRelease(v12);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v24);
    swift_release(v4);
    swift_bridgeObjectRelease(v24);
  }
}

void sub_100054C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100850E40));
  swift_release(*(_QWORD *)(v0 + qword_100850E48));

}

void sub_100054CCC(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100850E40));
  swift_release(*(_QWORD *)(a1 + qword_100850E48));

}

uint64_t type metadata accessor for LegacyMultiAppFallbackCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F58A8;
  if (!qword_1007F58A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LegacyMultiAppFallbackCardCollectionViewCell);
  return result;
}

uint64_t sub_100054D60(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 808);
}

uint64_t sub_100054DBC()
{
  return type metadata accessor for LegacyMultiAppFallbackCardCollectionViewCell(0);
}

unint64_t sub_100054DC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10080E200;
  if (!qword_10080E200)
  {
    v1 = type metadata accessor for TodayCard(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCard, v1);
    atomic_store(result, (unint64_t *)&qword_10080E200);
  }
  return result;
}

uint64_t sub_100054E0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100054E30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1000548F8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_100054E38(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F9850);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AppLaunchTrampolineActionImplementation()
{
  return &type metadata for AppLaunchTrampolineActionImplementation;
}

unint64_t sub_100054E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F5C30;
  if (!qword_1007F5C30)
  {
    v1 = type metadata accessor for AppLaunchTrampolineAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007F5C30);
  }
  return result;
}

uint64_t sub_100054ED4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  NSURL *v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[5];
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  void **aBlock;
  uint64_t v57;
  void (*v58)(uint64_t, void *);
  void *v59;
  void *v60;
  _QWORD *v61;

  v5 = type metadata accessor for OSLogger(0, a3);
  v52[4] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v52[3] = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v11);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v52 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v52 - v18;
  v21 = __chkstk_darwin(v20);
  v53 = (uint64_t)v52 - v22;
  AppLaunchTrampolineAction.payloadUrl.getter(v21);
  AppLaunchTrampolineAction.payloadUrl.getter(v23);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v24 = v54(v19, 1, v7);
  v55 = a2;
  if (v24 == 1)
  {
    sub_100011088((uint64_t)v19, (uint64_t *)&unk_1007F5150);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v19, v7);
    v25 = type metadata accessor for AdAttributionManager(0);
    v26 = BaseObjectGraph.optional<A>(_:)(&aBlock, v25, v25);
    v27 = aBlock;
    if (aBlock)
    {
      v52[2] = v5;
      v28 = AppLaunchTrampolineAction.bundleId.getter(v26);
      v30 = v29;
      dispatch thunk of AdAttributionManager.processReengagement(forBundleID:payloadURL:)(v28);
      swift_release(v27);
      v47 = swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v47);
      v48 = v53;
      sub_100011088(v53, (uint64_t *)&unk_1007F5150);
      v49 = 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
      v50 = (uint64_t)v16;
      v51 = v48;
      sub_10005596C(v50, v48);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v49 = 0;
  v51 = v53;
LABEL_7:
  sub_10000DF3C(&qword_100803510);
  v31 = Promise.__allocating_init()();
  v32 = objc_msgSend(objc_allocWithZone((Class)ASCAppLaunchTrampoline), "init");
  AppLaunchTrampolineAction.bundleId.getter(v32);
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  sub_1000558C4(v51, (uint64_t)v13);
  if (v54(v13, 1, v7) == 1)
  {
    v37 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v36);
    v37 = v38;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  v39 = objc_msgSend(v32, "openApplicationWithBundleIdentifier:payloadURL:universalLinkRequired:", v35, v37, v49, v52[0]);

  v60 = sub_10005590C;
  v61 = (_QWORD *)v31;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_10005553C;
  v59 = &unk_100723DD0;
  v40 = _Block_copy(&aBlock);
  v41 = v61;
  swift_retain(v31);
  objc_msgSend(v39, "addSuccessBlock:", v40, swift_release(v41).n128_f64[0]);
  _Block_release(v40);
  v42 = (_QWORD *)swift_allocObject(&unk_100723E08, 40, 7);
  v43 = v55;
  v42[2] = a1;
  v42[3] = v43;
  v42[4] = v31;
  v60 = sub_100055960;
  v61 = v42;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_10005553C;
  v59 = &unk_100723E20;
  v44 = _Block_copy(&aBlock);
  v45 = v61;
  swift_retain(v31);
  swift_retain(a1);
  swift_retain(v43);
  objc_msgSend(v39, "addErrorBlock:", v44, swift_release(v45).n128_f64[0]);
  _Block_release(v44);

  sub_100011088(v51, (uint64_t *)&unk_1007F5150);
  return v31;
}

uint64_t sub_1000554A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  Promise.resolve(_:)(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_10005553C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

double sub_10005558C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41[8];
  _QWORD v42[4];

  v36 = a3;
  v37 = a2;
  v38 = a4;
  v34[1] = *a4;
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000DF3C(&qword_1007F78F0);
  v35 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v34[0] = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3450 != -1)
    swift_once(&qword_1007F3450, sub_10060243C);
  v15 = sub_1000117A8(v11, (uint64_t)qword_100857618);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ 2 * *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_10066F870;
  LogMessage.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100630AF0);
  swift_getErrorValue(a1, v41, &v39);
  v20 = v39;
  v19 = v40;
  v42[3] = v40;
  v21 = sub_1000117C0(v42);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v20, v19);
  static LogMessage.sensitive(_:)(v42);
  sub_100011088((uint64_t)v42, &qword_1007F6E90);
  Logger.error(_:)(v18, v11, &protocol witness table for OSLogger);
  v22 = swift_bridgeObjectRelease(v18);
  v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v22);
  v24 = AppLaunchTrampolineAction.fallbackAction.getter(v23);
  if (v24)
  {
    v25 = v24;
    v26 = v36;
    BaseObjectGraph.optional<A>(_:)(v7, v8, v8);
    v27 = v35;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48))(v7, 1, v8) == 1)
    {
      sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F5140);
      v28 = sub_1000559B4();
      v29 = swift_allocError(&type metadata for GeneralActionImplementationError, v28, 0, 0);
      *v30 = 1;
      v31 = Promise.__allocating_init(error:)(v29);
    }
    else
    {
      v33 = v34[0];
      (*(void (**)(_QWORD, _QWORD *, uint64_t))(v27 + 32))(v34[0], v7, v8);
      v31 = sub_10008EB60(v25, v26, v33);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v33, v8);
    }
    Promise.pipe(to:)(v38);
    swift_release(v25);
    *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  }
  else
  {
    Promise.reject(_:)(a1);
  }
  return result;
}

uint64_t sub_1000558BC(uint64_t *a1, uint64_t a2, __n128 a3)
{
  return sub_100054ED4(*a1, a2, a3);
}

uint64_t sub_1000558C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005590C()
{
  return sub_1000554A8();
}

uint64_t sub_100055914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100055924(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005592C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100055960(uint64_t a1)
{
  uint64_t v1;

  return sub_10005558C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_10005596C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000559B4()
{
  unint64_t result;

  result = qword_100810900;
  if (!qword_100810900)
  {
    result = swift_getWitnessTable(&unk_10067925C, &type metadata for GeneralActionImplementationError);
    atomic_store(result, (unint64_t *)&qword_100810900);
  }
  return result;
}

void sub_100055A00()
{
  qword_100850E60 = 0;
  *(_QWORD *)algn_100850E68 = 0;
}

double sub_100055A10()
{
  double result;

  result = 1.0;
  xmmword_100850E70 = xmmword_100671230;
  return result;
}

double sub_100055A24()
{
  double result;

  result = 0.0;
  xmmword_100850E80 = xmmword_100671240;
  return result;
}

__n128 sub_100055A38()
{
  __n128 result;

  __asm { FMOV            V0.2D, #1.0 }
  xmmword_100850E90 = (__int128)result;
  return result;
}

id sub_100055A48(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  objc_class *v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  objc_super v22;

  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors] = _swiftEmptyArrayStorage;
  v9 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_baseGradientView;
  v10 = (objc_class *)type metadata accessor for GradientView();
  v11 = objc_allocWithZone(v10);
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(v10), "init");
  v14 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(v10), "init");
  v15 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_bottomRightOverlayView;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone(v10), "init");

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  v16 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v17 = objc_msgSend(v16, "layer");
  v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v18, "scale");
  v20 = v19;

  objc_msgSend(v17, "setRasterizationScale:", v20);
  return v16;
}

double sub_100055C20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __n128 v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors;
  v4 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors) = a1;
  v5 = swift_bridgeObjectRetain(a1);
  v6 = sub_1001063D8(v5, v4);
  v7 = swift_bridgeObjectRelease(a1);
  if ((v6 & 1) == 0)
  {
    v8 = *(_QWORD *)((char *)v1 + v3);
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v10 = *(_QWORD *)((char *)v1 + v3);
      else
        v10 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)((char *)v1 + v3));
      v11 = _CocoaArrayWrapper.endIndex.getter(v10);
      v7 = swift_bridgeObjectRelease(v8);
      if (v11)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      (*(void (**)(__n128))((swift_isaMask & *v1) + 0xF0))(v7);
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_100055CE0()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_baseGradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");

  v2 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");

  v3 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setFrame:");

  v4 = *(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_bottomRightOverlayView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "setFrame:");

}

id sub_100055E1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  id v29;
  uint64_t v30;
  objc_class *v31;
  id v32;
  void *v33;
  char *v34;
  _OWORD *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  __int128 v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  double v62;
  double v63;
  char *v64;
  void *v65;
  id v66;
  void *v67;
  char *v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  void *v72;
  char *v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  __int128 v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  double v93;
  double v94;
  char *v95;
  void *v96;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  __int128 v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_baseGradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_baseGradientView], "removeFromSuperview");
  v3 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientView], "removeFromSuperview");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView], "removeFromSuperview");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_bottomRightOverlayView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_bottomRightOverlayView], "removeFromSuperview");
  v5 = (char *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v6);

  v7 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors];
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v98 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors];
    else
      v98 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors]);
    v9 = _CocoaArrayWrapper.endIndex.getter(v98);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  switch(v9)
  {
    case 1:
      v10 = *(_QWORD *)&v1[v7];
      if ((v10 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v1[v7]);
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
        swift_bridgeObjectRelease(v10);
      }
      else
      {
        if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_60;
        }
        v11 = *(id *)(v10 + 32);
      }
      objc_msgSend(v1, "setBackgroundColor:", v11);

      goto LABEL_53;
    case 2:
      v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
      v13 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v12;

      v5 = *(char **)&v1[v2];
      v14 = sub_10000DF3C(&qword_1007F5840);
      v10 = swift_allocObject(v14, 48, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100671250;
      v9 = *(_QWORD *)&v1[v7];
      if ((v9 & 0xC000000000000001) != 0)
      {
LABEL_60:
        v99 = v5;
        swift_bridgeObjectRetain(v9);
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v9);
        swift_bridgeObjectRelease(v9);
        v9 = *(_QWORD *)&v1[v7];
      }
      else
      {
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_62;
        }
        v15 = *(void **)(v9 + 40);
        v16 = v5;
        v17 = v15;
      }
      *(_QWORD *)(v10 + 32) = v17;
      if ((v9 & 0xC000000000000001) != 0)
      {
LABEL_62:
        swift_bridgeObjectRetain(v9);
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
        swift_bridgeObjectRelease(v9);
        goto LABEL_14;
      }
      if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_64;
      }
      v18 = *(id *)(v9 + 32);
      v19 = (uint64_t)v18;
LABEL_14:
      *(_QWORD *)(v10 + 40) = v19;
      specialized Array._endMutation()(v18);
      v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
      *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v10;
      swift_bridgeObjectRelease(v20);
      sub_10003B47C();

      v21 = qword_1007F0E90;
      v10 = (uint64_t)*(id *)&v1[v2];
      if (v21 == -1)
        goto LABEL_15;
LABEL_64:
      swift_once(&qword_1007F0E90, sub_100055A00);
LABEL_15:
      v22 = *(double *)&qword_100850E60;
      v23 = *(double *)algn_100850E68;
      v24 = objc_msgSend((id)v10, "layer");
      v25 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v24, v25, 0, 0, 0), "setStartPoint:", v22, v23);

      v26 = qword_1007F0EA8;
      v27 = *(id *)&v1[v2];
      if (v26 != -1)
        swift_once(&qword_1007F0EA8, sub_100055A38);
      v28 = xmmword_100850E90;
      v29 = objc_msgSend(v27, "layer");
      v30 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v29, v30, 0, 0, 0), "setEndPoint:", v28);

      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
LABEL_53:
      objc_msgSend(v1, "setNeedsLayout");
      return objc_msgSend(v1, "setNeedsDisplay");
    case 3:
      v109 = v3;
      v31 = (objc_class *)type metadata accessor for GradientView();
      v32 = objc_msgSend(objc_allocWithZone(v31), "init");
      v33 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v32;

      v34 = *(char **)&v1[v2];
      v108 = sub_10000DF3C(&qword_1007F5840);
      v35 = (_OWORD *)swift_allocObject(v108, 48, 7);
      v35[1] = xmmword_100671250;
      v36 = *(_QWORD *)&v1[v7];
      if ((v36 & 0xC000000000000001) != 0)
      {
        v100 = v34;
        swift_bridgeObjectRetain(v36);
        v101 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v36);
        swift_bridgeObjectRelease(v36);
        v39 = (id)v101;
        v36 = *(_QWORD *)&v1[v7];
      }
      else
      {
        if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_67;
        }
        v37 = *(void **)(v36 + 40);
        v38 = v34;
        v39 = v37;
      }
      *((_QWORD *)v35 + 4) = v39;
      if ((v36 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
        {
          __break(1u);
          goto LABEL_69;
        }
        v40 = *(id *)(v36 + 48);
LABEL_24:
        *((_QWORD *)v35 + 5) = v40;
        specialized Array._endMutation()(v40);
        v41 = *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
        *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v35;
        swift_bridgeObjectRelease(v41);
        sub_10003B47C();

        v42 = qword_1007F0E90;
        v35 = *(id *)&v1[v2];
        if (v42 == -1)
          goto LABEL_25;
LABEL_69:
        swift_once(&qword_1007F0E90, sub_100055A00);
LABEL_25:
        v43 = *(double *)&qword_100850E60;
        v44 = *(double *)algn_100850E68;
        v45 = objc_msgSend(v35, "layer", 2, 5);
        v46 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v45, v46, 0, 0, 0), "setStartPoint:", v43, v44);

        v47 = qword_1007F0E98;
        v48 = *(id *)&v1[v2];
        if (v47 != -1)
          swift_once(&qword_1007F0E98, sub_100055A10);
        v49 = xmmword_100850E70;
        v50 = objc_msgSend(v48, "layer");
        v51 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v50, v51, 0, 0, 0), "setEndPoint:", v49);

        v52 = objc_msgSend(objc_allocWithZone(v31), "init");
        v53 = *(void **)&v1[v109];
        *(_QWORD *)&v1[v109] = v52;

        v54 = *(_QWORD *)&v1[v109];
        v55 = *(_QWORD *)&v1[v7];
        if ((v55 & 0xC000000000000001) != 0)
        {
          v103 = (id)v54;
          swift_bridgeObjectRetain(v55);
          v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v55);
          swift_bridgeObjectRelease(v55);
        }
        else
        {
          if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_72;
          }
          v56 = *(void **)(v55 + 32);
          v57 = (id)v54;
          v58 = v56;
        }
        objc_msgSend((id)v54, "setBackgroundColor:", v58);

        v54 = swift_allocObject(v108, 48, 7);
        *(_OWORD *)(v54 + 16) = v107;
        *(_QWORD *)(v54 + 32) = objc_msgSend(v5, "clearColor");
        v59 = objc_msgSend(v5, "blackColor");
        v60 = objc_msgSend(v59, "colorWithAlphaComponent:", 0.2);

        *(_QWORD *)(v54 + 40) = v60;
        specialized Array._endMutation()(v61);
        if (qword_1007F0EA0 == -1)
        {
LABEL_31:
          v63 = *((double *)&xmmword_100850E80 + 1);
          v62 = *(double *)&xmmword_100850E80;
          if (qword_1007F0EA8 != -1)
          {
            v104 = xmmword_100850E80;
            swift_once(&qword_1007F0EA8, sub_100055A38);
            v63 = *((double *)&v104 + 1);
            v62 = *(double *)&v104;
          }
          v64 = sub_100056DB8(v54, (uint64_t)&off_100720CA8, 0, v62, v63, *(double *)&xmmword_100850E90, *((double *)&xmmword_100850E90 + 1));
          swift_bridgeObjectRelease(v54);
          v65 = *(void **)&v1[v4];
          *(_QWORD *)&v1[v4] = v64;

          objc_msgSend(*(id *)&v1[v109], "addSubview:", *(_QWORD *)&v1[v4]);
          sub_100056AE8();
          objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
          objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v109]);
          goto LABEL_53;
        }
LABEL_72:
        swift_once(&qword_1007F0EA0, sub_100055A24);
        goto LABEL_31;
      }
LABEL_67:
      swift_bridgeObjectRetain(v36);
      v102 = specialized _ArrayBuffer._getElementSlowPath(_:)(2, v36);
      swift_bridgeObjectRelease(v36);
      v40 = (id)v102;
      goto LABEL_24;
    case 4:
      v66 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
      v67 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v66;

      v68 = *(char **)&v1[v2];
      v69 = sub_10000DF3C(&qword_1007F5840);
      v70 = (_OWORD *)swift_allocObject(v69, 48, 7);
      v70[1] = xmmword_100671250;
      v71 = *(_QWORD *)&v1[v7];
      if ((v71 & 0xC000000000000001) != 0)
      {
        v105 = v68;
        swift_bridgeObjectRetain(v71);
        v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v71);
        swift_bridgeObjectRelease(v71);
        v71 = *(_QWORD *)&v1[v7];
      }
      else
      {
        if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_75;
        }
        v72 = *(void **)(v71 + 32);
        v73 = v68;
        v74 = v72;
      }
      *((_QWORD *)v70 + 4) = v74;
      if ((v71 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_77;
        }
        v75 = *(id *)(v71 + 40);
        v76 = (uint64_t)v75;
LABEL_40:
        *((_QWORD *)v70 + 5) = v76;
        specialized Array._endMutation()(v75);
        v77 = *(_QWORD *)&v68[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
        *(_QWORD *)&v68[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v70;
        swift_bridgeObjectRelease(v77);
        sub_10003B47C();

        v78 = qword_1007F0E90;
        v70 = *(id *)&v1[v2];
        if (v78 == -1)
          goto LABEL_41;
LABEL_77:
        swift_once(&qword_1007F0E90, sub_100055A00);
LABEL_41:
        v79 = *(double *)&qword_100850E60;
        v80 = *(double *)algn_100850E68;
        v81 = objc_msgSend(v70, "layer");
        v82 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v81, v82, 0, 0, 0), "setStartPoint:", v79, v80);

        v83 = qword_1007F0E98;
        v84 = *(id *)&v1[v2];
        if (v83 != -1)
          swift_once(&qword_1007F0E98, sub_100055A10);
        v85 = xmmword_100850E70;
        v86 = objc_msgSend(v84, "layer");
        v87 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v86, v87, 0, 0, 0), "setEndPoint:", v85);

        v88 = swift_allocObject(v69, 48, 7);
        *(_OWORD *)(v88 + 16) = xmmword_100671250;
        v89 = *(_QWORD *)&v1[v7];
        if ((v89 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain(*(_QWORD *)&v1[v7]);
          v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v89);
          swift_bridgeObjectRelease(v89);
          v89 = *(_QWORD *)&v1[v7];
        }
        else
        {
          if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
          {
            __break(1u);
            goto LABEL_80;
          }
          v90 = *(id *)(v89 + 48);
        }
        *(_QWORD *)(v88 + 32) = v90;
        if ((v89 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
          {
            __break(1u);
            goto LABEL_82;
          }
          v91 = *(id *)(v89 + 56);
          v92 = (uint64_t)v91;
LABEL_49:
          *(_QWORD *)(v88 + 40) = v92;
          specialized Array._endMutation()(v91);
          if (qword_1007F0EA0 == -1)
          {
LABEL_50:
            v94 = *((double *)&xmmword_100850E80 + 1);
            v93 = *(double *)&xmmword_100850E80;
            if (qword_1007F0EA8 != -1)
            {
              v106 = xmmword_100850E80;
              swift_once(&qword_1007F0EA8, sub_100055A38);
              v94 = *((double *)&v106 + 1);
              v93 = *(double *)&v106;
            }
            v95 = sub_100056DB8(v88, (uint64_t)&off_100720CD8, 0, v93, v94, *(double *)&xmmword_100850E90, *((double *)&xmmword_100850E90 + 1));
            swift_bridgeObjectRelease(v88);
            v96 = *(void **)&v1[v3];
            *(_QWORD *)&v1[v3] = v95;

            sub_100056AE8();
            objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
            objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v3]);
            goto LABEL_53;
          }
LABEL_82:
          swift_once(&qword_1007F0EA0, sub_100055A24);
          goto LABEL_50;
        }
LABEL_80:
        swift_bridgeObjectRetain(v89);
        v92 = specialized _ArrayBuffer._getElementSlowPath(_:)(3, v89);
        swift_bridgeObjectRelease(v89);
        goto LABEL_49;
      }
LABEL_75:
      swift_bridgeObjectRetain(v71);
      v76 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v71);
      swift_bridgeObjectRelease(v71);
      goto LABEL_40;
    default:
      goto LABEL_53;
  }
}

void sub_100056AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v3 = v2;
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v3);
    swift_bridgeObjectRelease(v2);
    if (v4 < 3)
      return;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 3)
  {
    return;
  }
  v5 = sub_10000DF3C(&qword_1007F5840);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100671250;
  v7 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v6 + 32) = objc_msgSend(v7, "clearColor");
  v8 = objc_msgSend(v7, "whiteColor");
  *(_QWORD *)(v6 + 40) = v8;
  specialized Array._endMutation()(v8);
  if (qword_1007F0E90 != -1)
    swift_once(&qword_1007F0E90, sub_100055A00);
  v9 = *(double *)&qword_100850E60;
  v10 = *(double *)algn_100850E68;
  if (qword_1007F0EA0 != -1)
    swift_once(&qword_1007F0EA0, sub_100055A24);
  v11 = sub_100056DB8(v6, (uint64_t)&off_100720C78, 0, v9, v10, *(double *)&xmmword_100850E80, *((double *)&xmmword_100850E80 + 1));
  swift_bridgeObjectRelease(v6);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView;
  v13 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView) = v11;

  v14 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientView), "layer");
  v15 = objc_msgSend(*(id *)(v1 + v12), "layer");
  objc_msgSend(v14, "setMask:", v15);

}

id sub_100056D00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MultiCornerGradientView()
{
  return objc_opt_self(_TtC22SubscribePageExtension23MultiCornerGradientView);
}

char *sub_100056DB8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;

  v14 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v15);
  sub_10003B47C();
  swift_bridgeObjectRetain(a2);
  sub_10003B2E4(v16);
  v17 = objc_msgSend(v14, "layer");
  v18 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v17, v18, 0, 0, 0), "setStartPoint:", a4, a5);

  v19 = objc_msgSend(v14, "layer");
  v20 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v19, v20, 0, 0, 0), "setEndPoint:", a6, a7);

  v21 = objc_msgSend(v14, "layer");
  objc_msgSend(v21, "setMask:", a3);

  return v14;
}

void sub_100056F34()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_colors] = _swiftEmptyArrayStorage;
  v1 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_baseGradientView;
  v2 = (objc_class *)type metadata accessor for GradientView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), "init");
  v3 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(v2), "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_secondaryGradientMaskView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v2), "init");
  v5 = OBJC_IVAR____TtC22SubscribePageExtension23MultiCornerGradientView_bottomRightOverlayView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(v2), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/MultiCornerGradientView.swift", 52, 2, 52, 0);
  __break(1u);
}

uint64_t sub_100057028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  __n128 v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[7];
  uint64_t v20;
  _BYTE v21[32];
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;
  _BYTE v25[40];
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for Adaptive(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 424) & 1) != 0)
  {
    v18 = v3;
    sub_1000572BC(v1 + 56, (uint64_t)v19);
    sub_100011020(v1 + 224, (uint64_t)v23);
    sub_100011020(v1 + 304, (uint64_t)v25);
    v17 = v4;
    sub_100011020(v1 + 344, (uint64_t)&v26);
    v16[1] = a1;
    sub_100011020(v1 + 384, (uint64_t)&v27);
    v7 = sub_1000572F8();
    Adaptive.init<A>(_:)(v19, &type metadata for ProductRatingsCompactDetailsLayout, v7);
    KeyPath = swift_getKeyPath(&unk_1006712A0);
    sub_1000573CC(v1 + 160, (uint64_t)v19);
    sub_100011020(v1 + 224, (uint64_t)v21);
    sub_100011020(v1 + 344, (uint64_t)v23);
    sub_100011020(v1 + 384, (uint64_t)v25);
    v9 = sub_100057408();
    v10 = swift_retain(KeyPath);
    Adaptive.onCustom<A>(_:_:)(sub_1000573B0, KeyPath, v19, &type metadata for ProductRatingsRegularLayout, v9, v10);
    swift_release_n(KeyPath, 2);
    sub_10005744C(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v18);
  }
  else
  {
    sub_100012C28(v1, (uint64_t)v19);
    sub_100011020(v1 + 224, (uint64_t)&v20);
    sub_100011020(v1 + 264, (uint64_t)&v22);
    sub_100011020(v1 + 344, (uint64_t)&v24);
    v12 = sub_100012C74();
    Adaptive.init<A>(_:)(v19, &type metadata for ProductRatingsCompactProductPageLayout, v12);
    v13 = swift_getKeyPath(&unk_1006712A0);
    sub_1000573CC(v1 + 160, (uint64_t)v19);
    sub_100011020(v1 + 224, (uint64_t)v21);
    sub_100011020(v1 + 344, (uint64_t)v23);
    sub_100011020(v1 + 384, (uint64_t)v25);
    v14 = sub_100057408();
    v15 = swift_retain(v13);
    Adaptive.onCustom<A>(_:_:)(sub_1000573B0, v13, v19, &type metadata for ProductRatingsRegularLayout, v14, v15);
    swift_release_n(v13, 2);
    sub_10005744C(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1000572BC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsCompactDetailsLayout.Metrics(a2, a1);
  return a2;
}

unint64_t sub_1000572F8()
{
  unint64_t result;

  result = qword_1007F5C88;
  if (!qword_1007F5C88)
  {
    result = swift_getWitnessTable(&unk_100699F74, &type metadata for ProductRatingsCompactDetailsLayout);
    atomic_store(result, (unint64_t *)&qword_1007F5C88);
  }
  return result;
}

uint64_t sub_10005733C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = UITraitCollection.isSizeClassRegular.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100057368(void *a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v5;
  void *v6;

  v6 = a1;
  v3 = a1;
  swift_getAtKeyPath(&v5, &v6, a2);

  return v5;
}

uint64_t sub_1000573B0(void *a1)
{
  uint64_t v1;

  return sub_100057368(a1, v1) & 1;
}

uint64_t sub_1000573CC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsRegularLayout.Metrics(a2, a1);
  return a2;
}

unint64_t sub_100057408()
{
  unint64_t result;

  result = qword_1007F5C90;
  if (!qword_1007F5C90)
  {
    result = swift_getWitnessTable(&unk_100693F4C, &type metadata for ProductRatingsRegularLayout);
    atomic_store(result, (unint64_t *)&qword_1007F5C90);
  }
  return result;
}

_QWORD *sub_10005744C(_QWORD *a1)
{
  destroy for ProductRatingsRegularLayout(a1);
  return a1;
}

uint64_t destroy for ProductRatingsLayout(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 7);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 12);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 20);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 28);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 33);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 38);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 43);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 48);
}

uint64_t initializeWithCopy for ProductRatingsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 96, a2 + 96);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v7 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 160, a2 + 160);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v8 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 248) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 224, a2 + 224);
  v9 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 288) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 264, a2 + 264);
  v10 = *(_QWORD *)(a2 + 328);
  v11 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v10;
  *(_QWORD *)(a1 + 336) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 304, a2 + 304);
  v12 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 368) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 344, a2 + 344);
  v13 = *(_QWORD *)(a2 + 408);
  v14 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v13;
  *(_QWORD *)(a1 + 416) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 384, a2 + 384);
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  return a1;
}

uint64_t assignWithCopy for ProductRatingsLayout(uint64_t a1, uint64_t a2)
{
  sub_10001216C((_QWORD *)a1, (_QWORD *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_10001216C((_QWORD *)(a1 + 56), (_QWORD *)(a2 + 56));
  sub_10001216C((_QWORD *)(a1 + 96), (_QWORD *)(a2 + 96));
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_10001216C((_QWORD *)(a1 + 160), (_QWORD *)(a2 + 160));
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  sub_10001216C((_QWORD *)(a1 + 224), (_QWORD *)(a2 + 224));
  sub_10001216C((_QWORD *)(a1 + 264), (_QWORD *)(a2 + 264));
  sub_10001216C((_QWORD *)(a1 + 304), (_QWORD *)(a2 + 304));
  sub_10001216C((_QWORD *)(a1 + 344), (_QWORD *)(a2 + 344));
  sub_10001216C((_QWORD *)(a1 + 384), (_QWORD *)(a2 + 384));
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  return a1;
}

void *initializeWithTake for ProductRatingsLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1A9uLL);
}

uint64_t assignWithTake for ProductRatingsLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 96));
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 224));
  v7 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v7;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 264));
  v8 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v8;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 304));
  v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 344));
  v10 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v10;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 384));
  v11 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v11;
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 425))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 424) = 0;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 425) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 425) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsLayout()
{
  return &type metadata for ProductRatingsLayout;
}

uint64_t destroy for ProductRatingsLayout.Metrics(_QWORD *a1)
{
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 7);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 12);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(a1 + 20);
}

uint64_t initializeWithCopy for ProductRatingsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 96, a2 + 96);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v7 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 160, a2 + 160);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

_QWORD *assignWithCopy for ProductRatingsLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_10001216C(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_10001216C(a1 + 7, a2 + 7);
  sub_10001216C(a1 + 12, a2 + 12);
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  sub_10001216C(a1 + 20, a2 + 20);
  a1[25] = a2[25];
  a1[26] = a2[26];
  a1[27] = a2[27];
  return a1;
}

__n128 initializeWithTake for ProductRatingsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for ProductRatingsLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 96));
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 224))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsLayout.Metrics()
{
  return &type metadata for ProductRatingsLayout.Metrics;
}

uint64_t sub_100057CAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000457F4(v1, a1);
}

double sub_100057CB8(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v12;

  v6 = type metadata accessor for Adaptive(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057028((uint64_t)v9);
  v10 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, &protocol witness table for Adaptive, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_100057D90(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = type metadata accessor for Adaptive(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057028((uint64_t)v7);
  dispatch thunk of Placeable.place(at:with:)(a1, v4, &protocol witness table for Adaptive, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100057E58(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100057F38();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_100057E9C()
{
  unint64_t result;

  result = qword_100812560;
  if (!qword_100812560)
  {
    result = swift_getWitnessTable(&unk_1006713B0, &type metadata for ProductRatingsLayout);
    atomic_store(result, (unint64_t *)&qword_100812560);
  }
  return result;
}

unint64_t sub_100057EE4()
{
  unint64_t result;

  result = qword_1007F5C98;
  if (!qword_1007F5C98)
  {
    result = swift_getWitnessTable(&unk_100671310, &type metadata for ProductRatingsLayout);
    atomic_store(result, (unint64_t *)&qword_1007F5C98);
  }
  return result;
}

uint64_t sub_100057F28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006AEBD4, 1);
}

unint64_t sub_100057F38()
{
  unint64_t result;

  result = qword_1007F5CA0;
  if (!qword_1007F5CA0)
  {
    result = swift_getWitnessTable(&unk_100671368, &type metadata for ProductRatingsLayout);
    atomic_store(result, (unint64_t *)&qword_1007F5CA0);
  }
  return result;
}

void *sub_100057F7C()
{
  return &protocol witness table for Adaptive;
}

double sub_100057F88(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1000A59A0(*a1, a8, a2, a3);
}

uint64_t sub_100057F94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000581B0(*a1, a2, a3);
}

uint64_t sub_100057F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v12;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1060 != -1)
    swift_once(&qword_1007F1060, sub_1000A4570);
  v8 = type metadata accessor for StaticDimension(0);
  v9 = sub_1000117A8(v8, (uint64_t)qword_100851180);
  static Dimensions.defaultRoundingRule.getter(v9);
  v10 = AnyDimension.value(in:rounded:)(a3, v7, v8, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(_QWORD *)&v10;
}

uint64_t sub_100058090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v13;

  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F1058 != -1)
    swift_once(&qword_1007F1058, sub_1000A4560);
  v9 = type metadata accessor for StaticDimension(0);
  v10 = sub_1000117A8(v9, (uint64_t)qword_100851168);
  static Dimensions.defaultRoundingRule.getter(v10);
  v11 = AnyDimension.value(in:rounded:)(a4, v8, v9, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return *(_QWORD *)&v11;
}

uint64_t sub_100058184()
{
  return sub_10000E99C((unint64_t *)&unk_1007F5CB0, (uint64_t (*)(uint64_t))&type metadata accessor for TitledButtonStack, (uint64_t)&protocol conformance descriptor for TitledButtonStack);
}

uint64_t sub_1000581B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  _BYTE v27[24];

  v4 = v3;
  v26 = type metadata accessor for IndexSet(0);
  __chkstk_darwin(v26);
  v25[0] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v25 - v9;
  v11 = sub_10000DF3C(&qword_1007F5D08);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4AC0();
  v25[1] = a1;
  result = TitledButtonStack.buttons.getter();
  v15 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v16 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v16 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v16)
    {
LABEL_12:
      v19 = swift_bridgeObjectRelease(v15);
      v20 = TitledButtonStack.regularLineBreaks.getter(v19);
      v21 = v25[0];
      TitledButtonStack.compactLineBreaks.getter(v20);
      v22 = sub_10000DF3C(&qword_1007F5D10);
      Conditional<>.init(regularValue:compactValue:)(v10, v21, v22, v26);
      v23 = sub_10000DF3C(&qword_1007F5D18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
      v24 = (uint64_t)&v3[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_lineBreaks];
      swift_beginAccess(&v4[OBJC_IVAR____TtC22SubscribePageExtension35TitledButtonStackCollectionViewCell_lineBreaks], v27, 33, 0);
      sub_1000583E4((uint64_t)v13, v24);
      swift_endAccess(v27);
      return (uint64_t)objc_msgSend(v4, "setNeedsLayout");
    }
  }
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
      }
      else
      {
        v18 = *(_QWORD *)(v15 + 8 * i + 32);
        swift_retain(v18);
      }
      sub_1000A4C48(v18, a3);
      swift_release(v18);
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000583E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F5D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

int64x2_t sub_10005842C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404F000000000000uLL);
  xmmword_1007F5D20 = (__int128)result;
  return result;
}

int64x2_t sub_100058444()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4045000000000000uLL);
  xmmword_1007F5D30 = (__int128)result;
  return result;
}

void sub_10005845C()
{
  qword_1007F5D40 = 0x4032000000000000;
}

int64x2_t sub_10005846C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_1007F5D48 = (__int128)result;
  return result;
}

void sub_100058484()
{
  qword_1007F5D58 = 0x402A000000000000;
}

__n128 sub_100058494()
{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  xmmword_1007F5D60 = (__int128)result;
  return result;
}

void sub_1000584A8()
{
  qword_1007F5D70 = 0x4010000000000000;
}

char *sub_1000584B8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  objc_class *ObjCClassFromMetadata;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double left;
  double bottom;
  double right;
  char *v21;
  objc_super v23;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1;
  v10 = type metadata accessor for ArtworkView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v10);
  v12 = objc_allocWithZone(ObjCClassFromMetadata);
  v13 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v12, "init");
  v14 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v15 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v16 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount] = 0;

  v23.receiver = v13;
  v23.super_class = (Class)type metadata accessor for CollectionLockupArtwork();
  v17 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v21 = (char *)v17;
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1]);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2]);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3]);
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4]);

  return v21;
}

id sub_1000586B0(id result)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL8 v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount];
  if ((id)v3 != result)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2];
    v5 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3];
    v6 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4];
    v7 = v3 < 1;
    v8 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1];
    v9 = v4;
    v10 = v5;
    v11 = v6;
    objc_msgSend(v8, "setHidden:", v7);
    objc_msgSend(v9, "setHidden:", *(_QWORD *)&v1[v2] < 2);
    objc_msgSend(v10, "setHidden:", *(_QWORD *)&v1[v2] < 3);
    objc_msgSend(v11, "setHidden:", *(_QWORD *)&v1[v2] < 4);

    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_100058984@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount);
  if (v3 == 3)
    return sub_100058D18(a1);
  if (v3 == 2)
    return sub_100058AD4(a1);
  if (v3 != 1)
    return sub_100059004(a1);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1);
  v4 = qword_1007F0EB0;
  v5 = v11;
  if (v4 != -1)
    swift_once(&qword_1007F0EB0, sub_10005842C);
  v6 = xmmword_1007F5D20;
  v7 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v12, v7, &protocol witness table for UIView, *(double *)&v6, *((double *)&v6 + 1));

  v8 = v13;
  v9 = v14;
  sub_100011064(v12, v13);
  Measurable.placeable.getter(a1, v8, *(_QWORD *)(v9 + 8));
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v12);
}

uint64_t sub_100058AD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DisjointStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v21 - v9;
  DisjointStack.init(with:)(0, 0);
  v21[0] = *(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1);
  v11 = qword_1007F0EB8;
  v12 = v21[0];
  if (v11 != -1)
    swift_once(&qword_1007F0EB8, sub_100058444);
  v13 = xmmword_1007F5D30;
  v14 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v22, v14, &protocol witness table for UIView, *(double *)&v13, *((double *)&v13 + 1));

  v15 = v23;
  v16 = v24;
  sub_100011064(v22, v23);
  Measurable.placeable.getter(v21, v15, *(_QWORD *)(v16 + 8));
  DisjointStack.inserting(_:at:with:)(v21, 0, 1, sub_100058D14, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v22);
  v21[0] = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2);
  LayoutView.withMeasurements(representing:)(v22, v14, &protocol witness table for UIView, *(double *)&xmmword_1007F5D30, *((double *)&xmmword_1007F5D30 + 1));
  v18 = v23;
  v19 = v24;
  sub_100011064(v22, v23);
  Measurable.placeable.getter(v21, v18, *(_QWORD *)(v19 + 8));
  a1[3] = v4;
  a1[4] = &protocol witness table for DisjointStack;
  sub_1000117C0(a1);
  DisjointStack.inserting(_:at:with:)(v21, 0, 1, sub_100059974, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v21);
  v17(v10, v4);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v22);
}

uint64_t sub_100058D18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for DisjointStack(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v24 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v24 - v12;
  if (qword_1007F0EC8 != -1)
    swift_once(&qword_1007F0EC8, sub_10005846C);
  v14 = xmmword_1007F5D48;
  DisjointStack.init(with:)(0, 0);
  v24[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1);
  v15 = type metadata accessor for ArtworkView(0);
  LayoutView.withMeasurements(representing:)(v25, v15, &protocol witness table for UIView, *(double *)&v14, *((double *)&v14 + 1));
  v16 = v26;
  v17 = v27;
  sub_100011064(v25, v26);
  Measurable.placeable.getter(v24, v16, *(_QWORD *)(v17 + 8));
  DisjointStack.inserting(_:at:with:)(v24, 0, 1, sub_100058D14, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  v24[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2);
  LayoutView.withMeasurements(representing:)(v25, v15, &protocol witness table for UIView, *(double *)&v14, *((double *)&v14 + 1));
  v19 = v26;
  v20 = v27;
  sub_100011064(v25, v26);
  Measurable.placeable.getter(v24, v19, *(_QWORD *)(v20 + 8));
  DisjointStack.inserting(_:at:with:)(v24, 0, 1, sub_100059990, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  v18(v10, v4);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  v24[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3);
  LayoutView.withMeasurements(representing:)(v25, v15, &protocol witness table for UIView, *(double *)&v14, *((double *)&v14 + 1));
  v21 = v26;
  v22 = v27;
  sub_100011064(v25, v26);
  Measurable.placeable.getter(v24, v21, *(_QWORD *)(v22 + 8));
  a1[3] = v4;
  a1[4] = &protocol witness table for DisjointStack;
  sub_1000117C0(a1);
  DisjointStack.inserting(_:at:with:)(v24, 0, 1, sub_100059AB0, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  v18(v13, v4);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
}

uint64_t sub_100059004@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD v43[5];
  _QWORD v44[3];
  uint64_t v45;
  _QWORD *v46;
  _QWORD v47[3];
  uint64_t v48;
  _QWORD *v49;

  v2 = v1;
  v42 = a1;
  v3 = type metadata accessor for HorizontalStack(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  v41 = type metadata accessor for VerticalStack(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v40 = (char *)&v37 - v14;
  if (qword_1007F0ED8 != -1)
    swift_once(&qword_1007F0ED8, sub_100058494);
  v15 = xmmword_1007F5D60;
  VerticalStack.init(with:)(0, 0, v13);
  HorizontalStack.init(with:)(0, 0);
  v44[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1);
  v16 = type metadata accessor for ArtworkView(0);
  v38 = v1;
  LayoutView.withMeasurements(representing:)(v47, v16, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v17 = v48;
  v18 = v49;
  sub_100011064(v47, v48);
  Measurable.placeable.getter(v44, v17, v18[1]);
  HorizontalStack.adding(_:with:)(v44, sub_100059BBC, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v6, v3);
  v20 = v19;
  v37 = v19;
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
  v47[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2);
  LayoutView.withMeasurements(representing:)(v44, v16, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v21 = v45;
  v22 = v46;
  sub_100011064(v44, v45);
  Measurable.placeable.getter(v43, v21, v22[1]);
  v48 = v3;
  v49 = &protocol witness table for HorizontalStack;
  sub_1000117C0(v47);
  HorizontalStack.adding(_:with:)(v43, 0, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
  v20(v9, v3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  v23 = v40;
  VerticalStack.adding(_:with:)(v47, sub_100059BC8, 0);
  v39 = *(_QWORD *)(v39 + 8);
  v24 = v41;
  ((void (*)(char *, uint64_t))v39)(v11, v41);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
  HorizontalStack.init(with:)(0, 0);
  v25 = v38;
  v44[0] = *(_QWORD *)(v38 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3);
  LayoutView.withMeasurements(representing:)(v47, v16, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v26 = v48;
  v27 = v49;
  sub_100011064(v47, v48);
  Measurable.placeable.getter(v44, v26, v27[1]);
  HorizontalStack.adding(_:with:)(v44, sub_100059BBC, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  v28 = v6;
  v29 = v37;
  v37(v28, v3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
  v44[0] = *(_QWORD *)(v25 + OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4);
  LayoutView.withMeasurements(representing:)(v47, v16, &protocol witness table for UIView, *(double *)&v15, *((double *)&v15 + 1));
  v30 = v48;
  v31 = v49;
  sub_100011064(v47, v48);
  Measurable.placeable.getter(v43, v30, v31[1]);
  v45 = v3;
  v46 = &protocol witness table for HorizontalStack;
  sub_1000117C0(v44);
  HorizontalStack.adding(_:with:)(v43, 0, 0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v43);
  v29(v9, v3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v47);
  v48 = v24;
  v49 = &protocol witness table for VerticalStack;
  sub_1000117C0(v47);
  VerticalStack.adding(_:with:)(v44, 0, 0);
  ((void (*)(char *, uint64_t))v39)(v23, v24);
  v32 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v44);
  v33 = static Center.Axis.neither.getter(v32);
  v34 = type metadata accessor for Center(0);
  v35 = v42;
  v42[3] = v34;
  v35[4] = &protocol witness table for Center;
  sub_1000117C0(v35);
  return Center.init(_:filling:)(v47, v33);
}

double sub_1000594B0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id *v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  id *v32;
  id *v33;
  id *v34;
  id *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v38 = a2;
  v4 = type metadata accessor for Artwork.Style(0, a2);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, "setNeedsLayout", v9);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v30 = a1;
    else
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
    {
LABEL_3:
      if (v12 < 1)
      {
        __break(1u);
        JUMPOUT(0x1000597F0);
      }
      v13 = 0;
      v34 = (id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4];
      v33 = (id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3];
      v32 = (id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2];
      v35 = (id *)&v2[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1];
      v39 = a1 & 0xC000000000000001;
      while (v39)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        if (v13 <= 3)
          goto LABEL_11;
LABEL_6:
        ++v13;
        swift_release(v16);
        if (v12 == v13)
          goto LABEL_24;
      }
      v16 = *(_QWORD *)(a1 + 8 * v13 + 32);
      swift_retain(v16);
LABEL_11:
      v17 = v35;
      switch(v13)
      {
        case 0uLL:
          goto LABEL_15;
        case 1uLL:
          v17 = v32;
          goto LABEL_15;
        case 2uLL:
          v17 = v33;
          goto LABEL_15;
        case 3uLL:
          v17 = v34;
LABEL_15:
          v18 = *v17;
          v20 = Artwork.crop.getter(v19);
          v21 = Artwork.Crop.preferredContentMode.getter(v20);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
          if (qword_1007F0EB0 != -1)
            swift_once(&qword_1007F0EB0, sub_10005842C);
          v22 = Artwork.config(_:mode:prefersLayeredImage:)(v21, 0, *(double *)&xmmword_1007F5D20, *((double *)&xmmword_1007F5D20 + 1));
          Artwork.style.getter(v22);
          v23 = ArtworkView.style.setter(v7);
          *(_QWORD *)&v24 = Artwork.contentMode.getter(v23).n128_u64[0];
          v26 = ArtworkLoaderConfig.size.getter(objc_msgSend(v18, "setContentMode:", v25, v24));
          v28 = ArtworkView.imageSize.setter(v26, v27);
          v29 = Artwork.backgroundColor.getter(v28);
          if (!v29)
          {
            sub_1000117FC();
            v29 = static UIColor.placeholderBackground.getter();
          }
          ArtworkView.backgroundColor.setter(v29);
          objc_msgSend(v18, "setContentMode:", v21);
          v14 = type metadata accessor for ArtworkView(0);
          v15 = sub_100059C5C();
          ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v22, 2, 1, v18, v14, v15);
          swift_release(v16);

          v16 = v22;
          break;
        default:
          goto LABEL_6;
      }
      goto LABEL_6;
    }
  }
LABEL_24:
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

id sub_100059800()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionLockupArtwork();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CollectionLockupArtwork()
{
  return objc_opt_self(_TtC22SubscribePageExtension23CollectionLockupArtwork);
}

double sub_1000598A8(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_100058984(v10);
  v6 = v11;
  v7 = v12;
  sub_100011064(v10, v11);
  v8 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v6, v7, a2, a3);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  return v8;
}

id sub_10005994C()
{
  return sub_100059C4C();
}

uint64_t sub_100059974(uint64_t a1)
{
  return sub_1000599AC(a1, &qword_1007F0EC0, &qword_1007F5D40, (uint64_t)sub_10005845C);
}

uint64_t sub_100059990(uint64_t a1)
{
  return sub_1000599AC(a1, &qword_1007F0ED0, &qword_1007F5D58, (uint64_t)sub_100058484);
}

uint64_t sub_1000599AC(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;

  v7 = type metadata accessor for DisjointStack.EdgePosition(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*a2 != -1)
    swift_once(a2, a4);
  v11 = *a3;
  v10[3] = &type metadata for CGFloat;
  v10[4] = &protocol witness table for CGFloat;
  *v10 = v11;
  v12 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, enum case for DisjointStack.EdgePosition.anchored(_:), v7);
  DisjointStack.Properties.topEdge.setter(v10);
  v10[3] = &type metadata for CGFloat;
  v10[4] = &protocol witness table for CGFloat;
  *v10 = v11;
  v13(v10, v12, v7);
  return DisjointStack.Properties.leadingEdge.setter(v10);
}

uint64_t sub_100059AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t);
  uint64_t v8;

  v0 = type metadata accessor for DisjointStack.EdgePosition(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F0ED0 != -1)
    swift_once(&qword_1007F0ED0, sub_100058484);
  v4 = *(double *)&qword_1007F5D58 + *(double *)&qword_1007F5D58;
  *((_QWORD *)v3 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v3 + 4) = &protocol witness table for CGFloat;
  *(double *)v3 = v4;
  v5 = enum case for DisjointStack.EdgePosition.anchored(_:);
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v6(v3, enum case for DisjointStack.EdgePosition.anchored(_:), v0);
  DisjointStack.Properties.topEdge.setter(v3);
  *((_QWORD *)v3 + 3) = &type metadata for CGFloat;
  *((_QWORD *)v3 + 4) = &protocol witness table for CGFloat;
  *(double *)v3 = v4;
  v6(v3, v5, v0);
  return DisjointStack.Properties.leadingEdge.setter(v3);
}

uint64_t sub_100059BBC(uint64_t a1)
{
  return sub_100059BD4(a1, (uint64_t (*)(_QWORD *))&HorizontalStack.Properties.trailingSpacing.setter);
}

uint64_t sub_100059BC8(uint64_t a1)
{
  return sub_100059BD4(a1, (uint64_t (*)(_QWORD *))&VerticalStack.Properties.bottomSpacing.setter);
}

uint64_t sub_100059BD4(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  _QWORD v4[5];

  if (qword_1007F0EE0 != -1)
    swift_once(&qword_1007F0EE0, sub_1000584A8);
  v4[3] = &type metadata for CGFloat;
  v4[4] = &protocol witness table for CGFloat;
  v4[0] = qword_1007F5D70;
  return a2(v4);
}

id sub_100059C4C()
{
  void *v0;

  return objc_msgSend(v0, "setFrame:");
}

unint64_t sub_100059C5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F5DD0;
  if (!qword_1007F5DD0)
  {
    v1 = type metadata accessor for ArtworkView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkView, v1);
    atomic_store(result, (unint64_t *)&qword_1007F5DD0);
  }
  return result;
}

void sub_100059CA4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjCClassFromMetadata;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon1;
  v2 = type metadata accessor for ArtworkView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v2);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon2;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v5 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon3;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v6 = OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_icon4;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension23CollectionLockupArtwork_iconCount] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CollectionLockupArtwork.swift", 52, 2, 56, 0);
  __break(1u);
}

uint64_t type metadata accessor for DynamicTypeLinkedLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F5E00;
  if (!qword_1007F5E00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicTypeLinkedLabel);
  return result;
}

uint64_t sub_100059DD0(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + qword_100850EA0);
}

id sub_100059E34(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  return objc_msgSendSuper2(&v2, "textColor");
}

void sub_100059E7C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v6 = a3;
  v5 = a1;
  sub_10005B530((uint64_t)a3);

}

id sub_100059EC4(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  return objc_msgSendSuper2(&v2, "textAlignment");
}

void sub_100059F04(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v5;
  id v6;
  id v7;
  objc_super v8;
  objc_super v9;

  v5 = (objc_class *)type metadata accessor for DynamicTypeLinkedLabel(0);
  v9.receiver = a1;
  v9.super_class = v5;
  v6 = a1;
  v7 = objc_msgSendSuper2(&v9, "textAlignment");
  v8.receiver = v6;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "setTextAlignment:", a3);
  if (objc_msgSend(v6, "textAlignment") != v7)
    sub_10005A6F8();

}

id sub_100059FA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double left;
  double bottom;
  double right;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v26 = a3;
  v6 = a4 & 1;
  v7 = type metadata accessor for DirectionalTextAlignment(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[qword_1007F5DE0] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[qword_1007F5DE8] = 0;
  *(_QWORD *)&v4[qword_1007F5DF0] = 0;
  v14 = qword_1007F5DF8;
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v15 = v4;
  *(_QWORD *)&v4[v14] = static UIColor.primaryText.getter();

  v16 = type metadata accessor for FontUseCase(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DirectionalTextAlignment.none(_:), v7);
  v18 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v13, v25, v26, v6, 0, v10, 0, 0);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v22 = v18;
  objc_msgSend(v22, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v22, "setUserInteractionEnabled:", 1);
  v23 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v22, "labelTapped:");
  objc_msgSend(v22, "addGestureRecognizer:", v23);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v22;
}

void sub_10005A1F8(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "tintColorDidChange");
  sub_10005A6F8();

}

uint64_t sub_10005A250(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)dispatch thunk of DynamicTypeLabel.traitCollectionForFontUseCases.getter(v3);
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  dispatch thunk of DynamicTypeLabel.fontUseCaseContentSizeCategory.setter(v7);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, a1, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v5);
  return sub_10005A6F8();
}

void sub_10005A32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v8;
  uint64_t v9;
  double v10;
  UIAccessibilityTraits *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  UIAccessibilityTraits v34;
  UIAccessibilityTraits v35;
  UIAccessibilityTraits v36;
  id v37;
  __int128 v38;
  _BYTE v39[24];
  char v40[24];

  v4 = v3;
  v8 = &v4[qword_1007F5DE0];
  swift_beginAccess(&v4[qword_1007F5DE0], v40, 1, 0);
  v9 = *(_QWORD *)v8;
  *(_QWORD *)v8 = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v9).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
    v11 = &UIAccessibilityTraitLink;
  else
    v11 = &UIAccessibilityTraitStaticText;
  objc_msgSend(v4, "setAccessibilityTraits:", *v11, v10);
  v12 = *(_QWORD *)&v4[qword_1007F5DE8];
  *(_QWORD *)&v4[qword_1007F5DE8] = a1;
  swift_retain(a1);
  swift_release(v12);
  v13 = *(_QWORD *)&v4[qword_1007F5DF0];
  *(_QWORD *)&v4[qword_1007F5DF0] = a2;
  swift_retain(a2);
  v14 = swift_release(v13);
  dispatch thunk of StyledText.plainText.getter(v14);
  v16 = v15;
  v17 = objc_allocWithZone((Class)NSString);
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "initWithString:", v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain(a3);
    v35 = UIAccessibilityTraitStaticText;
    v36 = UIAccessibilityTraitLink;
    v21 = v20 - 1;
    v22 = (_OWORD *)(a3 + 48);
    v37 = v19;
    while (1)
    {
      v23 = *((_QWORD *)v22 - 1);
      v38 = *v22;
      swift_bridgeObjectRetain(v23);
      swift_retain(v38);
      swift_retain(*((_QWORD *)&v38 + 1));
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v19, "rangeOfString:options:", v24, 4, swift_bridgeObjectRelease(v23).n128_f64[0]);
      v27 = v26;

      if (v25 == (id)NSNotFound.getter())
      {
        swift_release(*((_QWORD *)&v38 + 1));
        swift_release(v38);
        if (!v21)
          goto LABEL_17;
      }
      else
      {
        swift_beginAccess(v8, v39, 33, 0);
        v28 = *(_QWORD **)v8;
        swift_retain(v38);
        swift_retain(*((_QWORD *)&v38 + 1));
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
        *(_QWORD *)v8 = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v28 = sub_100200CAC(0, v28[2] + 1, 1, v28);
          *(_QWORD *)v8 = v28;
        }
        v31 = v28[2];
        v30 = v28[3];
        if (v31 >= v30 >> 1)
        {
          v28 = sub_100200CAC((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
          *(_QWORD *)v8 = v28;
        }
        v28[2] = v31 + 1;
        v32 = &v28[4 * v31];
        v32[4] = v25;
        v32[5] = v27;
        *((_OWORD *)v32 + 3) = v38;
        v33 = *(_QWORD *)v8;
        swift_endAccess(v39);
        if (*(_QWORD *)(v33 + 16))
          v34 = v36;
        else
          v34 = v35;
        objc_msgSend(v4, "setAccessibilityTraits:", v34);
        swift_release(*((_QWORD *)&v38 + 1));
        swift_release(v38);
        v19 = v37;
        if (!v21)
        {
LABEL_17:
          swift_bridgeObjectRelease(a3);
          break;
        }
      }
      --v21;
      v22 += 2;
    }
  }
  sub_10005A6F8();

}

id sub_10005A648()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  UIAccessibilityTraits *v4;
  char v6[24];

  objc_msgSend(v0, "setAttributedText:", 0);
  v1 = *(_QWORD *)&v0[qword_1007F5DE8];
  *(_QWORD *)&v0[qword_1007F5DE8] = 0;
  swift_release(v1);
  v2 = &v0[qword_1007F5DE0];
  swift_beginAccess(&v0[qword_1007F5DE0], v6, 1, 0);
  v3 = *(_QWORD *)v2;
  *(_QWORD *)v2 = &_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    v4 = &UIAccessibilityTraitLink;
  else
    v4 = &UIAccessibilityTraitStaticText;
  return objc_msgSend(v0, "setAccessibilityTraits:", *v4);
}

uint64_t sub_10005A6F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char v23[24];

  v1 = v0;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for FontUseCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  dispatch thunk of DynamicTypeLabel.fontUseCase.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_100011088((uint64_t)v4, (uint64_t *)&unk_1007F4D60);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  v11 = (void *)dispatch thunk of DynamicTypeLabel.traitCollectionForFontUseCases.getter();
  v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v9, v11);

  v13 = *(_QWORD *)&v0[qword_1007F5DE8];
  v14 = *(void **)&v1[qword_1007F5DF8];
  swift_retain(*(_QWORD *)&v1[qword_1007F5DE8]);
  v15 = v14;
  v22 = objc_msgSend(v1, "textAlignment");
  v16 = objc_msgSend(v1, "lineBreakMode");
  v17 = (uint64_t *)&v1[qword_1007F5DE0];
  swift_beginAccess(&v1[qword_1007F5DE0], v23, 0, 0);
  v18 = *v17;
  swift_bridgeObjectRetain(v18);
  v19 = objc_msgSend(v1, "tintColor");
  v20 = sub_10005B2E8(v13, (uint64_t)v12, (uint64_t)v15, (uint64_t)v22, (uint64_t)v16, v18, v19);
  swift_release(v13);

  swift_bridgeObjectRelease(v18);
  v21 = sub_10005A950(v20, v12);
  objc_msgSend(v1, "setAttributedText:", v21);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_10005A950(void *a1, void *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  id v23;

  v3 = a1;
  if (!a1)
    goto LABEL_6;
  v4 = *(_QWORD *)(v2 + qword_1007F5DF0);
  if (!v4)
    goto LABEL_6;
  v6 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v7 = v3;
  swift_retain(v4);
  v8 = objc_msgSend(v6, "configurationWithFont:", a2);
  v9 = (void *)static SystemImage.load(artwork:with:includePrivateImages:)(v4, v8, 1);

  if (!v9)
  {
    swift_release(v4);

LABEL_6:
    v23 = v3;
    return v3;
  }
  objc_msgSend(v9, "size");
  v11 = v10;
  v13 = v12;
  objc_msgSend(a2, "capHeight");
  v15 = floor((v14 - v13) * 0.5);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v17 = objc_msgSend(v9, "imageWithTintColor:", v16);

  v18 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v17);
  objc_msgSend(v18, "setBounds:", 2.0, v15, v11, v13);
  v3 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v7);

  v19 = objc_allocWithZone((Class)NSAttributedString);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "initWithString:", v20);

  objc_msgSend(v3, "appendAttributedString:", v21);
  v22 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v18);
  objc_msgSend(v3, "appendAttributedString:", v22);

  swift_release(v4);
  return v3;
}

void sub_10005ABB8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  char v34[24];

  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)sub_10005AE28(a1);
  if ((v8 & 1) == 0)
  {
    v9 = v7;
    v10 = &v1[qword_1007F5DE0];
    swift_beginAccess(&v1[qword_1007F5DE0], v34, 0, 0);
    v11 = *(_QWORD **)v10;
    v12 = *(_QWORD *)(*(_QWORD *)v10 + 16);
    if (v12)
    {
      v30 = v6;
      v31 = v4;
      v32 = v3;
      v13 = v11[4];
      v14 = (char *)v11[5];
      v15 = v11[6];
      v16 = v11[7];
      swift_bridgeObjectRetain(v11);
      swift_retain(v15);
      swift_retain(v16);
      if ((unint64_t)v9 < v13 || &v9[-v13] >= v14)
      {
        swift_release(v15);
        swift_release(v16);
        if (v12 == 1)
        {
LABEL_17:
          swift_bridgeObjectRelease(v11);
        }
        else
        {
          v18 = v11 + 11;
          v19 = 1;
          while (v19 < v11[2])
          {
            v15 = *(v18 - 1);
            v16 = *v18;
            v20 = *(v18 - 3);
            v21 = (char *)*(v18 - 2);
            swift_retain(v15);
            swift_retain(v16);
            if ((unint64_t)v9 >= v20 && &v9[-v20] < v21)
              goto LABEL_18;
            swift_release(v15);
            swift_release(v16);
            ++v19;
            v18 += 4;
            if (v12 == v19)
              goto LABEL_17;
          }
          __break(1u);
        }
      }
      else
      {
LABEL_18:
        swift_bridgeObjectRelease(v11);
        v23 = UIResponder.nearestActionRunner.getter();
        if (v23)
        {
          v24 = v23;
          v33[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
          v33[0] = v1;
          v26 = v30;
          v25 = v31;
          v27 = v32;
          (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v30, enum case for ActionRunner.Origin.userInitiated(_:), v32);
          v28 = v1;
          dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v15, v33, v26, v16);
          swift_release(v16);
          swift_release(v15);
          v29 = swift_release(v24);
          (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v26, v27, v29);
          sub_100011088((uint64_t)v33, &qword_1007F6E90);
        }
        else
        {
          swift_release(v16);
          swift_release(v15);
        }
      }
    }
  }
}

void sub_10005ADD4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10005ABB8(v4);

}

id sub_10005AE28(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;

  v2 = v1;
  v4 = objc_msgSend(v1, "attributedText");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(a1, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "bounds");
    v9 = v8;
    v11 = v10;
    v12 = objc_msgSend(objc_allocWithZone((Class)NSTextStorage), "initWithAttributedString:", v5);
    v13 = objc_msgSend(objc_allocWithZone((Class)NSTextContainer), "initWithSize:", v9, 1.79769313e308);
    v14 = objc_msgSend(objc_allocWithZone((Class)NSLayoutManager), "init");
    objc_msgSend(v14, "addTextContainer:", v13);
    objc_msgSend(v12, "addLayoutManager:", v14);
    objc_msgSend(v13, "setLineFragmentPadding:", 0.0);
    objc_msgSend(v13, "setLineBreakMode:", objc_msgSend(v2, "lineBreakMode"));
    objc_msgSend(v13, "setMaximumNumberOfLines:", objc_msgSend(v2, "numberOfLines"));
    objc_msgSend(a1, "locationInView:", v7);
    v16 = v15;
    v18 = v17;
    objc_msgSend(v14, "usedRectForTextContainer:", v13);
    v23 = objc_msgSend(v14, "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:", v13, 0, v16 - ((v9 - v19) * 0.5 - v20), v18 - ((v11 - v21) * 0.5 - v22));

    v5 = v14;
  }
  else
  {
    v23 = 0;
  }

  return v23;
}

BOOL sub_10005B054()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  _QWORD v16[4];
  char v17[24];

  v1 = type metadata accessor for ActionRunner.Origin(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[qword_1007F5DE0];
  swift_beginAccess(&v0[qword_1007F5DE0], v17, 0, 0);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 48);
    v9 = *(_QWORD *)(v6 + 56);
    swift_retain(v8);
    swift_retain(v9);
    v10 = UIResponder.nearestActionRunner.getter();
    if (v10)
    {
      v11 = v10;
      v16[3] = type metadata accessor for DynamicTypeLinkedLabel(0);
      v16[0] = v0;
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ActionRunner.Origin.userInitiated(_:), v1);
      v12 = v0;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v8, v16, v4, v9);
      swift_release(v9);
      swift_release(v8);
      v13 = swift_release(v11);
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v13);
      sub_100011088((uint64_t)v16, &qword_1007F6E90);
    }
    else
    {
      swift_release(v9);
      swift_release(v8);
    }
  }
  return v7 != 0;
}

BOOL sub_10005B1AC(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_10005B054();

  return v2;
}

void sub_10005B1DC()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.DynamicTypeLinkedLabel", 45, "init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)", 119, 0);
  __break(1u);
}

void sub_10005B208()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1007F5DE0));
  swift_release(*(_QWORD *)(v0 + qword_1007F5DE8));
  swift_release(*(_QWORD *)(v0 + qword_1007F5DF0));

}

id sub_10005B254()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10005B288(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1007F5DE0));
  swift_release(*(_QWORD *)(a1 + qword_1007F5DE8));
  swift_release(*(_QWORD *)(a1 + qword_1007F5DF0));

}

uint64_t sub_10005B2E0()
{
  return type metadata accessor for DynamicTypeLinkedLabel(0);
}

id sub_10005B2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  if (!a1)
    return 0;
  v12 = a1;
  swift_retain(a1);
  v13 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(a2);
  v14 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v13);
  v15 = objc_msgSend(v14, "length");
  objc_msgSend(v14, "addAttribute:value:range:");
  v16 = *(_QWORD *)(a6 + 16);
  if (v16)
  {
    v29 = v15;
    v30 = a5;
    v31 = v13;
    v32 = v12;
    swift_bridgeObjectRetain(a6);
    v28 = a6;
    v17 = (uint64_t *)(a6 + 56);
    do
    {
      v22 = *(v17 - 3);
      v21 = *(v17 - 2);
      v24 = *(v17 - 1);
      v23 = *v17;
      if (a7)
      {
        swift_retain(*(v17 - 1));
        swift_retain(v23);
        v19 = a7;
      }
      else
      {
        v18 = (void *)objc_opt_self(UIColor);
        swift_retain(v24);
        swift_retain(v23);
        v19 = objc_msgSend(v18, "systemBlueColor");
      }
      v20 = a7;
      objc_msgSend(v14, "addAttribute:value:range:", NSForegroundColorAttributeName, v19, v22, v21);
      swift_release(v23);
      swift_release(v24);

      v17 += 4;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease(v28);
    v13 = v31;
    v12 = v32;
    a5 = v30;
    v15 = v29;
  }
  v25 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v25, "setAlignment:", a4);
  objc_msgSend(v25, "setLineBreakMode:", a5);
  v26 = v25;
  objc_msgSend(v14, "addAttribute:value:range:", NSParagraphStyleAttributeName, v26, 0, v15);
  swift_release(v12);

  return v14;
}

void sub_10005B530(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DynamicTypeLinkedLabel(0);
  objc_msgSendSuper2(&v8, "setTextColor:", a1);
  v4 = objc_msgSend(v2, "textColor");
  if (v4)
  {
    v5 = v4;
    v6 = *(void **)&v2[qword_1007F5DF8];
    *(_QWORD *)&v2[qword_1007F5DF8] = v4;
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v6);

    if ((v5 & 1) == 0)
      sub_10005A6F8();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10005B610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v25 = a1;
  v2 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - v6;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F6070);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v1;
  v17 = v1 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState, v26, 0, 0);
  v18 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1000194E4(v17, (uint64_t)v16, (uint64_t *)&unk_1007F6040);
  sub_1000194E4(v25, v18, (uint64_t *)&unk_1007F6040);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v19((uint64_t)v16, 1, v2) == 1)
  {
    if (v19(v18, 1, v2) == 1)
      return sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F6040);
  }
  else
  {
    sub_1000194E4((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1007F6040);
    if (v19(v18, 1, v2) != 1)
    {
      sub_10005EC14(v18, (uint64_t)v7);
      v21 = sub_10005DA10((uint64_t)v13, (uint64_t)v7);
      sub_10005EC58((uint64_t)v7);
      sub_10005EC58((uint64_t)v13);
      result = sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F6040);
      if ((v21 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_10005EC58((uint64_t)v13);
  }
  sub_100011088((uint64_t)v16, (uint64_t *)&unk_1007F6070);
LABEL_8:
  sub_1000194E4(v17, (uint64_t)v10, (uint64_t *)&unk_1007F6040);
  if (v19((uint64_t)v10, 1, v2) == 1)
    return sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F6040);
  v22 = v23;
  sub_10005EC14((uint64_t)v10, v23);
  sub_10005B908();
  return sub_10005EC58(v22);
}

uint64_t sub_10005B8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.rowsPerColumn.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10005B8E8()
{
  return Shelf.background.getter();
}

uint64_t sub_10005B908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  Class isa;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString *v20;
  Class v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  id v27;
  _OWORD v28[2];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v6 = IndexPath.section.getter(v5);
  IndexPath.init(item:section:)(0, v6, v7);
  v8 = v0 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_collectionView;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_collectionView);
  if (!Strong)
    goto LABEL_4;
  v10 = (void *)Strong;
  type metadata accessor for InteractiveSectionBackgroundView(0);
  static UICollectionReusableView.elementKind.getter();
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v10, "_visibleDecorationViewOfKind:atIndexPath:", v13, isa);

  if (!v15
    || (*(_QWORD *)&v28[0] = v15,
        v16 = sub_10005ECD8(),
        v17 = sub_10000DF3C((uint64_t *)&unk_1007FFFC0),
        (swift_dynamicCast(v30, v28, v16, v17, 6) & 1) == 0))
  {
LABEL_4:
    v31 = 0;
    memset(v30, 0, sizeof(v30));
  }
  sub_10005BB60((uint64_t)v30);
  v18 = swift_unknownObjectWeakLoadStrong(v8);
  if (!v18)
    goto LABEL_8;
  v19 = (void *)v18;
  v20 = UICollectionElementKindSectionHeader;
  v21 = IndexPath._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v19, "_visibleSupplementaryViewOfKind:atIndexPath:", v20, v21);

  if (!v22
    || (v27 = v22,
        v23 = sub_10005ECD8(),
        v24 = sub_10000DF3C((uint64_t *)&unk_1007FFFC0),
        (swift_dynamicCast(v28, &v27, v23, v24, 6) & 1) == 0))
  {
LABEL_8:
    v29 = 0;
    memset(v28, 0, sizeof(v28));
  }
  sub_10005BB60((uint64_t)v28);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100011088((uint64_t)v28, (uint64_t *)&unk_1007FFFB0);
  return sub_100011088((uint64_t)v30, (uint64_t *)&unk_1007FFFB0);
}

uint64_t sub_10005BB60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(__int128 *, uint64_t, uint64_t);
  uint64_t *v25;
  __int128 *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _BYTE v45[24];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;

  v3 = sub_10000DF3C((uint64_t *)&unk_1007F6070);
  __chkstk_darwin(v3);
  v44 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  __chkstk_darwin(v14);
  v16 = (__int128 *)((char *)&v39 - v15);
  v17 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v42 = (uint64_t)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v39 - v21;
  sub_1000194E4(a1, (uint64_t)&v46, (uint64_t *)&unk_1007FFFB0);
  if (!v47)
    return sub_100011088((uint64_t)&v46, (uint64_t *)&unk_1007FFFB0);
  v40 = v7;
  v41 = a1;
  v43 = v22;
  sub_100010F3C(&v46, (uint64_t)v49);
  v23 = v1 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState, v45, 0, 0);
  sub_1000194E4(v23, (uint64_t)v16, (uint64_t *)&unk_1007F6040);
  v24 = *(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v18 + 48);
  if (v24(v16, 1, v17) == 1)
  {
    v25 = (uint64_t *)&unk_1007F6040;
    v26 = v16;
LABEL_16:
    sub_100011088((uint64_t)v26, v25);
    return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
  }
  v39 = v1;
  v28 = (uint64_t)v43;
  sub_10005EC14((uint64_t)v16, (uint64_t)v43);
  v29 = v50;
  v30 = v51;
  sub_100011064(v49, v50);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  sub_10005EC94(v28, (uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  v31 = v44;
  v32 = v44 + *(int *)(v3 + 48);
  sub_1000194E4((uint64_t)v13, v44, (uint64_t *)&unk_1007F6040);
  sub_1000194E4((uint64_t)v10, v32, (uint64_t *)&unk_1007F6040);
  if (v24((__int128 *)v31, 1, v17) == 1)
  {
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F6040);
    sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F6040);
    if (v24((__int128 *)v32, 1, v17) == 1)
    {
      sub_100011088(v31, (uint64_t *)&unk_1007F6040);
      v33 = (uint64_t)v43;
LABEL_12:
      sub_10005EC58(v33);
      return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
    }
    goto LABEL_10;
  }
  v34 = (uint64_t)v40;
  sub_1000194E4(v31, (uint64_t)v40, (uint64_t *)&unk_1007F6040);
  if (v24((__int128 *)v32, 1, v17) == 1)
  {
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F6040);
    sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F6040);
    sub_10005EC58(v34);
LABEL_10:
    sub_100011088(v31, (uint64_t *)&unk_1007F6070);
    v33 = (uint64_t)v43;
    goto LABEL_13;
  }
  v35 = v42;
  sub_10005EC14(v32, v42);
  v36 = sub_10005DA10(v34, v35);
  sub_10005EC58(v35);
  sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F6040);
  sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F6040);
  sub_10005EC58(v34);
  sub_100011088(v31, (uint64_t *)&unk_1007F6040);
  v33 = (uint64_t)v43;
  if ((v36 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  sub_1000194E4(v41, (uint64_t)&v46, (uint64_t *)&unk_1007FFFB0);
  v37 = v47;
  if (!v47)
  {
    sub_10005EC58(v33);
    v25 = (uint64_t *)&unk_1007FFFB0;
    v26 = &v46;
    goto LABEL_16;
  }
  v38 = v48;
  sub_100011064(&v46, v47);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 16))(v33, *(_QWORD *)(v39 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_objectGraph), v37, v38);
  sub_10005EC58(v33);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v46);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
}

uint64_t sub_10005BFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_shelfLayoutContext;
  v2 = type metadata accessor for ShelfLayoutContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_collectionView);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_objectGraph));
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState, (uint64_t *)&unk_1007F6040);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10005C058()
{
  return type metadata accessor for InteractiveSectionBackgroundScrollObserver(0);
}

uint64_t type metadata accessor for InteractiveSectionBackgroundScrollObserver(uint64_t a1)
{
  return sub_10005C17C(a1, (uint64_t *)&unk_1007F5E88, (uint64_t)&nominal type descriptor for InteractiveSectionBackgroundScrollObserver);
}

void sub_10005C074(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v2 = type metadata accessor for ShelfLayoutContext(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_10005C114(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_10005C114(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F5E98)
  {
    v2 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F5E98);
  }
}

uint64_t type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(uint64_t a1)
{
  return sub_10005C17C(a1, qword_1007F5FF8, (uint64_t)&nominal type descriptor for InteractiveSectionBackgroundScrollObserver.State);
}

uint64_t sub_10005C17C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t *sub_10005C1B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for ShelfBackground(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
  }
  return a1;
}

uint64_t sub_10005C288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for ShelfBackground(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 28), v4);
}

uint64_t sub_10005C314(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for ShelfBackground(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_10005C3C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for ShelfBackground(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_10005C470(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for ShelfBackground(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_10005C51C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for ShelfBackground(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_10005C5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005C5D4);
}

uint64_t sub_10005C5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for ShelfBackground(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10005C648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005C654);
}

uint64_t sub_10005C654(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for ShelfBackground(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for IndexPath(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_10005C6D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  result = type metadata accessor for ShelfBackground(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v6[0] = v4;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    result = type metadata accessor for IndexPath(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(result - 8) + 64;
      v6[3] = v4;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t sub_10005C780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F6038;
  if (!qword_1007F6038)
  {
    v1 = type metadata accessor for InteractiveSectionBackgroundScrollObserver(255);
    result = swift_getWitnessTable(")+\v", v1);
    atomic_store(result, (unint64_t *)&qword_1007F6038);
  }
  return result;
}

uint64_t sub_10005C7C8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_10005D9E8(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10005C840(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_10005C840(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  Swift::Int v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  Swift::Int v36;
  Swift::Int v37;
  uint64_t *v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  void *v42;
  Swift::Int v43;
  Swift::Int v44;
  void *v45;
  id v46;
  id v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  Swift::Int v119;
  char *v120;
  Swift::Int v121;
  Swift::Int v122;
  Swift::Int v123;
  Swift::Int v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v129 = type metadata accessor for IndexPath(0);
  v127 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v128 = (char *)&v115 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v115 - v4;
  v6 = a1[1];
  v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_135;
    if (v6)
      sub_10005D144(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_143;
  v119 = v7;
  v116 = a1;
  if (v6 < 2)
  {
    v12 = (char *)_swiftEmptyArrayStorage;
    v131 = (uint64_t)_swiftEmptyArrayStorage;
    v125 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v16 = _swiftEmptyArrayStorage[2];
LABEL_101:
      v107 = v126;
      if (v16 >= 2)
      {
        v108 = *v116;
        do
        {
          v109 = v16 - 2;
          if (v16 < 2)
            goto LABEL_130;
          if (!v108)
            goto LABEL_142;
          v98 = v12;
          v110 = *(_QWORD *)&v12[16 * v109 + 32];
          v111 = *(_QWORD *)&v12[16 * v16 + 24];
          sub_10005D314((char *)(v108 + 8 * v110), (char *)(v108 + 8 * *(_QWORD *)&v12[16 * v16 + 16]), (char *)(v108 + 8 * v111), v125);
          if (v107)
            goto LABEL_98;
          if (v111 < v110)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native(v98) & 1) == 0)
            v98 = sub_10005D9D4((uint64_t)v98);
          if (v109 >= *((_QWORD *)v98 + 2))
            goto LABEL_132;
          v112 = &v98[16 * v109 + 32];
          *(_QWORD *)v112 = v110;
          *((_QWORD *)v112 + 1) = v111;
          v113 = *((_QWORD *)v98 + 2);
          if (v16 > v113)
            goto LABEL_133;
          memmove(&v98[16 * v16 + 16], &v98[16 * v16 + 32], 16 * (v113 - v16));
          v12 = v98;
          *((_QWORD *)v98 + 2) = v113 - 1;
          v16 = v113 - 1;
        }
        while (v113 > 2);
      }
      v106 = v12;
LABEL_113:
      swift_bridgeObjectRelease(v106);
      *(_QWORD *)((v131 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v114);
      swift_bridgeObjectRelease(v131);
      return;
    }
  }
  else
  {
    v9 = v8 >> 1;
    v10 = sub_10000DF3C(&qword_1007F48E8);
    v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(v9, v10);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v125 = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v131 = v11;
  }
  v13 = 0;
  v14 = *a1;
  v15 = *a1 + 16;
  v117 = *a1 - 8;
  v118 = v15;
  v12 = (char *)_swiftEmptyArrayStorage;
  v123 = v6;
  v130 = v14;
  while (1)
  {
    v17 = v13;
    v18 = v13 + 1;
    if (v13 + 1 < v6)
    {
      v120 = v12;
      v19 = *(void **)(v14 + 8 * v18);
      v20 = *(void **)(v14 + 8 * v13);
      swift_unknownObjectRetain(v19);
      v21 = objc_msgSend(v19, "indexPath", swift_unknownObjectRetain(v20).n128_f64[0]);
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v21);

      v22 = objc_msgSend(v20, "indexPath");
      v23 = v128;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v22);

      LODWORD(v124) = static IndexPath.< infix(_:_:)(v5, v23);
      v24 = *(void (**)(char *, uint64_t))(v127 + 8);
      v25 = v129;
      v24(v23, v129);
      v24(v5, v25);
      swift_unknownObjectRelease(v19);
      v6 = v123;
      swift_unknownObjectRelease(v20);
      v18 = v17 + 2;
      if (v17 + 2 < v6)
      {
        v26 = (_QWORD *)(v118 + 8 * v17);
        while (1)
        {
          v27 = v18;
          v29 = (void *)*(v26 - 1);
          v28 = (void *)*v26;
          swift_unknownObjectRetain(*v26);
          v30 = objc_msgSend(v28, "indexPath", swift_unknownObjectRetain(v29).n128_f64[0]);
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v30);

          v31 = objc_msgSend(v29, "indexPath");
          v32 = v128;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v31);

          LODWORD(v31) = static IndexPath.< infix(_:_:)(v5, v32);
          v33 = v32;
          v34 = v129;
          v24(v33, v129);
          v24(v5, v34);
          swift_unknownObjectRelease(v28);
          swift_unknownObjectRelease(v29);
          if (((v124 ^ v31) & 1) != 0)
            break;
          v18 = v27 + 1;
          ++v26;
          v6 = v123;
          if (v123 == v27 + 1)
          {
            v18 = v123;
            goto LABEL_22;
          }
        }
        v6 = v123;
        v18 = v27;
      }
LABEL_22:
      v12 = v120;
      v14 = v130;
      if ((v124 & 1) != 0)
      {
        if (v18 < v17)
          goto LABEL_136;
        if (v17 < v18)
        {
          v35 = (uint64_t *)(v117 + 8 * v18);
          v36 = v18;
          v37 = v17;
          v38 = (uint64_t *)(v130 + 8 * v17);
          do
          {
            if (v37 != --v36)
            {
              if (!v14)
                goto LABEL_141;
              v39 = *v38;
              *v38 = *v35;
              *v35 = v39;
            }
            ++v37;
            --v35;
            ++v38;
          }
          while (v37 < v36);
        }
      }
    }
    if (v18 < v6)
    {
      if (__OFSUB__(v18, v17))
        goto LABEL_134;
      if (v18 - v17 < v119)
        break;
    }
LABEL_49:
    if (v18 < v17)
      goto LABEL_129;
    v53 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) != 0)
      v12 = v53;
    else
      v12 = sub_10005D78C(0, *((_QWORD *)v53 + 2) + 1, 1, v53);
    v55 = *((_QWORD *)v12 + 2);
    v54 = *((_QWORD *)v12 + 3);
    v16 = v55 + 1;
    v14 = v130;
    if (v55 >= v54 >> 1)
    {
      v105 = sub_10005D78C((char *)(v54 > 1), v55 + 1, 1, v12);
      v14 = v130;
      v12 = v105;
    }
    *((_QWORD *)v12 + 2) = v16;
    v56 = &v12[16 * v55 + 32];
    *(_QWORD *)v56 = v17;
    *((_QWORD *)v56 + 1) = v18;
    v124 = v18;
    if (v55)
    {
      v57 = v12 + 32;
      while (1)
      {
        v58 = v16 - 1;
        if (v16 >= 4)
        {
          v63 = &v57[16 * v16];
          v64 = *((_QWORD *)v63 - 8);
          v65 = *((_QWORD *)v63 - 7);
          v69 = __OFSUB__(v65, v64);
          v66 = v65 - v64;
          if (v69)
            goto LABEL_118;
          v68 = *((_QWORD *)v63 - 6);
          v67 = *((_QWORD *)v63 - 5);
          v69 = __OFSUB__(v67, v68);
          v61 = v67 - v68;
          v62 = v69;
          if (v69)
            goto LABEL_119;
          v70 = v16 - 2;
          v71 = &v57[16 * v16 - 32];
          v73 = *(_QWORD *)v71;
          v72 = *((_QWORD *)v71 + 1);
          v69 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          if (v69)
            goto LABEL_121;
          v69 = __OFADD__(v61, v74);
          v75 = v61 + v74;
          if (v69)
            goto LABEL_124;
          if (v75 >= v66)
          {
            v93 = &v57[16 * v58];
            v95 = *(_QWORD *)v93;
            v94 = *((_QWORD *)v93 + 1);
            v69 = __OFSUB__(v94, v95);
            v96 = v94 - v95;
            if (v69)
              goto LABEL_128;
            v86 = v61 < v96;
            goto LABEL_87;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v87 = *((_QWORD *)v12 + 4);
            v88 = *((_QWORD *)v12 + 5);
            v69 = __OFSUB__(v88, v87);
            v80 = v88 - v87;
            v81 = v69;
            goto LABEL_81;
          }
          v60 = *((_QWORD *)v12 + 4);
          v59 = *((_QWORD *)v12 + 5);
          v69 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          v62 = v69;
        }
        if ((v62 & 1) != 0)
          goto LABEL_120;
        v70 = v16 - 2;
        v76 = &v57[16 * v16 - 32];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v79 = __OFSUB__(v77, v78);
        v80 = v77 - v78;
        v81 = v79;
        if (v79)
          goto LABEL_123;
        v82 = &v57[16 * v58];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v69 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v69)
          goto LABEL_126;
        if (__OFADD__(v80, v85))
          goto LABEL_127;
        if (v80 + v85 >= v61)
        {
          v86 = v61 < v85;
LABEL_87:
          if (v86)
            v58 = v70;
          goto LABEL_89;
        }
LABEL_81:
        if ((v81 & 1) != 0)
          goto LABEL_122;
        v89 = &v57[16 * v58];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v69 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v69)
          goto LABEL_125;
        if (v92 < v80)
          goto LABEL_14;
LABEL_89:
        v97 = v58 - 1;
        if (v58 - 1 >= v16)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v14)
          goto LABEL_140;
        v98 = v12;
        v99 = &v57[16 * v97];
        v100 = *(_QWORD *)v99;
        v101 = &v57[16 * v58];
        v102 = *((_QWORD *)v101 + 1);
        v103 = v126;
        sub_10005D314((char *)(v14 + 8 * *(_QWORD *)v99), (char *)(v14 + 8 * *(_QWORD *)v101), (char *)(v14 + 8 * v102), v125);
        v126 = v103;
        if (v103)
        {
LABEL_98:
          v106 = v98;
          goto LABEL_113;
        }
        if (v102 < v100)
          goto LABEL_115;
        if (v58 > *((_QWORD *)v98 + 2))
          goto LABEL_116;
        *(_QWORD *)v99 = v100;
        *(_QWORD *)&v57[16 * v97 + 8] = v102;
        v104 = *((_QWORD *)v98 + 2);
        if (v58 >= v104)
          goto LABEL_117;
        v16 = v104 - 1;
        memmove(&v57[16 * v58], v101 + 16, 16 * (v104 - 1 - v58));
        v12 = v98;
        *((_QWORD *)v98 + 2) = v104 - 1;
        v14 = v130;
        if (v104 <= 2)
          goto LABEL_14;
      }
    }
    v16 = 1;
LABEL_14:
    v6 = v123;
    v13 = v124;
    if (v124 >= v123)
      goto LABEL_101;
  }
  if (__OFADD__(v17, v119))
    goto LABEL_137;
  if (v17 + v119 >= v6)
    v40 = v6;
  else
    v40 = v17 + v119;
  if (v40 >= v17)
  {
    if (v18 != v40)
    {
      v120 = v12;
      v121 = v40;
      v41 = v117 + 8 * v18;
      v122 = v17;
      do
      {
        v42 = *(void **)(v14 + 8 * v18);
        v43 = v17;
        v124 = v41;
        while (1)
        {
          v44 = v18;
          v45 = *(void **)v41;
          swift_unknownObjectRetain(v42);
          v46 = objc_msgSend(v42, "indexPath", swift_unknownObjectRetain(v45).n128_f64[0]);
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v46);

          v47 = objc_msgSend(v45, "indexPath");
          v48 = v128;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v47);

          LOBYTE(v47) = static IndexPath.< infix(_:_:)(v5, v48);
          v49 = *(void (**)(char *, uint64_t))(v127 + 8);
          v50 = v48;
          v51 = v129;
          v49(v50, v129);
          v49(v5, v51);
          swift_unknownObjectRelease(v42);
          swift_unknownObjectRelease(v45);
          if ((v47 & 1) == 0)
            break;
          v14 = v130;
          if (!v130)
            goto LABEL_139;
          v18 = v44;
          v52 = *(void **)v41;
          v42 = *(void **)(v41 + 8);
          *(_QWORD *)v41 = v42;
          *(_QWORD *)(v41 + 8) = v52;
          v41 -= 8;
          if (v44 == ++v43)
            goto LABEL_42;
        }
        v14 = v130;
        v18 = v44;
LABEL_42:
        ++v18;
        v41 = v124 + 8;
        v17 = v122;
      }
      while (v18 != v121);
      v18 = v121;
      v12 = v120;
    }
    goto LABEL_49;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10005D144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  v29 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v25 - v11;
  v26 = a2;
  if (a3 != a2)
  {
    v32 = *a4;
    v13 = v32 + 8 * a3 - 8;
LABEL_5:
    v14 = *(void **)(v32 + 8 * a3);
    v15 = v27;
    v28 = v13;
    while (1)
    {
      v16 = *(void **)v13;
      swift_unknownObjectRetain(v14);
      swift_unknownObjectRetain(v16);
      v17 = objc_msgSend(v14, "indexPath");
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      v18 = objc_msgSend(v16, "indexPath");
      v19 = v29;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v18) = static IndexPath.< infix(_:_:)(v12, v19);
      v20 = a3;
      v21 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22 = v19;
      v23 = v31;
      v21(v22, v31);
      v21(v12, v23);
      a3 = v20;
      swift_unknownObjectRelease(v14);
      result = swift_unknownObjectRelease(v16);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        a3 = v20 + 1;
        v13 = v28 + 8;
        if (v20 + 1 == v26)
          return result;
        goto LABEL_5;
      }
      if (!v32)
        break;
      v24 = *(void **)v13;
      v14 = *(void **)(v13 + 8);
      *(_QWORD *)v13 = v14;
      *(_QWORD *)(v13 + 8) = v24;
      v13 -= 8;
      if (v20 == ++v15)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10005D314(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  id v36;
  char *v37;
  id v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t result;
  uint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  void **v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void **v56;
  char *v57;

  v8 = type metadata accessor for IndexPath(0);
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  __chkstk_darwin(v8);
  v52 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v50 = a3;
  v51 = (char *)&v45 - v11;
  v12 = a2 - a1;
  v13 = a2 - a1 + 7;
  if (a2 - a1 >= 0)
    v13 = a2 - a1;
  v14 = v13 >> 3;
  v15 = a3 - a2;
  v16 = v15 / 8;
  v57 = a1;
  v47 = a4;
  v56 = (void **)a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v28 = v47;
    if (v47 != a2 || &a2[8 * v16] <= v47)
      memmove(v47, a2, 8 * v16);
    v29 = (unint64_t)&v28[8 * v16];
    v55 = (_QWORD *)v29;
    v57 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v30 = v50 - 8;
    v31 = a2;
    v46 = a1;
    while (1)
    {
      v50 = a2;
      v48 = v29;
      v49 = (void **)(v30 + 8);
      v33 = (char *)(v29 - 8);
      v34 = *(void **)(v29 - 8);
      v35 = (void *)*((_QWORD *)v31 - 1);
      v31 -= 8;
      swift_unknownObjectRetain(v34);
      v36 = objc_msgSend(v34, "indexPath", swift_unknownObjectRetain(v35).n128_f64[0]);
      v37 = v51;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v36);

      v38 = objc_msgSend(v35, "indexPath");
      v39 = v52;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v38);

      LOBYTE(v38) = static IndexPath.< infix(_:_:)(v37, v39);
      v40 = *(void (**)(char *, uint64_t))(v53 + 8);
      v41 = v39;
      v42 = v54;
      v40(v41, v54);
      v40(v37, v42);
      swift_unknownObjectRelease(v34);
      swift_unknownObjectRelease(v35);
      if ((v38 & 1) != 0)
        break;
      v55 = v33;
      v31 = v50;
      if ((unint64_t)v49 < v48 || (unint64_t)v30 >= v48)
      {
        *(_QWORD *)v30 = *(_QWORD *)v33;
        v29 = (unint64_t)v33;
        goto LABEL_30;
      }
      v32 = (unint64_t)v46;
      v43 = v47;
      if (v49 != (void **)v48)
        *(_QWORD *)v30 = *(_QWORD *)v33;
      v29 = (unint64_t)v33;
      if (v33 <= v43)
        goto LABEL_42;
LABEL_31:
      v30 -= 8;
      a2 = v31;
      if ((unint64_t)v31 <= v32)
        goto LABEL_42;
    }
    v29 = v48;
    if (v49 != (void **)v50 || v30 >= v50)
      *(_QWORD *)v30 = *(_QWORD *)v31;
    v57 = v31;
LABEL_30:
    v32 = (unint64_t)v46;
    if (v29 <= (unint64_t)v47)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = (void **)v47;
    if (v47 != a1 || &a1[8 * v14] <= v47)
      memmove(v47, a1, 8 * v14);
    v49 = &v17[v14];
    v55 = v49;
    if (v12 >= 8 && a2 < v50)
    {
      v18 = v51;
      do
      {
        v19 = *(void **)a2;
        v20 = *v17;
        swift_unknownObjectRetain(*(_QWORD *)a2);
        v21 = objc_msgSend(v19, "indexPath", swift_unknownObjectRetain(v20).n128_f64[0]);
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v21);

        v22 = objc_msgSend(v20, "indexPath");
        v23 = v52;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v22);

        LOBYTE(v22) = static IndexPath.< infix(_:_:)(v18, v23);
        v24 = *(void (**)(char *, uint64_t))(v53 + 8);
        v25 = v23;
        v26 = v54;
        v24(v25, v54);
        v24(v18, v26);
        swift_unknownObjectRelease(v19);
        swift_unknownObjectRelease(v20);
        if ((v22 & 1) != 0)
        {
          v27 = a2 + 8;
          if (a1 < a2 || a1 >= v27 || a1 != a2)
            *(_QWORD *)a1 = *(_QWORD *)a2;
        }
        else
        {
          if (a1 != (char *)v17)
            *(_QWORD *)a1 = *v17;
          v56 = ++v17;
          v27 = a2;
        }
        a1 += 8;
        v57 = a1;
        if (v17 >= v49)
          break;
        a2 = v27;
      }
      while (v27 < v50);
    }
LABEL_42:
    sub_10005D884((void **)&v57, (const void **)&v56, &v55);
    return 1;
  }
LABEL_43:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_10005D78C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000DF3C((uint64_t *)&unk_1007F6080);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10005D884(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_10005D92C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_10005D9D4(uint64_t a1)
{
  return sub_10005D78C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10005D9E8(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10005D9FC(uint64_t a1)
{
  return sub_100022048(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10005DA10(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  char v23;
  double v24;
  double v25;
  char v26;
  __n128 v27;
  char v28;
  uint64_t v30;

  v4 = (int *)type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - v17;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v30 - v21;
  v23 = static ShelfBackground.== infix(_:_:)(a1, a2, v20);
  sub_10005EC94(a1, (uint64_t)v22);
  sub_10005EC94(a2, (uint64_t)v18);
  if ((v23 & 1) == 0)
  {
    sub_10005EC58((uint64_t)v18);
    sub_10005EC58((uint64_t)v22);
    sub_10005EC94(a1, (uint64_t)v15);
    sub_10005EC94(a2, (uint64_t)v12);
    goto LABEL_6;
  }
  v24 = *(double *)&v22[v4[5]];
  sub_10005EC58((uint64_t)v22);
  v25 = *(double *)&v18[v4[5]];
  sub_10005EC58((uint64_t)v18);
  sub_10005EC94(a1, (uint64_t)v15);
  sub_10005EC94(a2, (uint64_t)v12);
  if (v24 != v25)
  {
LABEL_6:
    sub_10005EC58((uint64_t)v12);
    sub_10005EC58((uint64_t)v15);
    sub_10005EC94(a1, (uint64_t)v9);
    sub_10005EC94(a2, (uint64_t)v6);
    goto LABEL_7;
  }
  v26 = static IndexPath.== infix(_:_:)(&v15[v4[6]], &v12[v4[6]]);
  sub_10005EC58((uint64_t)v12);
  sub_10005EC58((uint64_t)v15);
  sub_10005EC94(a1, (uint64_t)v9);
  sub_10005EC94(a2, (uint64_t)v6);
  if ((v26 & 1) == 0)
  {
LABEL_7:
    v28 = 0;
    goto LABEL_8;
  }
  v28 = static ShelfBackground.== infix(_:_:)(&v9[v4[7]], &v6[v4[7]], v27);
LABEL_8:
  sub_10005EC58((uint64_t)v6);
  sub_10005EC58((uint64_t)v9);
  return v28 & 1;
}

void sub_10005DC4C(int a1, id a2)
{
  id v2;
  Class isa;
  id v4;
  CGRect v5;
  CGRect v6;

  v2 = objc_msgSend(a2, "collectionViewLayout");
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v2, "layoutAttributesForItemAtIndexPath:", isa);

  if (v4)
  {
    objc_msgSend(v4, "frame");
    CGRectGetMinX(v5);
    objc_msgSend(v4, "frame");
    CGRectGetWidth(v6);

  }
}

void sub_10005DD30(char **a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double (*v38)(char *, uint64_t, uint64_t, __n128);
  __n128 v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  double (*v58)(uint64_t, _QWORD, uint64_t, __n128);
  uint64_t v59;
  __n128 v60;
  char v61;
  char **v62;
  uint64_t Strong;
  uint64_t v64;
  char **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  _QWORD *v71;
  __objc2_meth_list **p_base_meths;
  void *v73;
  double v74;
  double v75;
  double v76;
  id v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  id v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, _QWORD, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, _QWORD, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  char *v131;
  double v132;
  BOOL v133;
  uint64_t v134;
  double v135;
  uint64_t v136;
  char *v137;
  int *v138;
  void (*v139)(uint64_t, char *, uint64_t);
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, _QWORD, uint64_t);
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  char **v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  _BYTE v173[40];
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  CGRect v178;
  CGRect v179;

  v156 = a1;
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  __chkstk_darwin(v4);
  v152 = (uint64_t)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v151 = (char *)&v148 - v7;
  v8 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v8);
  v155 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for IndexPath(0);
  v169 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v154 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v157 = (char *)&v148 - v12;
  __chkstk_darwin(v13);
  v160 = (char *)&v148 - v14;
  __chkstk_darwin(v15);
  v166 = (char *)&v148 - v16;
  v167 = type metadata accessor for ShelfBackground(0);
  v165 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v149 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v150 = (char *)&v148 - v19;
  __chkstk_darwin(v20);
  v153 = (char *)&v148 - v21;
  __chkstk_darwin(v22);
  v163 = (uint64_t)&v148 - v23;
  __chkstk_darwin(v24);
  v162 = (char *)&v148 - v25;
  v26 = type metadata accessor for PageGrid(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for ShelfLayoutContext(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v161 = *(_QWORD *)(v168 - 8);
  v34 = __chkstk_darwin(v168);
  v36 = (char *)&v148 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = v2;
  v37 = v2 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_shelfLayoutContext;
  v38 = *(double (**)(char *, uint64_t, uint64_t, __n128))(v31 + 16);
  v39.n128_f64[0] = v38(v33, v2+ OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_shelfLayoutContext, v30, v34);
  ShelfLayoutContext.shelf.getter(v39);
  v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  v40(v33, v30);
  v41 = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v33, v37, v30);
  ShelfLayoutContext.contentPageGrid.getter(v41);
  v42 = ((uint64_t (*)(char *, uint64_t))v40)(v33, v30);
  PageGrid.horizontalDirectionalMargins.getter(v42);
  v44 = v43;
  v45 = *(void (**)(char *, uint64_t))(v27 + 8);
  v45(v29, v26);
  v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v33, v37, v30);
  ShelfLayoutContext.contentPageGrid.getter(v46);
  v47 = ((uint64_t (*)(char *, uint64_t))v40)(v33, v30);
  v48 = PageGrid.interColumnSpace.getter(v47);
  v49 = v167;
  v50 = v26;
  v51 = v168;
  v45(v29, v50);
  KeyPath = swift_getKeyPath(&unk_100671618);
  ReadOnlyLens.subscript.getter(KeyPath, v51);
  swift_release(KeyPath);
  v53 = v175;
  v54 = swift_getKeyPath(&unk_100671648);
  v55 = v162;
  v164 = v36;
  ReadOnlyLens.subscript.getter(v54, v51);
  v56 = swift_release(v54);
  v57 = v165;
  v58 = *(double (**)(uint64_t, _QWORD, uint64_t, __n128))(v165 + 104);
  v59 = v163;
  v60.n128_f64[0] = v58(v163, enum case for ShelfBackground.interactive(_:), v49, v56);
  v61 = static ShelfBackground.== infix(_:_:)(v55, v59, v60);
  v62 = *(char ***)(v57 + 8);
  ((void (*)(uint64_t, uint64_t))v62)(v59, v49);
  ((void (*)(char *, uint64_t))v62)(v55, v49);
  if ((v61 & 1) == 0
    || (Strong = swift_unknownObjectWeakLoadStrong(v158+ OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_collectionView)) == 0)
  {
    (*(void (**)(char *, uint64_t))(v161 + 8))(v164, v51);
    return;
  }
  v64 = Strong;
  v65 = v156;
  v148 = (void (*)(char *, _QWORD, uint64_t))v58;
  if (((unint64_t)v156 & 0x8000000000000000) != 0 || ((unint64_t)v156 & 0x4000000000000000) != 0)
    goto LABEL_63;
  v66 = (unint64_t)v156 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v156);
LABEL_6:
  v67 = v159;
  v175 = v66;
  sub_10005C7C8(&v175);
  v68 = (void *)v175;
  v156 = v62;
  v163 = v175;
  if (v175 < 0 || (v175 & 0x4000000000000000) != 0)
  {
    v147 = swift_bridgeObjectRetain(v175);
    v69 = _CocoaArrayWrapper.endIndex.getter(v147);
    swift_release(v68);
  }
  else
  {
    v69 = *(_QWORD *)(v175 + 16);
  }
  v162 = (char *)v64;
  if (v69)
  {
    if (v69 >= 1)
    {
      v68 = (void *)v69;
      v70 = 0;
      v64 = v163;
      v62 = (char **)(v163 & 0xC000000000000001);
      v71 = _swiftEmptyArrayStorage;
      v65 = &selRef_activityViewController_itemForActivityType_;
      p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
      while (1)
      {
        if (v62)
        {
          v73 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v64);
        }
        else
        {
          v73 = *(void **)(v64 + 8 * (_QWORD)v70 + 32);
          *(_QWORD *)&v74 = swift_unknownObjectRetain(v73).n128_u64[0];
        }
        if (!objc_msgSend(v73, "representedElementCategory", v74, v148))
        {
          objc_msgSend(v73, (SEL)p_base_meths[263]);
          v75 = CGRectGetMinX(v178) - v48 - a2;
          objc_msgSend(v73, (SEL)p_base_meths[263]);
          v76 = CGRectGetMaxX(v179) - a2;
          if (v75 > v76)
          {
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            v146 = swift_bridgeObjectRetain(v65);
            v66 = (uint64_t)sub_10052E9F0(v146);
            swift_bridgeObjectRelease(v65);
            goto LABEL_6;
          }
          if (v75 <= v44 && v44 < v76)
          {
            v78 = objc_msgSend(v73, "indexPath");
            v79 = v53;
            v80 = v67;
            v81 = v166;
            static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v78);

            v64 = ((uint64_t (*)(void))IndexPath.item.getter)();
            v82 = v81;
            v67 = v80;
            v53 = v79;
            (*(void (**)(char *, uint64_t))(v169 + 8))(v82, v67);
            if (!v79)
              goto LABEL_61;
            if (v64 == 0x8000000000000000 && v79 == -1)
              goto LABEL_62;
            if (v64 % v79)
            {
              v64 = v163;
              p_base_meths = &TodayCardChinLockupListView.base_meths;
            }
            else
            {
              v83 = objc_msgSend(v73, "indexPath");
              static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v83);

              p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
              if ((swift_isUniquelyReferenced_nonNull_native(v71) & 1) == 0)
                v71 = (_QWORD *)sub_100201490(0, v71[2] + 1, 1, (unint64_t)v71);
              v85 = v71[2];
              v84 = v71[3];
              if (v85 >= v84 >> 1)
                v71 = (_QWORD *)sub_100201490(v84 > 1, v85 + 1, 1, (unint64_t)v71);
              v71[2] = v85 + 1;
              v86 = (unint64_t)v71
                  + ((*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80))
                  + *(_QWORD *)(v169 + 72) * v85;
              v67 = v159;
              (*(void (**)(unint64_t, char *, uint64_t))(v169 + 32))(v86, v160, v159);
              v64 = v163;
            }
          }
        }
        v70 = (char *)v70 + 1;
        swift_unknownObjectRelease(v73);
        if (v68 == v70)
          goto LABEL_35;
      }
    }
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v71 = _swiftEmptyArrayStorage;
  v64 = v163;
LABEL_35:
  v87 = swift_release(v64);
  if (v71[2])
  {
    v88 = v169;
    v89 = (uint64_t)v155;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v169 + 16))(v155, (unint64_t)v71+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80)), v67, v87);
    v90 = 0;
    v91 = v167;
  }
  else
  {
    v90 = 1;
    v88 = v169;
    v91 = v167;
    v89 = (uint64_t)v155;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v89, v90, 1, v67);
  v92 = swift_bridgeObjectRelease(v71);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v88 + 48))(v89, 1, v67, v92) == 1)
  {
    (*(void (**)(char *, uint64_t))(v161 + 8))(v164, v168);

    sub_100011088(v89, &qword_1007F5520);
    return;
  }
  v93 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 32))(v157, v89, v67);
  v94 = IndexPath.item.getter(v93);
  v95 = v94 + v53;
  v96 = v168;
  if (__OFADD__(v94, v53))
    goto LABEL_66;
  v97 = IndexPath.section.getter(v94);
  IndexPath.init(item:section:)(v95, v97, v98);
  v99 = swift_getKeyPath(&unk_100671678);
  ReadOnlyLens.subscript.getter(v99, v96);
  swift_release(v99);
  v100 = *(_QWORD *)(v175 + 16);
  swift_bridgeObjectRelease(v175);
  v102 = IndexPath.item.getter(v101);
  v68 = &enum case for ShelfBackground.none(_:);
  v103 = v148;
  if (v102 < 0 || v102 >= v100)
    goto LABEL_48;
  v104 = swift_getKeyPath(&unk_100671678);
  ReadOnlyLens.subscript.getter(v104, v96);
  swift_release(v104);
  v105 = v174;
  v107 = IndexPath.item.getter(v106);
  if ((v107 & 0x8000000000000000) != 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v107 >= *(_QWORD *)(v105 + 16))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  sub_100011020(v105 + 40 * v107 + 32, (uint64_t)v173);
  swift_bridgeObjectRelease(v105);
  v108 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v109 = sub_10000DF3C(&qword_1007F6060);
  if ((swift_dynamicCast(&v170, v173, v108, v109, 6) & 1) == 0)
  {
    v172 = 0;
    v170 = 0u;
    v171 = 0u;
    sub_100011088((uint64_t)&v170, &qword_1007F6068);
LABEL_48:
    v103(v153, enum case for ShelfBackground.none(_:), v91);
    goto LABEL_49;
  }
  sub_100010F3C(&v170, (uint64_t)&v175);
  v110 = v103;
  v111 = v176;
  v112 = v177;
  sub_100011064(&v175, v176);
  v113 = v112;
  v103 = v110;
  v68 = &enum case for ShelfBackground.none(_:);
  dispatch thunk of ShelfBackgroundProviding.shelfBackground.getter(v111, v113);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v175);
LABEL_49:
  v114 = swift_getKeyPath(&unk_100671678);
  ReadOnlyLens.subscript.getter(v114, v96);
  swift_release(v114);
  v115 = *(_QWORD *)(v175 + 16);
  swift_bridgeObjectRelease(v175);
  v117 = IndexPath.item.getter(v116);
  if (v117 < 0 || v117 >= v115)
    goto LABEL_56;
  v118 = swift_getKeyPath(&unk_100671678);
  ReadOnlyLens.subscript.getter(v118, v96);
  swift_release(v118);
  v119 = v174;
  v121 = IndexPath.item.getter(v120);
  if ((v121 & 0x8000000000000000) != 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v121 >= *(_QWORD *)(v119 + 16))
  {
LABEL_70:
    __break(1u);
    swift_release(v68);
    __break(1u);
    return;
  }
  sub_100011020(v119 + 40 * v121 + 32, (uint64_t)v173);
  swift_bridgeObjectRelease(v119);
  v122 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
  v123 = sub_10000DF3C(&qword_1007F6060);
  if ((swift_dynamicCast(&v170, v173, v122, v123, 6) & 1) == 0)
  {
    v172 = 0;
    v170 = 0u;
    v171 = 0u;
    sub_100011088((uint64_t)&v170, &qword_1007F6068);
LABEL_56:
    v127 = enum case for ShelfBackground.none(_:);
    v128 = v150;
    v103(v150, enum case for ShelfBackground.none(_:), v91);
    goto LABEL_57;
  }
  sub_100010F3C(&v170, (uint64_t)&v175);
  v124 = v176;
  v125 = v177;
  sub_100011064(&v175, v176);
  v126 = v150;
  dispatch thunk of ShelfBackgroundProviding.shelfBackground.getter(v124, v125);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v175);
  v127 = enum case for ShelfBackground.none(_:);
  v128 = v126;
LABEL_57:
  v129 = v165;
  v130 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
  v131 = v149;
  v130(v149, v128, v91);
  LODWORD(v129) = (*(uint64_t (**)(char *, uint64_t))(v129 + 88))(v131, v91);
  ((void (*)(char *, uint64_t))v156)(v131, v91);
  v132 = 1.0;
  v133 = (_DWORD)v129 == v127;
  v134 = v158;
  if (!v133)
  {
    sub_10005DC4C((int)v157, v162);
    v132 = v135;
  }
  v136 = (uint64_t)v151;
  v137 = v153;
  v130(v151, v153, v91);
  v138 = (int *)type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  v139 = *(void (**)(uint64_t, char *, uint64_t))(v88 + 16);
  v140 = v157;
  v139(v136 + v138[6], v157, v67);
  v130((char *)(v136 + v138[7]), v128, v91);
  *(double *)(v136 + v138[5]) = v132;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v138 - 1) + 56))(v136, 0, 1, v138);
  v141 = v134 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState;
  swift_beginAccess(v134 + OBJC_IVAR____TtC22SubscribePageExtension42InteractiveSectionBackgroundScrollObserver_currentState, &v175, 0, 0);
  v142 = v128;
  v143 = v152;
  sub_1000194E4(v141, v152, (uint64_t *)&unk_1007F6040);
  swift_beginAccess(v141, v173, 33, 0);
  sub_10005EBCC(v136, v141);
  swift_endAccess(v173);
  sub_10005B610(v143);
  sub_100011088(v136, (uint64_t *)&unk_1007F6040);
  sub_100011088(v143, (uint64_t *)&unk_1007F6040);

  v144 = (void (*)(char *, uint64_t))v156;
  ((void (*)(char *, uint64_t))v156)(v142, v91);
  v144(v137, v91);
  v145 = *(void (**)(char *, uint64_t))(v169 + 8);
  v145(v154, v67);
  v145(v140, v67);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v164, v168);
}

uint64_t sub_10005EB80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.rowsPerColumn.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10005EBA8()
{
  return Shelf.background.getter();
}

uint64_t sub_10005EBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F6040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005EC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005EC58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005EC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractiveSectionBackgroundScrollObserver.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005ECD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F6090;
  if (!qword_1007F6090)
  {
    v1 = objc_opt_self(UICollectionReusableView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F6090);
  }
  return result;
}

uint64_t sub_10005ED14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  _QWORD v18[4];

  v4 = v3;
  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = GameCenterPlayer.action.getter(v8);
  if (v11)
  {
    v12 = v11;
    v13 = UIResponder.nearestActionRunner.getter();
    if (v13)
    {
      v14 = v13;
      v18[3] = type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0);
      v18[0] = v4;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      v15 = v4;
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v12, v18, v10, a3);
      swift_release(v12);
      v16 = swift_release(v14);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v16);
      sub_1000131E0((uint64_t)v18);
    }
    else
    {
      swift_release(v12);
    }
  }
  return 3;
}

double sub_10005EE28(uint64_t *a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_10005EE98(*a1, a2, a3, a5, a7, a8);
}

void sub_10005EE3C(_QWORD *a1, int a2, int a3, int a4, int a5, id a6)
{
  sub_10005F2A4(*a1, a2, a4, a5, a6);
}

uint64_t sub_10005EE50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10005ED14(*a1, a2, a3);
  return 3;
}

uint64_t sub_10005EE6C()
{
  return sub_10000E99C(&qword_1007F6098, (uint64_t (*)(uint64_t))&type metadata accessor for SmallGameCenterPlayer, (uint64_t)&protocol conformance descriptor for GameCenterPlayer);
}

double sub_10005EE98(uint64_t a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, void *a6)
{
  double v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(_QWORD *, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[5];
  _QWORD v69[5];
  _OWORD v70[11];

  v8 = a2.n128_f64[0];
  v10 = type metadata accessor for LabelPlaceholderCompatibility(0, a2);
  v54 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F0EF8 != -1)
    swift_once(&qword_1007F0EF8, sub_10006192C);
  v59 = v10;
  sub_10005F3C8(&xmmword_100850EC0, v70);
  v13 = v70[0];
  v14 = type metadata accessor for LayoutViewPlaceholder(0);
  v15 = *(unsigned int *)(v14 + 48);
  v16 = *(unsigned __int16 *)(v14 + 52);
  v57 = v14;
  swift_allocObject(v14, v15, v16);
  v58 = LayoutViewPlaceholder.init(representing:)(*(double *)&v13, *((double *)&v13 + 1));
  v17 = GameCenterPlayer.alias.getter();
  v19 = v18;
  v20 = sub_1000466E4();
  v53 = a1;
  v21 = v20;
  if (qword_1007F2508 != -1)
    swift_once(&qword_1007F2508, sub_10041585C);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_1000117A8(v22, (uint64_t)qword_100855400);
  ObjectType = swift_getObjectType();
  v24 = objc_msgSend(a6, "traitCollection");
  v55 = a6;
  v25 = v24;
  v26 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v23, v24);

  v27 = type metadata accessor for Feature(0);
  v52 = v21;
  v28 = v27;
  v61 = v27;
  v51 = sub_10000E99C((unint64_t *)&qword_1007F5400, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v62 = v51;
  v29 = sub_1000117C0(&v60);
  v30 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v31 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
  v31(v29, enum case for Feature.measurement_with_labelplaceholder(_:), v28);
  v32 = isFeatureEnabled(_:)(&v60);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v60);
  v33 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v17, v19, v26, 4, 0, 0, 1, 0, v32 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v69, v33);
  v34 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
  v35 = v59;
  v36 = v34(v12, v59);
  v37 = GameCenterPlayer.displayName.getter(v36);
  v53 = v38;
  v54 = v37;
  if (qword_1007F2510 != -1)
    swift_once(&qword_1007F2510, sub_100415874);
  v39 = sub_1000117A8(v22, (uint64_t)qword_100855418);
  v40 = (uint64_t)v55;
  v41 = objc_msgSend(v55, "traitCollection");
  v42 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v39, v41);

  v61 = v28;
  v62 = v51;
  v43 = sub_1000117C0(&v60);
  v31(v43, v30, v28);
  v44 = isFeatureEnabled(_:)(&v60);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v60);
  LOBYTE(v49) = v44 & 1;
  v45 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v54, v53, v42, 4, 0, 0, 1, 0, v49);
  LabelPlaceholderCompatibility.layoutTextView.getter(v68, v45);
  v34(v12, v35);
  sub_10005F3C8(v70, &v60);
  v46 = v58;
  v64 = v57;
  v65 = &protocol witness table for LayoutViewPlaceholder;
  v63 = v58;
  sub_100011020((uint64_t)v69, (uint64_t)&v67);
  sub_100011020((uint64_t)v68, (uint64_t)&v66);
  swift_retain(v46);
  v47 = sub_100187530(v40, (uint64_t)&v60, v8, a3);
  swift_release(v46);
  sub_10005F404(&v60);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v68);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v69);
  sub_10005F438(v70);
  return v47;
}

void sub_10005F2A4(int a1, int a2, int a3, int a4, id a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Bool v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  UIImage_optional v22;

  v6 = v5;
  objc_msgSend(a5, "pageMarginInsets");
  v7 = (_QWORD *)(v5 + OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_insets);
  *v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v11;
  v12 = objc_retain(*(id *)(v5
                          + OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView));
  v22.value.super.isa = 0;
  v22.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v22, v13);

  v14 = *(void **)(v6 + OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_displayName);
  GameCenterPlayer.displayName.getter();
  if (v15)
  {
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v14, "setText:", v17);

  v18 = *(void **)(v6 + OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_alias);
  GameCenterPlayer.alias.getter();
  if (v19)
  {
    v20 = v19;
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v18, "setText:", v21);

}

_OWORD *sub_10005F3C8(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for SmallGameCenterPlayerLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_10005F404(_QWORD *a1)
{
  destroy for SmallGameCenterPlayerLayout(a1);
  return a1;
}

_QWORD *sub_10005F438(_QWORD *a1)
{
  destroy for SmallGameCenterPlayerLayout.Metrics(a1);
  return a1;
}

uint64_t sub_10005F46C(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v31;

  v16 = type metadata accessor for PageGrid.Direction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AspectRatio(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = UITraitCollection.isSizeClassRegular.getter(v24);
  if ((v25 & 1) != 0)
  {
    AspectRatio.init(_:_:)(v25);
    v27 = AspectRatio.isPortrait.getter(v26);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    if ((v27 & 1) != 0)
    {
      if (qword_1007F0EE8 != -1)
        swift_once(&qword_1007F0EE8, sub_10005F690);
      v28 = qword_1007F60E8;
    }
    else
    {
      if (qword_1007F0EF0 != -1)
        swift_once(&qword_1007F0EF0, sub_10005FFD4);
      v28 = qword_1007F60F0;
    }
  }
  else
  {
    if (qword_1007F1130 != -1)
      swift_once(&qword_1007F1130, sub_1000BEC28);
    v28 = qword_1008517B8;
  }
  v29 = swift_bridgeObjectRetain(v28);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v19, a1, v16, v29);
  return PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6169726F74696465, 0xED0000647261436CLL, v19, a2 & 1, v28, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10005F690()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  void (*v35)(_QWORD);
  double left;
  double bottom;
  double right;
  __n128 v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v44;
  __int128 v45;
  __n128 v46;
  __n128 v47;
  __int128 v48;
  __n128 v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  __n128 v57;
  __int128 v58;
  __n128 v59;
  double v60;
  double v61;
  __n128 v62;
  __int128 v63;
  __n128 v64;
  uint64_t result;
  int64x2_t v66;
  double v67;
  double top;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = &v66.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v74 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v6 = (int64x2_t *)((char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = &v66.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v66.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v66.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v66.i8[-v17];
  v19 = sub_10000DF3C(&qword_1007F5878);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v70 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100671120;
  v69 = v24;
  v73 = v24 + v23;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v25 = xmmword_100856810;
  v75 = 0x3FF0000000000000;
  v76[0] = 0x3FF8000000000000;
  v26 = sub_100020838();
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v27);
  v75 = 0x4030000000000000;
  v76[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v28);
  v76[0] = 0x4030000000000000;
  v75 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v35 = *(void (**)(_QWORD))(v4 + 104);
  v72 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v71 = (void (*)(int64x2_t *, _QWORD, uint64_t))v35;
  v35(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v76[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for Bool, &protocol witness table for Bool);
  v76[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v40 = xmmword_100856820;
  v75 = 0x3FF0000000000000;
  v76[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v39);
  v75 = 0x4034000000000000;
  v76[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v41);
  v75 = 0x4034000000000000;
  v76[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v71(v6, v72, v74);
  LOBYTE(v76[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for Bool, &protocol witness table for Bool);
  v76[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v45 = xmmword_100856830;
  v75 = 0x4000000000000000;
  v76[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v44);
  v76[0] = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  v75 = 0x4034000000000000;
  v76[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v46);
  v66 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v66;
  v71(v6, v72, v74);
  LOBYTE(v76[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for Bool, &protocol witness table for Bool);
  v76[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  v67 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v45, *((double *)&v45 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v48 = xmmword_100856870;
  v75 = 0x4000000000000000;
  v76[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v47);
  v76[0] = 0x4034000000000000;
  v49 = PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  v75 = 0x4034000000000000;
  v76[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v49);
  *v6 = v66;
  v71(v6, v72, v74);
  v50 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  LOBYTE(v76[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for Bool, &protocol witness table for Bool);
  v76[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v48, *((double *)&v48 + 1), v50, v52, v54, v56);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v58 = xmmword_100856880;
  v75 = 0x4000000000000000;
  v76[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v57);
  v76[0] = 0x4038000000000000;
  v59 = PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  v75 = 0x4034000000000000;
  v76[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v59);
  v66 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v66;
  v71(v6, v72, v74);
  LOBYTE(v76[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for Bool, &protocol witness table for Bool);
  v76[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  v61 = v67;
  v60 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v58, *((double *)&v58 + 1), top, v67, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v63 = xmmword_100856890;
  v75 = 0x4000000000000000;
  v76[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v62);
  v76[0] = 0x4038000000000000;
  v64 = PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  v75 = 0x4034000000000000;
  v76[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v76, &v75, &type metadata for CGFloat, v26, v64);
  *v6 = v66;
  v71(v6, v72, v74);
  LOBYTE(v76[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for Bool, &protocol witness table for Bool);
  v76[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v76, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v63, *((double *)&v63 + 1), v60, v61, bottom, right);
  qword_1007F60E8 = v69;
  return result;
}

uint64_t sub_10005FFD4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  void (*v34)(_QWORD);
  double left;
  double bottom;
  double right;
  __int128 v38;
  __n128 v39;
  __n128 v40;
  __int128 v42;
  __n128 v43;
  __int128 v44;
  __n128 v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  __int128 v53;
  __n128 v54;
  double v55;
  double v56;
  __int128 v57;
  __n128 v58;
  uint64_t result;
  int64x2_t v60;
  double v61;
  double top;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = &v60.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v6 = (int64x2_t *)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = &v60.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v60.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v60.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v60.i8[-v17];
  v19 = sub_10000DF3C(&qword_1007F5878);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v64 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100671120;
  v63 = v24;
  v67 = v24 + v23;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v25 = xmmword_100856810;
  v70[0] = 0x4000000000000000;
  v26 = sub_100020838();
  v27 = PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v69 = 0x4030000000000000;
  v70[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v27);
  v70[0] = 0x4030000000000000;
  v69 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v28);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v34 = *(void (**)(_QWORD))(v4 + 104);
  v66 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v65 = (void (*)(int64x2_t *, _QWORD, uint64_t))v34;
  v34(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v70[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for Bool, &protocol witness table for Bool);
  v70[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v38 = xmmword_100856820;
  v70[0] = 0x4000000000000000;
  v39 = PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v69 = 0x4034000000000000;
  v70[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v39);
  v69 = 0x4034000000000000;
  v70[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v40);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v65(v6, v66, v68);
  LOBYTE(v70[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for Bool, &protocol witness table for Bool);
  v70[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v38, *((double *)&v38 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v42 = xmmword_100856830;
  v70[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v70[0] = 0x4034000000000000;
  v43 = PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v69 = 0x4034000000000000;
  v70[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v43);
  v60 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v60;
  v65(v6, v66, v68);
  LOBYTE(v70[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for Bool, &protocol witness table for Bool);
  v70[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v61 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v42, *((double *)&v42 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v44 = xmmword_100856870;
  v70[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v70[0] = 0x4034000000000000;
  v45 = PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v69 = 0x4034000000000000;
  v70[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v45);
  *v6 = v60;
  v65(v6, v66, v68);
  v46 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  LOBYTE(v70[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for Bool, &protocol witness table for Bool);
  v70[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v44, *((double *)&v44 + 1), v46, v48, v50, v52);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v53 = xmmword_100856880;
  v70[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v70[0] = 0x4038000000000000;
  v54 = PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v69 = 0x4034000000000000;
  v70[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v54);
  v60 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v60;
  v65(v6, v66, v68);
  LOBYTE(v70[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for Bool, &protocol witness table for Bool);
  v70[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v56 = v61;
  v55 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v53, *((double *)&v53 + 1), top, v61, bottom, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v57 = xmmword_100856890;
  v70[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v70[0] = 0x4038000000000000;
  v58 = PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  v69 = 0x4034000000000000;
  v70[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v70, &v69, &type metadata for CGFloat, v26, v58);
  *v6 = v60;
  v65(v6, v66, v68);
  LOBYTE(v70[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for Bool, &protocol witness table for Bool);
  v70[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v70, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v57, *((double *)&v57 + 1), v55, v56, bottom, right);
  qword_1007F60F0 = v63;
  return result;
}

double sub_1000608E8(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  type metadata accessor for InAppPurchaseShowcaseLockupView();
  sub_1001F4ED4(v16, a8, a2, a3);
  if (qword_1007F2F70 != -1)
    swift_once(&qword_1007F2F70, sub_10053AF78);
  if (qword_1007F2F78 != -1)
    swift_once(&qword_1007F2F78, sub_10053AF88);
  v17 = type metadata accessor for StaticDimension(0);
  v18 = sub_1000117A8(v17, (uint64_t)qword_1008169B8);
  static Dimensions.defaultRoundingRule.getter(v18);
  AnyDimension.value(in:rounded:)(a8, v15, v17, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return a2;
}

double sub_100060A50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100060A8C(*a1, a2, a3);
}

void sub_100060A58(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100060EA0(a2, a1, a5);
}

uint64_t sub_100060A60()
{
  return sub_10000E99C(&qword_1007F60F8, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseShowcase, (uint64_t)&protocol conformance descriptor for InAppPurchaseShowcase);
}

double sub_100060A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  __n128 v44;
  double result;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;

  v52 = a3;
  v4 = sub_10000DF3C((uint64_t *)&unk_100801690);
  __chkstk_darwin(v4);
  v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v48 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = InAppPurchaseShowcase.lockup.getter(v12);
  v53 = v3;
  v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension39InAppPurchaseShowcaseCollectionViewCell_lockupView];
  v17 = *(id *)(v16 + OBJC_IVAR____TtC22SubscribePageExtension31InAppPurchaseShowcaseLockupView_titleLabel);
  v18 = swift_retain(v15);
  Lockup.title.getter(v18);
  v20 = v19;
  v21 = swift_release(v15).n128_u64[0];
  if (v20)
  {
    v22 = String._bridgeToObjectiveC()();
    v21 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v17, "setText:", v22, *(double *)&v21);

  v23 = *(id *)(v16 + OBJC_IVAR____TtC22SubscribePageExtension31InAppPurchaseShowcaseLockupView_subtitleLabel);
  InAppPurchaseShowcase.subtitle.getter(v23);
  if (v24)
  {
    v26 = v24;
    v27 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v23, "setText:", v27, v25);

  v28 = objc_retain(*(id *)(v16
                          + OBJC_IVAR____TtC22SubscribePageExtension31InAppPurchaseShowcaseLockupView_descriptionLabel));
  InAppPurchaseShowcase.descriptionText.getter();
  if (v29)
  {
    v31 = v29;
    v32 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v31).n128_u64[0];
  }
  else
  {
    v32 = 0;
  }
  objc_msgSend(v28, "setText:", v32, v30);

  v33 = *(void **)(v16 + OBJC_IVAR____TtC22SubscribePageExtension31InAppPurchaseShowcaseLockupView_offerButton);
  swift_retain(v15);
  v34 = v33;
  v35 = Lockup.offerDisplayProperties.getter(v34);
  swift_release(v15);
  v36 = swift_retain(v15);
  v37 = Lockup.buttonAction.getter(v36);
  swift_release(v15);
  v38 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v14, 1, 1, v38);
  v39 = v47;
  v40 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v48, enum case for OfferButtonSubtitlePosition.below(_:), v6);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v42 = v49;
  v41(v49, 1, 1, v6);
  v43 = sub_10000E99C((unint64_t *)&qword_1007FDEC0, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)(v40, v42, v6, v43);
  sub_10013AB60(v35, v37, 0, (uint64_t)v14, (uint64_t)v10, v52, 0, 0);

  swift_release(v37);
  v44 = swift_release(v35);
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v10, v51, v44);
  sub_100060E60((uint64_t)v14);
  objc_msgSend(v53, "setNeedsLayout");
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_100060E60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100060EA0(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE v13[40];
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v4 = Shelf.items.getter(a1);
  if (qword_1007F16C0 != -1)
LABEL_14:
    swift_once(&qword_1007F16C0, sub_1001F3D38);
  v5 = *(double *)&qword_100852838;
  v6 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain(v4);
  v7 = 0;
  while (1)
  {
    if (v7 == v6)
    {
      v19 = 0;
      v7 = v6;
      memset(v18, 0, sizeof(v18));
    }
    else
    {
      if (v7 >= *(_QWORD *)(v4 + 16))
      {
        __break(1u);
        goto LABEL_14;
      }
      sub_100011020(v4 + 32 + 40 * v7++, (uint64_t)v18);
    }
    sub_10006103C((uint64_t)v18, (uint64_t)&v16);
    if (!v17)
      break;
    sub_100010F3C(&v16, (uint64_t)v15);
    sub_100011020((uint64_t)v15, (uint64_t)v13);
    v8 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v9 = type metadata accessor for InAppPurchaseShowcase(0);
    if ((swift_dynamicCast(&v14, v13, v8, v9, 6) & 1) != 0)
    {
      v10 = v14;
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v15);
      if (v10)
      {
        v12 = InAppPurchaseShowcase.lockup.getter(v11);
        sub_10059FBF8(v5, v5, v12, 0, a3, 0);
        swift_release(v10);
        swift_release(v12);
      }
    }
    else
    {
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v15);
    }
  }
  swift_bridgeObjectRelease_n(v4, 2);
}

uint64_t sub_10006103C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1008027C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100061084(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  void (*v34)(_QWORD);
  double left;
  double right;
  double bottom;
  __int128 v38;
  __int128 v40;
  __int128 v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  __int128 v49;
  double v50;
  double v51;
  double v52;
  __int128 v53;
  int64x2_t v55;
  double v56;
  double v57;
  double top;
  uint64_t v59;
  void (*v60)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65[2];

  v2 = sub_10000DF3C(&qword_1007F5870);
  v3 = __chkstk_darwin(v2);
  v5 = &v55.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v64 = type metadata accessor for PageGrid.HorizontalMargins(0, v3);
  v6 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v8 = (int64x2_t *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v9);
  v11 = &v55.i8[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v55.i8[-v13];
  __chkstk_darwin(v15);
  v17 = &v55.i8[-v16];
  __chkstk_darwin(v18);
  v20 = &v55.i8[-v19];
  v21 = sub_10000DF3C(&qword_1007F5878);
  v22 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v23 = *(_QWORD *)(v22 + 72);
  v24 = *(unsigned __int8 *)(v22 + 80);
  v25 = (v24 + 32) & ~v24;
  v63 = v23;
  v26 = swift_allocObject(v21, v25 + 6 * v23, v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100671120;
  v59 = v26;
  v62 = v26 + v25;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v27 = xmmword_100856810;
  v65[0] = (double)a1;
  v28 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 11.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 12.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  __asm { FMOV            V0.2D, #16.0 }
  *v8 = _Q0;
  v34 = *(void (**)(_QWORD))(v6 + 104);
  v61 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v60 = (void (*)(int64x2_t *, _QWORD, uint64_t))v34;
  v34(v8);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v27, *((double *)&v27 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v38 = xmmword_100856820;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  __asm { FMOV            V0.2D, #20.0 }
  *v8 = _Q0;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v38, *((double *)&v38 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2C88 != -1)
    swift_once(&qword_1007F2C88, sub_1004A20FC);
  v40 = xmmword_100856830;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v55 = vdupq_n_s64(0x4041000000000000uLL);
  *v8 = v55;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v57 = left;
  top = UIEdgeInsetsZero.top;
  v56 = bottom;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA8 != -1)
    swift_once(&qword_1007F2CA8, sub_1004A214C);
  v41 = xmmword_100856870;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  *v8 = v55;
  v60(v8, v61, v64);
  v42 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v41, *((double *)&v41 + 1), v42, v44, v46, v48);
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v49 = xmmword_100856880;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v55 = vdupq_n_s64(0x404A000000000000uLL);
  *v8 = v55;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v51 = v57;
  v50 = top;
  v52 = v56;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v49, *((double *)&v49 + 1), top, v57, v56, right);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v53 = xmmword_100856890;
  v65[0] = (double)a1;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  v65[0] = 10.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  *v8 = v55;
  v60(v8, v61, v64);
  LOBYTE(v65[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for Bool, &protocol witness table for Bool);
  v65[0] = 0.0;
  PageGrid.DirectionalValue.init(_:)(v65, &type metadata for CGFloat, v28);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v20, v5, v11, v17, v14, v8, *(double *)&v53, *((double *)&v53 + 1), v50, v51, v52, right);
  return v59;
}

uint64_t sub_10006192C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  _QWORD *v17;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(_QWORD *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD v24[5];
  __int128 v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  __int128 v31;
  uint64_t v32;
  void *v33;

  v1 = type metadata accessor for FontSource(0, a1);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F2508 != -1)
    swift_once(&qword_1007F2508, sub_10041585C);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_1000117A8(v5, (uint64_t)qword_100855400);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v23(v4, v6, v5);
  v7 = enum case for FontSource.useCase(_:);
  v22 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v22(v4, enum case for FontSource.useCase(_:), v1);
  v8 = type metadata accessor for StaticDimension(0);
  v32 = v8;
  v33 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v31);
  v29 = v1;
  v30 = &protocol witness table for FontSource;
  v9 = sub_1000117C0(&v28);
  v21 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v21(v9, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v28, 28.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  if (qword_1007F2510 != -1)
    swift_once(&qword_1007F2510, sub_100415874);
  v10 = sub_1000117A8(v5, (uint64_t)qword_100855418);
  v11 = v23;
  v23(v4, v10, v5);
  v12 = v22;
  v22(v4, v7, v1);
  v29 = v8;
  v30 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v28);
  v26 = v1;
  v27 = &protocol witness table for FontSource;
  v13 = sub_1000117C0(&v25);
  v14 = v8;
  v15 = v21;
  v21(v13, v4, v1);
  StaticDimension.init(_:scaledLike:)(&v25, 20.0);
  v16 = v20;
  v20(v4, v1);
  v11(v4, v10, v5);
  v12(v4, v7, v1);
  v26 = v14;
  v27 = &protocol witness table for StaticDimension;
  sub_1000117C0(&v25);
  v24[3] = v1;
  v24[4] = &protocol witness table for FontSource;
  v17 = sub_1000117C0(v24);
  v15(v17, v4, v1);
  StaticDimension.init(_:scaledLike:)(v24, 12.0);
  v16(v4, v1);
  xmmword_100850EC0 = (__int128)vdupq_n_s64(0x4044000000000000uLL);
  *(_OWORD *)algn_100850ED0 = xmmword_100671700;
  xmmword_100850EE0 = xmmword_100671710;
  sub_100010F3C(&v28, (uint64_t)&unk_100850F18);
  sub_100010F3C(&v31, (uint64_t)&unk_100850EF0);
  return sub_100010F3C(&v25, (uint64_t)&unk_100850F40);
}

char *sub_100061C34(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  objc_class *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  CGFloat *v42;
  double left;
  double bottom;
  double right;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __n128 v55;
  objc_class *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  char *v60;
  id v61;
  uint64_t v62;
  double v63;
  id v64;
  char *v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void (*v79)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  objc_super v91;
  _QWORD v92[6];

  v9 = type metadata accessor for CornerStyle(0);
  v89 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  v10 = __chkstk_darwin(v9);
  v88 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for Separator.Position(0, v10);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v84 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Separator(0);
  v86 = *(_QWORD *)(v13 - 8);
  v87 = v13;
  __chkstk_darwin(v13);
  v83 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v85 = (char *)&v79 - v16;
  v17 = type metadata accessor for DirectionalTextAlignment(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v21);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v4[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_itemLayoutContext];
  v25 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize;
  v27 = qword_1007F0EF8;
  v28 = v4;
  if (v27 != -1)
    swift_once(&qword_1007F0EF8, sub_10006192C);
  v29 = v17;
  *(_OWORD *)&v4[v26] = xmmword_100850EC0;
  v80 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_alias;
  if (qword_1007F2508 != -1)
    swift_once(&qword_1007F2508, sub_10041585C);
  v30 = type metadata accessor for FontUseCase(0);
  v31 = sub_1000117A8(v30, (uint64_t)qword_100855400);
  v32 = *(_QWORD *)(v30 - 8);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v33(v23, v31, v30);
  v79 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
  v79(v23, 0, 1, v30);
  v34 = enum case for DirectionalTextAlignment.none(_:);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  v35(v20, enum case for DirectionalTextAlignment.none(_:), v29);
  v36 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v37 = objc_allocWithZone(v36);
  v38 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v23, 1, 0, 1, 0, v20, 0, 0);
  *(_QWORD *)&v28[v80] = v38;
  v80 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_displayName;
  if (qword_1007F2510 != -1)
    swift_once(&qword_1007F2510, sub_100415874);
  v39 = sub_1000117A8(v30, (uint64_t)qword_100855418);
  v33(v23, v39, v30);
  v79(v23, 0, 1, v30);
  v35(v20, v34, v29);
  v40 = objc_allocWithZone(v36);
  v41 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v23, 1, 0, 1, 0, v20, 0, 0);
  *(_QWORD *)&v28[v80] = v41;
  v42 = (CGFloat *)&v28[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_insets];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v42 = UIEdgeInsetsZero.top;
  v42[1] = left;
  v42[2] = bottom;
  v42[3] = right;
  v46 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_separatorView;
  v47 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v84, enum case for Separator.Position.bottom(_:), v82);
  v92[3] = type metadata accessor for ZeroDimension(0);
  v92[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v92);
  static ZeroDimension.zero.getter();
  v48 = v83;
  v49 = Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v47, v92, 0.0, 0.0);
  v50 = v85;
  Separator.withLeadingInset(_:)(v49, *(double *)&xmmword_100850EC0 + *((double *)&xmmword_100850EE0 + 1));
  v52 = v86;
  v51 = v87;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v48, v87);
  v53 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v54 = &v53[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
  v55 = swift_beginAccess(&v53[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v92, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v52 + 40))(v54, v50, v51, v55);
  swift_endAccess(v92);
  *(_QWORD *)&v28[v46] = v53;
  *(_QWORD *)&v28[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v56 = (objc_class *)type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0);
  v91.receiver = v28;
  v91.super_class = v56;
  v57 = (char *)objc_msgSendSuper2(&v91, "initWithFrame:", a1, a2, a3, a4);
  v58 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView;
  v59 = *(void **)&v57[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v60 = v57;
  v61 = v59;
  v62 = static UIColor.placeholderBackground.getter();
  ArtworkView.backgroundColor.setter(v62);

  v63 = *(double *)&v60[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize]
      * 0.5;
  v64 = *(id *)&v57[v58];
  v65 = v88;
  dispatch thunk of RoundedCornerView.cornerStyle.getter();
  ArtworkView.setCorner(radius:style:)(v65, v63);

  (*(void (**)(char *, uint64_t))(v89 + 8))(v65, v90);
  v66 = objc_msgSend(v60, "contentView");
  objc_msgSend(v66, "addSubview:", *(_QWORD *)&v57[v58]);

  v67 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_alias;
  v68 = *(id *)&v60[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_alias];
  v69 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v68, "setTextColor:", v69);

  v70 = objc_msgSend(v60, "contentView");
  objc_msgSend(v70, "addSubview:", *(_QWORD *)&v60[v67]);

  v71 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_displayName;
  v72 = *(id *)&v60[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_displayName];
  v73 = (void *)static UIColor.secondaryText.getter(v72);
  objc_msgSend(v72, "setTextColor:", v73);

  v74 = objc_msgSend(v60, "contentView");
  objc_msgSend(v74, "addSubview:", *(_QWORD *)&v60[v71]);

  v75 = objc_msgSend(v60, "contentView");
  objc_msgSend(v75, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v76 = objc_msgSend(v60, "contentView");
  v77 = *(id *)&v60[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_separatorView];
  objc_msgSend(v76, "addSubview:", v77);

  return v60;
}

_QWORD *sub_100062410()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char *v20;
  __n128 v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  _OWORD v45[10];
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  char v55[24];
  objc_super v56;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Separator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0);
  v56.receiver = v1;
  v56.super_class = v10;
  objc_msgSendSuper2(&v56, "layoutSubviews");
  v11 = *(char **)&v1[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_separatorView];
  objc_msgSend(v1, "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = &v11[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
  v21 = swift_beginAccess(&v11[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v55, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v20, v6, v21);
  v22 = Separator.frame(forBoundingRect:in:)(v11, v13, v15, v17, v19);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v11, "setFrame:", v22, v24, v26, v28);
  v29 = objc_msgSend(v1, "contentView");
  v30 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v31 = LayoutMarginsAware<>.layoutFrame.getter(v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;

  if (qword_1007F0EF8 != -1)
    swift_once(&qword_1007F0EF8, sub_10006192C);
  sub_10005F3C8(&xmmword_100850EC0, v45);
  v38 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView];
  v47 = type metadata accessor for ArtworkView(0);
  v48 = &protocol witness table for UIView;
  v46 = v38;
  v39 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_alias];
  v53 = type metadata accessor for DynamicTypeLabel(0);
  v54 = &protocol witness table for UILabel;
  v40 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_displayName];
  v51 = &protocol witness table for UILabel;
  v52 = v39;
  v50 = v53;
  v49 = v40;
  v41 = v38;
  v42 = v39;
  v43 = v40;
  SmallGameCenterPlayerLayout.placeChildren(relativeTo:in:)((uint64_t)v1, (uint64_t)v5, v31, v33, v35, v37);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_10005F404(v45);
}

id sub_100062708()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000627A4()
{
  return type metadata accessor for SmallGameCenterPlayerCollectionViewCell(0);
}

uint64_t type metadata accessor for SmallGameCenterPlayerCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F6170;
  if (!qword_1007F6170)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallGameCenterPlayerCollectionViewCell);
  return result;
}

void sub_1000627E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_100019238(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100671768;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = &unk_100671780;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

id sub_10006287C()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_artworkView));
}

double sub_10006288C()
{
  uint64_t v0;

  return *(double *)(v0
                   + OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize);
}

void sub_1000628A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(byte_1006717C8, a3);
  sub_1001200D0(a1, a2, a3, WitnessTable);
}

void sub_1000628EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(byte_1006717C8, a3);
  sub_1001202F8(a1, a2, a3, WitnessTable);
}

unint64_t sub_100062938(uint64_t a1)
{
  unint64_t result;

  result = sub_10006295C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10006295C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F6180;
  if (!qword_1007F6180)
  {
    v1 = type metadata accessor for SmallGameCenterPlayerCollectionViewCell(255);
    result = swift_getWitnessTable(byte_100671798, v1);
    atomic_store(result, (unint64_t *)&qword_1007F6180);
  }
  return result;
}

void sub_1000629A4(__n128 a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[5];

  v2 = type metadata accessor for Separator.Position(0, a1);
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  __chkstk_darwin(v2);
  v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Separator(0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  __chkstk_darwin(v4);
  v48 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v50 = (char *)&v44 - v7;
  v53 = type metadata accessor for DirectionalTextAlignment(0);
  v8 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v1;
  v14 = &v1[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_itemLayoutContext];
  v15 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_preferredArtworkSize;
  if (qword_1007F0EF8 != -1)
    swift_once(&qword_1007F0EF8, sub_10006192C);
  *(_OWORD *)&v54[v16] = xmmword_100850EC0;
  v45 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_alias;
  if (qword_1007F2508 != -1)
    swift_once(&qword_1007F2508, sub_10041585C);
  v17 = type metadata accessor for FontUseCase(0);
  v18 = sub_1000117A8(v17, (uint64_t)qword_100855400);
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20(v13, v18, v17);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v21(v13, 0, 1, v17);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v23(v10, enum case for DirectionalTextAlignment.none(_:), v53);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  v26 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v13, 1, 0, 1, 0, v10, 0, 0);
  *(_QWORD *)&v54[v45] = v26;
  v27 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_displayName;
  if (qword_1007F2510 != -1)
    swift_once(&qword_1007F2510, sub_100415874);
  v28 = sub_1000117A8(v17, (uint64_t)qword_100855418);
  v20(v13, v28, v17);
  v21(v13, 0, 1, v17);
  v23(v10, v22, v53);
  v29 = objc_allocWithZone(v24);
  v30 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v13, 1, 0, 1, 0, v10, 0, 0);
  v31 = v54;
  *(_QWORD *)&v54[v27] = v30;
  v32 = &v31[OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_insets];
  v33 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v32 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v32 + 1) = v33;
  v34 = OBJC_IVAR____TtC22SubscribePageExtension39SmallGameCenterPlayerCollectionViewCell_separatorView;
  v35 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v49, enum case for Separator.Position.bottom(_:), v47);
  v55[3] = type metadata accessor for ZeroDimension(0);
  v55[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v55);
  static ZeroDimension.zero.getter();
  v36 = v48;
  v37 = Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v35, v55, 0.0, 0.0);
  v38 = v50;
  Separator.withLeadingInset(_:)(v37, *(double *)&xmmword_100850EC0 + *((double *)&xmmword_100850EE0 + 1));
  v40 = v51;
  v39 = v52;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
  v41 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v42 = &v41[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
  v43 = swift_beginAccess(&v41[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v55, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v40 + 40))(v42, v38, v39, v43);
  swift_endAccess(v55);
  *(_QWORD *)&v31[v34] = v41;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SmallGameCenterPlayerCollectionViewCell.swift", 68, 2, 74, 0);
  __break(1u);
}

uint64_t sub_100062E40()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  double left;
  double bottom;
  double right;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v6 = (int64x2_t *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v26 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)v26 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v26 - v17;
  v19 = type metadata accessor for PageGrid.Breakpoint(0);
  sub_100045464(v19, qword_100850FA0);
  v26[1] = sub_1000117A8(v19, (uint64_t)qword_100850FA0);
  if (qword_1007F2C90 != -1)
    swift_once(&qword_1007F2C90, sub_1004A2110);
  v20 = xmmword_100856840;
  v28 = 0x3FF0000000000000;
  v21 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(&v28, &type metadata for CGFloat, v21);
  v28 = 0x4041000000000000;
  PageGrid.DirectionalValue.init(_:)(&v28, &type metadata for CGFloat, v21);
  v28 = 0x4041000000000000;
  PageGrid.DirectionalValue.init(_:)(&v28, &type metadata for CGFloat, v21);
  *v6 = vdupq_n_s64(0x4041000000000000uLL);
  (*(void (**)(int64x2_t *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for PageGrid.HorizontalMargins.dynamicCenter(_:), v27);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v28) = 0;
  PageGrid.DirectionalValue.init(_:)(&v28, &type metadata for Bool, &protocol witness table for Bool);
  v28 = 0;
  PageGrid.DirectionalValue.init(_:)(&v28, &type metadata for CGFloat, v21);
  return PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v20, *((double *)&v20 + 1), UIEdgeInsetsZero.top, left, bottom, right);
}

uint64_t sub_1000630F8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for PageGrid.HorizontalMargins(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (int64x2_t *)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v18 - v12;
  v14 = type metadata accessor for PageGrid.Breakpoint(0);
  sub_100045464(v14, qword_100850FB8);
  sub_1000117A8(v14, (uint64_t)qword_100850FB8);
  if (qword_1007F2CB8 != -1)
    swift_once(&qword_1007F2CB8, sub_1004A2174);
  v15 = xmmword_100856890;
  v19 = 0x4074F00000000000;
  v16 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(&v19, &type metadata for CGFloat, v16);
  v19 = 0x404A000000000000;
  PageGrid.DirectionalValue.init(_:)(&v19, &type metadata for CGFloat, v16);
  v19 = 0x404A000000000000;
  PageGrid.DirectionalValue.init(_:)(&v19, &type metadata for CGFloat, v16);
  *v4 = vdupq_n_s64(0x404A000000000000uLL);
  (*(void (**)(int64x2_t *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for PageGrid.HorizontalMargins.absolute(_:), v1);
  return PageGrid.Breakpoint.init(range:columnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v13, v10, v7, v4, *(double *)&v15, *((double *)&v15 + 1), UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

uint64_t sub_100063300()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v31;
  void (*v32)(_QWORD);
  double left;
  double bottom;
  double right;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  _QWORD v57[2];
  int64x2_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(int64x2_t *);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];

  v0 = sub_10000DF3C(&qword_1007F5870);
  v1 = __chkstk_darwin(v0);
  v66 = (char *)v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v3 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v5 = (int64x2_t *)((char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000DF3C(&qword_1007F4A70);
  __chkstk_darwin(v6);
  v8 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v57 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v57 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v57 - v16;
  v18 = sub_10000DF3C(&qword_1007F5878);
  v64 = type metadata accessor for PageGrid.Breakpoint(0);
  v19 = *(_QWORD *)(v64 - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v62 = v19;
  v21 = *(unsigned __int8 *)(v19 + 80);
  v22 = (v21 + 32) & ~v21;
  v67 = v20;
  v23 = swift_allocObject(v18, v22 - v20 + 8 * v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_1006717F0;
  v61 = v23;
  v68 = v23 + v22;
  if (qword_1007F2C78 != -1)
    swift_once(&qword_1007F2C78, sub_1004A20D4);
  v24 = xmmword_100856810;
  v69[0] = 0x3FF0000000000000;
  v25 = sub_100020838();
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  __asm { FMOV            V0.2D, #16.0 }
  *v5 = _Q0;
  v31 = enum case for PageGrid.HorizontalMargins.dynamicCenter(_:);
  v32 = *(void (**)(_QWORD))(v3 + 104);
  ((void (*)(int64x2_t *, _QWORD, uint64_t))v32)(v5, enum case for PageGrid.HorizontalMargins.dynamicCenter(_:), v63);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v69[0]) = 0;
  v36 = v66;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for Bool, &protocol witness table for Bool);
  v69[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v37 = v68;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v36, v8, v14, v11, v5, *(double *)&v24, *((double *)&v24 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v60 = (char *)(v37 + v67);
  if (qword_1007F2C80 != -1)
    swift_once(&qword_1007F2C80, sub_1004A20E8);
  v38 = xmmword_100856820;
  v69[0] = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  __asm { FMOV            V0.2D, #20.0 }
  *v5 = _Q0;
  v40 = v31;
  v41 = v63;
  v65 = (void (*)(int64x2_t *))v32;
  ((void (*)(int64x2_t *, uint64_t, uint64_t))v32)(v5, v40, v63);
  LOBYTE(v69[0]) = 0;
  v42 = v66;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for Bool, &protocol witness table for Bool);
  v69[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v60 = v11;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v42, v8, v14, v11, v5, *(double *)&v38, *((double *)&v38 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v43 = v68;
  v44 = v68 + 2 * v67;
  if (qword_1007F0F00 != -1)
    swift_once(&qword_1007F0F00, sub_100062E40);
  v45 = v64;
  v46 = sub_1000117A8(v64, (uint64_t)qword_100850FA0);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
  v59(v44, v46, v45);
  v57[1] = v43 + 3 * v67;
  if (qword_1007F2C98 != -1)
    swift_once(&qword_1007F2C98, sub_1004A2124);
  v47 = xmmword_100856850;
  v69[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4041000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4041000000000000;
  v48 = v60;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v58 = vdupq_n_s64(0x4041000000000000uLL);
  *v5 = v58;
  LODWORD(v62) = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v65(v5);
  LOBYTE(v69[0]) = 0;
  v49 = v66;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for Bool, &protocol witness table for Bool);
  v69[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v49, v8, v14, v48, v5, *(double *)&v47, *((double *)&v47 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F2CA0 != -1)
    swift_once(&qword_1007F2CA0, sub_1004A2138);
  v50 = xmmword_100856860;
  v69[0] = 0x4074F00000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4041000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x4041000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  *v5 = v58;
  ((void (*)(int64x2_t *, _QWORD, uint64_t))v65)(v5, v62, v41);
  PageGrid.Breakpoint.init(range:columnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v14, v48, v5, *(double *)&v50, *((double *)&v50 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v51 = v67;
  if (qword_1007F2CB0 != -1)
    swift_once(&qword_1007F2CB0, sub_1004A2160);
  v52 = xmmword_100856880;
  v69[0] = 0x4074F00000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x404A000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  v69[0] = 0x404A000000000000;
  PageGrid.DirectionalValue.init(_:)(v69, &type metadata for CGFloat, v25);
  *v5 = vdupq_n_s64(0x404A000000000000uLL);
  ((void (*)(int64x2_t *, _QWORD, uint64_t))v65)(v5, v62, v41);
  PageGrid.Breakpoint.init(range:columnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v17, v14, v48, v5, *(double *)&v52, *((double *)&v52 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_1007F0F08 != -1)
    swift_once(&qword_1007F0F08, sub_1000630F8);
  v53 = v68 + 6 * v51;
  v54 = v64;
  v55 = sub_1000117A8(v64, (uint64_t)qword_100850FB8);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v59)(v53, v55, v54);
  qword_1007F6188 = v61;
  return result;
}

uint64_t sub_100063AF4@<X0>(uint64_t a1@<X0>, objc_class *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, objc_class *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D2>)
{
  int *v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  Class isa;
  double v37;
  double v38;
  void *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  Class v43;
  Class v44;
  __n128 v45;
  id v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  Class v52;
  double v53;
  double v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(void);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  CGFloat left;
  CGFloat right;
  CGFloat bottom;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  CGFloat *v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  id v114;
  Class v115;
  id v116;
  uint64_t v117;
  Class v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  UITraitCollection v129;
  uint64_t v130;

  v121 = a4;
  v129.super.isa = a5;
  v117 = a3;
  v115 = a2;
  v113 = a1;
  v120 = a6;
  v10 = (int *)type metadata accessor for ShelfHeaderLayout.Metrics(0);
  __chkstk_darwin(v10);
  v12 = (double *)((char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v13);
  v119 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v125 = (uint64_t)&v102 - v16;
  v17 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v17);
  v108 = (uint64_t)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v102 - v20;
  v22 = sub_10000DF3C(&qword_1007F6320);
  __chkstk_darwin(v22);
  v128 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v124 = (char *)&v102 - v25;
  __chkstk_darwin(v26);
  v127 = (char *)&v102 - v27;
  __chkstk_darwin(v28);
  v123 = (char *)&v102 - v29;
  __chkstk_darwin(v30);
  v130 = (uint64_t)&v102 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v102 - v33;
  if (qword_1007F0F58 != -1)
    swift_once(&qword_1007F0F58, sub_100064FA4);
  v35 = type metadata accessor for FontUseCase(0);
  sub_1000117A8(v35, (uint64_t)qword_1007F61D0);
  isa = FontUseCase.makeFontDescriptor(compatibleWith:)(v129).super.isa;
  -[objc_class pointSize](isa, "pointSize");
  v38 = v37;
  v39 = (void *)objc_opt_self(UIFont);
  v118 = isa;
  v116 = objc_msgSend(v39, "fontWithDescriptor:size:", isa, v38);
  objc_msgSend(v116, "lineHeight");
  v112 = v40.n128_u64[0];
  v41 = (uint64_t)v34;
  v42 = (uint64_t)&v34[*(int *)(v22 + 48)];
  v126 = v41;
  sub_100064478(v41, v42, (uint64_t)v115, v40);
  if (qword_1007F0F60 != -1)
    swift_once(&qword_1007F0F60, sub_100064FBC);
  v109 = v35;
  sub_1000117A8(v35, (uint64_t)qword_1007F61E8);
  v43 = v129.super.isa;
  v44 = FontUseCase.makeFontDescriptor(compatibleWith:)(v129).super.isa;
  -[objc_class pointSize](v44, "pointSize");
  v115 = v44;
  v114 = objc_msgSend(v39, "fontWithDescriptor:size:", v44);
  objc_msgSend(v114, "lineHeight");
  v111 = v45.n128_u64[0];
  v110 = v130 + *(int *)(v22 + 48);
  sub_1000648F0(v130, v110, v121, v45);
  v46 = -[objc_class preferredContentSizeCategory](v43, "preferredContentSizeCategory");
  LOBYTE(v43) = static UIContentSizeCategory.> infix(_:_:)();

  if ((v43 & 1) == 0 || (v47 = 0.0, UIAccessibilityButtonShapesEnabled()))
  {
    sub_1000194E4(v121, (uint64_t)v21, &qword_1007F6318);
    v48 = type metadata accessor for ShelfHeader.ArtworkType(0);
    v49 = *(_QWORD *)(v48 - 8);
    v47 = 7.0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v21, 1, v48) != 1)
    {
      v50 = v108;
      sub_1000194E4((uint64_t)v21, v108, &qword_1007F6318);
      v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 88))(v50, v48);
      if (v51 != enum case for ShelfHeader.ArtworkType.icon(_:))
      {
        v47 = 5.0;
        if (v51 != enum case for ShelfHeader.ArtworkType.category(_:))
        {
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v108, v48);
          v47 = 7.0;
        }
      }
    }
    sub_100011088((uint64_t)v21, &qword_1007F6318);
  }
  if (qword_1007F0F70 != -1)
    swift_once(&qword_1007F0F70, sub_100064FEC);
  sub_1000117A8(v109, (uint64_t)qword_1007F6218);
  v52 = FontUseCase.makeFontDescriptor(compatibleWith:)(v129).super.isa;
  -[objc_class pointSize](v52, "pointSize");
  v129.super.isa = v52;
  v122 = objc_msgSend(v39, "fontWithDescriptor:size:", v52);
  objc_msgSend(v122, "lineHeight");
  v54 = v53;
  v55.n128_f64[0] = a7 + 10.0;
  v56.n128_f64[0] = a8 + 12.0;
  v108 = static UIEdgeInsets.vertical(top:bottom:)(v55, v56);
  v107 = v57;
  v106 = v58;
  v105 = v59;
  v60.n128_u64[0] = 7.0;
  v61.n128_u64[0] = 0;
  v104 = static UIEdgeInsets.vertical(top:bottom:)(v60, v61);
  v63 = v62;
  v103 = v64;
  v102 = v65;
  v66 = v123;
  v67 = (uint64_t)&v123[*(int *)(v22 + 48)];
  v68 = type metadata accessor for StaticDimension(0);
  v109 = *(_QWORD *)(v68 - 8);
  v69 = *(void (**)(void))(v109 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v69)(v66, v126, v68);
  v121 = v67;
  ((void (*)(uint64_t, uint64_t, uint64_t))v69)(v67, v42, v68);
  v70 = &v127[*(int *)(v22 + 48)];
  v69();
  v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v70, v42, v68);
  if (v113)
  {
    Artwork.size.getter(v71);
    v72 = v125;
    AspectRatio.init(_:_:)(v73);
    v74 = type metadata accessor for AspectRatio(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v72, 0, 1, v74);
  }
  else
  {
    v75 = type metadata accessor for AspectRatio(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v125, 1, 1, v75);
  }
  v76 = v119;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v80 = &v124[*(int *)(v22 + 48)];
  v69();
  v119 = v80;
  v81 = v80;
  v82 = v110;
  ((void (*)(char *, uint64_t, uint64_t))v69)(v81, v110, v68);
  v83 = &v128[*(int *)(v22 + 48)];
  v69();
  v84 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v83, v82, v68);
  if (v117)
  {
    Artwork.size.getter(v84);
    AspectRatio.init(_:_:)(v85);
    v86 = type metadata accessor for AspectRatio(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v76, 0, 1, v86);
  }
  else
  {
    v86 = type metadata accessor for AspectRatio(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v76, 1, 1, v86);
  }
  v87 = (uint64_t)v76;
  v88 = *(double *)&v111;
  v89 = (uint64_t)v12 + v10[10];
  type metadata accessor for AspectRatio(0);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56);
  v90(v89, 1, 1, v86);
  v91 = (uint64_t)v12 + v10[15];
  v90(v91, 1, 1, v86);
  v92 = v107;
  *(_QWORD *)v12 = v108;
  *((_QWORD *)v12 + 1) = v92;
  v93 = v105;
  *((_QWORD *)v12 + 2) = v106;
  *((_QWORD *)v12 + 3) = v93;
  v94 = v104;
  *((_QWORD *)v12 + 4) = v112;
  v12[5] = v94;
  v95 = v103;
  *((_QWORD *)v12 + 6) = v63;
  *((_QWORD *)v12 + 7) = v95;
  *((_QWORD *)v12 + 8) = v102;
  v96 = v109;
  v97 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
  v97((char *)v12 + v10[7], v123, v68);
  v97((char *)v12 + v10[8], v70, v68);
  *(double *)((char *)v12 + v10[9]) = 3.0;
  sub_10006C214(v125, v89, (uint64_t *)&unk_1007FA760);
  *(double *)((char *)v12 + v10[11]) = v88;
  v98 = (double *)((char *)v12 + v10[12]);
  *v98 = UIEdgeInsetsZero.top;
  v98[1] = left;
  v98[2] = bottom;
  v98[3] = right;
  v97((char *)v12 + v10[13], v124, v68);
  v97((char *)v12 + v10[14], v83, v68);
  sub_10006C214(v87, v91, (uint64_t *)&unk_1007FA760);
  *(double *)((char *)v12 + v10[16]) = v47;
  v99 = (char *)v12 + v10[17];
  *(double *)v99 = v88 - v54;
  *((_QWORD *)v99 + 2) = 0;
  *((_QWORD *)v99 + 3) = 0;
  *((_QWORD *)v99 + 1) = 0x4024000000000000;
  sub_10006C150((uint64_t)v12, v120);

  sub_100011088(v130, &qword_1007F6320);
  sub_100011088(v126, &qword_1007F6320);
  v100 = *(void (**)(char *, uint64_t))(v96 + 8);
  v100(v128, v68);
  v100(v119, v68);
  v100(v127, v68);
  return ((uint64_t (*)(uint64_t, uint64_t))v100)(v121, v68);
}

uint64_t sub_100064478(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  void (*v32)(_QWORD *, char *, uint64_t);
  void (*v33)(char *, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  _QWORD *v43;
  void (*v44)(_QWORD *, char *, uint64_t);
  void (*v45)(char *, uint64_t);
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD v58[3];
  uint64_t v59;
  void *v60;

  v7 = type metadata accessor for FontSource(0, a4);
  v54 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - v14;
  v16 = sub_10000DF3C(&qword_1007F6320);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000194E4(a3, (uint64_t)v15, &qword_1007F6318);
  v19 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v57 = v15;
  v22 = v21(v15, 1, v19);
  v55 = a1;
  v56 = a2;
  if (v22 != 1)
  {
    sub_1000194E4((uint64_t)v57, (uint64_t)v12, &qword_1007F6318);
    if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v12, v19) == enum case for ShelfHeader.ArtworkType.category(_:))
    {
      v23 = v16;
      v24 = *(int *)(v16 + 48);
      v25 = v18;
      v53 = &v18[v24];
      if (qword_1007F0F58 != -1)
        swift_once(&qword_1007F0F58, sub_100064FA4);
      v26 = type metadata accessor for FontUseCase(0);
      v27 = sub_1000117A8(v26, (uint64_t)qword_1007F61D0);
      v52 = *(char **)(*(_QWORD *)(v26 - 8) + 16);
      ((void (*)(char *, uint64_t, uint64_t))v52)(v9, v27, v26);
      v28 = enum case for FontSource.useCase(_:);
      v29 = v54;
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
      v30(v9, enum case for FontSource.useCase(_:), v7);
      v59 = v7;
      v60 = &protocol witness table for FontSource;
      v31 = sub_1000117C0(v58);
      v32 = *(void (**)(_QWORD *, char *, uint64_t))(v29 + 16);
      v32(v31, v9, v7);
      StaticDimension.init(_:scaledLike:)(v58, 28.0);
      v33 = *(void (**)(char *, uint64_t))(v29 + 8);
      v33(v9, v7);
      ((void (*)(char *, uint64_t, uint64_t))v52)(v9, v27, v26);
      v30(v9, v28, v7);
      v59 = v7;
      v60 = &protocol witness table for FontSource;
      v34 = sub_1000117C0(v58);
      v32(v34, v9, v7);
      StaticDimension.init(_:scaledLike:)(v58, 20.0);
      v33(v9, v7);
      v36 = v55;
      v35 = v56;
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
  }
  v52 = &v18[*(int *)(v16 + 48)];
  v53 = (char *)v16;
  if (qword_1007F0F58 != -1)
    swift_once(&qword_1007F0F58, sub_100064FA4);
  v37 = type metadata accessor for FontUseCase(0);
  v38 = sub_1000117A8(v37, (uint64_t)qword_1007F61D0);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v9, v38, v37);
  v40 = enum case for FontSource.useCase(_:);
  v41 = v54;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
  v42(v9, enum case for FontSource.useCase(_:), v7);
  v59 = v7;
  v60 = &protocol witness table for FontSource;
  v43 = sub_1000117C0(v58);
  v44 = *(void (**)(_QWORD *, char *, uint64_t))(v41 + 16);
  v44(v43, v9, v7);
  StaticDimension.init(_:scaledLike:)(v58, 18.0);
  v45 = *(void (**)(char *, uint64_t))(v41 + 8);
  v45(v9, v7);
  v39(v9, v38, v37);
  v42(v9, v40, v7);
  v59 = v7;
  v60 = &protocol witness table for FontSource;
  v46 = sub_1000117C0(v58);
  v44(v46, v9, v7);
  StaticDimension.init(_:scaledLike:)(v58, 18.0);
  v45(v9, v7);
  v25 = v18;
  v36 = v55;
  v35 = v56;
  v23 = (uint64_t)v53;
LABEL_10:
  sub_100011088((uint64_t)v57, &qword_1007F6318);
  v47 = &v25[*(int *)(v23 + 48)];
  v48 = type metadata accessor for StaticDimension(0);
  v49 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
  v49(v36, v25, v48);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v49)(v35, v47, v48);
}

uint64_t sub_1000648F0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  void (*v32)(_QWORD *, char *, uint64_t);
  void (*v33)(char *, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  _QWORD *v43;
  void (*v44)(_QWORD *, char *, uint64_t);
  void (*v45)(char *, uint64_t);
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD v58[3];
  uint64_t v59;
  void *v60;

  v7 = type metadata accessor for FontSource(0, a4);
  v54 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - v14;
  v16 = sub_10000DF3C(&qword_1007F6320);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000194E4(a3, (uint64_t)v15, &qword_1007F6318);
  v19 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v57 = v15;
  v22 = v21(v15, 1, v19);
  v55 = a1;
  v56 = a2;
  if (v22 != 1)
  {
    sub_1000194E4((uint64_t)v57, (uint64_t)v12, &qword_1007F6318);
    if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v12, v19) == enum case for ShelfHeader.ArtworkType.category(_:))
    {
      v23 = v16;
      v24 = *(int *)(v16 + 48);
      v25 = v18;
      v53 = &v18[v24];
      if (qword_1007F0F60 != -1)
        swift_once(&qword_1007F0F60, sub_100064FBC);
      v26 = type metadata accessor for FontUseCase(0);
      v27 = sub_1000117A8(v26, (uint64_t)qword_1007F61E8);
      v52 = *(char **)(*(_QWORD *)(v26 - 8) + 16);
      ((void (*)(char *, uint64_t, uint64_t))v52)(v9, v27, v26);
      v28 = enum case for FontSource.useCase(_:);
      v29 = v54;
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
      v30(v9, enum case for FontSource.useCase(_:), v7);
      v59 = v7;
      v60 = &protocol witness table for FontSource;
      v31 = sub_1000117C0(v58);
      v32 = *(void (**)(_QWORD *, char *, uint64_t))(v29 + 16);
      v32(v31, v9, v7);
      StaticDimension.init(_:scaledLike:)(v58, 42.0);
      v33 = *(void (**)(char *, uint64_t))(v29 + 8);
      v33(v9, v7);
      ((void (*)(char *, uint64_t, uint64_t))v52)(v9, v27, v26);
      v30(v9, v28, v7);
      v59 = v7;
      v60 = &protocol witness table for FontSource;
      v34 = sub_1000117C0(v58);
      v32(v34, v9, v7);
      StaticDimension.init(_:scaledLike:)(v58, 28.0);
      v33(v9, v7);
      v36 = v55;
      v35 = v56;
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
  }
  v52 = &v18[*(int *)(v16 + 48)];
  v53 = (char *)v16;
  if (qword_1007F0F60 != -1)
    swift_once(&qword_1007F0F60, sub_100064FBC);
  v37 = type metadata accessor for FontUseCase(0);
  v38 = sub_1000117A8(v37, (uint64_t)qword_1007F61E8);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v9, v38, v37);
  v40 = enum case for FontSource.useCase(_:);
  v41 = v54;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
  v42(v9, enum case for FontSource.useCase(_:), v7);
  v59 = v7;
  v60 = &protocol witness table for FontSource;
  v43 = sub_1000117C0(v58);
  v44 = *(void (**)(_QWORD *, char *, uint64_t))(v41 + 16);
  v44(v43, v9, v7);
  StaticDimension.init(_:scaledLike:)(v58, 22.0);
  v45 = *(void (**)(char *, uint64_t))(v41 + 8);
  v45(v9, v7);
  v39(v9, v38, v37);
  v42(v9, v40, v7);
  v59 = v7;
  v60 = &protocol witness table for FontSource;
  v46 = sub_1000117C0(v58);
  v44(v46, v9, v7);
  StaticDimension.init(_:scaledLike:)(v58, 22.0);
  v45(v9, v7);
  v25 = v18;
  v36 = v55;
  v35 = v56;
  v23 = (uint64_t)v53;
LABEL_10:
  sub_100011088((uint64_t)v57, &qword_1007F6318);
  v47 = &v25[*(int *)(v23 + 48)];
  v48 = type metadata accessor for StaticDimension(0);
  v49 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
  v49(v36, v25, v48);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v49)(v35, v47, v48);
}

id sub_100064D6C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
  qword_1007F6190 = (uint64_t)result;
  return result;
}

void sub_100064DA8(uint64_t a1)
{
  sub_100064E1C(a1, 10912226, 0xA300000000000000, &qword_1007F6198);
}

void sub_100064DC0(uint64_t a1)
{
  sub_100064E1C(a1, 10977762, 0xA300000000000000, &qword_1007F61A0);
}

void sub_100064DD8(uint64_t a1)
{
  sub_100064E1C(a1, 11043298, 0xA300000000000000, &qword_1007F61A8);
}

void sub_100064DF0(uint64_t a1)
{
  sub_100064E1C(a1, 11108834, 0xA300000000000000, &qword_1007F61B0);
}

void sub_100064E08(uint64_t a1)
{
  sub_100064E1C(a1, 41154, 0xA200000000000000, &qword_1007F61B8);
}

void sub_100064E1C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  NSString v6;
  id v7;

  v5 = objc_allocWithZone((Class)NSAttributedString);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithString:", v6);

  *a4 = v7;
}

uint64_t sub_100064E88(uint64_t a1)
{
  return sub_100064ED0(a1, &qword_1007F0F60, (uint64_t)qword_1007F61E8, &qword_1007F61C0, (uint64_t)sub_100064FBC);
}

uint64_t sub_100064EAC(uint64_t a1)
{
  return sub_100064ED0(a1, &qword_1007F0F58, (uint64_t)qword_1007F61D0, &qword_1007F61C8, (uint64_t)sub_100064FA4);
}

uint64_t sub_100064ED0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v9 = type metadata accessor for FontUseCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicTypeButton(0);
  if (*a2 != -1)
    swift_once(a2, a5);
  v13 = sub_1000117A8(v9, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  result = DynamicTypeButton.__allocating_init(useCase:)(v12);
  *a4 = result;
  return result;
}

id sub_100064FA4(uint64_t a1)
{
  return sub_100065004(a1, qword_1007F61D0, (id *)&UIFontTextStyleFootnote, 2);
}

id sub_100064FBC(uint64_t a1)
{
  return sub_100065004(a1, qword_1007F61E8, (id *)&UIFontTextStyleTitle2, 2);
}

id sub_100064FD4(uint64_t a1)
{
  return sub_100065004(a1, qword_1007F6200, (id *)&UIFontTextStyleSubheadline, 0);
}

id sub_100064FEC(uint64_t a1)
{
  return sub_100065004(a1, qword_1007F6218, (id *)&UIFontTextStyleBody, 0);
}

id sub_100065004(uint64_t a1, uint64_t *a2, id *a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  id v10;

  v7 = type metadata accessor for FontUseCase(0);
  sub_100045464(v7, a2);
  v8 = sub_1000117A8(v7, (uint64_t)a2);
  v10 = *a3;
  *(_QWORD *)v8 = *a3;
  *(_DWORD *)(v8 + 8) = a4;
  (*(void (**)(void))(*(_QWORD *)(v7 - 8) + 104))();
  return v10;
}

id sub_100065088(uint64_t a1)
{
  return sub_1000650C4(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1007F6230);
}

id sub_10006509C(uint64_t a1)
{
  return sub_1000650C4(a1, (SEL *)&selRef_labelColor, &qword_1007F6238);
}

id sub_1000650B0(uint64_t a1)
{
  return sub_1000650C4(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1007F6240);
}

id sub_1000650C4(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

char *sub_100065104(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  objc_class *ObjCClassFromMetadata;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  objc_class *v69;
  uint64_t v70;
  objc_class *v71;
  char *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  char *v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  id v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  objc_class *v102;
  uint64_t v103;
  uint64_t ObjectType;
  uint64_t v105;
  char *v106;
  objc_super v107;
  char v108[24];
  char v109[24];
  _QWORD v110[3];
  uint64_t v111;
  void *v112;

  ObjectType = swift_getObjectType();
  v9 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v9);
  v103 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v102 = (objc_class *)((char *)&v95 - v12);
  v13 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  __chkstk_darwin(v13);
  v101 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for DirectionalTextAlignment(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v100 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v16);
  v97 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FontUseCase(0);
  v105 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v106 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Separator.Position(0, v19);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Separator(0);
  v25 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_containerView;
  v29 = objc_allocWithZone((Class)UIView);
  v30 = v4;
  *(_QWORD *)&v4[v28] = objc_msgSend(v29, "init");
  v31 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_separatorView;
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, enum case for Separator.Position.top(_:), v21);
  v111 = type metadata accessor for ZeroDimension(0);
  v112 = &protocol witness table for ZeroDimension;
  sub_1000117C0(v110);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v24, v110, 0.0, 0.0);
  v32 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v33 = &v32[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
  v34 = swift_beginAccess(&v32[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v110, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v25 + 40))(v33, v27, v96, v34);
  swift_endAccess(v110);
  *(_QWORD *)&v30[v31] = v32;
  v35 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton;
  type metadata accessor for DynamicTypeButton(0);
  if (qword_1007F0F58 != -1)
    swift_once(&qword_1007F0F58, sub_100064FA4);
  v36 = sub_1000117A8(v18, (uint64_t)qword_1007F61D0);
  v37 = v106;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  v38(v106, v36, v18);
  *(_QWORD *)&v30[v35] = DynamicTypeButton.__allocating_init(useCase:)(v37);
  v96 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork;
  *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork] = 0;
  v39 = (uint64_t)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType];
  v40 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v41(v39, 1, 1, v40);
  v42 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView;
  v43 = type metadata accessor for ArtworkView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v43);
  *(_QWORD *)&v30[v42] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v45 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton;
  if (qword_1007F0F60 != -1)
    swift_once(&qword_1007F0F60, sub_100064FBC);
  v46 = sub_1000117A8(v18, (uint64_t)qword_1007F61E8);
  v47 = v106;
  v38(v106, v46, v18);
  *(_QWORD *)&v30[v45] = DynamicTypeButton.__allocating_init(useCase:)(v47);
  v95 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork;
  *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork] = 0;
  v48 = (uint64_t)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkType];
  v41((uint64_t)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkType], 1, 1, v40);
  v49 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkView;
  *(_QWORD *)&v30[v49] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v50 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton;
  if (qword_1007F0F70 != -1)
    swift_once(&qword_1007F0F70, sub_100064FEC);
  v51 = sub_1000117A8(v18, (uint64_t)qword_1007F6218);
  v52 = v106;
  v38(v106, v51, v18);
  *(_QWORD *)&v30[v50] = DynamicTypeButton.__allocating_init(useCase:)(v52);
  v53 = &v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  *(_QWORD *)v53 = 0;
  *((_QWORD *)v53 + 1) = 0;
  v54 = &v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction];
  *(_QWORD *)v54 = 0;
  *((_QWORD *)v54 + 1) = 0;
  v55 = &v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  *(_QWORD *)v55 = 0;
  *((_QWORD *)v55 + 1) = 0;
  v56 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_subtitleLabel;
  v57 = v105;
  if (qword_1007F0F68 != -1)
    swift_once(&qword_1007F0F68, sub_100064FD4);
  v58 = sub_1000117A8(v18, (uint64_t)qword_1007F6200);
  v59 = v97;
  v38(v97, v58, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v18);
  v60 = v100;
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v100, enum case for DirectionalTextAlignment.none(_:), v99);
  v61 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v30[v56] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v59, 2, 4, 0, 0, v60, 0, 0);
  v62 = &v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration];
  v63 = type metadata accessor for ShelfHeader.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 1, 1, v63);
  v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] = 0;
  *(_QWORD *)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch] = 0;
  v64 = *(_QWORD *)&v30[v96];
  swift_beginAccess(v39, v109, 0, 0);
  v65 = v102;
  sub_1000194E4(v39, (uint64_t)v102, &qword_1007F6318);
  v66 = *(_QWORD *)&v30[v95];
  swift_beginAccess(v48, v108, 0, 0);
  v67 = v103;
  sub_1000194E4(v48, v103, &qword_1007F6318);
  v68 = (void *)objc_opt_self(UITraitCollection);
  swift_retain(v66);
  v69 = (objc_class *)objc_msgSend(v68, "currentTraitCollection", swift_retain(v64).n128_f64[0]);
  v70 = v101;
  v71 = (objc_class *)ObjectType;
  sub_100063AF4(v64, v65, v66, v67, v69, v101, UIEdgeInsetsZero.top, UIEdgeInsetsZero.bottom);
  swift_release(v64);
  swift_release(v66);

  sub_100011088(v67, &qword_1007F6318);
  sub_100011088((uint64_t)v65, &qword_1007F6318);
  sub_10006C150(v70, (uint64_t)&v30[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_metrics]);

  v107.receiver = v30;
  v107.super_class = v71;
  v72 = (char *)objc_msgSendSuper2(&v107, "initWithFrame:", a1, a2, a3, a4);
  v73 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton;
  v74 = *(void **)&v72[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton];
  sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
  v75 = swift_allocObject(&unk_1007245D8, 24, 7);
  swift_unknownObjectWeakInit(v75 + 16, v72);
  v76 = v72;
  v77 = v74;
  v78 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10006C3AC, v75);
  objc_msgSend(v77, "addAction:forControlEvents:", v78, 0x2000);

  v79 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton;
  v80 = *(void **)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton];
  v81 = swift_allocObject(&unk_1007245D8, 24, 7);
  swift_unknownObjectWeakInit(v81 + 16, v76);
  v82 = v80;
  v83 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10006C3CC, v81);
  objc_msgSend(v82, "addAction:forControlEvents:", v83, 0x2000);

  v84 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton;
  v85 = *(void **)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton];
  v86 = swift_allocObject(&unk_1007245D8, 24, 7);
  swift_unknownObjectWeakInit(v86 + 16, v76);
  v87 = v85;
  v88 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10006C3EC, v86);
  objc_msgSend(v87, "addAction:forControlEvents:", v88, 0x2000);

  v89 = *(void **)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_containerView];
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_separatorView]);
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView]);
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v76[v84]);
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkView]);
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v72[v73]);
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v76[v79]);
  objc_msgSend(v89, "addSubview:", *(_QWORD *)&v76[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_subtitleLabel]);
  objc_msgSend(v76, "addSubview:", v89);
  sub_100065CA8();
  v90 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v91 = swift_allocObject(v90, 48, 7);
  *(_OWORD *)(v91 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v91 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v91 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v111 = (uint64_t)v71;
  v110[0] = v76;
  v92 = v76;
  v93 = UIView.registerForTraitChanges(_:target:action:)(v91, v110, "updateConfiguration");
  swift_unknownObjectRelease(v93);

  swift_bridgeObjectRelease(v91);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v110);
  return v92;
}

void sub_100065C18(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  char *Strong;
  void *v6;
  uint64_t *v7;
  void (*v8)(void);
  uint64_t v9;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = (uint64_t *)&Strong[*a3];
    v8 = (void (*)(void))*v7;
    if (*v7)
    {
      v9 = v7[1];
      sub_100019320(*v7, v9);

      v8();
      sub_100019310((uint64_t)v8, v9);
    }
    else
    {

    }
  }
}

uint64_t sub_100065CA8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  unsigned int (*v20)(_QWORD, _QWORD, _QWORD, __n128);
  char v21;
  char *v22;
  uint64_t v23;
  char v24;
  unsigned int (*v25)(_QWORD, _QWORD, _QWORD, __n128);
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  _BOOL4 v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char v87[24];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v2);
  v79 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_100818C20);
  __chkstk_darwin(v4);
  v82 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v80 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v9);
  v86 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v78 - v12;
  v14 = type metadata accessor for ShelfHeader.Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v85 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_separatorView];
  v18 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration];
  v19 = swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration], v87, 0, 0);
  v20 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD, __n128))(v15 + 48);
  v21 = 1;
  if (!v20(v18, 1, v14, v19))
  {
    v22 = v85;
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v85, v18, v14);
    v24 = ShelfHeader.Configuration.includeSeparator.getter(v23);
    v83 = v18;
    v25 = v20;
    v26 = v24;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    v21 = v26 ^ 1;
    v20 = v25;
    v18 = v83;
  }
  objc_msgSend(v17, "setHidden:", v21 & 1);
  v27 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v18, 1, v14);
  v83 = v15;
  v81 = v6;
  if (v27)
  {
    v28 = 0;
  }
  else
  {
    v29 = v7;
    v30 = v85;
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v85, v18, v14);
    v28 = ShelfHeader.Configuration.eyebrowImageColor.getter(v31);
    v32 = v30;
    v7 = v29;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v32, v14);
  }
  ArtworkView.artworkTintColor.setter(v28);
  v33 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton];
  sub_1000194E4(v18, (uint64_t)v13, &qword_1007FAFE0);
  v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  v35 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction + 8];
  v84 = v7;
  v78 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v20;
  if (v34)
  {
    v36 = swift_allocObject(&unk_100724400, 32, 7);
    *(_QWORD *)(v36 + 16) = v34;
    *(_QWORD *)(v36 + 24) = v35;
    v37 = sub_10006C410;
  }
  else
  {
    v37 = 0;
    v36 = 0;
  }
  sub_100019320(v34, v35);
  sub_100019310((uint64_t)v37, v36);
  v38 = objc_msgSend(v1, "traitCollection");
  sub_10006A748(v33, (uint64_t)v13, v34 != 0, (uint64_t)v38);

  sub_100011088((uint64_t)v13, &qword_1007FAFE0);
  v39 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton];
  sub_1000194E4(v18, v86, &qword_1007FAFE0);
  v40 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  v41 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction + 8];
  if (v40)
  {
    v42 = swift_allocObject(&unk_1007243D8, 32, 7);
    *(_QWORD *)(v42 + 16) = v40;
    *(_QWORD *)(v42 + 24) = v41;
    v43 = sub_100030368;
  }
  else
  {
    v43 = 0;
    v42 = 0;
  }
  v44 = v78;
  v45 = v40 != 0;
  sub_100019320(v40, v41);
  sub_100019310((uint64_t)v43, v42);
  v46 = objc_msgSend(v1, "traitCollection");
  v47 = v39;
  v48 = v86;
  sub_10006AAA0(v47, v86, v45, (uint64_t)v46);

  sub_100011088(v48, &qword_1007FAFE0);
  if (v44(v18, 1, v14))
  {
    v49 = 0;
  }
  else
  {
    v50 = v83;
    v51 = v85;
    v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 16))(v85, v18, v14);
    v49 = ShelfHeader.Configuration.titleImageColor.getter(v52);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v14);
  }
  v54 = v80;
  v53 = v81;
  v55 = v79;
  v56 = ArtworkView.artworkTintColor.setter(v49);
  v57 = static UIButton.Configuration.plain()(v56);
  UIButton.Configuration.titlePadding.setter(v57, 0.0);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  if (v44(v18, 1, v14)
    || (v59 = v83,
        v60 = v85,
        v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 16))(v85, v18, v14),
        v58 = (id)ShelfHeader.Configuration.accessoryColor.getter(v61),
        (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v14),
        !v58))
  {
    v58 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  }
  UIButton.Configuration.baseForegroundColor.setter(v58);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F0F70 != -1)
    swift_once(&qword_1007F0F70, sub_100064FEC);
  v62 = type metadata accessor for FontUseCase(0);
  v63 = sub_1000117A8(v62, (uint64_t)qword_1007F6218);
  v64 = objc_msgSend(v1, "traitCollection");
  v65 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v63, v64);

  v66 = swift_allocObject(&unk_1007243B0, 24, 7);
  *(_QWORD *)(v66 + 16) = v65;
  v67 = v65;
  v68 = v82;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10006C1BC, v66);
  v69 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1, v69);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v68);
  v70 = v84;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v55, v54, v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v55, 0, 1, v53);
  UIButton.configuration.setter(v55);
  v71 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_subtitleLabel];
  if (v44(v18, 1, v14)
    || (v73 = v83,
        v74 = v85,
        v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 16))(v85, v18, v14),
        v72 = (id)ShelfHeader.Configuration.subtitleColor.getter(v75),
        v76 = *(void (**)(char *, uint64_t))(v73 + 8),
        v70 = v84,
        v76(v74, v14),
        !v72))
  {
    if (qword_1007F0F88 != -1)
      swift_once(&qword_1007F0F88, sub_1000650B0);
    v72 = (id)qword_1007F6240;
  }
  objc_msgSend(v71, "setTextColor:", v72, v78);

  objc_msgSend(v1, "setNeedsLayout");
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v54, v53);
}

uint64_t sub_100066464()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v35[24];
  objc_super v36;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v3);
  v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v6);
  v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for Artwork.Style(0, v9);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v36.receiver = v1;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "prepareForReuse", v11);
  v14 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction + 8];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  sub_100019310(v15, v16);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton], "setAttributedTitle:forState:", 0, 0);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork;
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork] = 0;
  *(_QWORD *)&v19 = swift_release(v18).n128_u64[0];
  v20 = *(_QWORD *)&v1[v17];
  if (v20)
  {
    v21 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView], "setHidden:", 0, swift_retain(*(_QWORD *)&v1[v17]).n128_f64[0]);
    Artwork.style.getter(v21);
    ArtworkView.style.setter(v13);
    swift_release(v20);
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView], "setHidden:", 1, v19);
  }
  v22 = type metadata accessor for ShelfHeader.ArtworkType(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
  v23 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType], v35, 33, 0);
  sub_10006C214((uint64_t)v8, v23, &qword_1007F6318);
  swift_endAccess(v35);
  v24 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction];
  v25 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction];
  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction + 8];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  sub_100019310(v25, v26);
  v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton];
  objc_msgSend(v27, "setTitle:forState:", 0, 0);
  objc_msgSend(v27, "setImage:forState:", 0, 0);
  v28 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction + 8];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  sub_100019310(v29, v30);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton], "setAttributedTitle:forState:", 0, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_subtitleLabel], "setText:", 0);
  v31 = type metadata accessor for ShelfHeader.Configuration(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v5, 1, 1, v31);
  v32 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration], v35, 33, 0);
  sub_10006B860((uint64_t)v5, v32);
  swift_endAccess(v35);
  sub_100065CA8();
  return sub_100011088((uint64_t)v5, &qword_1007FAFE0);
}

uint64_t sub_1000667C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  _QWORD v32[5];
  _QWORD v33[5];
  _QWORD v34[5];
  __int128 v35;
  __int128 v36;
  void *v37;
  _QWORD v38[5];
  _BYTE v39[32];

  v2 = v1;
  v25 = a1;
  v3 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_metrics;
  swift_beginAccess(v6, v39, 0, 0);
  sub_10006C258(v6, (uint64_t)v5);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_separatorView);
  v38[3] = type metadata accessor for SeparatorView(0);
  v38[4] = &protocol witness table for UIView;
  v38[0] = v7;
  v8 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton);
  v9 = v7;
  if ((objc_msgSend(v8, "isHidden") & 1) != 0 || !objc_msgSend(v8, "hasContent"))
  {
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
  }
  else
  {
    *((_QWORD *)&v36 + 1) = type metadata accessor for DynamicTypeButton(0);
    v37 = &protocol witness table for UIButton;
    *(_QWORD *)&v35 = v8;
    v10 = v8;
  }
  v11 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView);
  v12 = type metadata accessor for ArtworkView(0);
  v34[3] = v12;
  v34[4] = &protocol witness table for UIView;
  v34[0] = v11;
  v13 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton);
  v14 = type metadata accessor for DynamicTypeButton(0);
  v33[3] = v14;
  v33[4] = &protocol witness table for UIButton;
  v32[4] = &protocol witness table for UIView;
  v33[0] = v13;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkView);
  v32[3] = v12;
  v32[0] = v15;
  v16 = v11;
  v17 = v13;
  v18 = v15;
  v19 = sub_100066C34();
  if (v19)
  {
    v20 = v19;
    *((_QWORD *)&v30 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v31 = &protocol witness table for UILabel;
    *(_QWORD *)&v29 = v20;
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
  }
  v21 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton);
  if ((objc_msgSend(v21, "isHidden") & 1) != 0 || !objc_msgSend(v21, "hasContent"))
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
  }
  else
  {
    *((_QWORD *)&v27 + 1) = v14;
    v28 = &protocol witness table for UIView;
    *(_QWORD *)&v26 = v21;
    v22 = v21;
  }
  return ShelfHeaderLayout.init(metrics:separatorView:eyebrowButton:eyebrowImage:titleLabel:titleImage:subtitleLabel:accessoryView:)((uint64_t)v5, (uint64_t)v38, (uint64_t)&v35, (uint64_t)v34, v33, (uint64_t)v32, (uint64_t)&v29, (uint64_t)&v26, v25);
}

void *sub_100066C34()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  if ((objc_msgSend(v0, "isHidden") & 1) != 0)
    return 0;
  v1 = objc_msgSend(v0, "text");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    swift_bridgeObjectRelease(v5);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
      goto LABEL_9;
  }
  v7 = objc_msgSend(v0, "attributedText");
  if (!v7)
    return 0;
  v8 = v7;
  v9 = (uint64_t)objc_msgSend(v7, "length");

  if (v9 < 1)
    return 0;
LABEL_9:
  v10 = v0;
  return v0;
}

uint64_t sub_100066D34@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  id v10;
  void *v12;

  v7 = type metadata accessor for AttributeContainer(0, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a1, v7);
  swift_getKeyPath(&unk_1006718D0);
  KeyPath = swift_getKeyPath(&unk_100671900);
  v12 = a2;
  v9 = sub_100019294();
  v10 = a2;
  return AttributeContainer.subscript.setter(&v12, KeyPath, v9);
}

double sub_100066DD0(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  double result;
  void (*v38)(char *, char *, uint64_t);
  _QWORD *v39;
  _QWORD *v40;
  _BYTE v41[24];

  v39 = a4;
  v40 = a5;
  v7 = v5;
  v10 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - v17;
  v19 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_4:
    v23 = *a3;
    v24 = *(_QWORD *)(v7 + *a3);
    *(_QWORD *)(v7 + *a3) = 0;
    *(_QWORD *)&v25 = swift_release(v24).n128_u64[0];
    v26 = *(_QWORD *)(v7 + v23);
    if (v26)
    {
      v27 = objc_msgSend(*(id *)(v7 + *v39), "setHidden:", 0, swift_retain(v26).n128_f64[0]);
      Artwork.style.getter(v27);
      ArtworkView.style.setter(v12);
      v28 = swift_release(v26);
    }
    else
    {
      objc_msgSend(*(id *)(v7 + *v39), "setHidden:", 1, v25);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v20 + 56))(v15, 1, 1, v19, v28);
    goto LABEL_12;
  }
  sub_1000194E4(a2, (uint64_t)v18, &qword_1007F6318);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100011088((uint64_t)v18, &qword_1007F6318);
    goto LABEL_4;
  }
  v38 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v38(v22, v18, v19);
  v29 = *a3;
  v30 = *(_QWORD *)(v7 + *a3);
  *(_QWORD *)(v7 + *a3) = a1;
  swift_retain_n(a1, 3);
  *(_QWORD *)&v31 = swift_release(v30).n128_u64[0];
  v32 = *(_QWORD *)(v7 + v29);
  if (v32)
  {
    v33 = objc_msgSend(*(id *)(v7 + *v39), "setHidden:", 0, swift_retain(*(_QWORD *)(v7 + v29)).n128_f64[0]);
    Artwork.style.getter(v33);
    ArtworkView.style.setter(v12);
    swift_release(a1);
  }
  else
  {
    objc_msgSend(*(id *)(v7 + *v39), "setHidden:", 1, v31);
    v32 = a1;
  }
  swift_release(a1);
  v34 = swift_release(v32);
  ((void (*)(char *, char *, uint64_t, __n128))v38)(v15, v22, v19, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v20 + 56))(v15, 0, 1, v19, v35);
LABEL_12:
  v36 = v7 + *v40;
  swift_beginAccess(v36, v41, 33, 0);
  sub_10006C214((uint64_t)v15, v36, &qword_1007F6318);
  *(_QWORD *)&result = swift_endAccess(v41).n128_u64[0];
  return result;
}

uint64_t sub_1000670DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  objc_class *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  id v68;
  NSString v69;
  id v70;
  __n128 v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  NSString v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)();
  uint64_t (**v90)();
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)();
  uint64_t (**v105)();
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)();
  uint64_t (**v119)();
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  objc_class *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  double v132;
  double v133;
  double v134;
  objc_class *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  char *v150;
  __n128 v151;
  uint64_t KeyPath;
  uint64_t v153;
  __n128 v154;
  char *v155;
  uint64_t v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  char *v163;
  uint64_t result;
  uint64_t v165;
  id v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t ObjectType;
  uint64_t v172;
  void *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  objc_class *v183;
  id v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD v191[3];
  _QWORD *v192;
  __int128 v193;
  __int128 v194;
  char v195[8];
  char v196[8];
  char v197[8];

  v6 = v5;
  v172 = a5;
  v167 = a3;
  v189 = a2;
  ObjectType = swift_getObjectType();
  v182 = type metadata accessor for AutomationSemantics(0);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v9 = (char *)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v179 = (char *)&v165 - v11;
  __chkstk_darwin(v12);
  v180 = (char *)&v165 - v13;
  v14 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v175 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v174 = (char *)&v165 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  __chkstk_darwin(v16);
  v170 = (uint64_t)&v165 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v18);
  v168 = (char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = (objc_class *)type metadata accessor for ShelfLayoutContext(0);
  v187 = *((_QWORD *)v183 - 1);
  __chkstk_darwin(v183);
  v185 = v20;
  v186 = (char *)&v165 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v21);
  v169 = (uint64_t)&v165 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (objc_class *)((char *)&v165 - v25);
  v27 = ShelfHeader.eyebrowArtwork.getter(v24);
  ShelfHeader.eyebrowArtworkType.getter();
  sub_100066DD0(v27, (uint64_t)v26, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType);
  swift_release(v27);
  v28 = sub_100011088((uint64_t)v26, &qword_1007F6318);
  v188 = *(id *)&v5[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton];
  v29 = ShelfHeader.eyebrow.getter(v28);
  v31 = v30;
  v32 = (void *)ShelfLayoutContext.traitCollection.getter(v29);
  v33 = ShelfHeader.eyebrowTrailingArtwork.getter();
  v34 = v33;
  v178 = v9;
  v176 = v14;
  if (v33)
  {
    v35 = qword_1007F0F18;
    swift_retain(v33);
    if (v35 != -1)
      swift_once(&qword_1007F0F18, sub_100064D6C);
    v36 = objc_msgSend((id)qword_1007F6190, "configurationWithTraitCollection:", v32);
    v37 = (void *)static SystemImage.load(artwork:with:includePrivateImages:)(v34, v36, 1);
    swift_release(v34);

  }
  else
  {
    v37 = 0;
  }
  v38 = sub_10006B3B4(v29, v31, v32, v37);

  swift_release(v34);
  *(_QWORD *)&v39 = swift_bridgeObjectRelease(v31).n128_u64[0];
  objc_msgSend(v188, "setAttributedTitle:forState:", v38, 0, v39);

  v41 = ShelfHeader.titleArtwork.getter(v40);
  ShelfHeader.titleArtworkType.getter();
  sub_100066DD0(v41, (uint64_t)v26, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkView, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkType);
  swift_release(v41);
  v42 = sub_100011088((uint64_t)v26, &qword_1007F6318);
  v43 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton];
  v44 = ShelfHeader.title.getter(v42);
  v46 = v45;
  v47 = (void *)ShelfLayoutContext.traitCollection.getter(v44);
  v49 = ShelfHeader.titleAction.getter(v47, v48);
  v50 = v49;
  if (v49)
    swift_release(v49);
  v51 = sub_10006B6A4(v44, v46, v47, v50 != 0);

  objc_msgSend(v43, "setAttributedTitle:forState:", v51, 0, swift_bridgeObjectRelease(v46).n128_f64[0]);
  v52 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_subtitleLabel];
  ShelfHeader.subtitle.getter(v53);
  v190 = a4;
  if (v54)
  {
    v56 = v54;
    v57 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v56).n128_u64[0];
  }
  else
  {
    v57 = 0;
  }
  v58 = (uint64_t)v183;
  v177 = v52;
  objc_msgSend(v52, "setText:", v57, v55);

  v61 = ShelfHeader.accessoryAction.getter(v59, v60);
  v62 = sub_10006A644(v61);
  v173 = v43;
  if (v64 == 0xFF)
  {
    v68 = *(id *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton];
    objc_msgSend(v68, "setTitle:forState:", 0, 0);
    goto LABEL_15;
  }
  v65 = v62;
  v66 = v63;
  v67 = v64;
  v68 = *(id *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton];
  if ((v64 & 1) == 0)
  {
    v69 = String._bridgeToObjectiveC()();
    sub_10006B840(v65, v66, v67);
    objc_msgSend(v68, "setTitle:forState:", v69, 0);

LABEL_15:
    v70 = objc_msgSend(v68, "setImage:forState:", 0, 0);
    goto LABEL_19;
  }
  v72 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton], "setTitle:forState:", 0, 0);
  v184 = v68;
  v73 = (void *)ShelfLayoutContext.traitCollection.getter(v72);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F0F70 != -1)
    swift_once(&qword_1007F0F70, sub_100064FEC);
  v74 = type metadata accessor for FontUseCase(0);
  v75 = sub_1000117A8(v74, (uint64_t)qword_1007F6218);
  v166 = (id)static UIFont.preferredFont(forUseWith:compatibleWith:)(v75, v73);
  v76 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v166, 2);
  sub_10006B820(v65, v66, v67);
  v77 = String._bridgeToObjectiveC()();
  sub_10006B840(v65, v66, v67);
  v78 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v77, v76);

  sub_10006B840(v65, v66, v67);
  v68 = v184;
  objc_msgSend(v184, "setImage:forState:", v78, 0);

  v58 = (uint64_t)v183;
LABEL_19:
  v184 = v68;
  v183 = v26;
  v79 = ShelfHeader.titleAction.getter(v70, v71);
  v80 = v167;
  if (v79)
  {
    v81 = v79;
    v82 = swift_allocObject(&unk_100724298, 32, 7);
    *(_QWORD *)(v82 + 24) = v80;
    v83 = swift_unknownObjectWeakInit(v82 + 16);
    v84 = v187;
    v85 = v186;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v187 + 16))(v186, v190, v58, v83);
    v86 = *(unsigned __int8 *)(v84 + 80);
    v87 = (v86 + 24) & ~v86;
    v88 = swift_allocObject(&unk_100724360, v87 + v185, v86 | 7);
    *(_QWORD *)(v88 + 16) = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v88 + v87, v85, v58);
    swift_release(v81);
    v79 = swift_allocObject(&unk_100724388, 32, 7);
    *(_QWORD *)(v79 + 16) = sub_10006C144;
    *(_QWORD *)(v79 + 24) = v88;
    v89 = sub_10006C410;
  }
  else
  {
    v89 = 0;
  }
  v90 = (uint64_t (**)())&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  v92 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  v91 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction + 8];
  *v90 = v89;
  v90[1] = (uint64_t (*)())v79;
  v93 = sub_100019310(v92, v91);
  v95 = ShelfHeader.accessoryAction.getter(v93, v94);
  if (v95)
  {
    v96 = v95;
    v97 = swift_allocObject(&unk_100724298, 32, 7);
    *(_QWORD *)(v97 + 24) = v80;
    v98 = swift_unknownObjectWeakInit(v97 + 16);
    v99 = v187;
    v100 = v186;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v187 + 16))(v186, v190, v58, v98);
    v101 = *(unsigned __int8 *)(v99 + 80);
    v102 = (v101 + 24) & ~v101;
    v103 = swift_allocObject(&unk_100724310, v102 + v185, v101 | 7);
    *(_QWORD *)(v103 + 16) = v97;
    (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v103 + v102, v100, v58);
    swift_release(v96);
    v95 = swift_allocObject(&unk_100724338, 32, 7);
    *(_QWORD *)(v95 + 16) = sub_10006C06C;
    *(_QWORD *)(v95 + 24) = v103;
    v104 = sub_10006C410;
  }
  else
  {
    v104 = 0;
  }
  v105 = (uint64_t (**)())&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction];
  v107 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction];
  v106 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction + 8];
  *v105 = v104;
  v105[1] = (uint64_t (*)())v95;
  v108 = sub_100019310(v107, v106);
  v109 = ShelfHeader.eyebrowAction.getter(v108);
  if (v109)
  {
    v110 = v109;
    v111 = swift_allocObject(&unk_100724298, 32, 7);
    *(_QWORD *)(v111 + 24) = v80;
    v112 = swift_unknownObjectWeakInit(v111 + 16);
    v113 = v187;
    v114 = v186;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v187 + 16))(v186, v190, v58, v112);
    v115 = *(unsigned __int8 *)(v113 + 80);
    v116 = (v115 + 24) & ~v115;
    v117 = swift_allocObject(&unk_1007242C0, v116 + v185, v115 | 7);
    *(_QWORD *)(v117 + 16) = v111;
    (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v117 + v116, v114, v58);
    swift_release(v110);
    v109 = swift_allocObject(&unk_1007242E8, 32, 7);
    *(_QWORD *)(v109 + 16) = sub_10006C038;
    *(_QWORD *)(v109 + 24) = v117;
    v118 = sub_100030368;
  }
  else
  {
    v118 = 0;
  }
  v119 = (uint64_t (**)())&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  v121 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  v120 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction + 8];
  *v119 = v118;
  v119[1] = (uint64_t (*)())v109;
  sub_100019310(v121, v120);
  v122 = (uint64_t)v168;
  ShelfHeader.configuration.getter(v123);
  v124 = type metadata accessor for ShelfHeader.Configuration(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v122, 0, 1, v124);
  v125 = (uint64_t)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration];
  swift_beginAccess(&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration], v195, 33, 0);
  sub_10006B860(v122, v125);
  swift_endAccess(v195);
  sub_100065CA8();
  sub_100011088(v122, &qword_1007FAFE0);
  v126 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork];
  v127 = (uint64_t)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType];
  swift_beginAccess(&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType], v197, 0, 0);
  v128 = v183;
  sub_1000194E4(v127, (uint64_t)v183, &qword_1007F6318);
  v129 = *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork];
  v130 = (uint64_t)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkType];
  swift_beginAccess(&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkType], v196, 0, 0);
  v131 = v169;
  sub_1000194E4(v130, v169, &qword_1007F6318);
  swift_retain(v129);
  swift_retain(v126);
  v132 = sub_10006B8A8();
  v134 = v133;
  v135 = (objc_class *)objc_msgSend(v6, "traitCollection");
  v136 = v170;
  sub_100063AF4(v126, v128, v129, v131, v135, v170, v132, v134);
  swift_release(v126);
  swift_release(v129);

  sub_100011088(v131, &qword_1007F6318);
  sub_100011088((uint64_t)v128, &qword_1007F6318);
  v137 = (uint64_t)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_metrics];
  swift_beginAccess(&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_metrics], v195, 33, 0);
  sub_10006BF4C(v136, v137);
  swift_endAccess(v195);
  v138 = type metadata accessor for ArtworkLoader(0);
  v139 = *(_QWORD *)(v172 + qword_100854050);
  if (!v139)
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v138);
    __break(1u);
    return result;
  }
  v140 = swift_retain(*(_QWORD *)(v172 + qword_100854050));
  sub_100068390(v140);
  v141 = swift_release(v139);
  v143 = ShelfHeader.titleAction.getter(v142, v141);
  v145.n128_u64[0] = swift_release(v143).n128_u64[0];
  if (v143)
  {
    v146 = ShelfHeader.eyebrowAction.getter(v144);
    v145 = swift_release(v146);
    if (!v146)
    {
      v148 = ShelfHeader.accessoryAction.getter(v147, v145);
      if (!v148)
      {
        v149 = 1;
        goto LABEL_34;
      }
      v145.n128_u64[0] = swift_release(v148).n128_u64[0];
    }
  }
  v149 = 0;
LABEL_34:
  v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] = v149;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_containerView], "setUserInteractionEnabled:", v149 ^ 1u, v145.n128_f64[0]);
  v150 = v174;
  ShelfLayoutContext.shelf.getter(v151);
  KeyPath = swift_getKeyPath(&unk_100671870);
  v153 = v176;
  ReadOnlyLens.subscript.getter(KeyPath, v176);
  v154 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v175 + 8))(v150, v153, v154);
  v193 = 0u;
  v194 = 0u;
  v192 = &type metadata for AnyHashable;
  v191[0] = swift_allocObject(&unk_100724270, 56, 7);
  sub_10006BFD4((uint64_t)v195, v191[0] + 16);
  v155 = v179;
  static AutomationSemantics.shelf(_:id:parentId:)(0x726564616568, 0xE600000000000000, &v193, v191);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  v156 = sub_100011088((uint64_t)v191, &qword_1007F6E90);
  v158 = ShelfHeader.titleAction.getter(v156, v157);
  v159 = v158;
  if (v158)
    swift_release(v158);
  *((_QWORD *)&v194 + 1) = &type metadata for Bool;
  LOBYTE(v193) = v159 != 0;
  v160 = v180;
  AutomationSemantics.attribute(key:value:)(0x6F69746341736168, 0xE90000000000006ELL, &v193);
  v161 = *(void (**)(char *, uint64_t))(v181 + 8);
  v162 = v182;
  v161(v155, v182);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v160);
  v161(v160, v162);
  v193 = 0u;
  v194 = 0u;
  v192 = &type metadata for AnyHashable;
  v191[0] = swift_allocObject(&unk_100724270, 56, 7);
  sub_10006BFD4((uint64_t)v195, v191[0] + 16);
  v163 = v178;
  static AutomationSemantics.shelf(_:id:parentId:)(0x42776F7262657965, 0xED00006E6F747475, &v193, v191);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  sub_100011088((uint64_t)v191, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v163);
  v161(v163, v162);
  v193 = 0u;
  v194 = 0u;
  v192 = &type metadata for AnyHashable;
  v191[0] = swift_allocObject(&unk_100724270, 56, 7);
  sub_10006BFD4((uint64_t)v195, v191[0] + 16);
  static AutomationSemantics.shelf(_:id:parentId:)(0x747241656C746974, 0xEC0000006B726F77, &v193, v191);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  sub_100011088((uint64_t)v191, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v163);
  v161(v163, v162);
  v193 = 0u;
  v194 = 0u;
  v192 = &type metadata for AnyHashable;
  v191[0] = swift_allocObject(&unk_100724270, 56, 7);
  sub_10006BFD4((uint64_t)v195, v191[0] + 16);
  static AutomationSemantics.shelf(_:id:parentId:)(0x747542656C746974, 0xEB000000006E6F74, &v193, v191);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  sub_100011088((uint64_t)v191, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v163);
  v161(v163, v162);
  v193 = 0u;
  v194 = 0u;
  v192 = &type metadata for AnyHashable;
  v191[0] = swift_allocObject(&unk_100724270, 56, 7);
  sub_10006BFD4((uint64_t)v195, v191[0] + 16);
  static AutomationSemantics.shelf(_:id:parentId:)(0x726F737365636361, 0xEF6E6F7474754279, &v193, v191);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  sub_100011088((uint64_t)v191, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v163);
  v161(v163, v162);
  v193 = 0u;
  v194 = 0u;
  v192 = &type metadata for AnyHashable;
  v191[0] = swift_allocObject(&unk_100724270, 56, 7);
  sub_10006BFD4((uint64_t)v195, v191[0] + 16);
  static AutomationSemantics.shelf(_:id:parentId:)(0x656C746974627573, 0xE800000000000000, &v193, v191);
  sub_100011088((uint64_t)&v193, &qword_1007F6E90);
  sub_100011088((uint64_t)v191, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v163);
  v161(v163, v162);
  objc_msgSend(v6, "setNeedsLayout");
  return sub_100019370((uint64_t)v195);
}

uint64_t sub_1000682A8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  __n128 v14;
  _BYTE v16[24];

  v5 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 16, v16, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v10 = result;
    v11 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    ShelfLayoutContext.shelf.getter(v13);
    a3(v8, ObjectType, v11);
    v14 = swift_unknownObjectRelease(v10);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v14);
  }
  return result;
}

void sub_100068390(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v2 = v1;
  v3 = type metadata accessor for Artwork.Crop(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork);
  if (v7)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork));
    v9.n128_f64[0] = Artwork.size.getter(v8);
    v10 = v9.n128_f64[0];
    v12 = v11;
    v13 = Artwork.crop.getter(v9);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v15 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, v10, v12);
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView);
    v17 = type metadata accessor for ArtworkView(0);
    v18 = sub_100059C5C();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v15, 2, 1, v16, v17, v18);
    swift_release(v7);
    swift_release(v15);
  }
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork);
  if (v19)
  {
    swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork));
    v21.n128_f64[0] = Artwork.size.getter(v20);
    v22 = v21.n128_f64[0];
    v24 = v23;
    v25 = Artwork.crop.getter(v21);
    v26 = Artwork.Crop.preferredContentMode.getter(v25);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v27 = Artwork.config(_:mode:prefersLayeredImage:)(v26, 0, v22, v24);
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkView);
    v29 = type metadata accessor for ArtworkView(0);
    v30 = sub_100059C5C();
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v27, 2, 1, v28, v29, v30);
    swift_release(v19);
    swift_release(v27);
  }
}

uint64_t sub_10006857C()
{
  return Shelf.id.getter();
}

double sub_10006859C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  objc_class *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  char *v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  char **v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  objc_class *v98;
  double v99;
  uint64_t (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  objc_class *v103;
  double v104;
  char *v105;
  double v106;
  double v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BOOL4 v112;
  void *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  objc_class *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  double v132;
  uint64_t (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  double v136;
  double v137;
  double v138;
  double v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  __n128 v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  void *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t);
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unsigned __int8 v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  unsigned __int8 v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  __n128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  void *v183;
  uint64_t v184;
  _QWORD *v185;
  void *v186;
  void (**v187)(char *, uint64_t);
  void *v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  id v192;
  NSString v193;
  id v194;
  double v195;
  double v196;
  double v197;
  double v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (**v206)(char *, uint64_t);
  _QWORD *v207;
  void (**v208)(char *, uint64_t);
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t v213;
  char *v214;
  char *v215;
  double (*v216)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  void *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (**v241)(char *, uint64_t);
  uint64_t v242;
  objc_class *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  _BYTE v248[40];
  __int128 v249;
  __int128 v250;
  void *v251;
  __int128 v252;
  __int128 v253;
  void *v254;
  _QWORD v255[5];
  __int128 v256;
  __int128 v257;
  void *v258;
  __int128 v259;
  __int128 v260;
  void *v261;
  __int128 v262;
  __int128 v263;
  void *v264;
  uint64_t v265;
  __int128 v266;
  __int128 v267;
  _BYTE v268[56];

  v8 = type metadata accessor for ShelfHeaderLayout(0);
  v9 = __chkstk_darwin(v8);
  v235 = (uint64_t)&v213 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for LabelPlaceholder(0, v9);
  v240 = *(_QWORD *)(v242 - 8);
  v11 = __chkstk_darwin(v242);
  v215 = (char *)&v213 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TextAppearance(0, v11);
  v228 = *(_QWORD *)(v13 - 8);
  v229 = v13;
  __chkstk_darwin(v13);
  v218 = (char *)&v213 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v219 = (char *)&v213 - v16;
  __chkstk_darwin(v17);
  v226 = (char *)&v213 - v18;
  __chkstk_darwin(v19);
  v227 = (char *)&v213 - v20;
  v225 = type metadata accessor for FloatingPointRoundingRule(0);
  v223 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v224 = (char *)&v213 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v22);
  v222 = (uint64_t)&v213 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v246 = (char *)&v213 - v25;
  v26 = type metadata accessor for AspectRatio(0);
  v237 = *(_QWORD *)(v26 - 8);
  v238 = v26;
  __chkstk_darwin(v26);
  v214 = (char *)&v213 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v221 = (char *)&v213 - v29;
  v30 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v30);
  v232 = (char *)&v213 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v220 = (char *)&v213 - v33;
  v230 = type metadata accessor for ShelfHeader.Configuration(0);
  v241 = *(void (***)(char *, uint64_t))(v230 - 8);
  __chkstk_darwin(v230);
  v231 = (char *)&v213 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000DF3C(&qword_1007F6350);
  __chkstk_darwin(v35);
  v234 = (uint64_t)&v213 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v217 = (char *)&v213 - v38;
  __chkstk_darwin(v39);
  v244 = (uint64_t)&v213 - v40;
  v41 = sub_10000DF3C(&qword_1007F6318);
  __chkstk_darwin(v41);
  v43 = (char *)&v213 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (objc_class *)((char *)&v213 - v45);
  v236 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  __chkstk_darwin(v236);
  v239 = (uint64_t)&v213 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v50 = (char *)&v213 - v49;
  v52 = (objc_class *)ShelfLayoutContext.traitCollection.getter(v51);
  v53 = a1;
  v54 = ((uint64_t (*)(void))ShelfHeader.eyebrowArtwork.getter)();
  v55 = ShelfHeader.eyebrowArtworkType.getter();
  v56 = ShelfHeader.titleArtwork.getter(v55);
  v57 = v53;
  ShelfHeader.titleArtworkType.getter();
  v247 = a2;
  v58 = sub_10006B8A8();
  v245 = v50;
  sub_100063AF4(v54, v46, v56, (uint64_t)v43, v52, (uint64_t)v50, v58, v59);
  v60 = v56;
  v61 = v230;
  swift_release(v60);
  swift_release(v54);
  sub_100011088((uint64_t)v43, &qword_1007F6318);
  sub_100011088((uint64_t)v46, &qword_1007F6318);
  v216 = *(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v240 + 56);
  v62.n128_f64[0] = v216(v244, 1, 1, v242);
  v63 = v231;
  v64 = ShelfHeader.configuration.getter(v62);
  LOBYTE(v53) = ShelfHeader.Configuration.includeSeparator.getter(v64);
  v241[1](v63, v61);
  v243 = v52;
  if ((v53 & 1) != 0)
  {
    v65 = static Separator.thickness(compatibleWith:)(v52);
    v66 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
    v67 = LayoutViewPlaceholder.init(representing:)(a3, v65);
    *(_QWORD *)&v267 = v66;
    *((_QWORD *)&v267 + 1) = &protocol witness table for LayoutViewPlaceholder;
  }
  else
  {
    v67 = 0;
    v267 = 0u;
    v266 = 0u;
  }
  v265 = v67;
  v68 = sub_10006C29C((uint64_t)&v265, (uint64_t)v268, &qword_1007FAF60);
  ShelfHeader.eyebrow.getter(v68);
  v70 = v69;
  v71 = swift_bridgeObjectRelease(v69);
  v72 = &selRef_textAlignment;
  v73 = (uint64_t)v246;
  if (v70)
  {
    if (qword_1007F0F50 != -1)
      swift_once(&qword_1007F0F50, sub_100064EAC);
    v74 = (void *)qword_1007F61C8;
    v75 = (uint64_t)v220;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v241[7])(v220, 1, 1, v61);
    v76 = v74;
    v77 = ShelfHeader.eyebrowAction.getter();
    v78 = v77;
    if (v77)
      swift_release(v77);
    v233 = v74;
    sub_10006A748(v76, v75, v78 != 0, (uint64_t)v243);
    v79 = sub_100011088(v75, &qword_1007FAFE0);
    v80 = ShelfHeader.eyebrow.getter(v79);
    v82 = v81;
    v83 = (void *)ShelfLayoutContext.traitCollection.getter(v80);
    v84 = ShelfHeader.eyebrowTrailingArtwork.getter();
    v85 = v84;
    if (v84)
    {
      v86 = v61;
      v87 = qword_1007F0F18;
      swift_retain(v84);
      if (v87 != -1)
        swift_once(&qword_1007F0F18, sub_100064D6C);
      v88 = objc_msgSend((id)qword_1007F6190, "configurationWithTraitCollection:", v83);
      v89 = (void *)static SystemImage.load(artwork:with:includePrivateImages:)(v85, v88, 1);
      swift_release(v85);

      v61 = v86;
    }
    else
    {
      v89 = 0;
    }
    v90 = sub_10006B3B4(v80, v82, v83, v89);

    swift_release(v85);
    v72 = &selRef_textAlignment;
    objc_msgSend(v76, "setAttributedTitle:forState:", v90, 0, swift_bridgeObjectRelease(v82).n128_f64[0]);

    v73 = (uint64_t)v246;
  }
  else
  {
    v233 = 0;
  }
  v91 = ShelfHeader.eyebrowArtwork.getter(v71);
  v93 = swift_release(v91);
  if (!v91)
    goto LABEL_19;
  sub_1000194E4((uint64_t)&v245[*(int *)(v236 + 40)], v73, (uint64_t *)&unk_1007FA760);
  v94 = v237;
  v95 = v238;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v73, 1, v238) == 1)
  {
    v92 = sub_100011088(v73, (uint64_t *)&unk_1007FA760);
LABEL_19:
    v246 = 0;
    goto LABEL_21;
  }
  v96 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 32))(v221, v73, v95);
  v97 = v224;
  static Dimensions.defaultRoundingRule.getter(v96);
  v98 = v243;
  v99 = StaticDimension.value(compatibleWith:rounded:)(v243, v97);
  v100 = *(uint64_t (**)(char *, uint64_t))(v223 + 8);
  v101 = v225;
  v102 = v100(v97, v225);
  static Dimensions.defaultRoundingRule.getter(v102);
  v103 = v98;
  v72 = &selRef_textAlignment;
  v104 = StaticDimension.value(compatibleWith:rounded:)(v103, v97);
  v100(v97, v101);
  v105 = v221;
  v106 = AspectRatio.maxSize(fitting:)(v99, v104);
  v108 = v107;
  v109 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v109, *(unsigned int *)(v109 + 48), *(unsigned __int16 *)(v109 + 52));
  v246 = (char *)LayoutViewPlaceholder.init(representing:)(v106, v108);
  v92 = (*(uint64_t (**)(char *, uint64_t))(v237 + 8))(v105, v238);
LABEL_21:
  v110 = ShelfHeader.titleAction.getter(v92, v93);
  v111 = v110;
  if (v110)
    swift_release(v110);
  if (qword_1007F0F48 != -1)
    swift_once(&qword_1007F0F48, sub_100064E88);
  v112 = v111 != 0;
  v113 = (void *)qword_1007F61C0;
  v114 = ShelfHeader.title.getter();
  v116 = v115;
  v117 = (void *)ShelfLayoutContext.traitCollection.getter(v114);
  v118 = sub_10006B6A4(v114, v116, v117, v112);

  objc_msgSend(v113, v72[16], v118, 0, swift_bridgeObjectRelease(v116).n128_f64[0]);
  v119 = (uint64_t)v232;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v241[7])(v232, 1, 1, v61);
  v241 = (void (**)(char *, uint64_t))v113;
  sub_10006AAA0(v113, v119, v112, (uint64_t)v243);
  v120 = sub_100011088(v119, &qword_1007FAFE0);
  v121 = ShelfHeader.titleArtwork.getter(v120);
  swift_release(v121);
  if (v121)
  {
    v123 = (uint64_t)v245;
    v124 = v222;
    sub_1000194E4((uint64_t)&v245[*(int *)(v236 + 60)], v222, (uint64_t *)&unk_1007FA760);
    v126 = v237;
    v125 = v238;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v124, 1, v238) == 1)
    {
      v122 = sub_100011088(v124, (uint64_t *)&unk_1007FA760);
      v127 = 0;
    }
    else
    {
      v128 = v243;
      v129 = v214;
      v130 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 32))(v214, v124, v125);
      v131 = v224;
      static Dimensions.defaultRoundingRule.getter(v130);
      v132 = StaticDimension.value(compatibleWith:rounded:)(v128, v131);
      v133 = *(uint64_t (**)(char *, uint64_t))(v223 + 8);
      v134 = v225;
      v135 = v133(v131, v225);
      static Dimensions.defaultRoundingRule.getter(v135);
      v136 = StaticDimension.value(compatibleWith:rounded:)(v128, v131);
      v133(v131, v134);
      v137 = AspectRatio.maxSize(fitting:)(v132, v136);
      v139 = v138;
      v140 = type metadata accessor for LayoutViewPlaceholder(0);
      swift_allocObject(v140, *(unsigned int *)(v140 + 48), *(unsigned __int16 *)(v140 + 52));
      v127 = LayoutViewPlaceholder.init(representing:)(v137, v139);
      v141 = v129;
      v123 = (uint64_t)v245;
      v122 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v141, v238);
    }
  }
  else
  {
    v127 = 0;
    v123 = (uint64_t)v245;
  }
  v142 = ShelfHeader.subtitle.getter(v122);
  if (v143)
  {
    v145 = v142;
    v146 = v143;
    v147 = HIBYTE(v143) & 0xF;
    if ((v143 & 0x2000000000000000) == 0)
      v147 = v142 & 0xFFFFFFFFFFFFLL;
    if (v147)
    {
      v238 = v57;
      v148 = v218;
      TextAppearance.init()(v144);
      sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      if (qword_1007F0F68 != -1)
        swift_once(&qword_1007F0F68, sub_100064FD4);
      v149 = type metadata accessor for FontUseCase(0);
      v150 = sub_1000117A8(v149, (uint64_t)qword_1007F6200);
      v151 = (void *)ShelfLayoutContext.traitCollection.getter(v150);
      v152 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v150, v151);

      v153 = v219;
      TextAppearance.withFont(_:)(v152);

      v155 = v228;
      v154 = v229;
      v156 = *(void (**)(char *, uint64_t))(v228 + 8);
      v156(v148, v229);
      v157 = v226;
      TextAppearance.withNumberOfLines(_:)(2);
      v156(v153, v154);
      v158 = v227;
      TextAppearance.withLineBreakMode(_:)(4);
      v156(v157, v154);
      (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v157, v158, v154);
      v159 = LabelPlaceholder.Options.init(rawValue:)(0);
      v160 = (uint64_t)v217;
      LabelPlaceholder.init(_:with:where:)(v145, v146, v157, v159);
      v156(v158, v154);
      v161 = v244;
      sub_100011088(v244, &qword_1007F6350);
      v216(v160, 0, 1, v242);
      v142 = sub_10006C29C(v160, v161, &qword_1007F6350);
      v123 = (uint64_t)v245;
    }
    else
    {
      v144 = swift_bridgeObjectRelease(v143);
    }
  }
  v162 = ShelfHeader.accessoryAction.getter(v142, v144);
  v163 = sub_10006A644(v162);
  if (v165 == 0xFF)
  {
    v264 = 0;
    v262 = 0u;
    v263 = 0u;
    v184 = v240;
    v187 = v241;
    v186 = v233;
  }
  else
  {
    v167 = v163;
    v168 = v164;
    v169 = v165;
    if ((v165 & 1) != 0)
    {
      v238 = v127;
      v188 = (void *)ShelfLayoutContext.traitCollection.getter(v163);
      sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      if (qword_1007F0F70 != -1)
        swift_once(&qword_1007F0F70, sub_100064FEC);
      v189 = type metadata accessor for FontUseCase(0);
      v190 = sub_1000117A8(v189, (uint64_t)qword_1007F6218);
      v191 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v190, v188);
      v192 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v191, 2);
      sub_10006B820(v167, v168, v169);
      v193 = String._bridgeToObjectiveC()();
      sub_10006B840(v167, v168, v169);
      v194 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v193, v192);

      sub_10006B840(v167, v168, v169);
      if (v194)
      {
        objc_msgSend(v194, "size");
        v196 = v195;
        v198 = v197;
        v199 = type metadata accessor for LayoutViewPlaceholder(0);
        swift_allocObject(v199, *(unsigned int *)(v199 + 48), *(unsigned __int16 *)(v199 + 52));
        v200 = LayoutViewPlaceholder.init(representing:)(v196, v198);
        *((_QWORD *)&v263 + 1) = v199;
        v264 = &protocol witness table for LayoutViewPlaceholder;
        *(_QWORD *)&v262 = v200;

      }
      else
      {
        v264 = 0;
        v262 = 0u;
        v263 = 0u;
      }
      v184 = v240;
      v123 = (uint64_t)v245;
      v186 = v233;
      v187 = v241;
      v127 = v238;
    }
    else
    {
      v170 = v226;
      TextAppearance.init()(v166);
      sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
      if (qword_1007F0F70 != -1)
        swift_once(&qword_1007F0F70, sub_100064FEC);
      v171 = type metadata accessor for FontUseCase(0);
      v172 = sub_1000117A8(v171, (uint64_t)qword_1007F6218);
      v173 = (void *)ShelfLayoutContext.traitCollection.getter(v172);
      v174 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v172, v173);

      v175 = v227;
      TextAppearance.withFont(_:)(v174);

      (*(void (**)(char *, uint64_t))(v228 + 8))(v170, v229);
      v176 = LabelPlaceholder.Options.init(rawValue:)(0);
      v177 = v215;
      LabelPlaceholder.init(_:with:where:)(v167, v168, v175, v176);
      LabelPlaceholder.layoutTextView.getter(&v265, v178);
      v179 = v240;
      (*(void (**)(char *, uint64_t))(v240 + 8))(v177, v242);
      v181 = *((_QWORD *)&v267 + 1);
      v180 = v267;
      v182 = sub_100011064(&v265, v267);
      *((_QWORD *)&v263 + 1) = v180;
      v183 = *(void **)(v181 + 8);
      v184 = v179;
      v264 = v183;
      v185 = sub_1000117C0(&v262);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v185, v182, v180);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v265);
      v186 = v233;
      v187 = v241;
      v123 = (uint64_t)v245;
    }
  }
  sub_10006C29C((uint64_t)&v262, (uint64_t)&v265, &qword_1007FAF60);
  sub_10006C258(v123, v239);
  sub_1000194E4((uint64_t)v268, (uint64_t)&v262, &qword_1007FAF60);
  v201 = v186;
  if (v186)
  {
    v202 = v186;
    if ((objc_msgSend(v202, "isHidden") & 1) == 0 && objc_msgSend(v202, "hasContent"))
    {
      v203 = type metadata accessor for DynamicTypeButton(0);
      v261 = &protocol witness table for UIButton;
      *((_QWORD *)&v260 + 1) = v203;
      *(_QWORD *)&v259 = v202;
      goto LABEL_56;
    }

    v201 = v186;
  }
  v186 = v201;
  v261 = 0;
  v259 = 0u;
  v260 = 0u;
LABEL_56:
  v204 = v242;
  if (v246)
  {
    *((_QWORD *)&v257 + 1) = type metadata accessor for LayoutViewPlaceholder(0);
    v258 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v256 = v246;
  }
  else
  {
    v258 = 0;
    v256 = 0u;
    v257 = 0u;
  }
  v255[3] = type metadata accessor for DynamicTypeButton(0);
  v255[4] = &protocol witness table for UIButton;
  v255[0] = v187;
  if (v127)
  {
    *((_QWORD *)&v253 + 1) = type metadata accessor for LayoutViewPlaceholder(0);
    v254 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v252 = v127;
  }
  else
  {
    v254 = 0;
    v252 = 0u;
    v253 = 0u;
  }
  v205 = v234;
  sub_1000194E4(v244, v234, &qword_1007F6350);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v205, 1, v204) == 1)
  {
    swift_retain(v127);
    swift_retain(v246);
    v206 = v187;
    sub_100011088(v205, &qword_1007F6350);
    v249 = 0u;
    v250 = 0u;
    v251 = 0;
  }
  else
  {
    *((_QWORD *)&v250 + 1) = v204;
    v251 = &protocol witness table for LabelPlaceholder;
    v207 = sub_1000117C0(&v249);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v184 + 32))(v207, v205, v204);
    swift_retain(v127);
    swift_retain(v246);
    v208 = v187;
  }
  sub_1000194E4((uint64_t)&v265, (uint64_t)v248, &qword_1007FAF60);
  v209 = v235;
  v210 = ShelfHeaderLayout.init(metrics:separatorView:eyebrowButton:eyebrowImage:titleLabel:titleImage:subtitleLabel:accessoryView:)(v239, (uint64_t)&v262, (uint64_t)&v259, (uint64_t)&v256, v255, (uint64_t)&v252, (uint64_t)&v249, (uint64_t)v248, v235);
  v211 = (void *)ShelfLayoutContext.traitCollection.getter(v210);
  ShelfHeaderLayout.measure(toFit:with:)(v211, a3, a4);
  swift_release(v127);
  swift_release(v246);

  sub_10002F0D4(v209, type metadata accessor for ShelfHeaderLayout);
  sub_100011088((uint64_t)&v265, &qword_1007FAF60);
  sub_100011088((uint64_t)v268, &qword_1007FAF60);
  sub_100011088(v244, &qword_1007F6350);
  sub_10002F0D4(v123, type metadata accessor for ShelfHeaderLayout.Metrics);

  return a3;
}

void sub_100069824(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  double v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  NSSet v19;
  objc_super v20;
  _QWORD aBlock[5];
  uint64_t v22;
  objc_super v23;
  objc_super v24;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] == 1)
  {
    v6 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch;
    v7 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch];
    if (!v7
      || objc_msgSend(v7, "phase") == (id)3
      || (v8 = *(void **)&v2[v6]) != 0 && objc_msgSend(v8, "phase") == (id)4)
    {
      v9 = swift_bridgeObjectRetain(a1);
      v10 = (void *)sub_10055C0E0(v9);
      swift_bridgeObjectRelease(a1);
      if (v10)
      {
        v11 = *(void **)&v2[v6];
        *(_QWORD *)&v2[v6] = v10;
        v12 = v10;

        objc_msgSend(v2, "alpha");
        if (v13 != 0.5)
        {
          v14 = (void *)objc_opt_self(UIView);
          v15 = swift_allocObject(&unk_100724588, 32, 7);
          *(_QWORD *)(v15 + 16) = v2;
          *(_QWORD *)(v15 + 24) = 0x3FE0000000000000;
          aBlock[4] = sub_10006C444;
          v22 = v15;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000BD6CC;
          aBlock[3] = &unk_1007245A0;
          v16 = _Block_copy(aBlock);
          v17 = v22;
          v18 = v2;
          swift_release(v17);
          objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", 4, v16, 0, 0.2, 0.0);
          _Block_release(v16);
        }

        sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
        sub_10006C2E0();
        v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
        objc_msgSendSuper2(&v20, "touchesBegan:withEvent:", v19.super.isa, a2, v2, ObjectType);
      }
      else
      {
        sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
        sub_10006C2E0();
        v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
        v23.receiver = v2;
        v23.super_class = ObjectType;
        objc_msgSendSuper2(&v23, "touchesBegan:withEvent:", v19.super.isa, a2, v20.receiver, v20.super_class);
      }
    }
    else
    {
      sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
      sub_10006C2E0();
      v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
      v24.receiver = v2;
      v24.super_class = ObjectType;
      objc_msgSendSuper2(&v24, "touchesBegan:withEvent:", v19.super.isa, a2, v20.receiver, v20.super_class);
    }
  }
  else
  {
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v25.receiver = v2;
    v25.super_class = ObjectType;
    objc_msgSendSuper2(&v25, "touchesBegan:withEvent:", v19.super.isa, a2, v20.receiver, v20.super_class);
  }

}

void sub_100069AF8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  void *v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  NSSet v19;
  objc_super v20;
  _QWORD aBlock[5];
  uint64_t v22;
  objc_super v23;
  objc_super v24;
  CGPoint v25;
  CGRect v26;

  ObjectType = (objc_class *)swift_getObjectType();
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] != 1)
  {
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v24.receiver = v2;
    v24.super_class = ObjectType;
    objc_msgSendSuper2(&v24, "touchesMoved:withEvent:", v19.super.isa, a2, v20.receiver, v20.super_class);
    goto LABEL_13;
  }
  v6 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch];
  if (!v6)
  {
LABEL_12:
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v23.receiver = v2;
    v23.super_class = ObjectType;
    objc_msgSendSuper2(&v23, "touchesMoved:withEvent:", v19.super.isa, a2, v20.receiver, v20.super_class);
    goto LABEL_13;
  }
  v7 = v6;
  if ((sub_100246510(v7, a1) & 1) == 0)
  {

    goto LABEL_12;
  }
  objc_msgSend(v7, "locationInView:", v2);
  v9 = v8;
  v11 = v10;
  objc_msgSend(v2, "bounds");
  v25.x = v9;
  v25.y = v11;
  if (CGRectContainsPoint(v26, v25))
    v12 = 0.5;
  else
    v12 = 1.0;
  objc_msgSend(v2, "alpha");
  if (v13 != v12)
  {
    v14 = (void *)objc_opt_self(UIView);
    v15 = swift_allocObject(&unk_100724538, 32, 7);
    *(_QWORD *)(v15 + 16) = v2;
    *(double *)(v15 + 24) = v12;
    aBlock[4] = sub_10006C444;
    v22 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100724550;
    v16 = _Block_copy(aBlock);
    v17 = v22;
    v18 = v2;
    swift_release(v17);
    objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", 4, v16, 0, 0.2, 0.0);
    _Block_release(v16);
  }

  sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
  sub_10006C2E0();
  v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSendSuper2(&v20, "touchesMoved:withEvent:", v19.super.isa, a2, v2, ObjectType);
LABEL_13:

}

double sub_100069D8C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
  v10 = sub_10006C2E0();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_100069E24(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  NSSet v16;
  objc_super v17;
  _QWORD aBlock[5];
  uint64_t v19;
  objc_super v20;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] != 1)
  {
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v21.receiver = v2;
    v21.super_class = ObjectType;
    objc_msgSendSuper2(&v21, "touchesCancelled:withEvent:", v16.super.isa, a2, v17.receiver, v17.super_class);
    goto LABEL_10;
  }
  v6 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch;
  v7 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch];
  if (!v7)
  {
LABEL_9:
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v20.receiver = v2;
    v20.super_class = ObjectType;
    objc_msgSendSuper2(&v20, "touchesCancelled:withEvent:", v16.super.isa, a2, v17.receiver, v17.super_class);
    goto LABEL_10;
  }
  v8 = v7;
  if ((sub_100246510(v8, a1) & 1) == 0)
  {

    goto LABEL_9;
  }
  v9 = *(void **)&v2[v6];
  *(_QWORD *)&v2[v6] = 0;

  objc_msgSend(v2, "alpha");
  if (v10 != 1.0)
  {
    v11 = (void *)objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1007244E8, 32, 7);
    *(_QWORD *)(v12 + 16) = v2;
    *(_QWORD *)(v12 + 24) = 0x3FF0000000000000;
    aBlock[4] = sub_10006C444;
    v19 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_100724500;
    v13 = _Block_copy(aBlock);
    v14 = v19;
    v15 = v2;
    swift_release(v14);
    objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 4, v13, 0, 0.2, 0.0);
    _Block_release(v13);
  }

  sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
  sub_10006C2E0();
  v16.super.isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSendSuper2(&v17, "touchesCancelled:withEvent:", v16.super.isa, a2, v2, ObjectType);
LABEL_10:

}

void sub_10006A078(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  void (*v21)(__n128);
  uint64_t v22;
  __n128 v23;
  NSSet v24;
  objc_super v25;
  _QWORD aBlock[5];
  uint64_t v27;
  objc_super v28;
  objc_super v29;
  CGPoint v30;
  CGRect v31;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] != 1)
  {
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v29.receiver = v3;
    v29.super_class = ObjectType;
    objc_msgSendSuper2(&v29, "touchesEnded:withEvent:", v24.super.isa, a2, v25.receiver, v25.super_class);
    goto LABEL_13;
  }
  v7 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch;
  v8 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch];
  if (!v8)
  {
LABEL_12:
    sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
    sub_10006C2E0();
    v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v28.receiver = v3;
    v28.super_class = ObjectType;
    objc_msgSendSuper2(&v28, "touchesEnded:withEvent:", v24.super.isa, a2, v25.receiver, v25.super_class);
    goto LABEL_13;
  }
  v9 = v8;
  if ((sub_100246510(v9, a1) & 1) == 0)
  {

    goto LABEL_12;
  }
  v10 = *(void **)&v3[v7];
  *(_QWORD *)&v3[v7] = 0;

  objc_msgSend(v3, "alpha");
  if (v11 != 1.0)
  {
    v12 = (void *)objc_opt_self(UIView);
    v13 = swift_allocObject(&unk_100724498, 32, 7);
    *(_QWORD *)(v13 + 16) = v3;
    *(_QWORD *)(v13 + 24) = 0x3FF0000000000000;
    aBlock[4] = sub_10006C35C;
    v27 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BD6CC;
    aBlock[3] = &unk_1007244B0;
    v14 = _Block_copy(aBlock);
    v15 = v27;
    v16 = v3;
    swift_release(v15);
    objc_msgSend(v12, "animateWithDuration:delay:options:animations:completion:", 4, v14, 0, 0.2, 0.0);
    _Block_release(v14);
  }
  objc_msgSend(v9, "locationInView:", v3);
  v18 = v17;
  v20 = v19;
  objc_msgSend(v3, "bounds");
  v30.x = v18;
  v30.y = v20;
  if (CGRectContainsPoint(v31, v30))
  {
    v21 = *(void (**)(__n128))&v3[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
    if (v21)
    {
      v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction + 8];
      v23 = swift_retain(v22);
      v21(v23);
      sub_100019310((uint64_t)v21, v22);
    }
  }

  sub_100019574(0, (unint64_t *)&qword_100801570, UITouch_ptr);
  sub_10006C2E0();
  v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSendSuper2(&v25, "touchesEnded:withEvent:", v24.super.isa, a2, v3, ObjectType);
LABEL_13:

}

uint64_t sub_10006A4A8()
{
  return type metadata accessor for ShelfHeaderView(0);
}

uint64_t type metadata accessor for ShelfHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F62F8;
  if (!qword_1007F62F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShelfHeaderView);
  return result;
}

void sub_10006A4EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];
  uint64_t v9;
  char *v10;
  char *v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;

  v2 = type metadata accessor for ShelfHeaderLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[4] = "\b";
    sub_10006A5F8(319, &qword_1007F6308, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfHeader.ArtworkType);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = (char *)&value witness table for Builtin.UnknownObject + 64;
      v11 = (char *)&value witness table for Builtin.UnknownObject + 64;
      v12 = "\b";
      v13 = v9;
      v14 = (char *)&value witness table for Builtin.UnknownObject + 64;
      v15 = (char *)&value witness table for Builtin.UnknownObject + 64;
      v16 = &unk_100671840;
      v17 = &unk_100671840;
      v18 = &unk_100671840;
      v19 = (char *)&value witness table for Builtin.UnknownObject + 64;
      sub_10006A5F8(319, &qword_1007F6310, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfHeader.Configuration);
      if (v7 <= 0x3F)
      {
        v20 = *(_QWORD *)(v6 - 8) + 64;
        v21 = &unk_100671858;
        v22 = "\b";
        swift_updateClassMetadata2(a1, 256, 19, v8, a1 + 80);
      }
    }
  }
}

void sub_10006A5F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_10006A644(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!a1)
    return 0;
  swift_retain(a1);
  v2 = Action.title.getter();
  v4 = v3;
  swift_release(a1);
  if (v4)
  {
    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      swift_release(a1);
      return v2;
    }
    swift_bridgeObjectRelease(v4);
  }
  v6 = swift_retain(a1);
  v7 = Action.artwork.getter(v6);
  v8 = swift_release(a1);
  if (!v7)
  {
    swift_release(a1);
    return 0;
  }
  v2 = dispatch thunk of Artwork.systemImageName.getter(v8);
  v10 = v9;
  swift_release(v7);
  swift_release(a1);
  if (!v10)
    return 0;
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease(v10);
    return 0;
  }
  return v2;
}

uint64_t sub_10006A748(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _BYTE v34[4];
  int v35;
  void *v36;

  v35 = a3;
  v36 = a1;
  v6 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v6);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_10000DF3C((uint64_t *)&unk_100818C20);
  __chkstk_darwin(v9);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v12);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for UIButton.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = static UIButton.Configuration.plain()(v19);
  UIButton.Configuration.titlePadding.setter(v20, 0.0);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  sub_1000194E4(a2, (uint64_t)v14, &qword_1007FAFE0);
  v21 = type metadata accessor for ShelfHeader.Configuration(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21) == 1)
  {
    sub_100011088((uint64_t)v14, &qword_1007FAFE0);
  }
  else
  {
    v23 = ShelfHeader.Configuration.eyebrowColor.getter();
    (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v14, v21);
    if (v23)
      goto LABEL_7;
  }
  if (qword_1007F0F78 != -1)
    swift_once(&qword_1007F0F78, sub_100065088);
  v23 = qword_1007F6230;
  v24 = (id)qword_1007F6230;
LABEL_7:
  UIButton.Configuration.baseForegroundColor.setter(v23);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F0F58 != -1)
    swift_once(&qword_1007F0F58, sub_100064FA4);
  v25 = type metadata accessor for FontUseCase(0);
  v26 = sub_1000117A8(v25, (uint64_t)qword_1007F61D0);
  v27 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v26, a4);
  v28 = swift_allocObject(&unk_100724470, 24, 7);
  *(_QWORD *)(v28 + 16) = v27;
  v29 = v27;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10006C40C, v28);
  v30 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 0, 1, v30);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v11);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v8, v18, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  v31 = v36;
  UIButton.configuration.setter(v8);
  v32 = v35 & 1;
  objc_msgSend(v31, "setUserInteractionEnabled:", v32);
  objc_msgSend(v31, "_setWantsAccessibilityUnderline:", v32);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_10006AAA0(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;

  v34 = a4;
  v35 = a3;
  v6 = sub_10000DF3C(&qword_100804D10);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_100818C20);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C(&qword_1007FAFE0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UIButton.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = static UIButton.Configuration.plain()(v19);
  UIButton.Configuration.titlePadding.setter(v20, 0.0);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  sub_1000194E4(a2, (uint64_t)v14, &qword_1007FAFE0);
  v21 = type metadata accessor for ShelfHeader.Configuration(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21);
  if ((_DWORD)v23 == 1)
  {
    sub_100011088((uint64_t)v14, &qword_1007FAFE0);
  }
  else
  {
    v24 = ShelfHeader.Configuration.titleColor.getter(v23);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v21);
    if (v24)
      goto LABEL_7;
  }
  if (qword_1007F0F80 != -1)
    swift_once(&qword_1007F0F80, sub_10006509C);
  v24 = qword_1007F6238;
  v25 = (id)qword_1007F6238;
LABEL_7:
  UIButton.Configuration.baseForegroundColor.setter(v24);
  sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  if (qword_1007F0F60 != -1)
    swift_once(&qword_1007F0F60, sub_100064FBC);
  v26 = type metadata accessor for FontUseCase(0);
  v27 = sub_1000117A8(v26, (uint64_t)qword_1007F61E8);
  v28 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v27, v34);
  v29 = swift_allocObject(&unk_100724448, 24, 7);
  *(_QWORD *)(v29 + 16) = v28;
  v30 = v28;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10006C40C, v29);
  v31 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 0, 1, v31);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v11);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v18, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  UIButton.configuration.setter(v8);
  objc_msgSend(a1, "setNeedsUpdateConfiguration");
  objc_msgSend(a1, "setContentHorizontalAlignment:", 4);
  v32 = v35 & 1;
  objc_msgSend(a1, "setUserInteractionEnabled:", v32);
  objc_msgSend(a1, "_setWantsAccessibilityUnderline:", v32);

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_10006AE18()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  objc_class *ObjCClassFromMetadata;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[5];

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  __chkstk_darwin(v2);
  v50 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v4);
  v47 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontUseCase(0);
  v51 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Separator.Position(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Separator(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_containerView;
  *(_QWORD *)&v1[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_separatorView;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Separator.Position.top(_:), v10);
  v52[3] = type metadata accessor for ZeroDimension(0);
  v52[4] = &protocol witness table for ZeroDimension;
  sub_1000117C0(v52);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v13, v52, 0.0, 0.0);
  v20 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = &v20[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator];
  v22 = swift_beginAccess(&v20[OBJC_IVAR____TtC22SubscribePageExtension13SeparatorView_separator], v52, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v15 + 40))(v21, v17, v14, v22);
  swift_endAccess(v52);
  *(_QWORD *)&v1[v19] = v20;
  v23 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowButton;
  type metadata accessor for DynamicTypeButton(0);
  if (qword_1007F0F58 != -1)
    swift_once(&qword_1007F0F58, sub_100064FA4);
  v24 = sub_1000117A8(v6, (uint64_t)qword_1007F61D0);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v25(v9, v24, v6);
  *(_QWORD *)&v1[v23] = DynamicTypeButton.__allocating_init(useCase:)(v9);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtwork] = 0;
  v26 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkType];
  v27 = type metadata accessor for ShelfHeader.ArtworkType(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v29 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowArtworkView;
  v30 = type metadata accessor for ArtworkView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v30);
  *(_QWORD *)&v1[v29] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v32 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleButton;
  if (qword_1007F0F60 != -1)
    swift_once(&qword_1007F0F60, sub_100064FBC);
  v33 = sub_1000117A8(v6, (uint64_t)qword_1007F61E8);
  v25(v9, v33, v6);
  *(_QWORD *)&v1[v32] = DynamicTypeButton.__allocating_init(useCase:)(v9);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtwork] = 0;
  v28(&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkType], 1, 1, v27);
  v34 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleArtworkView;
  *(_QWORD *)&v1[v34] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v35 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryButton;
  if (qword_1007F0F70 != -1)
    swift_once(&qword_1007F0F70, sub_100064FEC);
  v36 = sub_1000117A8(v6, (uint64_t)qword_1007F6218);
  v25(v9, v36, v6);
  *(_QWORD *)&v1[v35] = DynamicTypeButton.__allocating_init(useCase:)(v9);
  v37 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction];
  *v37 = 0;
  v37[1] = 0;
  v38 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction];
  *v38 = 0;
  v38[1] = 0;
  v39 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction];
  *v39 = 0;
  v39[1] = 0;
  v40 = OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_subtitleLabel;
  if (qword_1007F0F68 != -1)
    swift_once(&qword_1007F0F68, sub_100064FD4);
  v41 = sub_1000117A8(v6, (uint64_t)qword_1007F6200);
  v42 = v47;
  v25(v47, v41, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v42, 0, 1, v6);
  v43 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v50, enum case for DirectionalTextAlignment.none(_:), v49);
  v44 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v40] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v42, 2, 4, 0, 0, v43, 0, 0);
  v45 = &v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_configuration];
  v46 = type metadata accessor for ShelfHeader.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
  v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_shouldHighlightEntireView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_currentTouch] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ShelfHeaderView.swift", 44, 2, 238, 0);
  __break(1u);
}

id sub_10006B3B4(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  unint64_t v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  id v19;

  if (a2)
    v8 = a2;
  else
    v8 = 0xE000000000000000;
  v9 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(a2);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithString:", v10, swift_bridgeObjectRelease(v8).n128_f64[0]);

  if (a4)
  {
    v12 = (void *)objc_opt_self(NSTextAttachment);
    v13 = a4;
    v14 = objc_msgSend(v12, "textAttachmentWithImage:", v13);
    v15 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v14);

    if (!a2)
      goto LABEL_13;
    v16 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v16 = a1 & 0xFFFFFFFFFFFFLL;
    if (v16)
    {
      v17 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
      if (objc_msgSend(a3, "layoutDirection"))
      {
        if (qword_1007F0F28 != -1)
          swift_once(&qword_1007F0F28, sub_100064DC0);
        v18 = &qword_1007F61A0;
      }
      else
      {
        if (qword_1007F0F20 != -1)
          swift_once(&qword_1007F0F20, sub_100064DA8);
        v18 = &qword_1007F6198;
      }
      objc_msgSend(v17, "appendAttributedString:", *v18);
      if (qword_1007F0F30 != -1)
        swift_once(&qword_1007F0F30, sub_100064DD8);
      objc_msgSend(v17, "appendAttributedString:", qword_1007F61A8);
      objc_msgSend(v17, "appendAttributedString:", v11);
      if (qword_1007F0F38 != -1)
        swift_once(&qword_1007F0F38, sub_100064DF0);
      objc_msgSend(v17, "appendAttributedString:", qword_1007F61B0);
      if (qword_1007F0F40 != -1)
        swift_once(&qword_1007F0F40, sub_100064E08);
      objc_msgSend(v17, "appendAttributedString:", qword_1007F61B8);
      objc_msgSend(v17, "appendAttributedString:", v15);
      objc_msgSend(v17, "appendAttributedString:", qword_1007F61B0);
      v19 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "initWithAttributedString:", v17);

      v11 = v15;
      v15 = v19;
    }
    else
    {
LABEL_13:
      v17 = v13;
    }

    return v15;
  }
  return v11;
}

id sub_10006B6A4(uint64_t a1, unint64_t a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;

  v8 = type metadata accessor for SystemImage(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  if ((a4 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for SystemImage.chevronForward(_:), v8, v10);
    if (qword_1007F0F18 != -1)
      swift_once(&qword_1007F0F18, sub_100064D6C);
    v14 = objc_msgSend((id)qword_1007F6190, "configurationWithTraitCollection:", a3);
    v15 = (void *)static SystemImage.load(_:with:)(v12, v14);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v13 = objc_msgSend(v15, "imageWithTintColor:", v16);

  }
  v17 = sub_10006B3B4(a1, a2, a3, v13);

  return v17;
}

uint64_t sub_10006B820(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_10006B838(a1, a2);
  return a1;
}

uint64_t sub_10006B838(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

uint64_t sub_10006B840(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_10006B858(a1, a2);
  return a1;
}

uint64_t sub_10006B858(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10006B860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007FAFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_10006B8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t KeyPath;
  __n128 v23;
  double (*v24)(char *, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;
  uint64_t (*v34)(id *, uint64_t);
  int v35;
  int v36;
  char *v37;
  uint64_t v38;
  int v39;
  int *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  int v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  double top;
  id *v55;
  int v56;
  char *v57;
  uint64_t v58;
  int *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  id *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id *v74;

  v71 = sub_10000DF3C(&qword_1007F6328);
  __chkstk_darwin(v71);
  v74 = (id *)((char *)&v69 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  v1 = sub_10000DF3C(&qword_1007F4A68);
  __chkstk_darwin(v1);
  v3 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v69 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - v8;
  v10 = sub_10000DF3C(&qword_1007F6330);
  __chkstk_darwin(v10);
  v69 = (id *)((char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v70 = (char *)&v69 - v13;
  v14 = type metadata accessor for ShelfBackground(0);
  v72 = *(_QWORD *)(v14 - 8);
  v73 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v19);
  KeyPath = swift_getKeyPath(&unk_1006718A0);
  ReadOnlyLens.subscript.getter(KeyPath, v17);
  v23 = swift_release(KeyPath);
  v24 = *(double (**)(char *, uint64_t, __n128))(v18 + 8);
  v25.n128_f64[0] = v24(v21, v17, v23);
  ShelfLayoutContext.surroundingShelves.getter(v6, v3, v25);
  sub_100011088((uint64_t)v3, &qword_1007F4A68);
  sub_10006C29C((uint64_t)v6, (uint64_t)v9, &qword_1007F4A68);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_100011088((uint64_t)v9, &qword_1007F4A68);
    v26 = 1;
    v27 = (uint64_t)v70;
  }
  else
  {
    v28 = swift_getKeyPath(&unk_1006718A0);
    v27 = (uint64_t)v70;
    ReadOnlyLens.subscript.getter(v28, v17);
    v29 = swift_release(v28);
    v24(v9, v17, v29);
    v26 = 0;
  }
  v31 = v72;
  v30 = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v27, v26, 1, v73);
  v32 = v74;
  v33 = (uint64_t)v74 + *(int *)(v71 + 48);
  (*(void (**)(id *, char *, uint64_t))(v31 + 32))(v74, v16, v30);
  sub_10006C29C(v27, v33, &qword_1007F6330);
  v34 = *(uint64_t (**)(id *, uint64_t))(v31 + 88);
  v35 = v34(v32, v30);
  v36 = enum case for ShelfBackground.color(_:);
  if (v35 != enum case for ShelfBackground.color(_:))
  {
    v39 = enum case for ShelfBackground.gradient(_:);
    if (v35 == enum case for ShelfBackground.gradient(_:))
    {
      (*(void (**)(id *, uint64_t))(v31 + 96))(v32, v30);
      swift_bridgeObjectRelease(*v32);
      v40 = (int *)sub_10000DF3C(&qword_1007F6338);
      v41 = (char *)v32 + v40[12];
      v42 = (char *)v32 + v40[16];
      v43 = (char *)v32 + v40[20];
      v44 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
      v45 = type metadata accessor for ShelfBackgroundGradientLocation(0);
      v46 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
      v46(v42, v45);
      v46(v41, v45);
      goto LABEL_10;
    }
    v47 = enum case for ShelfBackground.materialGradient(_:);
    if (v35 == enum case for ShelfBackground.materialGradient(_:))
    {
      (*(void (**)(id *, uint64_t))(v31 + 96))(v32, v30);
      v48 = (char *)v32 + *(int *)(sub_10000DF3C(&qword_1007F6340) + 48);
      v49 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      v50 = type metadata accessor for ShelfBackgroundMaterialGradientColors(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v32, v50);
      goto LABEL_10;
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v30) == 1)
    {
LABEL_14:
      top = UIEdgeInsetsZero.top;
      sub_100011088((uint64_t)v32, &qword_1007F6328);
      return top;
    }
    v55 = v69;
    sub_1000194E4(v33, (uint64_t)v69, &qword_1007F6330);
    v56 = v34(v55, v30);
    if (v56 == v36)
    {
      (*(void (**)(id *, uint64_t))(v31 + 96))(v55, v30);

      v57 = (char *)v55 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
      v58 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
    }
    else if (v56 == v39)
    {
      (*(void (**)(id *, uint64_t))(v31 + 96))(v55, v30);
      swift_bridgeObjectRelease(*v55);
      v59 = (int *)sub_10000DF3C(&qword_1007F6338);
      v60 = (char *)v55 + v59[12];
      v61 = (char *)v55 + v59[16];
      v62 = (char *)v55 + v59[20];
      v63 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
      v64 = type metadata accessor for ShelfBackgroundGradientLocation(0);
      v65 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v64 - 8) + 8);
      v65(v61, v64);
      v65(v60, v64);
    }
    else
    {
      if (v56 != v47)
      {
        (*(void (**)(id *, uint64_t))(v31 + 8))(v55, v30);
        goto LABEL_14;
      }
      (*(void (**)(id *, uint64_t))(v31 + 96))(v55, v30);
      v66 = (char *)v55 + *(int *)(sub_10000DF3C(&qword_1007F6340) + 48);
      v67 = type metadata accessor for ShelfBackgroundStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
      v68 = type metadata accessor for ShelfBackgroundMaterialGradientColors(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v55, v68);
    }
    sub_100011088(v33, &qword_1007F6330);
    (*(void (**)(id *, uint64_t))(v31 + 8))(v32, v30);
    goto LABEL_11;
  }
  (*(void (**)(id *, uint64_t))(v31 + 96))(v32, v30);

  v37 = (char *)v32 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
  v38 = type metadata accessor for ShelfBackgroundStyle(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
LABEL_10:
  sub_100011088(v33, &qword_1007F6330);
LABEL_11:
  v51.n128_u64[0] = 16.0;
  v52.n128_u64[0] = 0;
  return static UIEdgeInsets.vertical(top:bottom:)(v51, v52);
}

uint64_t sub_10006BF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006BF90()
{
  return Shelf.id.getter();
}

uint64_t sub_10006BFB0()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006BFD4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_10006C010()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006C038()
{
  return sub_10006C078((void (*)(char *, uint64_t, uint64_t))&dispatch thunk of SelectablePagePresenter.didSelectEyebrow(for:));
}

uint64_t sub_10006C044()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006C06C()
{
  return sub_10006C078((void (*)(char *, uint64_t, uint64_t))&dispatch thunk of SelectablePagePresenter.didSelectAccessory(for:));
}

uint64_t sub_10006C078(void (*a1)(char *, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfLayoutContext(0) - 8) + 80);
  return sub_1000682A8(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_10006C0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ShelfLayoutContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10006C144()
{
  return sub_10006C078((void (*)(char *, uint64_t, uint64_t))&dispatch thunk of SelectablePagePresenter.didSelectTitle(for:));
}

uint64_t sub_10006C150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006C198()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006C1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;

  return sub_100066D34(a1, *(void **)(v3 + 16), a2, a3);
}

uint64_t sub_10006C1E0()
{
  return 8;
}

uint64_t sub_10006C1EC(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10006C1F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10006C208(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10006C214(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000DF3C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006C258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShelfHeaderLayout.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006C29C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000DF3C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10006C2E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007FBDD0;
  if (!qword_1007FBDD0)
  {
    v1 = sub_100019574(255, (unint64_t *)&qword_100801570, UITouch_ptr);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1007FBDD0);
  }
  return result;
}

uint64_t sub_10006C338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10006C35C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", *(double *)(v0 + 24));
}

uint64_t sub_10006C370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006C380(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006C388()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006C3AC(uint64_t a1)
{
  uint64_t v1;

  sub_100065C18(a1, v1, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_titleAction);
}

void sub_10006C3CC(uint64_t a1)
{
  uint64_t v1;

  sub_100065C18(a1, v1, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_accessoryAction);
}

void sub_10006C3EC(uint64_t a1)
{
  uint64_t v1;

  sub_100065C18(a1, v1, &OBJC_IVAR____TtC22SubscribePageExtension15ShelfHeaderView_eyebrowAction);
}

id sub_10006C478()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double Width;
  double v17;
  double v18;
  double v19;
  double v20;
  double Height;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = v0;
  v2 = objc_msgSend(v0, "window");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

  }
  else
  {
    objc_msgSend(v0, "bounds");
    v5 = v12;
    v7 = v13;
    v9 = v14;
    v11 = v15;
  }
  v30.origin.x = v5;
  v30.origin.y = v7;
  v30.size.width = v9;
  v30.size.height = v11;
  Width = CGRectGetWidth(v30);
  objc_msgSend(v1, "bounds");
  v17 = *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_navigationBarMargins]
      - (Width - CGRectGetWidth(v31)) * 0.5;
  objc_msgSend(v1, "bounds");
  v18 = CGRectGetWidth(v32);
  v19 = 0.0;
  if (v17 > 0.0)
    v19 = v17 + v17;
  v20 = v18 - v19;
  objc_msgSend(v1, "bounds");
  Height = CGRectGetHeight(v33);
  v22 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContext];
  v23 = CustomLayoutView.sizeThatFits(_:)(v20, Height);
  v25 = v24;
  objc_msgSend(v1, "bounds");
  v27 = (v26 - v23) * 0.5;
  objc_msgSend(v1, "safeAreaInsets");
  return objc_msgSend(v22, "setFrame:", v27, v28+ *(double *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContextTopPadding], v23, v25);
}

uint64_t type metadata accessor for ContextualContentUnavailableView()
{
  return objc_opt_self(_TtC22SubscribePageExtension32ContextualContentUnavailableView);
}

char *sub_10006C708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  char *v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  objc_class *ObjectType;
  uint64_t v43;
  uint64_t v44;
  objc_super v45;

  v4 = v3;
  v43 = a3;
  v44 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SearchResultsContextCardView.Style(0);
  __chkstk_darwin(v9);
  v11 = (double *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContext;
  v13 = qword_1007F1540;
  v14 = v4;
  if (v13 != -1)
    swift_once(&qword_1007F1540, sub_1001B3EEC);
  v15 = sub_1000117A8(v9, (uint64_t)qword_1008523C8);
  sub_10006CAC0(v15, (uint64_t)v11);
  v16 = objc_allocWithZone((Class)type metadata accessor for SearchResultsContextCardView(0));
  *(_QWORD *)&v4[v12] = sub_1001B4698(v11);
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_navigationBarMargins] = 0x4034000000000000;
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContextTopPadding] = 0x4030000000000000;
  sub_100019574(0, &qword_1007F63A0, UIContentUnavailableView_ptr);
  v17 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v44, v5);
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_emptyReason] = UIContentUnavailableView.init(configuration:)(v8);

  v45.receiver = v14;
  v45.super_class = ObjectType;
  v41 = (char *)objc_msgSendSuper2(&v45, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  ObjectType = (objc_class *)OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContext;
  v18 = *(void **)&v41[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContext];
  v19 = v41;
  v20 = v18;
  v22 = SearchResultsContextCard.message.getter(v21);
  v23 = SearchResultsContextCard.action.getter();
  v24 = v17;
  if (v23)
  {
    v25 = v23;
    swift_retain(v43);
    v26 = swift_retain(v25);
    v27 = Action.title.getter(v26);
    if (v28)
      v29 = v27;
    else
      v29 = 0;
    if (v28)
      v30 = v28;
    else
      v30 = 0xE000000000000000;
    v31 = Action.artwork.getter(v27);
    v39 = v30;
    v40 = v24;
    if (v31)
    {
      v32 = v31;
      v33 = dispatch thunk of Artwork.isSystemImage.getter(v31);
      if ((v33 & 1) != 0)
      {
        v34 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v32, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter(v33) & 1) != 0)
      {
        v34 = sub_100485648(v32, 0);
      }
      else
      {
        v34 = 0;
      }
      v36 = v41;
      swift_release(v32);
    }
    else
    {
      v34 = 0;
      v36 = v41;
    }
    sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
    v37 = swift_allocObject(&unk_100724620, 32, 7);
    *(_QWORD *)(v37 + 16) = v43;
    *(_QWORD *)(v37 + 24) = v25;
    v35 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v29, v39, 0, 0, v34, 0, 0, 0, 0, 0, 0, sub_10006CB30, v37);
    swift_release(v25);
    v24 = v40;
  }
  else
  {
    v35 = 0;
    v36 = v41;
  }
  sub_1001B3DA4(v22, v35);

  swift_release(v22);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_emptyReason]);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)((char *)ObjectType + (_QWORD)v36));
  objc_msgSend(v19, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);

  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v44, v5);
  return v19;
}

uint64_t sub_10006CAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResultsContextCardView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006CB04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006CB30(uint64_t a1)
{
  uint64_t v1;

  return sub_10008E7FC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10006CB38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for SearchResultsContextCardView.Style(0);
  __chkstk_darwin(v2);
  v4 = (double *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContext;
  if (qword_1007F1540 != -1)
    swift_once(&qword_1007F1540, sub_1001B3EEC);
  v6 = sub_1000117A8(v2, (uint64_t)qword_1008523C8);
  sub_10006CAC0(v6, (uint64_t)v4);
  v7 = objc_allocWithZone((Class)type metadata accessor for SearchResultsContextCardView(0));
  *(_QWORD *)&v1[v5] = sub_1001B4698(v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_navigationBarMargins] = 0x4034000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32ContextualContentUnavailableView_queryContextTopPadding] = 0x4030000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ContextualContentUnavailableView.swift", 61, 2, 42, 0);
  __break(1u);
}

unint64_t sub_10006CC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  double v7;
  id v8;
  NSString *v9;
  id v10;
  NSString *v11;
  id v12;
  NSString *v13;
  id v14;
  _BYTE v16[152];

  v1 = sub_10000DF3C(&qword_1007FC280);
  inited = swift_initStackObject(v1, v16);
  *(_OWORD *)(inited + 16) = xmmword_10066F860;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v3 = *(void **)v0;
  v4 = sub_100019574(0, (unint64_t *)&qword_1007F5440, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  v5 = *(void **)(v0 + 16);
  v6 = sub_100019574(0, &qword_1007F67F8, NSParagraphStyle_ptr);
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 104) = v6;
  *(_QWORD *)(inited + 112) = NSBaselineOffsetAttributeName;
  v7 = *(double *)(v0 + 8);
  v8 = objc_allocWithZone((Class)NSNumber);
  v9 = NSFontAttributeName;
  v10 = v3;
  v11 = NSParagraphStyleAttributeName;
  v12 = v5;
  v13 = NSBaselineOffsetAttributeName;
  v14 = objc_msgSend(v8, "initWithDouble:", v7);
  *(_QWORD *)(inited + 144) = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
  *(_QWORD *)(inited + 120) = v14;
  return sub_1003699BC(inited);
}

double sub_10006CDA4()
{
  return 15.0;
}

char *sub_10006CDB8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  objc_super v30;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v5[qword_100850FE0];
  v15 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&v5[qword_100850FE8] = 0;
  *(_QWORD *)&v5[qword_100850FF0] = 0;
  v16 = &v5[qword_1007F63A8];
  v17 = (void *)objc_opt_self(UIFont);
  v18 = v5;
  v19 = objc_msgSend(v17, "systemFontOfSize:weight:", 43.0, UIFontWeightHeavy);
  v20 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v20, "setMinimumLineHeight:", 35.99);
  objc_msgSend(v20, "setMaximumLineHeight:", 36.0);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = 0xC01C000000000000;
  *((_QWORD *)v16 + 2) = v20;
  *(_OWORD *)(v16 + 24) = xmmword_100671990;
  *((_QWORD *)v16 + 5) = 0x405D800000000000;
  v18[qword_1007F63B0] = 0;
  *(_QWORD *)&v18[qword_1007F63B8] = 0;

  v30.receiver = v18;
  v30.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  v22 = *(void **)&v21[qword_100852D38];
  v23 = type metadata accessor for FontUseCase(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
  v24 = v21;
  v25 = v22;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);

  objc_msgSend(*(id *)&v24[qword_100852D30], "setHidden:", 1);
  v26 = objc_msgSend(v24, "contentView");
  v27 = objc_msgSend(v26, "layer");

  objc_msgSend(v27, "setMaskedCorners:", 15);
  v28 = objc_msgSend(v24, "contentView");
  objc_msgSend(v28, "_setContinuousCornerRadius:", 14.0);

  return v24;
}

char *sub_10006D0A0(double a1, double a2, double a3, double a4)
{
  return sub_10006CDB8(a1, a2, a3, a4);
}

void sub_10006D0C0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  id v15;
  id v16;

  v2 = v1;
  v4 = qword_100850FE8;
  v16 = *(id *)&v1[qword_100850FE8];
  if (v16)
  {
    if (a1)
    {
      type metadata accessor for ArtworkView(0);
      v5 = v16;
      v6 = a1;
      v7 = static NSObject.== infix(_:_:)(v5, v6);

      if ((v7 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      v8 = v16;
    }
    objc_msgSend(v16, "removeFromSuperview");
LABEL_7:

  }
  v9 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = a1;
  v10 = a1;

  v11 = *(void **)&v2[v4];
  if (v11)
  {
    if (v16)
    {
      type metadata accessor for ArtworkView(0);
      v12 = v16;
      v16 = v11;
      v13 = static NSObject.== infix(_:_:)(v16, v12);

      if ((v13 & 1) != 0)
      {

        goto LABEL_12;
      }
    }
    else
    {
      v14 = v11;
      v12 = 0;
    }
    v15 = objc_msgSend(v2, "contentView");
    objc_msgSend(v15, "setClipsToBounds:", 1);

    v16 = objc_msgSend(v2, "contentView");
    objc_msgSend(v16, "insertSubview:belowSubview:", v11, *(_QWORD *)&v2[qword_100852D38]);

    goto LABEL_15;
  }
LABEL_12:

LABEL_15:
}

void sub_10006D258(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  double v15;
  id v16;
  id v17;

  v2 = v1;
  v4 = qword_100850FF0;
  v17 = *(id *)&v1[qword_100850FF0];
  if (v17)
  {
    if (a1)
    {
      sub_100019574(0, &qword_10080E4D0, UIVisualEffectView_ptr);
      v5 = v17;
      v6 = a1;
      v7 = static NSObject.== infix(_:_:)(v5, v6);

      if ((v7 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      v8 = v17;
    }
    objc_msgSend(v17, "removeFromSuperview");
LABEL_7:

  }
  v9 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = a1;
  v10 = a1;

  v11 = *(void **)&v2[v4];
  if (!v11)
  {
LABEL_12:

    goto LABEL_18;
  }
  if (v17)
  {
    sub_100019574(0, &qword_10080E4D0, UIVisualEffectView_ptr);
    v12 = v17;
    v17 = v11;
    v13 = static NSObject.== infix(_:_:)(v17, v12);

    if ((v13 & 1) != 0)
    {

      goto LABEL_12;
    }
  }
  else
  {
    v14 = v11;
    v12 = 0;
  }
  objc_msgSend(v11, "setClipsToBounds:", 1);
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v15 = 0.0;
  else
    v15 = 14.0;
  v16 = objc_msgSend(v11, "layer");
  objc_msgSend(v16, "setCornerRadius:", v15);

  v17 = objc_msgSend(v2, "contentView");
  objc_msgSend(v17, "insertSubview:atIndex:", v11, 0);

LABEL_18:
}

double sub_10006D444(CGFloat *a1)
{
  uint64_t v1;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double Width;
  CGFloat Height;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  double MinX;
  CGFloat v18;
  double v19;
  double MaxY;
  double v21;
  double v22;
  double result;
  double v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v25.origin.x = *a1;
  v25.origin.y = v3;
  v25.size.width = v6;
  v25.size.height = v5;
  Width = CGRectGetWidth(v25);
  v26.origin.x = v4;
  v26.origin.y = v3;
  v26.size.width = v6;
  v26.size.height = v5;
  Height = CGRectGetHeight(v26);
  v9 = *(void **)(v1 + qword_100852D38);
  objc_msgSend(v9, "sizeThatFits:", Width, Height);
  v11 = v10;
  v24 = v10;
  objc_msgSend(v9, "lastBaselineFromBottom");
  v13 = v11 - v12;
  v27.origin.x = v4;
  v27.origin.y = v3;
  v27.size.width = v6;
  v27.size.height = v5;
  v14 = CGRectGetMaxY(v27) - *(double *)(v1 + qword_1007F63A8 + 24);
  objc_msgSend(*(id *)(v1 + qword_1007F63A8), "pointSize");
  v16 = v15 * 10.0 / 36.0;
  v28.origin.x = v4;
  v28.origin.y = v3;
  v28.size.width = v6;
  v28.size.height = v5;
  MinX = CGRectGetMinX(v28);
  v18 = v14 - v13 - v16;
  v29.origin.x = v4;
  v29.origin.y = v3;
  v29.size.width = v6;
  v29.size.height = v5;
  v19 = CGRectGetWidth(v29);
  objc_msgSend(v9, "setFrame:", MinX, v18, v19, v24 + v16 + v16);
  v30.origin.x = MinX;
  v30.origin.y = v18;
  v30.size.width = v19;
  v30.size.height = v24 + v16 + v16;
  MaxY = CGRectGetMaxY(v30);
  objc_msgSend(v9, "lastBaselineFromBottom");
  v22 = MaxY - v21;
  a1[1] = v3 + v22;
  result = v5 - v22;
  a1[3] = result;
  return result;
}

void sub_10006D5F0()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  CGFloat v8;
  void *v9;
  id v10;
  double Width;
  CGAffineTransform v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v1 = v0;
  v2 = *(void **)&v0[qword_100850FE8];
  if (v2)
  {
    v3 = v2;
    *(_OWORD *)&v12.a = 0x3FF0000000000000uLL;
    v12.c = 0.0;
    v12.d = 1.0;
    *(_OWORD *)&v12.tx = 0uLL;
    objc_msgSend(v3, "setTransform:", &v12);
    objc_msgSend(v1, "bounds");
    CGRectGetMaxX(v13);
    objc_msgSend(v1, "bounds");
    CGRectGetMinY(v14);
    objc_msgSend(v1, "bounds");
    v4 = CGRect.withLayoutDirection(in:relativeTo:)(v1);
    ArtworkView.frame.setter(v4);
    v5 = v3;
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v7 & 1) != 0)
      v8 = 0.523598776;
    else
      v8 = -0.523598776;
    CGAffineTransformMakeRotation(&v12, v8);
    objc_msgSend(v5, "setTransform:", &v12);

  }
  v9 = *(void **)&v1[qword_100850FF0];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v1, "bounds");
    Width = CGRectGetWidth(v15);
    objc_msgSend(v1, "bounds");
    objc_msgSend(v10, "setFrame:", 0.0, 0.0, Width, CGRectGetMaxY(v16));

  }
}

void sub_10006D7C0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  double v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  sub_1005A4450();
  v1 = *(_BYTE **)&v0[qword_100856390];
  v2 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  v1[OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_isExpanded] = v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
  objc_msgSend(v1, "setNeedsLayout");
  v3 = 14.0;
  if (v0[v2])
    v3 = 0.0;
  objc_msgSend(v1, "_setContinuousCornerRadius:", v3);
  v4 = *(void **)&v0[qword_1007F63B8];
  if (v0[v2] == 1)
  {
    if (v4)
      objc_msgSend(v4, "_setContinuousCornerRadius:", 0.0);
    v5 = *(void **)&v0[qword_100850FF0];
    if (v5)
    {
      v6 = objc_msgSend(v5, "layer");
      objc_msgSend(v6, "setCornerRadius:", 0.0);

    }
    v9 = objc_msgSend(v0, "contentView");
    objc_msgSend(v9, "_setContinuousCornerRadius:", 0.0);
  }
  else
  {
    if (v4)
      objc_msgSend(v4, "_setContinuousCornerRadius:", 14.0);
    v7 = *(void **)&v0[qword_100850FF0];
    if (v7)
    {
      v8 = objc_msgSend(v7, "layer");
      objc_msgSend(v8, "setCornerRadius:", 14.0);

    }
    v9 = objc_msgSend(v0, "contentView");
    objc_msgSend(v9, "_setContinuousCornerRadius:", 14.0);
  }

}

void sub_10006D954(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  sub_10006D97C(a1, a2, a3, a4);
  sub_10006D0C0(0);
  sub_10006FED0(0);
  sub_10006D258(0);
}

double sub_10006D97C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __n128 v10;
  double result;
  id v12;
  _BYTE v13[40];

  v5 = sub_10006FFB4(a1, a2, a3, a4);
  v12 = *(id *)(v4 + qword_100856390);
  v6 = type metadata accessor for RevealingImageView(0);
  v7 = sub_10000E99C(&qword_1007F67E0, type metadata accessor for RevealingImageView, (uint64_t)&protocol conformance descriptor for NSObject);
  v8 = v12;
  AnyHashable.init<A>(_:)(&v12, v6, v7);
  v9 = swift_allocObject(&unk_100724700, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v4);
  v10 = swift_retain(v9);
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v5, 2, 1, v13, sub_1000709B8, v9, v10);
  swift_release(v5);
  swift_release(v9);
  sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F9850);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_10006DA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Class isa;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  _QWORD v43[5];

  v1 = v0;
  v2 = sub_10000DF3C(&qword_1007F67E8);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v43[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + qword_100856390) + OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_imageView), "setImage:", 0, v3);
  v6 = *(char **)(v0 + qword_1007F63B8);
  if (v6)
  {
    v7 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image];
    *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image] = 0;
    v8 = v6;

    sub_1004D4D24();
  }
  else
  {
    v9 = type metadata accessor for BrandedAppTodayCardLargeIconBackgroundView(0);
    v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
    v8 = (char *)v10;
    sub_10006FED0(v10);

  }
  v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v12 = ((uint64_t (*)(void))TodayCardMediaAppIcon.icon.getter)();
  v13 = (void *)Artwork.backgroundColor.getter(v12);
  *(_QWORD *)&v14 = swift_release(v12).n128_u64[0];
  if (v13 && (objc_msgSend(v13, "_luminance", v14), v16 = v15, v13, v16 >= 0.54))
  {
    v17 = (void *)objc_opt_self(FallbackMediaEffect);
    v18 = v16 < 0.89;
  }
  else
  {
    v17 = (void *)objc_opt_self(FallbackMediaEffect);
    v18 = 2;
  }
  v19 = objc_msgSend(v17, "effectWithBrightness:", v18);
  v20 = sub_10000DF3C(&qword_1007F5840);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v21 + 32) = v19;
  v43[0] = v21;
  specialized Array._endMutation()(v21);
  v22 = v43[0];
  sub_100019574(0, (unint64_t *)&qword_1007FE0B0, UIVisualEffect_ptr);
  v23 = v19;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v25 = v11;
  sub_10006D258(v11);
  v26 = *(void **)(v1 + qword_100850FE8);
  if (v26)
  {
    v27 = *(void **)(v1 + qword_100850FE8);
  }
  else
  {
    type metadata accessor for ArtworkView(0);
    v27 = (void *)static ArtworkView.iconArtworkView.getter();
    v26 = 0;
  }
  v28 = v26;
  ArtworkView.image.setter(0);
  v29 = v27;
  sub_10006D0C0(v27);
  v30 = ((uint64_t (*)(void))TodayCardMediaAppIcon.icon.getter)();
  Artwork.style.getter(v30);
  swift_release(v30);
  v32 = type metadata accessor for Artwork.Style(0, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v5, 0, 1, v32);
  v33 = (uint64_t)&v8[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_style];
  swift_beginAccess(&v8[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_style], v43, 33, 0);
  sub_100070944((uint64_t)v5, v33);
  swift_endAccess(v43);
  objc_msgSend(v8, "setNeedsLayout");
  v34 = sub_100011088((uint64_t)v5, &qword_1007F67E8);
  v35 = TodayCardMediaAppIcon.icon.getter(v34);
  v36 = Artwork.config(_:mode:prefersLayeredImage:)(0, 0, 230.0, 230.0);
  swift_release(v35);
  v42 = v8;
  v37 = type metadata accessor for BrandedAppTodayCardLargeIconBackgroundView(0);
  v38 = sub_10000E99C(&qword_1007F6820, type metadata accessor for BrandedAppTodayCardLargeIconBackgroundView, (uint64_t)&protocol conformance descriptor for NSObject);
  v39 = v8;
  AnyHashable.init<A>(_:)(&v42, v37, v38);
  v40 = swift_allocObject(&unk_1007246D8, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16, v1);
  v41 = swift_retain(v40);
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v36, 2, 1, v43, sub_1000709B0, v40, v41);

  swift_release(v36);
  swift_release(v40);
  sub_100011088((uint64_t)v43, (uint64_t *)&unk_1007F9850);
  swift_release(v40);
}

void sub_10006DF04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  id v8;
  void *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (id)Strong;
    v9 = *(void **)(Strong + qword_1007F63B8);
    if (v9)
    {
      v10 = v9;

      v11 = *(void **)&v10[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image];
      *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image] = a1;
      v8 = a1;

      sub_1004D4D24();
    }

  }
  swift_beginAccess(v6, &v17, 0, 0);
  v12 = swift_unknownObjectWeakLoadStrong(v6);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(void **)(v12 + qword_100850FE8);
    if (v14)
    {
      v15 = v14;

      v16 = a1;
      v13 = v15;
      ArtworkView.image.setter(a1);
    }

  }
}

void sub_10006E000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  void *v28;
  void *v29;
  char *v30;
  void *v31;
  void *v32;
  __int128 v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  void *v40;
  id v41;
  id v42;
  unint64_t v43;
  id v44;
  NSString v45;
  Class isa;
  id v47;
  _QWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v5 = v4;
  v48[0] = type metadata accessor for Locale(0);
  v10 = *(_QWORD *)(v48[0] - 8);
  __chkstk_darwin(v48[0]);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StringCharacteristics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[1] = a1;
  sub_10006E314(a1, a2, a3, a4);
  if ((v5[qword_1007F63B0] & 1) == 0)
  {
    TodayCard.titleCharacteristics.getter();
    v18 = objc_msgSend(v5, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;
    static Locale.storefront.getter(v18);
    v27 = sub_100070358(a2, (uint64_t)&v49, v20, v22, v24, v26);
    (*(void (**)(char *, _QWORD, double))(v10 + 8))(v12, v48[0], v27);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v28 = (void *)v49;
    v29 = (void *)v50;
    v30 = &v5[qword_1007F63A8];
    v31 = *(void **)&v5[qword_1007F63A8];
    v32 = *(void **)&v5[qword_1007F63A8 + 16];
    v33 = v51;
    *((_OWORD *)v30 + 1) = v50;
    *((_OWORD *)v30 + 2) = v33;
    *(_OWORD *)v30 = v49;
    v34 = v28;
    v35 = v29;

    objc_msgSend(v5, "setNeedsLayout");
  }
  TodayCard.title.getter(v17);
  if (v36)
  {
    v37 = v36;
    v38 = *(void **)&v5[qword_100852D38];
    v39 = *(_OWORD *)&v5[qword_1007F63A8 + 16];
    v52 = *(_OWORD *)&v5[qword_1007F63A8];
    v53 = v39;
    v54 = *(_OWORD *)&v5[qword_1007F63A8 + 32];
    v40 = (void *)v39;
    v41 = (id)v52;
    v42 = v40;
    v43 = sub_10006CC60();

    v44 = objc_allocWithZone((Class)NSAttributedString);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    type metadata accessor for Key(0);
    sub_10000E99C((unint64_t *)&qword_1007F53E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"e'\v");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend(v44, "initWithString:attributes:", v45, isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

    objc_msgSend(v38, "setAttributedText:", v47);
  }
  else
  {
    objc_msgSend(*(id *)&v5[qword_100852D38], "setAttributedText:", 0);
  }
}

void sub_10006E314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __objc2_meth_list **p_base_meths;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  id v67;
  char v68;
  __n128 v69;
  uint64_t v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v5 = v4;
  v10 = type metadata accessor for TodayCard.Style(0);
  v80 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v79 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TodayCardMedia.TitleBackingGradient(0, v11);
  v82 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v73 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_10000DF3C(&qword_1007F6808);
  __chkstk_darwin(v77);
  v78 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F6810);
  __chkstk_darwin(v16);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v83 = (uint64_t)&v72 - v20;
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v72 - v23;
  v81 = a3;
  v25 = sub_1005C0808(a1, a2, a3, a4, v22);
  v84 = a1;
  v26 = TodayCard.media.getter(v25);
  v27 = type metadata accessor for TodayCardMediaBrandedSingleApp(0);
  v28 = swift_dynamicCastClass(v26, v27);
  if (!v28)
  {
    swift_release(v26);
    return;
  }
  v29 = v28;
  v76 = v10;
  *((_BYTE *)v5 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory) = a2;
  p_base_meths = (__objc2_meth_list **)(&TodayCardChinLockupListView + 32);
  if ((*((_BYTE *)v5 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded) & 1) == 0
    || *((_BYTE *)v5 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory) == 7)
  {
    *((_BYTE *)v5 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory) = a2;
    if (a2 == 4)
    {
      v31 = v28;
      v32 = v24;
      v33 = v13;
      v34 = v18;
      v35 = v26;
      v36 = objc_msgSend(v5, "contentView");
      objc_msgSend(v36, "setClipsToBounds:", 1);

      v26 = v35;
      v18 = v34;
      v13 = v33;
      v24 = v32;
      v29 = v31;
      p_base_meths = &TodayCardChinLockupListView.base_meths;
    }
    objc_msgSend(v5, (SEL)p_base_meths[408]);
  }
  v72 = v18;
  v75 = v26;
  objc_msgSend(v5, (SEL)p_base_meths[408], v18);
  v37 = type metadata accessor for ArtworkLoader(0);
  v38 = *(_QWORD *)(a4 + qword_100854050);
  if (!v38)
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v37);
    __break(1u);
    return;
  }
  v85 = v29;
  v39 = objc_msgSend(v5, "traitCollection", swift_retain(v38).n128_f64[0]);
  v40 = TodayCardMediaWithArtwork.artwork(for:)(v39, v27, &protocol witness table for TodayCardMediaBrandedSingleApp);

  v74 = v38;
  if (v40)
  {
    v42 = (void *)TodayCard.backgroundColor.getter(v41);

    if (!v42)
    {
      v44 = Artwork.backgroundColor.getter(v43);
      if (v44)
      {
        v45 = (void *)v44;
        v46 = objc_msgSend(v5, "backgroundView");
        if (v46)
        {
          v47 = v46;
          objc_msgSend(v46, "setBackgroundColor:", v45);

        }
      }
    }
    v48 = objc_msgSend(v5, "traitCollection");
    (*(void (**)(uint64_t, uint64_t, uint64_t, id, uint64_t))((swift_isaMask & *v5) + 0x368))(v40, a2, v81, v48, v38);
    swift_release(v40);

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v5) + 0x370))(v29, v38);
  }
  v49 = objc_msgSend(v5, "traitCollection");
  v50 = UITraitCollection.prefersRightToLeftLayouts.getter();

  v51 = v83;
  if ((v50 & 1) != 0)
  {
    TodayCardMedia.titleBackingGradient.getter();
    v52 = v82;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v82 + 104))(v51, enum case for TodayCardMedia.TitleBackingGradient.rightToLeft(_:), v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v51, 0, 1, v13);
    v53 = v78;
    v54 = v78 + *(int *)(v77 + 48);
    sub_1000194E4((uint64_t)v24, v78, &qword_1007F6810);
    sub_1000194E4(v51, v54, &qword_1007F6810);
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    v56 = v55(v53, 1, v13);
    v57 = v76;
    if (v56 == 1)
    {
      sub_100011088(v51, &qword_1007F6810);
      sub_100011088((uint64_t)v24, &qword_1007F6810);
      if (v55(v54, 1, v13) == 1)
      {
        v58 = sub_100011088(v53, &qword_1007F6810);
LABEL_27:
        TodayCard.title.getter(v58);
        v59 = v66 != 0;
        swift_bridgeObjectRelease(v66);
        goto LABEL_28;
      }
    }
    else
    {
      v60 = (uint64_t)v72;
      sub_1000194E4(v53, (uint64_t)v72, &qword_1007F6810);
      if (v55(v54, 1, v13) != 1)
      {
        v61 = v82;
        v62 = v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v73, v54, v13);
        v63 = sub_10000E99C(&qword_1007F6818, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardMedia.TitleBackingGradient, (uint64_t)&protocol conformance descriptor for TodayCardMedia.TitleBackingGradient);
        v64 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v62, v13, v63);
        v65 = *(void (**)(char *, uint64_t))(v61 + 8);
        v65(v62, v13);
        sub_100011088(v83, &qword_1007F6810);
        sub_100011088((uint64_t)v24, &qword_1007F6810);
        v65((char *)v60, v13);
        v58 = sub_100011088(v53, &qword_1007F6810);
        if ((v64 & 1) != 0)
          goto LABEL_27;
        goto LABEL_25;
      }
      sub_100011088(v51, &qword_1007F6810);
      sub_100011088((uint64_t)v24, &qword_1007F6810);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v60, v13);
    }
    sub_100011088(v53, &qword_1007F6808);
LABEL_25:
    v59 = 0;
    goto LABEL_28;
  }
  v59 = 0;
  v57 = v76;
LABEL_28:
  v67 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v68 = sub_1005DCDA4();

  if ((v68 & 1) != 0 || v59)
  {
    v70 = (uint64_t)v79;
    TodayCard.style.getter(v69);
    v71 = (void *)sub_1003D868C(v70);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v70, v57);
    sub_100070230(v71);
    swift_release(v74);
    swift_release(v75);

  }
  else
  {
    sub_100070230(0);
    swift_release(v74);
    swift_release(v75);
  }
}

void sub_10006EA20(void *a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  __int128 v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  Class isa;
  double v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _BYTE v57[24];
  char v58[24];

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = sub_10000DF3C(&qword_1007F67E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006EE48(a1, a2, a3 & 1);
  v12 = swift_dynamicCastClass(a1, ObjectType);
  if (v12 && (a3 & 1) == 0)
  {
    v13 = v12;
    v14 = *(void **)(v12 + qword_1007F63A8);
    v15 = *(_QWORD *)(v12 + qword_1007F63A8 + 8);
    v16 = *(void **)(v12 + qword_1007F63A8 + 16);
    v17 = *(_QWORD *)(v12 + qword_1007F63A8 + 40);
    v18 = &v4[qword_1007F63A8];
    v19 = *(void **)&v4[qword_1007F63A8];
    v20 = *(void **)&v4[qword_1007F63A8 + 16];
    v21 = *(_OWORD *)(v12 + qword_1007F63A8 + 24);
    *(_QWORD *)v18 = v14;
    *((_QWORD *)v18 + 1) = v15;
    *((_QWORD *)v18 + 2) = v16;
    *(_OWORD *)(v18 + 24) = v21;
    *((_QWORD *)v18 + 5) = v17;
    v22 = v14;
    v23 = v16;
    v24 = v22;
    v25 = v23;
    v56 = a1;

    objc_msgSend(v4, "setNeedsLayout");
    v4[qword_1007F63B0] = 1;
    v26 = *(void **)&v4[qword_100852D38];
    v27 = objc_msgSend(*(id *)(v13 + qword_100852D38), "attributedText");
    objc_msgSend(v26, "setAttributedText:", v27);

    v28 = *(void **)(v13 + qword_1007F63B8);
    if (v28)
    {
      v29 = type metadata accessor for BrandedAppTodayCardLargeIconBackgroundView(0);
      v30 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v29));
      v31 = v28;
      v32 = objc_msgSend(v30, "init");
      v33 = (char *)v32;
      sub_10006FED0(v32);
      v34 = (uint64_t)&v31[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_style];
      swift_beginAccess(&v31[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_style], v58, 0, 0);
      sub_1000194E4(v34, (uint64_t)v11, &qword_1007F67E8);
      v35 = (uint64_t)&v33[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_style];
      swift_beginAccess(&v33[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_style], v57, 33, 0);
      sub_100070944((uint64_t)v11, v35);
      swift_endAccess(v57);
      objc_msgSend(v33, "setNeedsLayout");
      sub_100011088((uint64_t)v11, &qword_1007F67E8);
      v36 = *(void **)&v31[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image];
      v37 = *(void **)&v33[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image];
      *(_QWORD *)&v33[OBJC_IVAR____TtC22SubscribePageExtension42BrandedAppTodayCardLargeIconBackgroundView_image] = v36;
      v38 = v36;

      sub_1004D4D24();
      v39 = *(void **)(v13 + qword_100850FF0);
      if (v39)
      {
        v40 = objc_allocWithZone((Class)UIVisualEffectView);
        v41 = v39;
        v42 = objc_msgSend(v40, "init");
        isa = (Class)objc_msgSend(v41, "backgroundEffects");
        if (!isa)
        {
          v45 = sub_100019574(0, (unint64_t *)&qword_1007FE0B0, UIVisualEffect_ptr);
          v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v45);
          isa = Array._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&v44 = swift_bridgeObjectRelease(v46).n128_u64[0];
        }
        objc_msgSend(v42, "setBackgroundEffects:", isa, v44);

        v47 = v42;
        sub_10006D258(v42);

      }
      v48 = *(void **)(v13 + qword_100850FE8);
      if (v48)
      {
        v49 = *(void **)&v4[qword_100850FE8];
        if (v49)
        {
          v50 = v48;
          v51 = v49;
        }
        else
        {
          type metadata accessor for ArtworkView(0);
          v51 = (void *)static ArtworkView.iconArtworkView.getter(v48);
        }
        v52 = v49;
        ArtworkView.image.setter(0);
        v53 = v51;
        sub_10006D0C0(v51);
        v54 = ArtworkView.image.getter();
        ArtworkView.image.setter(v54);

      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_10006EE48(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;

  ObjectType = swift_getObjectType();
  v7 = a3 & 1;
  sub_1005A3708(a1, a2, v7);
  v8 = swift_dynamicCastClass(a1, ObjectType);
  if (v8)
  {
    v9 = v8;
    v10 = sub_10000DF3C(&qword_1007F67F0);
    v11 = swift_dynamicCastClass(v9, v10);
    if (v11)
    {
      v12 = v11;
      v13 = *(void **)(v11 + qword_1008105A8);
      if (v13)
      {
        v14 = a1;
        v15 = v13;
        v16 = _s22SubscribePageExtension29TodayCardTitleBackingGradientO4make4fromSo15CAGradientLayerCAG_tFZ_0(v15);
        sub_100070230(v16);

        v17 = *(void **)(v3 + qword_1008105A8);
        if (v17)
        {
          v18 = v17;
          objc_msgSend(v18, "setHidden:", objc_msgSend(v15, "isHidden"));

        }
        if ((_DWORD)v7)
          goto LABEL_8;
      }
      else
      {
        v21 = a1;
        if ((_DWORD)v7)
          goto LABEL_8;
      }
      v19 = *(_QWORD *)(v3 + qword_100856390);
      v20 = objc_msgSend(*(id *)(*(_QWORD *)(v12 + qword_100856390)+ OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_imageView), "image");
      objc_msgSend(*(id *)(v19 + OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_imageView), "setImage:", v20);

      sub_10006F508();
LABEL_8:

    }
  }
}

double sub_10006EFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  double result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::OpaquePointer v19;
  void *v20;
  void *v21;

  sub_1000706B0(a1, a2, a3);
  v3 = type metadata accessor for TodayCard(0);
  v4 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v5 = ItemLayoutContext.typedModel<A>(as:)(&v21, v3, v3, v4);
  v7 = v21;
  if (v21)
  {
    v8 = TodayCard.media.getter(v5);
    swift_release(v7);
    v9 = type metadata accessor for TodayCardMediaBrandedSingleApp(0);
    v10 = swift_dynamicCastClass(v8, v9);
    if (!v10)
      goto LABEL_4;
    v21 = (void *)v10;
    KeyPath = swift_getKeyPath(&unk_100671A88);
    ItemLayoutContext.subscript.getter(&v20);
    swift_release(KeyPath);
    v12 = v20;
    v13 = TodayCardMediaWithArtwork.artwork(for:)(v20, v9, &protocol witness table for TodayCardMediaBrandedSingleApp);

    swift_release(v13);
    if (!v13)
    {
      swift_retain(v8);
      v15 = TodayCardMediaAppIcon.icon.getter(v14);
      swift_release(v8);
      v16 = Artwork.config(_:mode:prefersLayeredImage:)(0, 0, 230.0, 230.0);
      swift_release(v15);
      v17 = sub_10000DF3C(&qword_1007F5840);
      v18 = swift_allocObject(v17, 40, 7);
      *(_OWORD *)(v18 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v18 + 32) = v16;
      v21 = (void *)v18;
      specialized Array._endMutation()(v18);
      v19._rawValue = v21;
      swift_retain(v16);
      ArtworkLoader.prefetchArtwork(using:)(v19);
      swift_release(v8);
      swift_release(v16);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v19._rawValue).n128_u64[0];
    }
    else
    {
LABEL_4:
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10006F1A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v18;
  _BYTE v19[40];

  v4 = v3;
  v7 = v3 + qword_100852D48;
  v8 = *(_QWORD *)(v3 + qword_100852D48);
  if (v8)
  {
    v9 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 128);
    v12 = swift_unknownObjectRetain(v8);
    v11(a1, ObjectType, v9, v12);
    swift_unknownObjectRelease(v8);
  }
  v13 = *(char **)(v4 + qword_100856390);
  objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_imageView], "setImage:", 0);
  v18 = v13;
  v14 = type metadata accessor for RevealingImageView(0);
  v15 = sub_10000E99C(&qword_1007F67E0, type metadata accessor for RevealingImageView, (uint64_t)&protocol conformance descriptor for NSObject);
  v16 = v13;
  AnyHashable.init<A>(_:)(&v18, v14, v15);
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v19, a3 & 1);
  return sub_100019370((uint64_t)v19);
}

void sub_10006F2C4(void *a1)
{
  id v1;
  id v2;
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  v1 = v3.receiver;
  objc_msgSendSuper2(&v3, "prepareForReuse");
  sub_10006D0C0(0);
  v2 = objc_msgSend(v1, "contentView", v3.receiver, v3.super_class);
  objc_msgSend(v2, "setClipsToBounds:", 0);

}

void sub_10006F34C()
{
  uint64_t v0;
  void *v1;

  sub_100011088(v0 + qword_100850FE0, &qword_1007F5808);

  v1 = *(void **)(v0 + qword_1007F63A8);
}

void sub_10006F3C4(uint64_t a1)
{
  void *v2;

  sub_100011088(a1 + qword_100850FE0, &qword_1007F5808);

  v2 = *(void **)(a1 + qword_1007F63A8);
}

uint64_t type metadata accessor for BrandedAppTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F63E8;
  if (!qword_1007F63E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrandedAppTodayCardCollectionViewCell);
  return result;
}

void sub_10006F47C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_10006F8D0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    v4[3] = &unk_100671A30;
    v4[4] = &unk_100671A48;
    v4[5] = "\b";
    swift_initClassMetadata2(a1, 256, 6, v4, a1 + 896);
  }
}

void sub_10006F508()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double Width;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  CGRect v18;

  v1 = objc_msgSend(v0, "backgroundView");
  if (!v1)
    goto LABEL_15;
  v2 = v1;
  objc_msgSend(v1, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v2, "bounds");
  Width = CGRectGetWidth(v18);
  v10 = objc_msgSend(v2, "subviews");
  v11 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_4;
LABEL_14:

    swift_bridgeObjectRelease(v12);
LABEL_15:
    sub_10006F690();
    return;
  }
  if (v12 < 0)
    v17 = v12;
  else
    v17 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_14;
LABEL_4:
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
      else
        v15 = *(id *)(v12 + 8 * i + 32);
      v16 = v15;
      objc_msgSend(v15, "setFrame:", v4, v6, Width, v8);

    }
    goto LABEL_14;
  }
  __break(1u);
}

void sub_10006F690()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t ObjectType;
  id v4;
  id v5;
  uint64_t v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double MinX;
  void *v21;
  double MinY;
  double Width;
  double Height;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  double v31;
  id v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v1 = v0;
  v2 = *(void **)&v0[qword_1008105A8];
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = v2;
    v5 = objc_msgSend(v1, "contentView");
    v6 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v7 = LayoutMarginsAware<>.layoutFrame.getter(v6);
    v9 = v8;
    v11 = v10;
    v13 = v12;

    v14 = (*(double (**)(void))(ObjectType + 840))();
    v30 = v15;
    v31 = v14;
    v17 = v16;
    v19 = v18;
    v33.origin.x = v7;
    v33.origin.y = v9;
    v33.size.width = v11;
    v33.size.height = v13;
    MinX = CGRectGetMinX(v33);
    v21 = *(void **)&v1[qword_100852D38];
    objc_msgSend(v21, "frame");
    MinY = CGRectGetMinY(v34);
    v35.origin.x = v7;
    v35.origin.y = v9;
    v35.size.width = v11;
    v35.size.height = v13;
    Width = CGRectGetWidth(v35);
    objc_msgSend(v21, "frame");
    Height = CGRectGetHeight(v36);
    CGRect.adding(outsets:)(v25, v31, v30, v17, v19, MinX, MinY, Width, Height);
    v26 = v4;
    objc_msgSend(v1, "bounds");
    CGRect.withLayoutDirection(in:relativeTo:)(v1);
    objc_msgSend(v26, "setFrame:");

    v27 = *(void **)(*(_QWORD *)&v1[qword_100856390]
                   + OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_imageView);
    v32 = v26;
    v28 = objc_msgSend(v27, "image");
    v29 = v28;
    if (v28)

    objc_msgSend(v32, "setHidden:", v29 == 0);
  }
}

void sub_10006F8D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F63F8)
  {
    v2 = type metadata accessor for TodayCard.Style(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F63F8);
  }
}

uint64_t sub_10006F924()
{
  return type metadata accessor for BrandedAppTodayCardCollectionViewCell(0);
}

void destroy for BrandedAppTodayCardLayoutMetrics(id *a1)
{

}

uint64_t initializeWithCopy for BrandedAppTodayCardLayoutMetrics(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = v3;
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for BrandedAppTodayCardLayoutMetrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for BrandedAppTodayCardLayoutMetrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrandedAppTodayCardLayoutMetrics(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrandedAppTodayCardLayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandedAppTodayCardLayoutMetrics()
{
  return &type metadata for BrandedAppTodayCardLayoutMetrics;
}

void sub_10006FB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = (char *)*(id *)(Strong + qword_100856390);

    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC22SubscribePageExtension18RevealingImageView_imageView], "setImage:", a1);
  }
  swift_beginAccess(v6, &v12, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(v6);
  if (v10)
  {
    v11 = (void *)v10;
    sub_10006F508();

  }
}

double sub_10006FBC4(char a1, uint64_t a2, void *a3)
{
  UIContentSizeCategory v5;
  char **v6;
  double v7;
  uint64_t v8;
  NSString *v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t *v15;
  NSString *v16;
  NSString *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString *v22;
  NSString *v23;
  id v24;
  uint64_t v26;

  v5 = (UIContentSizeCategory)type metadata accessor for AspectRatio(0);
  v6 = (char **)*(v5 - 1);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (NSString *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = static CGFloat.allColumns.getter(v7);
  v12 = PageGrid.componentMeasuringSize(spanning:)(v10);
  if (a1 == 6)
  {
    v13 = floor(v12);
  }
  else
  {
    if (a1 == 5)
    {
      v14 = PageGrid.columnWidth.getter(v11);
    }
    else
    {
      if (a1 == 4)
      {
        v13 = floor((v12 - PageGrid.interColumnSpace.getter(v11)) * 0.5);
        goto LABEL_9;
      }
      sub_1005BFA74(a1);
    }
    v13 = v14;
  }
LABEL_9:
  if ((UITraitCollection.isSizeClassCompact.getter(v11) & 1) != 0)
  {
    if (v13 >= 300.0)
    {
      if (qword_1007F2B08 != -1)
        swift_once(&qword_1007F2B08, sub_10044F2B4);
      v15 = qword_100810578;
      goto LABEL_20;
    }
    if (qword_1007F2B10 == -1)
    {
LABEL_12:
      v15 = qword_100810590;
LABEL_20:
      v19 = sub_1000117A8((uint64_t)v5, (uint64_t)v15);
      v20 = ((uint64_t (*)(NSString *, uint64_t, UIContentSizeCategory))v6[2])(v9, v19, v5);
      round(AspectRatio.height(fromWidth:)(v20, v13));
      ((void (*)(NSString *, UIContentSizeCategory))v6[1])(v9, v5);
      return v13;
    }
LABEL_29:
    swift_once(&qword_1007F2B10, sub_10044F2CC);
    goto LABEL_12;
  }
  v6 = &selRef_activityViewController_itemForActivityType_;
  v5 = (UIContentSizeCategory)objc_msgSend(a3, "preferredContentSizeCategory");
  v16 = UIContentSizeCategoryAccessibilityMedium;
  v9 = UIContentSizeCategoryAccessibilityExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v16, v9) & 1) == 0)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v5, v16) & 1) != 0)
  {
    v9 = v9;
    v17 = v5;
    v18 = static UIContentSizeCategory.<= infix(_:_:)(v17, v9);

    if ((v18 & 1) != 0)
      return v13;
  }
  else
  {

  }
  v21 = objc_msgSend(a3, "preferredContentSizeCategory");
  v22 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v5 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v22, v5) & 1) == 0)
    goto LABEL_28;
  if ((static UIContentSizeCategory.>= infix(_:_:)(v21, v22) & 1) != 0)
  {
    v23 = v5;
    v24 = v21;
    static UIContentSizeCategory.<= infix(_:_:)(v24, v23);

  }
  else
  {

  }
  return v13;
}

void sub_10006FED0(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  int v8;
  id v9;
  void *v10;
  double v11;
  id v12;

  v3 = qword_1007F63B8;
  v4 = *(void **)&v1[qword_1007F63B8];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded];
    v9 = v7;
    v10 = v9;
    v11 = 14.0;
    if (v8)
      v11 = 0.0;
    objc_msgSend(v9, "_setContinuousCornerRadius:", v11);
    v12 = objc_msgSend(v1, "backgroundView");
    objc_msgSend(v12, "addSubview:", v10);

  }
}

uint64_t sub_10006FFB4(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  __n128 v27;
  uint64_t v28;
  uint64_t Main;
  uint64_t IsPhone;
  int v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void *v46;

  v46 = a4;
  v6 = type metadata accessor for Artwork.Format(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.Crop(0, v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork.URLTemplate(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Artwork.Variant(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v21, "scale");
  v23 = v22;

  v24 = sub_10006FBC4(a2, a3, v46);
  v26 = v25;
  v27.n128_f64[0] = dispatch thunk of Artwork.bestVariant(prefersLayeredImage:)(0, v24);
  v28 = Artwork.template.getter(v27);
  Main = JUScreenClassGetMain(v28);
  IsPhone = JUScreenClassIsPhone(Main);
  v31 = IsPhone;
  v32 = JUScreenClassGetMain(IsPhone);
  if (JUScreenClassIsPhone(v32))
    v33 = static Artwork.Crop.fn.getter();
  else
    v33 = static Artwork.Crop.sourceSize.getter();
  v34 = v26 / 1810.0;
  v35 = round(v26 / 1810.0 * 2160.0);
  v36 = 3524.0;
  if (v31)
    v36 = 1646.0;
  v37 = round(v34 * v36);
  v38 = Artwork.Variant.format.getter(v33);
  v39 = Artwork.Variant.quality.getter(v38);
  v41 = v40 & 1;
  v42 = type metadata accessor for ArtworkLoaderConfig(0);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v43 = ArtworkLoaderConfig.init(template:size:scale:crop:format:quality:useWideGamut:)(v16, v12, v9, v39, v41, 0, v37, v35, v23);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v43;
}

void sub_100070230(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v3 = qword_1008105A8;
  v4 = *(void **)&v1[qword_1008105A8];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperlayer");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v11 = v7;
    v8 = objc_msgSend(v1, "contentView");
    v9 = objc_msgSend(v8, "layer");

    v10 = objc_msgSend(*(id *)&v1[qword_100852D38], "layer");
    objc_msgSend(v9, "insertSublayer:below:", v11, v10);

    objc_msgSend(v11, "setHidden:", 1);
    objc_msgSend(v1, "setNeedsLayout");

  }
}

double sub_100070358@<D0>(char a1@<W1>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(char *, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double Width;
  BOOL v40;
  double v41;
  id v42;
  id v43;
  double result;
  uint64_t v45;
  CGRect v46;
  CGRect v47;

  v12 = type metadata accessor for StringCharacteristics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StringCharacteristics.legacyExtraTallCharacters.getter(v14);
  v17 = sub_10000E99C(&qword_1007F6800, (uint64_t (*)(uint64_t))&type metadata accessor for StringCharacteristics, (uint64_t)&protocol conformance descriptor for StringCharacteristics);
  v18 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v17);
  v19 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v20 = v19(v16, v12);
  static StringCharacteristics.accentedCharacters.getter(v20);
  v21 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v17);
  v22 = v19(v16, v12);
  static StringCharacteristics.longWords.getter(v22);
  v23 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v17);
  v19(v16, v12);
  if ((v23 & 1) != 0
    && (a1 == 5
     || (v46.origin.x = a3, v46.origin.y = a4, v46.size.width = a5, v46.size.height = a6, CGRectGetWidth(v46) <= 335.0)))
  {
    v27 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v28 = objc_msgSend(v27, "userInterfaceIdiom");

    v29 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v30 = objc_msgSend(v29, "fixedCoordinateSpace");

    objc_msgSend(v30, "bounds");
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    swift_unknownObjectRelease(v30);
    v47.origin.x = v32;
    v47.origin.y = v34;
    v47.size.width = v36;
    v47.size.height = v38;
    Width = CGRectGetWidth(v47);
    v40 = v28 != (id)1 && Width > 320.0;
    v41 = 36.0;
    if (v40)
      v26 = 36.0;
    else
      v26 = 33.0;
    if ((v21 & 1) == 0)
      v41 = 34.0;
    if ((v18 & 1) != 0)
      v25 = 44.0;
    else
      v25 = v41;
  }
  else
  {
    v24 = 36.0;
    if ((v21 & 1) != 0)
      v24 = 44.0;
    if ((v18 & 1) != 0)
      v25 = 52.0;
    else
      v25 = v24;
    v26 = 43.0;
  }
  v42 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", v26, UIFontWeightHeavy);
  v43 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v43, "setMinimumLineHeight:", v25 + -0.01);
  objc_msgSend(v43, "setMaximumLineHeight:", v25);
  *(_QWORD *)a2 = v42;
  *(double *)(a2 + 8) = fmin(v25 - v26, 0.0);
  *(_QWORD *)(a2 + 16) = v43;
  result = 29.0;
  *(_OWORD *)(a2 + 24) = xmmword_100671990;
  *(_QWORD *)(a2 + 40) = 0x405D800000000000;
  return result;
}

double sub_1000706B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v21;
  uint64_t KeyPath;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::OpaquePointer v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;

  v5 = type metadata accessor for PageGrid(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TodayCard(0);
  v10 = sub_10000E99C((unint64_t *)&qword_10080E200, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard, (uint64_t)&protocol conformance descriptor for TodayCard);
  v11 = ItemLayoutContext.typedModel<A>(as:)(&v36, v9, v9, v10);
  v13 = (uint64_t)v36;
  if (v36)
  {
    v34 = a2;
    v14 = TodayCard.media.getter(v11);
    v15 = type metadata accessor for TodayCardMediaBrandedSingleApp(0);
    v16 = swift_dynamicCastClass(v14, v15);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = type metadata accessor for TodayPageSectionGridTracker();
      v19 = type metadata accessor for BaseObjectGraph(0);
      inject<A, B>(_:from:)(&v36, v18, a3, v18, v19);
      v20 = v36;
      sub_100106FC4();
      HIDWORD(v33) = v21;
      v36 = v17;
      KeyPath = swift_getKeyPath(&unk_100671A88);
      ItemLayoutContext.subscript.getter(&v35);
      swift_release(KeyPath);
      v23 = v35;
      v24 = TodayCardMediaWithArtwork.artwork(for:)(v35, v15, &protocol witness table for TodayCardMediaBrandedSingleApp);

      if (v24)
      {
        v25 = swift_getKeyPath(&unk_100671AB8);
        ItemLayoutContext.subscript.getter(v8);
        swift_release(v25);
        v26 = swift_getKeyPath(&unk_100671A88);
        ItemLayoutContext.subscript.getter(&v36);
        swift_release(v26);
        v27 = v36;
        v28 = sub_10006FFB4(v24, SBYTE4(v33), (uint64_t)v8, v36);

        (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
        v29 = sub_10000DF3C(&qword_1007F5840);
        v30 = swift_allocObject(v29, 40, 7);
        *(_OWORD *)(v30 + 16) = xmmword_10066FE60;
        *(_QWORD *)(v30 + 32) = v28;
        v36 = (void *)v30;
        specialized Array._endMutation()(v30);
        v31._rawValue = v36;
        swift_retain(v28);
        ArtworkLoader.prefetchArtwork(using:)(v31);
        swift_release(v24);
        swift_release(v28);
        swift_bridgeObjectRelease(v31._rawValue);
      }
      swift_release(v14);
      swift_release(v20);
      v32 = v13;
    }
    else
    {
      swift_release(v13);
      v32 = v14;
    }
    *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  }
  return result;
}

uint64_t sub_100070944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F67E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007098C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000709B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10006DF04(a1, a2, a3, a4, v4);
}

void sub_1000709B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10006FB08(a1, a2, a3, a4, v4);
}

ValueMetadata *type metadata accessor for ArticlePresentingFlowActionLogic()
{
  return &type metadata for ArticlePresentingFlowActionLogic;
}

BOOL sub_1000709D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1000709FC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v8[4] = sub_1000717E8;
  v9 = a3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000BD6CC;
  v8[3] = &unk_100724868;
  v6 = _Block_copy(v8);
  v7 = v9;
  swift_retain(a3);
  objc_msgSend(a1, "presentViewController:animated:completion:", a2, 1, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

uint64_t sub_100070AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for ActionOutcome(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ActionOutcome.performed(_:), v0);
  Promise.resolve(_:)(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100070B50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t result;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v35 = a2;
  v3 = type metadata accessor for FlowPresentationContext(0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  __chkstk_darwin(v3);
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - v6;
  v8 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - v15;
  v17 = type metadata accessor for FlowDestination(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v35 - v22);
  v24 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(v39, v24);
  sub_10011BB90(a1, (uint64_t)v39, (uint64_t)v16);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v25(v16, 1, v17) == 1)
  {
    swift_storeEnumTagMultiPayload(v23, v17, 50);
    sub_100011088((uint64_t)v16, &qword_1007F7950);
  }
  else
  {
    sub_10002EF34((uint64_t)v16, (uint64_t)v23);
  }
  if (swift_getEnumCaseMultiPayload(v23, v17) != 21)
  {
    sub_10002F0D4((uint64_t)v23, type metadata accessor for FlowDestination);
    return 0;
  }
  swift_release(*v23);
  v26 = sub_10000DF3C(&qword_1007F6840);
  sub_100011088((uint64_t)v23 + *(int *)(v26 + 48), (uint64_t *)&unk_1007F5150);
  v27 = swift_retain(a1);
  v28 = FlowAction.presentationContext.getter(v27);
  FlowAction.animationBehavior.getter(v28);
  swift_release(a1);
  v29 = swift_retain(a1);
  dispatch thunk of Action.clickSender.getter(v39, v29);
  sub_10011BB90(a1, (uint64_t)v39, (uint64_t)v13);
  if (v25(v13, 1, v17) == 1)
  {
    swift_storeEnumTagMultiPayload(v20, v17, 50);
    sub_100011088((uint64_t)v13, &qword_1007F7950);
  }
  else
  {
    sub_10002EF34((uint64_t)v13, (uint64_t)v20);
  }
  v31 = v37;
  v30 = v38;
  v32 = v36;
  sub_10059EDA8((uint64_t)v7);
  sub_10002F0D4((uint64_t)v20, type metadata accessor for FlowDestination);
  sub_10002F0D4((uint64_t)v10, type metadata accessor for FlowPresentationHints);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v32, v7, v30);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v32, v30);
  result = 1;
  if (v33 != enum case for FlowPresentationContext.presentModal(_:)
    && v33 != enum case for FlowPresentationContext.presentModalFormSheet(_:)
    && v33 != enum case for FlowPresentationContext.presentModalPageSheet(_:)
    && v33 != enum case for FlowPresentationContext.presentModalFullScreen(_:))
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    return 0;
  }
  return result;
}

uint64_t sub_100070EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v20;

  v6 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002EF78(a2, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload(v11, v9))
  {
    case 0xAu:
      swift_release(*v11);
      swift_bridgeObjectRelease(v11[1]);
      v13 = sub_10000DF3C(&qword_1007F7990);
      v14 = (char *)v11 + *(int *)(v13 + 64);

      v15 = type metadata accessor for ShareSheetAction.ShareSheetStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      v12 = 0;
      break;
    case 0x13u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
      sub_10002F0D4((uint64_t)v11, type metadata accessor for FlowDestination);
      v12 = 0;
      break;
    case 0x1Bu:
      sub_10005596C((uint64_t)v11, (uint64_t)v8);
      v16 = type metadata accessor for ArticleContainerViewController();
      v17 = swift_dynamicCastClass(a1, v16) == 0;
      v18 = static ResilientDeepLinkController.preventDismissingArticlesForFlowUrl(_:bag:)(v8, a3);
      sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F5150);
      v12 = v17 | v18 ^ 1;
      break;
    default:
      sub_10002F0D4((uint64_t)v11, type metadata accessor for FlowDestination);
      v12 = 1;
      break;
  }
  return v12 & 1;
}

uint64_t sub_10007109C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  ProtocolDescriptor *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v27;
  void *v28;
  uint64_t ObjectType;
  void *v30;
  double v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  char v39;
  void *v40;
  ProtocolDescriptor *v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  id v46;
  void *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  ProtocolDescriptor *v59;
  void *v60;
  ProtocolDescriptor *v61;
  id v62;
  id v63;
  ProtocolDescriptor *v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  __int128 aBlock;
  __int128 v78;
  void *v79;
  ProtocolDescriptor *v80;
  void *v81;

  v6 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowDestination(0);
  v76 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DF3C(&qword_100803510);
  v12 = (ProtocolDescriptor *)Promise.__allocating_init()();
  v13 = sub_1002E4FC4(a2);
  if (!v13)
  {
    v32 = sub_1000717A4();
    v33 = swift_allocError(&type metadata for ArticlePresentingFlowActionLogic.ImplementationError, v32, 0, 0);
    *v34 = 1;
    Promise.reject(_:)(v33);
    swift_errorRelease(v33);
    return (uint64_t)v12;
  }
  v14 = v13;
  v70 = v9;
  v72 = v8;
  v15 = objc_msgSend(a2, "traitCollection");
  v81 = v14;
  v16 = sub_100019574(0, &qword_1007F6830, UINavigationController_ptr);
  v17 = v14;
  v18 = sub_10000DF3C(&qword_1007F6838);
  if ((swift_dynamicCast(&aBlock, &v81, v16, v18, 6) & 1) == 0)
  {
    v79 = 0;
    aBlock = 0u;
    v78 = 0u;
  }
  v71 = a1;
  sub_1003B18DC(a1, (uint64_t)v15, (uint64_t)&aBlock, a3);
  v20 = v19;

  sub_100011088((uint64_t)&aBlock, (uint64_t *)&unk_10080BD00);
  if (!v20)
  {
    v43 = sub_1000717A4();
    v44 = swift_allocError(&type metadata for ArticlePresentingFlowActionLogic.ImplementationError, v43, 0, 0);
    *v45 = 0;
    Promise.reject(_:)(v44);
    swift_errorRelease(v44);

    return (uint64_t)v12;
  }
  v68 = v11;
  v21 = type metadata accessor for ASKBagContract(0);
  v22 = *(_QWORD *)(a3 + qword_100854070);
  if (v22)
  {
    v23 = objc_msgSend(v17, "viewControllers", swift_retain(*(_QWORD *)(a3 + qword_100854070)).n128_f64[0]);
    v69 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v69);

    if ((unint64_t)v24 >> 62)
      goto LABEL_46;
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v25)
    {
      v73 = v20;
      v74 = v22;
      v75 = a2;
      a2 = v17;
      v22 = (uint64_t)v12;
      v20 = (void *)(v24 & 0xFFFFFFFFFFFFFF8);
      v17 = (id)(v24 + 32);
      v12 = &protocol descriptor for ArticlePresentingViewController;
      while (!__OFSUB__(v25--, 1))
      {
        if ((v24 & 0xC000000000000001) != 0)
        {
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v24);
        }
        else
        {
          if ((v25 & 0x8000000000000000) != 0)
            goto LABEL_44;
          if (v25 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_45;
          v27 = *((id *)v17 + v25);
        }
        v28 = v27;
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ArticlePresentingViewController))
          v30 = v28;
        else
          v30 = 0;
        if (v30)
        {
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
          goto LABEL_23;
        }

        if (!v25)
        {
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
          v30 = 0;
LABEL_23:
          v12 = (ProtocolDescriptor *)v22;
          v17 = a2;
          v22 = v74;
          a2 = v75;
          v20 = v73;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      if (v24 < 0)
        v66 = v24;
      else
        v66 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v25 = _CocoaArrayWrapper.endIndex.getter(v66);
      swift_bridgeObjectRelease(v24);
    }
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v24).n128_u64[0];
    v30 = 0;
LABEL_24:
    v35 = objc_msgSend(v17, "topViewController", v31);
    if (v35)
    {
      v36 = v35;
      if (v30)
      {
        v37 = v30;
        v38 = v36;
        v39 = static NSObject.== infix(_:_:)(v38, v37);

        if ((v39 & 1) != 0)
        {
          v79 = sub_1000717E8;
          v80 = v12;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v78 = sub_1000BD6CC;
          *((_QWORD *)&v78 + 1) = &unk_100724840;
          v40 = _Block_copy(&aBlock);
          v41 = v80;
          v42 = v37;
          swift_retain(v12);
          objc_msgSend(v42, "presentViewController:animated:completion:", v20, 1, v40, swift_release(v41).n128_f64[0]);

          _Block_release(v40);
          swift_release(v22);

          return (uint64_t)v12;
        }
      }
      else
      {

      }
    }
    v46 = objc_msgSend(a2, "presentedViewController");
    if (v46)
    {
      v47 = v46;
      if ((objc_msgSend(v46, "isBeingDismissed") & 1) == 0)
      {
        v48 = v71;
        v49 = swift_retain(v71);
        dispatch thunk of Action.clickSender.getter(&aBlock, v49);
        v50 = (uint64_t)v72;
        sub_10011BB90(v48, (uint64_t)&aBlock, (uint64_t)v72);
        v51 = v70;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v50, 1, v70) == 1)
        {
          v52 = (uint64_t)v68;
          swift_storeEnumTagMultiPayload(v68, v51, 50);
          sub_100011088(v50, &qword_1007F7950);
        }
        else
        {
          v52 = (uint64_t)v68;
          sub_10002EF34(v50, (uint64_t)v68);
        }
        v53 = sub_100070EE0((uint64_t)v47, v52, v22);
        sub_10002F0D4(v52, type metadata accessor for FlowDestination);
        if ((v53 & 1) != 0)
        {
          v54 = type metadata accessor for ArticleContainerViewController();
          v55 = swift_dynamicCastClass(v47, v54);
          if (v55)
          {
            v56 = *(void **)(v55
                           + OBJC_IVAR____TtC22SubscribePageExtension30ArticleContainerViewController_wrapperViewController);
            v57 = v47;
            v58 = objc_msgSend(v56, "popToRootViewControllerAnimated:", 0);

          }
          v59 = (ProtocolDescriptor *)swift_allocObject(&unk_100724800, 40, 7);
          *(_QWORD *)&v59->NumRequirements = a2;
          *(_QWORD *)&v59[1].Flags = v20;
          *(_QWORD *)&v59[1].Name = v12;
          v79 = sub_10007184C;
          v80 = v59;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v78 = sub_1000BD6CC;
          *((_QWORD *)&v78 + 1) = &unk_100724818;
          v60 = _Block_copy(&aBlock);
          v61 = v80;
          swift_retain(v12);
          v62 = a2;
          v63 = v20;
          objc_msgSend(v47, "dismissViewControllerAnimated:completion:", 1, v60, swift_release(v61).n128_f64[0]);

          goto LABEL_41;
        }
      }

    }
    v79 = sub_1000717E8;
    v80 = v12;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v78 = sub_1000BD6CC;
    *((_QWORD *)&v78 + 1) = &unk_1007247C8;
    v60 = _Block_copy(&aBlock);
    v64 = v80;
    swift_retain(v12);
    objc_msgSend(a2, "presentViewController:animated:completion:", v20, 1, v60, swift_release(v64).n128_f64[0]);

LABEL_41:
    _Block_release(v60);
    swift_release(v22);
    return (uint64_t)v12;
  }
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v21);
  __break(1u);
  return result;
}

unint64_t sub_1000717A4()
{
  unint64_t result;

  result = qword_1007F6828;
  if (!qword_1007F6828)
  {
    result = swift_getWitnessTable(&unk_100671BFC, &type metadata for ArticlePresentingFlowActionLogic.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007F6828);
  }
  return result;
}

uint64_t sub_1000717E8()
{
  return sub_100070AB4();
}

uint64_t sub_100071800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100071810(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100071818()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10007184C()
{
  uint64_t v0;

  sub_1000709FC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t getEnumTagSinglePayload for RatingView.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticlePresentingFlowActionLogic.ImplementationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100071934 + 4 * byte_100671B14[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100071968 + 4 * byte_100671B0F[v4]))();
}

uint64_t sub_100071968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100071970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100071978);
  return result;
}

uint64_t sub_100071984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10007198CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100071990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100071998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1000719A4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArticlePresentingFlowActionLogic.ImplementationError()
{
  return &type metadata for ArticlePresentingFlowActionLogic.ImplementationError;
}

unint64_t sub_1000719C4()
{
  unint64_t result;

  result = qword_1007F6848;
  if (!qword_1007F6848)
  {
    result = swift_getWitnessTable(&unk_100671BD4, &type metadata for ArticlePresentingFlowActionLogic.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007F6848);
  }
  return result;
}

uint64_t sub_100071A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  int v8;
  int v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for Paragraph.Alignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Paragraph.Alignment.left(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 0;
  }
  v8 = v6;
  if (v6 == enum case for Paragraph.Alignment.center(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 1;
  }
  else if (v6 == enum case for Paragraph.Alignment.right(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 2;
  }
  else if (v6 == enum case for Paragraph.Alignment.justified(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 3;
  }
  else
  {
    v9 = enum case for Paragraph.Alignment.localized(_:);
    v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v10(a1, v2);
    if (v8 != v9)
    {
      v10((uint64_t)v5, v2);
      return 0;
    }
    return 4;
  }
}

uint64_t type metadata accessor for ProductEditorsChoiceView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F6870;
  if (!qword_1007F6870)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProductEditorsChoiceView);
  return result;
}

uint64_t sub_100071BD4(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_100671C80;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + qword_100851000);
}

void sub_100071C2C()
{
  qword_100850FF8 = 0x4028000000000000;
}

char *sub_100071C3C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  char *v32;
  id v33;
  double left;
  double bottom;
  double right;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  objc_class *ObjectType;
  objc_super v49;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v47 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v4[qword_1007F6868] = 0;
  objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
  v21 = v4;
  *(_QWORD *)&v21[qword_1007F6850] = sub_100599FB4(3, 0, 0, 0, 1u);
  if (qword_1007F23B8 != -1)
    swift_once(&qword_1007F23B8, sub_100414B18);
  v22 = type metadata accessor for FontUseCase(0);
  v46 = sub_1000117A8(v22, (uint64_t)qword_100855010);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, v46, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v14, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = (char *)objc_allocWithZone((Class)type metadata accessor for FadeOutDynamicTypeLabel(0));
  v25 = qword_1007FF1A0;
  v26 = objc_allocWithZone((Class)type metadata accessor for InvertedGradientLayer());
  v27 = v24;
  *(_QWORD *)&v24[v25] = objc_msgSend(v26, "init");
  v28 = &v27[qword_1007FF1A8];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;

  sub_100072A20((uint64_t)v20, (uint64_t)v17);
  v29 = v47;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v14, v9);
  v30 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 6, 0, 1, 0, v29, 0, 0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  sub_100072A68((uint64_t)v20);
  *(_QWORD *)&v21[qword_1007F6858] = v30;
  v31 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v32 = sub_10039D6A4(v46, v31);

  *(_QWORD *)&v21[qword_1007F6860] = v32;
  v49.receiver = v21;
  v49.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v49, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v37 = (char *)v33;
  objc_msgSend(v37, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v38 = qword_1007F6850;
  v39 = *(void **)&v37[qword_1007F6850];
  sub_1000117FC();
  v40 = v39;
  v41 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v40, "setTintColor:", v41);

  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[v38]);
  v42 = *(void **)&v37[qword_1007F6858];
  objc_msgSend(v42, "setLineBreakMode:", 0);
  objc_msgSend(v37, "addSubview:", v42);
  v43 = *(void **)&v37[qword_1007F6860];
  objc_msgSend(v43, "setUserInteractionEnabled:", 0);
  objc_msgSend(v37, "addSubview:", v43);

  return v37;
}

char *sub_100072064(double a1, double a2, double a3, double a4)
{
  return sub_100071C3C(a1, a2, a3, a4);
}

void sub_100072084(_BYTE *a1, uint64_t a2, void *a3)
{
  id v4;

  a1[qword_1007F6868] = 0;
  v4 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/ProductEditorsChoiceView.swift", 53, 2, 59, 0);
  __break(1u);
}

uint64_t sub_1000720F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  void (*v19)(char *, uint64_t, __n128);
  uint64_t v21;

  v9 = type metadata accessor for VerticalStack(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v21 - v15;
  VerticalStack.init(with:)(sub_100072238, 0, v14);
  v17 = swift_allocObject(&unk_100724998, 32, 7);
  *(_BYTE *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = v4;
  VerticalStack.adding(_:with:)(a1, sub_100072A14, v17);
  v18 = swift_release(v17);
  v19 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
  v19(v12, v9, v18);
  a4[3] = v9;
  a4[4] = &protocol witness table for VerticalStack;
  sub_1000117C0(a4);
  VerticalStack.adding(_:with:)(a2, 0, 0);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v9);
}

uint64_t sub_100072238()
{
  return VerticalStack.Properties.alignment.setter(0);
}

uint64_t sub_10007225C(uint64_t a1, char a2)
{
  _QWORD v4[5];

  if (qword_1007F0F90 != -1)
    swift_once(&qword_1007F0F90, sub_100071C2C);
  v4[3] = &type metadata for CGFloat;
  v4[4] = &protocol witness table for CGFloat;
  v4[0] = qword_100850FF8;
  VerticalStack.Properties.bottomSpacing.setter(v4);
  return VerticalStack.Properties.shouldSkip.setter(a2 & 1);
}

uint64_t sub_1000722DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v7[5];
  _QWORD v8[5];

  swift_getObjectType();
  v7[0] = *(id *)(v1 + qword_1007F6850);
  v3 = type metadata accessor for EditorsChoiceView();
  Measurable.placeable.getter(v8, v3, &protocol witness table for UIView);
  v4 = *(void **)(v1 + qword_1007F6858);
  v7[3] = (id)type metadata accessor for FadeOutDynamicTypeLabel(0);
  v7[4] = &protocol witness table for UILabel;
  v5 = v4;
  sub_1000720F8((uint64_t)v8, (uint64_t)v7, (char)objc_msgSend(v7[0], "isHidden", v4), a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v8);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v7);
}

id sub_1000723AC()
{
  char *v0;
  char *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  UIFontTextStyle *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(void);
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double Width;
  id v35;
  double v36;
  double v37;
  char *v38;
  CGFloat Height;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  NSString *v48;
  double v49;
  double v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  id v57;
  void *v58;
  char *v59;
  uint64_t v60;
  double v61;
  double *v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  char *v80;
  _QWORD v81[5];
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for FontSource(0, v2);
  v75 = *(_QWORD *)(v3 - 8);
  v76 = v3;
  __chkstk_darwin(v3);
  v5 = (UIFontTextStyle *)((char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for StaticDimension(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v80 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DynamicTextAppearance(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v72 - v16;
  v18 = type metadata accessor for LabelPlaceholder(0, v15);
  v77 = *(_QWORD *)(v18 - 8);
  v78 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for CustomLayoutView(0);
  v22 = (void (*)(void))method lookup function for CustomLayoutView(v21, &method descriptor for CustomLayoutView.didLayout());
  v22();
  if (v0[qword_1007F6868] == 1)
    return objc_msgSend(*(id *)&v0[qword_1007F6860], "setHidden:", 1);
  v72 = v7;
  v73 = v6;
  v74 = *(char **)&v0[qword_1007F6858];
  v24 = objc_msgSend(v74, "text");
  if (v24)
  {
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  DynamicTextAppearance.init()(v24);
  if (qword_1007F23B8 != -1)
    swift_once(&qword_1007F23B8, sub_100414B18);
  v29 = type metadata accessor for FontUseCase(0);
  v30 = sub_1000117A8(v29, (uint64_t)qword_100855010);
  DynamicTextAppearance.withFontUseCase(_:)(v30);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v31 = LabelPlaceholder.Options.init(rawValue:)(0);
  v32 = v20;
  LabelPlaceholder.init(_:with:where:)(v26, v28, v17, v31);
  v33 = ObjectType;
  v82.origin.x = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  Width = CGRectGetWidth(v82);
  v35 = objc_msgSend(v1, "traitCollection");
  LabelPlaceholder.measure(toFit:with:)(v35, Width, 1.79769313e308);
  v37 = v36;

  v38 = v74;
  objc_msgSend(v74, "frame");
  Height = CGRectGetHeight(v83);
  v40 = *(void **)&v1[qword_1007F6860];
  if (Height >= v37)
  {
    objc_msgSend(*(id *)&v1[qword_1007F6860], "setHidden:", 1);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v20, v78);
  }
  else
  {
    objc_msgSend(*(id *)&v1[qword_1007F6860], "setHidden:", 0);
    LayoutMarginsAware<>.layoutFrame.getter(v33);
    objc_msgSend(v40, "sizeThatFits:", v41, v42);
    v44 = v43;
    *v5 = UIFontTextStyleBody;
    v46 = v75;
    v45 = v76;
    (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v75 + 104))(v5, enum case for FontSource.textStyle(_:), v76);
    v81[3] = v45;
    v81[4] = &protocol witness table for FontSource;
    v47 = sub_1000117C0(v81);
    (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v46 + 16))(v47, v5, v45);
    v48 = UIFontTextStyleBody;
    StaticDimension.init(_:scaledLike:)(v81, 8.0);
    (*(void (**)(UIFontTextStyle *, uint64_t))(v46 + 8))(v5, v45);
    v84.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v33);
    v49 = CGRectGetWidth(v84);
    objc_msgSend(v38, "frame");
    v50 = v44 - (v49 - CGRectGetWidth(v85));
    v51 = objc_msgSend(v1, "traitCollection");
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v52 = v33;
    v53 = sub_10000DF3C(&qword_1007F5840);
    v54 = v38;
    v55 = swift_allocObject(v53, 40, 7);
    *(_OWORD *)(v55 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v55 + 32) = v51;
    v56 = v32;
    v57 = v51;
    v58 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v55);
    v59 = v80;
    v60 = v73;
    v61 = dispatch thunk of AnyDimension.rawValue(in:)(v58, v73, &protocol witness table for StaticDimension);

    v62 = (double *)&v54[qword_1007FF1A8];
    *v62 = v50 + v61;
    *((_BYTE *)v62 + 8) = 0;
    objc_msgSend(v54, "setNeedsLayout");
    v86.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v52);
    CGRectGetMaxX(v86);
    objc_msgSend(v54, "frame");
    CGRectGetMaxY(v87);
    v63 = objc_msgSend(v1, "traitCollection");
    v64 = LayoutMarginsAware<>.layoutFrame.getter(v52);
    v65 = CGRect.withLayoutDirection(using:relativeTo:)(v63, v64);
    v67 = v66;
    v69 = v68;
    v71 = v70;

    objc_msgSend(v40, "setFrame:", v65, v67, v69, v71);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v59, v60);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v56, v78);
  }
}

id sub_100072958(uint64_t a1)
{
  return *(id *)(a1 + qword_1007F6850);
}

id sub_100072968(uint64_t a1)
{
  return *(id *)(a1 + qword_1007F6858);
}

void sub_100072978()
{
  uint64_t v0;

}

void sub_1000729B4(uint64_t a1)
{

}

uint64_t sub_1000729FC()
{
  return type metadata accessor for ProductEditorsChoiceView(0);
}

uint64_t sub_100072A04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100072A14(uint64_t a1)
{
  uint64_t v1;

  return sub_10007225C(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_100072A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100072A68(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidedSearchTokenToggleActionImplementation(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for GuidedSearchTokenToggleActionImplementation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidedSearchTokenToggleActionImplementation()
{
  return &type metadata for GuidedSearchTokenToggleActionImplementation;
}

unint64_t sub_100072B50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F68C0;
  if (!qword_1007F68C0)
  {
    v1 = type metadata accessor for GuidedSearchTokenToggleAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007F68C0);
  }
  return result;
}

Swift::Int sub_100072B98()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_100072BD8()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_100072BFC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_100072C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  void *v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v6 = type metadata accessor for SearchActionCalculator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2);
  v11 = (void *)sub_1002E5444(Strong);

  v37 = v11;
  v12 = sub_1000531A4();
  v13 = v11;
  v14 = sub_10000DF3C(&qword_1007F68C8);
  if ((swift_dynamicCast(&v34, &v37, v12, v14, 6) & 1) == 0)
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    sub_100011088((uint64_t)&v34, &qword_1007F68D0);
LABEL_6:
    sub_10000DF3C(&qword_100803510);
    v29 = sub_100073060();
    v30 = swift_allocError(&type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError, v29, 0, 0);
    v19 = Promise.__allocating_init(error:)(v30);

    return v19;
  }
  sub_100010F3C(&v34, (uint64_t)v38);
  v15 = v39;
  v16 = v40;
  sub_100011064(v38, v39);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  if (!v17)
  {
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
    goto LABEL_6;
  }
  v18 = v17;
  sub_10000DF3C(&qword_100803510);
  v19 = Promise.__allocating_init()();
  v20 = type metadata accessor for GuidedSearchPresenter(0);
  v21 = type metadata accessor for ObjectGraph(0);
  inject<A, B>(_:from:)(&v34, v20, a2, v20, v21);
  v33 = a2;
  v22 = v34;
  *((_QWORD *)&v35 + 1) = v20;
  v36 = &protocol witness table for GuidedSearchPresenter;
  v23 = swift_retain(v34);
  SearchActionCalculator.init(optimizationTermProviding:)(&v34, v23);
  v24 = SearchActionCalculator.searchAction(modifying:with:)(v18, a1);
  type metadata accessor for MetricsActivity(0);
  v26 = static MetricsActivity.current.getter(v25);
  v32 = (uint64_t)&v32;
  v27 = __chkstk_darwin(v26);
  *(&v32 - 4) = v3;
  *(&v32 - 3) = v24;
  *(&v32 - 2) = v33;
  *(&v32 - 1) = v19;
  dispatch thunk of MetricsActivity.performingContext(for:body:)(v24, sub_1000730A4, v27);

  swift_release(v22);
  swift_release(v18);
  v28 = swift_release(v26);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v28);
  swift_release(v24);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v38);
  return v19;
}

double sub_100072ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v7 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000DF3C(&qword_1007F78F0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  BaseObjectGraph.optional<A>(_:)(v9, v10, v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007F5140);
    v14 = sub_1000559B4();
    v15 = swift_allocError(&type metadata for GeneralActionImplementationError, v14, 0, 0);
    *v16 = 1;
    v17 = Promise.__allocating_init(error:)(v15);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v11 + 32))(v13, v9, v10);
    v17 = sub_10008EDFC(a2, a3, (uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  swift_release(a2);
  Promise.pipe(to:)(a4);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100073058(uint64_t *a1, uint64_t a2)
{
  return sub_100072C38(*a1, a2);
}

unint64_t sub_100073060()
{
  unint64_t result;

  result = qword_1007F68D8;
  if (!qword_1007F68D8)
  {
    result = swift_getWitnessTable(&unk_100671DBC, &type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007F68D8);
  }
  return result;
}

double sub_1000730A4()
{
  uint64_t *v0;

  return sub_100072ED0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t getEnumTagSinglePayload for GuidedSearchTokenToggleActionImplementation.ImplementationError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for GuidedSearchTokenToggleActionImplementation.ImplementationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100073144 + 4 * byte_100671CA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100073164 + 4 * byte_100671CA5[v4]))();
}

_BYTE *sub_100073144(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100073164(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10007316C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100073174(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10007317C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100073184(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GuidedSearchTokenToggleActionImplementation.ImplementationError()
{
  return &type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError;
}

unint64_t sub_1000731A4()
{
  unint64_t result;

  result = qword_1007F68E0;
  if (!qword_1007F68E0)
  {
    result = swift_getWitnessTable(&unk_100671D94, &type metadata for GuidedSearchTokenToggleActionImplementation.ImplementationError);
    atomic_store(result, (unint64_t *)&qword_1007F68E0);
  }
  return result;
}

uint64_t sub_1000731E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = swift_retain(v1);
    v3 = Screenshots.artwork.getter(v2);
    swift_release(v1);
    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v5 = v3;
      else
        v5 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v1 = _CocoaArrayWrapper.endIndex.getter(v5);
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v1 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v3);
  }
  return v1;
}

uint64_t sub_100073268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return v2;
  v4 = swift_retain(v2);
  v5 = Screenshots.artwork.getter(v4);
  result = swift_release(v2);
  if (a1 < 0)
    goto LABEL_13;
  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      goto LABEL_5;
LABEL_13:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (v5 < 0)
    v7 = v5;
  else
    v7 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v7);
  result = swift_bridgeObjectRelease(v5);
  if (v8 <= a1)
    goto LABEL_13;
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v2 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v5);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    v2 = *(_QWORD *)(v5 + 8 * a1 + 32);
    swift_retain(v2);
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return v2;
  }
  __break(1u);
  return result;
}

void sub_100073354(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  id v10;
  id v11;
  void *v12;
  double v13;
  id v14;
  id v15;
  char *v16;
  Swift::Bool v17;
  char v18[24];
  UIImage_optional v19;

  v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    if (a1)
    {
      v10 = a1;
      if ((dispatch thunk of Artwork.isPortrait.getter() & 1) != 0
        && (v11 = objc_msgSend(v10, "CGImage")) != 0)
      {
        v12 = v11;
        objc_msgSend(v10, "scale");
        v14 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v12, 2, v13);

      }
      else
      {
        v14 = v10;
      }
      v15 = *(id *)&v9[OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView];
      v16 = (char *)v14;
      v19.is_nil = (a2 & 1) == 0;
      v19.value.super.isa = (Class)v14;
      ArtworkView.setImage(image:animated:)(v19, v17);

      v9 = v16;
    }

  }
}

void sub_100073488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView;
  v5 = *(id *)(a1 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
  ArtworkView.image.setter(0);

  v6 = *(_QWORD *)(v2 + 24);
  if (v6)
  {
    v7 = *(void **)(a1 + v4);
    v8 = type metadata accessor for ArtworkView(0);
    v9 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    swift_retain(v6);
    v10 = v7;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1, v8, v9);
    swift_release(v6);

  }
}

uint64_t sub_100073554()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[6]);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for MediumDiagonalRiverCardDataSource()
{
  return objc_opt_self(_TtC22SubscribePageExtension33MediumDiagonalRiverCardDataSource);
}

uint64_t sub_1000735A8()
{
  return 4;
}

double sub_1000735B4()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(double *)(v0 + 32);
}

void sub_1000735E4(double a1, double a2)
{
  uint64_t v2;
  _BYTE v5[24];

  swift_beginAccess(v2 + 32, v5, 1, 0);
  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

void *sub_100073624(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_100073660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for RiverRowLayoutStyle.screenshots(_:);
  v3 = type metadata accessor for RiverRowLayoutStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1000736A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_100073268(a1);
  *a2 = result;
  return result;
}

id sub_1000736C8()
{
  uint64_t v0;

  v0 = type metadata accessor for BorderedScreenshotView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

void sub_1000736F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1000758DC(*a1, a3);
}

uint64_t sub_100073700()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;

  v0 = sub_10000DF3C(&qword_1007F5840);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100671250;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.768627451, 0.768627451, 0.768627451, 1.0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.129411765, 0.129411765, 0.129411765, 1.0);
  *(_QWORD *)(v1 + 40) = v2;
  result = specialized Array._endMutation()(v2);
  qword_1007F68E8 = v1;
  return result;
}

void sub_1000737C0()
{
  qword_1007F68F0 = (uint64_t)&off_100720E38;
}

char *sub_1000737D4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  objc_class *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  NSString v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  NSString v78;
  id v79;
  _BYTE v82[24];
  _BYTE v83[344];
  objc_super v84;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10000DF3C(&qword_100804490);
  __chkstk_darwin(v11);
  v13 = &v82[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_baseGradientView;
  v15 = (objc_class *)type metadata accessor for GradientView();
  v16 = objc_allocWithZone(v15);
  v17 = v5;
  *(_QWORD *)&v5[v14] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverContainerView;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverView] = 0;
  v19 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayContainer;
  *(_QWORD *)&v17[v19] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v20 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlaySolidView;
  *(_QWORD *)&v17[v20] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v21 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayGradientView;
  *(_QWORD *)&v17[v21] = objc_msgSend(objc_allocWithZone(v15), "init");
  v22 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_topOverlayGradientView;
  if (qword_1007F0FA0 != -1)
    swift_once(&qword_1007F0FA0, sub_1000737C0);
  v23 = qword_1007F68F0;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v23);
  *(_QWORD *)&v17[v22] = sub_1000DEB5C(v24);
  v25 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView;
  *(_QWORD *)&v17[v25] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TodayCardLockupView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_isAnimationEnabled] = 1;
  v17[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_isMotionEnabled] = 1;

  v84.receiver = v17;
  v84.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v84, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v26, "setClipsToBounds:", 1);
  objc_msgSend(v26, "_setContinuousCornerRadius:", 14.0);
  v27 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_baseGradientView;
  v28 = qword_1007F0F98;
  v29 = (char *)*(id *)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_baseGradientView];
  if (v28 != -1)
    swift_once(&qword_1007F0F98, sub_100073700);
  v30 = qword_1007F68E8;
  v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
  *(_QWORD *)&v29[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = qword_1007F68E8;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  sub_10003B47C();

  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[v27]);
  v32 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverContainerView;
  v33 = *(void **)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverContainerView];
  objc_msgSend(v33, "setClipsToBounds:", 1);
  v34 = objc_msgSend(v33, "layer");
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setCompositingFilter:", v35);

  v36 = *(void **)&v26[v32];
  objc_msgSend(v36, "setAlpha:", 0.75);
  objc_msgSend(v26, "addSubview:", v36);
  v37 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayContainer;
  v38 = *(void **)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayContainer];
  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlaySolidView]);
  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayGradientView]);
  v39 = objc_msgSend(v38, "layer");
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v39, "setCompositingFilter:", v40);

  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[v37]);
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_topOverlayGradientView]);
  v41 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView;
  v42 = *(_QWORD *)&v26[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView];
  objc_msgSend(*(id *)(v42 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_titleLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)(v42 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)(v42 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_ordinalLabel), "setAccessibilityIgnoresInvertColors:", 1);
  if (qword_1007F1920 != -1)
    swift_once(&qword_1007F1920, sub_10028C0C4);
  sub_100076534((uint64_t)&xmmword_100853000, (uint64_t)v83);
  v43 = v42 + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics;
  swift_beginAccess(v43, v82, 33, 0);
  sub_1000765A4((uint64_t)v83, v43);
  swift_endAccess(v82);
  v44 = *(_QWORD *)&v26[v41];
  if (qword_1007F1938 != -1)
    swift_once(&qword_1007F1938, sub_10028CF1C);
  sub_100076534((uint64_t)&xmmword_100853420, (uint64_t)v83);
  v45 = v44 + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_axMetrics;
  swift_beginAccess(v45, v82, 33, 0);
  sub_1000765A4((uint64_t)v83, v45);
  swift_endAccess(v82);
  v46 = qword_1007F1488;
  v47 = *(id *)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  if (v46 != -1)
    swift_once(&qword_1007F1488, sub_10015E738);
  v48 = type metadata accessor for Shadow(0);
  v49 = sub_1000117A8(v48, (uint64_t)qword_100852198);
  v50 = *(_QWORD *)(v48 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v50 + 16))(v13, v49, v48);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v13, 0, 1, v48);
  ArtworkView.shadow.setter(v13);

  v51 = *(id *)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v51);

  v52 = *(void **)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v53 = (void *)objc_opt_self(UIColor);
  v54 = v52;
  v55 = objc_msgSend(v53, "whiteColor");
  v56 = objc_msgSend(v55, "colorWithAlphaComponent:", 0.08);

  dispatch thunk of RoundedCornerView.borderColor.setter(v56);
  v57 = *(id *)&v26[v41];
  sub_1004BB518(objc_msgSend(v53, "whiteColor"));

  v58 = *(id *)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_ordinalLabel);
  v59 = objc_msgSend(v53, "whiteColor");
  objc_msgSend(v58, "setTextColor:", v59);

  v60 = *(void **)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel);
  sub_1000117FC();
  v61 = v60;
  v62 = (void *)static UIColor.secondaryText.getter(v61);
  v63 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
  v64 = objc_msgSend(v62, "resolvedColorWithTraitCollection:", v63);

  objc_msgSend(v61, "setTextColor:", v64);
  v65 = *(id *)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton);
  v66 = objc_msgSend(v53, "whiteColor");
  objc_msgSend(v65, "setTintColor:", v66);

  v67 = *(id *)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel);
  v68 = objc_msgSend(v53, "whiteColor");
  objc_msgSend(v67, "setTextColor:", v68);

  v69 = objc_retain(*(id *)(*(_QWORD *)&v26[v41]
                          + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkTitleLabel));
  v70 = objc_msgSend(v53, "whiteColor");
  objc_msgSend(v69, "setTextColor:", v70);

  v71 = objc_retain(*(id *)(*(_QWORD *)&v26[v41]
                          + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkSubtitleLabel));
  v72 = objc_msgSend(v53, "whiteColor");
  objc_msgSend(v71, "setTextColor:", v72);

  v73 = objc_msgSend(*(id *)&v26[v41], "traitCollection");
  v74 = objc_msgSend(v73, "userInterfaceStyle");

  v75 = &kCAFilterPlusD;
  if (v74 != (id)1)
    v75 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v75);
  v77 = v76;
  v78 = String._bridgeToObjectiveC()();
  v79 = objc_msgSend(*(id *)(*(_QWORD *)&v26[v41] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel), "layer", swift_bridgeObjectRelease(v77).n128_f64[0]);
  objc_msgSend(v79, "setCompositingFilter:", v78);

  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[v41]);
  return v26;
}

void sub_1000741B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  void *v15;
  id v16;
  id v17;

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverView;
  v5 = *(id *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverView);
  if (v5)
  {
    if (a1)
    {
      sub_10000DF3C(&qword_1007F6A30);
      v6 = v5;
      v7 = a1;
      v8 = static NSObject.== infix(_:_:)(v6, v7);

      if ((v8 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      v9 = v5;
    }
    dispatch thunk of RiverView.cleanUp()(v9);
    objc_msgSend(v5, "removeFromSuperview");
LABEL_7:

  }
  v10 = *(void **)(v2 + v4);
  *(_QWORD *)(v2 + v4) = a1;
  v11 = a1;

  v12 = *(void **)(v2 + v4);
  if (!v12)
  {

    v15 = v5;
    goto LABEL_15;
  }
  v17 = *(id *)(v2 + v4);
  if (!v5)
  {
    v16 = v12;
    goto LABEL_14;
  }
  sub_10000DF3C(&qword_1007F6A30);
  v5 = v5;
  v13 = v17;
  v14 = static NSObject.== infix(_:_:)(v13, v5);

  if ((v14 & 1) == 0)
  {
LABEL_14:
    objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverContainerView), "addSubview:", v17);

    v15 = v17;
    goto LABEL_15;
  }

  v15 = v13;
LABEL_15:

}

void sub_100074310()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  id v21;
  id v22;
  CGAffineTransform v23;
  CGRect v24;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverContainerView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlaySolidView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v3, "setFrame:");
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayGradientView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "setFrame:");
  v5 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayContainer];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v5, "setFrame:");
  v6 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_topOverlayGradientView];
  objc_msgSend(v1, "bounds");
  objc_msgSend(v6, "setFrame:");
  v7 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverView];
  if (v7)
  {
    v8 = v7;
    v9 = dispatch thunk of RiverView.dataSource.getter();
    v10 = *(_QWORD *)(v9 + 16);
    swift_retain(v10);
    objc_msgSend(v1, "bounds", swift_release(v9).n128_f64[0]);
    sub_100075F34(v10);
    v12 = v11;
    v14 = v13;
    swift_release(v10);
    dispatch thunk of RiverView.setItemSize(size:)(v12, v14);
    CGAffineTransformMakeRotation(&v23, 1.04719755);
    a = v23.a;
    b = v23.b;
    c = v23.c;
    d = v23.d;
    tx = v23.tx;
    ty = v23.ty;
    objc_msgSend(v2, "bounds");
    v23.a = a;
    v23.b = b;
    v23.c = c;
    v23.d = d;
    v23.tx = tx;
    v23.ty = ty;
    CGRectApplyAffineTransform(v24, &v23);
    v21 = v8;
    objc_msgSend(v21, "bounds");
    objc_msgSend(v21, "setBounds:");

    v22 = v21;
    objc_msgSend(v2, "center");
    objc_msgSend(v22, "setCenter:");

    v23.a = a;
    v23.b = b;
    v23.c = c;
    v23.d = d;
    v23.tx = tx;
    v23.ty = ty;
    objc_msgSend(v22, "setTransform:", &v23);

  }
}

id sub_100074544()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double MinX;
  double MinY;
  CGRect v9;
  CGRect v10;
  CGRect v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView];
  objc_msgSend(v1, "setLayoutMargins:", 12.0, 20.0, 24.0, 20.0);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "sizeThatFits:", v2, v3);
  v5 = v4;
  objc_msgSend(v0, "bounds");
  MinX = CGRectGetMinX(v9);
  objc_msgSend(v0, "bounds");
  MinY = CGRectGetMinY(v10);
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v1, "setFrame:", MinX, MinY, CGRectGetWidth(v11), v5);
}

void sub_1000746C0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  double v44;
  double v45;
  double v46;
  char *v47;
  id v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  __n128 v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  __n128 v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  __n128 v117;
  double *v118;
  __n128 v119;
  double v120;
  double v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  double v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  __n128 v142;
  char *v143;
  void *v144;
  id v145;
  id v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  id v152;
  NSString v153;
  void *v154;
  id v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  id v161;
  uint64_t v162;
  char *v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char v189[24];
  uint64_t v190;

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  v7 = __chkstk_darwin(v6);
  v173 = (char *)&v168 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for Artwork.Crop(0, v7);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v10);
  v169 = (char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v12);
  v14 = (char *)&v168 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v15);
  v178 = (char *)&v168 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v17);
  v177 = (char *)&v168 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v19);
  v176 = (char *)&v168 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v168 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v168 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v29);
  v31 = (char *)&v168 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for RiverViewStyling(0);
  v184 = *(_QWORD *)(v32 - 8);
  v185 = v32;
  __chkstk_darwin(v32);
  v34 = (char *)&v168 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v183 = (char *)&v168 - v36;
  v37 = type metadata accessor for ArtworkLoader(0);
  v180 = a2;
  v38 = *(_QWORD *)(a2 + qword_100854050);
  if (!v38)
    goto LABEL_55;
  v39 = type metadata accessor for MediumDiagonalRiverCardDataSource();
  v40 = swift_allocObject(v39, 64, 7);
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_QWORD *)(v40 + 48) = 0;
  *(_QWORD *)(v40 + 56) = 4;
  v182 = v40;
  v187 = v38;
  v41 = swift_retain(v38);
  v42 = MediumAdLockupWithScreenshotsBackground.riverSpeed.getter(v41);
  v186 = v3;
  v175 = v24;
  if ((v43 & 1) != 0)
    v44 = static RiverViewStyling.todayTabSpeed.getter(v42);
  else
    v44 = *(double *)&v42;
  v45 = static RiverViewStyling.defaultInterRowSpacing.getter();
  v46 = static RiverViewStyling.defaultInterItemSpacing.getter();
  static RiverViewStyling.defaultRowOffsets.getter();
  v47 = v183;
  RiverViewStyling.init(itemSize:interRowSpacing:interItemSpacing:speed:rowOffsets:reverseAlternatingRows:)(0.0, 0.0, v45, v46, v44);
  (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v34, v47, v185);
  v48 = objc_allocWithZone((Class)sub_10000DF3C(&qword_1007F6A30));
  v49 = swift_retain(v182);
  v50 = (char *)RiverView.init(dataSource:styling:)(v49);
  v51 = MediumAdLockupWithScreenshotsBackground.screenshots.getter(objc_msgSend(v50, "setHidden:", 0));
  v52 = v51;
  if ((unint64_t)v51 >> 62)
  {
    if (v51 >= 0)
      v51 &= 0xFFFFFFFFFFFFFF8uLL;
    v53 = _CocoaArrayWrapper.endIndex.getter(v51);
  }
  else
  {
    v53 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v188 = a1;
  v179 = v14;
  if (v53)
  {
    if ((v52 & 0xC000000000000001) != 0)
    {
      v54 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v52);
    }
    else
    {
      if (!*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_52:
        swift_once(&qword_1007F2208, sub_1004139A0);
LABEL_18:
        v90 = type metadata accessor for FontUseCase(0);
        v91 = sub_1000117A8(v90, (uint64_t)qword_100854B18);
        v92 = *(_QWORD *)(v90 - 8);
        v93 = v169;
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v169, v91, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v93, 0, 1, v90);
        dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v93);

        v94 = *(void **)&v50[a1];
        if (v94)
          objc_msgSend(v94, "setAccessibilityIgnoresInvertColors:", 1);
        goto LABEL_20;
      }
      v54 = *(_QWORD *)(v52 + 32);
      swift_retain(v54);
    }
    v55 = swift_bridgeObjectRelease(v52);
  }
  else
  {
    v55 = swift_bridgeObjectRelease(v52);
    v54 = 0;
  }
  v56 = dispatch thunk of RiverView.dataSource.getter(v55);
  v57 = *(_QWORD *)(v56 + 24);
  v58 = v187;
  *(_QWORD *)(v56 + 24) = v187;
  swift_retain(v58);
  swift_release(v56);
  v59 = swift_release(v57);
  v60 = dispatch thunk of RiverView.dataSource.getter(v59);
  v61 = *(_QWORD *)(v60 + 48);
  v62 = v180;
  *(_QWORD *)(v60 + 48) = v180;
  swift_release(v61);
  swift_retain(v62);
  v63 = swift_release(v60);
  v64 = dispatch thunk of RiverView.dataSource.getter(v63);
  v65 = *(_QWORD *)(v64 + 16);
  *(_QWORD *)(v64 + 16) = v54;
  v181 = v54;
  swift_retain(v54);
  swift_release(v64);
  swift_release(v65);
  v66 = v186;
  dispatch thunk of RiverView.isAnimating.setter(v186[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_isAnimationEnabled]);
  objc_msgSend(v50, "setHidden:", 0);
  v174 = v50;
  sub_1000741B4(v50);
  v50 = *(char **)&v66[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView];
  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel], "_setTextColorFollowsTintColor:", 0);
  v68 = MediumAdLockupWithScreenshotsBackground.lockup.getter(v67);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, enum case for OfferButtonPresenterViewAlignment.right(_:), v25);
  v69 = v175;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v175, 1, 1, v25);
  v70 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  AccessibilityConditional.init(value:axValue:)(v28, v69, v25, v70);
  v71 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v31, 0, 1, v71);
  v72 = type metadata accessor for OfferStyle(0);
  v73 = (uint64_t)v176;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v176, 1, 1, v72);
  v74 = type metadata accessor for OfferEnvironment(0);
  v75 = (uint64_t)v177;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v177, 1, 1, v74);
  v76 = type metadata accessor for OfferTint(0);
  v77 = (uint64_t)v178;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v178, 1, 1, v76);
  v78 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v79 = (uint64_t)v179;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v179, 1, 1, v78);
  sub_10054F220(v68, v50, (uint64_t)v31, v62, 0, 0, v73, v75, v77, v79);
  v50[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 1;
  sub_10028DF50();
  objc_msgSend(v50, "setNeedsLayout");
  sub_10028DF50();
  swift_release(v68);
  sub_100011088(v79, (uint64_t *)&unk_1007F7C10);
  sub_100011088(v77, (uint64_t *)&unk_1007F76F0);
  sub_100011088(v75, (uint64_t *)&unk_1007F7C20);
  sub_100011088(v73, (uint64_t *)&unk_1007F7700);
  sub_100011088((uint64_t)v31, (uint64_t *)&unk_1007F7710);
  v80 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel];
  v28 = (char *)NSMutableArray_ptr;
  if (v80)
  {
    v81 = (void *)objc_opt_self(UIColor);
    v82 = v80;
    v83 = objc_msgSend(v81, "whiteColor");
    objc_msgSend(v82, "setTextColor:", v83);

  }
  a1 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel;
  v84 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel];
  v25 = v181;
  if (v84)
  {
    v85 = (void *)objc_opt_self(UIColor);
    v86 = v84;
    v87 = objc_msgSend(v85, "whiteColor");
    objc_msgSend(v86, "setTextColor:", v87);

    v88 = *(void **)&v50[a1];
    if (v88)
    {
      v89 = qword_1007F2208;
      v52 = v88;
      if (v89 == -1)
        goto LABEL_18;
      goto LABEL_52;
    }
  }
LABEL_20:
  if (!v25)
    goto LABEL_40;
  swift_retain(v25);
  v96 = Screenshots.artwork.getter(v95);
  swift_release(v25);
  if (!((unint64_t)v96 >> 62))
  {
    if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_23;
LABEL_39:
    swift_bridgeObjectRelease(v96);
    goto LABEL_40;
  }
  if (v96 < 0)
    v103 = v96;
  else
    v103 = v96 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v96);
  v104 = _CocoaArrayWrapper.endIndex.getter(v103);
  swift_bridgeObjectRelease(v96);
  if (!v104)
    goto LABEL_39;
LABEL_23:
  if ((v96 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v97 = *(_QWORD *)(v96 + 32);
      swift_retain(v97);
      goto LABEL_26;
    }
    __break(1u);
LABEL_55:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v37);
    __break(1u);
    return;
  }
  v97 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v96);
LABEL_26:
  swift_bridgeObjectRelease(v96);
  v99 = (void *)Artwork.backgroundColor.getter(v98);
  v100 = swift_release(v97);
  if (v99)
  {
    v101 = UIColor.isDark.getter(v100);

    if ((v101 & 1) != 0)
      v102 = 2;
    else
      v102 = 1;
    goto LABEL_41;
  }
LABEL_40:
  v102 = 2;
LABEL_41:
  v105 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
  v106 = *(void **)&v50[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView];
  v107 = (void *)objc_opt_self(*((_QWORD *)v28 + 61));
  v108 = v106;
  v109 = objc_msgSend(v107, "systemGray5Color");
  v110 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", v102);
  v111 = objc_msgSend(v109, "resolvedColorWithTraitCollection:", v110);

  v112 = objc_msgSend(v111, "colorWithAlphaComponent:", 0.35);
  ArtworkView.backgroundColor.setter(v112);

  v114 = MediumAdLockupWithScreenshotsBackground.lockup.getter(v113);
  v116 = Lockup.icon.getter(v115);
  v117 = swift_release(v114);
  if (v116)
  {
    v118 = (double *)&v50[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics];
    v119 = swift_beginAccess(&v50[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics], v189, 0, 0);
    v120 = *v118;
    v121 = v118[1];
    v122 = v170;
    v123 = Artwork.crop.getter(v119);
    v124 = Artwork.Crop.preferredContentMode.getter(v123);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v122, v172);
    v125 = Artwork.config(_:mode:prefersLayeredImage:)(v124, 0, v120, v121);
    v126 = *(id *)&v50[v105];
    v127 = v173;
    Artwork.style.getter(v126);
    v128 = ArtworkView.style.setter(v127);
    *(_QWORD *)&v129 = Artwork.contentMode.getter(v128).n128_u64[0];
    v131 = ArtworkLoaderConfig.size.getter(objc_msgSend(v126, "setContentMode:", v130, v129));
    v133 = ArtworkView.imageSize.setter(v131, v132);
    v134 = Artwork.backgroundColor.getter(v133);
    if (!v134)
    {
      sub_1000117FC();
      v134 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v134);

    v135 = *(void **)&v50[v105];
    objc_msgSend(v135, "setContentMode:", 1);
    v136 = type metadata accessor for ArtworkView(0);
    v137 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v138 = v135;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v125, 2, 1, v138, v136, v137);
    swift_release(v116);
    swift_release(v125);

    v25 = v181;
  }
  v139 = MediumAdLockupWithScreenshotsBackground.backgroundColor.getter(v117);
  if (v139)
  {
    v140 = (void *)v139;
    v141 = MediumAdLockupWithScreenshotsBackground.secondaryTextColor.getter();
    v143 = v186;
    v144 = *(void **)&v186[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlaySolidView];
    if (v141)
    {
      v145 = (id)v141;
      objc_msgSend(*(id *)&v186[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlaySolidView], "setBackgroundColor:", v141);
      v146 = objc_msgSend(v144, "layer");
      objc_msgSend(v146, "setCompositingFilter:", 0);

      v147 = *(char **)&v143[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayGradientView];
      v148 = sub_10000DF3C(&qword_1007F5840);
      v149 = swift_allocObject(v148, 48, 7);
      *(_OWORD *)(v149 + 16) = xmmword_100671250;
      v150 = objc_msgSend(v140, "colorWithAlphaComponent:", 0.4);
      *(_QWORD *)(v149 + 32) = v150;
      *(_QWORD *)(v149 + 40) = v140;
      v190 = v149;
      specialized Array._endMutation()(v150);
      v151 = *(_QWORD *)&v147[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
      *(_QWORD *)&v147[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v190;
      v152 = v140;
      swift_bridgeObjectRelease(v151);
      sub_10003B47C();
      sub_10003B2E4((uint64_t)&off_100720DA8);
      v153 = objc_msgSend(v147, "layer");
      objc_msgSend(v153, "setCompositingFilter:", 0);
    }
    else
    {
      v154 = (void *)MediumAdLockupWithScreenshotsBackground.backgroundColor.getter(v142);
      objc_msgSend(v144, "setBackgroundColor:", v154);

      v155 = objc_msgSend(v144, "layer");
      objc_msgSend(v155, "setCompositingFilter:", 0);

      v156 = *(char **)&v186[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayGradientView];
      v157 = sub_10000DF3C(&qword_1007F5840);
      v158 = swift_allocObject(v157, 48, 7);
      *(_OWORD *)(v158 + 16) = xmmword_100671250;
      v159 = objc_msgSend(v107, "whiteColor");
      v160 = objc_msgSend(v159, "colorWithAlphaComponent:", 0.4);

      *(_QWORD *)(v158 + 32) = v160;
      v161 = objc_msgSend(v107, "clearColor");
      *(_QWORD *)(v158 + 40) = v161;
      v190 = v158;
      specialized Array._endMutation()(v161);
      v162 = *(_QWORD *)&v156[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
      *(_QWORD *)&v156[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v190;
      swift_bridgeObjectRelease(v162);
      sub_10003B47C();
      sub_10003B2E4((uint64_t)&off_100720DD8);
      v143 = v186;
      v145 = objc_msgSend(v156, "layer");
      v153 = String._bridgeToObjectiveC()();
      v25 = v181;
      objc_msgSend(v145, "setCompositingFilter:", v153);
    }

    v163 = *(char **)&v143[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_topOverlayGradientView];
    v164 = v140;
    v165 = sub_1000DFD40((uint64_t)v140);
    v167 = v166;

    swift_bridgeObjectRetain(v165);
    swift_bridgeObjectRetain(v167);
    sub_1000DF764((uint64_t)v165, v167);
    *(_QWORD *)&v163[OBJC_IVAR____TtC22SubscribePageExtension28TodayCardProtectionLayerView_blurUserInterfaceStyle] = 2;
    sub_1000DF6A8();
    objc_msgSend(v163, "setNeedsLayout");
    swift_bridgeObjectRelease(v167);
    objc_msgSend(v143, "setNeedsLayout", swift_bridgeObjectRelease(v165).n128_f64[0]);
    swift_release(v182);
    swift_release(v187);

    swift_release(v25);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v183, v185);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v184 + 8))(v183, v185);

    swift_release(v25);
    swift_release(v187);
    swift_release(v182);
  }
}

uint64_t type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView);
}

double sub_100075894(uint64_t a1, uint64_t a2)
{
  return sub_10028BD34(a1, a2);
}

uint64_t sub_1000758BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

void sub_1000758DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  char v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  _QWORD v52[5];
  _BYTE v53[24];
  _BYTE v54[88];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0, a2);
  __chkstk_darwin(v6);
  v8 = (char *)&v52[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 16);
  if (v9)
  {
    v10 = swift_retain(*(_QWORD *)(v2 + 16));
    v11 = Screenshots.mediaPlatform.getter(v10);
    swift_release(v9);
  }
  else
  {
    v11 = 0;
  }
  sub_10022F9D4(v11, (uint64_t)v54);
  swift_release(v11);
  sub_10022F34C((uint64_t)v54);
  sub_100075D04((uint64_t)v54);
  swift_beginAccess(v3 + 32, v53, 0, 0);
  v12 = *(double *)(v3 + 32);
  v13 = *(double *)(v3 + 40);
  v15 = dispatch thunk of Artwork.isPortrait.getter(v14);
  if ((v15 & 1) != 0)
    v16 = v12;
  else
    v16 = v13;
  if ((v15 & 1) != 0)
    v17 = v13;
  else
    v17 = v12;
  v18 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v17, v16);
  v19 = OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView;
  v20 = *(id *)(a2 + OBJC_IVAR____TtC22SubscribePageExtension22BorderedScreenshotView_artworkView);
  Artwork.style.getter(v20);
  ArtworkView.style.setter(v8);

  v21 = *(id *)(a2 + v19);
  objc_msgSend(v21, "setContentMode:", Artwork.contentMode.getter(v21));

  v22 = *(double *)(v3 + 32);
  v23 = *(double *)(v3 + 40);
  v24 = *(id *)(a2 + v19);
  ArtworkView.imageSize.setter(v22, v23);

  v25 = *(_QWORD *)(v3 + 16);
  if (!v25)
    goto LABEL_25;
  swift_retain(*(_QWORD *)(v3 + 16));
  v27 = Screenshots.artwork.getter(v26);
  swift_release(v25);
  if (!((unint64_t)v27 >> 62))
  {
    if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
    goto LABEL_24;
  }
  if (v27 < 0)
    v34 = v27;
  else
    v34 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v27);
  v35 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v27);
  if (!v35)
  {
LABEL_24:
    swift_bridgeObjectRelease(v27);
LABEL_25:
    v33 = 2;
    goto LABEL_26;
  }
LABEL_13:
  if ((v27 & 0xC000000000000001) != 0)
  {
    v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
  }
  else
  {
    if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v28 = *(_QWORD *)(v27 + 32);
    swift_retain(v28);
  }
  swift_bridgeObjectRelease(v27);
  v30 = (void *)Artwork.backgroundColor.getter(v29);
  v31 = swift_release(v28);
  if (!v30)
    goto LABEL_25;
  v32 = UIColor.isDark.getter(v31);

  if ((v32 & 1) != 0)
    v33 = 2;
  else
    v33 = 1;
LABEL_26:
  v36 = *(void **)(a2 + v19);
  v37 = (void *)objc_opt_self(UIColor);
  v38 = v36;
  v39 = objc_msgSend(v37, "systemGray5Color");
  v40 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", v33);
  v41 = objc_msgSend(v39, "resolvedColorWithTraitCollection:", v40);

  v42 = objc_msgSend(v41, "colorWithAlphaComponent:", 0.35);
  ArtworkView.backgroundColor.setter(v42);

  v43 = *(_QWORD *)(v3 + 24);
  if (v43)
  {
    type metadata accessor for ArtworkLoader(0);
    v44 = *(void **)(a2 + v19);
    v45 = type metadata accessor for ArtworkView(0);
    swift_retain(v43);
    v46 = v44;
    static ArtworkLoader.handlerKey<A>(for:)(v52, v46, v45);

    v47 = swift_allocObject(&unk_100724B70, 24, 7);
    swift_unknownObjectWeakInit(v47 + 16, a2);
    v48 = swift_allocObject(&unk_100724B98, 32, 7);
    *(_QWORD *)(v48 + 16) = v47;
    *(_QWORD *)(v48 + 24) = a1;
    swift_retain(v47);
    v49 = swift_retain(a1);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v18, 2, 1, v52, sub_100075D7C, v48, v49);
    swift_release(v18);
    swift_release(v43);
    swift_release(v48);
    sub_100011088((uint64_t)v52, (uint64_t *)&unk_1007F9850);
    v50 = v47;
  }
  else
  {
    v50 = v18;
  }
  swift_release(v50);
}

uint64_t sub_100075D04(uint64_t a1)
{

  return a1;
}

uint64_t sub_100075D2C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100075D50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100075D7C(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100073354(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_100075D84()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_baseGradientView;
  v3 = (objc_class *)type metadata accessor for GradientView();
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(v3), "init");
  v4 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverContainerView;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_riverView] = 0;
  v5 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayContainer;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlaySolidView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_joeColorGradientOverlayGradientView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(v3), "init");
  v8 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_topOverlayGradientView;
  if (qword_1007F0FA0 != -1)
    swift_once(&qword_1007F0FA0, sub_1000737C0);
  v9 = qword_1007F68F0;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v9);
  *(_QWORD *)&v1[v8] = sub_1000DEB5C(v10);
  v11 = OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_lockupView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TodayCardLockupView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC22SubscribePageExtension43MediumAdLockupWithScreenshotsBackgroundView_isAnimationEnabled] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/MediumAdLockupWithScreenshotsBackgroundView.swift", 72, 2, 176, 0);
  __break(1u);
}

uint64_t sub_100075F34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for AspectRatio(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return result;
  v7 = Screenshots.artwork.getter(result);
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(v7);
    if (result)
      goto LABEL_4;
    return swift_bridgeObjectRelease(v8);
  }
  result = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
    return swift_bridgeObjectRelease(v8);
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v9 = *(_QWORD *)(v8 + 32);
    swift_retain(v9);
  }
  v10 = swift_bridgeObjectRelease(v8);
  v11 = dispatch thunk of Artwork.isPortrait.getter(v10);
  v12 = v11;
  v13 = Artwork.size.getter(v11);
  v14 = AspectRatio.init(_:_:)(v13);
  if ((v12 & 1) != 0)
    AspectRatio.height(fromWidth:)(v14, 98.0);
  else
    AspectRatio.width(fromHeight:)(98.0);
  swift_release(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_10007608C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  double v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *, uint64_t);
  uint64_t KeyPath;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[43];
  void *v51;

  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (_QWORD *)((char *)&v50[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for MediumAdLockupWithScreenshotsBackground(0, v9);
  v13 = sub_10000E99C(&qword_1007F6A38, (uint64_t (*)(uint64_t))&type metadata accessor for MediumAdLockupWithScreenshotsBackground, (uint64_t)&protocol conformance descriptor for MediumAdLockupWithScreenshotsBackground);
  v14 = ItemLayoutContext.typedModel<A>(as:)(v50, v12, v12, v13);
  v15 = v50[0];
  if (v50[0])
  {
    v16 = MediumAdLockupWithScreenshotsBackground.screenshots.getter(v14);
    v17 = v16;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 >= 0)
        v16 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v16))
      {
LABEL_4:
        v49 = a2;
        if ((v17 & 0xC000000000000001) != 0)
        {
          a2 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
        }
        else
        {
          if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_31:
            swift_once(&qword_1007F1920, sub_10028C0C4);
LABEL_8:
            sub_100076534((uint64_t)&xmmword_100853000, (uint64_t)v50);
            if (qword_1007F1938 != -1)
              swift_once(&qword_1007F1938, sub_10028CF1C);
            sub_10028E66C((uint64_t)v50, (uint64_t)&xmmword_100853420, v3, v4);
            sub_100076570(v50);

            v22 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
            v22(v11, v7);
            KeyPath = swift_getKeyPath(&unk_100671F80);
            ItemLayoutContext.subscript.getter(v11);
            swift_release(KeyPath);
            v25 = PageGrid.columnWidth.getter(v24);
            ((void (*)(_QWORD *, uint64_t, double))v22)(v11, v7, v25);
            sub_100075F34(a2);
            v27 = v26;
            v29 = v28;
            if ((unint64_t)v2 >> 62)
            {
              if (v2 < 0)
                v44 = v2;
              else
                v44 = v2 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v2);
              v30 = _CocoaArrayWrapper.endIndex.getter(v44);
              swift_bridgeObjectRelease(v2);
              if (v30)
                goto LABEL_12;
            }
            else
            {
              v30 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v30)
              {
LABEL_12:
                v50[0] = _swiftEmptyArrayStorage;
                specialized ContiguousArray.reserveCapacity(_:)(v30);
                if (v30 < 0)
                {
                  __break(1u);
                  goto LABEL_43;
                }
                v32 = 0;
                do
                {
                  if ((v2 & 0xC000000000000001) != 0)
                  {
                    v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v2);
                    v34 = v33;
                  }
                  else
                  {
                    v34 = *(_QWORD *)(v2 + 8 * v32 + 32);
                    swift_retain(v34);
                  }
                  v35 = dispatch thunk of Artwork.isPortrait.getter(v33);
                  if ((v35 & 1) != 0)
                    v36 = v27;
                  else
                    v36 = v29;
                  if ((v35 & 1) != 0)
                    v37 = v29;
                  else
                    v37 = v27;
                  ++v32;
                  v38 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v37, v36);
                  swift_release(v34);
                  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v39);
                  v40 = *(_QWORD *)(v50[0] + 16);
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v40);
                  v41 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
                  specialized ContiguousArray._endMutation()(v41);
                }
                while (v30 != v32);
                v42 = (_QWORD *)v50[0];
                v43 = swift_bridgeObjectRelease(v2);
LABEL_37:
                v50[0] = v42;
                v45 = MediumAdLockupWithScreenshotsBackground.lockup.getter(v43);
                v2 = Lockup.icon.getter(v46);
                swift_release(v45);
                if (!v2)
                {
LABEL_40:
                  ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v42);
                  swift_bridgeObjectRelease(v42);
                  swift_release(v15);
                  swift_release(a2);
                  return;
                }
                v30 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_100853420, *((double *)&xmmword_100853420 + 1));
                swift_retain(v30);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
                a1 = *(_QWORD *)((v50[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
                v31 = *(_QWORD *)((v50[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (a1 < v31 >> 1)
                {
LABEL_39:
                  v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v30);
                  specialized Array._endMutation()(v48);
                  swift_release(v2);
                  swift_release(v30);
                  v42 = (_QWORD *)v50[0];
                  goto LABEL_40;
                }
LABEL_43:
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, a1 + 1, 1);
                goto LABEL_39;
              }
            }
            v43 = swift_bridgeObjectRelease(v2);
            v42 = _swiftEmptyArrayStorage;
            goto LABEL_37;
          }
          a2 = *(_QWORD *)(v17 + 32);
          swift_retain(a2);
        }
        swift_bridgeObjectRelease(v17);
        swift_retain(a2);
        v2 = Screenshots.artwork.getter(v18);
        swift_release(a2);
        v19 = swift_getKeyPath(&unk_100671F80);
        ItemLayoutContext.subscript.getter(v11);
        swift_release(v19);
        v20 = swift_getKeyPath(&unk_100671FB0);
        ItemLayoutContext.subscript.getter(&v51);
        swift_release(v20);
        v3 = v51;
        v4 = PageGrid.columnWidth.getter(v21);
        if (qword_1007F1920 == -1)
          goto LABEL_8;
        goto LABEL_31;
      }
    }
    else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_release(v15);
    swift_bridgeObjectRelease(v17);
  }
}

uint64_t sub_100076534(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TodayCardLockupLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_100076570(_QWORD *a1)
{
  destroy for TodayCardLockupLayout.Metrics(a1);
  return a1;
}

uint64_t sub_1000765A4(uint64_t a1, uint64_t a2)
{
  assignWithTake for TodayCardLockupLayout.Metrics(a2, a1);
  return a2;
}

char *sub_1000765E0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension35SmallSearchLockupCollectionViewCell_lockupView;
  v10 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for SmallSearchLockupCollectionViewCell();
  v12 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v13 = objc_msgSend(v12, "contentView");
  objc_msgSend(v13, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v14 = objc_msgSend(v12, "contentView");
  v15 = *(id *)&v12[OBJC_IVAR____TtC22SubscribePageExtension35SmallSearchLockupCollectionViewCell_lockupView];
  objc_msgSend(v14, "addSubview:", v15);

  return v12;
}

double sub_1000767F4()
{
  double result;

  result = 0.0;
  xmmword_100851010 = xmmword_100671FE0;
  qword_100851020 = 0;
  unk_100851028 = 0;
  return result;
}

id sub_1000768DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SmallSearchLockupCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SmallSearchLockupCollectionViewCell()
{
  return objc_opt_self(_TtC22SubscribePageExtension35SmallSearchLockupCollectionViewCell);
}

char *sub_10007693C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double left;
  double bottom;
  double right;
  char *v18;
  id v19;
  objc_super v21;

  v9 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer;
  v10 = objc_allocWithZone((Class)type metadata accessor for MediaView());
  v11 = v4;
  *(_QWORD *)&v4[v9] = sub_1004990CC(0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
  v12 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_artworkView;
  v13 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for HeroCarouselItemBackgroundView();
  v14 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = (char *)v14;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  v19 = objc_msgSend(v18, "layer");
  objc_msgSend(v19, "setAllowsGroupBlending:", 0);

  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer]);
  return v18;
}

void sub_100076BB4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer);
  v3 = OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer;
  v4 = *(id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
  sub_10049A390(a1);

  v5 = *(void **)(*(_QWORD *)(v2 + v3)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (v5)
  {
    v6 = type metadata accessor for VideoView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = v5;
      objc_msgSend(v8, "setUserInteractionEnabled:", 0);

    }
  }

}

uint64_t sub_100076C60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer)
                            + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (!v1)
    return 0;
  v2 = type metadata accessor for VideoView(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
    v4 = v1;
  return v3;
}

void (*sub_100076CCC(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer);
  v4 = OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer;
  a1[1] = v3;
  a1[2] = v4;
  v5 = *(void **)(*(_QWORD *)(v3 + v4)
                + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (v5)
  {
    v6 = type metadata accessor for VideoView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
      v8 = v5;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  return sub_100076D54;
}

void sub_100076D54(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = *(id *)a1;
  v6 = *(void **)(v4 + v3);
  v18 = *(id *)a1;
  v7 = v6;
  sub_10049A390(v5);

  if ((a2 & 1) != 0)
  {
    v8 = *(void **)(*(_QWORD *)(v4 + v3)
                  + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
    v9 = v18;
    if (v8)
    {
      v10 = type metadata accessor for VideoView(0);
      v11 = swift_dynamicCastClass(v8, v10);
      v9 = v18;
      if (v11)
      {
        v12 = (void *)v11;
        v13 = v8;
        objc_msgSend(v12, "setUserInteractionEnabled:", 0);

        v9 = v18;
      }
    }
    goto LABEL_8;
  }

  v14 = *(void **)(*(_QWORD *)(v4 + v3)
                 + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
  if (v14)
  {
    v15 = type metadata accessor for VideoView(0);
    v16 = swift_dynamicCastClass(v14, v15);
    if (v16)
    {
      v17 = (void *)v16;
      v9 = v14;
      objc_msgSend(v17, "setUserInteractionEnabled:", 0);
LABEL_8:

    }
  }

}

uint64_t sub_100076E74(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
  sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

id sub_100076F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  void *v65;
  id v66;
  __n128 v67;
  uint64_t v68;
  __n128 v69;
  void *v70;
  char *v71;
  void *v72;
  id v73;
  char *v74;
  char *v75;
  id v76;
  void *v77;
  objc_class *v78;
  void *v79;
  id v80;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  _QWORD v91[5];
  objc_super v92;

  v89 = a2;
  v3 = sub_10000DF3C((uint64_t *)&unk_1007FA750);
  __chkstk_darwin(v3);
  v88 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v87 = (char *)&v82 - v6;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F5150);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VideoControls(0, v8);
  __chkstk_darwin(v11);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v82 - v15;
  v17 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VideoFillMode(0, v18);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for VideoConfiguration(0, v25);
  v85 = *(_QWORD *)(v26 - 8);
  v86 = v26;
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = HeroCarouselItem.video.getter(v27);
  if (v30)
  {
    v31 = v30;
    v84 = a1;
    v32 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, enum case for VideoFillMode.scaleAspectFill(_:), v21);
    v33 = Video.preview.getter(v32);
    Artwork.size.getter(v33);
    AspectRatio.init(_:_:)(v34);
    swift_release(v33);
    v35 = type metadata accessor for AspectRatio(0);
    v36 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v20, 0, 1, v35);
    v37 = Video.playbackControls.getter(v36);
    v38 = Video.autoPlayPlaybackControls.getter(v37);
    v39 = Video.canPlayFullScreen.getter(v38);
    v40 = Video.allowsAutoPlay.getter();
    v41 = Video.looping.getter();
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v24, v20, v16, v13, v39 & 1, v40 & 1, v41 & 1, 0, 0, 1);
    v42 = type metadata accessor for VideoViewManager(0);
    v43 = v89;
    v44 = BaseObjectGraph.inject<A>(_:)(v91, v42, v42);
    v45 = v91[0];
    v46 = Video.playbackId.getter(v91, v44);
    Video.videoUrl.getter(v46);
    v47 = type metadata accessor for URL(0);
    v48 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v10, 0, 1, v47);
    v49 = (uint64_t)v87;
    v50 = Video.templateMediaEvent.getter(v48);
    v51 = (uint64_t)v88;
    Video.templateClickEvent.getter(v50);
    v52 = type metadata accessor for VideoView(0);
    v53 = sub_10001F65C(&qword_1007F47E0, 255, type metadata accessor for VideoView, (uint64_t)&unk_10068E2B0);
    v83 = v29;
    v89 = v45;
    v54 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v91, v10, v29, v49, v51, v43, v52, v53);
    sub_100011088(v51, (uint64_t *)&unk_1007FA750);
    sub_100011088(v49, (uint64_t *)&unk_1007FA750);
    sub_100011088((uint64_t)v10, (uint64_t *)&unk_1007F5150);
    sub_100011088((uint64_t)v91, (uint64_t *)&unk_1007F9850);
    v55 = v90;
    v56 = *(_QWORD *)&v90[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer];
    v57 = OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer;
    v58 = *(void **)(v56 + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
    v59 = v54;
    v60 = v58;
    sub_10049A390(v54);

    v61 = *(_QWORD *)(v56 + v57);
    v62 = *(void **)(v61
                   + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
    v63 = v55;
    if (v62
      && (v64 = swift_dynamicCastClass(*(_QWORD *)(v61+ OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents), v52)) != 0)
    {
      v65 = (void *)v64;
      v66 = v62;
      objc_msgSend(v65, "setUserInteractionEnabled:", 0);
      swift_release(v31);
      swift_release(v89);

    }
    else
    {
      swift_release(v89);

      v67 = swift_release(v31);
    }
    (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v83, v86, v67);
  }
  else
  {
    v68 = HeroCarouselItem.artwork.getter();
    v69 = swift_release(v68);
    v63 = v90;
    if (v68)
    {
      v70 = *(void **)&v90[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_artworkView];
      v71 = *(char **)(*(_QWORD *)&v90[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer]
                     + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer);
      v72 = *(void **)&v71[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents];
      *(_QWORD *)&v71[OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents] = v70;
      v73 = v70;
      v74 = v71;
      sub_100499CC4(v72);

      sub_10049920C();
    }
  }
  v75 = *(char **)&v63[OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer];
  v76 = (id)HeroCarouselItem.backgroundColor.getter(v69);
  if (!v76)
    v76 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v77 = v76;
  v78 = (objc_class *)type metadata accessor for MediaView();
  v92.receiver = v75;
  v92.super_class = v78;
  objc_msgSendSuper2(&v92, "setBackgroundColor:", v77);
  objc_msgSend(*(id *)(*(_QWORD *)&v75[OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer]+ OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents), "setBackgroundColor:", v77);
  v79 = *(void **)&v75[OBJC_IVAR____TtC22SubscribePageExtension9MediaView_reflectionView];
  if (v79)
  {
    v80 = v79;
    objc_msgSend(v80, "setBackgroundColor:", v77);

  }
  objc_msgSend(v63, "setNeedsLayout");
  return objc_msgSend(v63, "layoutIfNeeded");
}

void sub_100077578(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];

  v7 = type metadata accessor for Artwork.Style(0, a4);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VideoConfiguration(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for AspectRatio(0);
  v18 = *(_QWORD *)(v60 - 8);
  v19 = __chkstk_darwin(v60);
  v59 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = HeroCarouselItem.video.getter(v19);
  if (v21)
  {
    v23 = v21;
    v24 = *(void **)(*(_QWORD *)(*(_QWORD *)(v61
                                           + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_mediaViewContainer)
                               + OBJC_IVAR____TtC22SubscribePageExtension9MediaView_contentContainer)
                   + OBJC_IVAR____TtC22SubscribePageExtensionP33_3BFA609B93F5C4376389C1E6266A901920UberContentContainer_contents);
    if (v24 && (v58 = type metadata accessor for VideoView(0), (v25 = swift_dynamicCastClass(v24, v58)) != 0))
    {
      v57 = a4;
      v55 = v25;
      v26 = v25 + qword_100856360;
      v27 = swift_beginAccess(v25 + qword_100856360, v62, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v26, v14, v27);
      v56 = v24;
      VideoConfiguration.aspectRatio.getter();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v28 = v60;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v60) != 1)
      {
        v46 = v59;
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v59, v12, v28);
        v47 = AspectRatio.maxSize(filling:)(a1, a2);
        v49 = v48;
        v51 = Video.preview.getter(v50);
        v52 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v47, v49);
        swift_release(v51);
        v53 = sub_10001F65C((unint64_t *)&unk_1007F4810, 255, type metadata accessor for VideoView, (uint64_t)"\t,\v");
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v52, 2, 1, v55, v58, v53);
        swift_release(v52);

        v54 = swift_release(v23);
        (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v46, v28, v54);
        return;
      }

      swift_release(v23);
      sub_100011088((uint64_t)v12, (uint64_t *)&unk_1007FA760);
    }
    else
    {
      v22 = swift_release(v23);
    }
  }
  v29 = HeroCarouselItem.artwork.getter(v22);
  if (v29)
  {
    v30 = v29;
    v31 = Artwork.config(_:mode:prefersLayeredImage:)(0, 0, a1, a2);
    v32 = OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_artworkView;
    v33 = v61;
    v34 = *(id *)(v61 + OBJC_IVAR____TtC22SubscribePageExtension30HeroCarouselItemBackgroundView_artworkView);
    Artwork.style.getter(v34);
    v35 = ArtworkView.style.setter(v9);
    *(_QWORD *)&v36 = Artwork.contentMode.getter(v35).n128_u64[0];
    v38 = ArtworkLoaderConfig.size.getter(objc_msgSend(v34, "setContentMode:", v37, v36));
    v40 = ArtworkView.imageSize.setter(v38, v39);
    v41 = Artwork.backgroundColor.getter(v40);
    if (!v41)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v41 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v41);

    objc_msgSend(*(id *)(v33 + v32), "setContentMode:", 2);
    v42 = *(void **)(v33 + v32);
    v43 = type metadata accessor for ArtworkView(0);
    v44 = sub_10001F65C((unint64_t *)&qword_1007F5DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v45 = v42;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v45, v43, v44);
    swift_release(v30);
    swift_release(v31);

  }
}

id sub_1000779C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeroCarouselItemBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeroCarouselItemBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension30HeroCarouselItemBackgroundView);
}

uint64_t (*sub_100077A50(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_100076CCC(v2);
  return sub_10001B55C;
}

uint64_t sub_100077A94(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006720F0, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_100077AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006720F0, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_100077B14(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_1006720F0, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10001B55C;
}

uint64_t sub_100077B7C(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C(&qword_1007F6AA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HeroCarouselItemBackgroundView, (uint64_t)&unk_100672080);
}

uint64_t sub_100077BA8(uint64_t a1, uint64_t a2)
{
  return sub_10001F65C((unint64_t *)&unk_1007F6AB0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HeroCarouselItemBackgroundView, (uint64_t)&unk_1006720B0);
}

void sub_100077BD4(uint64_t a1)
{
  sub_10004EF38(5.0, 3.0, a1, qword_1007F6AC0);
}

void sub_100077BE8(uint64_t a1)
{
  sub_10004EF38(9.0, 6.0, a1, qword_1007F6AD8);
}

void sub_100077BFC(uint64_t a1)
{
  sub_10004EF38(12.0, 8.0, a1, qword_1007F6AF0);
}

double sub_100077C10()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  char v3;
  char v4;

  v0 = sub_10000DF3C(&qword_1007F6B98);
  sub_100045464(v0, qword_1007F6B08);
  sub_1000117A8(v0, (uint64_t)qword_1007F6B08);
  v4 = 2;
  v3 = 4;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  *(_QWORD *)&result = Conditional<>.init(regularValue:compactValue:)(&v4, &v3, v1, &type metadata for RatingView.StarSize).n128_u64[0];
  return result;
}

UIContentSizeCategory sub_100077C98()
{
  qword_1007F6B20 = (uint64_t)UIContentSizeCategoryLarge;
  return UIContentSizeCategoryLarge;
}

char *sub_100077CB0()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  id v48;
  uint64_t v49;
  objc_class *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  __int128 v56;
  __int128 v57;
  objc_super v58;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v54 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v56 = _swiftEmptyArrayStorage;
  v8 = v0;
  specialized ContiguousArray.reserveCapacity(_:)(5);
  v9 = (objc_class *)type metadata accessor for ProductRatingsHistogramProgressBar();
  v10 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v11 = *(_QWORD *)(v56 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
  v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
  specialized ContiguousArray._endMutation()(v12);
  v13 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v14 = *(_QWORD *)(v56 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
  v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
  specialized ContiguousArray._endMutation()(v15);
  v16 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v17 = *(_QWORD *)(v56 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
  v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
  specialized ContiguousArray._endMutation()(v18);
  v19 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v20 = *(_QWORD *)(v56 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
  v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
  specialized ContiguousArray._endMutation()(v21);
  v22 = objc_msgSend(objc_allocWithZone(v9), "init");
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v23 = *(_QWORD *)(v56 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
  v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v22);
  specialized ContiguousArray._endMutation()(v24);
  *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_barViews] = v56;

  v58.receiver = v8;
  v58.super_class = ObjectType;
  v50 = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v58, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = v25;
  v53 = *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_barViews];
  v27 = v53;
  if (v53 >> 62)
    goto LABEL_17;
  v28 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  v29 = v25;
  swift_bridgeObjectRetain(v27);
  for (; v28; v28 = _CocoaArrayWrapper.endIndex.getter(v47))
  {
    v30 = 0;
    v31 = v53 & 0xC000000000000001;
    v51 = v53 + 32;
    v52 = v53 & 0xFFFFFFFFFFFFFF8;
    while (!__OFSUB__(v28--, 1))
    {
      if (v31)
      {
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v53);
      }
      else
      {
        if ((v28 & 0x8000000000000000) != 0)
          goto LABEL_15;
        if (v28 >= *(_QWORD *)(v52 + 16))
          goto LABEL_16;
        v33 = *(id *)(v51 + 8 * v28);
      }
      v34 = v33;
      v27 = v30 + 1;
      if (__OFADD__(v30, 1))
        goto LABEL_14;
      v56 = 0u;
      v57 = 0u;
      memset(v55, 0, sizeof(v55));
      static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x77656956726162, 0xE700000000000000, &v56, v55);
      sub_1000131E0((uint64_t)v55);
      sub_1000131E0((uint64_t)&v56);
      *(_QWORD *)&v56 = v30 + 1;
      v35 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      *((_QWORD *)&v57 + 1) = &type metadata for String;
      *(_QWORD *)&v56 = v35;
      *((_QWORD *)&v56 + 1) = v36;
      AutomationSemantics.attribute(key:value:)(0x7372617473, 0xE500000000000000, &v56);
      v37 = *(void (**)(char *, uint64_t))(v54 + 8);
      v37(v4, v2);
      sub_1000131E0((uint64_t)&v56);
      v27 = (uint64_t)v34;
      UIView.setAutomationSemantics(_:)(v7);
      v37(v7, v2);
      objc_msgSend(v26, "addSubview:", v34);

      ++v30;
      if (!v28)
        goto LABEL_12;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    if (v27 < 0)
      v47 = v27;
    else
      v47 = v27 & 0xFFFFFFFFFFFFFF8;
    v48 = v26;
    swift_bridgeObjectRetain(v27);
  }
LABEL_12:
  swift_bridgeObjectRelease(v53);
  v38 = v26;
  v39 = sub_1000792F4((uint64_t)&off_100720E98, (uint64_t)v38);

  v40 = (uint64_t *)&v38[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews];
  swift_beginAccess(&v38[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews], &v56, 1, 0);
  v41 = *v40;
  *v40 = (uint64_t)v39;
  sub_1000781F0(v41);
  objc_msgSend(v38, "setNeedsLayout", swift_bridgeObjectRelease(v41).n128_f64[0]);
  v42 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v43 = swift_allocObject(v42, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v43 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v43 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v44 = v38;
  v45 = UIView.registerForTraitChanges<A>(_:handler:)(v43, sub_1000791A0, 0, v50);
  swift_unknownObjectRelease(v45);
  swift_bridgeObjectRelease(v43);

  return v44;
}

void sub_1000781F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE v16[24];

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v2)
      goto LABEL_13;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v2)
      goto LABEL_13;
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v4 = *(id *)(a1 + 8 * i + 32);
    v5 = v4;
    objc_msgSend(v4, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease(a1);
  v7 = (uint64_t *)&v15[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews];
  swift_beginAccess(&v15[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews], v16, 0, 0);
  v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_15;
LABEL_28:
    swift_bridgeObjectRelease(v8);
    return;
  }
  if (v8 < 0)
    v14 = v8;
  else
    v14 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v9)
    goto LABEL_28;
LABEL_15:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      else
        v11 = *(id *)(v8 + 8 * v10 + 32);
      v12 = v11;
      if (qword_1007F0FD0 != -1)
        swift_once(&qword_1007F0FD0, sub_100077C98);
      ++v10;
      v13 = qword_1007F6B20;
      objc_msgSend(v12, "setMinimumContentSizeCategory:", qword_1007F6B20);
      objc_msgSend(v12, "setMaximumContentSizeCategory:", v13);
      objc_msgSend(v15, "addSubview:", v12);

    }
    while (v9 != v10);
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
}

double sub_100078400(id a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[24];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews);
  swift_beginAccess(v7, v19, 0, 0);
  v8 = *v7;
  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v8);
    return JUMeasurementsZero;
  }
  if (v8 < 0)
    v16 = v8;
  else
    v16 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  if (!_CocoaArrayWrapper.endIndex.getter(v16))
    goto LABEL_14;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease(v8);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v12 = sub_10000DF3C(&qword_1007F5840);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10066FE60;
  *(_QWORD *)(v13 + 32) = a1;
  a1 = a1;
  v14 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v13);
  objc_msgSend(v11, "measurementsWithFitting:in:", v14, a2, a3);

  if (qword_1007F0FB0 != -1)
LABEL_18:
    swift_once(&qword_1007F0FB0, sub_100077BD4);
  v15 = sub_10000DF3C(&qword_1007F55F0);
  sub_1000117A8(v15, (uint64_t)qword_1007F6AC0);
  Conditional.evaluate<>(in:)(&v18, a1, v15);
  if (qword_1007F0FB8 != -1)
    swift_once(&qword_1007F0FB8, sub_100077BE8);
  sub_1000117A8(v15, (uint64_t)qword_1007F6AD8);
  Conditional.evaluate<>(in:)(&v18, a1, v15);
  return a2;
}

void sub_100078640(id a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  char *v5;
  id v6;
  double v7;
  char *v8;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  id v26;
  double v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  double v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  double v38;
  _QWORD v41[3];
  char v42[32];
  CGRect v43;

  v8 = v5;
  v12 = (uint64_t *)&v8[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews];
  swift_beginAccess(&v8[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews], v42, 0, 0);
  v13 = *v12;
  if ((unint64_t)*v12 >> 62)
    goto LABEL_23;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v12);
  if (v14)
  {
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
      }
      else
      {
        if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_31:
          swift_once(&qword_1007F0FB0, sub_100077BD4);
          goto LABEL_7;
        }
        v15 = *(id *)(v13 + 32);
      }
      v16 = v15;
      swift_bridgeObjectRelease(v13);
      type metadata accessor for TraitEnvironmentPlaceholder(0);
      v37 = sub_10000DF3C(&qword_1007F5840);
      v17 = swift_allocObject(v37, 40, 7);
      v36 = xmmword_10066FE60;
      *(_OWORD *)(v17 + 16) = xmmword_10066FE60;
      *(_QWORD *)(v17 + 32) = a1;
      v6 = a1;
      v18 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v17);
      objc_msgSend(v16, "measurementsWithFitting:in:", v18, a4, a5);
      v7 = v19;

      objc_msgSend(v8, "setFrame:", a2, a3, a4, a5);
      if (qword_1007F0FB0 != -1)
        goto LABEL_31;
LABEL_7:
      v20 = sub_10000DF3C(&qword_1007F55F0);
      sub_1000117A8(v20, (uint64_t)qword_1007F6AC0);
      Conditional.evaluate<>(in:)(v41, v6, v20);
      v38 = *(double *)v41;
      if (qword_1007F0FB8 != -1)
        swift_once(&qword_1007F0FB8, sub_100077BE8);
      sub_1000117A8(v20, (uint64_t)qword_1007F6AD8);
      Conditional.evaluate<>(in:)(v41, v6, v20);
      v21 = *(double *)v41;
      if (qword_1007F0FC0 != -1)
        swift_once(&qword_1007F0FC0, sub_100077BFC);
      a1 = (id)sub_1000117A8(v20, (uint64_t)qword_1007F6AF0);
      Conditional.evaluate<>(in:)(v41, v6, v20);
      v22 = *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_barViews];
      if ((v22 & 0xC000000000000001) == 0 && *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) < 5uLL)
      {
        __break(1u);
        return;
      }
      v23 = v7 - v38;
      v24 = v38 + v21;
      v13 = 4;
      v7 = 0.0;
      while (1)
      {
        swift_beginAccess(v12, v41, 32, 0);
        v28 = *v12;
        if ((*v12 & 0xC000000000000001) != 0)
        {
          v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v28);
          goto LABEL_19;
        }
        if ((unint64_t)(v13 - 4) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
          break;
        v29 = *(id *)(v28 + 8 * v13);
LABEL_19:
        v30 = v29;
        swift_endAccess(v41);
        v31 = swift_allocObject(v37, 40, 7);
        *(_OWORD *)(v31 + 16) = v36;
        *(_QWORD *)(v31 + 32) = v6;
        v32 = v6;
        v33 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v31);
        objc_msgSend(v30, "measurementsWithFitting:in:", v33, a4, a5);

        a1 = v30;
        objc_msgSend(v8, "bounds");
        objc_msgSend(a1, "setFrame:", CGRect.withLayoutDirection(using:relativeTo:)(v32, v34));

        if ((v22 & 0xC000000000000001) != 0)
          v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v22);
        else
          v25 = *(id *)(v22 + 8 * v13);
        v7 = v24 + v7;
        v26 = v25;
        v43.origin.x = a2;
        v43.origin.y = a3;
        v43.size.width = a4;
        v43.size.height = a5;
        CGRectGetWidth(v43);
        objc_msgSend(v8, "bounds");
        objc_msgSend(v26, "setFrame:", CGRect.withLayoutDirection(using:relativeTo:)(v32, v27));

        v23 = v24 + v23;
        if (++v13 == 9)
          return;
      }
      __break(1u);
LABEL_23:
      if (v13 < 0)
        v35 = v13;
      else
        v35 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
    }
    while (_CocoaArrayWrapper.endIndex.getter(v35));
  }
  swift_bridgeObjectRelease(v13);
}

uint64_t sub_100078BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_barViews);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_barViews);
    else
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
    v5 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    swift_bridgeObjectRetain(v1);
    v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
    swift_bridgeObjectRelease(v1);
    return v6;
  }
  else
  {
    swift_bridgeObjectRetain(v1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    return v1;
  }
}

uint64_t type metadata accessor for ProductRatingsHistogramView()
{
  return objc_opt_self(_TtC22SubscribePageExtension27ProductRatingsHistogramView);
}

double sub_100078CD8(void *a1, double a2, double a3)
{
  return sub_100078400(a1, a2, a3);
}

void sub_100078CF8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  sub_100078640(a1, a2, a3, a4, a5);
}

char *sub_100078D18()
{
  char *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  objc_super v13;

  *(_DWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_BBFDA52132B851A7C9B4832301F19D0934ProductRatingsHistogramProgressBar_progress] = 0;
  v1 = objc_allocWithZone((Class)UIView);
  v2 = v0;
  v3 = objc_msgSend(v1, "init");
  *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtensionP33_BBFDA52132B851A7C9B4832301F19D0934ProductRatingsHistogramProgressBar_progressView] = v3;

  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for ProductRatingsHistogramProgressBar();
  v4 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, "setClipsToBounds:", 1);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = (char *)v4;
  v7 = objc_msgSend(v5, "systemGray5Color");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = OBJC_IVAR____TtC22SubscribePageExtensionP33_BBFDA52132B851A7C9B4832301F19D0934ProductRatingsHistogramProgressBar_progressView;
  v9 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtensionP33_BBFDA52132B851A7C9B4832301F19D0934ProductRatingsHistogramProgressBar_progressView];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v10 = v9;
  v11 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v10, "setBackgroundColor:", v11);

  objc_msgSend(v6, "addSubview:", *(_QWORD *)&v6[v8]);
  return v6;
}

void sub_100078F1C()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ProductRatingsHistogramProgressBar();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtensionP33_BBFDA52132B851A7C9B4832301F19D0934ProductRatingsHistogramProgressBar_progressView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v0, "bounds");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v0, "bounds");
  v4 = CGRect.withLayoutDirection(using:relativeTo:)(v2, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
  v11 = objc_msgSend(v0, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v11, "setCornerRadius:", CGRectGetHeight(v14) * 0.5);

  v12 = objc_msgSend(v1, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v12, "setCornerRadius:", CGRectGetHeight(v15) * 0.5);

}

void sub_100079114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_10007913C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductRatingsHistogramProgressBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProductRatingsHistogramProgressBar()
{
  return objc_opt_self(_TtC22SubscribePageExtensionP33_BBFDA52132B851A7C9B4832301F19D0934ProductRatingsHistogramProgressBar);
}

void sub_1000791A0(void *a1)
{
  int v2;
  id v3;
  int v4;
  char *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = UITraitCollection.isSizeClassCompact.getter(a1) & 1;
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = UITraitCollection.isSizeClassCompact.getter(v3) & 1;

  if (v2 != v4)
  {
    v5 = a1;
    v6 = sub_1000792F4((uint64_t)&off_100720E98, (uint64_t)v5);

    v7 = (uint64_t *)&v5[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC22SubscribePageExtension27ProductRatingsHistogramView_starViews], v9, 1, 0);
    v8 = *v7;
    *v7 = (uint64_t)v6;
    sub_1000781F0(v8);
    objc_msgSend(v5, "setNeedsLayout", swift_bridgeObjectRelease(v8).n128_f64[0]);
  }
}

uint64_t sub_100079278(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1007F0FD0 != -1)
    swift_once(&qword_1007F0FD0, sub_100077C98);
  v2 = (void *)qword_1007F6B20;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  sub_100079870(a1, v3);
  return UIMutableTraits.preferredContentSizeCategory.setter(v2, v3, v4);
}

_QWORD *sub_1000792F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  float v16;
  uint64_t v17;
  float v18;
  float v19;
  uint64_t v20;
  float v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  char v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  char v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    v48 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = (uint64_t *)(a1 + 32);
    if (qword_1007F0FC8 != -1)
      swift_once(&qword_1007F0FC8, sub_100077C10);
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v42 = a2;
    while (1)
    {
      v11 = *v6;
      v12 = sub_10000DF3C(&qword_1007F6B98);
      sub_1000117A8(v12, (uint64_t)qword_1007F6B08);
      v46 = a2;
      Conditional.evaluate(with:)(&v46, v12);
      LOBYTE(v12) = v47;
      v13 = objc_allocWithZone((Class)type metadata accessor for RatingView());
      v14 = sub_10042AEC0(v11, v12, 0, 1, 1, 0, 1);
      v15 = v14;
      v16 = (float)v11;
      v17 = OBJC_IVAR____TtC22SubscribePageExtension10RatingView_rating;
      v18 = *(float *)&v14[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_rating];
      *(float *)&v14[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_rating] = (float)v11;
      if (v18 == (float)v11)
        goto LABEL_17;
      if (v11 < 0)
      {
        v19 = 0.0;
      }
      else
      {
        v19 = (float)*(uint64_t *)&v14[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_maxNumberOfStars];
        if (v19 >= v16)
          goto LABEL_16;
      }
      *(float *)&v14[v17] = v19;
      v16 = v19;
LABEL_16:
      v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_filledStarRowView];
      v21 = *(float *)(v20
                     + OBJC_IVAR____TtC22SubscribePageExtensionP33_2C6014D15F02DB8C76D5CE42FDC095AC7StarRow_currentRating);
      *(float *)(v20 + OBJC_IVAR____TtC22SubscribePageExtensionP33_2C6014D15F02DB8C76D5CE42FDC095AC7StarRow_currentRating) = v16;
      sub_10042B70C(v21);
LABEL_17:
      v22 = (void *)static UIColor.primaryText.getter();
      v23 = OBJC_IVAR____TtC22SubscribePageExtension10RatingView_starColor;
      v24 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_starColor];
      *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_starColor] = v22;
      v25 = v22;
      v45 = v24;
      v26 = static NSObject.== infix(_:_:)(v24, v25);

      if ((v26 & 1) != 0)
        goto LABEL_9;
      v27 = *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_emptyStarRowView];
      if (v27)
      {
        v28 = *(void **)&v15[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_emptyStarColor];
        if (v28)
          v29 = *(id *)&v15[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_emptyStarColor];
        else
          v29 = *(id *)&v15[v23];
        v30 = *(void **)(v27
                       + OBJC_IVAR____TtC22SubscribePageExtensionP33_2C6014D15F02DB8C76D5CE42FDC095AC7StarRow_starColor);
        *(_QWORD *)(v27 + OBJC_IVAR____TtC22SubscribePageExtensionP33_2C6014D15F02DB8C76D5CE42FDC095AC7StarRow_starColor) = v29;
        v31 = v29;
        v32 = v28;
        v43 = v30;
        if (v30)
        {
          if (v31)
          {
            v33 = v30;
            v41 = v31;
            v34 = static NSObject.== infix(_:_:)(v33, v41);

            if ((v34 & 1) != 0)
              goto LABEL_29;
          }
LABEL_27:
          sub_10042B944();
        }
        else if (v31)
        {
          goto LABEL_27;
        }
        v33 = v43;
LABEL_29:

      }
      v35 = *(_QWORD *)&v15[OBJC_IVAR____TtC22SubscribePageExtension10RatingView_filledStarRowView];
      v36 = *(void **)&v15[v23];
      v37 = *(void **)(v35
                     + OBJC_IVAR____TtC22SubscribePageExtensionP33_2C6014D15F02DB8C76D5CE42FDC095AC7StarRow_starColor);
      *(_QWORD *)(v35 + OBJC_IVAR____TtC22SubscribePageExtensionP33_2C6014D15F02DB8C76D5CE42FDC095AC7StarRow_starColor) = v36;
      v38 = v36;
      v39 = v38;
      if (v37)
      {
        if (v38)
        {
          v7 = v37;
          v44 = v39;
          v40 = static NSObject.== infix(_:_:)(v7, v44);

          if ((v40 & 1) != 0)
            goto LABEL_8;
        }
LABEL_6:
        sub_10042B944();
        goto LABEL_7;
      }
      if (v38)
        goto LABEL_6;
LABEL_7:
      v7 = v37;
LABEL_8:

      a2 = v42;
LABEL_9:

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = v48[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v15);
      specialized ContiguousArray._endMutation()(v10);
      ++v6;
      if (!--v3)
        return v48;
    }
  }
  return result;
}

double sub_100079674(uint64_t a1, double a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_1007F0FC8 != -1)
    swift_once(&qword_1007F0FC8, sub_100077C10);
  v4 = sub_10000DF3C(&qword_1007F6B98);
  sub_1000117A8(v4, (uint64_t)qword_1007F6B08);
  Conditional.evaluate<>(in:)(&v11, a1, v4);
  v5 = v11;
  v6 = (void *)UITraitCollection.modifyingTraits(_:)(sub_100079278, 0);
  sub_10042CA8C(v5, 0, 1, 5.0);
  sub_10042C7A4(v5);
  v8 = v7;
  UIImage.baselineOffsetFromBottom.getter(v7);
  objc_msgSend(v8, "contentInsets");

  if (qword_1007F0FB0 != -1)
    swift_once(&qword_1007F0FB0, sub_100077BD4);
  v9 = sub_10000DF3C(&qword_1007F55F0);
  sub_1000117A8(v9, (uint64_t)qword_1007F6AC0);
  Conditional.evaluate<>(in:)(&v11, a1, v9);
  if (qword_1007F0FB8 != -1)
    swift_once(&qword_1007F0FB8, sub_100077BE8);
  sub_1000117A8(v9, (uint64_t)qword_1007F6AD8);
  Conditional.evaluate<>(in:)(&v11, a1, v9);
  return a2;
}

uint64_t sub_100079870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for SearchLinkView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F6BC0;
  if (!qword_1007F6BC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchLinkView);
  return result;
}

uint64_t sub_1000798D4(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100851038);
}

id sub_100079920()
{
  if (qword_1007F1B10 != -1)
    swift_once(&qword_1007F1B10, sub_1002D9F34);
  qword_100851030 = qword_1008539E0;
  return (id)qword_1008539E0;
}

uint64_t sub_100079968(void *a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for DynamicTextAppearance(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  DynamicTextAppearance.init()(v13);
  if (qword_1007F0FD8 != -1)
    swift_once(&qword_1007F0FD8, sub_100079920);
  DynamicTextAppearance.withTextStyle(_:)(qword_100851030);
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v3);
  v15 = objc_msgSend(a1, "preferredContentSizeCategory");
  v16 = UIContentSizeCategory.isAccessibilityCategory.getter(v15);

  if ((v16 & 1) != 0)
    v17 = 0;
  else
    v17 = 2;
  DynamicTextAppearance.withNumberOfLines(_:)(v17);
  v14(v9, v3);
  DynamicTextAppearance.withLineBreakMode(_:)(5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v3);
}

uint64_t sub_100079ACC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100079B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      sub_10007B3CC();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_100079CA4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100079D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  result = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v14));
    v7 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v16 == v18 && v7 == v19)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_20;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v7, v18, v19, 0);
    swift_bridgeObjectRelease(v7);
    result = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      goto LABEL_7;
    ++v14;
    if (v15 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_100079EC0(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, _QWORD *a4@<X8>)
{
  id v8;
  id v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  _QWORD v24[5];
  _QWORD v25[5];
  _QWORD v26[5];

  v8 = objc_msgSend(a1, "traitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  v10 = sub_10007AAC8((uint64_t)v9, 0);
  sub_10007B0D4(a2, (uint64_t)v26);
  sub_100011020(a3, (uint64_t)v24);
  v11 = sub_10007B11C(a1);
  v13 = v12;
  v25[3] = &type metadata for SearchLinkLayout;
  v25[4] = sub_10007B25C();
  v14 = (_QWORD *)swift_allocObject(&unk_100724D48, 112, 7);
  v25[0] = v14;
  v14[10] = &type metadata for AutoAdjustingPlaceable;
  v15 = sub_10007B2DC();
  v14[11] = v15;
  v16 = swift_allocObject(&unk_100724D70, 56, 7);
  v14[7] = v16;
  sub_100011020((uint64_t)v24, v16 + 16);
  sub_10007B0D4((uint64_t)v26, (uint64_t)&v19);
  if (v20)
  {
    *((_QWORD *)&v22 + 1) = &type metadata for AutoAdjustingPlaceable;
    v23 = v15;
    *(_QWORD *)&v21 = swift_allocObject(&unk_100724D70, 56, 7);
    sub_100010F3C(&v19, v21 + 16);
  }
  else
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
  }
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v24);
  sub_10007B344((uint64_t)v26);
  v17 = sub_10007B384((uint64_t)&v21, (uint64_t)(v14 + 2));
  v14[12] = v11;
  v14[13] = v13;
  v18 = static Center.Axis.vertical.getter(v17);
  v26[3] = type metadata accessor for Center(0);
  v26[4] = &protocol witness table for Center;
  sub_1000117C0(v26);
  Center.init(_:filling:)(v25, v18);
  a4[3] = type metadata accessor for Margins(0);
  a4[4] = &protocol witness table for Margins;
  sub_1000117C0(a4);
  Margins.init(insets:child:)(v26, v10, 0.0, v10, 0.0);
}

char *sub_10007A0D0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t ObjectType;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  double left;
  double bottom;
  double right;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  objc_super v47;

  ObjectType = swift_getObjectType();
  v11 = type metadata accessor for DynamicTextAppearance(0, v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = qword_1007F6BB0;
  v15 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v16 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = qword_1007F6BB8;
  v18 = type metadata accessor for DynamicLabel(0);
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");

  v19 = (objc_class *)type metadata accessor for SearchLinkView(0);
  v47.receiver = v16;
  v47.super_class = v19;
  v20 = objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v24 = (char *)v20;
  objc_msgSend(v24, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v25 = qword_1007F6BB0;
  v26 = qword_1007F1B08;
  v27 = *(id *)&v24[qword_1007F6BB0];
  if (v26 != -1)
    swift_once(&qword_1007F1B08, sub_1002D9F04);
  objc_msgSend(v27, "setTintColor:", qword_1008539D8);

  v28 = *(void **)&v24[v25];
  v29 = (void *)objc_opt_self(UIColor);
  v30 = v28;
  ArtworkView.backgroundColor.setter(objc_msgSend(v29, "clearColor"));

  v31 = *(id *)&v24[v25];
  ArtworkView.shouldSymbolImageSelfSize.setter(1);

  v32 = qword_1007F1B20;
  v33 = *(id *)&v24[v25];
  if (v32 != -1)
    swift_once(&qword_1007F1B20, sub_1002D9F64);
  v34 = qword_1008539F0;
  v35 = (id)qword_1008539F0;
  ArtworkView.preferredSymbolConfiguration.setter(v34);

  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v25]);
  v36 = qword_1007F6BB8;
  v37 = qword_1007F1AF0;
  v38 = *(id *)&v24[qword_1007F6BB8];
  if (v37 != -1)
    swift_once(&qword_1007F1AF0, sub_1002D9E6C);
  objc_msgSend(v38, "setTextColor:", qword_1008539C0);

  v39 = objc_msgSend(v24, "traitCollection");
  sub_100079968(v39, v40);

  dispatch thunk of DynamicLabel.dynamicTextAppearance.setter(v13);
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v36]);
  v41 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v42 = swift_allocObject(v41, 48, 7);
  *(_OWORD *)(v42 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v42 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v42 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v43 = swift_allocObject(&unk_100724D98, 24, 7);
  *(_QWORD *)(v43 + 16) = ObjectType;
  v44 = v24;
  v45 = UIView.registerForTraitChanges<A>(_:handler:)(v42, sub_10007B418, v43, ObjectType);
  swift_unknownObjectRelease(v45);
  swift_bridgeObjectRelease(v42);
  swift_release(v43);

  return v44;
}

id sub_10007A474(void *a1, void *a2, __n128 a3)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  int v10;
  id v11;
  id v12;
  int v13;
  id v14;
  __n128 v15;
  uint64_t v17;

  v5 = type metadata accessor for DynamicTextAppearance(0, a3);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a2, "preferredContentSizeCategory", v6);
  v10 = UIContentSizeCategory.isAccessibilityCategory.getter(v9) & 1;

  v11 = objc_msgSend(a1, "traitCollection");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");

  v13 = UIContentSizeCategory.isAccessibilityCategory.getter(v12) & 1;
  if (v10 != v13)
  {
    v14 = objc_msgSend(a1, "traitCollection");
    sub_100079968(v14, v15);

    dispatch thunk of DynamicLabel.dynamicTextAppearance.setter(v8);
  }
  return objc_msgSend(a1, "setNeedsLayout");
}

char *sub_10007A5A0(double a1, double a2, double a3, double a4)
{
  return sub_10007A0D0(a1, a2, a3, a4);
}

void sub_10007A5C0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v5 = qword_1007F6BB0;
  v6 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v7 = a3;
  *(_QWORD *)&a1[v5] = objc_msgSend(v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = qword_1007F6BB8;
  v9 = type metadata accessor for DynamicLabel(0);
  *(_QWORD *)&a1[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SearchLinkView.swift", 43, 2, 121, 0);
  __break(1u);
}

uint64_t sub_10007A694@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = v1;
  v4 = *(void **)&v1[qword_1007F6BB0];
  v5 = (void *)ArtworkView.image.getter();

  if (v5)
  {
    *((_QWORD *)&v12 + 1) = type metadata accessor for ArtworkView(0);
    v13 = sub_10000E99C((unint64_t *)&qword_1007F6C60, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    *(_QWORD *)&v11 = v4;
    v6 = v4;
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  v7 = *(void **)&v2[qword_1007F6BB8];
  v10[3] = type metadata accessor for DynamicLabel(0);
  v10[4] = &protocol witness table for UILabel;
  v10[0] = v7;
  v8 = v7;
  sub_100079EC0(v2, (uint64_t)&v11, (uint64_t)v10, a1);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v10);
  return sub_10007B344((uint64_t)&v11);
}

void sub_10007A770()
{
  uint64_t v0;

}

id sub_10007A79C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchLinkView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10007A7D0(uint64_t a1)
{

}

uint64_t sub_10007A808()
{
  return type metadata accessor for SearchLinkView(0);
}

id sub_10007A810()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1007F6BB0);
}

id sub_10007A820()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1007F6BB8);
}

void sub_10007A830(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  sub_100079EC0(a3, a1, a2, a4);
}

id sub_10007A844()
{
  if (qword_1007F1B20 != -1)
    swift_once(&qword_1007F1B20, sub_1002D9F64);
  return (id)qword_1008539F0;
}

uint64_t sub_10007A884(void *a1, __n128 a2)
{
  return sub_100079968(a1, a2);
}

id sub_10007A898()
{
  void *v0;

  return objc_msgSend(v0, "setNeedsLayout");
}

double sub_10007A8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("]+\v", a3);
  return sub_1005DBF38(a1, a3, WitnessTable);
}

void sub_10007A8EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("]+\v", a3);
  sub_1005DA080(a1, a2, a3, WitnessTable);
}

void sub_10007A938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("]+\v", a3);
  sub_1005DC484(a1, a3, WitnessTable);
}

uint64_t sub_10007A97C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("]+\v", a1);
  return sub_1005DA378(a1, WitnessTable, a2);
}

double sub_10007A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("]+\v", a4);
  return sub_1005DC554(a1, a2, a4, WitnessTable);
}

uint64_t sub_10007AA24()
{
  return sub_10000E99C(&qword_1007F6C10, type metadata accessor for SearchLinkView, (uint64_t)&unk_100672208);
}

uint64_t sub_10007AA50(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_10000E99C(&qword_1007F6C18, type metadata accessor for SearchLinkView, (uint64_t)&unk_100672224);
  a1[2] = sub_10000E99C(&qword_1007F6C20, type metadata accessor for SearchLinkView, (uint64_t)&unk_100672254);
  result = sub_10000E99C(&qword_1007F6C28, type metadata accessor for SearchLinkView, (uint64_t)&unk_100672284);
  a1[3] = result;
  return result;
}

double sub_10007AAC8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  double result;
  double v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  double v92;
  double v93;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_17;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
LABEL_17:
    v25 = (a2 & 1) == 0;
    result = 9.0;
    v27 = 4.0;
    goto LABEL_18;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
  v14 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v12 == v15 && v14 == v16)
    goto LABEL_13;
  v18 = v16;
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v18);
  if ((v19 & 1) != 0)
  {
LABEL_14:
    v25 = (a2 & 1) == 0;
    result = 10.0;
LABEL_15:
    v27 = 5.0;
    goto LABEL_18;
  }
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
  v14 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v24 = v22;
  if (v20 == v23 && v14 == v22)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v14, 2);
    goto LABEL_14;
  }
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v14, v23, v22, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v24);
  if ((v28 & 1) != 0)
    goto LABEL_14;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v31 = v30;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v34 = v32;
  if (v29 == v33 && v31 == v32)
  {
    swift_bridgeObjectRelease_n(v31, 2);
LABEL_26:
    v25 = (a2 & 1) == 0;
    result = 11.0;
    goto LABEL_15;
  }
  v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v34);
  if ((v35 & 1) != 0)
    goto LABEL_26;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
  v38 = v37;
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v41 = v39;
  if (v36 == v40 && v38 == v39)
  {
    swift_bridgeObjectRelease_n(v38, 2);
LABEL_31:
    v25 = (a2 & 1) == 0;
    result = 12.0;
LABEL_32:
    v27 = 6.0;
    goto LABEL_18;
  }
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 0);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v41);
  if ((v42 & 1) != 0)
    goto LABEL_31;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
  v45 = v44;
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v48 = v46;
  if (v43 == v47 && v45 == v46)
  {
    swift_bridgeObjectRelease_n(v45, 2);
LABEL_37:
    v25 = (a2 & 1) == 0;
    result = 13.0;
    goto LABEL_32;
  }
  v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v46, 0);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v48);
  if ((v49 & 1) != 0)
    goto LABEL_37;
  v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
  v52 = v51;
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v55 = v53;
  if (v50 == v54 && v52 == v53)
  {
    swift_bridgeObjectRelease_n(v52, 2);
LABEL_42:
    v25 = (a2 & 1) == 0;
    result = 14.0;
    v27 = 7.0;
LABEL_18:
    if (!v25)
      return v27;
    return result;
  }
  v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v54, v53, 0);
  swift_bridgeObjectRelease(v52);
  swift_bridgeObjectRelease(v55);
  if ((v56 & 1) != 0)
    goto LABEL_42;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  v59 = v58;
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v62 = v60;
  if (v57 == v61 && v59 == v60)
  {
    swift_bridgeObjectRelease_n(v59, 2);
    return 17.0;
  }
  else
  {
    v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v61, v60, 0);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v62);
    result = 17.0;
    if ((v63 & 1) == 0)
    {
      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
      v66 = v65;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v69 = v67;
      if (v64 == v68 && v66 == v67)
      {
        swift_bridgeObjectRelease_n(v66, 2);
        return 20.0;
      }
      else
      {
        v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v68, v67, 0);
        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v69);
        result = 20.0;
        if ((v70 & 1) == 0)
        {
          v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
          v73 = v72;
          v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          v76 = v74;
          if (v71 == v75 && v73 == v74)
          {
            swift_bridgeObjectRelease_n(v73, 2);
            return 24.0;
          }
          else
          {
            v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v73, v75, v74, 0);
            swift_bridgeObjectRelease(v73);
            swift_bridgeObjectRelease(v76);
            result = 24.0;
            if ((v77 & 1) == 0)
            {
              v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
              v80 = v79;
              v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
              v83 = v81;
              if (v78 == v82 && v80 == v81)
              {
                swift_bridgeObjectRelease_n(v80, 2);
                return 28.0;
              }
              else
              {
                v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v82, v81, 0);
                swift_bridgeObjectRelease(v80);
                swift_bridgeObjectRelease(v83);
                result = 28.0;
                if ((v84 & 1) == 0)
                {
                  v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
                  v87 = v86;
                  v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
                  v90 = v88;
                  if (v85 != v89 || (v93 = 31.0, v87 != v88))
                  {
                    v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v87, v89, v88, 0);
                    v92 = 10.0;
                    if ((v91 & 1) != 0)
                      v92 = 31.0;
                    v93 = v92;
                  }
                  swift_bridgeObjectRelease(v87);
                  swift_bridgeObjectRelease(v90);
                  return v93;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10007B0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F6C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10007B11C(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  id v6;
  NSString *v7;
  NSString *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_1007F0FD8 != -1)
    swift_once(&qword_1007F0FD8, sub_100079920);
  v2 = (void *)qword_100851030;
  v3 = sub_10000DF3C(&qword_1007F6C48);
  inited = swift_initStackObject(v3, &v14);
  *(_OWORD *)(inited + 16) = xmmword_10066F870;
  *(_QWORD *)(inited + 32) = UIContentSizeCategoryExtraSmall;
  v5 = inited + 32;
  *(_QWORD *)(inited + 40) = UIContentSizeCategorySmall;
  v6 = v2;
  v7 = UIContentSizeCategoryExtraSmall;
  v8 = UIContentSizeCategorySmall;
  v9 = objc_msgSend(a1, "traitCollection");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  sub_100079D6C((uint64_t)v10, inited);
  swift_setDeallocating(inited);
  v11 = *(_QWORD *)(inited + 16);
  type metadata accessor for UIContentSizeCategory(0);
  swift_arrayDestroy(v5, v11, v12);
  return v6;
}

unint64_t sub_10007B25C()
{
  unint64_t result;

  result = qword_1007F6C38;
  if (!qword_1007F6C38)
  {
    result = swift_getWitnessTable(&unk_1006830E4, &type metadata for SearchLinkLayout);
    atomic_store(result, (unint64_t *)&qword_1007F6C38);
  }
  return result;
}

uint64_t sub_10007B2A0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 112, 7);
}

unint64_t sub_10007B2DC()
{
  unint64_t result;

  result = qword_1007F6C40;
  if (!qword_1007F6C40)
  {
    result = swift_getWitnessTable(&unk_1006813B8, &type metadata for AutoAdjustingPlaceable);
    atomic_store(result, (unint64_t *)&qword_1007F6C40);
  }
  return result;
}

uint64_t sub_10007B320()
{
  uint64_t v0;

  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10007B344(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F6C30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007B384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F6C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007B3CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F6C50;
  if (!qword_1007F6C50)
  {
    v1 = objc_opt_self(UIGestureRecognizer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F6C50);
  }
  return result;
}

uint64_t sub_10007B408()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10007B418(void *a1, void *a2, __n128 a3)
{
  return sub_10007A474(a1, a2, a3);
}

unint64_t sub_10007B424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F6C70;
  if (!qword_1007F6C70)
  {
    v1 = type metadata accessor for GameCenterActivityFeedCollectionViewCell(255);
    result = swift_getWitnessTable("I+\v", v1);
    atomic_store(result, (unint64_t *)&qword_1007F6C70);
  }
  return result;
}

double sub_10007B46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  double v5;
  id v6;
  double v7;
  double v8;
  uint64_t v10;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100672320);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(KeyPath);
  v5 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_1000826AC();
  swift_getObjectType();
  sub_1002B5F7C(v6, v5);
  v8 = v7;
  swift_unknownObjectRelease(v6);
  return v8;
}

_QWORD *sub_10007B564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_10000DF3C(&qword_1007F6CF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000DF3C(&qword_1007F6CC0);
  v6 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v24 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return _swiftEmptyArrayStorage;
  v23 = v1;
  swift_bridgeObjectRetain(a1);
  v22 = a1;
  v12 = (uint64_t *)(a1 + 40);
  v13 = _swiftEmptyArrayStorage;
  do
  {
    v14 = (void *)*(v12 - 1);
    v15 = *v12;
    ObjectType = swift_getObjectType();
    v17 = v14;
    dispatch thunk of MetadataRibbonItemView.searchLayoutContext.getter(ObjectType, v15);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v25) == 1)
    {
      sub_100011088((uint64_t)v5, &qword_1007F6CF0);
    }
    else
    {
      sub_10006C29C((uint64_t)v5, (uint64_t)v10, &qword_1007F6CC0);
      sub_10006C29C((uint64_t)v10, v24, &qword_1007F6CC0);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
        v13 = (_QWORD *)sub_1002006E4(0, v13[2] + 1, 1, (unint64_t)v13);
      v19 = v13[2];
      v18 = v13[3];
      if (v19 >= v18 >> 1)
        v13 = (_QWORD *)sub_1002006E4(v18 > 1, v19 + 1, 1, (unint64_t)v13);
      v13[2] = v19 + 1;
      sub_10006C29C(v24, (uint64_t)v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, &qword_1007F6CC0);
    }
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease(v22);
  return v13;
}

id sub_10007B7A0(uint64_t a1, char a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  char *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _QWORD *v53;

  v7 = type metadata accessor for MetadataRibbonItemViewType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_shouldEvenlyDistribute] = a2;
  v53 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v35 = a1;
    else
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v35);
    v11 = (uint64_t)result;
    if (result)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease(a1);
    v34 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain(a1);
  if (!v11)
    goto LABEL_35;
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  v44 = v3;
  v45 = a3;
  v13 = 0;
  v14 = a1 & 0xC000000000000001;
  v15 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
  v52 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
  v51 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
  v50 = enum case for MetadataRibbonItemViewType.starRating(_:);
  v49 = enum case for MetadataRibbonItemViewType.textLabel(_:);
  v48 = enum case for MetadataRibbonItemViewType.divider(_:);
  v47 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
  v46 = v10;
  do
  {
    if (v14)
    {
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
    }
    else
    {
      v16 = *(_QWORD *)(a1 + 8 * v13 + 32);
      v17 = swift_retain(v16);
    }
    MetadataRibbonItem.viewContainerType.getter(v17);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if ((_DWORD)v18 == (_DWORD)v15
      || (_DWORD)v18 == v52
      || (_DWORD)v18 == v51
      || (_DWORD)v18 == v50
      || (_DWORD)v18 == v49
      || (_DWORD)v18 == v48
      || (_DWORD)v18 == v47)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v25 = v15;
      v26 = v14;
      v27 = v7;
      v28 = v8;
      v29 = v11;
      v30 = a1;
      v31 = v53[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
      v32 = v31;
      a1 = v30;
      v11 = v29;
      v8 = v28;
      v7 = v27;
      v14 = v26;
      v15 = v25;
      v10 = v46;
      v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v16);
      specialized ContiguousArray._endMutation()(v33);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_release(v16);
    }
    ++v13;
  }
  while (v11 != v13);
  swift_bridgeObjectRelease(a1);
  v34 = v53;
  v3 = v44;
  a3 = v45;
LABEL_36:
  v36 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels];
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels] = v34;
  swift_bridgeObjectRelease(v36);
  swift_retain(a3);
  v37 = v3;
  v39 = sub_10007CC78(a1, a3, v37, v38);
  swift_release(a3);

  v40 = OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews;
  v41 = *(_QWORD *)&v37[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v37[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews]);
    v43 = 32;
    do
    {
      objc_msgSend(*(id *)(v41 + v43), "removeFromSuperview", v44, v45);
      v43 += 16;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease(v41);
    v41 = *(_QWORD *)&v37[v40];
  }
  *(_QWORD *)&v37[v40] = v39;
  swift_bridgeObjectRelease(v41);
  sub_10007BD20();
  return objc_msgSend(v37, "setNeedsLayout");
}

UIContentSizeCategory sub_10007BADC()
{
  qword_1007F6C78 = (uint64_t)UIContentSizeCategoryAccessibilityExtraLarge;
  return UIContentSizeCategoryAccessibilityExtraLarge;
}

id sub_10007BAF4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  __n128 v11;
  char *v12;
  id v13;
  double left;
  double bottom;
  double right;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews] = _swiftEmptyArrayStorage;
  v10 = v4;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter(v11);
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v10[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_shouldEvenlyDistribute] = 1;
  v10[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsCalculator] = 0;
  v12 = &v10[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;

  v25.receiver = v10;
  v25.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v17 = v13;
  objc_msgSend(v17, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v18 = qword_1007F0FE0;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_1007F0FE0, sub_10007BADC);
  objc_msgSend(v19, "setMaximumContentSizeCategory:", qword_1007F6C78);

  v20 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v21 + 32) = type metadata accessor for UITraitLegibilityWeight(0);
  *(_QWORD *)(v21 + 40) = &protocol witness table for UITraitLegibilityWeight;
  v22 = v19;
  v23 = UIView.registerForTraitChanges<A>(_:handler:)(v21, sub_10007CBAC, 0, ObjectType);
  swift_unknownObjectRelease(v23);
  swift_bridgeObjectRelease(v21);

  return v22;
}

id sub_10007BD20()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
  v3 = swift_bridgeObjectRetain(v2);
  v4 = SearchTagsRibbonViewLayout.Metrics.maximumNumberOfItems.getter(v3);
  result = (id)sub_100136738(v4, v2);
  v9 = result;
  v10 = (v8 >> 1) - v7;
  if (v8 >> 1 == v7)
    goto LABEL_5;
  if ((uint64_t)(v8 >> 1) > v7)
  {
    v11 = (uint64_t *)(v6 + 16 * v7);
    do
    {
      v12 = *v11;
      v11 += 2;
      objc_msgSend(v1, "addSubview:", v12);
      --v10;
    }
    while (v10);
LABEL_5:
    swift_unknownObjectRelease(v9);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  __break(1u);
  return result;
}

uint64_t sub_10007BDC4()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  double v19;
  char *v20;
  __n128 v21;
  void (*v22)(__n128);
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[32];
  objc_super v31;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v27 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SearchTagsRibbonViewLayout(0, v8);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31.receiver = v1;
  v31.super_class = ObjectType;
  objc_msgSendSuper2(&v31, "layoutSubviews", v12);
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
  swift_bridgeObjectRetain(v15);
  v17 = sub_10007B564(v16);
  v18 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v10, &v1[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metrics], v6, v18);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v17, v10, v1[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_shouldEvenlyDistribute]);
  v19 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  SearchTagsRibbonViewLayout.placeChildren(relativeTo:in:)(v1, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  v20 = &v1[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock];
  v21 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock], v30, 32, 0);
  v22 = *(void (**)(__n128))v20;
  if (*(_QWORD *)v20)
  {
    v23 = *((_QWORD *)v20 + 1);
    swift_endAccess(v30);
    v24 = swift_retain(v23);
    v22(v24);
    sub_100019310((uint64_t)v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v14, v29, v21);
    return swift_endAccess(v30);
  }
}

double sub_10007C008(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  double v18;
  _BYTE v20[16];

  v5 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SearchTagsRibbonViewLayout(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews);
  swift_bridgeObjectRetain(v14);
  v16 = sub_10007B564(v15);
  v17 = swift_bridgeObjectRelease(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v2 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metrics, v5, v17);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v16, v9, *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_shouldEvenlyDistribute));
  v18 = SearchTagsRibbonViewLayout.measurements(fitting:in:)(a1, a2);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  return v18;
}

uint64_t sub_10007C270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  swift_getObjectType();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  v2 = swift_bridgeObjectRetain(v1);
  v3 = sub_1000D88A0(v2, 0);
  swift_bridgeObjectRelease(v1);
  return v3 & 1;
}

id sub_10007C2D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v1);
  v2 = OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews));
    v5 = 32;
    do
    {
      objc_msgSend(*(id *)(v3 + v5), "removeFromSuperview");
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
    v3 = *(_QWORD *)(v0 + v2);
  }
  *(_QWORD *)(v0 + v2) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  return sub_10007BD20();
}

void sub_10007C378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  __n128 v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45[24];
  char v46[24];

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = a2 + 16;
    swift_beginAccess(v13, v45, 0, 0);
    v14 = swift_weakLoadStrong(v13);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels];
      if (v16
        && (v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews],
            (v18 = *(_QWORD *)(v17 + 16)) != 0))
      {
        v19 = *(void **)(v17 + 32);
        v20 = v16 & 0xFFFFFFFFFFFFFF8;
        v40 = *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews];
        v44 = v16;
        v38 = v16 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)v16 >> 62)
          goto LABEL_27;
        v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v17);
        v16 = v19;
        if (v21)
        {
          do
          {
            v37 = v15;
            v39 = v10;
            v17 = 0;
            v22 = v44;
            v20 = v44 & 0xC000000000000001;
            v41 = v21 - 1;
            v42 = v18 - 1;
            v43 = v44 & 0xC000000000000001;
            v18 = 48;
            v15 = v40;
            if ((v44 & 0xC000000000000001) != 0)
            {
LABEL_8:
              v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v22);
              goto LABEL_11;
            }
            while (v17 < *(_QWORD *)(v38 + 16))
            {
              v10 = *(char **)(v22 + 8 * v17 + 32);
              v23 = swift_retain(v10);
LABEL_11:
              dispatch thunk of MetadataRibbonItem.impressionMetrics.getter(v23);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
              {
                swift_release(v10);

                v16 = sub_100011088((uint64_t)v6, (uint64_t *)&unk_1007F7740);
              }
              else
              {
                v24 = v39;
                (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v39, v6, v7);
                if ((objc_msgSend(v19, "isHidden", v37) & 1) != 0)
                {
                  (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v7);
                  swift_release(v10);

                }
                else
                {
                  objc_msgSend(v19, "frame");
                  v26 = v25;
                  v28 = v27;
                  v30 = v29;
                  v32 = v31;
                  v33 = objc_msgSend(v12, "superview");
                  objc_msgSend(v12, "convertRect:toView:", v33, v26, v28, v30, v32);

                  ImpressionsCalculator.addElement(_:at:)(v24);
                  v34 = swift_release(v10);
                  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v24, v7, v34);
                }
                v15 = v40;
              }
              if (v42 == v17)
              {
LABEL_24:

                swift_release(v37);
                swift_bridgeObjectRelease(v44);
                swift_bridgeObjectRelease(v15);
                return;
              }
              v20 = *(_QWORD *)(v15 + 16);
              if (v17 + 1 >= v20)
              {
                __break(1u);
                break;
              }
              if (v41 == v17)
                goto LABEL_24;
              v16 = (uint64_t)*(id *)(v15 + v18);
              v19 = (void *)v16;
              ++v17;
              v18 += 16;
              v22 = v44;
              if (v43)
                goto LABEL_8;
            }
            __break(1u);
LABEL_27:
            if (v16 >= 0)
              v35 = v20;
            else
              v35 = v16;
            swift_bridgeObjectRetain(v16);
            swift_bridgeObjectRetain(v17);
            v36 = v19;
            v16 = _CocoaArrayWrapper.endIndex.getter(v35);
            v21 = v16;
          }
          while (v16);
        }

        swift_release(v15);
        swift_bridgeObjectRelease(v44);
        swift_bridgeObjectRelease(v40);

      }
      else
      {

        swift_release(v15);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_10007C7E8()
{
  return type metadata accessor for SearchTagsRibbonView(0);
}

uint64_t type metadata accessor for SearchTagsRibbonView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F6CB0;
  if (!qword_1007F6CB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchTagsRibbonView);
  return result;
}

uint64_t sub_10007C82C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = &unk_1006723A0;
    v4[4] = &unk_1006723A0;
    v4[5] = "\b";
    v4[6] = &unk_1006723B8;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10007C8C8()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_10007C910(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

void *sub_10007C960(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsCalculator, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_10007C9A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_10007C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

void *sub_10007CA58(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock, a1, 33, 0);
  return &j_j__swift_endAccess;
}

void (*sub_10007CA9C(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject(&unk_100724E80, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, v2);
  v5 = swift_allocObject(&unk_100724EA8, 24, 7);
  swift_weakInit(v5 + 16, a2);
  v6 = swift_allocObject(&unk_100724ED0, 32, 7);
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  return sub_10007E17C;
}

uint64_t sub_10007CB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v4, a2);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, ObjectType, a4);
}

uint64_t sub_10007CB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v3, a2);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, ObjectType, a3);
}

id sub_10007CBAC(void *a1)
{
  return objc_msgSend(a1, "setNeedsLayout");
}

uint64_t sub_10007CBB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[3];
  v3 = a1[4];
  sub_100011064(a1, v2);
  v4 = UIMutableTraits.preferredContentSizeCategory.getter(v2, v3);
  if (qword_1007F0FE0 != -1)
    swift_once(&qword_1007F0FE0, sub_10007BADC);
  v5 = (id)qword_1007F6C78;
  v6 = static UIContentSizeCategory.< infix(_:_:)(v5, v4);
  if ((v6 & 1) != 0)
    v7 = (void *)v4;
  else
    v7 = v5;
  if ((v6 & 1) != 0)
    v4 = (uint64_t)v5;

  v8 = a1[3];
  v9 = a1[4];
  sub_100079870((uint64_t)a1, v8);
  return UIMutableTraits.preferredContentSizeCategory.setter(v4, v8, v9);
}

_QWORD *sub_10007CC78(uint64_t a1, uint64_t a2, void *a3, __n128 a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  int v27;
  void *v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t (*v31)(uint64_t);
  const char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t);
  uint64_t v51;
  _BYTE *v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  _BYTE *v56;
  double v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  _BYTE v68[4];
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  int v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  Swift::Int v85;
  uint64_t v86;
  int v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  unint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD v102[5];

  v94 = a2;
  v84 = type metadata accessor for LabelPlaceholder(0, a4);
  v83 = *(_QWORD *)(v84 - 8);
  v6 = __chkstk_darwin(v84);
  v82 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = type metadata accessor for DynamicTextAppearance(0, v6);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v93 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v79 = &v68[-v10];
  __chkstk_darwin(v11);
  v78 = &v68[-v12];
  v13 = sub_10000DF3C(&qword_1007F6CD0);
  __chkstk_darwin(v13);
  v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for MetadataRibbonItemViewType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v95 = &v68[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((unint64_t)a1 >> 62)
    goto LABEL_38;
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v19)
  {
    v88 = v15;
    v92 = a1 & 0xC000000000000001;
    v91 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v77 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v73 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v72 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v71 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v70 = enum case for MetadataRibbonItemViewType.divider(_:);
    v20 = 4;
    v69 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v21 = JUMeasuringSizeCompressed[0];
    v22 = JUMeasuringSizeCompressed[1];
    v23 = _swiftEmptyArrayStorage;
    v89 = a1;
    v76 = a3;
    v75 = v16;
    v74 = v17;
    v90 = v19;
    while (1)
    {
      v101 = v23;
      v15 = (_BYTE *)(v20 - 4);
      if (!v92)
        break;
      v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a1);
      v25 = v20 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_37;
LABEL_9:
      v98 = v25;
      v26 = v95;
      v100 = v24;
      MetadataRibbonItem.viewContainerType.getter();
      v27 = (*(uint64_t (**)(_BYTE *, uint64_t))(v17 + 88))(v26, v16);
      v97 = v20;
      if (v27 == v91)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
        v30 = (unint64_t *)&unk_1007F6CE8;
        v31 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
        v32 = (const char *)&unk_10069CC10;
LABEL_23:
        v33 = sub_10000E99C(v30, v31, (uint64_t)v32);
        v34 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v29)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v35 = dispatch thunk of MetadataRibbonItemView.apply(_:asPartOf:)(v100, v94, v29, v33);
        MetadataRibbonItem.id.getter(v102, v35);
        v36 = dispatch thunk of MetadataRibbonItemView.id.setter(v102, v29, v33);
        v37 = v88;
        MetadataRibbonItem.itemType.getter(v36);
        v38 = type metadata accessor for MetadataRibbonItemType(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
        v96 = v29;
        v99 = v33;
        v39 = dispatch thunk of MetadataRibbonItemView.itemType.setter(v37, v29, v33);
        v40 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter(v39);
        LODWORD(v29) = v41;
        a3 = v28;
        v42 = objc_msgSend(v28, "traitCollection");
        if ((v29 & 1) != 0)
        {

          v58 = 0.0;
          a1 = v89;
        }
        else
        {
          v85 = v40;
          v86 = (uint64_t)v42;
          v87 = v29;
          v43 = DynamicTextAppearance.init()(v42);
          static CustomTextStyle<>.metadataRibbon.getter(v43);
          if (qword_1007F1158 != -1)
            swift_once(&qword_1007F1158, sub_1000D4F00);
          v44 = type metadata accessor for MetadataRibbonTextStyle(0);
          v45 = sub_1000117A8(v44, (uint64_t)qword_100851868);
          v102[3] = v44;
          v102[4] = sub_10000E99C((unint64_t *)&qword_1007F9860, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
          v46 = sub_1000117C0(v102);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v46, v45, v44);
          v47 = v79;
          v48 = v93;
          DynamicTextAppearance.withCustomTextStyle(_:)(v102);
          v49 = v80;
          v50 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
          v51 = v81;
          v50(v48, v81);
          _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v102);
          v52 = v78;
          DynamicTextAppearance.withNumberOfLines(_:)(1);
          v50(v47, v51);
          v53._countAndFlagsBits = 77;
          v53._object = (void *)0xE100000000000000;
          v54 = String.init(repeating:count:)(v53, v85);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v47, v52, v51);
          v55 = LabelPlaceholder.Options.init(rawValue:)(0);
          v56 = v82;
          LabelPlaceholder.init(_:with:where:)(v54._countAndFlagsBits, v54._object, v47, v55);
          v29 = v86;
          v57 = LabelPlaceholder.measure(toFit:with:)(v86, v21, v22);
          (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v56, v84);
          v50(v52, v51);

          v58 = v57;
          a1 = v89;
          a3 = v76;
          v16 = v75;
          v17 = v74;
          LOBYTE(v29) = v87;
        }
        dispatch thunk of MetadataRibbonItemView.labelMaxWidth.setter(*(_QWORD *)&v58, v29 & 1, v96, v99);
        swift_release(v100);
        if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) != 0)
          v23 = v101;
        else
          v23 = sub_100200DB8(0, v101[2] + 1, 1, v101);
        v60 = v23[2];
        v59 = v23[3];
        if (v60 >= v59 >> 1)
          v23 = sub_100200DB8((_QWORD *)(v59 > 1), v60 + 1, 1, v23);
        v23[2] = v60 + 1;
        v61 = &v23[2 * v60];
        v62 = v99;
        v61[4] = v34;
        v61[5] = v62;
        v63 = v90;
        v64 = v97;
        goto LABEL_33;
      }
      if (v27 == v77)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v30 = (unint64_t *)&unk_1007FD1C0;
        v31 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v32 = (const char *)&unk_10067C510;
        goto LABEL_23;
      }
      if (v27 == v73)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v30 = (unint64_t *)&unk_1007F6CE0;
        v31 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v32 = "q*\v";
        goto LABEL_23;
      }
      if (v27 == v72)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v30 = (unint64_t *)&unk_1007FD1D0;
        v31 = type metadata accessor for MetadataRibbonStarRatingView;
        v32 = (const char *)&unk_10069C160;
        goto LABEL_23;
      }
      if (v27 == v71)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonTagView(0);
        v30 = (unint64_t *)&unk_1007F6CD8;
        v31 = type metadata accessor for MetadataRibbonTagView;
        v32 = (const char *)&unk_100683428;
        goto LABEL_23;
      }
      if (v27 == v70)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonBarView(0);
        v30 = (unint64_t *)&unk_1007FD1B0;
        v31 = type metadata accessor for MetadataRibbonBarView;
        v32 = (const char *)&unk_10068BD38;
        goto LABEL_23;
      }
      if (v27 == v69)
      {
        v28 = a3;
        v29 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v30 = (unint64_t *)&unk_1007F6CC8;
        v31 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v32 = (const char *)&unk_1006745C8;
        goto LABEL_23;
      }
      (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v95, v16);
      swift_release(v100);
      v63 = v90;
      v64 = v97;
      v23 = v101;
LABEL_33:
      v20 = v64 + 1;
      if (v98 == v63)
      {
        v65 = v23;
        swift_bridgeObjectRelease(a1);
        return v65;
      }
    }
    swift_retain(*(_QWORD *)(a1 + 8 * v20));
    v25 = v20 - 3;
    if (!__OFADD__(v15, 1))
      goto LABEL_9;
LABEL_37:
    __break(1u);
LABEL_38:
    if (a1 < 0)
      v67 = a1;
    else
      v67 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v19 = _CocoaArrayWrapper.endIndex.getter(v67);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10007D508(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  int v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t (*v44)(uint64_t);
  const char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  double v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  double *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  __int128 *v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  id v99;
  void *v100;
  int v101;
  int v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD v139[5];

  v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchTagsRibbonViewLayout(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for LabelPlaceholder(0, v12);
  v118 = *(_QWORD *)(v119 - 8);
  v15 = __chkstk_darwin(v119);
  v117 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DynamicTextAppearance(0, v15);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v129 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v114 = (char *)&v101 - v19;
  __chkstk_darwin(v20);
  v113 = (char *)&v101 - v21;
  v22 = sub_10000DF3C(&qword_1007F6CC0);
  v128 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v120 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v133 = (uint64_t)&v101 - v25;
  __chkstk_darwin(v26);
  v138 = (_QWORD *)((char *)&v101 - v27);
  v28 = type metadata accessor for MetadataRibbonItemViewType(0);
  v131 = *(_QWORD *)(v28 - 8);
  v132 = v28;
  __chkstk_darwin(v28);
  v130 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MetadataRibbonItem(0);
  result = Array.isNotEmpty.getter(a1, v30);
  if ((result & 1) == 0)
    return result;
  v112 = UITraitCollection.modifyingTraits(_:)(sub_10007CBB8, 0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v94 = a1;
    else
      v94 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v94);
    v32 = result;
    if (result)
      goto LABEL_4;
LABEL_40:
    v92 = swift_bridgeObjectRelease(a1);
    v93 = _swiftEmptyArrayStorage;
LABEL_41:
    static SearchTagsRibbonViewLayout.Metrics.standard.getter(v92);
    SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v93, v9, 0);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v95 = sub_10000DF3C(&qword_1007F5840);
    v96 = swift_allocObject(v95, 40, 7);
    *(_OWORD *)(v96 + 16) = xmmword_10066FE60;
    v97 = (void *)v112;
    *(_QWORD *)(v96 + 32) = v112;
    v139[0] = v96;
    specialized Array._endMutation()(v96);
    v98 = v139[0];
    v99 = v97;
    v100 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v98);
    SearchTagsRibbonViewLayout.measurements(fitting:in:)(a2, a3);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a1);
  if (!v32)
    goto LABEL_40;
LABEL_4:
  if (v32 >= 1)
  {
    v103 = v9;
    v104 = v14;
    v105 = v11;
    v106 = v10;
    v33 = 0;
    v127 = a1 & 0xC000000000000001;
    v126 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v111 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v109 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v108 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v123 = v138 + 5;
    v107 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v102 = enum case for MetadataRibbonItemViewType.divider(_:);
    v122 = (__int128 *)(v133 + 40);
    v101 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v34 = (uint64_t)v120;
    v121 = v120 + 40;
    v35 = JUMeasuringSizeCompressed[0];
    v36 = JUMeasuringSizeCompressed[1];
    v37 = _swiftEmptyArrayStorage;
    v125 = a1;
    v110 = v22;
    v124 = v32;
    while (1)
    {
      if (v127)
      {
        v38 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a1);
      }
      else
      {
        v38 = *(_QWORD *)(a1 + 8 * v33 + 32);
        v39 = swift_retain(v38);
      }
      v40 = v130;
      MetadataRibbonItem.viewContainerType.getter(v39);
      v41 = (*(uint64_t (**)(char *, uint64_t))(v131 + 88))(v40, v132);
      v136 = v33;
      v137 = v37;
      if (v41 == v126)
        break;
      if (v41 == v111)
      {
        v42 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v43 = (unint64_t *)&unk_1007FD1C0;
        v44 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v45 = (const char *)&unk_10067C510;
        goto LABEL_23;
      }
      if (v41 == v109)
      {
        v42 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v43 = (unint64_t *)&unk_1007F6CE0;
        v44 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v45 = "q*\v";
        goto LABEL_23;
      }
      if (v41 == v108)
      {
        v42 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v43 = (unint64_t *)&unk_1007FD1D0;
        v44 = type metadata accessor for MetadataRibbonStarRatingView;
        v45 = (const char *)&unk_10069C160;
        goto LABEL_23;
      }
      if (v41 == v107)
      {
        v42 = type metadata accessor for MetadataRibbonTagView(0);
        v43 = (unint64_t *)&unk_1007F6CD8;
        v44 = type metadata accessor for MetadataRibbonTagView;
        v45 = (const char *)&unk_100683428;
        goto LABEL_23;
      }
      if (v41 == v102)
      {
        v42 = type metadata accessor for MetadataRibbonBarView(0);
        v43 = (unint64_t *)&unk_1007FD1B0;
        v44 = type metadata accessor for MetadataRibbonBarView;
        v45 = (const char *)&unk_10068BD38;
        goto LABEL_23;
      }
      if (v41 == v101)
      {
        v42 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v43 = (unint64_t *)&unk_1007F6CC8;
        v44 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v45 = (const char *)&unk_1006745C8;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v132);
      swift_release(v38);
      a1 = v125;
      v87 = v124;
LABEL_32:
      if (v87 == ++v33)
      {
        v92 = swift_bridgeObjectRelease(a1);
        v10 = v106;
        v93 = v37;
        v11 = v105;
        v14 = v104;
        v9 = v103;
        goto LABEL_41;
      }
    }
    v42 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
    v43 = (unint64_t *)&unk_1007F6CE8;
    v44 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    v45 = (const char *)&unk_10069CC10;
LABEL_23:
    v46 = sub_10000E99C(v43, v44, (uint64_t)v45);
    v47 = (_QWORD *)swift_allocObject(&unk_100724E58, 40, 7);
    v47[2] = v42;
    v47[3] = v46;
    v47[4] = v38;
    v48 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    v49 = swift_retain(v38);
    v50 = LayoutViewPlaceholder.init(measureWith:)(sub_10007E094, v47, v49);
    v51 = v138;
    v52 = (char *)v138 + *(int *)(v22 + 96);
    MetadataRibbonItem.id.getter(v138, v50);
    v51[8] = v48;
    v51[9] = &protocol witness table for LayoutViewPlaceholder;
    v51[5] = v50;
    v134 = v50;
    v53 = swift_retain(v50);
    *((_BYTE *)v51 + 80) = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter(v42, v46, v53) & 1;
    v54 = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v42, v46);
    *((_BYTE *)v51 + 81) = v54 & 1;
    MetadataRibbonItem.itemType.getter(v54);
    v55 = type metadata accessor for MetadataRibbonItemType(0);
    v56 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v52, 0, 1, v55);
    v135 = v38;
    v57 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter(v56);
    v59 = v58;
    v60 = 0.0;
    if ((v58 & 1) == 0)
    {
      v61 = v57;
      v62 = DynamicTextAppearance.init()(v57);
      static CustomTextStyle<>.metadataRibbon.getter(v62);
      if (qword_1007F1158 != -1)
        swift_once(&qword_1007F1158, sub_1000D4F00);
      v63 = type metadata accessor for MetadataRibbonTextStyle(0);
      v64 = sub_1000117A8(v63, (uint64_t)qword_100851868);
      v139[3] = v63;
      v139[4] = sub_10000E99C((unint64_t *)&qword_1007F9860, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
      v65 = sub_1000117C0(v139);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v65, v64, v63);
      v66 = v114;
      v67 = v129;
      DynamicTextAppearance.withCustomTextStyle(_:)(v139);
      v68 = v115;
      v69 = *(void (**)(char *, uint64_t))(v115 + 8);
      v70 = v116;
      v69(v67, v116);
      _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v139);
      v71 = v113;
      DynamicTextAppearance.withNumberOfLines(_:)(1);
      v69(v66, v70);
      v72._countAndFlagsBits = 77;
      v72._object = (void *)0xE100000000000000;
      v73 = String.init(repeating:count:)(v72, v61);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v66, v71, v70);
      v74 = LabelPlaceholder.Options.init(rawValue:)(0);
      v75 = v117;
      LabelPlaceholder.init(_:with:where:)(v73._countAndFlagsBits, v73._object, v66, v74);
      v60 = LabelPlaceholder.measure(toFit:with:)(v112, v35, v36);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v75, v119);
      v69(v71, v70);
      v22 = v110;
      v34 = (uint64_t)v120;
    }
    v76 = v138;
    v77 = (double *)((char *)v138 + *(int *)(v22 + 112));
    *v77 = v60;
    v78 = v59 & 1;
    *((_BYTE *)v77 + 8) = v78;
    v79 = v133;
    v80 = v133 + *(int *)(v22 + 96);
    sub_10006BFD4((uint64_t)v76, v133);
    v81 = v122;
    sub_100011020((uint64_t)v123, (uint64_t)v122);
    v82 = *((_BYTE *)v76 + 80);
    v83 = *((_BYTE *)v76 + 81);
    sub_10007E0C0((uint64_t)v52, v80);
    v84 = v34 + *(int *)(v22 + 96);
    v85 = v34 + *(int *)(v22 + 112);
    v86 = *(_OWORD *)(v79 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v79;
    *(_OWORD *)(v34 + 16) = v86;
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(v79 + 32);
    sub_100010F3C(v81, (uint64_t)v121);
    *(_BYTE *)(v34 + 80) = v82;
    *(_BYTE *)(v34 + 81) = v83;
    sub_10006C29C(v80, v84, &qword_1007F6CD0);
    *(double *)v85 = v60;
    *(_BYTE *)(v85 + 8) = v78;
    v37 = v137;
    if ((swift_isUniquelyReferenced_nonNull_native(v137) & 1) == 0)
      v37 = (_QWORD *)sub_1002006E4(0, v37[2] + 1, 1, (unint64_t)v37);
    a1 = v125;
    v87 = v124;
    v88 = v135;
    v33 = v136;
    v89 = v134;
    v91 = v37[2];
    v90 = v37[3];
    if (v91 >= v90 >> 1)
      v37 = (_QWORD *)sub_1002006E4(v90 > 1, v91 + 1, 1, (unint64_t)v37);
    v37[2] = v91 + 1;
    sub_10006C29C(v34, (uint64_t)v37+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v91, &qword_1007F6CC0);
    swift_release(v89);
    swift_release(v88);
    sub_100011088((uint64_t)v138, &qword_1007F6CC0);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007E070()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007E094(uint64_t a1)
{
  uint64_t v1;

  return dispatch thunk of static MetadataRibbonItemView.measurements(for:fitting:in:)(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10007E0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F6CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007E108()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007E12C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007E150()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10007E17C()
{
  uint64_t v0;

  sub_10007C378(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10007E184()
{
  _BYTE *v0;
  _QWORD *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemViews] = &_swiftEmptyArrayStorage;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter();
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_shouldEvenlyDistribute] = 1;
  v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsCalculator] = 0;
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension20SearchTagsRibbonView_impressionsUpdateBlock];
  *v1 = 0;
  v1[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/SearchTagsRibbonView.swift", 49, 2, 43, 0);
  __break(1u);
}

char *sub_10007E248(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC22SubscribePageExtension29PlaceholderCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = OBJC_IVAR____TtC22SubscribePageExtension29PlaceholderCollectionViewCell_placeholderView;
  v15 = objc_allocWithZone((Class)UIView);
  v16 = v6;
  *(_QWORD *)&v6[v14] = objc_msgSend(v15, "init");

  v22.receiver = v16;
  v22.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v18 = objc_msgSend(v17, "contentView");
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v19 = objc_msgSend(v17, "contentView");
  v20 = *(id *)&v17[OBJC_IVAR____TtC22SubscribePageExtension29PlaceholderCollectionViewCell_placeholderView];
  objc_msgSend(v19, "addSubview:", v20);

  return v17;
}

uint64_t sub_10007E5B8()
{
  return type metadata accessor for PlaceholderCollectionViewCell(0);
}

uint64_t type metadata accessor for PlaceholderCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F6D20;
  if (!qword_1007F6D20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaceholderCollectionViewCell);
  return result;
}

uint64_t sub_10007E5FC()
{
  return sub_10000E99C(&qword_1007F6D30, type metadata accessor for LinkCollectionViewCell, (uint64_t)&unk_100672490);
}

void sub_10007E62C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  uint64_t KeyPath;
  double v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for EditorialLink(0, v5);
  v9 = sub_10000E99C(&qword_1007F6D38, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialLink, (uint64_t)&protocol conformance descriptor for EditorialLink);
  ItemLayoutContext.typedModel<A>(as:)(v30, v8, v8, v9);
  v10 = v30[0];
  if (v30[0])
  {
    v11 = type metadata accessor for ObjectGraph(0);
    v12 = *(_QWORD *)(swift_dynamicCastClassUnconditional(a2, v11, 0, 0, 0) + qword_100854058);
    if (v12)
    {
      v29 = v10;
      v13 = swift_retain(v12);
      dispatch thunk of LinkLoader.availablePresentation(for:)(v30, &v29, v13);
      swift_release(v12);
      v14 = v30[0];
      if ((~v30[0] & 0xF000000000000007) != 0)
      {
        v15 = (void *)v30[1];
      }
      else
      {
        swift_retain(v10);
        v15 = 0;
        v14 = v10;
      }
      KeyPath = swift_getKeyPath(&unk_1006724E0);
      ItemLayoutContext.subscript.getter(v7);
      swift_release(KeyPath);
      v17 = PageGrid.componentMeasuringSize(spanning:)(1.0);
      (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
      v18 = sub_1000826AC();
      if (v14 < 0)
      {
        swift_retain(v14 & 0x7FFFFFFFFFFFFFFFLL);
        v26 = v15;
        sub_10021DBD0(v17, v14 & 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v26);
        swift_unknownObjectRelease(v18);
        swift_release(v10);
        swift_release(v14 & 0x7FFFFFFFFFFFFFFFLL);

      }
      else
      {
        type metadata accessor for StandardLinkView();
        v19 = swift_retain(v14);
        v20 = EditorialLink.descriptionText.getter(v19);
        v22 = v21;
        v23 = EditorialLink.summaryText.getter();
        v25 = v24;
        swift_getObjectType();
        sub_1001BC3E4(v20, v22, v23, v25, (uint64_t)v18, v17, 16.0, 16.0);
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v22);
        sub_10007E8E4(v14, v15);
        swift_unknownObjectRelease(v18);
        swift_release(v10);
      }
      sub_10007E8E4(v14, v15);
    }
    else
    {
      v27 = sub_10000DF3C((uint64_t *)&unk_1007F8DF0);
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v27);
      __break(1u);
    }
  }
}

void sub_10007E8E4(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);

  }
  else
  {
    swift_release(a1);
  }
}

uint64_t sub_10007E914(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 26.0;
  return sub_10007E934(a2, a1, qword_1007F6D40);
}

uint64_t sub_10007E924(uint64_t a1, __n128 a2)
{
  a2.n128_u64[0] = 17.0;
  return sub_10007E934(a2, a1, qword_1007F6D58);
}

uint64_t sub_10007E934(__n128 a1, uint64_t a2, uint64_t *a3)
{
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v3 = a1.n128_f64[0];
  v5 = type metadata accessor for FontSource(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100045464(v9, a3);
  sub_1000117A8(v9, (uint64_t)a3);
  if (qword_1007F2688 != -1)
    swift_once(&qword_1007F2688, sub_100416D80);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_1000117A8(v10, (uint64_t)qword_100855880);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_1000117C0(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10007EA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10000DF3C(&qword_1007F5460);
  sub_100045464(v0, qword_1007F6D70);
  sub_1000117A8(v0, (uint64_t)qword_1007F6D70);
  v4 = 2;
  v5 = 0;
  v1 = sub_10000DF3C(&qword_1007F5D10);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

char *sub_10007EB10(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  objc_class *ObjectType;
  objc_super v38;
  _OWORD v39[2];
  _OWORD v40[2];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DirectionalTextAlignment(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView] = 0;
  v5[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_isExpanded] = 0;
  v5[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_sizeCategory] = 7;
  v21 = qword_1007F2688;
  v22 = v5;
  if (v21 != -1)
    swift_once(&qword_1007F2688, sub_100416D80);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_1000117A8(v23, (uint64_t)qword_100855880);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v20, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DirectionalTextAlignment.none(_:), v14);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v27 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v20, 1, 0, 1, 0, v17, 0, 0);
  v28 = OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_label;
  *(_QWORD *)&v22[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_label] = v27;
  memset(v40, 0, sizeof(v40));
  memset(v39, 0, sizeof(v39));
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0x6C6562616CLL, 0xE500000000000000, v40, v39);
  sub_1000131E0((uint64_t)v39);
  sub_1000131E0((uint64_t)v40);
  UIView.setAutomationSemantics(_:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = *(void **)&v22[v28];
  sub_1000117FC();
  v30 = v29;
  v31 = (void *)static UIColor.secondaryText.getter(v30);
  objc_msgSend(v30, "setTextColor:", v31);

  v32 = &v22[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessory];
  v33 = type metadata accessor for Accessory(0);
  swift_storeEnumTagMultiPayload(v32, v33, 10);

  v38.receiver = v22;
  v38.super_class = ObjectType;
  v34 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_label]);
  return v34;
}

double sub_10007EED8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  void *v16;
  double v17;
  double v18;
  CGFloat Width;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  CGRect v27;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v13 = v12;
  v14 = v9;
  v15 = v10;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView);
  if (v16)
  {
    objc_msgSend(v16, "sizeThatFits:", v9, v10);
    v18 = v17;
  }
  else
  {
    v18 = 0.0;
  }
  v27.origin.x = v11;
  v27.origin.y = v13;
  v27.size.width = v14;
  v27.size.height = v15;
  Width = CGRectGetWidth(v27);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_label);
  objc_msgSend(v20, "sizeThatFits:", Width + -16.0 - v18, 1.79769313e308);
  if (qword_1007F0FE8 != -1)
    swift_once(&qword_1007F0FE8, sub_10007E914);
  v21 = type metadata accessor for StaticDimension(0);
  v22 = sub_1000117A8(v21, (uint64_t)qword_1007F6D40);
  static Dimensions.defaultRoundingRule.getter(v22);
  AnyDimension.value(in:rounded:)(v2, v8, v21, &protocol witness table for StaticDimension);
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v8, v5);
  objc_msgSend(v20, "firstBaselineFromTop");
  if (qword_1007F0FF0 != -1)
    swift_once(&qword_1007F0FF0, sub_10007E924);
  v24 = sub_1000117A8(v21, (uint64_t)qword_1007F6D58);
  static Dimensions.defaultRoundingRule.getter(v24);
  AnyDimension.value(in:rounded:)(v2, v8, v21, &protocol witness table for StaticDimension);
  v23(v8, v5);
  objc_msgSend(v20, "lastBaselineFromBottom");
  return a1;
}

id sub_10007F164()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  uint64_t v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  void *v22;
  id v23;
  CGFloat v24;
  CGFloat Height;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  double v31;
  objc_super v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v1;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, "layoutSubviews", v5);
  v10 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  v12 = v11;
  v13 = v8;
  v14 = v9;
  v15 = OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView;
  v16 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView];
  if (v16)
  {
    objc_msgSend(v16, "sizeThatFits:", v8, v9);
    v18 = v17;
    v20 = v19;
  }
  else
  {
    v20 = 0.0;
    v18 = 0.0;
  }
  v33.origin.x = v10;
  v33.origin.y = v12;
  v33.size.width = v13;
  v33.size.height = v14;
  v21 = CGRectGetMaxX(v33) - v18;
  v34.origin.x = v10;
  v34.origin.y = v12;
  v34.size.width = v13;
  v34.size.height = v14;
  v35.origin.y = CGRectGetMidY(v34) + v20 * -0.5;
  v35.origin.x = v21;
  v31 = v18;
  v35.size.width = v18;
  v35.size.height = v20;
  CGRectIntegral(v35);
  v22 = *(void **)&v1[v15];
  if (v22)
  {
    v23 = v22;
    CGRect.withLayoutDirection(in:relativeTo:)(v1);
    objc_msgSend(v23, "setFrame:");

  }
  v36.origin.x = v10;
  v36.origin.y = v12;
  v36.size.width = v13;
  v36.size.height = v14;
  v24 = CGRectGetWidth(v36) + -16.0 - v31;
  v37.origin.x = v10;
  v37.origin.y = v12;
  v37.size.width = v13;
  v37.size.height = v14;
  Height = CGRectGetHeight(v37);
  v26 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_label];
  objc_msgSend(v26, "sizeThatFits:", v24, Height);
  if (qword_1007F0FE8 != -1)
    swift_once(&qword_1007F0FE8, sub_10007E914);
  v27 = type metadata accessor for StaticDimension(0);
  v28 = sub_1000117A8(v27, (uint64_t)qword_1007F6D40);
  static Dimensions.defaultRoundingRule.getter(v28);
  AnyDimension.value(in:rounded:)(v1, v7, v27, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  objc_msgSend(v26, "firstBaselineFromTop");
  v38.origin.x = v10;
  v38.origin.y = v12;
  v38.size.width = v13;
  v38.size.height = v14;
  CGRectGetMinX(v38);
  v39.origin.x = v10;
  v39.origin.y = v12;
  v39.size.width = v13;
  v39.size.height = v14;
  CGRectGetMinY(v39);
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  return objc_msgSend(v26, "setFrame:");
}

id sub_10007F498(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id result;
  uint64_t v6;
  _QWORD v7[2];
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    if (qword_1007F0FF8 != -1)
      swift_once(&qword_1007F0FF8, sub_10007EA88);
    v6 = sub_10000DF3C(&qword_1007F5460);
    sub_1000117A8(v6, (uint64_t)qword_1007F6D70);
    v7[0] = v1;
    Conditional.evaluate(with:)(v7, v6);
    return (id)UILabel.alignment.setter(v7[1]);
  }
  return result;
}

uint64_t sub_10007F64C()
{
  return type metadata accessor for TodayCardActionOverlayView(0);
}

uint64_t type metadata accessor for TodayCardActionOverlayView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F6DC8;
  if (!qword_1007F6DC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TodayCardActionOverlayView);
  return result;
}

uint64_t sub_10007F690(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Accessory(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = &unk_100672568;
    v4[4] = &unk_100672580;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10007F728(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_10007F798(*a1, a2, a3, a4, a5);
}

id sub_10007F730(char a1)
{
  _BYTE *v1;

  v1[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_isExpanded] = a1;
  return objc_msgSend(v1, "setNeedsLayout");
}

unint64_t sub_10007F750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F6DD8;
  if (!qword_1007F6DD8)
  {
    v1 = type metadata accessor for TodayCardActionOverlay(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TodayCardOverlay, v1);
    atomic_store(result, (unint64_t *)&qword_1007F6DD8);
  }
  return result;
}

void sub_10007F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char *v5;
  char *v6;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;

  v6 = v5;
  v5[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_sizeCategory] = a5;
  objc_msgSend(v5, "setNeedsLayout");
  sub_100438064(a2);
  v9 = OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView;
  v10 = *(void **)&v5[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView];
  *(_QWORD *)&v6[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_accessoryView] = v11;
  v12 = v11;
  objc_msgSend(v10, "removeFromSuperview");
  v13 = *(void **)&v6[v9];
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v6, "addSubview:", v14);
    objc_msgSend(v6, "setNeedsLayout");

    v10 = v12;
    v12 = v14;
  }

  v16 = (void *)TodayCard.Style.overlayBackgroundColor.getter(v15);
  objc_msgSend(v6, "setBackgroundColor:", v16);

  v17 = objc_msgSend(v6, "traitCollection");
  v18 = v17;
  v19 = 12.0;
  v20 = 12.0;
  if (a5 != 4)
  {
    v21 = PageGrid.horizontalDirectionalMargins.getter(v17);
    v20 = 20.0;
    v19 = v22 <= 20.0 ? v22 : 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v21);
    if (v23 <= 20.0)
      v20 = v23;
  }
  v24 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v18, "layoutDirection"), 0.0, v19, 0.0, v20);
  v26 = v25;
  v28 = v27;

  v29 = objc_msgSend(v6, "setLayoutMargins:", v24, v26, v28, 15.0);
  v30 = *(void **)&v6[OBJC_IVAR____TtC22SubscribePageExtension26TodayCardActionOverlayView_label];
  v31 = TodayCardActionOverlay.action.getter(v29);
  Action.title.getter(v32);
  v34 = v33;
  v35 = swift_release(v31).n128_u64[0];
  if (v34)
  {
    v36 = String._bridgeToObjectiveC()();
    v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  else
  {
    v36 = 0;
  }
  objc_msgSend(v30, "setText:", v36, *(double *)&v35);

}

uint64_t sub_10007F9D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Accessory(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10007FA10(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0x6157747265766461, 0xEF646563616C5073, (SEL *)&selRef_placed_, a3);
}

void sub_10007FA3C(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0xD000000000000012, 0x8000000100631C90, (SEL *)&selRef_onScreen_, a3);
}

void sub_10007FA60(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0xD000000000000011, 0x8000000100631C70, (SEL *)&selRef_offScreen_, a3);
}

void sub_10007FA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void *v18;
  NSString v19;
  uint64_t v20;
  Class isa;
  _QWORD v22[2];
  _QWORD v23[4];

  v6 = v5;
  v22[0] = a3;
  v22[1] = a4;
  v9 = type metadata accessor for OSLogger(0, a5);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3460 != -1)
    swift_once(&qword_1007F3460, sub_100602484);
  v13 = sub_1000117A8(v9, (uint64_t)qword_100857648);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10000DF3C(&qword_1007FD430);
  v15 = type metadata accessor for LogMessage(0);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_1006725D0;
  static LogMessage.identity(_:)(v6);
  LogMessage.init(stringLiteral:)(0xD000000000000010, 0x8000000100631C50);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v23[3] = &type metadata for String;
  v23[0] = a1;
  v23[1] = a2;
  swift_bridgeObjectRetain(a2);
  static LogMessage.safe(_:)(v23);
  sub_1000131E0((uint64_t)v23);
  Logger.info(_:)(v16, v9, &protocol witness table for OSLogger);
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v17);
  v18 = *(void **)(v6 + 16);
  v19 = String._bridgeToObjectiveC()();
  v20 = v22[0];
  isa = Date._bridgeToObjectiveC()().super.isa;
  Date.timeIntervalSince(_:)(v20);
  objc_msgSend(v18, "visible:start:duration:", v19, isa);

}

void sub_10007FCA8(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0xD000000000000010, 0x8000000100631C30, (SEL *)&selRef_completed_, a3);
}

void sub_10007FCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, __n128 a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  NSString v21;
  uint64_t v22;
  SEL *v23;
  _QWORD v24[4];

  v22 = a4;
  v23 = a5;
  v8 = v6;
  v11 = type metadata accessor for OSLogger(0, a6);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F3460 != -1)
    swift_once(&qword_1007F3460, sub_100602484);
  v15 = sub_1000117A8(v11, (uint64_t)qword_100857648);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10000DF3C(&qword_1007FD430);
  v17 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ 4 * *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_1006725D0;
  static LogMessage.identity(_:)(v8);
  LogMessage.init(stringLiteral:)(a3, v22);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v24[3] = &type metadata for String;
  v24[0] = a1;
  v24[1] = a2;
  swift_bridgeObjectRetain(a2);
  static LogMessage.safe(_:)(v24);
  sub_1000131E0((uint64_t)v24);
  Logger.info(_:)(v18, v11, &protocol witness table for OSLogger);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v19);
  v20 = *(void **)(v8 + 16);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, *v23, v21);

}

uint64_t sub_10007FEC4()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for SearchAdsAdvertLifecycleMetricsReporter()
{
  return objc_opt_self(_TtC22SubscribePageExtension39SearchAdsAdvertLifecycleMetricsReporter);
}

void sub_10007FF08(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0x6157747265766461, 0xEF646563616C5073, (SEL *)&selRef_placed_, a3);
}

void sub_10007FF50(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0xD000000000000012, 0x8000000100631C90, (SEL *)&selRef_onScreen_, a3);
}

void sub_10007FF90(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0xD000000000000011, 0x8000000100631C70, (SEL *)&selRef_offScreen_, a3);
}

void sub_10007FFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  sub_10007FA84(a1, a2, a3, a4, a5);
}

void sub_10007FFF0(uint64_t a1, uint64_t a2, __n128 a3)
{
  sub_10007FCCC(a1, a2, 0xD000000000000010, 0x8000000100631C30, (SEL *)&selRef_completed_, a3);
}

double sub_100080030(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13;
  __n128 v14;

  v13 = *a1;
  swift_getObjectType();
  v14.n128_f64[0] = a2;
  return sub_100045864(v14, a3, v13, a5, a7, a8);
}

id sub_100080094(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000800D4(*a1, a2, a3);
}

uint64_t sub_10008009C()
{
  return 0;
}

uint64_t sub_1000800A8()
{
  return sub_10000E99C(&qword_1007F5338, (uint64_t (*)(uint64_t))&type metadata accessor for TapToRate, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
}

id sub_1000800D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  char v11;
  id v12;
  char v13;
  char v14;
  _QWORD v16[5];

  v4 = v3;
  v7 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension34ProductTapToRateCollectionViewCell_separatorView];
  v8 = type metadata accessor for Feature.iOS(0);
  v16[3] = v8;
  v16[4] = sub_10000E99C((unint64_t *)&qword_1007F52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.iOS, (uint64_t)&protocol conformance descriptor for Feature.iOS);
  v9 = sub_1000117C0(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.iOS.review_summarization(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v16);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v16);
  if ((v8 & 1) != 0
    && (v10 = objc_msgSend(v4, "traitCollection"),
        v11 = UITraitCollection.isSizeClassRegular.getter(v10),
        v10,
        (v11 & 1) != 0))
  {
    v12 = objc_msgSend(v4, "traitCollection");
    v13 = UITraitCollection.prefersAccessibilityLayouts.getter(v12);

    v14 = v13 ^ 1;
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v7, "setHidden:", v14 & 1);
  sub_1002AE60C(a1, 0, a3);
  return objc_msgSend(v4, "setNeedsLayout");
}

uint64_t sub_100080234(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;

  if (*(_QWORD *)v1 == *a1
    && (static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 16) & 1) != 0
    && (v3 = type metadata accessor for MenuItemDebugSetting(), (v4 = swift_dynamicCastClass(a1, v3)) != 0))
  {
    v5 = v4;
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v5 + 64);
    v8 = *(_QWORD *)(v1 + 56);
    v9 = *(_QWORD *)(v1 + 64);
    v10 = v6 == v8 && v7 == v9;
    if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0), v12 = 0, (v11 & 1) != 0))
      v12 = *(_BYTE *)(v5 + 72) ^ *(_BYTE *)(v1 + 72) ^ 1;
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_1000802CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  AnyHashable.hash(into:)();
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 72));
}

uint64_t sub_10008032C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_release(*(_QWORD *)(v0 + 88));
}

uint64_t sub_100080348()
{
  uint64_t v0;

  sub_100019370(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for MenuItemDebugSetting()
{
  return objc_opt_self(_TtC22SubscribePageExtension20MenuItemDebugSetting);
}

double sub_10008039C()
{
  double result;

  if (qword_1007F30D8 != -1)
    swift_once(&qword_1007F30D8, sub_100562FC4);
  result = *(double *)&xmmword_100856F70;
  xmmword_1007F7070 = (unint64_t)xmmword_100856F70;
  unk_1007F7080 = 0;
  qword_1007F7088 = qword_100856F88;
  qword_1007F7090 = 0;
  byte_1007F7098 = 1;
  return result;
}

void sub_100080404()
{
  qword_1007F70A0 = 0x403E000000000000;
}

void sub_100080414()
{
  qword_1007F70A8 = 0x4044000000000000;
}

double sub_100080424()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = sub_10000DF3C(&qword_1007FB3B0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v1 + 16) = xmmword_10066F870;
  *(_OWORD *)(v1 + 32) = xmmword_100672720;
  qword_1007F70B0 = v1;
  return result;
}

char *sub_100080468(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  __n128 v28;
  id v29;
  id v30;
  char *v31;
  id *v32;
  id v33;
  char *v34;
  id v35;
  char *v36;
  id *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  id v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  objc_super v58;
  _QWORD v59[12];
  __int128 v60;
  _OWORD v61[3];

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for AutomationSemantics(0);
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RiverViewStyling(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView;
  v18 = objc_allocWithZone((Class)UIView);
  v19 = v4;
  *(_QWORD *)&v4[v17] = objc_msgSend(v18, "init");
  v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_isDisappearing] = 0;
  swift_unknownObjectWeakInit(&v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_otherCardToExchangeRiverWith], 0);
  if (qword_1007F13D8 != -1)
    swift_once(&qword_1007F13D8, sub_100158B44);
  v20 = xmmword_100851FA0;
  v21 = type metadata accessor for RiverCardDataSource();
  v22 = swift_allocObject(v21, 56, 7);
  *(_QWORD *)(v22 + 32) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v22 + 16) = xmmword_100672730;
  *(_OWORD *)(v22 + 40) = v20;
  v23 = OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverDataSource;
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverDataSource] = v22;
  v24 = static RiverViewStyling.todayTabSpeed.getter();
  if (qword_1007F1018 != -1)
    swift_once(&qword_1007F1018, sub_100080424);
  swift_bridgeObjectRetain(qword_1007F70B0);
  RiverViewStyling.init(itemSize:interRowSpacing:interItemSpacing:speed:rowOffsets:reverseAlternatingRows:)(*(double *)&v20, *((double *)&v20 + 1), 16.0, 16.0, v24);
  v25 = &v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverStyling];
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverStyling], v16, v13);
  v26 = *(_QWORD *)&v19[v23];
  v27 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v27(v16, v25, v13);
  objc_allocWithZone((Class)sub_10000DF3C(&qword_1007F7128));
  v28 = swift_retain(v26);
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView] = RiverView.init(dataSource:styling:)(v28);
  v27(v16, v25, v13);
  v29 = objc_allocWithZone((Class)type metadata accessor for RiverTodayCardBackgroundView(0));
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView] = sub_1001367C8((uint64_t)v16);
  v59[0] = sub_100051330;
  v59[1] = 0;
  v59[2] = sub_10055B8F0;
  v59[3] = 0;
  v59[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v59[5] = 0;
  v59[6] = sub_100158F34;
  v59[7] = 0;
  v59[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v59[9] = 0;
  v59[10] = sub_10055B91C;
  v59[11] = 0;
  if (qword_1007F1000 != -1)
    swift_once(&qword_1007F1000, sub_10008039C);
  v60 = xmmword_1007F7070;
  v61[0] = unk_1007F7080;
  *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)&qword_1007F7088 + 1);
  v30 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
  *(_QWORD *)&v19[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView] = sub_10056339C((uint64_t)v59, &v60);

  v58.receiver = v19;
  v58.super_class = ObjectType;
  v31 = (char *)objc_msgSendSuper2(&v58, "initWithFrame:", a1, a2, a3, a4);
  v32 = (id *)&v31[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView];
  swift_beginAccess(&v31[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView], &v57, 0, 0);
  v33 = *v32;
  v34 = v31;
  objc_msgSend(v33, "_setContinuousCornerRadius:", 14.0);
  v35 = *v32;
  objc_msgSend(v35, "bounds");
  objc_msgSend(v35, "setBounds:");

  objc_msgSend(*v32, "setClipsToBounds:", 1);
  v36 = &v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView];
  objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView], "setClipsToBounds:", 0, swift_beginAccess(&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView], &v56, 0, 0).n128_f64[0]);
  v37 = (id *)&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView];
  objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView], "setClipsToBounds:", 1, swift_beginAccess(&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView], &v55, 0, 0).n128_f64[0]);
  v38 = objc_msgSend(v34, "contentView");
  objc_msgSend(v38, "addSubview:", *v32);

  objc_msgSend(*v37, "addSubview:", *(_QWORD *)v36);
  v39 = objc_msgSend(v34, "contentView");
  objc_msgSend(v39, "addSubview:", *v37);

  v40 = objc_msgSend(v34, "contentView");
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], swift_beginAccess(&v34[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], &v54, 0, 0).n128_f64[0]);

  v41 = *(void **)v36;
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  v42 = v41;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD000000000000016, 0x8000000100631DA0, &v52, &v50);
  sub_100011088((uint64_t)&v50, &qword_1007F6E90);
  sub_100011088((uint64_t)&v52, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v12);

  v43 = v49;
  v44 = *(void (**)(char *, uint64_t))(v48 + 8);
  v44(v12, v49);
  v45 = *v32;
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  v46 = v45;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD00000000000001BLL, 0x8000000100631DC0, &v52, &v50);
  sub_100011088((uint64_t)&v50, &qword_1007F6E90);
  sub_100011088((uint64_t)&v52, &qword_1007F6E90);
  UIView.setAutomationSemantics(_:)(v12);

  v44(v12, v43);
  return v34;
}

void sub_100080A98()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void **v7;
  void *v8;
  int v9;
  int v10;
  id v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView);
  swift_beginAccess(v2, v13, 0, 0);
  v3 = *v2;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled;
  v5 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled);
  v6 = v3;
  dispatch thunk of RiverView.isAnimating.setter(v5);

  v7 = (void **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView, &v12, 0, 0);
  v8 = *v7;
  v9 = *(unsigned __int8 *)(v1 + v4);
  v10 = *((unsigned __int8 *)*v7 + OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_isAnimating);
  *((_BYTE *)*v7 + OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_isAnimating) = v9;
  if (v9 != v10)
  {
    v11 = v8;
    sub_100137710();

  }
}

uint64_t sub_100080B64()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled);
}

void sub_100080B78(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isMotionEnabled) = a1;
  sub_100080A98();
}

void sub_100080B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  id *v6;
  id v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isTransitioning) = a1;
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView);
  swift_beginAccess(v5, v9, 0, 0);
  *(_BYTE *)(*v5 + qword_100818390) = a1;
  sub_10056418C();
  v6 = (id *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView);
  swift_beginAccess(v2 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView, &v8, 0, 0);
  v7 = *v6;
  dispatch thunk of RiverView.isTransitioning.setter(a1);

  if ((*(_BYTE *)(v2 + v4) & 1) == 0)
    *(_BYTE *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_isDisappearing) = 0;
}

void sub_100080C50()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  void **v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  _OWORD v28[3];
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[*v2] != 4)
  {
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = v3;
    if (v0[v1])
      v5 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    else
      v5 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    sub_10048C8E4(v3, v0[*v5], (uint64_t)v28);
    v25 = v28[1];
    v26 = v28[0];
    v24 = v28[2];
    v6 = v29;

    v7 = (void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView];
    swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], v27, 0, 0);
    v8 = v0[v1];
    v9 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
    if (!v8)
      v9 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
    v10 = v0[v9];
    v11 = v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory];
    v12 = *v7;
    v13 = v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_isDisappearing];
    v30 = v26;
    v31 = v25;
    v32 = v24;
    v33 = v6;
    v35 = 0;
    v36 = 0;
    v34 = v12;
    v37 = 1;
    v38 = v10;
    v39 = v11;
    v40 = v8;
    v41 = v13;
    v14 = v12;
    objc_msgSend(v0, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v23 = objc_msgSend(v0, "traitCollection");
    sub_1004FBAA8((uint64_t)v23, v16, v18, v20, v22);

  }
}

id sub_100080E0C()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t *v3;
  double v4;
  id *v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  char v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  id *v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v22;
  id v24;
  id *v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id *v35;
  double MinY;
  id v37;
  char v38;
  double v39;
  double v40;
  id v41;
  char v42;
  double v43;
  double v44;
  id v45;
  char v46;
  id v47;
  char v48;
  uint64_t v50;
  char v51[24];
  char v52[24];
  char v53[24];
  char v54[32];
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  if ((UITraitCollection.isSizeClassRegular.getter(v2) & 1) != 0)
  {
    if (qword_1007F1010 != -1)
      swift_once(&qword_1007F1010, sub_100080414);
    v3 = &qword_1007F70A8;
  }
  else
  {
    if (qword_1007F1008 != -1)
      swift_once(&qword_1007F1008, sub_100080404);
    v3 = &qword_1007F70A0;
  }
  v4 = *(double *)v3;

  v5 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], "frame", swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], v54, 0, 0).n128_f64[0]);
  v7 = v6 - v4 + -24.0;
  v8 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if ((v1[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded] & 1) == 0)
  {
    v9 = objc_msgSend(v1, "traitCollection");
    v10 = UITraitCollection.prefersAccessibilityLayouts.getter(v9);

    v11 = (v10 & 1) != 0 ? 0.5 : 0.52;
    objc_msgSend(v1, "bounds");
    v12 = v11 * CGRectGetHeight(v55);
    v13 = RiverViewStyling.interRowSpacing.getter();
    v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverDataSource];
    v15 = round((v12 - v13) * 0.5);
    v16 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView];
    swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView], v53, 0, 0);
    v17 = *v16;
    v18 = dispatch thunk of RiverView.itemSize.getter();
    v20 = v19;

    if (v18 != v15 || v20 != v15)
    {
      v22 = v13 + v15 + v15;
      swift_beginAccess(v14 + 40, v52, 0, 0);
      if (v15 < *(double *)(v14 + 48) && v22 <= v7)
      {
        v24 = *v16;
        dispatch thunk of RiverView.setItemSize(size:)(v15, v15);

      }
    }
  }
  v25 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView], v51, 0, 0);
  v26 = *v25;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v26, "sizeThatFits:", v27, v28);
  v30 = v29;
  v32 = v31;

  objc_msgSend(*v5, "frame");
  v34 = v33;
  v35 = (id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView], &v50, 0, 0);
  objc_msgSend(*v35, "setFrame:", 0.0, 0.0, v30, v34);
  if ((v1[v8] & 1) != 0)
  {
    objc_msgSend(*v5, "frame");
    MinY = CGRectGetMinY(v56);
    v37 = objc_msgSend(v1, "traitCollection");
    v38 = UITraitCollection.isSizeClassCompact.getter(v37);

    if ((v38 & 1) != 0)
      v39 = 50.0;
    else
      v39 = 64.0;
    v40 = floor((MinY - v39 - v32) * 0.5);
    v41 = objc_msgSend(v1, "traitCollection");
    v42 = UITraitCollection.isSizeClassCompact.getter(v41);

    if ((v42 & 1) != 0)
      v43 = 50.0;
    else
      v43 = 64.0;
    v44 = v40 + v43;
  }
  else
  {
    v45 = objc_msgSend(v1, "traitCollection");
    v46 = UITraitCollection.isSizeClassCompact.getter(v45);

    if ((v46 & 1) != 0
      || (v47 = objc_msgSend(v1, "traitCollection"),
          v48 = UITraitCollection.prefersAccessibilityLayouts.getter(v47),
          v47,
          (v48 & 1) != 0))
    {
      objc_msgSend(*v5, "frame");
      v44 = floor((CGRectGetMinY(v57) - v32) * 0.5);
    }
    else if (v7 < v32)
    {
      v44 = v4 - (v32 - v7);
    }
    else
    {
      v44 = v4;
    }
  }
  return objc_msgSend(*v25, "setFrame:", 0.0, v44, v30, v32);
}

void sub_1000812E4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id *v3;
  void **v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  char v8[24];

  sub_1004FB2EC();
  v1 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded) == 1)
    v2 = 0.0;
  else
    v2 = 14.0;
  v3 = (id *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView, v8, 0, 0);
  objc_msgSend(*v3, "_setContinuousCornerRadius:", v2);
  v4 = (void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView, &v7, 0, 0);
  v5 = *v4;
  v5[qword_100818388] = *(_BYTE *)(v0 + v1);
  v6 = v5;
  sub_100563D88();

}

void sub_1000813B8()
{
  char *v0;
  void **v1;
  uint64_t *v2;
  _BYTE *v3;
  _BYTE *v4;
  char v5[24];

  objc_msgSend(v0, "setNeedsLayout");
  v1 = (void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], v5, 0, 0);
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_isExpanded])
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell__sizeCategory;
  else
    v2 = &OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  v3 = *v1;
  v3[qword_100818348] = v0[*v2];
  v4 = v3;
  sub_100563CE8();

}

void sub_10008145C()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  int v5;
  char v6[24];

  v1 = OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory;
  if (v0[OBJC_IVAR____TtC22SubscribePageExtension31BaseTodayCardCollectionViewCell_originalSizeCategory] == 4)
  {
    v2 = objc_msgSend(v0, "contentView");
    objc_msgSend(v2, "setClipsToBounds:", 1);

  }
  objc_msgSend(v0, "setNeedsLayout");
  v3 = &v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], v6, 0, 0);
  v4 = *(_QWORD *)v3;
  v5 = v0[v1];
  *(_BYTE *)(*(_QWORD *)v3 + qword_100818350) = v5;
  if (v5 != 7)
  {
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100818358)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100818360)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
    *(_BYTE *)(*(_QWORD *)(v4 + qword_100818370)
             + OBJC_IVAR____TtC22SubscribePageExtension27TodayTransitioningLabelView_originalSizeCategory) = v5;
  }
}

void sub_100081560(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  char *v10;
  void **v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1004F7F14((uint64_t)a1, a2, a3 & 1);
  v9 = swift_dynamicCastClass(a1, ObjectType);
  if (v9)
  {
    v10 = (char *)v9;
    if ((a3 & 1) != 0)
    {
      v15 = a1;
      sub_100081664(v10);

    }
    else
    {
      v11 = (void **)(v4 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView);
      swift_beginAccess(v4 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView, v16, 0, 0);
      v12 = *v11;
      v13 = a1;
      v14 = v12;
      dispatch thunk of RiverView.isAnimating.setter(0);

      swift_unknownObjectWeakAssign(v4 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_otherCardToExchangeRiverWith, v10);
    }
  }
}

id sub_100081664(char *a1)
{
  char *v1;
  uint64_t KeyPath;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void **v12;
  void *v13;
  uint64_t v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  _BYTE v25[24];

  KeyPath = swift_getKeyPath(&unk_1006727C8);
  v4 = objc_msgSend(v1, "contentView");
  v5 = swift_getKeyPath(&unk_1006727C8);
  v6 = objc_msgSend(a1, "contentView");
  sub_100082514(v1, KeyPath, v4, a1, v5, v6);
  swift_release(KeyPath);

  swift_release(v5);
  v7 = swift_getKeyPath(&unk_1006727E8);
  v8 = objc_msgSend(v1, "contentView");
  v9 = swift_getKeyPath(&unk_1006727E8);
  v10 = objc_msgSend(a1, "contentView");
  sub_100082514(v1, v7, v8, a1, v9, v10);
  swift_release(v7);

  swift_release(v9);
  v11 = swift_getKeyPath(&unk_100672808);
  v12 = (void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView], v25, 0, 0);
  v13 = *v12;
  v14 = swift_getKeyPath(&unk_100672808);
  v15 = (void **)&a1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView];
  swift_beginAccess(&a1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverContainerView], &v24, 0, 0);
  v16 = *v15;
  v17 = v13;
  v18 = v16;
  sub_100082514(v1, v11, v17, a1, v14, v18);
  swift_release(v11);

  swift_release(v14);
  v19 = swift_getKeyPath(&unk_100672828);
  v20 = objc_msgSend(v1, "contentView");
  v21 = swift_getKeyPath(&unk_100672828);
  v22 = objc_msgSend(a1, "contentView");
  sub_100082514(v1, v19, v20, a1, v21, v22);
  swift_release(v19);

  swift_release(v21);
  objc_msgSend(a1, "setNeedsLayout");
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_1000818F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  __n128 v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  uint64_t (*v38)();
  UIContentSizeCategory (*v39)();
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  id *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id *v59;
  char *v60;
  void *v61;
  unint64_t *v62;
  unint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[24];
  char v79[32];
  char v80[24];
  char v81[24];
  char v82[24];
  _QWORD v83[12];

  v5 = v4;
  v10 = type metadata accessor for EditorialDisplayOptions(0);
  v77 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for TodayCard.Style(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C(&qword_1007F51D8);
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FB730(a1, a2, a3);
  v19 = TodayCard.media.getter(v18);
  v20 = type metadata accessor for TodayCardMediaRiver(0);
  v21 = swift_dynamicCastClass(v19, v20);
  if (v21)
  {
    v65 = v21;
    v69 = v10;
    v70 = a4;
    v71 = v19;
    v72 = v5;
    v22 = (id *)&v5[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView];
    swift_beginAccess(&v5[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_labelsView], v82, 0, 0);
    v67 = *v22;
    v74 = TodayCard.heading.getter(v23);
    v68 = v24;
    v73 = TodayCard.title.getter(v74);
    v66 = v25;
    v26 = TodayCard.shortTitle.getter();
    v28 = v27;
    TodayCard.titleCharacteristics.getter();
    v29 = type metadata accessor for StringCharacteristics(0);
    v30.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v17, 0, 1, v29);
    v31 = TodayCard.inlineDescription.getter(v30);
    v33 = v32;
    TodayCard.style.getter(v34);
    TodayCard.editorialDisplayOptions.getter(v35);
    if (a2 == 4)
    {
      v37 = sub_1000D6130;
      v38 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v39 = sub_10055BAC0;
      v36 = v77;
    }
    else
    {
      v36 = v77;
      v37 = sub_10055B91C;
      v38 = sub_100158F34;
      v39 = sub_10055B8F0;
    }
    v40 = v26;
    v83[0] = sub_100051330;
    v83[1] = 0;
    v83[2] = v39;
    v83[3] = 0;
    v83[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v83[5] = 0;
    v83[6] = v38;
    v83[7] = 0;
    v83[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v83[9] = 0;
    v83[10] = v37;
    v83[11] = 0;
    v64 = a2;
    v41 = v68;
    v42 = v66;
    v43 = v67;
    sub_100561F94(v74, v68, v73, v66, v40, v28, (uint64_t)v17, v31, v33, (uint64_t)v14, v64, (uint64_t)v12, 0, 0, 0, (uint64_t)v83, 1);

    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v42);
    v44 = swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v12, v69, v44);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v14, v76);
    sub_100011088((uint64_t)v17, &qword_1007F51D8);
    v46 = TodayCardMediaRiver.lockups.getter(v45);
    v47 = v72;
    v48 = (id *)&v72[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView];
    swift_beginAccess(&v72[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView], v81, 0, 0);
    v49 = *v48;
    v50 = dispatch thunk of RiverView.dataSource.getter();

    swift_beginAccess(v50 + 32, v80, 1, 0);
    v51 = *(_QWORD *)(v50 + 32);
    *(_QWORD *)(v50 + 32) = v46;
    swift_bridgeObjectRetain(v46);
    swift_release(v50);
    swift_bridgeObjectRelease(v51);
    v52 = *v48;
    v53 = dispatch thunk of RiverView.dataSource.getter();

    v54 = type metadata accessor for ArtworkLoader(0);
    v55 = *(_QWORD *)(v70 + qword_100854050);
    if (v55)
    {
      v56 = *(_QWORD *)(v53 + 16);
      *(_QWORD *)(v53 + 16) = v55;
      swift_retain(v55);
      swift_release(v53);
      swift_release(v56);
      v57 = (uint64_t)sub_100037078(v46, (uint64_t (*)(void))&dispatch thunk of Lockup.artwork.getter);
      swift_bridgeObjectRelease(v46);
      if (v57 < 0 || (v57 & 0x4000000000000000) != 0)
      {
        v58 = (uint64_t)sub_10052E9D0(v57);
        swift_bridgeObjectRelease(v57);
      }
      else
      {
        v58 = v57 & 0xFFFFFFFFFFFFFF8;
      }
      v59 = (id *)&v47[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView];
      swift_beginAccess(&v47[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView], v79, 0, 0);
      v60 = (char *)*v59;
      v61 = sub_100037078(v58, (uint64_t (*)(void))&Artwork.backgroundColor.getter);
      swift_release(v58);
      v62 = (unint64_t *)&v60[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors];
      swift_beginAccess(&v60[OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors], v78, 1, 0);
      v63 = *v62;
      *v62 = (unint64_t)v61;
      sub_100136EF0(v63);

      objc_msgSend(v47, "setNeedsLayout", swift_bridgeObjectRelease(v63).n128_f64[0]);
      swift_release(v71);
    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v54);
      __break(1u);
    }
  }
  else
  {
    swift_release(v19);
  }
}

void sub_100081E68()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;

  v0 = type metadata accessor for TodayCard(0);
  v1 = sub_100054DC4();
  v2 = ItemLayoutContext.typedModel<A>(as:)(&v26, v0, v0, v1);
  v3 = v26;
  if (v26)
  {
    v4 = TodayCard.media.getter(v2);
    swift_release(v3);
    v5 = type metadata accessor for TodayCardMediaRiver(0);
    if (!swift_dynamicCastClass(v4, v5)
      || (v7 = TodayCardMediaRiver.lockups.getter(v6),
          v8 = type metadata accessor for Lockup(0),
          v9 = Array.isNotEmpty.getter(v7, v8),
          v10 = swift_bridgeObjectRelease(v7),
          (v9 & 1) == 0))
    {
      swift_release(v4);
      return;
    }
    v11 = TodayCardMediaRiver.lockups.getter(v10);
    v12 = v11;
    v26 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v25 = v11;
      else
        v25 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v13 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (v13)
        goto LABEL_6;
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v13)
      {
LABEL_6:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v13; ++i)
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
          }
          else
          {
            v15 = *(_QWORD *)(v12 + 8 * i + 32);
            v16 = swift_retain(v15);
          }
          v17 = Lockup.icon.getter(v16);
          if (v17)
          {
            v18 = v17;
            if (qword_1007F13D8 != -1)
              swift_once(&qword_1007F13D8, sub_100158B44);
            v19 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, *(double *)&xmmword_100851FA0, *((double *)&xmmword_100851FA0 + 1));
            swift_release(v15);
            swift_release(v18);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v22 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v21 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v22 >= v21 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
            v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
            specialized Array._endMutation()(v23);
          }
          else
          {
            swift_release(v15);
          }
        }
        swift_bridgeObjectRelease(v12);
        v24 = (_QWORD *)v26;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease(v12);
    v24 = _swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease(v12);
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v24);
    swift_release(v4);
    swift_bridgeObjectRelease(v24);
  }
}

double sub_1000820E8()
{
  char *v0;
  char *v1;
  id *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void **v7;
  void *v8;
  unint64_t *v9;
  unint64_t v10;
  id v11;
  double result;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];
  objc_super v17;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, "prepareForReuse");
  v2 = (id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverView], v16, 0, 0);
  v3 = *v2;
  v4 = dispatch thunk of RiverView.dataSource.getter();

  swift_beginAccess(v4 + 32, v15, 1, 0);
  v5 = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v4 + 32) = _swiftEmptyArrayStorage;
  swift_release(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *v2;
  dispatch thunk of RiverView.flushRows()();

  v7 = (void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_gradientView];
  swift_beginAccess(v7, v14, 0, 0);
  v8 = *v7;
  v9 = (unint64_t *)((char *)*v7 + OBJC_IVAR____TtC22SubscribePageExtension28RiverTodayCardBackgroundView_colors);
  swift_beginAccess(v9, &v13, 1, 0);
  v10 = *v9;
  *v9 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = v8;
  sub_100136EF0(v10);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_1000822F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverDataSource));
  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_riverStyling;
  v2 = type metadata accessor for RiverViewStyling(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC22SubscribePageExtension32RiverTodayCardCollectionViewCell_otherCardToExchangeRiverWith);
}

uint64_t sub_10008242C()
{
  return type metadata accessor for RiverTodayCardCollectionViewCell(0);
}

uint64_t type metadata accessor for RiverTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F7118;
  if (!qword_1007F7118)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RiverTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_100082470(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for RiverViewStyling(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_100672798;
    v4[7] = &unk_1006727B0;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 608);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100082514(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v10;
  void (*v11)(_QWORD *, _QWORD);
  id *v12;
  id v13;
  id v14;
  void (*v15)(_QWORD *, _QWORD);
  id *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD v23[4];
  id v24;

  v24 = a4;
  v10 = a4;
  v11 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v23, &v24, a5);
  v13 = *v12;
  v11(v23, 0);

  objc_msgSend(v13, "setHidden:", 0);
  objc_msgSend(v13, "removeFromSuperview");
  v24 = a1;
  v14 = a1;
  v15 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath(v23, &v24, a2);
  v17 = *v16;
  v15(v23, 0);

  objc_msgSend(v17, "setHidden:", 1);
  objc_msgSend(v17, "removeFromSuperview");
  v23[0] = v14;
  v24 = v13;
  v18 = v13;
  v19 = v14;
  swift_setAtReferenceWritableKeyPath(v23, a2, &v24);

  objc_msgSend(a3, "addSubview:", v18);
  v23[0] = v10;
  v24 = v17;
  v20 = v10;
  v21 = v17;
  swift_setAtReferenceWritableKeyPath(v23, a5, &v24);

  objc_msgSend(a6, "addSubview:", v21);
}

id sub_1000826AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  double v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  double *v18;
  objc_super v20;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfLayoutContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ItemLayoutContext.parentShelfLayoutContext.getter(v6);
  ShelfLayoutContext.contentPageGrid.getter(v9);
  v10 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v11 = v10(v8, v4);
  v12 = PageGrid.containerWidth.getter(v11);
  v13.n128_f64[0] = (*(double (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14 = ItemLayoutContext.parentShelfLayoutContext.getter(v13);
  v15 = ShelfLayoutContext.traitCollection.getter(v14);
  v10(v8, v4);
  v16 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v17 = (char *)objc_allocWithZone(v16);
  v18 = (double *)&v17[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_pageContainerSize];
  *v18 = v12;
  v18[1] = 1.79769313e308;
  *(_QWORD *)&v17[OBJC_IVAR____TtC22SubscribePageExtension28SnapshotPageTraitEnvironment_traitCollection] = v15;
  v20.receiver = v17;
  v20.super_class = v16;
  return objc_msgSendSuper2(&v20, "init");
}

id sub_100082814(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  objc_class *v12;
  id v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_presenter] = a1;
  v7 = objc_allocWithZone((Class)UIPickerView);
  v8 = v1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_countryPicker] = objc_msgSend(v7, "init", swift_retain(a1).n128_f64[0]);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIPickerView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker] = v9;
  type metadata accessor for DynamicTypeButton(0);
  if (qword_1007F26D8 != -1)
    swift_once(&qword_1007F26D8, sub_100416EF0);
  v10 = sub_1000117A8(v3, (uint64_t)qword_100855970);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11(v6, v10, v3);
  *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_submitButton] = DynamicTypeButton.__allocating_init(useCase:)(v6);
  v11(v6, v10, v3);
  *(_QWORD *)&v8[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_backToUSButton] = DynamicTypeButton.__allocating_init(useCase:)(v6);

  v12 = (objc_class *)type metadata accessor for DebugStorefrontPickerViewController();
  v17.receiver = v8;
  v17.super_class = v12;
  v13 = objc_msgSendSuper2(&v17, "initWithNibName:bundle:", 0, 0);
  v14 = sub_1000838E4(&qword_1007F7250, "-)\v");
  v15 = v13;
  dispatch thunk of StorefrontPickerPagePresenter.view.setter(v13, v14);

  swift_release(a1);
  return v15;
}

id sub_100082A44()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  objc_super v30;

  v1 = v0;
  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for DebugStorefrontPickerViewController();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = result;
  objc_msgSend(v1, "pageMarginInsets");
  objc_msgSend(v3, "setLayoutMargins:");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v6);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = result;
  v8 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_countryPicker];
  objc_msgSend(result, "addSubview:", v8);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = result;
  v10 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker];
  objc_msgSend(result, "addSubview:", v10);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = result;
  v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_submitButton];
  objc_msgSend(result, "addSubview:", v12);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = result;
  v14 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_backToUSButton];
  objc_msgSend(result, "addSubview:", v14);

  objc_msgSend(v8, "setDelegate:", v1);
  objc_msgSend(v8, "setDataSource:", v1);
  objc_msgSend(v10, "setDelegate:", v1);
  v15 = objc_msgSend(v8, "selectRow:inComponent:animated:", dispatch thunk of StorefrontPickerPagePresenter.selectedCountryIndex.getter(objc_msgSend(v10, "setDataSource:", v1)), 0, 0);
  objc_msgSend(v10, "selectRow:inComponent:animated:", dispatch thunk of StorefrontPickerPagePresenter.selectedLanguageIndex.getter(v15), 0, 0);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setTitle:forState:", v16, 0);

  v17 = objc_msgSend(v12, "titleLabel");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setTextAlignment:", 1);

  }
  result = objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_20;
  v19 = result;
  v20 = objc_msgSend(result, "tintColor");

  objc_msgSend(v12, "setBackgroundColor:", v20);
  v21 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v12, "setTitleColor:forState:", v21, 0);

  v22 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v12, "setTitleColor:forState:", v22, 2);

  objc_msgSend(v12, "setTitleEdgeInsets:", 5.0, 10.0, 5.0, 10.0);
  objc_msgSend(v12, "addTarget:action:forControlEvents:", v1, "setStorefront", 64);
  objc_msgSend(v12, "_setCornerRadius:", 10.0);
  sub_100083408();
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setTitle:forState:", v23, 0);

  v24 = objc_msgSend(v14, "titleLabel");
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "setTextAlignment:", 1);

  }
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend(result, "tintColor");

    objc_msgSend(v14, "setBackgroundColor:", v27);
    v28 = objc_msgSend(v5, "whiteColor");
    objc_msgSend(v14, "setTitleColor:forState:", v28, 0);

    v29 = objc_msgSend(v5, "whiteColor");
    objc_msgSend(v14, "setTitleColor:forState:", v29, 2);

    objc_msgSend(v14, "setTitleEdgeInsets:", 5.0, 10.0, 5.0, 10.0);
    objc_msgSend(v14, "addTarget:action:forControlEvents:", v1, "setStorefrontToUS", 64);
    return objc_msgSend(v14, "_setCornerRadius:", 10.0);
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_100083000()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double MinX;
  CGFloat v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double MaxY;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  double Width;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  double v39;
  double v40;
  objc_super v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for DebugStorefrontPickerViewController();
  objc_msgSendSuper2(&v41, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_countryPicker];
    v5 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v4, "sizeThatFits:", v6, v7);
    v9 = v8;
    v42.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    MinX = CGRectGetMinX(v42);
    v43.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v11 = CGRectGetMinY(v43) + 20.0;
    v44.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v4, "setFrame:", MinX, v11, CGRectGetWidth(v44), v9);
    v12 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker];
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v12, "sizeThatFits:", v13, v14);
    v16 = v15;
    v45.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v17 = CGRectGetMinX(v45);
    objc_msgSend(v4, "frame");
    MaxY = CGRectGetMaxY(v46);
    v47.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v12, "setFrame:", v17, MaxY, CGRectGetWidth(v47), v16);
    v19 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_submitButton];
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v19, "measurementsWithFitting:in:", v3, v20, v21);
    v23 = v22;

    v48.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v24 = CGRectGetMinX(v48);
    objc_msgSend(v12, "frame");
    v25 = CGRectGetMaxY(v49) + 20.0;
    v50.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    Width = CGRectGetWidth(v50);
    objc_msgSend(v19, "titleEdgeInsets");
    v28 = v23 + v27;
    objc_msgSend(v19, "titleEdgeInsets");
    objc_msgSend(v19, "setFrame:", v24, v25, Width, v28 + v29);
    v30 = *(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_backToUSButton];
    LayoutMarginsAware<>.layoutFrame.getter(v5);
    objc_msgSend(v30, "measurementsWithFitting:in:", v3, v31, v32);
    v34 = v33;

    v51.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v35 = CGRectGetMinX(v51);
    objc_msgSend(v19, "frame");
    v36 = CGRectGetMaxY(v52) + 10.0;
    v53.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v5);
    v37 = CGRectGetWidth(v53);
    objc_msgSend(v30, "titleEdgeInsets");
    v39 = v34 + v38;
    objc_msgSend(v30, "titleEdgeInsets");
    objc_msgSend(v30, "setFrame:", v35, v36, v37, v39 + v40);

  }
}

void sub_100083408()
{
  void *v0;
  void *v1;
  char updated;
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void **v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id (*v17)();
  uint64_t v18;

  v1 = v0;
  updated = dispatch thunk of StorefrontPickerPagePresenter.canUpdateStorefront.getter();
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_100725160, 25, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v5 = updated & 1;
  *(_BYTE *)(v4 + 24) = updated & 1;
  v17 = sub_100083944;
  v18 = v4;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_1000BD6CC;
  v16 = &unk_100725178;
  v6 = _Block_copy(&v13);
  v7 = v18;
  v8 = v1;
  swift_release(v7);
  v9 = swift_allocObject(&unk_1007251B0, 25, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_BYTE *)(v9 + 24) = v5;
  v17 = sub_100083990;
  v18 = v9;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_100129140;
  v16 = &unk_1007251C8;
  v10 = _Block_copy(&v13);
  v11 = v18;
  v12 = v8;
  swift_release(v11);
  objc_msgSend(v3, "animateWithDuration:animations:completion:", v6, v10, 0.2);
  _Block_release(v10);
  _Block_release(v6);
}

id sub_100083788()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugStorefrontPickerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugStorefrontPickerViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension35DebugStorefrontPickerViewController);
}

uint64_t sub_100083840()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker);
  objc_msgSend(v1, "reloadAllComponents");
  return dispatch thunk of StorefrontPickerPagePresenter.didSelectLanguage(at:)(objc_msgSend(v1, "selectedRowInComponent:", 0));
}

uint64_t sub_10008389C()
{
  return sub_1000838E4(&qword_1007F7240, "])\v");
}

uint64_t sub_1000838C0()
{
  return sub_1000838E4(&qword_1007F7248, "E)\v");
}

uint64_t sub_1000838E4(unint64_t *a1, const char *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugStorefrontPickerViewController();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100083920()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_100083944()
{
  uint64_t v0;
  double v1;

  v1 = 0.4;
  if (*(_BYTE *)(v0 + 24))
    v1 = 1.0;
  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_submitButton), "setAlpha:", v1);
}

uint64_t sub_100083978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100083988(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100083990()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_submitButton), "setEnabled:", *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1000839B0(uint64_t a1)
{
  uint64_t v1;

  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_countryPicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.numberOfCountries.getter();
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.numberOfLanguages.getter();
  return 0;
}

uint64_t sub_100083A50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_countryPicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.country(at:)(a2);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.language(at:for:)(a2, 0, 0);
  return 0;
}

uint64_t sub_100083B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  sub_100019574(0, (unint64_t *)&qword_1007FE4A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_countryPicker)) & 1) != 0)return dispatch thunk of StorefrontPickerPagePresenter.didSelectCountry(at:)(a2);
  result = static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2+ OBJC_IVAR____TtC22SubscribePageExtension35DebugStorefrontPickerViewController_languagePicker));
  if ((result & 1) != 0)
    return dispatch thunk of StorefrontPickerPagePresenter.didSelectLanguage(at:)(a2);
  return result;
}

id sub_100083BB8(uint64_t a1)
{
  return sub_100083BE8(a1, (SEL *)&selRef_setLineBreakMode_, 0, &qword_1008510A0);
}

id sub_100083BD0(uint64_t a1)
{
  return sub_100083BE8(a1, (SEL *)&selRef_setAlignment_, 1, &qword_1008510A8);
}

id sub_100083BE8(uint64_t a1, SEL *a2, uint64_t a3, _QWORD *a4)
{
  id v7;
  id result;

  v7 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  result = objc_msgSend(v7, *a2, a3);
  *a4 = v7;
  return result;
}

id sub_100083C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  NSString v15;
  NSString v16;
  __n128 v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR____TtC22SubscribePageExtension31OnboardingWelcomeViewController_primaryButtonCallback];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension31OnboardingWelcomeViewController_privacyIdentifiers] = a1;
  swift_retain(a3);
  v9._object = (void *)0x8000000100632050;
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v9, v10)._object;
  v12._countAndFlagsBits = 0xD000000000000020;
  v12._object = (void *)0x8000000100632070;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = localizedString(_:comment:)(v12, v13)._object;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v16 = String._bridgeToObjectiveC()();
  v17 = swift_bridgeObjectRelease(v14);
  v18 = sub_1004853E8(0x41656D6F636C6557, 0xEF65726F74537070, 0, v17);
  v22.receiver = v3;
  v22.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v22, "initWithTitle:detailText:icon:contentLayout:", v15, v16, v18, 2);

  v20 = v19;
  objc_msgSend(v20, "setModalInPresentation:", 1);

  swift_release(a3);
  return v20;
}

void sub_100083DC8()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  Class isa;
  id v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  id v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  void *object;
  NSString v32;
  id v33;
  _OWORD v34[2];
  objc_super v35[2];
  objc_super v36;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36.receiver = v1;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "viewDidLoad", v9);
  v12 = (void *)objc_opt_self(OBPrivacyLinkController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "linkWithBundleIdentifiers:", isa);

  if (v14)
  {
    v15 = v14;
    v16 = static Locale.storefront.getter(v15);
    Locale.identifier.getter(v16);
    v17 = v7;
    v18 = v1;
    v19 = v14;
    v20 = v6;
    v21 = v4;
    v22 = v3;
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v17);
    v25 = String._bridgeToObjectiveC()();
    v26 = v24;
    v3 = v22;
    v4 = v21;
    v6 = v20;
    v14 = v19;
    v1 = v18;
    objc_msgSend(v15, "setDisplayLanguage:", v25, swift_bridgeObjectRelease(v26).n128_f64[0]);

  }
  v27 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v27, "setPrivacyLinkController:", v14);

  v28 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v29._object = (void *)0x8000000100632150;
  v29._countAndFlagsBits = 0xD000000000000013;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v29, v30)._object;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setTitle:forState:", v32, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v28, "addTarget:action:forControlEvents:", v1, "didTapContinue", 64);
  memset(v35, 0, sizeof(v35));
  memset(v34, 0, sizeof(v34));
  static AutomationSemantics.onboarding(elementName:id:parentId:)(0x65756E69746E6F63, 0xEE006E6F74747542, v35, v34);
  sub_1000131E0((uint64_t)v34);
  sub_1000131E0((uint64_t)v35);
  UIView.setAutomationSemantics(_:)(v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v33 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v33, "addButton:", v28);

}

uint64_t type metadata accessor for OnboardingWelcomeViewController()
{
  return objc_opt_self(_TtC22SubscribePageExtension31OnboardingWelcomeViewController);
}

uint64_t sub_100084270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_navigationActionRegistration;
  v2 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_promptActionRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_infoSettingRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuRegistration, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuItemRegistration, 1, 1, v2);
  sub_100084EB8();
  return v0;
}

uint64_t sub_10008440C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  void (*v46)(char *, uint64_t, __n128);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[24];

  v107 = a1;
  v106 = a3;
  v4 = sub_10000DF3C(&qword_1007F74C0);
  __chkstk_darwin(v4);
  v104 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v105 = (char *)&v103 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v103 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v103 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v103 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v103 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v103 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v103 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v103 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v103 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v103 - v33;
  v35 = type metadata accessor for NavigationActionDebugSetting();
  if (swift_dynamicCastClass(a2, v35))
  {
    v36 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_navigationActionRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_navigationActionRegistration, v110, 0, 0);
    sub_1000194E4(v36, (uint64_t)v34, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v38 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37);
    if ((_DWORD)result != 1)
    {
      v40 = a2;
      v109 = a2;
      v41 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
      v42 = type metadata accessor for DebugSetting();
      swift_retain(v40);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v34, v106, &v109, v41, v42);
      v44 = v40;
LABEL_4:
      v45 = swift_release(v44);
      v46 = *(void (**)(char *, uint64_t, __n128))(v38 + 8);
      v47 = v34;
LABEL_8:
      v46(v47, v37, v45);
      return v43;
    }
    __break(1u);
    goto LABEL_40;
  }
  v34 = v105;
  v48 = type metadata accessor for ActionRunnerActionDebugSetting();
  if (swift_dynamicCastClass(a2, v48))
  {
    v49 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, v110, 0, 0);
    sub_1000194E4(v49, (uint64_t)v31, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v50 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v31, 1, v37);
    if ((_DWORD)result != 1)
    {
      v109 = a2;
      v51 = a2;
      v52 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
      v53 = type metadata accessor for DebugSetting();
      swift_retain(v51);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v31, v106, &v109, v52, v53);
      v45 = swift_release(v51);
      v46 = *(void (**)(char *, uint64_t, __n128))(v50 + 8);
      v47 = v31;
      goto LABEL_8;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v54 = type metadata accessor for ActionDebugSetting();
  if (swift_dynamicCastClass(a2, v54))
  {
    v55 = a2;
    v56 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRegistration, v110, 0, 0);
    sub_1000194E4(v56, (uint64_t)v28, &qword_1007F74C0);
    v57 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v58 = *(_QWORD *)(v57 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v28, 1, v57);
    if ((_DWORD)result != 1)
    {
      v109 = v55;
      v59 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
      v60 = type metadata accessor for DebugSetting();
      swift_retain(v55);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v28, v106, &v109, v59, v60);
      v61 = swift_release(v55);
      (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v28, v57, v61);
      return v43;
    }
    goto LABEL_41;
  }
  v62 = type metadata accessor for StringUserDefaultsDebugSetting();
  if (swift_dynamicCastClass(a2, v62))
  {
    v63 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, v110, 0, 0);
    v64 = v25;
    sub_1000194E4(v63, (uint64_t)v25, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v65 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v25, 1, v37);
    if ((_DWORD)result != 1)
    {
      v109 = a2;
      v66 = a2;
      v67 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
      v68 = type metadata accessor for DebugSetting();
      swift_retain(v66);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v64, v106, &v109, v67, v68);
      v45 = swift_release(v66);
      v46 = *(void (**)(char *, uint64_t, __n128))(v65 + 8);
      v47 = v64;
      goto LABEL_8;
    }
    goto LABEL_42;
  }
  v69 = type metadata accessor for BoolUserDefaultsDebugSetting();
  if (swift_dynamicCastClass(a2, v69))
  {
    v70 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, v110, 0, 0);
    v13 = v22;
    sub_1000194E4(v70, (uint64_t)v22, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v71 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48))(v13, 1, v37);
    if ((_DWORD)result == 1)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    goto LABEL_18;
  }
  v74 = type metadata accessor for StringPreferencesDebugSetting(0);
  if (swift_dynamicCastClass(a2, v74))
  {
    v73 = a2;
    v75 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, v110, 0, 0);
    v13 = v19;
    sub_1000194E4(v75, (uint64_t)v19, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v71 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48))(v13, 1, v37);
    if ((_DWORD)result == 1)
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v109 = v73;
    v72 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
LABEL_22:
    v76 = v72;
    v77 = type metadata accessor for DebugSetting();
    swift_retain(v73);
    v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v13, v106, &v109, v76, v77);
    v45 = swift_release(v73);
    v46 = *(void (**)(char *, uint64_t, __n128))(v71 + 8);
    v47 = v13;
    goto LABEL_8;
  }
  v78 = type metadata accessor for BoolPreferencesDebugSetting(0);
  if (swift_dynamicCastClass(a2, v78))
  {
    v79 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, v110, 0, 0);
    v13 = v16;
    sub_1000194E4(v79, (uint64_t)v16, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v71 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v16, 1, v37) != 1)
      goto LABEL_18;
    __break(1u);
  }
  v80 = type metadata accessor for PromptActionDebugSetting();
  if (!swift_dynamicCastClass(a2, v80))
    goto LABEL_29;
  v81 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_promptActionRegistration;
  swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_promptActionRegistration, v110, 0, 0);
  sub_1000194E4(v81, (uint64_t)v13, &qword_1007F74C0);
  v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
  v71 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v13, 1, v37) != 1)
  {
LABEL_18:
    v109 = a2;
    v72 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
    v73 = a2;
    goto LABEL_22;
  }
  __break(1u);
LABEL_29:
  v82 = type metadata accessor for InfoDebugSetting();
  v83 = swift_dynamicCastClass(a2, v82);
  v84 = v108;
  if (v83)
  {
    v85 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_infoSettingRegistration;
    swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_infoSettingRegistration, v110, 0, 0);
    sub_1000194E4(v85, (uint64_t)v10, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v86 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48))(v10, 1, v37);
    if ((_DWORD)result != 1)
    {
      v109 = a2;
      v87 = a2;
      v88 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
      v89 = type metadata accessor for DebugSetting();
      swift_retain(v87);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v10, v106, &v109, v88, v89);
      v45 = swift_release(v87);
      v46 = *(void (**)(char *, uint64_t, __n128))(v86 + 8);
      v47 = v10;
      goto LABEL_8;
    }
    goto LABEL_45;
  }
  v90 = type metadata accessor for MenuDebugSetting();
  if (swift_dynamicCastClass(a2, v90))
  {
    v91 = v84 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuRegistration;
    swift_beginAccess(v91, v110, 0, 0);
    sub_1000194E4(v91, (uint64_t)v34, &qword_1007F74C0);
    v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
    v38 = *(_QWORD *)(v37 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37);
    if ((_DWORD)result != 1)
    {
      v109 = a2;
      v92 = a2;
      v93 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
      v94 = type metadata accessor for DebugSetting();
      swift_retain(v92);
      v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v34, v106, &v109, v93, v94);
      v44 = v92;
      goto LABEL_4;
    }
    goto LABEL_46;
  }
  v95 = type metadata accessor for MenuItemDebugSetting();
  v96 = a2;
  if (!swift_dynamicCastClass(a2, v95))
    return 0;
  v97 = v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuItemRegistration;
  swift_beginAccess(v108 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuItemRegistration, v110, 0, 0);
  v98 = v104;
  sub_1000194E4(v97, v104, &qword_1007F74C0);
  v37 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
  v99 = *(_QWORD *)(v37 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v98, 1, v37);
  if ((_DWORD)result != 1)
  {
    v109 = v96;
    v100 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
    v101 = type metadata accessor for DebugSetting();
    swift_retain(v96);
    v102 = v104;
    v43 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v104, v106, &v109, v100, v101);
    v45 = swift_release(v96);
    v46 = *(void (**)(char *, uint64_t, __n128))(v99 + 8);
    v47 = (char *)v102;
    goto LABEL_8;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_100084EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v29[24];

  v1 = sub_10000DF3C(&qword_1007F74C0);
  __chkstk_darwin(v1);
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v29[-v5 - 8];
  v7 = sub_100019574(0, &qword_1007F74C8, UICollectionViewListCell_ptr);
  v8 = type metadata accessor for DebugSetting();
  UICollectionView.CellRegistration.init(handler:)(sub_1000854D4, 0, v7, v8);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F72D0);
  v10 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v11 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_navigationActionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_navigationActionRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v11);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_1000857E0, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v12 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v12);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_1000858EC, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v13 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v13);
  swift_endAccess(v29);
  v14 = *(void **)(v0 + 16);
  v15 = swift_allocObject(&unk_100725258, 24, 7);
  *(_QWORD *)(v15 + 16) = v14;
  v16 = v14;
  UICollectionView.CellRegistration.init(handler:)(sub_100087A90, v15, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v17 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v17);
  swift_endAccess(v29);
  v18 = swift_allocObject(&unk_100725280, 24, 7);
  *(_QWORD *)(v18 + 16) = v16;
  v19 = v16;
  UICollectionView.CellRegistration.init(handler:)(sub_100087A98, v18, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v20 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v20);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_1000863D8, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v21 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v21);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_1000866E0, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v22 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v22);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_100086C6C, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v23 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_promptActionRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_promptActionRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v23);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_100086FC4, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v24 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_infoSettingRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_infoSettingRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v24);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_1000870EC, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v25 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuRegistration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuRegistration, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v25);
  swift_endAccess(v29);
  UICollectionView.CellRegistration.init(handler:)(sub_1000874E4, 0, v7, v8);
  v10(v6, 0, 1, v9);
  sub_10006C29C((uint64_t)v6, (uint64_t)v3, &qword_1007F74C0);
  v26 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuItemRegistration;
  swift_beginAccess(v26, v29, 33, 0);
  sub_100087A24((uint64_t)v3, v26);
  return swift_endAccess(v29);
}

uint64_t sub_1000854D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(__n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[5];

  v5 = sub_10000DF3C(&qword_1007F74D0);
  v6 = __chkstk_darwin(v5);
  v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v50 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v48 - 8);
  v13 = __chkstk_darwin(v48);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIListContentConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  v21 = type metadata accessor for NavigationActionDebugSetting();
  result = swift_dynamicCastClass(v20, v21);
  if (result)
  {
    v23 = (_QWORD *)result;
    v46 = v8;
    v47 = a1;
    v45 = v20;
    v24 = swift_retain(v20);
    static UIListContentConfiguration.valueCell()(v24);
    v25 = v23[7];
    v26 = v23[8];
    v27 = swift_bridgeObjectRetain(v26);
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = (uint64_t (*)(__n128))v23[9];
    if (v28)
    {
      v29 = v23[10];
      v30 = swift_retain(v29);
      v31 = v28(v30);
      v33 = v32;
      sub_100019310((uint64_t)v28, v29);
    }
    else
    {
      v31 = 0;
      v33 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v31, v33);
    v51[3] = v16;
    v51[4] = &protocol witness table for UIListContentConfiguration;
    v34 = sub_1000117C0(v51);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v34, v19, v16);
    UICollectionViewCell.contentConfiguration.setter(v51);
    v35 = sub_10000DF3C(&qword_1007F74D8);
    v36 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72), *(unsigned __int8 *)(v36 + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_10066FBA0;
    v44 = v17;
    v38 = v12;
    v39 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v40 = v48;
    v39(v15, enum case for UICellAccessory.DisplayedState.always(_:), v48);
    v41 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v42 = v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v49, 1, 1, v41);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v42, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v46);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v40);
    UICollectionViewListCell.accessories.setter(v37);
    v43 = swift_release(v45);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v44 + 8))(v19, v16, v43);
  }
  return result;
}

uint64_t sub_1000857E0(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;
  __n128 v18;
  _QWORD v20[5];

  v5 = type metadata accessor for UIListContentConfiguration(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a4;
  v10 = type metadata accessor for ActionRunnerActionDebugSetting();
  result = swift_dynamicCastClass(v9, v10);
  if (result)
  {
    v12 = result;
    v13 = swift_retain(v9);
    static UIListContentConfiguration.valueCell()(v13);
    v15 = *(_QWORD *)(v12 + 56);
    v14 = *(_QWORD *)(v12 + 64);
    v16 = swift_bridgeObjectRetain(v14);
    UIListContentConfiguration.text.setter(v15, v14, v16);
    v20[3] = v5;
    v20[4] = &protocol witness table for UIListContentConfiguration;
    v17 = sub_1000117C0(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v17, v8, v5);
    UICollectionViewCell.contentConfiguration.setter(v20);
    v18 = swift_release(v9);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v18);
  }
  return result;
}

uint64_t sub_1000858EC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(__n128);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  _QWORD v26[5];

  v5 = type metadata accessor for UIListContentConfiguration(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a4;
  v10 = type metadata accessor for ActionDebugSetting();
  result = swift_dynamicCastClass(v9, v10);
  if (result)
  {
    v12 = (_QWORD *)result;
    v13 = swift_retain(v9);
    static UIListContentConfiguration.valueCell()(v13);
    v14 = v12[7];
    v15 = v12[8];
    v16 = swift_bridgeObjectRetain(v15);
    UIListContentConfiguration.text.setter(v14, v15, v16);
    v17 = (uint64_t (*)(__n128))v12[11];
    if (v17)
    {
      v18 = v12[12];
      v19 = swift_retain(v18);
      v20 = v17(v19);
      v22 = v21;
      sub_100019310((uint64_t)v17, v18);
    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v20, v22);
    v26[3] = v5;
    v26[4] = &protocol witness table for UIListContentConfiguration;
    v23 = sub_1000117C0(v26);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v23, v8, v5);
    UICollectionViewCell.contentConfiguration.setter(v26);
    v24 = swift_release(v9);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v24);
  }
  return result;
}

uint64_t sub_100085A4C(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  NSString v31;
  id v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  _QWORD v54[3];
  uint64_t v55;
  void *v56;
  _OWORD v57[2];

  v7 = sub_10000DF3C(&qword_1007F74D0);
  v8 = __chkstk_darwin(v7);
  v49 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v8);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellAccessory.DisplayedState(0, v11);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIListContentConfiguration(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a3;
  v23 = type metadata accessor for StringUserDefaultsDebugSetting();
  result = swift_dynamicCastClass(v22, v23);
  if (result)
  {
    v25 = (_QWORD *)result;
    v52 = a1;
    v46 = v22;
    v26 = swift_retain(v22);
    static UIListContentConfiguration.valueCell()(v26);
    v27 = v25[7];
    v28 = v25[8];
    v29 = swift_bridgeObjectRetain(v28);
    UIListContentConfiguration.text.setter(v27, v28, v29);
    v30 = v25[10];
    swift_bridgeObjectRetain(v30);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(a4, "valueForKey:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

    if (v32)
    {
      _bridgeAnyObjectToAny(_:)(v57, v32);
      swift_unknownObjectRelease(v32);
    }
    else
    {
      memset(v57, 0, sizeof(v57));
    }
    sub_10006C29C((uint64_t)v57, (uint64_t)v54, &qword_1007F6E90);
    if (v55)
    {
      v33 = swift_dynamicCast(v53, v54, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      v34 = v33 == 0;
      if (v33)
        v35 = v53[0];
      else
        v35 = 0;
      if (v34)
        v36 = 0;
      else
        v36 = v53[1];
    }
    else
    {
      sub_100011088((uint64_t)v54, &qword_1007F6E90);
      v35 = 0;
      v36 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v35, v36);
    v55 = v18;
    v56 = &protocol witness table for UIListContentConfiguration;
    v37 = sub_1000117C0(v54);
    (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 16))(v37, v21, v18);
    UICollectionViewCell.contentConfiguration.setter(v54);
    v38 = sub_10000DF3C(&qword_1007F74D8);
    v39 = type metadata accessor for UICellAccessory(0);
    v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
    *(_OWORD *)(v40 + 16) = xmmword_10066FBA0;
    v42 = v47;
    v41 = v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v17, enum case for UICellAccessory.DisplayedState.always(_:), v48);
    v43 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v44 = v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v49, 1, 1, v43);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v44, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v17, v13);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v51);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v41);
    UICollectionViewListCell.accessories.setter(v40);
    v45 = swift_release(v46);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v19 + 8))(v21, v18, v45);
  }
  return result;
}

uint64_t sub_100085DE4(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  _OWORD v62[2];
  _QWORD v63[3];
  uint64_t v64;
  void *v65;

  v7 = sub_10000DF3C(&qword_1007F74D0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.Placement(0, v8);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v12);
  v59 = *(_QWORD *)(v15 - 8);
  v60 = v15;
  v16 = __chkstk_darwin(v15);
  v56 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIListContentConfiguration(0, v16);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a3;
  v23 = type metadata accessor for BoolUserDefaultsDebugSetting();
  result = swift_dynamicCastClass(v22, v23);
  if (result)
  {
    v25 = result;
    v54 = v10;
    v26 = swift_retain(v22);
    static UIListContentConfiguration.cell()(v26);
    v27 = v19;
    v28 = *(_QWORD *)(v25 + 56);
    v29 = *(_QWORD *)(v25 + 64);
    v30 = swift_bridgeObjectRetain(v29);
    UIListContentConfiguration.text.setter(v28, v29, v30);
    v64 = v18;
    v65 = &protocol witness table for UIListContentConfiguration;
    v31 = sub_1000117C0(v63);
    v52 = v27;
    (*(void (**)(_QWORD *, char *, uint64_t))(v27 + 16))(v31, v21, v18);
    v55 = a1;
    UICollectionViewCell.contentConfiguration.setter(v63);
    v32 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v33 = *(_QWORD *)(v25 + 88);
    swift_bridgeObjectRetain(v33);
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(a4, "objectForKey:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

    if (v35)
    {
      _bridgeAnyObjectToAny(_:)(v62, v35);
      swift_unknownObjectRelease(v35);
    }
    else
    {
      memset(v62, 0, sizeof(v62));
    }
    sub_10006C29C((uint64_t)v62, (uint64_t)v63, &qword_1007F6E90);
    v53 = v18;
    if (v64)
    {
      v36 = sub_100019574(0, (unint64_t *)&qword_100808390, NSNumber_ptr);
      if ((swift_dynamicCast(&v61, v63, (char *)&type metadata for Any + 8, v36, 6) & 1) != 0)
      {
        v37 = v61;
        objc_msgSend(v32, "setOn:", objc_msgSend(v61, "BOOLValue"));

LABEL_10:
        sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
        v38 = swift_allocObject(&unk_1007252A8, 24, 7);
        swift_unknownObjectWeakInit(v38 + 16, v32);
        v39 = (_QWORD *)swift_allocObject(&unk_1007252F8, 40, 7);
        v39[2] = v38;
        v39[3] = a4;
        v39[4] = v25;
        swift_retain(v22);
        v40 = a4;
        v41 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100087D88, v39);
        objc_msgSend(v32, "addAction:forControlEvents:", v41, 0x2000);
        v42 = sub_10000DF3C(&qword_1007F74D8);
        v43 = type metadata accessor for UICellAccessory(0);
        v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) | 7);
        *(_OWORD *)(v44 + 16) = xmmword_10066FBA0;
        v45 = (uint64_t (**)())&v14[*(int *)(sub_10000DF3C((uint64_t *)&unk_1007F74F0) + 48)];
        v46 = enum case for UICellAccessory.DisplayedState.always(_:);
        v48 = type metadata accessor for UICellAccessory.DisplayedState(0, v47);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v14, v46, v48);
        *v45 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
        v45[1] = 0;
        (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v14, enum case for UICellAccessory.Placement.trailing(_:), v58);
        v49 = type metadata accessor for UICellAccessory.LayoutDimension(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v54, 1, 1, v49);
        v50 = v32;
        v51 = v56;
        UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
        static UICellAccessory.customView(configuration:)(v51);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v60);
        UICollectionViewListCell.accessories.setter(v44);

        swift_release(v22);
        return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v21, v53);
      }
    }
    else
    {
      sub_100011088((uint64_t)v63, &qword_1007F6E90);
    }
    objc_msgSend(v32, "setOn:", *(unsigned __int8 *)(v25 + 72));
    goto LABEL_10;
  }
  return result;
}

void sub_1000862FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  void *Strong;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  _BYTE v12[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(Strong, "isOn");
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a3, "setBool:forKey:", v9, v10);

    if (*(_BYTE *)(a4 + 96) == 1)
    {
      v11 = objc_msgSend((id)objc_opt_self(ASKRebootstrapCoordinator), "sharedCoordinator");
      objc_msgSend(v11, "notify");

    }
  }
}

uint64_t sub_1000863D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];

  v5 = sub_10000DF3C(&qword_1007F74D0);
  v6 = __chkstk_darwin(v5);
  v44 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v43 - 8);
  v13 = __chkstk_darwin(v43);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIListContentConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  v21 = type metadata accessor for StringPreferencesDebugSetting(0);
  result = swift_dynamicCastClass(v20, v21);
  if (result)
  {
    v23 = result;
    v24 = swift_retain(v20);
    static UIListContentConfiguration.valueCell()(v24);
    v41[1] = a1;
    v42 = v20;
    v25 = *(_QWORD *)(v23 + 56);
    v26 = *(_QWORD *)(v23 + 64);
    v27 = swift_bridgeObjectRetain(v26);
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = *(_QWORD *)(v23 + OBJC_IVAR____TtC22SubscribePageExtension29StringPreferencesDebugSetting_preferences + 8);
    ObjectType = swift_getObjectType();
    Preferences.subscript.getter(v47, v23 + OBJC_IVAR____TtC22SubscribePageExtension29StringPreferencesDebugSetting_key, ObjectType, &type metadata for String, v28);
    UIListContentConfiguration.secondaryText.setter(v47[0], v47[1]);
    v47[3] = v16;
    v47[4] = &protocol witness table for UIListContentConfiguration;
    v30 = sub_1000117C0(v47);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v30, v19, v16);
    UICollectionViewCell.contentConfiguration.setter(v47);
    v31 = sub_10000DF3C(&qword_1007F74D8);
    v32 = type metadata accessor for UICellAccessory(0);
    v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) | 7);
    *(_OWORD *)(v33 + 16) = xmmword_10066FBA0;
    v34 = v17;
    v35 = v12;
    v36 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v37 = v43;
    v36(v15, enum case for UICellAccessory.DisplayedState.always(_:), v43);
    v38 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v39 = v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v44, 1, 1, v38);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v39, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v46);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v37);
    UICollectionViewListCell.accessories.setter(v33);
    v40 = swift_release(v42);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v34 + 8))(v19, v16, v40);
  }
  return result;
}

uint64_t sub_1000866E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[5];

  v5 = sub_10000DF3C(&qword_1007F74D0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.Placement(0, v6);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v10);
  v55 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UIListContentConfiguration(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a3;
  v22 = type metadata accessor for BoolPreferencesDebugSetting(0);
  result = swift_dynamicCastClass(v21, v22);
  if (result)
  {
    v24 = result;
    v51 = v8;
    v25 = swift_retain(v21);
    static UIListContentConfiguration.cell()(v25);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = *(_QWORD *)(v24 + 64);
    v28 = swift_bridgeObjectRetain(v27);
    UIListContentConfiguration.text.setter(v26, v27, v28);
    v29 = *(_QWORD *)(v24 + 72);
    v30 = *(_QWORD *)(v24 + 80);
    swift_bridgeObjectRetain(v30);
    UIListContentConfiguration.secondaryText.setter(v29, v30);
    v57[3] = v17;
    v57[4] = &protocol witness table for UIListContentConfiguration;
    v31 = sub_1000117C0(v57);
    v49 = v18;
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 16))(v31, v20, v17);
    UICollectionViewCell.contentConfiguration.setter(v57);
    v32 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v33 = *(_QWORD *)(v24 + OBJC_IVAR____TtC22SubscribePageExtension27BoolPreferencesDebugSetting_preferences + 8);
    ObjectType = swift_getObjectType();
    Preferences.subscript.getter(v57, v24 + OBJC_IVAR____TtC22SubscribePageExtension27BoolPreferencesDebugSetting_key, ObjectType, &type metadata for Bool, v33);
    v52 = a1;
    v50 = v17;
    if (LOBYTE(v57[0]) == 2)
      v35 = *(unsigned __int8 *)(v24 + 88);
    else
      v35 = v57[0] & 1;
    objc_msgSend(v32, "setOn:", v35);
    sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
    v36 = swift_allocObject(&unk_1007252A8, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v32);
    v37 = swift_allocObject(&unk_1007252D0, 32, 7);
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = v24;
    swift_retain(v21);
    v38 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100087D4C, v37);
    objc_msgSend(v32, "addAction:forControlEvents:", v38, 0x2000);
    v39 = sub_10000DF3C(&qword_1007F74D8);
    v40 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72), *(unsigned __int8 *)(v40 + 80) | 7);
    *(_OWORD *)(v41 + 16) = xmmword_10066FBA0;
    v42 = (uint64_t (**)())&v12[*(int *)(sub_10000DF3C((uint64_t *)&unk_1007F74F0) + 48)];
    v43 = enum case for UICellAccessory.DisplayedState.always(_:);
    v45 = type metadata accessor for UICellAccessory.DisplayedState(0, v44);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v12, v43, v45);
    *v42 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    v42[1] = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v12, enum case for UICellAccessory.Placement.trailing(_:), v54);
    v46 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v51, 1, 1, v46);
    v47 = v32;
    UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
    static UICellAccessory.customView(configuration:)(v16);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v56);
    UICollectionViewListCell.accessories.setter(v41);

    swift_release(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v20, v50);
  }
  return result;
}

void sub_100086B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  _BYTE v14[24];

  v5 = sub_10000DF3C((uint64_t *)&unk_10081C7B0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC22SubscribePageExtension27BoolPreferencesDebugSetting_preferences + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3 + OBJC_IVAR____TtC22SubscribePageExtension27BoolPreferencesDebugSetting_key, v5);
    HIBYTE(v13) = objc_msgSend(v10, "isOn");
    Preferences.subscript.setter((char *)&v13 + 7, v8, ObjectType, &type metadata for Bool, v11);

  }
}

uint64_t sub_100086C6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(__n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD *, _QWORD);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD v54[5];

  v5 = sub_10000DF3C(&qword_1007F74D0);
  v6 = __chkstk_darwin(v5);
  v52 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v53 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v51 - 8);
  v13 = __chkstk_darwin(v51);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIListContentConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  v21 = type metadata accessor for PromptActionDebugSetting();
  result = swift_dynamicCastClass(v20, v21);
  if (result)
  {
    v23 = (_QWORD *)result;
    v49 = v8;
    v50 = a1;
    v48 = v20;
    v24 = swift_retain(v20);
    static UIListContentConfiguration.valueCell()(v24);
    v25 = v23[7];
    v26 = v23[8];
    v27 = swift_bridgeObjectRetain(v26);
    UIListContentConfiguration.text.setter(v25, v26, v27);
    v28 = (uint64_t (*)(__n128))v23[9];
    if (v28)
    {
      v29 = v23[10];
      v30 = swift_retain(v29);
      v31 = v28(v30);
      v33 = v32;
      sub_100019310((uint64_t)v28, v29);
    }
    else
    {
      v31 = 0;
      v33 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v31, v33);
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v34 = static UIColor.appTint.getter();
    v35 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v54);
    UIListContentConfiguration.TextProperties.color.setter(v34);
    v35(v54, 0);
    v54[3] = v16;
    v54[4] = &protocol witness table for UIListContentConfiguration;
    v36 = sub_1000117C0(v54);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 16))(v36, v19, v16);
    UICollectionViewCell.contentConfiguration.setter(v54);
    v37 = sub_10000DF3C(&qword_1007F74D8);
    v38 = type metadata accessor for UICellAccessory(0);
    v39 = swift_allocObject(v37, ((*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v38 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) | 7);
    *(_OWORD *)(v39 + 16) = xmmword_10066FBA0;
    v47 = v16;
    v40 = v17;
    v41 = v12;
    v42 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v43 = v51;
    v42(v15, enum case for UICellAccessory.DisplayedState.always(_:), v51);
    v44 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v45 = v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v52, 1, 1, v44);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v45, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v49);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v43);
    UICollectionViewListCell.accessories.setter(v39);
    v46 = swift_release(v48);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v19, v47, v46);
  }
  return result;
}

uint64_t sub_100086FC4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  _QWORD v22[5];

  v5 = type metadata accessor for UIListContentConfiguration(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a4;
  v10 = type metadata accessor for InfoDebugSetting();
  result = swift_dynamicCastClass(v9, v10);
  if (result)
  {
    v12 = (_QWORD *)result;
    v13 = swift_retain(v9);
    static UIListContentConfiguration.valueCell()(v13);
    v14 = v12[7];
    v15 = v12[8];
    v16 = swift_bridgeObjectRetain(v15);
    UIListContentConfiguration.text.setter(v14, v15, v16);
    v17 = v12[9];
    v18 = v12[10];
    swift_bridgeObjectRetain(v18);
    UIListContentConfiguration.secondaryText.setter(v17, v18);
    v22[3] = v5;
    v22[4] = &protocol witness table for UIListContentConfiguration;
    v19 = sub_1000117C0(v22);
    (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v19, v8, v5);
    UICollectionViewCell.contentConfiguration.setter(v22);
    v20 = swift_release(v9);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v20);
  }
  return result;
}

uint64_t sub_1000870EC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, _QWORD);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[6];

  v5 = type metadata accessor for UICellAccessory.DisplayedState(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C(&qword_1007F74D0);
  __chkstk_darwin(v9);
  v55 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F74E0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v12);
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UIListContentConfiguration(0, v16);
  v58 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a4;
  v23 = type metadata accessor for MenuDebugSetting();
  result = swift_dynamicCastClass(v22, v23);
  if (result)
  {
    v25 = (_QWORD *)result;
    v53 = v6;
    v54 = v5;
    v26 = swift_retain(v22);
    static UIListContentConfiguration.valueCell()(v26);
    v27 = v25[7];
    v28 = v25[8];
    v29 = swift_bridgeObjectRetain(v28);
    UIListContentConfiguration.text.setter(v27, v28, v29);
    v30 = v25[9];
    swift_retain(v22);
    swift_bridgeObjectRetain(v30);
    v32 = sub_100087AA0(v31, (uint64_t)v25);
    swift_bridgeObjectRelease(v30);
    swift_release(v22);
    v52 = v8;
    if (v32)
    {
      v33 = *(_QWORD *)(v32 + 56);
      v34 = *(_QWORD *)(v32 + 64);
      swift_bridgeObjectRetain(v34);
      swift_release(v32);
    }
    else
    {
      v33 = 0;
      v34 = 0;
    }
    UIListContentConfiguration.secondaryText.setter(v33, v34);
    sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
    v35 = static UIColor.appTint.getter();
    v36 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v59);
    UIListContentConfiguration.TextProperties.color.setter(v35);
    v36(v59, 0);
    v59[3] = v19;
    v59[4] = &protocol witness table for UIListContentConfiguration;
    v37 = sub_1000117C0(v59);
    v51 = v19;
    (*(void (**)(_QWORD *, char *, uint64_t))(v58 + 16))(v37, v21, v19);
    UICollectionViewCell.contentConfiguration.setter(v59);
    v38 = sub_10000DF3C(&qword_1007F74D8);
    v39 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72), *(unsigned __int8 *)(v39 + 80) | 7);
    *(_OWORD *)(v40 + 16) = xmmword_10066FBA0;
    v41 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
    v42 = v14;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v14, 1, 1, v41);
    v43 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v44 = v55;
    v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v55, 1, 1, v43);
    v46 = static UIColor.tertiaryText.getter(v45);
    UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v42, 2, v44, v46);
    v48 = v52;
    v47 = v53;
    v49 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, enum case for UICellAccessory.DisplayedState.always(_:), v54);
    static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v48, v18, 0, 0);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v57);
    UICollectionViewListCell.accessories.setter(v40);
    v50 = swift_release(v22);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v58 + 8))(v21, v51, v50);
  }
  return result;
}

uint64_t sub_1000874E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];

  v4 = sub_10000DF3C(&qword_1007F74D0);
  v5 = __chkstk_darwin(v4);
  v40 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v5);
  v41 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UICellAccessory.DisplayedState(0, v8);
  v42 = *(_QWORD *)(v39 - 8);
  v11 = __chkstk_darwin(v39);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIListContentConfiguration(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a3;
  v19 = type metadata accessor for MenuItemDebugSetting();
  result = swift_dynamicCastClass(v18, v19);
  if (result)
  {
    v21 = result;
    v38 = v7;
    v22 = swift_retain(v18);
    static UIListContentConfiguration.cell()(v22);
    v23 = *(_QWORD *)(v21 + 56);
    v24 = *(_QWORD *)(v21 + 64);
    v25 = swift_bridgeObjectRetain(v24);
    UIListContentConfiguration.text.setter(v23, v24, v25);
    v43[3] = v14;
    v43[4] = &protocol witness table for UIListContentConfiguration;
    v26 = sub_1000117C0(v43);
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v26, v17, v14);
    UICollectionViewCell.contentConfiguration.setter(v43);
    if (*(_BYTE *)(v21 + 72) == 1)
    {
      v27 = sub_10000DF3C(&qword_1007F74D8);
      v28 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v29 = *(_QWORD *)(v28 + 72);
      v30 = *(unsigned __int8 *)(v28 + 80);
      v31 = (v30 + 32) & ~v30;
      v32 = (_QWORD *)swift_allocObject(v27, v31 + v29, v30 | 7);
      *((_OWORD *)v32 + 1) = xmmword_10066FBA0;
      v37[1] = (char *)v32 + v31;
      v33 = v39;
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v13, enum case for UICellAccessory.DisplayedState.always(_:), v39);
      v34 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v35 = v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v40, 1, 1, v34);
      UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v35, 0);
      static UICellAccessory.checkmark(displayed:options:)(v13, v10);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v38);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v33);
    }
    else
    {
      v32 = _swiftEmptyArrayStorage;
    }
    UICollectionViewListCell.accessories.setter(v32);
    v36 = swift_release(v18);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v36);
  }
  return result;
}

uint64_t sub_1000877CC()
{
  uint64_t v0;

  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_navigationActionRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRunnerActionRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_actionRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringUserDefaultRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLUserDefaultRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_stringPreferenceRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_BOOLPreferenceRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_promptActionRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_infoSettingRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuRegistration, &qword_1007F74C0);
  sub_100011088(v0 + OBJC_IVAR____TtC22SubscribePageExtension29DebugSettingCellRegistrations_menuItemRegistration, &qword_1007F74C0);
  return v0;
}

uint64_t sub_1000878D4()
{
  uint64_t v0;

  sub_1000877CC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000878F8()
{
  return type metadata accessor for DebugSettingCellRegistrations(0);
}

uint64_t type metadata accessor for DebugSettingCellRegistrations(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F72B8;
  if (!qword_1007F72B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugSettingCellRegistrations);
  return result;
}

void sub_10008793C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000879CC(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = v5;
    v9 = v5;
    v10 = v5;
    v11 = v5;
    v12 = v5;
    v13 = v5;
    v14 = v5;
    v15 = v5;
    swift_updateClassMetadata2(a1, 256, 12, &v4, a1 + 80);
  }
}

void sub_1000879CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007F72C8)
  {
    v2 = sub_100010EF8((uint64_t *)&unk_1007F72D0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007F72C8);
  }
}

uint64_t sub_100087A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F74C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100087A6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100087A90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_100085A4C(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_100087A98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_100085DE4(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_100087AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v14)(_QWORD *__return_ptr, uint64_t);
  _OWORD v15[2];
  uint64_t v16;
  _BYTE v17[40];
  _BYTE v18[24];
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[5];
  _BYTE v24[48];
  unint64_t v25;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v25 = a1 & 0xC000000000000001;
    v5 = *(void (**)(_QWORD *__return_ptr, uint64_t))(a2 + 80);
    a2 = *(_QWORD *)(a2 + 88);
    v14 = v5;
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if (!v25)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_20;
LABEL_12:
      v10 = sub_10006BFD4(v8 + 16, (uint64_t)v24);
      v14(v23, v10);
      sub_1000194E4((uint64_t)v24, (uint64_t)v18, (uint64_t *)&unk_1007F9850);
      sub_1000194E4((uint64_t)v23, (uint64_t)&v20, (uint64_t *)&unk_1007F9850);
      if (!v19)
      {
        sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F9850);
        sub_100011088((uint64_t)v24, (uint64_t *)&unk_1007F9850);
        if (!*((_QWORD *)&v21 + 1))
        {
          sub_100011088((uint64_t)v18, (uint64_t *)&unk_1007F9850);
LABEL_19:
          swift_bridgeObjectRelease(a1);
          return v8;
        }
        goto LABEL_5;
      }
      sub_1000194E4((uint64_t)v18, (uint64_t)v17, (uint64_t *)&unk_1007F9850);
      if (!*((_QWORD *)&v21 + 1))
      {
        sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F9850);
        sub_100011088((uint64_t)v24, (uint64_t *)&unk_1007F9850);
        sub_100019370((uint64_t)v17);
LABEL_5:
        sub_100011088((uint64_t)v18, &qword_1007F74E8);
        goto LABEL_6;
      }
      v15[0] = v20;
      v15[1] = v21;
      v16 = v22;
      v11 = static AnyHashable.== infix(_:_:)(v17, v15);
      sub_100019370((uint64_t)v15);
      sub_100011088((uint64_t)v23, (uint64_t *)&unk_1007F9850);
      sub_100011088((uint64_t)v24, (uint64_t *)&unk_1007F9850);
      sub_100019370((uint64_t)v17);
      sub_100011088((uint64_t)v18, (uint64_t *)&unk_1007F9850);
      if ((v11 & 1) != 0)
        goto LABEL_19;
LABEL_6:
      swift_release(v8);
      ++v6;
      if (v9 == v4)
        goto LABEL_25;
    }
    v8 = *(_QWORD *)(a1 + 8 * v6);
    swift_retain(v8);
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_12;
LABEL_20:
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
  }
LABEL_25:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_100087CFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100087D20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100087D4C(uint64_t a1)
{
  uint64_t v1;

  sub_100086B50(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100087D54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100087D88(uint64_t a1)
{
  uint64_t v1;

  sub_1000862FC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_100087E2C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id result;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_artworkLoader);
  v9 = OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_pageTraits;
  v10 = *(void **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_pageTraits);
  v11 = *(char **)(v3 + OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_objectGraph);
  swift_unknownObjectRetain(v10);
  sub_100342A60(a2, a3, v8, v10, v11, a1);
  v12 = objc_msgSend(a2, "contentView", swift_unknownObjectRelease(v10).n128_f64[0]);
  objc_msgSend(*(id *)(v4 + v9), "pageMarginInsets");
  objc_msgSend(v12, "layoutMargins");
  objc_msgSend(v12, "setLayoutMargins:");

  v13 = objc_msgSend(a2, "contentView");
  objc_msgSend(*(id *)(v4 + v9), "pageMarginInsets");
  objc_msgSend(v13, "layoutMargins");
  objc_msgSend(v13, "setLayoutMargins:");

  v14 = type metadata accessor for SmallLockupCollectionViewTableCell();
  result = (id)swift_dynamicCastClass(a2, v14);
  if (result)
    return objc_msgSend(result, "setSelectionStyle:", 0);
  return result;
}

id sub_1000883A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PurchasesCollectionViewDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PurchasesCollectionViewDelegate()
{
  return objc_opt_self(_TtC22SubscribePageExtension31PurchasesCollectionViewDelegate);
}

uint64_t sub_100088628(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _BYTE v12[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_1000886A0(a6);

  }
  return a3(1);
}

uint64_t sub_1000886A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(char *, uint64_t, __n128);
  char v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, __n128);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = type metadata accessor for PurchasesContentMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v19 - v8;
  PurchasesContentPresenter.mode.getter(v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for PurchasesContentMode.hidden(_:), v2);
  v10 = sub_10000E99C(&qword_1007F75B8, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentMode, (uint64_t)&protocol conformance descriptor for PurchasesContentMode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v21, v2, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v19, v2, v10);
  v11 = v22;
  v12 = v20;
  if (v21 == v19 && v22 == v20)
  {
    v13 = swift_bridgeObjectRelease_n(v22, 2);
    v14 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v14(v5, v2, v13);
    ((void (*)(char *, uint64_t))v14)(v9, v2);
    return PurchasesContentPresenter.unhidePurchase(at:)(a1);
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v19, v20, 0);
  swift_bridgeObjectRelease(v11);
  v16 = swift_bridgeObjectRelease(v12);
  v17 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v17(v5, v2, v16);
  ((void (*)(char *, uint64_t))v17)(v9, v2);
  if ((v15 & 1) != 0)
    return PurchasesContentPresenter.unhidePurchase(at:)(a1);
  return PurchasesContentPresenter.hidePurchase(at:)(a1);
}

void sub_100088928(uint64_t a1, objc_class *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Class isa;
  Class v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Class v39;
  uint64_t v40;
  uint64_t v41;
  Class v42;
  _QWORD v43[2];
  void (*v44)(char *, uint64_t, uint64_t);
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  uint64_t v52;
  _QWORD v53[5];

  v5 = v4;
  v46 = a3;
  v51 = a2;
  v8 = type metadata accessor for IndexPath(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F53C0);
  __chkstk_darwin(v11);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000DF3C(&qword_1007F7D40);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18 = (Class)objc_msgSend(a4, "cellForItemAtIndexPath:", isa);

  if (v18)
  {
    v45 = a4;
    ObjectType = swift_getObjectType();
    v20 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyComponentView);
    if (v20)
      v21 = v20;
    else
      v21 = 0;
    if (v20)
      v22 = v18;
    else
      v22 = 0;
    if (v22)
    {
      v23 = *(_QWORD *)(v4 + 16);
      v24 = type metadata accessor for PurchasesContentPresenter(0);
      v25 = sub_10000E99C((unint64_t *)&qword_1007F75C0, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
      v43[0] = v24;
      v43[1] = v23;
      v26 = v24;
      v27 = a1;
      v28 = v25;
      dispatch thunk of ShelfPresenter.model(at:)(v53, v51, v26, v25);
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
      v44(v10, v27, v50);
      StatePath<A>.init(_:)(v10);
      v52 = *(_QWORD *)(v5 + 24);
      swift_retain(v52);
      v29 = sub_10000DF3C(&qword_100803430);
      v30 = sub_100089238();
      WritableStateLens.init<A>(contentsOf:in:)(v13, &v52, &type metadata for Never, v29, v30);
      v31 = swift_getObjectType();
      v32 = (*(uint64_t (**)(_QWORD *, char *, uint64_t, uint64_t, uint64_t))(v21 + 88))(v53, v16, v46, v31, v21);
      v33 = v32;
      if ((v32 & 1) != 0)
      {
        dispatch thunk of ShelfPresenter.didSelectItem(at:)(v51, v43[0], v28);
        v34 = v45;
        if ((v33 & 2) == 0)
        {
LABEL_11:
          if ((v33 & 4) == 0)
          {
LABEL_13:

            (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
            _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v53);
            return;
          }
LABEL_12:
          v35 = sub_10000DF3C(&qword_100803400);
          v36 = *(unsigned __int8 *)(v49 + 80);
          v37 = (v36 + 32) & ~v36;
          v38 = swift_allocObject(v35, v37 + *(_QWORD *)(v49 + 72), v36 | 7);
          *(_OWORD *)(v38 + 16) = xmmword_10066FBA0;
          v44((char *)(v38 + v37), v27, v50);
          v39 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v34, "reloadItemsAtIndexPaths:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

          v18 = v39;
          goto LABEL_13;
        }
      }
      else
      {
        v34 = v45;
        if ((v32 & 2) == 0)
          goto LABEL_11;
      }
      v42 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v34, "deselectItemAtIndexPath:animated:", v42, 1);

      if ((v33 & 4) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }

    a4 = v45;
  }
  v40 = type metadata accessor for PurchasesContentPresenter(0);
  v41 = sub_10000E99C((unint64_t *)&qword_1007F75C0, (uint64_t (*)(uint64_t))&type metadata accessor for PurchasesContentPresenter, (uint64_t)&protocol conformance descriptor for PurchasesContentPresenter);
  dispatch thunk of ShelfPresenter.didSelectItem(at:)(v51, v40, v41);
  v51 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a4, "deselectItemAtIndexPath:animated:", v51, 1);

}

id sub_100088CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v11;
  char *v12;
  id v13;
  objc_super v15;

  v11 = &v5[OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_didScrollHandler];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_objectGraph] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_presenter] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_shelfDataSource] = a3;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_artworkLoader] = a4;
  v12 = v5;
  swift_retain(a1);
  swift_retain(a2);
  swift_retain(a3);
  v13 = objc_msgSend(a5, "snapshotPageTraitEnvironment", swift_retain(a4).n128_f64[0]);
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension31PurchasesCollectionViewDelegate_pageTraits] = v13;

  v15.receiver = v12;
  v15.super_class = (Class)type metadata accessor for PurchasesCollectionViewDelegate();
  return objc_msgSendSuper2(&v15, "init");
}

id sub_100088DD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t IsHidden;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  id v31;
  Class v32;
  _QWORD v34[2];
  _QWORD aBlock[5];
  uint64_t v36;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = type metadata accessor for PurchasesContentMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((PurchasesContentPresenter.canHidePurchases.getter(v9) & 1) != 0)
  {
    v13 = PurchasesContentPresenter.mode.getter(v12);
    IsHidden = PurchasesContentMode.toggleIsHiddenText.getter(v13);
    v34[0] = v15;
    v34[1] = IsHidden;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v16 = swift_allocObject(&unk_100725320, 24, 7);
    v17 = swift_unknownObjectWeakInit(v16 + 16, v2);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v17);
    v18 = *(unsigned __int8 *)(v5 + 80);
    v19 = (v18 + 24) & ~v18;
    v20 = swift_allocObject(&unk_100725348, v19 + v6, v18 | 7);
    *(_QWORD *)(v20 + 16) = v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v20 + v19, (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    swift_retain(v16);
    v21 = v34[0];
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    aBlock[4] = sub_1000891B8;
    v36 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004C3870;
    aBlock[3] = &unk_100725360;
    v23 = _Block_copy(aBlock);
    v24 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v22, v23);

    _Block_release(v23);
    v25 = v36;
    swift_release(v16);
    swift_release(v25);
    v26 = sub_10000DF3C(&qword_1007F5840);
    v27 = swift_allocObject(v26, 40, 7);
    *(_OWORD *)(v27 + 16) = xmmword_10066FE60;
    *(_QWORD *)(v27 + 32) = v24;
    aBlock[0] = v27;
    specialized Array._endMutation()(v27);
    v28 = aBlock[0];
    sub_1000890E4();
    v29 = v24;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v28);
    v31 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

    objc_msgSend(v31, "setPerformsFirstActionWithFullSwipe:", 0);
  }
  else
  {
    sub_1000890E4();
    v32 = Array._bridgeToObjectiveC()().super.isa;
    v31 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", v32);

  }
  return v31;
}

unint64_t sub_1000890E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100813550;
  if (!qword_100813550)
  {
    v1 = objc_opt_self(UIContextualAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100813550);
  }
  return result;
}

uint64_t sub_100089120()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100089144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000891B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_100088628(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_100089220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100089230(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100089238()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F53D0;
  if (!qword_1007F53D0)
  {
    v1 = sub_100010EF8(&qword_100803430);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for TransientStateStore<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1007F53D0);
  }
  return result;
}

char *sub_100089284(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_weakInit(&v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsCalculator], 0);
  v10 = &v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer] = 0;
  v11 = &v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler];
  *v11 = 0;
  v11[1] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_isExpanded] = 0;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_sizeCategory] = 7;
  v4[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_wantsCardConsistentMargins] = 0;
  v12 = type metadata accessor for TodayCardLockupView();
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v4;
  v15 = objc_msgSend(v13, "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView] = v15;

  v28.receiver = v14;
  v28.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  v17 = objc_msgSend(v16, "layer");
  objc_msgSend(v17, "setAllowsGroupBlending:", 0);

  v18 = OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView;
  v19 = *(_BYTE **)&v16[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView];
  v20 = OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_allowsGroupBlending;
  v19[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_allowsGroupBlending] = 0;
  v21 = v19;
  v22 = objc_msgSend(v21, "layer");
  objc_msgSend(v22, "setAllowsGroupBlending:", v19[v20]);

  v23 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton], "layer");
  objc_msgSend(v23, "setAllowsGroupBlending:", v19[v20]);

  objc_msgSend(*(id *)(*(_QWORD *)&v16[v18] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_titleLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)&v16[v18] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)&v16[v18] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_ordinalLabel), "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[v18]);
  v24 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v24, "setDelegate:", v16);
  objc_msgSend(v24, "addTarget:action:", v16, "handleTap");
  objc_msgSend(v16, "addGestureRecognizer:", v24);
  v25 = *(void **)&v16[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer];
  *(_QWORD *)&v16[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer] = v24;
  v26 = v24;

  objc_msgSend(v16, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraExtraLarge);
  return v16;
}

void sub_1000895BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  char *v6;
  char *v7;
  int v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  id v39;
  int v40;
  void *v41;
  double v42;
  double v43;
  int v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  void *v55;
  void (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  void *v96;
  _BYTE *v97;
  char v98;
  char *v99;
  double v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  char v107;
  __n128 v108;
  id v109;
  id v110;
  void *v111;
  void *v112;
  void *v113;
  uint64_t v114;
  void *v115;
  id v116;
  void *v117;
  void *v118;
  id v119;
  void *v120;
  void *v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  __n128 v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  double *v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  double v134;
  uint64_t v135;
  double v136;
  double v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  void (*v155)(char *, uint64_t, __n128);
  uint64_t v156;
  unsigned int v157;
  void (*v158)(char *, _QWORD, uint64_t);
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  v7 = v6;
  v149 = a6;
  v162 = a2;
  v166 = a1;
  v10 = a5;
  v11 = type metadata accessor for Artwork.Style(0, a2);
  v12 = __chkstk_darwin(v11);
  v148 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for Artwork.Crop(0, v12);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v15);
  v161 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v17);
  v160 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v19);
  v159 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v21);
  v154 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v24 = __chkstk_darwin(v23);
  v153 = (char *)&v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v24);
  v151 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v28 = (char *)&v144 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v29);
  v152 = (char *)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for TodayCard.Style(0);
  v31 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v34 = __chkstk_darwin(v33).n128_u64[0];
  v36 = (char *)&v144 - v35;
  v37 = v6[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_sizeCategory];
  v6[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_sizeCategory] = a5;
  if (v10 == 7)
  {
    v38 = v165;
    if (v37 == 7)
      goto LABEL_6;
  }
  else
  {
    v38 = v165;
    if (v37 != 7)
    {
      switch(v10)
      {
        case 6:
          if (v37 == 6)
            goto LABEL_6;
          break;
        case 5:
          if (v37 == 5)
            goto LABEL_6;
          break;
        case 4:
          if (v37 == 4)
            goto LABEL_6;
          break;
        default:
          if ((v37 - 7) <= 0xFFFFFFFC && v37 == v10)
            goto LABEL_6;
          break;
      }
    }
  }
  objc_msgSend(v6, "setNeedsLayout");
LABEL_6:
  v39 = objc_msgSend(v6, "traitCollection", v34);
  v40 = v10;
  v41 = v39;
  v42 = 12.0;
  v43 = 12.0;
  v44 = v40;
  if (v40 != 4)
  {
    v45 = PageGrid.horizontalDirectionalMargins.getter(v39);
    v43 = 20.0;
    v42 = v46 <= 20.0 ? v46 : 20.0;
    PageGrid.horizontalDirectionalMargins.getter(v45);
    if (v47 <= 20.0)
      v43 = v47;
  }
  v48 = NSDirectionalEdgeInsets.insetsWithLayoutDirection(_:)(objc_msgSend(v41, "layoutDirection"), 0.0, v42, 0.0, v43);
  v50 = v49;
  v52 = v51;
  v54 = v53;

  objc_msgSend(v6, "setLayoutMargins:", v48, v50, v52, v54);
  v55 = (void *)sub_10048CDFC(a4);
  objc_msgSend(v6, "setBackgroundColor:", v55);

  v56 = *(void (**)(_QWORD))(v31 + 104);
  v157 = enum case for TodayCard.Style.white(_:);
  v158 = (void (*)(char *, _QWORD, uint64_t))v56;
  v56(v36);
  v57 = sub_10000E99C((unint64_t *)&qword_1008103A0, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard.Style, (uint64_t)&protocol conformance descriptor for TodayCard.Style);
  dispatch thunk of RawRepresentable.rawValue.getter(&v171, v38, v57);
  v156 = v57;
  dispatch thunk of RawRepresentable.rawValue.getter(&v167, v38, v57);
  v58 = v172;
  v59 = v168;
  v164 = a4;
  if (v171 == v167 && v172 == v168)
  {
    v60 = swift_bridgeObjectRelease_n(v172, 2);
    v61 = 1;
  }
  else
  {
    v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v171, v172, v167, v168, 0);
    swift_bridgeObjectRelease(v58);
    v60 = swift_bridgeObjectRelease(v59);
    if ((v62 & 1) != 0)
      v61 = 1;
    else
      v61 = 2;
  }
  v155 = *(void (**)(char *, uint64_t, __n128))(v31 + 8);
  v155(v36, v38, v60);
  objc_msgSend(v7, "setOverrideUserInterfaceStyle:", v61);
  v63 = objc_msgSend(v7, "layer");
  objc_msgSend(v63, "setCornerRadius:", 14.0);

  v64 = objc_msgSend(v7, "layer");
  v65 = v64;
  v66 = 12;
  if (v44 == 6)
    v66 = 15;
  if (v7[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_isExpanded])
    v67 = 0;
  else
    v67 = v66;
  objc_msgSend(v64, "setMaskedCorners:", v67);

  v150 = OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView;
  v68 = (char *)*(id *)&v7[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView];
  v69 = TodayCardLockupOverlay.lockup.getter();
  v70 = v151;
  (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v28, enum case for OfferButtonPresenterViewAlignment.right(_:), v26);
  v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
  v72 = v153;
  v71(v153, 1, 1, v26);
  v73 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  v74 = (uint64_t)v152;
  AccessibilityConditional.init(value:axValue:)(v28, v72, v26, v73);
  v75 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
  v76 = type metadata accessor for OfferStyle(0);
  v77 = (uint64_t)v154;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v154, 1, 1, v76);
  v78 = type metadata accessor for OfferEnvironment(0);
  v79 = (uint64_t)v159;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v159, 1, 1, v78);
  v80 = type metadata accessor for OfferTint(0);
  v81 = (uint64_t)v160;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v160, 1, 1, v80);
  v82 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
  v83 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v161, 1, 1, v82);
  sub_10054F220(v69, v68, v74, v162, 0, 0, v77, v79, v81, v83);
  v68[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 0;
  sub_10028DF50();
  objc_msgSend(v68, "setNeedsLayout");
  sub_10028DF50();

  swift_release(v69);
  sub_100011088(v83, (uint64_t *)&unk_1007F7C10);
  sub_100011088(v81, (uint64_t *)&unk_1007F76F0);
  sub_100011088(v79, (uint64_t *)&unk_1007F7C20);
  v84 = v77;
  v85 = v150;
  sub_100011088(v84, (uint64_t *)&unk_1007F7700);
  sub_100011088(v74, (uint64_t *)&unk_1007F7710);
  v86 = *(void **)&v7[v85];
  sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v87 = v86;
  v88 = (void *)static UIColor.primaryText.getter();
  sub_1004BB518(v88);

  v89 = *(id *)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_ordinalLabel);
  v90 = (void *)static UIColor.secondaryText.getter(v89);
  objc_msgSend(v89, "setTextColor:", v90);

  v91 = *(id *)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel);
  v92 = (void *)static UIColor.secondaryText.getter(v91);
  objc_msgSend(v91, "setTextColor:", v92);

  v93 = objc_retain(*(id *)(*(_QWORD *)&v7[v85]
                          + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkTitleLabel));
  v94 = (void *)static UIColor.secondaryText.getter(v93);
  objc_msgSend(v93, "setTextColor:", v94);

  v95 = objc_retain(*(id *)(*(_QWORD *)&v7[v85]
                          + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkSubtitleLabel));
  v96 = (void *)static UIColor.secondaryText.getter(v95);
  objc_msgSend(v95, "setTextColor:", v96);

  v97 = *(_BYTE **)&v7[v85];
  v98 = v97[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_preferStackedLargeAXLayouts];
  v97[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_preferStackedLargeAXLayouts] = 1;
  if ((v98 & 1) == 0)
  {
    v99 = &v97[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_axMetrics];
    *(_QWORD *)&v100 = swift_beginAccess(&v97[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_axMetrics], &v171, 1, 0).n128_u64[0];
    v99[337] = 1;
    objc_msgSend(v97, "setNeedsLayout", v100);
  }
  v101 = v163;
  v102 = v165;
  v158(v163, v157, v165);
  v103 = v156;
  dispatch thunk of RawRepresentable.rawValue.getter(&v167, v102, v156);
  dispatch thunk of RawRepresentable.rawValue.getter(&v169, v102, v103);
  v104 = v168;
  v105 = v170;
  if (v167 == v169 && v168 == v170)
  {
    v106 = swift_bridgeObjectRelease_n(v168, 2);
    v155(v101, v102, v106);
LABEL_29:
    v109 = *(id *)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton);
    v110 = (id)static UIColor.appTint.getter();
    goto LABEL_36;
  }
  v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v167, v168, v169, v170, 0);
  swift_bridgeObjectRelease(v104);
  v108 = swift_bridgeObjectRelease(v105);
  v155(v101, v102, v108);
  if ((v107 & 1) != 0)
    goto LABEL_29;
  v111 = *(void **)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton);
  v112 = (void *)objc_opt_self(UIColor);
  v109 = v111;
  v110 = objc_msgSend(v112, "whiteColor");
LABEL_36:
  v113 = v110;
  objc_msgSend(v109, "setTintColor:", v110);

  v114 = *(_QWORD *)&v7[v85];
  v115 = *(void **)(v114 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel);
  if (v115)
  {
    v116 = v115;
    v117 = (void *)static UIColor.secondaryText.getter(v116);
    objc_msgSend(v116, "setTextColor:", v117);

    v114 = *(_QWORD *)&v7[v85];
  }
  v118 = *(void **)(v114 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel);
  if (v118)
  {
    v119 = v118;
    v120 = (void *)static UIColor.secondaryText.getter(v119);
    objc_msgSend(v119, "setTextColor:", v120);

    v121 = *(void **)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel);
    if (v121)
      objc_msgSend(v121, "setAccessibilityIgnoresInvertColors:", 1);
  }
  sub_10008A338();
  v122 = TodayCardLockupOverlay.lockup.getter();
  v124 = Lockup.icon.getter(v123);
  v125 = swift_release(v122);
  if (v124)
  {
    v126 = v145;
    v127 = Artwork.crop.getter(v125);
    v128 = Artwork.Crop.preferredContentMode.getter(v127);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v126, v147);
    v129 = (double *)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics);
    swift_beginAccess(v129, &v167, 0, 0);
    v130 = Artwork.config(_:mode:prefersLayeredImage:)(v128, 0, *v129, v129[1]);
    v131 = *(id *)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    v132 = v148;
    Artwork.style.getter(v131);
    v133 = ArtworkView.style.setter(v132);
    *(_QWORD *)&v134 = Artwork.contentMode.getter(v133).n128_u64[0];
    v136 = ArtworkLoaderConfig.size.getter(objc_msgSend(v131, "setContentMode:", v135, v134));
    v138 = ArtworkView.imageSize.setter(v136, v137);
    v139 = Artwork.backgroundColor.getter(v138);
    if (!v139)
      v139 = static UIColor.placeholderBackground.getter();
    ArtworkView.backgroundColor.setter(v139);

    v140 = *(void **)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    v141 = type metadata accessor for ArtworkView(0);
    v142 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v143 = v140;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v130, 2, 1, v143, v141, v142);
    swift_release(v124);
    swift_release(v130);
  }
  else
  {
    v143 = *(id *)(*(_QWORD *)&v7[v85] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
    ArtworkView.image.setter(0);
  }

}

void sub_10008A338()
{
  char *v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;

  v1 = objc_msgSend(v0, "overrideUserInterfaceStyle");
  v2 = &kCAFilterPlusD;
  if (v1 != (id)1)
    v2 = &kCAFilterPlusL;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView;
  v7 = objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView]+ OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkTitleLabel), "layer");
  objc_msgSend(v7, "setCompositingFilter:", v5);

  v8 = objc_msgSend(*(id *)(*(_QWORD *)&v0[v6] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel), "layer");
  objc_msgSend(v8, "setCompositingFilter:", v5);

  v9 = *(_QWORD *)&v0[v6];
  v10 = *(void **)(v9 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel);
  if (v10)
  {
    v11 = objc_msgSend(v10, "layer");
    objc_msgSend(v11, "setCompositingFilter:", v5);

    v9 = *(_QWORD *)&v0[v6];
  }
  v12 = objc_msgSend(*(id *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton)+ OBJC_IVAR____TtC22SubscribePageExtension11OfferButton_subtitleLabel), "layer");
  objc_msgSend(v12, "setCompositingFilter:", v5);

  v13 = objc_msgSend(*(id *)(*(_QWORD *)&v0[v6] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel), "layer");
  objc_msgSend(v13, "setCompositingFilter:", v5);

}

void sub_10008A4EC()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  double MinX;
  CGFloat v25;
  char *v26;
  void (*v27)(__n128);
  uint64_t v28;
  __n128 v29;
  char v30[24];
  objc_super v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v31.receiver = v0;
  v31.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v31, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "layoutMargins");
  v13 = CGRect.subtracting(insets:)(v9, v10, v11, v12, v2, v4, v6, v8);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView], "sizeThatFits:", v16, v18);
  v22 = v21;
  v23 = *(id *)&v0[v20];
  v32.origin.x = v13;
  v32.origin.y = v15;
  v32.size.width = v17;
  v32.size.height = v19;
  MinX = CGRectGetMinX(v32);
  v33.origin.x = v13;
  v33.origin.y = v15;
  v33.size.width = v17;
  v33.size.height = v19;
  v25 = CGRectGetMidY(v33) + v22 * -0.5;
  v34.origin.x = v13;
  v34.origin.y = v15;
  v34.size.width = v17;
  v34.size.height = v19;
  objc_msgSend(v23, "setFrame:", MinX, v25, CGRectGetWidth(v34), v22);

  v26 = &v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock], v30, 0, 0);
  v27 = *(void (**)(__n128))v26;
  if (*(_QWORD *)v26)
  {
    v28 = *((_QWORD *)v26 + 1);
    v29 = swift_retain(v28);
    v27(v29);
    sub_100019310((uint64_t)v27, v28);
  }
}

double sub_10008A6BC(double a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  __n128 v9;

  v3 = objc_msgSend(v1, "traitCollection");
  if (qword_1007F1928 != -1)
    swift_once(&qword_1007F1928, sub_10028C58C);
  sub_1001E61B8(v3, (uint64_t)&xmmword_100853160, 1);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v4) & 1) != 0)
  {
    v5.n128_u64[0] = 20.0;
    v6.n128_u64[0] = 20.0;
  }
  else
  {
    v5.n128_u64[0] = 13.0;
    v6.n128_u64[0] = 13.0;
  }
  static UIEdgeInsets.vertical(top:bottom:)(v5, v6);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v7) & 1) != 0)
  {
    v8.n128_u64[0] = 20.0;
    v9.n128_u64[0] = 20.0;
  }
  else
  {
    v8.n128_u64[0] = 13.0;
    v9.n128_u64[0] = 13.0;
  }
  static UIEdgeInsets.vertical(top:bottom:)(v8, v9);

  return a1;
}

void sub_10008AA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  _BYTE v38[40];
  _BYTE v39[24];
  _BYTE v40[24];

  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v6);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v39, 0, 0);
    v16 = swift_weakLoadStrong(v15);
    if (!v16)
    {

      return;
    }
    v17 = v16;
    sub_100011020(a3, (uint64_t)v38);
    v18 = sub_10000DF3C((uint64_t *)&unk_1007F52E0);
    v19 = type metadata accessor for TodayCard(0);
    v20 = swift_dynamicCast(&v37, v38, v18, v19, 6);
    if ((v20 & 1) != 0)
    {
      v21 = v37;
      v22 = TodayCard.overlay.getter(v20);
      v23 = swift_release(v21);
      if (v22)
      {
        v24 = type metadata accessor for TodayCardLockupOverlay(0, v23);
        if (swift_dynamicCastClass(v22, v24))
        {
          v25 = TodayCardLockupOverlay.lockup.getter();
          Lockup.impressionMetrics.getter();
          v26 = swift_release(v25);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v26) == 1)
          {

            swift_release(v22);
            swift_release(v17);
            sub_100011088((uint64_t)v8, (uint64_t *)&unk_1007F7740);
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
            objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView], "frame");
            v28 = v27;
            v30 = v29;
            v32 = v31;
            v34 = v33;
            v35 = objc_msgSend(v14, "superview");
            objc_msgSend(v14, "convertRect:toView:", v35, v28, v30, v32, v34);

            ImpressionsCalculator.addElement(_:at:)(v12);
            swift_release(v22);
            v36 = swift_release(v17);
            (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v36);
          }
          return;
        }
        swift_release(v22);
      }
    }

    swift_release(v17);
  }
}

uint64_t type metadata accessor for TodayCardChinSingleLockupView()
{
  return objc_opt_self(_TtC22SubscribePageExtension29TodayCardChinSingleLockupView);
}

void sub_10008AD7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  sub_1000895BC(*a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10008AD84(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_isExpanded) = result;
  return result;
}

uint64_t sub_10008AD94()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_wantsCardConsistentMargins);
}

uint64_t sub_10008ADA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100019310(v4, v5);
}

void sub_10008ADC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView)
                + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView);
  v2 = type metadata accessor for ArtworkView(0);
  v3 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v4 = v1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1, v2, v3);

}

void sub_10008AE58()
{
  uint64_t v0;
  id v1;

  v1 = objc_retain(*(id *)(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView)
                         + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
  ArtworkView.image.setter(0);

}

uint64_t sub_10008AEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = sub_10000DF3C((uint64_t *)&unk_1007F7C40);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10066FBA0;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_lockupView);
  *(_QWORD *)(v2 + 56) = type metadata accessor for TodayCardLockupView();
  *(_QWORD *)(v2 + 32) = v3;
  v4 = v3;
  return v2;
}

uint64_t sub_10008AF14()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_10008AF5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_10008AFB4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_10008B024;
}

void sub_10008B024(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_release(v4);
  }
  free(v3);
}

uint64_t sub_10008B090()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_100019320(*v1, v1[1]);
  return v2;
}

uint64_t sub_10008B0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100019310(v6, v7);
}

uint64_t (*sub_10008B144(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_10008B188(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  __int128 v10[2];

  v5 = swift_allocObject(&unk_100725430, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v2);
  sub_100011020(a1, (uint64_t)v10);
  v6 = swift_allocObject(&unk_100725458, 24, 7);
  swift_weakInit(v6 + 16, a2);
  sub_100010F3C(v10, (uint64_t)v9);
  v7 = swift_allocObject(&unk_100725480, 72, 7);
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  sub_100010F3C(v9, v7 + 32);
  return sub_10008B2F4;
}

uint64_t sub_10008B24C()
{
  return sub_10000E99C(&qword_1007F7638, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardLockupOverlay, (uint64_t)&protocol conformance descriptor for TodayCardOverlay);
}

uint64_t sub_10008B278()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008B29C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008B2C0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 4);
  return swift_deallocObject(v0, 72, 7);
}

void sub_10008B2F4()
{
  uint64_t v0;

  sub_10008AA18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void sub_10008B300()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  swift_weakInit(&v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsCalculator], 0);
  v1 = &v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_impressionsUpdateBlock];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_tapGestureRecognizer] = 0;
  v2 = &v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_isExpanded] = 0;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_wantsCardConsistentMargins] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/TodayCardChinSingleLockupView.swift", 58, 2, 49, 0);
  __break(1u);
}

BOOL sub_10008B3C4(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  id v7;
  _BYTE *v8;
  id v9;
  char v10;
  _BOOL8 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  CGPoint v19;
  CGRect v20;

  v2 = v1;
  objc_msgSend(a1, "locationInView:", v1);
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  if (v2[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_isExpanded] != 1
    || (objc_msgSend(v2, "bounds"), v19.x = v4, v19.y = v6, !CGRectContainsPoint(v20, v19)))
  {

    return 0;
  }
  if (v7)
  {
    sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    v8 = v2;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {

      return 0;
    }
    v13 = objc_opt_self(UIControl);
    v14 = swift_dynamicCastObjCClass(v9, v13);

    if (v14)
      return 0;
  }
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler];
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension29TodayCardChinSingleLockupView_clickActionHandler + 8];
  v11 = v15 != 0;
  if (v15)
  {
    v17 = swift_allocObject(&unk_1007254A8, 32, 7);
    *(_QWORD *)(v17 + 16) = v15;
    *(_QWORD *)(v17 + 24) = v16;
    v18 = sub_100030368;
  }
  else
  {
    v18 = 0;
    v17 = 0;
  }
  sub_100019320(v15, v16);
  sub_100019310((uint64_t)v18, v17);
  return v11;
}

uint64_t sub_10008B550()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008B574(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = &unk_100672C28;
  v2[2] = &unk_100672C40;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + 96);
}

uint64_t sub_10008B5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *Strong;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  Class isa;
  id v29;
  uint64_t ObjectType;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  id v38;
  uint64_t v39;
  _BYTE v40[24];

  v39 = a2;
  v9 = sub_10000DF3C(&qword_1007F5520);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - v20;
  a1 += 16;
  swift_beginAccess(a1, v40, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v23 = Strong;
    v24 = objc_msgSend(Strong, "collectionView");

    if (v24)
    {
      v25 = objc_msgSend(v24, "indexPathForItemAtPoint:", a4, a5);
      if (v25)
      {
        v26 = v25;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v25);

        v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v27(v11, v18, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v27(v21, v11, v12);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v29 = objc_msgSend(v24, "cellForItemAtIndexPath:", isa);
          v38 = v29;

          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v21, v12);
          ObjectType = swift_getObjectType();
          v37 = (void (*)(uint64_t, char *, uint64_t))v27;
          v31 = ObjectType;
          v32 = v29;
          v33 = dispatch thunk of FlowPreviewablePresenter.flowPreviewBackgroundColor(at:)(v21, v31, v39);

          (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
          v37(a3, v15, v12);
          v34 = type metadata accessor for PreviewItem(0);
          *(_QWORD *)(a3 + *(int *)(v34 + 20)) = v38;
          *(_QWORD *)(a3 + *(int *)(v34 + 24)) = v33;
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a3, 0, 1, v34);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }

      sub_100011088((uint64_t)v11, &qword_1007F5520);
    }
  }
  v36 = type metadata accessor for PreviewItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a3, 1, 1, v36);
}

uint64_t sub_10008B8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE v28[16];
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = sub_10000DF3C((uint64_t *)&unk_1007F7940);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v28[-v12];
  v14 = v3 + qword_1007F7758;
  Strong = swift_unknownObjectWeakLoadStrong(v14);
  if (Strong)
  {
    v16 = Strong;
    v17 = *(_QWORD *)(v14 + 8);
    ObjectType = swift_getObjectType();
    dispatch thunk of FlowPreviewablePresenter.flowPreviewDestinationForItem(at:)(a1, ObjectType, v17);
    v19 = dispatch thunk of FlowPreviewablePresenter.actionPresenterView.getter(ObjectType, v17);
    if (v19)
    {
      v20 = v19;
      *((_QWORD *)&v30 + 1) = swift_getObjectType();
      *(_QWORD *)&v29 = v20;
    }
    else
    {
      v29 = 0u;
      v30 = 0u;
    }
    v23 = dispatch thunk of FlowPreviewablePresenter.flowPreviewActionsConfiguration(at:sender:)(a1, &v29, ObjectType, v17);
    sub_100011088((uint64_t)&v29, &qword_1007F6E90);
    if (v23)
    {
      v24 = swift_retain(v23);
      v25 = FlowPreviewActionsConfiguration.actions.getter(v24);
      __chkstk_darwin(v25);
      *(_QWORD *)&v28[-32] = v23;
      *(_QWORD *)&v28[-24] = v4;
      *(_QWORD *)&v28[-16] = a2;
      v27 = sub_10008EE10(v26, sub_100091188);
      swift_release(v23);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v27 = _swiftEmptyArrayStorage;
    }
    sub_1000194E4((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1007F7940);
    FlowPreview.init(destination:actions:)(v10, v27);
    swift_release(v23);
    swift_unknownObjectRelease(v16);
    return sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F7940);
  }
  else
  {
    v21 = type metadata accessor for FlowPreview(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
  }
}

uint64_t sub_10008BB08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;

  v2 = type metadata accessor for FlowPreviewDestination.ContentType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000DF3C((uint64_t *)&unk_1007F7940);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowPreviewDestination(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  FlowPreview.destination.getter(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100011088((uint64_t)v9, (uint64_t *)&unk_1007F7940);
    return 0;
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
    FlowPreviewDestination.contentType.getter(v16);
    v17 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v17 == enum case for FlowPreviewDestination.ContentType.source(_:))
    {
      sub_10008D950(a1);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return 0;
    }
    else if (v17 == enum case for FlowPreviewDestination.ContentType.flowDestination(_:))
    {
      sub_10008D090();
      v15 = v18;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
  }
  return v15;
}

UIMenu sub_10008BD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  UIMenuElementSize v5;
  uint64_t v6;
  UIMenuElementSize preferredElementSize;
  Swift::String v8;
  uint64_t v10;
  uint64_t v11;
  Swift::OpaquePointer v12;
  UIImage_optional v13;

  v0 = ((uint64_t (*)(void))FlowPreview.actions.getter)();
  v1 = v0;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
  }
  else
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = swift_bridgeObjectRelease(v1);
  if (!v2)
    return 0;
  v4 = FlowPreview.actions.getter(v3);
  v5 = v4;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v10 = v4;
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    v11 = sub_100019574(0, &qword_1007F7A10, UIMenuElement_ptr);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v10, v11);
  }
  else
  {
    swift_bridgeObjectRetain(v4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
    sub_100019574(0, &qword_1007F7A10, UIMenuElement_ptr);
    preferredElementSize = v5;
  }
  swift_bridgeObjectRelease(v5);
  sub_100019574(0, &qword_1007F7A18, UIMenu_ptr);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v13.value.super.isa = 0;
  v13.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v13, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v12);
}

id sub_10008BE5C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_10008EF98(v4);

  return v6;
}

uint64_t sub_10008BEA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Strong;
  void *v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  __n128 v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;

  v2 = type metadata accessor for ActionRunner.Origin(0);
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  __chkstk_darwin(v2);
  v67 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C((uint64_t *)&unk_1007F7740);
  __chkstk_darwin(v4);
  v71 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetrics(0, v6);
  __chkstk_darwin(v7);
  v70 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000DF3C((uint64_t *)&unk_1007F7940);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for FlowPreviewDestination(0, v10);
  v13 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v72 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000DF3C(&qword_1007F7938);
  __chkstk_darwin(v19);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FlowPreview(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v18, a1, v15, v24);
  v27 = *(void **)(a1 + *(int *)(type metadata accessor for PreviewItem(0) + 20));
  if (v27)
  {
    *((_QWORD *)&v76 + 1) = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    *(_QWORD *)&v75 = v27;
  }
  else
  {
    v75 = 0u;
    v76 = 0u;
  }
  v28 = v27;
  sub_10008B8DC((uint64_t)v18, (uint64_t)&v75, (uint64_t)v21);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_100011088((uint64_t)&v75, &qword_1007F6E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    v29 = &qword_1007F7938;
    v30 = (uint64_t)v21;
    return sub_100011088(v30, v29);
  }
  v31.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v23 + 32))(v26, v21, v22);
  FlowPreview.destination.getter(v31);
  v32 = v13;
  v33 = v73;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v73) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    v29 = (uint64_t *)&unk_1007F7940;
    v30 = (uint64_t)v12;
    return sub_100011088(v30, v29);
  }
  v35 = v72;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v72, v12, v33);
  v37 = FlowPreviewDestination.flowAction.getter(v36);
  if (!v37)
  {
    v56 = *(void (**)(char *, uint64_t))(v13 + 8);
    v57 = v35;
LABEL_26:
    v56(v57, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  }
  v38 = v37;
  v77 = 0;
  v75 = 0u;
  v76 = 0u;
  v66 = Action.title.getter((__n128)0);
  v40 = v39;
  v41 = swift_retain(v38);
  v42 = v70;
  Action.actionMetrics.getter(v41);
  swift_release(v38);
  v43 = swift_retain(v38);
  v44 = v71;
  Action.impressionMetrics.getter(v43);
  swift_release(v38);
  v45 = type metadata accessor for BlankAction(0);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  v46 = BlankAction.init(id:title:artwork:presentationStyle:actionMetrics:impressionMetrics:)(&v75, v66, v40, 0, 0, v42, v44);
  v47 = v74 + qword_1007F7760;
  Strong = swift_unknownObjectWeakLoadStrong(v74 + qword_1007F7760);
  if (!Strong)
  {
LABEL_21:
    v58 = swift_unknownObjectWeakLoadStrong(v47);
    if (v58 && (v59 = (void *)v58, v60 = UIResponder.nearestActionRunner.getter(), v59, v60))
    {
      FlowPreviewDestination.sender.getter(&v75, v61);
      v62 = *(_QWORD *)(v74 + qword_1007F7768);
      v63 = v67;
      (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v67, enum case for ActionRunner.Origin.userInitiated(_:), v69);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v46, &v75, v63, v62);
      swift_release(v38);
      swift_release(v46);
      v64 = swift_release(v60);
      (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v63, v69, v64);
      sub_100011088((uint64_t)&v75, &qword_1007F6E90);
    }
    else
    {
      swift_release(v38);
      swift_release(v46);
    }
    v56 = *(void (**)(char *, uint64_t))(v32 + 8);
    v57 = v72;
    goto LABEL_26;
  }
  v49 = (void *)Strong;
  ObjectType = swift_getObjectType();
  v51 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ActionPresenterView);
  if (v51)
    v52 = v51;
  else
    v52 = 0;
  if (v51)
    v53 = v49;
  else
    v53 = 0;
  if (!v53)
  {

    v33 = v73;
    goto LABEL_21;
  }
  v71 = (char *)swift_getObjectType();
  v74 = v32;
  v54 = v72;
  FlowPreviewDestination.sender.getter(&v75, v55);
  dispatch thunk of ActionPresenterView.perform(action:sender:)(v46, &v75, v71, v52);
  swift_release(v38);

  swift_release(v46);
  sub_100011088((uint64_t)&v75, &qword_1007F6E90);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v54, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v26, v22);
}

void sub_10008C434(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  sub_10008C44C(a1, a2, a3, a4, a5, sub_10008F608);
}

void sub_10008C440(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  sub_10008C44C(a1, a2, a3, a4, a5, (void (*)(id, uint64_t))sub_10008F7D4);
}

void sub_10008C44C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain(a5);
  v12 = a1;
  a6(v10, a5);

  swift_unknownObjectRelease(a5);
}

void sub_10008C4D4(void *a1, void (*a2)(void))
{
  id v3;

  if (a1)
  {
    if (a2)
    {
      v3 = a1;
      a2();

    }
  }
}

void sub_10008C524(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  swift_unknownObjectRetain(a5);
  v10 = a1;
  sub_10008F998(v8, a5);

  swift_unknownObjectRelease(a5);
}

id sub_10008C5A8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_10008FDC4(v6);

  return v9;
}

id sub_10008C604(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;
  id v11;

  v8 = a3;
  v9 = a4;
  swift_unknownObjectRetain(a5);
  v10 = a1;
  v11 = sub_100090034(v8);

  swift_unknownObjectRelease(a5);
  return v11;
}

uint64_t sub_10008C67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v16;

  v9 = FlowPreviewActionsConfiguration.offerActionIndex.getter();
  v12 = (v10 & 1) == 0 && v9 == a1;
  v13 = FlowPreviewActionsConfiguration.destructiveActionIndex.getter(v9);
  v16 = (v14 & 1) == 0 && v13 == a1;
  return sub_10008C6F0(a2, a3, v12, v16, a5);
}

uint64_t sub_10008C6F0(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  char v30;
  uint64_t v31;
  _BYTE v32[32];

  v6 = v5;
  v11 = v5 + qword_1007F7758;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + qword_1007F7758);
  if (!Strong)
    return 0;
  v13 = Strong;
  v14 = *(_QWORD *)(v11 + 8);
  ObjectType = swift_getObjectType();
  v16 = dispatch thunk of FlowPreviewablePresenter.actionPresenterView.getter(ObjectType, v14);
  v31 = v17;
  v18 = swift_unknownObjectRelease(v13);
  if (!v16)
    return 0;
  if ((a3 & 1) != 0)
  {
    v19 = FlowPreviewActionsConfiguration.offerDisplayProperties.getter(v18);
    if ((a4 & 1) != 0)
      v20 = 2;
    else
      v20 = 0;
    sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
    v21 = *(_QWORD *)(v6 + qword_1007F7768);
    sub_1000194E4(a5, (uint64_t)v32, &qword_1007F6E90);
    swift_retain(v21);
    swift_retain(a1);
    return sub_10008C8F4(v22, v16, v31, v19, v20, v21, (uint64_t)v32);
  }
  else
  {
    if ((a4 & 1) != 0)
      v25 = 2;
    else
      v25 = 0;
    v26 = sub_100019574(0, (unint64_t *)&qword_1007FC2A0, UIAction_ptr);
    sub_1000194E4(a5, (uint64_t)v32, &qword_1007F6E90);
    v27 = swift_getObjectType();
    swift_retain(a1);
    v28 = swift_unknownObjectRetain(v16);
    v23 = (void *)sub_10008E9E0(a1, v16, v25, (uint64_t)v32, v28, v26, v27, v31);
    if (sub_1000902A4(a1, v29))
    {
      v30 = sub_10008CCCC(a1);
      swift_unknownObjectRelease(v16);
      if ((v30 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      swift_unknownObjectRelease(v16);
    }
  }
  return (uint64_t)v23;
}

uint64_t sub_10008C8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  char *v38;
  char v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t, __n128);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v64 = a7;
  v62 = a3;
  v63 = a5;
  v11 = sub_10000DF3C((uint64_t *)&unk_1007F79E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowPreviewOfferPresenter(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  __chkstk_darwin(v17);
  v19 = (char *)&v52 - v18;
  swift_retain(a4);
  swift_retain(a1);
  v20 = swift_retain(a6);
  FlowPreviewOfferPresenter.init(displayProperties:offerAction:asPartOf:)(a4, a1, a6, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_release(a1);
    swift_unknownObjectRelease(a2);
    swift_release(a4);
    swift_release(a6);
    sub_100011088(v64, &qword_1007F6E90);
    sub_100011088((uint64_t)v13, (uint64_t *)&unk_1007F79E0);
    return 0;
  }
  v59 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a4;
  v61 = a2;
  v22 = *(uint64_t (**)(char *, char *, uint64_t))(v15 + 32);
  v23 = v22(v19, v13, v14);
  v24 = FlowPreviewOfferPresenter.offerTitles.getter(v23);
  if (v25 == 1)
  {
    swift_release(a1);
    swift_unknownObjectRelease(v61);
    swift_release(v60);
    swift_release(a6);
LABEL_10:
    sub_100011088(v64, &qword_1007F6E90);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    return 0;
  }
  v28 = v24;
  v29 = v26;
  v56 = (void (*)(uint64_t, char *, uint64_t))v22;
  v57 = v27;
  v58 = v25;
  swift_bridgeObjectRetain(v25);
  if (!v58)
  {
    swift_release(a1);
    swift_unknownObjectRelease(v61);
    swift_release(v60);
    swift_release(a6);
    sub_100091194(v28, 0, v29, v57);
    goto LABEL_10;
  }
  v54 = v28;
  v55 = v29;
  v31 = v19;
  v52 = a1;
  v32 = Action.artwork.getter(v30);
  v53 = a6;
  if (v32)
  {
    v34 = v32;
    v35 = dispatch thunk of Artwork.isSystemImage.getter(v32);
    v36 = v60;
    if ((v35 & 1) != 0)
    {
      v37 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v34, 0, 1);
      v38 = v59;
    }
    else
    {
      v39 = dispatch thunk of Artwork.isBundleImage.getter();
      v38 = v59;
      if ((v39 & 1) != 0)
        v37 = sub_100485648(v34, 0);
      else
        v37 = 0;
    }
    v33 = swift_release(v34);
  }
  else
  {
    v37 = 0;
    v38 = v59;
    v36 = v60;
  }
  v40 = v15;
  v41 = *(void (**)(char *, char *, uint64_t, __n128))(v15 + 16);
  v42 = v31;
  v41(v38, v31, v14, v33);
  v43 = *(unsigned __int8 *)(v40 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = (v16 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = swift_allocObject(&unk_1007256B0, v45 + 16, v43 | 7);
  v56(v46 + v44, v38, v14);
  v47 = (_QWORD *)(v46 + v45);
  v49 = v61;
  v48 = v62;
  *v47 = v61;
  v47[1] = v48;
  swift_unknownObjectRetain(v49);
  v50 = v58;
  swift_bridgeObjectRelease(v58);
  v21 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v54, v50, 0, 0, v37, 0, 0, v55, v57, v63, 0, sub_10009123C, v46);
  swift_release(v52);
  swift_unknownObjectRelease(v49);
  swift_release(v36);
  swift_release(v53);
  sub_100011088(v64, &qword_1007F6E90);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v14);
  return v21;
}

uint64_t sub_10008CCCC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __n128 v40;
  __n128 v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[2];

  v46 = type metadata accessor for LegacyAppState(0);
  v44 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v45 = type metadata accessor for AdamId(0);
  v14 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FlowAction(0);
  v18 = swift_dynamicCastClass(a1, v17);
  if (v18)
  {
    v19 = v18;
    memset(v48, 0, sizeof(v48));
    swift_retain(a1);
    sub_10011BB90(v19, (uint64_t)v48, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100011088((uint64_t)v6, &qword_1007F7950);
    }
    else
    {
      sub_10009055C((uint64_t)v6, (uint64_t)v13, type metadata accessor for FlowDestination);
      sub_10009055C((uint64_t)v13, (uint64_t)v10, type metadata accessor for FlowDestination);
      if (swift_getEnumCaseMultiPayload(v10, v7) == 24)
      {
        v20 = sub_10000DF3C(&qword_1007F79C8);
        v21 = v45;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, &v10[*(int *)(v20 + 48)], v45);
        v22 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v10, v22);
        v23 = v47;
        goto LABEL_9;
      }
      sub_10002F0D4((uint64_t)v10, type metadata accessor for FlowDestination);
    }
  }
  v24 = type metadata accessor for WriteReviewAction(0);
  if (!swift_dynamicCastClass(a1, v24))
  {
    v35 = 0;
    return v35 & 1;
  }
  v25 = swift_retain(a1);
  WriteReviewAction.adamId.getter(v25);
  swift_release(a1);
  v23 = v47;
  v21 = v45;
LABEL_9:
  v26 = (uint64_t *)(*(_QWORD *)(v23 + qword_1007F7768) + qword_100854060);
  v27 = *v26;
  if (*v26)
  {
    v28 = v26[1];
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v27);
    v30 = dispatch thunk of AppStateController.stateMachine(forApp:)(v16, ObjectType, v28);
    v32 = v31;
    v33 = swift_getObjectType();
    dispatch thunk of AppStateMachine.currentState.getter(v33, v32);
    v34 = swift_unknownObjectRelease(v30);
    v35 = LegacyAppState.hasBeenPurchased.getter(v34);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v3, v46);
    Strong = swift_unknownObjectWeakLoadStrong(v23 + qword_1007F7758);
    if (Strong)
    {
      v37 = Strong;
      v38 = type metadata accessor for ProductPresenter(0);
      if (swift_dynamicCastClass(v37, v38))
      {
        v39 = dispatch thunk of ProductPresenter.alwaysAllowReviews.getter();
        swift_unknownObjectRelease(v27);
        v40 = swift_unknownObjectRelease(v37);
        (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v21, v40);
        v35 |= v39;
        return v35 & 1;
      }
      swift_unknownObjectRelease(v37);
    }
    v41 = swift_unknownObjectRelease(v27);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v21, v41);
    return v35 & 1;
  }
  v43 = sub_10000DF3C(&qword_1007FDEA0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v43);
  __break(1u);
  return result;
}

void sub_10008D090()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  void *Strong;
  void *v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  void *v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  void (*v53)(void *, uint64_t, uint64_t);
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  int v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD v113[3];
  uint64_t v114;
  uint64_t v115;

  v100 = *v0;
  v99 = swift_isaMask;
  v1 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for FlowPresentationContext(0);
  v103 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = v4;
  v106 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v109 = (uint64_t)&v91 - v6;
  v7 = type metadata accessor for FlowPresentationHints(0);
  v101 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v104 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v8;
  __chkstk_darwin(v9);
  v108 = (uint64_t)&v91 - v10;
  v11 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowDestination(0);
  v112 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v97 = v15;
  v98 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v111 = (uint64_t *)((char *)&v91 - v17);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F7940);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FlowPreviewDestination(0, v19);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  FlowPreview.destination.getter(v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    v27 = (uint64_t *)&unk_1007F7940;
    v28 = (uint64_t)v21;
LABEL_6:
    sub_100011088(v28, v27);
    return;
  }
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v26, v21, v22);
  v30 = FlowPreviewDestination.flowAction.getter(v29);
  v31 = v30;
  if (!v30)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    return;
  }
  v32 = swift_retain(v30);
  FlowPreviewDestination.sender.getter(v113, v32);
  sub_10011BB90(v31, (uint64_t)v113, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v13, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    swift_release(v31);
    v27 = &qword_1007F7950;
    v28 = (uint64_t)v13;
    goto LABEL_6;
  }
  v33 = (void (*)(_QWORD, _QWORD, _QWORD))v111;
  sub_10009055C((uint64_t)v13, (uint64_t)v111, type metadata accessor for FlowDestination);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v110 + qword_1007F7760);
  if (!Strong)
  {
    swift_release(v31);
    sub_10002F0D4((uint64_t)v33, type metadata accessor for FlowDestination);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    return;
  }
  v35 = Strong;
  v36 = objc_msgSend(Strong, "traitCollection");
  v37 = swift_retain(v31);
  v38 = FlowAction.presentationContext.getter(v37);
  FlowAction.animationBehavior.getter(v38);
  v96 = v31;
  swift_release(v31);
  v39 = (void (*)(_QWORD, _QWORD, _QWORD))v111;
  v95 = v36;
  sub_10059EDA8(v109);
  v93 = v35;
  v40 = v35;
  sub_10050AC30((uint64_t)v113);
  v41 = v40;

  v42 = v114;
  if (!v114)
    goto LABEL_49;
  v43 = v115;
  sub_100011064(v113, v114);
  v44 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v3, 1, 1, v44);
  v45 = v39;
  v46 = (void *)(*(uint64_t (**)(void (*)(_QWORD, _QWORD, _QWORD), _QWORD, _QWORD, char *, uint64_t, uint64_t))(v43 + 8))(v39, 0, 0, v3, v42, v43);
  sub_100011088((uint64_t)v3, (uint64_t *)&unk_1008086D0);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v113);
  v94 = sub_10051CC14();
  ObjectType = swift_getObjectType();
  v48 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowPreviewingViewController);
  if (v48)
    v49 = v48;
  else
    v49 = 0;
  if (v48)
    v50 = v46;
  else
    v50 = 0;
  if (v50)
  {
    v51 = swift_getObjectType();
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    v92 = v46;
    v52(1, v51, v49);
    v53 = *(void (**)(void *, uint64_t, uint64_t))(v49 + 32);
    v54 = v41;
    v53(v93, v51, v49);
    v45 = (void (*)(_QWORD, _QWORD, _QWORD))v111;

  }
  v55 = objc_opt_self(UINavigationController);
  v56 = swift_dynamicCastObjCClass(v46, v55);
  if (!v56)
  {
    swift_release(v96);
    goto LABEL_36;
  }
  v57 = (void *)v56;
  v58 = v46;
  v59 = objc_msgSend(v57, "viewControllers");
  v60 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
  v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v60);

  if (!((unint64_t)v61 >> 62))
  {
    v62 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v62)
      goto LABEL_21;
LABEL_43:
    swift_release(v96);

    v74 = swift_bridgeObjectRelease(v61);
    goto LABEL_44;
  }
  if (v61 < 0)
    v75 = v61;
  else
    v75 = v61 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v61);
  v62 = _CocoaArrayWrapper.endIndex.getter(v75);
  swift_bridgeObjectRelease(v61);
  if (!v62)
    goto LABEL_43;
LABEL_21:
  v63 = v62 - 1;
  if (__OFSUB__(v62, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if ((v61 & 0xC000000000000001) != 0)
  {
LABEL_46:
    v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v63, v61);
    goto LABEL_26;
  }
  if ((v63 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v63 < *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v64 = *(id *)(v61 + 8 * v63 + 32);
LABEL_26:
    v65 = v64;
    swift_bridgeObjectRelease(v61);
    v66 = swift_getObjectType();
    v67 = swift_conformsToProtocol2(v66, &protocol descriptor for FlowPreviewingViewController);
    if (v67)
      v68 = v67;
    else
      v68 = 0;
    if (v67)
      v69 = v65;
    else
      v69 = 0;
    if (!v69)
    {

      swift_release(v96);
      goto LABEL_37;
    }
    v70 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(1, v70, v68);
    v92 = *(id *)(v68 + 32);
    v71 = v41;
    v41 = v58;
    v72 = v71;
    v73 = v70;
    v45 = (void (*)(_QWORD, _QWORD, _QWORD))v111;
    ((void (*)(void *, uint64_t, uint64_t))v92)(v93, v73, v68);
    swift_release(v96);

LABEL_36:
LABEL_37:

LABEL_44:
    v100 &= v99;
    (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v26, v22, v74);
    v99 = swift_allocObject(&unk_100725638, 24, 7);
    swift_unknownObjectWeakInit(v99 + 16, v110);
    v76 = v98;
    sub_10009055C((uint64_t)v45, v98, type metadata accessor for FlowDestination);
    v77 = v104;
    sub_10009055C(v108, v104, type metadata accessor for FlowPresentationHints);
    v78 = v103;
    v111 = *(_QWORD **)(v103 + 32);
    v80 = v106;
    v79 = v107;
    ((void (*)(char *, uint64_t, uint64_t))v111)(v106, v109, v107);
    v81 = *(unsigned __int8 *)(v112 + 80);
    v82 = (v81 + 40) & ~v81;
    v83 = *(unsigned __int8 *)(v101 + 80);
    v84 = (v97 + v83 + v82) & ~v83;
    v85 = *(unsigned __int8 *)(v78 + 80);
    v86 = (v102 + v85 + v84) & ~v85;
    v87 = v86 + v105;
    v88 = (_QWORD *)swift_allocObject(&unk_100725660, v86 + v105 + 1, v81 | v83 | v85 | 7);
    v89 = v100;
    v88[2] = *(_QWORD *)(v100 + 80);
    v90 = v99;
    v88[3] = *(_QWORD *)(v89 + 88);
    v88[4] = v90;
    sub_10009055C(v76, (uint64_t)v88 + v82, type metadata accessor for FlowDestination);
    sub_10009055C(v77, (uint64_t)v88 + v84, type metadata accessor for FlowPresentationHints);
    ((void (*)(char *, char *, uint64_t))v111)((char *)v88 + v86, v80, v79);
    *((_BYTE *)v88 + v87) = v94 & 1;
    return;
  }
  __break(1u);
LABEL_49:
  __break(1u);
}

uint64_t sub_10008D950(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD v55[4];

  v54 = a1;
  v46 = *v1;
  v45 = swift_isaMask;
  v47 = type metadata accessor for FlowPresentationHints(0);
  v49 = *(_QWORD *)(v47 - 8);
  v2 = *(_QWORD *)(v49 + 64);
  __chkstk_darwin(v47);
  v50 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v53 = (char *)&v43 - v4;
  v5 = sub_10000DF3C(&qword_1007F7950);
  __chkstk_darwin(v5);
  v52 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for FlowDestination(0);
  v7 = *(_QWORD *)(v51 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v51);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F7940);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FlowPreviewDestination(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  FlowPreview.destination.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v21 = (uint64_t *)&unk_1007F7940;
    v22 = (uint64_t)v15;
  }
  else
  {
    v43 = v11;
    v44 = v8;
    v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v23 = (uint64_t)v53;
    v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    v25 = FlowPreviewDestination.flowAction.getter(v24);
    if (!v25)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      return 0;
    }
    v26 = v25;
    v27 = swift_retain(v25);
    FlowPreviewDestination.sender.getter(v55, v27);
    v28 = v52;
    sub_10011BB90(v26, (uint64_t)v55, v52);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v28, 1, v51) != 1)
    {
      v51 = v45 & v46;
      v30 = (uint64_t)v43;
      sub_10009055C(v28, (uint64_t)v43, type metadata accessor for FlowDestination);
      v32 = FlowAction.presentationContext.getter(v31);
      FlowAction.animationBehavior.getter(v32);
      v33 = swift_release(v26);
      (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v20, v16, v33);
      v34 = swift_allocObject(&unk_100725638, 24, 7);
      swift_unknownObjectWeakInit(v34 + 16, v48);
      v35 = v54;
      sub_10009055C(v30, v54, type metadata accessor for FlowDestination);
      v36 = v50;
      sub_10009055C(v23, v50, type metadata accessor for FlowPresentationHints);
      v37 = *(unsigned __int8 *)(v7 + 80);
      v38 = (v37 + 40) & ~v37;
      v39 = *(unsigned __int8 *)(v49 + 80);
      v40 = (v44 + v39 + v38) & ~v39;
      v41 = (_QWORD *)swift_allocObject(&unk_100725688, v40 + v2, v37 | v39 | 7);
      v42 = v51;
      v41[2] = *(_QWORD *)(v51 + 80);
      v41[3] = *(_QWORD *)(v42 + 88);
      v41[4] = v34;
      sub_10009055C(v35, (uint64_t)v41 + v38, type metadata accessor for FlowDestination);
      sub_10009055C(v36, (uint64_t)v41 + v40, type metadata accessor for FlowPresentationHints);
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    swift_release(v26);
    v21 = &qword_1007F7950;
    v22 = v28;
  }
  sub_100011088(v22, v21);
  return 0;
}

void sub_10008DD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v7 = sub_10000DF3C((uint64_t *)&unk_1008086D0);
  __chkstk_darwin(v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = swift_unknownObjectWeakLoadStrong(Strong + qword_1007F7760);
    if (v12)
    {
      v13 = (void *)v12;
      sub_10050AC30((uint64_t)v17);

      v14 = v18;
      if (v18)
      {
        v15 = v19;
        sub_100011064(v17, v18);
        v16 = type metadata accessor for ReferrerData(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
        (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v15 + 16))(a3, a4, 0, 0, v9, v14, v15);

        sub_100011088((uint64_t)v9, (uint64_t *)&unk_1008086D0);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v17);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

void sub_10008DE8C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t Strong;
  char *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  char v63[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v63, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (char *)Strong;
    ObjectType = swift_getObjectType();
    v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowPreviewingViewController);
    if (v13)
      v14 = v13;
    else
      v14 = 0;
    if (v13)
      v15 = a1;
    else
      v15 = 0;
    if (v15)
    {
      v16 = swift_getObjectType();
      v17 = *(void (**)(uint64_t, uint64_t))(v14 + 40);
      v18 = a1;
      v17(v16, v14);
    }
    else
    {
      v19 = a1;
    }
    v20 = objc_opt_self(UINavigationController);
    v21 = swift_dynamicCastObjCClass(a1, v20);
    if (!v21)
    {
LABEL_33:
      v37 = swift_unknownObjectWeakLoadStrong(&v11[qword_1007F7760]);
      if (v37)
      {
        v38 = (void *)v37;
        sub_10050AC30((uint64_t)v60);

        v39 = v61;
        if (!v61)
        {
LABEL_77:
          __break(1u);
          return;
        }
        v40 = v62;
        sub_100011064(v60, v61);
        (*(void (**)(id, uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 32))(a1, a5, a6 & 1, v39, v40);
        _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v60);
      }
      v41 = swift_getObjectType();
      v42 = swift_conformsToProtocol2(v41, &protocol descriptor for FlowPreviewingViewController);
      if (v42)
        v43 = v42;
      else
        v43 = 0;
      if (v42)
        v44 = a1;
      else
        v44 = 0;
      if (v44)
      {
        v45 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v43 + 48))(v45, v43);
      }
      v46 = objc_opt_self(UINavigationController);
      v47 = swift_dynamicCastObjCClass(a1, v46);
      if (v47)
      {
        v48 = (void *)v47;
        a1 = a1;
        v49 = objc_msgSend(v48, "viewControllers");
        v50 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
        v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

        if ((unint64_t)v26 >> 62)
        {
          if (v26 < 0)
            v59 = v26;
          else
            v59 = v26 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v26);
          v51 = _CocoaArrayWrapper.endIndex.getter(v59);
          swift_bridgeObjectRelease(v26);
          if (v51)
            goto LABEL_47;
        }
        else
        {
          v51 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v51)
          {
LABEL_47:
            v28 = v51 - 1;
            if (!__OFSUB__(v51, 1))
            {
              if ((v26 & 0xC000000000000001) == 0)
              {
                if ((v28 & 0x8000000000000000) == 0)
                {
                  if (v28 < *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    v52 = *(id *)(v26 + 8 * v28 + 32);
LABEL_52:
                    v53 = v52;

                    swift_bridgeObjectRelease(v26);
                    v54 = swift_getObjectType();
                    v55 = swift_conformsToProtocol2(v54, &protocol descriptor for FlowPreviewingViewController);
                    if (v55)
                      v56 = v55;
                    else
                      v56 = 0;
                    if (v55)
                      v57 = v53;
                    else
                      v57 = 0;
                    if (v57)
                    {
                      v58 = swift_getObjectType();
                      (*(void (**)(uint64_t, uint64_t))(v56 + 48))(v58, v56);
                    }
                    a1 = v53;
                    goto LABEL_67;
                  }
                  goto LABEL_76;
                }
LABEL_75:
                __break(1u);
LABEL_76:
                __break(1u);
                goto LABEL_77;
              }
LABEL_73:
              v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v26);
              goto LABEL_52;
            }
            __break(1u);
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
        }
        swift_bridgeObjectRelease(v26);

      }
      else
      {

      }
LABEL_67:

      return;
    }
    v22 = (void *)v21;
    v23 = a1;
    v24 = objc_msgSend(v22, "viewControllers");
    v25 = sub_100019574(0, (unint64_t *)&qword_1007F5540, UIViewController_ptr);
    v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v36 = v26;
      else
        v36 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v26);
      v27 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
LABEL_14:
        v28 = v27 - 1;
        if (__OFSUB__(v27, 1))
        {
          __break(1u);
        }
        else if ((v26 & 0xC000000000000001) == 0)
        {
          if ((v28 & 0x8000000000000000) != 0)
            goto LABEL_72;
          if (v28 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_75;
          }
          v29 = *(id *)(v26 + 8 * v28 + 32);
          goto LABEL_19;
        }
        v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v26);
LABEL_19:
        v30 = v29;
        swift_bridgeObjectRelease(v26);
        v31 = swift_getObjectType();
        v32 = swift_conformsToProtocol2(v31, &protocol descriptor for FlowPreviewingViewController);
        if (v32)
          v33 = v32;
        else
          v33 = 0;
        if (v32)
          v34 = v30;
        else
          v34 = 0;
        if (v34)
        {
          v35 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v33 + 40))(v35, v33);

        }
        else
        {

        }
        goto LABEL_33;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v27)
        goto LABEL_14;
    }

    swift_bridgeObjectRelease(v26);
    goto LABEL_33;
  }
}

void sub_10008E2B0()
{
  sub_100090484();
}

double sub_10008E2CC(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_1007F7750 + 8));
  sub_100010E34(a1 + qword_1007F7758);
  swift_unknownObjectWeakDestroy(a1 + qword_1007F7760);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_1007F7768)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for FlowPreviewing(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011EB8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowPreviewing);
}

uint64_t *sub_10008E334(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = v10;
    v13 = v11;
  }
  return a1;
}

void sub_10008E3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_10008E41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = v9;
  v12 = v10;
  return a1;
}

uint64_t sub_10008E488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  return a1;
}

uint64_t sub_10008E508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10008E56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  return a1;
}

uint64_t sub_10008E5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008E5F0);
}

uint64_t sub_10008E5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_10008E678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008E684);
}

uint64_t sub_10008E684(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for PreviewItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F78A8;
  if (!qword_1007F78A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PreviewItem);
  return result;
}

uint64_t sub_10008E738(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10008E7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a2, a2);
  return dispatch thunk of ActionPresenterView.perform(action:sender:)(a4, a5, ObjectType, a3);
}

uint64_t sub_10008E7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v16[24];

  v5 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + qword_100854048;
  swift_beginAccess(a2 + qword_100854048, v16, 0, 0);
  sub_1000194E4(v8, (uint64_t)v7, (uint64_t *)&unk_1007F5140);
  v9 = sub_10000DF3C(&qword_1007F78F0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
    return sub_100011088((uint64_t)v7, (uint64_t *)&unk_1007F5140);
  swift_retain(a3);
  v13 = sub_10008EB88(v12, a2, (uint64_t)v7, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (unint64_t *)&unk_1007F7908);
  swift_release(a3);
  v14 = swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v7, v9, v14);
}

id sub_10008E930(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

id sub_10008E968(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100019574(0, &qword_1007F7A10, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

uint64_t sub_10008E9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE v23[32];

  v13 = Action.title.getter(a5);
  if (v14)
  {
    v15 = v13;
    v16 = v14;
    v17 = Action.artwork.getter(v13);
    if (v17)
    {
      v18 = v17;
      if ((dispatch thunk of Artwork.isSystemImage.getter(v17) & 1) != 0)
      {
        v19 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v18, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        v19 = sub_100485648(v18, 0);
      }
      else
      {
        v19 = 0;
      }
      swift_release(v18);
    }
    else
    {
      v19 = 0;
    }
    sub_1000194E4(a4, (uint64_t)v23, &qword_1007F6E90);
    v21 = (_QWORD *)swift_allocObject(&unk_1007256D8, 72, 7);
    v21[2] = a2;
    v21[3] = a8;
    v21[4] = a1;
    sub_1000302E8((uint64_t)v23, (uint64_t)(v21 + 5));
    v20 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15, v16, 0, 0, v19, 0, 0, 0, 0, a3, 0, sub_1000912CC, v21);
  }
  else
  {
    swift_release(a1);
    swift_unknownObjectRelease(a2);
    v20 = 0;
  }
  sub_100011088(a4, &qword_1007F6E90);
  return v20;
}

uint64_t sub_10008EB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (unint64_t *)&unk_1007F7908);
}

uint64_t sub_10008EB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (unint64_t *)&qword_1007F5160);
}

uint64_t sub_10008EB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v29 = a2;
  v30 = a3;
  v8 = sub_10000DF3C(&qword_1007F78F8);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricsFieldsContext(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F7900);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = ((uint64_t (*)(_QWORD, __n128))a4)(0, v18);
  v31[4] = sub_10000E99C(a5, a4, (uint64_t)&protocol conformance descriptor for Action);
  v31[0] = a1;
  v21 = v29;
  swift_retain(a1);
  BaseObjectGraph.optional<A>(_:)(v10, v12, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_100011088((uint64_t)v10, &qword_1007F78F8);
    v22 = (unsigned int *)&enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:);
  }
  else
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v23(v15, v10, v12);
    v23(v20, v15, v12);
    v22 = (unsigned int *)&enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v20, *v22, v16);
  v24 = sub_10000DF3C(&qword_1007F78F0);
  v26 = ActionDispatcher.perform(_:withMetrics:asPartOf:)(v31, v20, v21, v24, v25);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v31);
  return v26;
}

uint64_t sub_10008ED84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for OpenAppAction, &qword_1007F7A30);
}

uint64_t sub_10008ED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for OfferAction, (unint64_t *)&qword_1007F7A28);
}

uint64_t sub_10008EDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for HttpAction, (unint64_t *)&unk_1007F7A40);
}

uint64_t sub_10008EDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for AlertAction, &qword_1007F7A38);
}

uint64_t sub_10008EDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for BlankAction, (unint64_t *)&qword_1007F7918);
}

uint64_t sub_10008EDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for CompoundAction, (unint64_t *)&unk_1007F7920);
}

uint64_t sub_10008EDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EB88(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for SearchAction, &qword_1007F7A20);
}

void *sub_10008EE10(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v7 = v5 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_15;
LABEL_11:
      v10 = a2(v5 - 4, v8);
      v11 = swift_release(v8);
      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
        goto LABEL_20;
    }
    v8 = *(_QWORD *)(a1 + 8 * v5);
    swift_retain(v8);
    v9 = v5 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_11;
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

id sub_10008EF98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  id v37;
  void (*v39)(uint64_t, char *, _QWORD *);
  void *v40;
  id v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  void (*v52)(uint64_t, char *, _QWORD *);
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  _QWORD v67[2];
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  __int128 aBlock;
  __int128 v77;
  void *v78;
  _QWORD *v79;

  v2 = v1;
  v70 = (_QWORD *)type metadata accessor for IndexPath(0);
  v4 = *(v70 - 1);
  __chkstk_darwin(v70);
  v6 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007F7938);
  __chkstk_darwin(v7);
  v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = (_QWORD *)type metadata accessor for FlowPreview(0);
  v73 = *(v71 - 1);
  __chkstk_darwin(v71);
  v68 = v10;
  v69 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v72 = (uint64_t)v67 - v12;
  v13 = sub_10000DF3C(&qword_1007F7930);
  __chkstk_darwin(v13);
  v15 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PreviewItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)&v18 = __chkstk_darwin(v16).n128_u64[0];
  v74 = (uint64_t)v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(a1, "view", v18);
  objc_msgSend(a1, "locationInView:", v20);
  v22 = v21;
  v24 = v23;

  v25 = objc_msgSend(a1, "view");
  if (!v25)
    return 0;
  v26 = v25;
  (*(void (**)(double, double))(v2 + qword_1007F7750))(v22, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {

    v27 = &qword_1007F7930;
    v28 = (uint64_t)v15;
LABEL_9:
    sub_100011088(v28, v27);
    return 0;
  }
  v67[1] = v2;
  v29 = (uint64_t)v15;
  v30 = v74;
  sub_10009055C(v29, v74, type metadata accessor for PreviewItem);
  v31 = v70;
  (*(void (**)(char *, uint64_t, _QWORD *))(v4 + 16))(v6, v30, v70);
  v32 = *(int *)(v16 + 20);
  v33 = *(void **)(v30 + v32);
  if (v33)
  {
    *((_QWORD *)&v77 + 1) = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    *(_QWORD *)&aBlock = v33;
  }
  else
  {
    aBlock = 0u;
    v77 = 0u;
  }
  v34 = v71;
  v35 = v73;
  v36 = v33;
  sub_10008B8DC((uint64_t)v6, (uint64_t)&aBlock, (uint64_t)v9);
  (*(void (**)(char *, _QWORD *))(v4 + 8))(v6, v31);
  sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v35 + 48))(v9, 1, v34) == 1)
  {
    sub_10002F0D4(v30, type metadata accessor for PreviewItem);

    v27 = &qword_1007F7938;
    v28 = (uint64_t)v9;
    goto LABEL_9;
  }
  v39 = *(void (**)(uint64_t, char *, _QWORD *))(v35 + 32);
  v39(v72, v9, v34);
  v40 = *(void **)(v30 + v32);
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v26, "convertPoint:toCoordinateSpace:", v41, v22, v24);
    v42 = objc_msgSend(v41, "hitTest:withEvent:", 0);
    if (v42)
    {
      v43 = v42;
      v44 = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
      v70 = v43;
      do
      {
        v75 = v43;
        v45 = v43;
        v46 = sub_10000DF3C(&qword_1007F7A00);
        if ((swift_dynamicCast(&aBlock, &v75, v44, v46, 6) & 1) != 0)
        {
          v47 = *((_QWORD *)&v77 + 1);
          sub_100011088((uint64_t)&aBlock, &qword_1007F7A08);
          if (v47)
          {

            (*(void (**)(uint64_t, _QWORD *))(v35 + 8))(v72, v71);
            sub_10002F0D4(v74, type metadata accessor for PreviewItem);

            return 0;
          }
        }
        else
        {
          v78 = 0;
          aBlock = 0u;
          v77 = 0u;
          sub_100011088((uint64_t)&aBlock, &qword_1007F7A08);
        }
        v43 = objc_msgSend(v45, "superview");

      }
      while (v43);

      v34 = v71;
    }

  }
  v48 = v72;
  v49 = (_QWORD *)sub_10008BB08(v72);
  v51 = v50;
  v70 = v50;
  v52 = v39;
  v54 = v53;
  v55 = (_QWORD *)swift_allocObject(&unk_100725700, 40, 7);
  v55[2] = v49;
  v55[3] = v51;
  v71 = v49;
  v55[4] = v54;
  v56 = v69;
  (*(void (**)(char *, uint64_t, _QWORD *))(v35 + 16))(v69, v48, v34);
  v57 = *(unsigned __int8 *)(v35 + 80);
  v58 = (v57 + 16) & ~v57;
  v59 = swift_allocObject(&unk_100725728, v58 + v68, v57 | 7);
  v52(v59 + v58, v56, v34);
  v60 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v78 = sub_10009134C;
  v79 = v55;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v77 = sub_10008E930;
  *((_QWORD *)&v77 + 1) = &unk_100725740;
  v61 = _Block_copy(&aBlock);
  v62 = v79;
  v63 = v49;
  v64 = (uint64_t)v70;
  sub_10009141C(v63, (uint64_t)v70, v54);
  swift_retain(v55);
  swift_release(v62);
  v78 = sub_1000913E0;
  v79 = (_QWORD *)v59;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v77 = sub_10008E968;
  *((_QWORD *)&v77 + 1) = &unk_100725768;
  v65 = _Block_copy(&aBlock);
  v66 = v79;
  swift_retain(v59);
  v37 = objc_msgSend(v60, "configurationWithIdentifier:previewProvider:actionProvider:", 0, v61, v65, swift_release(v66).n128_f64[0]);
  swift_release(v55);
  swift_release(v59);
  _Block_release(v65);
  _Block_release(v61);

  sub_100090508(v71, v64, v54);
  (*(void (**)(uint64_t, _QWORD *))(v73 + 8))(v72, v34);
  sub_10002F0D4(v74, type metadata accessor for PreviewItem);
  return v37;
}

void sub_10008F608(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_10000DF3C(&qword_1007F7930);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PreviewItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, "view", v11);
  objc_msgSend(a1, "locationInView:", v14);
  v16 = v15;
  v18 = v17;

  (*(void (**)(double, double))(v3 + qword_1007F7750))(v16, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100011088((uint64_t)v8, &qword_1007F7930);
  }
  else
  {
    sub_10009055C((uint64_t)v8, (uint64_t)v13, type metadata accessor for PreviewItem);
    sub_10008BEA8((uint64_t)v13);
    v19 = *(void **)&v13[*(int *)(v9 + 20)];
    v20 = v19;
    sub_10002F0D4((uint64_t)v13, type metadata accessor for PreviewItem);
    if (v19)
    {
      ObjectType = swift_getObjectType();
      v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowPreviewItemSourceView);
      if (v22)
        v23 = v22;
      else
        v23 = 0;
      if (v22)
        v24 = v20;
      else
        v24 = 0;
      if (v24)
      {
        v25 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(a2, v25, v23);
      }

    }
  }
}

uint64_t sub_10008F7D4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  id v26;
  uint64_t v27;

  v5 = sub_10000DF3C(&qword_1007F7930);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreviewItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "view", v10);
  objc_msgSend(a1, "locationInView:", v13);
  v15 = v14;
  v17 = v16;

  (*(void (**)(double, double))(v2 + qword_1007F7750))(v15, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_100011088((uint64_t)v7, &qword_1007F7930);
  sub_10009055C((uint64_t)v7, (uint64_t)v12, type metadata accessor for PreviewItem);
  v19 = *(void **)&v12[*(int *)(v8 + 20)];
  if (v19)
  {
    ObjectType = swift_getObjectType();
    v21 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowPreviewItemSourceView);
    if (v21)
      v22 = v21;
    else
      v22 = 0;
    if (v21)
      v23 = v19;
    else
      v23 = 0;
    if (v23)
    {
      v24 = swift_getObjectType();
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24);
      v26 = v19;
      v25(a2, v24, v22);

    }
  }
  return sub_10002F0D4((uint64_t)v12, type metadata accessor for PreviewItem);
}

uint64_t sub_10008F998(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *Strong;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  _QWORD *v42;
  id v43;
  double v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 aBlock;
  __int128 v52;
  void (*v53)();
  _QWORD *v54;

  v46 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007F7938);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for FlowPreview(0);
  v49 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v48 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000DF3C(&qword_1007F7930);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PreviewItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)&v16 = __chkstk_darwin(v14).n128_u64[0];
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(a1, "view", v16);
  objc_msgSend(a1, "locationInView:", v19);
  v21 = v20;
  v23 = v22;

  v24 = v50;
  (*(void (**)(double, double))(v50 + qword_1007F7750))(v21, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_100011088((uint64_t)v13, &qword_1007F7930);
  sub_10009055C((uint64_t)v13, (uint64_t)v18, type metadata accessor for PreviewItem);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v18, v3);
  v26 = *(void **)&v18[*(int *)(v14 + 20)];
  if (v26)
  {
    *((_QWORD *)&v52 + 1) = sub_100019574(0, (unint64_t *)&qword_1007F3AB0, UIView_ptr);
    *(_QWORD *)&aBlock = v26;
  }
  else
  {
    aBlock = 0u;
    v52 = 0u;
  }
  v27 = v47;
  v28 = v26;
  sub_10008B8DC((uint64_t)v6, (uint64_t)&aBlock, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100011088((uint64_t)&aBlock, &qword_1007F6E90);
  v29 = v49;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v9, 1, v27) == 1)
  {
    sub_10002F0D4((uint64_t)v18, type metadata accessor for PreviewItem);
    return sub_100011088((uint64_t)v9, &qword_1007F7938);
  }
  else
  {
    v30 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v48, v9, v27);
    v31 = (void *)sub_10008BB08(v30);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    if (v33 && (v37 = v31, (Strong = v32) != 0)
      || (Strong = (void *)swift_unknownObjectWeakLoadStrong(v24 + qword_1007F7760), v34))
    {
      swift_retain(v36);
      v39 = v36;
    }
    else
    {
      v39 = 0;
    }
    v40 = (_QWORD *)swift_allocObject(&unk_1007255E8, 40, 7);
    v40[2] = Strong;
    v40[3] = v34;
    v40[4] = v39;
    v53 = sub_1000904E4;
    v54 = v40;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v52 = sub_1000BD6CC;
    *((_QWORD *)&v52 + 1) = &unk_100725600;
    v41 = _Block_copy(&aBlock);
    v42 = v54;
    v43 = Strong;
    sub_100019320(v34, v39);
    *(_QWORD *)&v44 = swift_release(v42).n128_u64[0];
    objc_msgSend(v46, "addCompletion:", v41, v44);
    _Block_release(v41);
    sub_100019310(v34, v39);

    sub_100090508(v32, v34, v36);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v48, v27);
    return sub_10002F0D4((uint64_t)v18, type metadata accessor for PreviewItem);
  }
}

id sub_10008FDC4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;

  v3 = sub_10000DF3C(&qword_1007F7930);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PreviewItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "view", v8);
  objc_msgSend(a1, "locationInView:", v11);
  v13 = v12;
  v15 = v14;

  (*(void (**)(double, double))(v1 + qword_1007F7750))(v13, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100011088((uint64_t)v5, &qword_1007F7930);
    return 0;
  }
  else
  {
    sub_10009055C((uint64_t)v5, (uint64_t)v10, type metadata accessor for PreviewItem);
    v17 = *(void **)&v10[*(int *)(v6 + 20)];
    if (v17)
    {
      v18 = objc_allocWithZone((Class)UIPreviewParameters);
      v19 = v17;
      v20 = objc_msgSend(v18, "init");
      objc_msgSend(v20, "setBackgroundColor:", *(_QWORD *)&v10[*(int *)(v6 + 24)]);
      ObjectType = swift_getObjectType();
      v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowPreviewItemSourceView);
      if (v22)
        v23 = v22;
      else
        v23 = 0;
      if (v22)
        v24 = v19;
      else
        v24 = 0;
      if (v24)
      {
        v25 = swift_getObjectType();
        v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v27 = v19;
        v26(v25, v23);
        v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v25, v23);
        if (v28)
        {
          v29 = (void *)v28;

          v24 = v29;
        }
      }
      else
      {
        v24 = v19;
      }
      v16 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:", v24, v20);

      sub_10002F0D4((uint64_t)v10, type metadata accessor for PreviewItem);
    }
    else
    {
      sub_10002F0D4((uint64_t)v10, type metadata accessor for PreviewItem);
      return 0;
    }
  }
  return v16;
}

id sub_100090034(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;

  v3 = sub_10000DF3C(&qword_1007F7930);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PreviewItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "view", v8);
  objc_msgSend(a1, "locationInView:", v11);
  v13 = v12;
  v15 = v14;

  (*(void (**)(double, double))(v1 + qword_1007F7750))(v13, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100011088((uint64_t)v5, &qword_1007F7930);
    return 0;
  }
  else
  {
    sub_10009055C((uint64_t)v5, (uint64_t)v10, type metadata accessor for PreviewItem);
    v17 = *(void **)&v10[*(int *)(v6 + 20)];
    if (v17)
    {
      v18 = objc_allocWithZone((Class)UIPreviewParameters);
      v19 = v17;
      v20 = objc_msgSend(v18, "init");
      objc_msgSend(v20, "setBackgroundColor:", *(_QWORD *)&v10[*(int *)(v6 + 24)]);
      ObjectType = swift_getObjectType();
      v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowPreviewItemSourceView);
      if (v22)
        v23 = v22;
      else
        v23 = 0;
      if (v22)
        v24 = v19;
      else
        v24 = 0;
      if (v24)
      {
        v25 = swift_getObjectType();
        v26 = *(void (**)(uint64_t, uint64_t))(v23 + 32);
        v27 = v19;
        v26(v25, v23);
        v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v25, v23);
        if (v28)
        {
          v29 = (void *)v28;

          v24 = v29;
        }
      }
      else
      {
        v24 = v19;
      }
      v16 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:", v24, v20);

      sub_10002F0D4((uint64_t)v10, type metadata accessor for PreviewItem);
    }
    else
    {
      sub_10002F0D4((uint64_t)v10, type metadata accessor for PreviewItem);
      return 0;
    }
  }
  return v16;
}

BOOL sub_1000902A4(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  void (*v16)(char *, uint64_t, __n128);
  char v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for FlowPage(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - v8;
  v10 = type metadata accessor for FlowAction(0);
  if (!swift_dynamicCastClass(a1, v10))
    goto LABEL_7;
  v11 = swift_retain(a1);
  FlowAction.page.getter(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for FlowPage.writeReview(_:), v3);
  v12 = sub_10000E99C((unint64_t *)&unk_1007F79F0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPage, (uint64_t)&protocol conformance descriptor for FlowPage);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v3, v12);
  dispatch thunk of RawRepresentable.rawValue.getter(&v22, v3, v12);
  v13 = v25;
  v14 = v23;
  if (v24 == v22 && v25 == v23)
  {
    swift_release(a1);
    v15 = swift_bridgeObjectRelease_n(v13, 2);
    v16 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v16(v6, v3, v15);
    ((void (*)(char *, uint64_t))v16)(v9, v3);
    return 1;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v22, v23, 0);
  swift_release(a1);
  swift_bridgeObjectRelease(v13);
  v19 = swift_bridgeObjectRelease(v14);
  v20 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v20(v6, v3, v19);
  ((void (*)(char *, uint64_t))v20)(v9, v3);
  if ((v18 & 1) != 0)
    return 1;
LABEL_7:
  v21 = type metadata accessor for WriteReviewAction(0);
  return swift_dynamicCastClass(a1, v21) != 0;
}

void sub_100090484()
{
  _swift_stdlib_reportUnimplementedInitializer("SubscribePageExtension.FlowPreviewing", 37, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1000904B0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1000904E4()
{
  uint64_t v0;

  sub_10008C4D4(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1000904F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100090500(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100090508(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_release(a3);

  }
}

uint64_t sub_100090538()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009055C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000905A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  __n128 v12;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = type metadata accessor for FlowDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v54 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FlowPresentationHints(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v53 = *(_QWORD *)(v6 + 64);
  v8 = type metadata accessor for FlowPresentationContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v52 = *(_QWORD *)(v9 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  v11 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v17 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v4, v17);
      v18 = (int *)sub_10000DF3C(&qword_1007F7958);
      swift_release(*(id *)((char *)v11 + v18[12]));
      swift_release(*(id *)((char *)v11 + v18[16]));
      swift_release(*(id *)((char *)v11 + v18[20]));
      v19 = v18[24];
      goto LABEL_34;
    case 1u:
      v20 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v0 + v4, v20);
      v11 = (id *)((char *)v11 + *(int *)(sub_10000DF3C((uint64_t *)&unk_1007F7960) + 48));
      v22 = type metadata accessor for FlowOrigin(0, v21);
      goto LABEL_25;
    case 2u:
    case 0x14u:
      goto LABEL_24;
    case 3u:
      v23 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v0 + v4, v23);
      v24 = (uint64_t *)&unk_10080BDE0;
      goto LABEL_33;
    case 4u:
    case 0xFu:
    case 0x19u:
    case 0x1Du:
    case 0x1Fu:
    case 0x20u:
      v12 = swift_release(*v11);
      break;
    case 5u:
      swift_release(*v11);
      v13 = &qword_1007F7970;
      goto LABEL_27;
    case 6u:
      v25 = *v11;
      goto LABEL_41;
    case 7u:
      v26 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v0 + v4, v26);
      v24 = &qword_1007F7978;
      goto LABEL_33;
    case 8u:
    case 0x24u:
    case 0x25u:
      swift_release(*v11);
      v13 = (uint64_t *)&unk_1007F7980;
      goto LABEL_27;
    case 9u:
      swift_release(*v11);
      v13 = &qword_10080BD70;
      goto LABEL_27;
    case 0xAu:
      swift_release(*v11);
      swift_bridgeObjectRelease(v11[1]);
      v27 = sub_10000DF3C(&qword_1007F7990);
      v49 = (char *)v11 + *(int *)(v27 + 64);
      v28 = type metadata accessor for ShareSheetAction.ShareSheetStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v49, v28);

      break;
    case 0xBu:
    case 0xCu:
      swift_bridgeObjectRelease(*v11);
      swift_bridgeObjectRelease(v11[2]);
      v12 = swift_release(v11[3]);
      break;
    case 0xDu:
      swift_release(*v11);
      v11 = (id *)((char *)v11 + *(int *)(sub_10000DF3C(&qword_1007F7998) + 48));
      v22 = type metadata accessor for ArcadePageUrls(0, v29);
      goto LABEL_25;
    case 0xEu:
      v30 = type metadata accessor for URL(0);
      v50 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v0 + v4, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v0 + v4, v30);
      v24 = &qword_1007F79A0;
      goto LABEL_33;
    case 0x10u:
      swift_release(*v11);
      v31 = *(int *)(sub_10000DF3C(&qword_1007F79A8) + 48);
      goto LABEL_23;
    case 0x11u:
      swift_release(*v11);
      v32 = sub_10000DF3C((uint64_t *)&unk_1007F79B0);
      v51 = (char *)v11 + *(int *)(v32 + 48);
      v33 = type metadata accessor for ArcadeWelcomePage.ContentType(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v51, v33);
      v31 = *(int *)(v32 + 64);
LABEL_23:
      v11 = (id *)((char *)v11 + v31);
LABEL_24:
      v22 = type metadata accessor for URL(0);
      goto LABEL_25;
    case 0x12u:
    case 0x22u:
      goto LABEL_40;
    case 0x13u:
    case 0x16u:

      break;
    case 0x15u:
      swift_release(*v11);
      v13 = &qword_1007F6840;
LABEL_27:
      v34 = (char *)v11 + *(int *)(sub_10000DF3C(v13) + 48);
      v35 = type metadata accessor for URL(0);
      goto LABEL_28;
    case 0x17u:
      v36 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v0 + v4, v36);
      v24 = &qword_1007F79C0;
LABEL_33:
      v19 = *(int *)(sub_10000DF3C(v24) + 48);
LABEL_34:
      v12 = swift_release(*(id *)((char *)v11 + v19));
      break;
    case 0x18u:
      v37 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v0 + v4, v37);
      v11 = (id *)((char *)v11 + *(int *)(sub_10000DF3C(&qword_1007F79C8) + 48));
      v22 = type metadata accessor for AdamId(0);
      goto LABEL_25;
    case 0x1Au:
    case 0x1Bu:
      v14 = type metadata accessor for URL(0);
      v48 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v0 + v4, 1, v14))
        break;
      v15 = *(void (**)(char *, uint64_t))(v48 + 8);
      v16 = (char *)(v0 + v4);
      goto LABEL_30;
    case 0x1Cu:
      v38 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v0 + v4, v38);
      v34 = (char *)v11 + *(int *)(sub_10000DF3C((uint64_t *)&unk_1007F79D0) + 48);
      v35 = type metadata accessor for MSOContext(0);
LABEL_28:
      v14 = v35;
      v47 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v34, 1, v35))
        break;
      v16 = v34;
      v15 = *(void (**)(char *, uint64_t))(v47 + 8);
LABEL_30:
      v15(v16, v14);
      break;
    case 0x21u:

      goto LABEL_38;
    case 0x23u:

LABEL_40:
      v25 = v11[1];
LABEL_41:
      v12 = swift_bridgeObjectRelease(v25);
      break;
    case 0x26u:
    case 0x27u:
    case 0x28u:
      swift_release(*v11);
LABEL_38:

      break;
    case 0x29u:

      v11 = (id *)((char *)v11 + *(int *)(sub_10000DF3C((uint64_t *)&unk_100818A90) + 48));
      v22 = type metadata accessor for IndexPath(0);
LABEL_25:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v11, v22);
      break;
    default:
      break;
  }
  v39 = (v4 + v54 + v7) & ~v7;
  v40 = (v39 + v53 + v10) & ~v10;
  v41 = v3 | v7 | v10 | 7;
  v42 = v0 + v39;
  v43 = *(void (**)(uint64_t, uint64_t, __n128))(v9 + 8);
  v43(v0 + v39, v8, v12);
  v44 = v42 + *(int *)(v5 + 20);
  v45 = type metadata accessor for FlowAnimationBehavior(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
  ((void (*)(uint64_t, uint64_t))v43)(v0 + v40, v8);
  return swift_deallocObject(v0, v52 + v40 + 1, v41);
}

void sub_100090B44(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(type metadata accessor for FlowDestination(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FlowPresentationHints(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for FlowPresentationContext(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_10008DE8C(a1, *(_QWORD *)(v1 + 32), v1 + v4, v1 + v7, v1 + v10, *(_BYTE *)(v1 + v10 + *(_QWORD *)(v9 + 64)));
}

uint64_t sub_100090BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = type metadata accessor for FlowDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for FlowPresentationHints(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  v10 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v4, v12);
      v13 = (int *)sub_10000DF3C(&qword_1007F7958);
      swift_release(*(id *)((char *)v10 + v13[12]));
      swift_release(*(id *)((char *)v10 + v13[16]));
      swift_release(*(id *)((char *)v10 + v13[20]));
      v14 = v13[24];
      goto LABEL_32;
    case 1u:
      v15 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v4, v15);
      v10 = (id *)((char *)v10 + *(int *)(sub_10000DF3C((uint64_t *)&unk_1007F7960) + 48));
      v17 = type metadata accessor for FlowOrigin(0, v16);
      goto LABEL_23;
    case 2u:
    case 0x14u:
      goto LABEL_22;
    case 3u:
      v18 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v0 + v4, v18);
      v19 = (uint64_t *)&unk_10080BDE0;
      goto LABEL_31;
    case 4u:
    case 0xFu:
    case 0x19u:
    case 0x1Du:
    case 0x1Fu:
    case 0x20u:
      swift_release(*v10);
      break;
    case 5u:
      swift_release(*v10);
      v11 = &qword_1007F7970;
      goto LABEL_25;
    case 6u:
      v20 = *v10;
      goto LABEL_39;
    case 7u:
      v21 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v0 + v4, v21);
      v19 = &qword_1007F7978;
      goto LABEL_31;
    case 8u:
    case 0x24u:
    case 0x25u:
      swift_release(*v10);
      v11 = (uint64_t *)&unk_1007F7980;
      goto LABEL_25;
    case 9u:
      swift_release(*v10);
      v11 = &qword_10080BD70;
      goto LABEL_25;
    case 0xAu:
      swift_release(*v10);
      swift_bridgeObjectRelease(v10[1]);
      v22 = sub_10000DF3C(&qword_1007F7990);
      v23 = (char *)v10 + *(int *)(v22 + 64);
      v24 = type metadata accessor for ShareSheetAction.ShareSheetStyle(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);

      break;
    case 0xBu:
    case 0xCu:
      swift_bridgeObjectRelease(*v10);
      swift_bridgeObjectRelease(v10[2]);
      swift_release(v10[3]);
      break;
    case 0xDu:
      swift_release(*v10);
      v10 = (id *)((char *)v10 + *(int *)(sub_10000DF3C(&qword_1007F7998) + 48));
      v17 = type metadata accessor for ArcadePageUrls(0, v25);
      goto LABEL_23;
    case 0xEu:
      v26 = type metadata accessor for URL(0);
      v27 = *(_QWORD *)(v26 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v0 + v4, 1, v26))
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0 + v4, v26);
      v19 = &qword_1007F79A0;
      goto LABEL_31;
    case 0x10u:
      swift_release(*v10);
      v28 = *(int *)(sub_10000DF3C(&qword_1007F79A8) + 48);
      goto LABEL_21;
    case 0x11u:
      swift_release(*v10);
      v29 = sub_10000DF3C((uint64_t *)&unk_1007F79B0);
      v30 = (char *)v10 + *(int *)(v29 + 48);
      v31 = type metadata accessor for ArcadeWelcomePage.ContentType(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      v28 = *(int *)(v29 + 64);
LABEL_21:
      v10 = (id *)((char *)v10 + v28);
LABEL_22:
      v17 = type metadata accessor for URL(0);
      goto LABEL_23;
    case 0x12u:
    case 0x22u:
      goto LABEL_38;
    case 0x13u:
    case 0x16u:

      break;
    case 0x15u:
      swift_release(*v10);
      v11 = &qword_1007F6840;
LABEL_25:
      v10 = (id *)((char *)v10 + *(int *)(sub_10000DF3C(v11) + 48));
      goto LABEL_26;
    case 0x17u:
      v35 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v0 + v4, v35);
      v19 = &qword_1007F79C0;
LABEL_31:
      v14 = *(int *)(sub_10000DF3C(v19) + 48);
LABEL_32:
      swift_release(*(id *)((char *)v10 + v14));
      break;
    case 0x18u:
      v36 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v0 + v4, v36);
      v10 = (id *)((char *)v10 + *(int *)(sub_10000DF3C(&qword_1007F79C8) + 48));
      v17 = type metadata accessor for AdamId(0);
      goto LABEL_23;
    case 0x1Au:
    case 0x1Bu:
LABEL_26:
      v32 = type metadata accessor for URL(0);
      goto LABEL_27;
    case 0x1Cu:
      v37 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v0 + v4, v37);
      v10 = (id *)((char *)v10 + *(int *)(sub_10000DF3C((uint64_t *)&unk_1007F79D0) + 48));
      v32 = type metadata accessor for MSOContext(0);
LABEL_27:
      v33 = v32;
      v34 = *(_QWORD *)(v32 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v32))
        (*(void (**)(id *, uint64_t))(v34 + 8))(v10, v33);
      break;
    case 0x21u:

      goto LABEL_36;
    case 0x23u:

LABEL_38:
      v20 = v10[1];
LABEL_39:
      swift_bridgeObjectRelease(v20);
      break;
    case 0x26u:
    case 0x27u:
    case 0x28u:
      swift_release(*v10);
LABEL_36:

      break;
    case 0x29u:

      v10 = (id *)((char *)v10 + *(int *)(sub_10000DF3C((uint64_t *)&unk_100818A90) + 48));
      v17 = type metadata accessor for IndexPath(0);
LABEL_23:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v10, v17);
      break;
    default:
      break;
  }
  v38 = (v4 + v5 + v8) & ~v8;
  v39 = v38 + v9;
  v40 = v0 + v38;
  v41 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  v42 = v40 + *(int *)(v6 + 20);
  v43 = type metadata accessor for FlowAnimationBehavior(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  return swift_deallocObject(v0, v39, v3 | v8 | 7);
}

void sub_100091108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for FlowDestination(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FlowPresentationHints(0) - 8) + 80);
  sub_10008DD38(a1, *(_QWORD *)(v1 + 32), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_100091188(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_10008C67C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_100091194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1000911C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FlowPreviewOfferPresenter(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10009123C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for FlowPreviewOfferPresenter(0);
  v2 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return FlowPreviewOfferPresenter.performAction(in:)(*(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v2 + 8));
}

uint64_t sub_100091290()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  if (v0[8])
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v0 + 5);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000912CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v3 = v2[3];
  v4 = v2[4];
  ObjectType = swift_getObjectType(v2[2], a2);
  return dispatch thunk of ActionPresenterView.perform(action:sender:)(v4, v2 + 5, ObjectType, v3);
}

uint64_t sub_100091318()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {

    swift_release(*(_QWORD *)(v0 + 32));
  }
  return swift_deallocObject(v0, 40, 7);
}

void *sub_10009134C()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (!*(_QWORD *)(v0 + 24))
    return 0;
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_100091380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FlowPreview(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

UIMenu sub_1000913E0()
{
  type metadata accessor for FlowPreview(0);
  return sub_10008BD28();
}

void *sub_10009141C(void *result, uint64_t a2, uint64_t a3)
{
  id v4;

  if (a2)
  {
    v4 = result;
    return (void *)swift_retain(a3);
  }
  return result;
}

id sub_1000916B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GradientSectionBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for GradientSectionBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension29GradientSectionBackgroundView);
}

uint64_t sub_100091718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  void **v14;
  int v15;
  void *v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v29;
  int *v30;
  char *v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  double v37;
  double v38;
  double v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = type metadata accessor for ShelfBackgroundGradientLocation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v64 - v8;
  v10 = type metadata accessor for ShelfBackground(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (void **)((char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v12);
  v15 = (*(uint64_t (**)(void **, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(void **, uint64_t))(v11 + 96))(v14, v10);
    v16 = *v14;
    v17 = (char *)v14 + *(int *)(sub_10000DF3C(&qword_1007F6348) + 48);
    v18 = *(char **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29GradientSectionBackgroundView_gradientView);
    v19 = objc_msgSend(v18, "layer");
    v20 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v19, v20, 0, 0, 0), "setStartPoint:", 0.5, 0.0);

    v21 = objc_msgSend(v18, "layer");
    v22 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v21, v22, 0, 0, 0), "setEndPoint:", 0.5, 1.0);

    v23 = sub_10000DF3C(&qword_1007F5840);
    v24 = swift_allocObject(v23, 48, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100671250;
    *(_QWORD *)(v24 + 32) = v16;
    *(_QWORD *)(v24 + 40) = v16;
    v65 = v24;
    specialized Array._endMutation()(v24);
    v25 = *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
    *(_QWORD *)&v18[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v65;
    v26 = v16;
    swift_bridgeObjectRelease(v25);
    sub_10003B47C();

    v27 = type metadata accessor for ShelfBackgroundStyle(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v17, v27);
  }
  else if (v15 == enum case for ShelfBackground.gradient(_:))
  {
    (*(void (**)(void **, uint64_t))(v11 + 96))(v14, v10);
    v29 = *v14;
    v30 = (int *)sub_10000DF3C(&qword_1007F6338);
    v31 = (char *)v14 + v30[12];
    v32 = (char *)v14 + v30[16];
    v33 = (char *)v14 + v30[20];
    v34 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v34(v9, v31, v3);
    v35 = ((uint64_t (*)(char *, char *, uint64_t))v34)(v6, v32, v3);
    v36 = *(char **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29GradientSectionBackgroundView_gradientView);
    v37 = ShelfBackgroundGradientLocation.point.getter(v35);
    v39 = v38;
    v40 = objc_msgSend(v36, "layer");
    v41 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v40, v41, 0, 0, 0), "setStartPoint:", v37, v39);

    v43 = ShelfBackgroundGradientLocation.point.getter(v42);
    v45 = v44;
    v46 = objc_msgSend(v36, "layer");
    v47 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v46, v47, 0, 0, 0), "setEndPoint:", v43, v45);

    v48 = *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
    *(_QWORD *)&v36[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v29;
    swift_bridgeObjectRelease(v48);
    sub_10003B47C();
    v49 = *(void (**)(char *, uint64_t))(v4 + 8);
    v49(v6, v3);
    v49(v9, v3);
    v50 = type metadata accessor for ShelfBackgroundStyle(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v33, v50);
  }
  else
  {
    v51 = *(char **)(v1 + OBJC_IVAR____TtC22SubscribePageExtension29GradientSectionBackgroundView_gradientView);
    v52 = objc_msgSend(v51, "layer");
    v53 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v52, v53, 0, 0, 0), "setStartPoint:", 0.5, 0.0);

    v54 = objc_msgSend(v51, "layer");
    v55 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v54, v55, 0, 0, 0), "setEndPoint:", 0.5, 1.0);

    v56 = sub_10000DF3C(&qword_1007F5840);
    v57 = swift_allocObject(v56, 48, 7);
    *(_OWORD *)(v57 + 16) = xmmword_100671250;
    v58 = sub_1000117FC();
    v60 = static UIColor.defaultBackground.getter(v58, v59);
    *(_QWORD *)(v57 + 32) = v60;
    v62 = static UIColor.defaultBackground.getter(v60, v61);
    *(_QWORD *)(v57 + 40) = v62;
    v65 = v57;
    specialized Array._endMutation()(v62);
    v63 = *(_QWORD *)&v51[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors];
    *(_QWORD *)&v51[OBJC_IVAR____TtC22SubscribePageExtension12GradientView_colors] = v65;
    swift_bridgeObjectRelease(v63);
    sub_10003B47C();
    return (*(uint64_t (**)(void **, uint64_t))(v11 + 8))(v14, v10);
  }
}

ValueMetadata *type metadata accessor for HttpTemplateActionImplementation()
{
  return &type metadata for HttpTemplateActionImplementation;
}

unint64_t sub_100091C70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F7A80;
  if (!qword_1007F7A80)
  {
    v1 = type metadata accessor for HttpTemplateAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_1007F7A80);
  }
  return result;
}

uint64_t sub_100091CB8(uint64_t *a1, uint64_t a2)
{
  return sub_100091CC0(*a1, a2);
}

uint64_t sub_100091CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  _BYTE *v12;
  _OWORD *v13;
  double v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  objc_super v23;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F5140);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v23.receiver - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000DF3C(&qword_1007F78F0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for HttpTemplateController();
  v12 = objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_textFields] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_okAction] = 0;
  v12[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_hasRequiredParameters] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_templateAction] = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_actionRunner] = 0;
  v13 = &v12[OBJC_IVAR____TtC22SubscribePageExtension22HttpTemplateController_actionSender];
  *v13 = 0u;
  v13[1] = 0u;
  v23.receiver = v12;
  v23.super_class = v11;
  *(_QWORD *)&v14 = swift_retain(a1).n128_u64[0];
  v15 = objc_msgSendSuper2(&v23, "init", v14);
  v17 = sub_1004E0978(a2, v16);
  BaseObjectGraph.optional<A>(_:)(v6, v7, v7);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100037038((uint64_t)v6);
    sub_10000DF3C(&qword_100803510);
    v18 = sub_1000559B4();
    v19 = swift_allocError(&type metadata for GeneralActionImplementationError, v18, 0, 0);
    *v20 = 1;
    v21 = Promise.__allocating_init(error:)(v19);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 32))(v10, v6, v7);
    v21 = sub_10008EB74(v17, a2, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_release(v17);

  return v21;
}

char *sub_100091ED8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  objc_super v27;

  v5 = v4;
  v10 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder;
  type metadata accessor for ArtworkView(0);
  v11 = v4;
  v12 = (id)static ArtworkView.brickArtworkView.getter(v11);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v12);

  *(_QWORD *)&v5[v10] = v12;
  v13 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder;
  v14 = type metadata accessor for LockupPlaceholderView(0);
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  v15 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder;
  type metadata accessor for Placeholder(0);
  v16 = static Placeholder.titleText.getter();
  v18 = v17;
  v19 = sub_1005F1C40(v16, v17, (uint64_t)UIFontTextStyleSubheadline);
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)&v11[v15] = v19;
  v20 = &v11[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_contentType];
  v21 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  v22 = type metadata accessor for Shelf.ContentType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v11[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] = 0;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for MixedMediaLockupPlaceholderView(0);
  v23 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder];
  v25 = v23;
  objc_msgSend(v25, "addSubview:", v24);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder]);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v25[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder]);

  return v25;
}

uint64_t sub_1000920D8@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __n128 v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  int v16;
  char v17;
  uint64_t v18;
  uint64_t result;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[24];

  v3 = sub_10000DF3C(&qword_1007F4C98);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Shelf.ContentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  v13 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_contentType];
  v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_contentType], v24, 0, 0);
  v15 = *(void (**)(char *, char *, uint64_t, __n128))(v7 + 16);
  v15(v12, v13, v6, v14);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v16 == enum case for Shelf.ContentType.appTrailerLockup(_:))
  {
    type metadata accessor for AppTrailerLockupCollectionViewCell(0);
LABEL_5:
    v17 = v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder];
    v18 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
    sub_1002F82D4(v1, v17, (uint64_t)v5, a1);
    return sub_100092A44((uint64_t)v5);
  }
  if (v16 == enum case for Shelf.ContentType.screenshotsLockup(_:))
  {
    type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
    goto LABEL_5;
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  ((void (*)(char *, char *, uint64_t))v15)(v9, v13, v6);
  _print_unlocked<A, B>(_:_:)(v9, &v22, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20._object = (void *)0x8000000100632770;
  v20._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v20);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v22, v23, "SubscribePageExtension/MixedMediaLockupPlaceholderView.swift", 60, 2, 61, 0);
  __break(1u);
  return result;
}

void sub_100092334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  int v11;
  __n128 v12;
  void *Current;
  __n128 v14;
  id v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE v20[24];

  v1 = type metadata accessor for Shelf.ContentType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = v0 + OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_contentType;
  v9 = swift_beginAccess(v0 + OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_contentType, v20, 0, 0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v10(v7, v8, v1, v9);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v11 == enum case for Shelf.ContentType.appTrailerLockup(_:))
  {
    type metadata accessor for AppTrailerLockupCollectionViewCell(0);
    Current = (void *)ASKDeviceTypeGetCurrent(v12);
LABEL_5:
    v15 = Current;
    sub_1002F8F9C((uint64_t)v15);

    return;
  }
  if (v11 == enum case for Shelf.ContentType.screenshotsLockup(_:))
  {
    type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
    Current = (void *)ASKDeviceTypeGetCurrent(v14);
    goto LABEL_5;
  }
  v18 = 0;
  v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  ((void (*)(char *, uint64_t, uint64_t))v10)(v4, v8, v1);
  _print_unlocked<A, B>(_:_:)(v4, &v18, v1, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16._object = (void *)0x8000000100632770;
  v16._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v16);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v18, v19, "SubscribePageExtension/MixedMediaLockupPlaceholderView.swift", 60, 2, 72, 0);
  __break(1u);
}

uint64_t sub_10009252C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void *v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  double v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  __int128 v46;
  __int128 v47;
  _QWORD v48[5];
  _QWORD v49[5];
  objc_super v50;

  v1 = v0;
  v2 = type metadata accessor for LayoutRect(0);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  __chkstk_darwin(v2);
  v42 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for MixedMediaLockupLayout(0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for AspectRatio(0);
  v37 = *(_QWORD *)(v38 - 8);
  v5 = __chkstk_darwin(v38);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MixedMediaLockupLayout.Metrics(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  v15 = (objc_class *)type metadata accessor for MixedMediaLockupPlaceholderView(0);
  v50.receiver = v0;
  v50.super_class = v15;
  objc_msgSendSuper2(&v50, "layoutSubviews");
  sub_1000920D8((uint64_t)v14);
  sub_100092334();
  LayoutMarginsAware<>.layoutFrame.getter(v15);
  v18 = AspectRatio.maxSize(fitting:)(v16, v17);
  v20 = v19;
  v21 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder];
  v22 = (void (*)(_QWORD *, _QWORD))ArtworkView.frame.modify(v49);
  *(double *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v20;
  v22(v49, 0);
  v24 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder;
  v25 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder];
  if (v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] == 1)
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder]);
  else
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder], "removeFromSuperview");
  v35 = v9;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v36 = v8;
  v26(v11, v14, v8);
  v27 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder];
  v49[3] = type metadata accessor for LockupPlaceholderView(0);
  v49[4] = &protocol witness table for UIView;
  v49[0] = v27;
  v48[3] = type metadata accessor for ArtworkView(0);
  v48[4] = &protocol witness table for UIView;
  v48[0] = v21;
  if (v1[v24] == 1)
  {
    *(_QWORD *)&v47 = sub_100092A84();
    *((_QWORD *)&v47 + 1) = &protocol witness table for UILabel;
    v28 = v25;
  }
  else
  {
    v25 = 0;
    v47 = 0u;
    v46 = 0u;
  }
  v45 = v25;
  v29 = v27;
  v30 = v21;
  v31 = v39;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v11, v49, v48, &v45);
  v32 = LayoutMarginsAware<>.layoutFrame.getter(v15);
  v33 = v42;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)(v1, v32);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v44);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v36);
}

id sub_1000928D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupPlaceholderView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100092978()
{
  return type metadata accessor for MixedMediaLockupPlaceholderView(0);
}

uint64_t type metadata accessor for MixedMediaLockupPlaceholderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F7AC8;
  if (!qword_1007F7AC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MixedMediaLockupPlaceholderView);
  return result;
}

uint64_t sub_1000929BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Shelf.ContentType(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_100672DD0;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100092A44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F4C98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100092A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F4A40;
  if (!qword_1007F4A40)
  {
    v1 = objc_opt_self(UILabel);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007F4A40);
  }
  return result;
}

void sub_100092AC0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_artworkPlaceholder;
  v3 = type metadata accessor for ArtworkView(0);
  v4 = (id)static ArtworkView.brickArtworkView.getter(v3);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v4);

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_smallLockupPlaceholder;
  v6 = type metadata accessor for LockupPlaceholderView(0);
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");
  v7 = OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_supplementaryTextPlaceholder;
  type metadata accessor for Placeholder(0);
  v8 = static Placeholder.titleText.getter();
  v10 = v9;
  v11 = sub_1005F1C40(v8, v9, (uint64_t)UIFontTextStyleSubheadline);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)&v1[v7] = v11;
  v12 = &v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_contentType];
  v13 = enum case for Shelf.ContentType.appTrailerLockup(_:);
  v14 = type metadata accessor for Shelf.ContentType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v1[OBJC_IVAR____TtC22SubscribePageExtension31MixedMediaLockupPlaceholderView_wantsSupplementaryTextPlaceholder] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/MixedMediaLockupPlaceholderView.swift", 60, 2, 31, 0);
  __break(1u);
}

unint64_t sub_100092C04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F7AD8;
  if (!qword_1007F7AD8)
  {
    v1 = type metadata accessor for VideoCardCollectionViewCell(255);
    result = swift_getWitnessTable(byte_100672DE8, v1);
    atomic_store(result, (unint64_t *)&qword_1007F7AD8);
  }
  return result;
}

double sub_100092C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  double v12;
  double v13;
  _QWORD v16[5];

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter(v4);
  v5 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1007F2E28 != -1)
    swift_once(&qword_1007F2E28, sub_1004FCDF0);
  v8 = sub_100092D80((uint64_t)&qword_100856B20, (uint64_t)v16);
  v9 = ShelfLayoutContext.traitEnvironment.getter(v8);
  v10 = type metadata accessor for VideoCardView(0);
  ObjectType = swift_getObjectType();
  sub_1004FD190(v5, v7, (uint64_t)v16, v9, v10, ObjectType);
  v13 = v12;
  swift_unknownObjectRelease(v9);
  sub_100092DBC(v16);
  return v13;
}

uint64_t sub_100092D80(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ImageHeadingView.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_100092DBC(_QWORD *a1)
{
  destroy for ProductRatingsCompactProductPageLayout.Metrics(a1);
  return a1;
}

double sub_100092DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  double v17;
  double v18;
  _QWORD v21[5];

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfLayoutContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ItemLayoutContext.parentShelfLayoutContext.getter(v6);
  ShelfLayoutContext.contentPageGrid.getter(v9);
  v10 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1007F2E28 != -1)
    swift_once(&qword_1007F2E28, sub_1004FCDF0);
  v13 = sub_100092D80((uint64_t)&qword_100856B20, (uint64_t)v21);
  v14 = ShelfLayoutContext.traitEnvironment.getter(v13);
  v15 = type metadata accessor for VideoCardView(0);
  ObjectType = swift_getObjectType();
  sub_1004FD190(v10, v12, (uint64_t)v21, v14, v15, ObjectType);
  v18 = v17;
  swift_unknownObjectRelease(v14);
  sub_100092DBC(v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v18;
}

void sub_100092F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  _BYTE v34[40];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[5];
  _QWORD v42[5];

  v6 = v5;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a2;
  *(_QWORD *)(v6 + 72) = a3;
  *(_QWORD *)(v6 + 80) = a4;
  *(_QWORD *)(v6 + 88) = a5;
  v31 = a5;
  v16 = swift_retain(a5);
  v17 = UUID.init()(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v42[0] = v18;
  v42[1] = v20;
  AnyHashable.init<A>(_:)(v42, &type metadata for String, &protocol witness table for String);
  v21 = v36;
  *(_OWORD *)(v6 + 16) = v35;
  *(_OWORD *)(v6 + 32) = v21;
  *(_QWORD *)(v6 + 48) = v37;
  v22 = *(_QWORD *)(v6 + 72);
  if (!((unint64_t)v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v6 + 72), 2);
    swift_retain(v6);
    if (v23)
      goto LABEL_3;
LABEL_23:
    swift_release(v6);
    swift_bridgeObjectRelease_n(v22, 2);
    swift_release(v31);
    return;
  }
  if (v22 < 0)
    v29 = *(_QWORD *)(v6 + 72);
  else
    v29 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v6 + 72), 2);
  swift_retain(v6);
  v23 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v23)
    goto LABEL_23;
LABEL_3:
  if (v23 >= 1)
  {
    v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
      }
      else
      {
        v27 = *(_QWORD *)(v22 + 8 * v24 + 32);
        swift_retain(v27);
      }
      v28 = sub_10006BFD4(v27 + 16, (uint64_t)v42);
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(v6 + 80))(v41, v28);
      sub_10009373C((uint64_t)v42, (uint64_t)&v35);
      sub_10009373C((uint64_t)v41, (uint64_t)&v38);
      if (*((_QWORD *)&v36 + 1))
      {
        sub_10009373C((uint64_t)&v35, (uint64_t)v34);
        if (*((_QWORD *)&v39 + 1))
        {
          v32[0] = v38;
          v32[1] = v39;
          v33 = v40;
          v26 = static AnyHashable.== infix(_:_:)(v34, v32);
          sub_100019370((uint64_t)v34);
          sub_100019370((uint64_t)v32);
          v25 = (uint64_t *)&unk_1007F9850;
        }
        else
        {
          sub_100019370((uint64_t)v34);
          v26 = 0;
          v25 = &qword_1007F74E8;
        }
      }
      else
      {
        if (*((_QWORD *)&v39 + 1))
          v25 = &qword_1007F74E8;
        else
          v25 = (uint64_t *)&unk_1007F9850;
        if (*((_QWORD *)&v39 + 1))
          v26 = 0;
        else
          v26 = -1;
      }
      sub_100011088((uint64_t)&v35, v25);
      ++v24;
      sub_100011088((uint64_t)v41, (uint64_t *)&unk_1007F9850);
      sub_100011088((uint64_t)v42, (uint64_t *)&unk_1007F9850);
      *(_BYTE *)(v27 + 72) = v26 & 1;
      swift_release(v27);
    }
    while (v23 != v24);
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_10009324C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t *v19;
  _OWORD v21[2];
  uint64_t v22;
  _BYTE v23[40];
  _BYTE v24[24];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[5];

  if (*v1 == *a1
    && (v2 = v1, (static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 2) & 1) != 0)
    && (v4 = type metadata accessor for MenuDebugSetting(), (v5 = swift_dynamicCastClass(a1, v4)) != 0))
  {
    v6 = v5;
    v7 = *(_QWORD *)(v5 + 56);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = v1[7];
    v10 = v1[8];
    v11 = v7 == v9 && v8 == v10;
    if (v11 || (v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v9, v10, 0) & 1) != 0))
    {
      v13 = *(_QWORD *)(v6 + 72);
      v14 = v2[9];
      swift_retain(a1);
      swift_bridgeObjectRetain(v13);
      sub_100105C84(v15, v14);
      LOBYTE(v14) = v16;
      v17 = swift_bridgeObjectRelease(v13);
      if ((v14 & 1) != 0)
      {
        v18 = (*(_QWORD *(**)(_QWORD *__return_ptr, __n128))(v6 + 80))(v30, v17);
        ((void (*)(_QWORD *__return_ptr, _QWORD *))v2[10])(v29, v18);
        sub_10009373C((uint64_t)v30, (uint64_t)v24);
        sub_10009373C((uint64_t)v29, (uint64_t)&v26);
        if (v25)
        {
          sub_10009373C((uint64_t)v24, (uint64_t)v23);
          if (*((_QWORD *)&v27 + 1))
          {
            v21[0] = v26;
            v21[1] = v27;
            v22 = v28;
            v12 = static AnyHashable.== infix(_:_:)(v23, v21);
            swift_release(a1);
            sub_100019370((uint64_t)v21);
            v19 = (uint64_t *)&unk_1007F9850;
            sub_100011088((uint64_t)v29, (uint64_t *)&unk_1007F9850);
            sub_100011088((uint64_t)v30, (uint64_t *)&unk_1007F9850);
            sub_100019370((uint64_t)v23);
          }
          else
          {
            swift_release(a1);
            sub_100011088((uint64_t)v29, (uint64_t *)&unk_1007F9850);
            sub_100011088((uint64_t)v30, (uint64_t *)&unk_1007F9850);
            sub_100019370((uint64_t)v23);
            v12 = 0;
            v19 = &qword_1007F74E8;
          }
        }
        else
        {
          swift_release(a1);
          v19 = (uint64_t *)&unk_1007F9850;
          sub_100011088((uint64_t)v29, (uint64_t *)&unk_1007F9850);
          sub_100011088((uint64_t)v30, (uint64_t *)&unk_1007F9850);
          if (*((_QWORD *)&v27 + 1))
          {
            v19 = &qword_1007F74E8;
            v12 = 0;
          }
          else
          {
            v12 = -1;
          }
        }
        sub_100011088((uint64_t)v24, v19);
      }
      else
      {
        swift_release(a1);
        v12 = 0;
      }
    }
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_10009346C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  Swift::UInt v22;
  _OWORD v23[2];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[5];

  v2 = v1;
  ((void (*)(void))AnyHashable.hash(into:))();
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v2 + 72);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v21 = *(_QWORD *)(v2 + 72);
    else
      v21 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v2 + 72), 2);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v6);
    Hasher._combine(_:)(v22);
    swift_bridgeObjectRetain(v6);
    v8 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v6);
    if (!v8)
      goto LABEL_10;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 72));
    Hasher._combine(_:)(v7);
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_10;
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v8; ++i)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      AnyHashable.hash(into:)(a1, v11);
      v12 = *(_QWORD *)(v10 + 56);
      v13 = *(_QWORD *)(v10 + 64);
      swift_bridgeObjectRetain(v13);
      String.hash(into:)(a1, v12, v13);
      swift_bridgeObjectRelease(v13);
      Hasher._combine(_:)(*(_BYTE *)(v10 + 72));
      swift_unknownObjectRelease(v10);
    }
  }
  else
  {
    for (j = 0; j != v8; ++j)
    {
      v15 = *(_QWORD *)(v6 + 8 * j + 32);
      v16 = swift_retain(v15);
      AnyHashable.hash(into:)(a1, v16);
      v17 = *(_QWORD *)(v15 + 56);
      v18 = *(_QWORD *)(v15 + 64);
      swift_bridgeObjectRetain(v18);
      String.hash(into:)(a1, v17, v18);
      swift_bridgeObjectRelease(v18);
      Hasher._combine(_:)(*(_BYTE *)(v15 + 72));
      swift_release(v15);
    }
  }
LABEL_10:
  v19 = swift_bridgeObjectRelease(v6);
  (*(void (**)(_QWORD *__return_ptr, __n128))(v2 + 80))(v28, v19);
  sub_10009373C((uint64_t)v28, (uint64_t)&v25);
  if (*((_QWORD *)&v26 + 1))
  {
    v23[0] = v25;
    v23[1] = v26;
    v24 = v27;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)(a1, v20);
    sub_100019370((uint64_t)v23);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_100011088((uint64_t)v28, (uint64_t *)&unk_1007F9850);
}

uint64_t sub_1000936BC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[9]);
  return swift_release(v0[11]);
}

uint64_t sub_1000936E0()
{
  _QWORD *v0;

  sub_100019370((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[11]);
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for MenuDebugSetting()
{
  return objc_opt_self(_TtC22SubscribePageExtension16MenuDebugSetting);
}

uint64_t sub_10009373C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C((uint64_t *)&unk_1007F9850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_100093784(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  objc_super v46;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView;
  v12 = type metadata accessor for TodayCardLockupView();
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v5;
  *(_QWORD *)&v5[v11] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView;
  v16 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_pageTraits] = 0;
  v17 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v17);
  *(_QWORD *)&v14[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundEffectView] = v18;

  v46.receiver = v14;
  v46.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  v20 = OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView;
  v21 = *(void **)&v19[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView];
  v22 = v19;
  v23 = v21;
  ArtworkView.accessibilityIgnoresInvertColors.setter(1);

  v24 = *(void **)&v19[v20];
  objc_msgSend(v24, "setContentMode:", 2);
  objc_msgSend(v22, "addSubview:", v24);
  v25 = *(void **)&v22[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundEffectView];
  objc_msgSend(v25, "_setContinuousCornerRadius:", 14.0);
  objc_msgSend(v22, "addSubview:", v25);
  v26 = OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView;
  v27 = *(char **)&v22[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView];
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_titleLabel], "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel], "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_ordinalLabel], "setAccessibilityIgnoresInvertColors:", 1);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  sub_1004BB518(objc_msgSend(v28, "whiteColor"));

  v30 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_ordinalLabel);
  v31 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v30, "setTextColor:", v31);

  v32 = *(void **)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_subtitleLabel);
  sub_1000117FC();
  v33 = v32;
  v34 = (void *)static UIColor.secondaryText.getter(v33);
  v35 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
  v36 = objc_msgSend(v34, "resolvedColorWithTraitCollection:", v35);

  objc_msgSend(v33, "setTextColor:", v36);
  v37 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerButton);
  v38 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v37, "setTintColor:", v38);

  v39 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel);
  v40 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v39, "setTextColor:", v40);

  v41 = objc_retain(*(id *)(*(_QWORD *)&v22[v26]
                          + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkTitleLabel));
  v42 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v41, "setTextColor:", v42);

  v43 = objc_retain(*(id *)(*(_QWORD *)&v22[v26]
                          + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_crossLinkSubtitleLabel));
  v44 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v43, "setTextColor:", v44);

  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v26]);
  return v22;
}

id sub_100093C60(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v15;

  v3 = v2;
  v15.receiver = v2;
  v15.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v15, "layoutSubviews");
  ArtworkView.frame.setter(objc_msgSend(v2, "bounds"));
  v4 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundEffectView];
  objc_msgSend(v3, "bounds");
  objc_msgSend(v4, "setFrame:");
  v5 = *(void **)&v3[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView];
  objc_msgSend(v3, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  CGRect.subtracting(insets:)(14.0, 20.0, 14.0, 20.0, v7, v9, v11, v13);
  return objc_msgSend(v5, "setFrame:");
}

void sub_100093DA8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  void *v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  double *v93;
  __n128 v94;
  double v95;
  double v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  char *v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  double v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  id v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[44];

  v5 = v4;
  v127 = a2;
  v8 = type metadata accessor for Artwork.Crop(0, a4);
  v117 = *(_QWORD *)(v8 - 8);
  v118 = v8;
  __chkstk_darwin(v8);
  v116 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  __chkstk_darwin(v10);
  v113 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007F7C10);
  __chkstk_darwin(v12);
  v14 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C((uint64_t *)&unk_1007F76F0);
  __chkstk_darwin(v15);
  v17 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C((uint64_t *)&unk_1007F7C20);
  __chkstk_darwin(v18);
  v123 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C((uint64_t *)&unk_1007F7700);
  __chkstk_darwin(v20);
  v122 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000DF3C((uint64_t *)&unk_1007F7C30);
  v23 = __chkstk_darwin(v22);
  v121 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v23);
  v119 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v120 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000DF3C((uint64_t *)&unk_1007F7710);
  __chkstk_darwin(v27);
  v29 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for Artwork.Style(0, v30);
  __chkstk_darwin(v31);
  v128 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for ArtworkLoader(0);
  v34 = *(_QWORD *)(a3 + qword_100854050);
  if (v34)
  {
    v130 = *(_QWORD *)(a3 + qword_100854050);
    v35 = swift_retain(v34);
    v129 = a1;
    v36 = CondensedAdLockupWithIconBackground.backgroundArtwork.getter(v35);
    v37 = v5;
    v38 = objc_msgSend(v5, "traitCollection");
    v39 = PageGrid.columnWidth.getter(v38);
    if (qword_1007F1928 != -1)
      swift_once(&qword_1007F1928, sub_10028C58C);
    v124 = v17;
    v125 = v14;
    v126 = a3;
    sub_100076534((uint64_t)&xmmword_100853160, (uint64_t)v131);
    if (qword_1007F1930 != -1)
      swift_once(&qword_1007F1930, sub_10028CA54);
    sub_10028E66C((uint64_t)v131, (uint64_t)&xmmword_1008532C0, v38, v39);
    v41 = v40;
    sub_100076570(v131);
    if (v39 > v41)
      v42 = v39;
    else
      v42 = v41;
    v43 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v42, v42);
    swift_release(v36);

    v44 = *(void **)&v37[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView];
    v46 = CondensedAdLockupWithIconBackground.backgroundArtwork.getter(v45);
    v47 = v128;
    Artwork.style.getter(v46);
    v48 = ArtworkView.style.setter(v47);
    *(_QWORD *)&v49 = Artwork.contentMode.getter(v48).n128_u64[0];
    v51 = ArtworkLoaderConfig.size.getter(objc_msgSend(v44, "setContentMode:", v50, v49));
    v53 = ArtworkView.imageSize.setter(v51, v52);
    v54 = Artwork.backgroundColor.getter(v53);
    if (!v54)
    {
      sub_1000117FC();
      v54 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v54);
    objc_msgSend(v44, "setContentMode:", 2, swift_release(v46).n128_f64[0]);
    v55 = type metadata accessor for ArtworkView(0);
    v56 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v127 = v43;
    v114 = v56;
    v115 = v55;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v43, 2, 1, v44, v55, v56);
    v57 = *(char **)&v37[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView];
    v58 = CondensedAdLockupWithIconBackground.lockup.getter(objc_msgSend(*(id *)&v57[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_offerLabel], "_setTextColorFollowsTintColor:", 0));
    v59 = v119;
    v60 = v120;
    (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v120, enum case for OfferButtonPresenterViewAlignment.right(_:), v25);
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
    v62 = v121;
    v61(v121, 1, 1, v25);
    v63 = sub_10000E99C((unint64_t *)&unk_1007F7720, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
    AccessibilityConditional.init(value:axValue:)(v60, v62, v25, v63);
    v64 = sub_10000DF3C((uint64_t *)&unk_1007FE0A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v29, 0, 1, v64);
    v65 = type metadata accessor for OfferStyle(0);
    v66 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v122, 1, 1, v65);
    v67 = type metadata accessor for OfferEnvironment(0);
    v68 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v123, 1, 1, v67);
    v69 = type metadata accessor for OfferTint(0);
    v70 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v124, 1, 1, v69);
    v71 = sub_10000DF3C((uint64_t *)&unk_1007F7730);
    v72 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v125, 1, 1, v71);
    sub_10054F220(v58, v57, (uint64_t)v29, v126, 0, 0, v66, v68, v70, v72);
    v57[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 1;
    sub_10028DF50();
    objc_msgSend(v57, "setNeedsLayout");
    sub_10028DF50();
    swift_release(v58);
    sub_100011088(v72, (uint64_t *)&unk_1007F7C10);
    sub_100011088(v70, (uint64_t *)&unk_1007F76F0);
    sub_100011088(v68, (uint64_t *)&unk_1007F7C20);
    sub_100011088(v66, (uint64_t *)&unk_1007F7700);
    v73 = (id)sub_100011088((uint64_t)v29, (uint64_t *)&unk_1007F7710);
    v74 = *(void **)&v57[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_headingLabel];
    if (v74)
    {
      v75 = (void *)objc_opt_self(UIColor);
      v76 = v74;
      v77 = objc_msgSend(v75, "whiteColor");
      objc_msgSend(v76, "setTextColor:", v77);

    }
    v78 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel;
    v79 = *(void **)&v57[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_tertiaryTitleLabel];
    if (v79)
    {
      v80 = (void *)objc_opt_self(UIColor);
      v81 = v79;
      v82 = objc_msgSend(v80, "whiteColor");
      objc_msgSend(v81, "setTextColor:", v82);

      v83 = *(void **)&v57[v78];
      if (v83)
      {
        v84 = qword_1007F2208;
        v85 = v83;
        if (v84 != -1)
          swift_once(&qword_1007F2208, sub_1004139A0);
        v86 = type metadata accessor for FontUseCase(0);
        v87 = sub_1000117A8(v86, (uint64_t)qword_100854B18);
        v88 = *(_QWORD *)(v86 - 8);
        v89 = v113;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v113, v87, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v86);
        dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v89);

        v73 = *(id *)&v57[v78];
        if (v73)
          v73 = objc_msgSend(v73, "setAccessibilityIgnoresInvertColors:", 1);
      }
    }
    v90 = CondensedAdLockupWithIconBackground.lockup.getter(v73);
    v92 = Lockup.icon.getter(v91);
    swift_release(v90);
    if (v92)
    {
      v93 = (double *)&v57[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics];
      v94 = swift_beginAccess(&v57[OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_metrics], v131, 0, 0);
      v95 = *v93;
      v96 = v93[1];
      v97 = v116;
      v98 = Artwork.crop.getter(v94);
      v99 = Artwork.Crop.preferredContentMode.getter(v98);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v118);
      v100 = Artwork.config(_:mode:prefersLayeredImage:)(v99, 0, v95, v96);
      v101 = OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView;
      v102 = *(id *)&v57[OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView];
      v103 = v128;
      Artwork.style.getter(v102);
      v104 = ArtworkView.style.setter(v103);
      *(_QWORD *)&v105 = Artwork.contentMode.getter(v104).n128_u64[0];
      v107 = ArtworkLoaderConfig.size.getter(objc_msgSend(v102, "setContentMode:", v106, v105));
      v109 = ArtworkView.imageSize.setter(v107, v108);
      v110 = Artwork.backgroundColor.getter(v109);
      if (!v110)
      {
        sub_1000117FC();
        v110 = static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter(v110);

      v111 = *(void **)&v57[v101];
      objc_msgSend(v111, "setContentMode:", 1);
      v112 = v111;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v100, 2, 1, v112, v115, v114);
      swift_release(v92);
      swift_release(v100);

    }
    swift_release(v130);
    swift_release(v127);
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v33);
    __break(1u);
  }
}

uint64_t type metadata accessor for CondensedAdLockupWithIconBackgroundView()
{
  return objc_opt_self(_TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView);
}

double sub_10009490C(uint64_t a1, uint64_t a2)
{
  return sub_10028BD34(a1, a2);
}

uint64_t sub_100094934()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView)
                            + OBJC_IVAR____TtC22SubscribePageExtension19TodayCardLockupView_isDisplayingSearchAd);
}

void sub_100094954()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView;
  v2 = type metadata accessor for TodayCardLockupView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView;
  v4 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_pageTraits] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010062E5C0, "SubscribePageExtension/CondensedAdLockupWithIconBackgroundView.swift", 68, 2, 57, 0);
  __break(1u);
}

void sub_100094A10(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  _QWORD v28[43];
  uint64_t v29;

  v2 = v1;
  sub_100011020(a1, (uint64_t)v28);
  v3 = sub_10000DF3C((uint64_t *)&unk_1007F4800);
  v5 = type metadata accessor for CondensedAdLockupWithIconBackground(0, v4);
  if (swift_dynamicCast(&v29, v28, v3, v5, 6))
  {
    v7 = v29;
    v8 = CondensedAdLockupWithIconBackground.backgroundArtwork.getter(v6);
    v9 = objc_msgSend(v2, "traitCollection");
    v10 = PageGrid.columnWidth.getter(v9);
    if (qword_1007F1928 != -1)
      swift_once(&qword_1007F1928, sub_10028C58C);
    sub_100076534((uint64_t)&xmmword_100853160, (uint64_t)v28);
    if (qword_1007F1930 != -1)
      swift_once(&qword_1007F1930, sub_10028CA54);
    sub_10028E66C((uint64_t)v28, (uint64_t)&xmmword_1008532C0, v9, v10);
    v12 = v11;
    sub_100076570(v28);
    if (v10 > v12)
      v13 = v10;
    else
      v13 = v12;
    v14 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v13, v13);
    swift_release(v8);

    v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView];
    v16 = type metadata accessor for ArtworkView(0);
    v17 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v18 = ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v14, 2, 1, v15, v16, v17);
    v19 = CondensedAdLockupWithIconBackground.lockup.getter(v18);
    v21 = Lockup.icon.getter(v20);
    swift_release(v19);
    if (v21)
    {
      if (qword_1007F1A60 != -1)
        swift_once(&qword_1007F1A60, sub_1002A9320);
      v22 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v23 = sub_1000117A8(v22, (uint64_t)qword_100853778);
      v24 = SmallLockupLayout.Metrics.artworkSize.getter(v23);
      v26 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v24, v25);
      v27 = objc_retain(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension39CondensedAdLockupWithIconBackgroundView_lockupView]
                              + OBJC_IVAR____TtC22SubscribePageExtension14BaseLockupView_artworkView));
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v26, 2, 1, v27, v16, v17);
      swift_release(v21);
      swift_release(v26);

    }
    swift_release(v7);
    swift_release(v14);
  }
}

id sub_100094CC8(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSString v10;

  v5 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeLabel];
  objc_msgSend(v5, "setHidden:", 1);
  v6 = &v2[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeText];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeText + 8];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  swift_bridgeObjectRelease(v7);
  v8 = *((_QWORD *)v6 + 1);
  if (v8)
  {
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = *(_QWORD *)v6 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v6 + 1));
      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v8);
      objc_msgSend(v5, "setText:", v10);

      objc_msgSend(v5, "setHidden:", 0);
    }
  }
  return objc_msgSend(v2, "setNeedsLayout");
}

id sub_100094DA4()
{
  char *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSString v6;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText + 8];
  if (v2)
  {
    v3 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText] & 0xFFFFFFFFFFFFLL;
    if (v3)
    {
      v4 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel];
      v5 = swift_bridgeObjectRetain(v2);
      dispatch thunk of DynamicTypeTextView.hyphenationFactor.setter(v5, 0.1);
      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      objc_msgSend(v4, "setText:", v6);

      objc_msgSend(v4, "setHidden:", 0);
    }
  }
  return objc_msgSend(v1, "setNeedsLayout");
}

char *sub_100094E68(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  double left;
  double bottom;
  double right;
  char *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  objc_super v50;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for CornerStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_itemLayoutContext];
  v15 = type metadata accessor for ItemLayoutContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeText];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v4[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext];
  v19 = type metadata accessor for ChartOrCategoryBrickContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeTextView(0));
  v21 = v4;
  v22 = objc_msgSend(v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v23 = OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel;
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel] = v22;
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v22;
  v26 = objc_msgSend(v24, "clearColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = *(void **)&v21[v23];
  objc_msgSend(v27, "setEditable:", 0);
  objc_msgSend(v27, "setSelectable:", 0);
  objc_msgSend(v27, "setUserInteractionEnabled:", 0);
  v28 = v27;
  dispatch thunk of DynamicTypeTextView.attributedTextShouldOverrideTextViewAttributes.setter(0);

  v29 = *(id *)&v21[v23];
  dispatch thunk of DynamicTypeTextView.lineBreakMode.setter(4);

  type metadata accessor for DynamicTypeLabel(0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeLabel] = DynamicTypeLabel.__allocating_init(frame:)(0.0, 0.0, 0.0, 0.0);
  v30 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v31 = OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView;
  *(_QWORD *)&v21[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView] = v30;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for CornerStyle.continuous(_:), v10);
  ArtworkView.setCorner(radius:style:)(v13, 8.0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v32 = *(id *)&v21[v31];
  ArtworkView.frameUpdatesImageSize.setter(0);

  v33 = *(id *)&v21[v31];
  ArtworkView.clipImageToBounds.setter(1);

  v50.receiver = v21;
  v50.super_class = ObjectType;
  v34 = objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v38 = (char *)v34;
  objc_msgSend(v38, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v39 = objc_msgSend(v38, "contentView");
  objc_msgSend(v39, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v40 = objc_msgSend(v38, "contentView");
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v38[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView]);

  v41 = objc_msgSend(v38, "contentView");
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v38[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel]);

  v42 = objc_msgSend(v38, "contentView");
  v43 = OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeLabel;
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v38[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeLabel]);

  v44 = objc_msgSend(*(id *)&v38[v43], "layer");
  objc_msgSend(v44, "setCompositingFilter:", kCAFilterPlusL);

  v45 = sub_10000DF3C((uint64_t *)&unk_1007F6BA0);
  v46 = swift_allocObject(v45, 48, 7);
  *(_OWORD *)(v46 + 16) = xmmword_10066FBA0;
  *(_QWORD *)(v46 + 32) = type metadata accessor for UITraitLegibilityWeight(0);
  *(_QWORD *)(v46 + 40) = &protocol witness table for UITraitLegibilityWeight;
  v47 = v38;
  v48 = UIView.registerForTraitChanges<A>(_:handler:)(v46, sub_10007CBAC, 0, ObjectType);
  swift_unknownObjectRelease(v48);
  swift_bridgeObjectRelease(v46);

  return v47;
}

uint64_t sub_100095434()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  uint64_t v19;
  __n128 v21;
  uint64_t v22;
  double v23;
  void *v24;
  id v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  id v33;
  id v34;
  _QWORD *v35;
  _QWORD *v36;
  Class isa;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  double v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD v53[5];
  _QWORD v54[5];
  _QWORD v55[5];
  char v56[24];
  objc_super v57;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v52 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0, v4);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007F7CE8);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ChartOrCategoryBrickContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v46 - v16;
  v57.receiver = v0;
  v57.super_class = ObjectType;
  v18 = ObjectType;
  objc_msgSendSuper2(&v57, "layoutSubviews", v15);
  v19 = (uint64_t)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext], v56, 0, 0);
  sub_100097814(v19, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_100011088((uint64_t)v9, &qword_1007F7CE8);
  v21.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
  v22 = sub_100095838(v21);
  *(_QWORD *)&v23 = swift_release(v22).n128_u64[0];
  v24 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel];
  v25 = objc_msgSend(v24, "textContainer", v23);
  v26 = LayoutMarginsAware<>.layoutFrame.getter(v18);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = objc_msgSend(v0, "traitCollection");
  v48 = v3;
  v34 = v33;
  v35 = sub_10009785C(v26, v28, v30, v32, (uint64_t)v17, (uint64_t)v33);
  v47 = v2;
  v36 = v35;

  sub_100019574(0, &qword_1007F7CF8, UIBezierPath_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "setExclusionPaths:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
  v38 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeLabel];
  v55[3] = type metadata accessor for DynamicTypeLabel(0);
  v55[4] = &protocol witness table for UILabel;
  v55[0] = v38;
  v54[3] = type metadata accessor for DynamicTypeTextView(0);
  v54[4] = sub_10000E99C(&qword_1007F7D00, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeTextView, (uint64_t)&protocol conformance descriptor for DynamicTypeTextView);
  v54[0] = v24;
  v39 = *(void **)&v0[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView];
  v53[3] = type metadata accessor for ArtworkView(0);
  v53[4] = &protocol witness table for UIView;
  v53[0] = v39;
  v40 = v38;
  v41 = v24;
  v42 = v39;
  v43 = v49;
  ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:)(v13, v55, v54, v53);
  v44 = LayoutMarginsAware<>.layoutFrame.getter(v18);
  v45 = v52;
  ChartOrCategoryBrickCollectionViewCellLayout.placeChildren(relativeTo:in:)(v0, v44);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
}

uint64_t sub_100095838(__n128 a1)
{
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  char v41;
  char v42;
  __n128 v43;
  double v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char v93[24];

  v2 = type metadata accessor for Artwork.Crop(0, a1);
  v84 = *(_QWORD *)(v2 - 8);
  v85 = v2;
  v3 = __chkstk_darwin(v2);
  v83 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics(0, v3);
  v87 = *(_QWORD *)(v5 - 8);
  v88 = v5;
  __chkstk_darwin(v5);
  v86 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Style(0, v7);
  __chkstk_darwin(v8);
  v91 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AspectRatio(0);
  v89 = *(_QWORD *)(v10 - 8);
  v90 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ChartOrCategoryBrickStyle(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000DF3C(&qword_1007F7CE8);
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ChartOrCategoryBrickContext(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v1;
  v25 = &v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext], v93, 0, 0);
  v26 = (uint64_t)v25;
  v27 = v21;
  sub_100097814(v26, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_100011088((uint64_t)v20, &qword_1007F7CE8);
    return 0;
  }
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  v29 = ChartOrCategoryBrickContext.currentArtwork.getter(v28);
  v30 = v22;
  v31 = v24;
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v21);
    return 0;
  }
  v32 = v29;
  v33 = v30;
  ChartOrCategoryBrickContext.style.getter();
  v34 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v34 == enum case for ChartOrCategoryBrickStyle.tile(_:)
    || v34 == enum case for ChartOrCategoryBrickStyle.pill(_:))
  {
    v59 = v92;
    v60 = objc_msgSend(v92, "frame");
    v62 = v61;
    v64 = v63;
    Artwork.size.getter(v60);
    AspectRatio.init(_:_:)(v65);
    v66 = AspectRatio.maxSize(filling:)(v62, v64);
    v68 = v67;
    v69 = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v13, v90);
    Artwork.contentMode.getter(v69);
    v48 = Artwork.config(_:mode:prefersLayeredImage:)(v70, 0, v66, v68);
    v71 = *(void **)&v59[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView];
    v72 = v91;
    Artwork.style.getter(v48);
    v73 = ArtworkView.style.setter(v72);
    *(_QWORD *)&v74 = Artwork.contentMode.getter(v73).n128_u64[0];
    v76 = ArtworkLoaderConfig.size.getter(objc_msgSend(v71, "setContentMode:", v75, v74));
    v78 = ArtworkView.imageSize.setter(v76, v77);
    v79 = Artwork.backgroundColor.getter(v78);
    if (!v79)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v79 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v79);
    v58 = v32;
  }
  else
  {
    if (v34 != enum case for ChartOrCategoryBrickStyle.round(_:))
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v27);
      swift_release(v32);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return 0;
    }
    v35 = v32;
    v36 = v86;
    v37 = ChartOrCategoryBrickContext.layoutMetrics.getter();
    *(double *)&v38 = COERCE_DOUBLE(ChartOrCategoryBrickCollectionViewCellLayout.Metrics.artworkSize.getter(v37));
    v40 = v39;
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v36, v88);
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v27);
      swift_release(v35);
      return 0;
    }
    v44 = *(double *)&v38;
    v45 = v83;
    v46 = Artwork.crop.getter(v43);
    v47 = Artwork.Crop.preferredContentMode.getter(v46);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v45, v85);
    v48 = Artwork.config(_:mode:prefersLayeredImage:)(v47, 0, v44, v40);
    v49 = v91;
    v50 = *(void **)&v92[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView];
    Artwork.style.getter(v48);
    v51 = ArtworkView.style.setter(v49);
    *(_QWORD *)&v52 = Artwork.contentMode.getter(v51).n128_u64[0];
    v54 = ArtworkLoaderConfig.size.getter(objc_msgSend(v50, "setContentMode:", v53, v52));
    v56 = ArtworkView.imageSize.setter(v54, v55);
    v57 = Artwork.backgroundColor.getter(v56);
    if (!v57)
    {
      sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
      v57 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v57);
    v58 = v35;
  }
  v80 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v31, v27, v80);
  return v48;
}

id sub_100095DB4(_QWORD *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[40];
  _QWORD v25[5];

  v3 = v2;
  v6 = sub_10000DF3C(&qword_1007F7CE8);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100011020((uint64_t)a1, (uint64_t)v25);
  sub_100011020((uint64_t)v25, (uint64_t)v24);
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(v24, sub_1002F7B00, 0, a2);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v25);
  v9 = type metadata accessor for ChartOrCategoryBrickContext(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v10 = (uint64_t)&v3[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(&v3[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext], v25, 33, 0);
  sub_100097F10((uint64_t)v8, v10);
  swift_endAccess(v25);
  sub_100095F64(v11);
  v12 = a1[3];
  v13 = a1[4];
  sub_100011064(a1, v12);
  v14 = dispatch thunk of ChartOrCategoryBrick.brickTitle.getter(v12, v13);
  v16 = v15;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel], "setHidden:", 1);
  v17 = (uint64_t *)&v3[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText];
  v18 = *(_QWORD *)&v3[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText + 8];
  *v17 = v14;
  v17[1] = v16;
  swift_bridgeObjectRelease(v18);
  sub_100094DA4();
  v19 = a1[3];
  v20 = a1[4];
  sub_100011064(a1, v19);
  v21 = dispatch thunk of ChartOrCategoryBrick.brickBadge.getter(v19, v20);
  sub_100094CC8(v21, v22);
  return objc_msgSend(v3, "setNeedsLayout");
}

uint64_t sub_100095F64(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  void (*v85)(char *, uint64_t, __n128);
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;
  char v90;
  __n128 v91;
  void (*v92)(char *, uint64_t, __n128);
  void *v93;
  uint64_t v94;
  void *v95;
  _QWORD v96[2];
  void *v97;
  uint64_t v98;
  void *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  id v103;
  void *v104;
  uint64_t (*v105)(char *, uint64_t);
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117[32];

  v2 = v1;
  v3 = type metadata accessor for ChartOrCategoryBrickStyle(0, a1);
  v109 = *(_QWORD *)(v3 - 8);
  v110 = v3;
  __chkstk_darwin(v3);
  v108 = (char *)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v107 = (char *)v96 - v6;
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F4D60);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for ChartOrCategoryBrickContext.LabelMetrics(0, v8);
  v106 = *(_QWORD *)(v112 - 8);
  v11 = __chkstk_darwin(v112);
  v13 = (char *)v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for ChartOrCategoryBrickContext.BrickLabelMetrics(0, v11);
  v105 = *(uint64_t (**)(char *, uint64_t))(v111 - 8);
  __chkstk_darwin(v111);
  v15 = (char *)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F7CE8);
  __chkstk_darwin(v16);
  v18 = (char *)v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ChartOrCategoryBrickContext(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(v23, v117, 0, 0);
  sub_100097814(v23, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_100011088((uint64_t)v18, &qword_1007F7CE8);
  v98 = v20;
  v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v100 = v22;
  v102 = v19;
  v25(v22, v18, v19);
  v26 = objc_msgSend(v2, "traitCollection");
  v27 = UITraitCollection.modifyingTraits(_:)(sub_100096808, 0);

  v28 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel];
  v29 = sub_100019574(0, (unint64_t *)&qword_1007F4D40, UIColor_ptr);
  v30 = (void *)static UIColor.primaryText.getter();
  v31 = objc_msgSend(v30, "resolvedColorWithTraitCollection:", v27);

  v101 = v10;
  v103 = v28;
  objc_msgSend(v28, "setTextColor:", v31);

  v99 = v2;
  v32 = *(void **)&v2[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_badgeLabel];
  v96[1] = v29;
  v34 = (void *)static UIColor.tertiaryText.getter(v33);
  v97 = (void *)v27;
  v35 = objc_msgSend(v34, "resolvedColorWithTraitCollection:", v27);

  v104 = v32;
  objc_msgSend(v32, "setTextColor:", v35);

  v36 = v100;
  v37 = ((uint64_t (*)(void))ChartOrCategoryBrickContext.labels.getter)();
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v37);
  v38 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v105 + 1);
  v39 = v111;
  v40 = v38(v15, v111);
  v41 = v38;
  v42 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v40);
  v43 = *(void (**)(char *, uint64_t))(v106 + 8);
  v44 = v112;
  v43(v13, v112);
  v45 = dispatch thunk of DynamicTypeTextView.numberOfLines.setter(v42);
  v46 = v36;
  v47 = ChartOrCategoryBrickContext.labels.getter(v45);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v47);
  v48 = v41(v15, v39);
  v105 = v41;
  v49 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v48);
  v43(v13, v44);
  v50 = ChartOrCategoryBrickContext.labels.getter(objc_msgSend(v32, "setNumberOfLines:", v49));
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v50);
  v51 = v41(v15, v39);
  v52 = v101;
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v51);
  v43(v13, v44);
  v53 = type metadata accessor for FontUseCase(0);
  v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v54(v52, 0, 1, v53);
  v55 = dispatch thunk of DynamicTypeTextView.fontUseCase.setter(v52);
  v56 = ChartOrCategoryBrickContext.labels.getter(v55);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v56);
  v57 = v105(v15, v39);
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v57);
  v43(v13, v112);
  v58 = v43;
  v54(v52, 0, 1, v53);
  v59 = dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v52);
  v60 = ChartOrCategoryBrickContext.labels.getter(v59);
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v60);
  v61 = v111;
  v62 = v105;
  v63 = v105(v15, v111);
  v64 = ChartOrCategoryBrickContext.LabelMetrics.contentSizeCategoryMapping.getter(v63);
  v66 = v65;
  v67 = v112;
  v43(v13, v112);
  v68 = v66;
  v69 = v110;
  v70 = dispatch thunk of DynamicTypeTextView.contentSizeCategoryMapping.setter(v64, v68);
  v71 = v46;
  v72 = ChartOrCategoryBrickContext.labels.getter(v70);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v72);
  v73 = v62(v15, v61);
  v74 = ChartOrCategoryBrickContext.LabelMetrics.contentSizeCategoryMapping.getter(v73);
  v75 = v13;
  v76 = v104;
  v58(v75, v67);
  v77 = dispatch thunk of DynamicTypeLabel.contentSizeCategoryMapping.setter(v74);
  v78 = v107;
  ChartOrCategoryBrickContext.style.getter(v77);
  v80 = v108;
  v79 = v109;
  (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v108, enum case for ChartOrCategoryBrickStyle.round(_:), v69);
  v81 = sub_10000E99C(&qword_1007F7CF0, (uint64_t (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickStyle, (uint64_t)&protocol conformance descriptor for ChartOrCategoryBrickStyle);
  dispatch thunk of RawRepresentable.rawValue.getter(&v115, v69, v81);
  dispatch thunk of RawRepresentable.rawValue.getter(&v113, v69, v81);
  v82 = v116;
  v83 = v114;
  if (v115 == v113 && v116 == v114)
  {
    v84 = swift_bridgeObjectRelease_n(v116, 2);
    v85 = *(void (**)(char *, uint64_t, __n128))(v79 + 8);
    v85(v80, v69, v84);
    v86 = ((uint64_t (*)(char *, uint64_t))v85)(v78, v69);
    v87 = v99;
    v88 = v98;
    v89 = v97;
LABEL_7:
    v93 = (void *)static UIColor.secondaryText.getter(v86);
    objc_msgSend(v103, "setTextColor:", v93);

    v95 = (void *)static UIColor.tertiaryText.getter(v94);
    objc_msgSend(v76, "setTextColor:", v95);

    goto LABEL_8;
  }
  v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v116, v113, v114, 0);
  swift_bridgeObjectRelease(v82);
  v91 = swift_bridgeObjectRelease(v83);
  v92 = *(void (**)(char *, uint64_t, __n128))(v79 + 8);
  v92(v80, v69, v91);
  v86 = ((uint64_t (*)(char *, uint64_t))v92)(v78, v69);
  v87 = v99;
  v88 = v98;
  v89 = v97;
  if ((v90 & 1) != 0)
    goto LABEL_7;
LABEL_8:
  objc_msgSend(v87, "setNeedsLayout");

  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v71, v102);
}

uint64_t sub_10009669C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];
  objc_super v14;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10000DF3C(&qword_1007F7CE8);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14.receiver = v1;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, "prepareForReuse", v4);
  ArtworkView.image.setter(0);
  sub_100094CC8(0, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleLabel], "setHidden:", 1);
  v7 = &v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_titleText + 8];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  swift_bridgeObjectRelease(v8);
  sub_100094DA4();
  v9 = type metadata accessor for ChartOrCategoryBrickContext(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_brickContext];
  swift_beginAccess(v10, v13, 33, 0);
  sub_100097F10((uint64_t)v6, v10);
  return swift_endAccess(v13);
}

uint64_t sub_100096808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_100079870(a1, v1);
  return UIMutableTraits.userInterfaceStyle.setter(2, v1, v2);
}

double sub_100096844(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  double v19;
  double v20;
  _BYTE v23[24];
  CGRect v24;

  v10 = type metadata accessor for ChartOrCategoryBrickSafeArea.Location.Distance(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (double *)&v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = __chkstk_darwin(v12);
  v17 = &v23[-v16 - 8];
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
    return *(double *)(a1 + 16);
  ChartOrCategoryBrickSafeArea.Location.distanceX.getter(v15);
  (*(void (**)(double *, char *, uint64_t))(v11 + 16))(v14, v17, v10);
  v18 = (*(uint64_t (**)(double *, uint64_t))(v11 + 88))(v14, v10);
  if (v18 == enum case for ChartOrCategoryBrickSafeArea.Location.Distance.relative(_:))
  {
    (*(void (**)(double *, uint64_t))(v11 + 96))(v14, v10);
    v19 = *v14;
    v24.origin.x = a2;
    v24.origin.y = a3;
    v24.size.width = a4;
    v24.size.height = a5;
    v20 = v19 * CGRectGetWidth(v24);
  }
  else if (v18 == enum case for ChartOrCategoryBrickSafeArea.Location.Distance.absolute(_:))
  {
    (*(void (**)(double *, uint64_t))(v11 + 96))(v14, v10);
    v20 = *v14;
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v11 + 8))(v14, v10);
    v20 = 0.0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  swift_beginAccess(a1 + 16, v23, 1, 0);
  *(double *)(a1 + 16) = v20;
  *(_BYTE *)(a1 + 24) = 0;
  return v20;
}

uint64_t sub_100096A98()
{
  return type metadata accessor for ChartOrCategoryBrickCollectionViewCell(0);
}

uint64_t type metadata accessor for ChartOrCategoryBrickCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1007F7CA8;
  if (!qword_1007F7CA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChartOrCategoryBrickCollectionViewCell);
  return result;
}

void sub_100096ADC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  sub_10006A5F8(319, (unint64_t *)&qword_1007F52D0, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = &unk_100672F98;
    v6[5] = &unk_100672F98;
    sub_10006A5F8(319, &qword_1007F7CC0, (uint64_t (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickContext);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

double sub_100096BA4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100095838(a1);
  if (v2)
  {
    v4 = v2;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView);
    v6 = type metadata accessor for ArtworkView(0);
    v7 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v4, 2, 1, v5, v6, v7);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_100096C3C(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  UIImage_optional v8;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22SubscribePageExtension38ChartOrCategoryBrickCollectionViewCell_artworkView);
  v8.value.super.isa = 0;
  v8.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v8, a3);
  v5 = type metadata accessor for ArtworkView(0);
  v6 = sub_10000E99C((unint64_t *)&qword_1007F5DD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  return ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v4, 1, v5, v6);
}

uint64_t sub_100096CB8()
{
  return sub_10000E99C(&qword_1007F7CC8, type metadata accessor for ChartOrCategoryBrickCollectionViewCell, (uint64_t)&unk_100672FB0);
}

double sub_100096CE4(__n128 a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t KeyPath;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  double (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  __n128 v80;
  double (*v81)(char *, uint64_t);
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  double v98;
  double v99;
  __n128 v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  double v107;
  __n128 v108;
  __n128 v109;
  void (*v111)(char *, uint64_t);
  char *v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  _QWORD v138[5];
  char v139[8];
  _QWORD v140[5];
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;

  v122 = type metadata accessor for LabelPlaceholder(0, a1);
  v120 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v121 = (char *)&v111 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for FontUseCase(0);
  v116 = *(_QWORD *)(v126 - 8);
  v2 = __chkstk_darwin(v126);
  v118 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for ChartOrCategoryBrickContext.LabelMetrics(0, v2);
  v115 = *(_QWORD **)(v119 - 8);
  v4 = __chkstk_darwin(v119);
  v6 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for ChartOrCategoryBrickContext.BrickLabelMetrics(0, v4);
  v114 = *(_QWORD *)(v125 - 8);
  v7 = __chkstk_darwin(v125);
  v9 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for DynamicTextAppearance(0, v7);
  v127 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v117 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v111 - v12;
  __chkstk_darwin(v14);
  v137 = (char *)&v111 - v15;
  v17 = __chkstk_darwin(v16);
  v129 = (char *)&v111 - v18;
  v133 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0, v17);
  v132 = *(_QWORD *)(v133 - 8);
  v19 = __chkstk_darwin(v133);
  v131 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ChartOrCategoryBrickStyle(0, v19);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for PageGrid(0);
  v134 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v26 = (void (**)(char *, uint64_t))((char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for ChartOrCategoryBrickContext(0);
  v135 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v128 = (char *)&v111 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v111 - v30;
  v32 = sub_10000DF3C(&qword_1007F7CD0);
  ItemLayoutContext.typedModel<A>(as:)(&v144, v32, v32);
  if (!*((_QWORD *)&v145 + 1))
  {
    sub_100011088((uint64_t)&v144, (uint64_t *)&unk_1007F7CD8);
    return 0.0;
  }
  v124 = v27;
  sub_100010F3C(&v144, (uint64_t)&v147);
  KeyPath = swift_getKeyPath(&unk_100673030);
  ItemLayoutContext.subscript.getter(v140);
  swift_release(KeyPath);
  v34 = (void *)v140[0];
  sub_100011020((uint64_t)&v147, (uint64_t)&v144);
  sub_100011020((uint64_t)&v144, (uint64_t)&v141);
  v35 = v34;
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(&v141, sub_1002F7B00, 0, v35);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v144);

  v36 = swift_getKeyPath(&unk_100673068);
  ItemLayoutContext.subscript.getter(&v144);
  swift_release(v36);
  v123 = v144;
  v37 = swift_getKeyPath(&unk_100673098);
  ItemLayoutContext.subscript.getter(v26);
  swift_release(v37);
  v38 = PageGrid.componentMeasuringSize(spanning:)(1.0);
  v40 = v39;
  ChartOrCategoryBrickContext.style.getter(v41);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  v43 = v26;
  if ((_DWORD)v42 == enum case for ChartOrCategoryBrickStyle.tile(_:)
    || (_DWORD)v42 == enum case for ChartOrCategoryBrickStyle.pill(_:))
  {
    v91 = v135;
    v102 = v128;
    v93 = v124;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v128, v31, v124);
    v146 = 0;
    v144 = 0u;
    v145 = 0u;
    v143 = 0;
    v142 = 0u;
    v141 = 0u;
    v103 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v103, *(unsigned int *)(v103 + 48), *(unsigned __int16 *)(v103 + 52));
    v104 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    v140[3] = v103;
    v140[4] = &protocol witness table for LayoutViewPlaceholder;
    v140[0] = v104;
    v105 = v131;
    ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:)(v102, &v144, &v141, v140);
    v106 = v123;
    ChartOrCategoryBrickCollectionViewCellLayout.measurements(fitting:in:)(v123, v38, v40);
    v99 = v107;
    v108 = swift_unknownObjectRelease(v106);
    (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v105, v133, v108);
    (*(void (**)(_QWORD *, uint64_t))(v134 + 8))(v26, v136);
    goto LABEL_8;
  }
  if ((_DWORD)v42 != enum case for ChartOrCategoryBrickStyle.round(_:))
  {
    v109 = swift_unknownObjectRelease(v123);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v134 + 8))(v26, v136, v109);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v31, v124);
    _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v147);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    return 0.0;
  }
  v44 = DynamicTextAppearance.init()(v42);
  v45 = ChartOrCategoryBrickContext.labels.getter(v44);
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v45);
  v114 = *(_QWORD *)(v114 + 8);
  v46 = v125;
  v47 = ((uint64_t (*)(char *, uint64_t))v114)(v9, v125);
  v48 = v118;
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v47);
  v111 = (void (*)(char *, uint64_t))v115[1];
  v49 = v119;
  v111(v6, v119);
  DynamicTextAppearance.withFontUseCase(_:)(v48);
  v115 = v43;
  v113 = *(void (**)(char *, uint64_t))(v116 + 8);
  v113(v48, v126);
  v116 = *(_QWORD *)(v127 + 8);
  v50 = ((uint64_t (*)(char *, uint64_t))v116)(v13, v130);
  v51 = ChartOrCategoryBrickContext.labels.getter(v50);
  ChartOrCategoryBrickContext.BrickLabelMetrics.title.getter(v51);
  v52 = (uint64_t (*)(char *, uint64_t))v114;
  v53 = ((uint64_t (*)(char *, uint64_t))v114)(v9, v46);
  v54 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v53);
  v112 = v13;
  v55 = v111;
  v111(v6, v49);
  v56 = v137;
  DynamicTextAppearance.withNumberOfLines(_:)(v54);
  v57 = ((uint64_t (*)(char *, uint64_t))v116)(v56, v130);
  v58 = v117;
  v59 = DynamicTextAppearance.init()(v57);
  v60 = ChartOrCategoryBrickContext.labels.getter(v59);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v60);
  v61 = v52(v9, v46);
  ChartOrCategoryBrickContext.LabelMetrics.fontUseCase.getter(v61);
  v55(v6, v49);
  v62 = v112;
  DynamicTextAppearance.withFontUseCase(_:)(v48);
  v113(v48, v126);
  v63 = v130;
  v64 = (double (*)(char *, uint64_t))v116;
  v65 = ((uint64_t (*)(char *, uint64_t))v116)(v58, v130);
  v66 = ChartOrCategoryBrickContext.labels.getter(v65);
  ChartOrCategoryBrickContext.BrickLabelMetrics.badge.getter(v66);
  v67 = ((uint64_t (*)(char *, uint64_t))v114)(v9, v125);
  v68 = ChartOrCategoryBrickContext.LabelMetrics.numberOfLines.getter(v67);
  v55(v6, v49);
  DynamicTextAppearance.withNumberOfLines(_:)(v68);
  v69 = v62;
  v70 = v63;
  v71.n128_f64[0] = v64(v62, v63);
  ChartOrCategoryBrickContext.model.getter(&v144, v71);
  v72 = *((_QWORD *)&v145 + 1);
  v73 = v146;
  sub_100011064(&v144, *((uint64_t *)&v145 + 1));
  v74 = dispatch thunk of ChartOrCategoryBrick.brickTitle.getter(v72, v73);
  v76 = v75;
  v77 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
  v77(v62, v129, v70);
  v78 = LabelPlaceholder.Options.init(rawValue:)(0);
  v79 = v121;
  LabelPlaceholder.init(_:with:where:)(v74, v76, v62, v78);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v144);
  LabelPlaceholder.layoutTextView.getter(&v144, v80);
  v81 = *(double (**)(char *, uint64_t))(v120 + 8);
  v82 = v122;
  v83.n128_f64[0] = v81(v79, v122);
  ChartOrCategoryBrickContext.model.getter(&v141, v83);
  v84 = *((_QWORD *)&v142 + 1);
  v85 = v143;
  sub_100011064(&v141, *((uint64_t *)&v142 + 1));
  v86 = dispatch thunk of ChartOrCategoryBrick.brickBadge.getter(v84, v85);
  v88 = v87;
  v77(v69, v137, v70);
  v89 = LabelPlaceholder.Options.init(rawValue:)(0);
  LabelPlaceholder.init(_:with:where:)(v86, v88, v69, v89);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v141);
  LabelPlaceholder.layoutTextView.getter(&v141, v90);
  v81(v79, v82);
  v91 = v135;
  v92 = v128;
  v93 = v124;
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v128, v31, v124);
  sub_100011020((uint64_t)&v141, (uint64_t)v140);
  sub_100011020((uint64_t)&v144, (uint64_t)v139);
  v94 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v94, *(unsigned int *)(v94 + 48), *(unsigned __int16 *)(v94 + 52));
  v95 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  v138[4] = &protocol witness table for LayoutViewPlaceholder;
  v138[3] = v94;
  v138[0] = v95;
  v96 = v131;
  ChartOrCategoryBrickCollectionViewCellLayout.init(context:badgeTextView:titleTextView:artworkView:)(v92, v140, v139, v138);
  v97 = v123;
  ChartOrCategoryBrickCollectionViewCellLayout.measurements(fitting:in:)(v123, v38, v40);
  v99 = v98;
  v100 = swift_unknownObjectRelease(v97);
  (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v96, v133, v100);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v141);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v144);
  v101 = (void (*)(char *, uint64_t))v116;
  ((void (*)(char *, uint64_t))v116)(v137, v70);
  v101(v129, v70);
  (*(void (**)(_QWORD *, uint64_t))(v134 + 8))(v115, v136);
LABEL_8:
  (*(void (**)(char *, uint64_t))(v91 + 8))(v31, v93);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v147);
  return v99;
}

uint64_t sub_100097814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F7CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10009785C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v55 = a6;
  v10 = type metadata accessor for ChartOrCategoryBrickSafeArea.Location.RelativeLocation(0);
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  v11 = __chkstk_darwin(v10);
  v57 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for ChartOrCategoryBrickSafeArea.Constraint(0, v11);
  v13 = *(_QWORD *)(v56 - 8);
  v14 = __chkstk_darwin(v56);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ChartOrCategoryBrickSafeArea.Location(0, v14);
  v60 = *(_QWORD *)(v17 - 8);
  v61 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000DF3C(&qword_1007F7D08);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ChartOrCategoryBrickSafeArea(0, v21);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChartOrCategoryBrickContext.model.getter(v62, v26);
  v29 = v63;
  v30 = v64;
  sub_100011064(v62, v63);
  dispatch thunk of ChartOrCategoryBrick.artworkSafeArea.getter(v29, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v23, v24);
    v32 = _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
    v33 = ChartOrCategoryBrickSafeArea.location.getter(v32);
    ChartOrCategoryBrickSafeArea.width.getter(v33);
    if ((ChartOrCategoryBrickSafeArea.asRatioOfSize.getter() & 1) != 0)
    {
      v65.origin.x = a1;
      v65.origin.y = a2;
      v65.size.width = a3;
      v65.size.height = a4;
      CGRectGetWidth(v65);
    }
    ChartOrCategoryBrickSafeArea.height.getter();
    if ((ChartOrCategoryBrickSafeArea.asRatioOfSize.getter() & 1) != 0)
    {
      v66.origin.x = a1;
      v66.origin.y = a2;
      v66.size.width = a3;
      v66.size.height = a4;
      CGRectGetHeight(v66);
    }
    ChartOrCategoryBrickSafeArea.constraintType.getter();
    v34 = v56;
    v35 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v56);
    if (v35 == enum case for ChartOrCategoryBrickSafeArea.Constraint.squareByWidth(_:))
    {
      v36 = v25;
    }
    else if (v35 == enum case for ChartOrCategoryBrickSafeArea.Constraint.squareByHeight(_:))
    {
      v36 = v25;
    }
    else
    {
      v36 = v25;
      if (v35 != enum case for ChartOrCategoryBrickSafeArea.Constraint.freeForm(_:))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v34);
    }
    v37 = swift_allocObject(&unk_100725878, 32, 7);
    *(_QWORD *)(v37 + 16) = 0;
    *(_BYTE *)(v37 + 24) = 1;
    v38 = swift_allocObject(&unk_100725878, 32, 7);
    *(_QWORD *)(v38 + 16) = 0;
    *(_BYTE *)(v38 + 24) = 1;
    v39 = v57;
    ChartOrCategoryBrickSafeArea.Location.relativeLocation.getter();
    v41 = v58;
    v40 = v59;
    v42 = (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v39, v59);
    if (v42 == enum case for ChartOrCategoryBrickSafeArea.Location.RelativeLocation.topRight(_:))
    {
      v67.origin.x = a1;
      v67.origin.y = a2;
      v67.size.width = a3;
      v67.size.height = a4;
      CGRectGetMaxX(v67);
      sub_100096844(v37, a1, a2, a3, a4);
    }
    else
    {
      if (v42 != enum case for ChartOrCategoryBrickSafeArea.Location.RelativeLocation.topLeft(_:))
      {
        if (v42 != enum case for ChartOrCategoryBrickSafeArea.Location.RelativeLocation.midLeft(_:))
        {
          (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v61);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v24);
          (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
          swift_release(v37);
          swift_release(v38);
          return _swiftEmptyArrayStorage;
        }
        v70.origin.x = a1;
        v70.origin.y = a2;
        v70.size.width = a3;
        v70.size.height = a4;
        CGRectGetMinX(v70);
        sub_100096844(v37, a1, a2, a3, a4);
        v71.origin.x = a1;
        v71.origin.y = a2;
        v71.size.width = a3;
        v71.size.height = a4;
        CGRectGetMidY(v71);
        sub_100096844(v38, a1, a2, a3, a4);
LABEL_19:
        v43 = CGRect.withLayoutDirection(using:relativeTo:)(v55, a1);
        v45 = v44;
        v47 = v46;
        v49 = v48;
        v50 = sub_10000DF3C(&qword_1007F5840);
        v51 = swift_allocObject(v50, 40, 7);
        *(_OWORD *)(v51 + 16) = xmmword_10066FE60;
        v52 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRect:", v43, v45, v47, v49);
        *(_QWORD *)(v51 + 32) = v52;
        v62[0] = v51;
        specialized Array._endMutation()(v52);
        v31 = v62[0];
        (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v61);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v24);
        swift_release(v37);
        swift_release(v38);
        return (_QWORD *)v31;
      }
      v68.origin.x = a1;
      v68.origin.y = a2;
      v68.size.width = a3;
      v68.size.height = a4;
      CGRectGetMinX(v68);
      sub_100096844(v37, a1, a2, a3, a4);
    }
    v69.origin.x = a1;
    v69.origin.y = a2;
    v69.size.width = a3;
    v69.size.height = a4;
    CGRectGetMinY(v69);
    sub_100096844(v38, a1, a2, a3, a4);
    goto LABEL_19;
  }
  sub_100011088((uint64_t)v23, &qword_1007F7D08);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v62);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100097E5C()
{
  uint64_t v0;
  id v1;
  id v2;
  __int128 v4;
  uint64_t v5;
  _QWORD v6[5];

  v0 = sub_10000DF3C(&qword_1007F7CD0);
  ItemLayoutContext.typedModel<A>(as:)(&v4, v0, v0);
  if (!v5)
    return sub_100011088((uint64_t)&v4, (uint64_t *)&unk_1007F7CD8);
  sub_100010F3C(&v4, (uint64_t)v6);
  v1 = sub_1000826AC();
  v2 = objc_msgSend(v1, "traitCollection");
  swift_unknownObjectRelease(v1);
  sub_100095DB4(v6, v2);

  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v6);
}

uint64_t sub_100097F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000DF3C(&qword_1007F7CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100097F58(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  void *v17;
  id v18;
  _QWORD *v19;
  __n128 v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[40];
  void *v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[6];

  v4 = type metadata accessor for Artwork.Crop(0, a1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AspectRatio(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ChartOrCategoryBrickContext(0);
  v44 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000DF3C(&qword_1007F7CD0);
  ItemLayoutContext.typedModel<A>(as:)(&v47, v15, v15);
  if (!v48)
    return sub_100011088((uint64_t)&v47, (uint64_t *)&unk_1007F7CD8);
  v42 = a3;
  v43 = v12;
  sub_100010F3C(&v47, (uint64_t)v49);
  KeyPath = swift_getKeyPath(&unk_100673030);
  ItemLayoutContext.subscript.getter(&v46);
  swift_release(KeyPath);
  v17 = v46;
  sub_100011020((uint64_t)v49, (uint64_t)&v47);
  sub_100011020((uint64_t)&v47, (uint64_t)v45);
  v18 = v17;
  ChartOrCategoryBrickContext.init(model:fontStyles:in:)(v45, sub_1002F7B00, 0, v18);
  _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(&v47);

  v19 = _swiftEmptyArrayStorage;
  *(_QWORD *)&v47 = _swiftEmptyArrayStorage;
  v21 = sub_100096CE4(v20);
  v23 = ChartOrCategoryBrickContext.currentArtwork.getter(v22);
  if (v23)
  {
    v24 = v23;
    Artwork.size.getter(v23);
    AspectRatio.init(_:_:)(v25);
    v26.n128_f64[0] = AspectRatio.maxSize(fitting:)(1.79769313e308, v21);
    v27 = v26.n128_f64[0];
    v29 = v28;
    v30 = Artwork.crop.getter(v26);
    v31 = Artwork.Crop.preferredContentMode.getter(v30);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v32 = Artwork.config(_:mode:prefersLayeredImage:)(v31, 0, v27, v29);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
    v34 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v33 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v34 >= v33 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
    v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
    specialized Array._endMutation()(v35);
    v36 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v36);
    v19 = (_QWORD *)v47;
  }
  v37 = type metadata accessor for ArtworkLoaderConfig(0);
  swift_bridgeObjectRetain(v19);
  LOBYTE(v37) = Array.isNotEmpty.getter(v38, v37);
  swift_bridgeObjectRelease(v19);
  v39 = v47;
  if ((v37 & 1) != 0)
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v47);
  v40 = swift_bridgeObjectRelease(v39);
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v14, v43, v40);
  return _s22SubscribePageExtension38ProductRatingsCompactProductPageLayoutV7MetricsVwxx_0(v49);
}

uint64_t sub_100098258()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100098268()
{
  return sub_10000E99C(&qword_1007F7D10, type metadata accessor for ProductMediaItemCollectionViewCell, (uint64_t)&unk_1006730C8);
}

double sub_100098298(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t KeyPath;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char v57;
  char *v58;
  char v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;

  v82 = type metadata accessor for PageGrid(0);
  v90 = *(_QWORD *)(v82 - 8);
  v2 = __chkstk_darwin(v82);
  v81 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Shelf.ContentsMetadata(0, v2);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C((uint64_t *)&unk_1007F6050);
  v87 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = type metadata accessor for ProductMediaMetadata(0, v8);
  v85 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v84 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  __chkstk_darwin(v12);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v80 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v86 = (char *)&v78 - v19;
  __chkstk_darwin(v20);
  v83 = (char *)&v78 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v78 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v78 - v26;
  __chkstk_darwin(v28);
  v92 = (char *)&v78 - v29;
  v30 = type metadata accessor for ProductMediaItem(0);
  v31 = sub_10000E99C((unint64_t *)&qword_1007F5470, (uint64_t (*)(uint64_t))&type metadata accessor for ProductMediaItem, (uint64_t)&protocol conformance descriptor for ProductMediaItem);
  v91 = a1;
  v32 = ItemLayoutContext.typedModel<A>(as:)(&v93, v30, v30, v31);
  v33 = v93;
  if (v93)
  {
    v34 = ProductMediaItem.screenshot.getter(v32);
    if (v34)
    {
      v35 = v34;
      Artwork.size.getter(v34);
      AspectRatio.init(_:_:)(v36);
      v37 = swift_release(v35);
      (*(void (**)(char *, char *, uint64_t, __n128))(v16 + 32))(v14, v27, v15, v37);
    }
    else
    {
      v40 = ProductMediaItem.video.getter(0);
      if (!v40)
      {
        v45 = 1;
LABEL_8:
        v46 = v92;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, v45, 1, v15, v38);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
        {
          swift_release(v33);
          sub_100098884((uint64_t)v14);
          return 0.0;
        }
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v46, v14, v15);
        KeyPath = swift_getKeyPath(&unk_100673118);
        ItemLayoutContext.subscript.getter(v10);
        swift_release(KeyPath);
        v48 = swift_getKeyPath(&unk_100673148);
        ReadOnlyLens.subscript.getter(v48, v7);
        v49 = swift_release(v48);
        (*(void (**)(_QWORD *, uint64_t, __n128))(v87 + 8))(v10, v7, v49);
        v51 = v88;
        v50 = v89;
        if ((*(unsigned int (**)(char *, uint64_t))(v88 + 88))(v6, v89) == enum case for Shelf.ContentsMetadata.productMedia(_:))
        {
          (*(void (**)(char *, uint64_t))(v51 + 96))(v6, v50);
          v52 = v79;
          v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v84, v6, v79);
          v54 = ProductMediaMetadata.hasPortraitMedia.getter(v53);
          v55 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
          v56 = v55(v24, v46, v15);
          if ((v54 & 1) != 0)
          {
            v57 = AspectRatio.isPortrait.getter(v56);
            v58 = v92;
            v59 = v57 ^ 1;
          }
          else
          {
            v58 = v46;
            v59 = 0;
          }
          v64 = v80;
          v61 = *(void (**)(char *, uint64_t))(v16 + 8);
          v61(v24, v15);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v52);
          v60 = v86;
          v65 = v55(v86, v58, v15);
          if ((v59 & 1) != 0)
          {
            v66 = AspectRatio.isPortrait.getter(v65);
            v58 = v92;
            v67 = v66;
            v68 = ((uint64_t (*)(char *, uint64_t))v61)(v60, v15);
            v63 = v81;
            v62 = v82;
            if ((v67 & 1) == 0)
            {
              v69 = v83;
              v70 = v58;
              AspectRatio.inverted.getter(v68);
              goto LABEL_22;
            }
            v69 = v83;
LABEL_21:
            v55(v69, v58, v15);
            v70 = v58;
LABEL_22:
            v55(v64, v69, v15);
            v71 = v69;
            v72 = swift_getKeyPath(&unk_100673178);
            ItemLayoutContext.subscript.getter(v63);
            swift_release(v72);
            v74 = PageGrid.columnWidth.getter(v73);
            v75 = (*(uint64_t (**)(_QWORD *, uint64_t))(v90 + 8))(v63, v62);
            v39 = AspectRatio.height(fromWidth:)(v75, v74);
            v76 = swift_release(v33);
            ((void (*)(char *, uint64_t, __n128))v61)(v64, v15, v76);
            v61(v71, v15);
            v61(v70, v15);
            return v39;
          }
          v63 = v81;
          v62 = v82;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v50);
          v55 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
          v60 = v86;
          v55(v86, v46, v15);
          v58 = v46;
          v61 = *(void (**)(char *, uint64_t))(v16 + 8);
          v63 = v81;
          v62 = v82;
          v64 = v80;
        }
        v69 = v83;
        v61(v60, v15);
        goto LABEL_21;
      }
      v41 = v40;
      v42 = Video.preview.getter(v40);
      swift_release(v41);
      Artwork.size.getter(v43);
      AspectRatio.init(_:_:)(v44);
      v38 = swift_release(v42);
    }
    v45 = 0;
    goto LABEL_8;
  }
  return 0.0;
}

uint64_t sub_100098884(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C((uint64_t *)&unk_1007FA760);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AdInteractionActionImplementation()
{
  return &type metadata for AdInteractionActionImplementation;
}

uint64_t sub_1000988E0()
{
  return sub_10000E99C(&qword_1007F7D18, (uint64_t (*)(uint64_t))&type metadata accessor for AdInteractionAction, (uint64_t)&protocol conformance descriptor for Action);
}

uint64_t sub_10009890C(uint64_t *a1, uint64_t a2)
{
  return sub_100098914(*a1, a2);
}

uint64_t sub_100098914(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v3 = type metadata accessor for ActionOutcome(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000DF3C(&qword_1007F7D20);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AdvertActionMetrics(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  AdInteractionAction.adActionMetrics.getter(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100098D20((uint64_t)v10);
    sub_10000DF3C(&qword_100803510);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ActionOutcome.unsupported(_:), v3);
    return Promise.__allocating_init(value:)(v6);
  }
  v56 = v4;
  v57 = v6;
  v58 = v3;
  v53 = v12;
  v54 = v15;
  v17 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v55 = v11;
  v17(v15, v10, v11);
  v18 = *(_QWORD *)(a2 + qword_100854060);
  if (v18)
  {
    v52 = *(_QWORD *)(a2 + qword_100854060 + 8);
    v19 = type metadata accessor for UnimplementedAdvertInteractionMetricsReporter(0);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v20 = swift_unknownObjectRetain(v18);
    v21 = UnimplementedAdvertInteractionMetricsReporter.init()(v20);
    v22 = sub_10000DF3C(&qword_1007F7D28);
    v23 = sub_10000DF3C(&qword_1007F7D30);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(_QWORD *)(v24 + 72);
    v26 = *(unsigned __int8 *)(v24 + 80);
    v51 = v18;
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject(v22, v27 + 2 * v25, v26 | 7);
    *(_OWORD *)(v28 + 16) = xmmword_10066F870;
    v29 = v28 + v27;
    v30 = (uint64_t *)(v28 + v27 + *(int *)(v23 + 48));
    v31 = enum case for AdvertActionMetrics.ReportingDestination.promotedContent(_:);
    v32 = type metadata accessor for AdvertActionMetrics.ReportingDestination(0);
    v33 = *(void (**)(void))(*(_QWORD *)(v32 - 8) + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v29, v31, v32);
    v30[3] = v19;
    v30[4] = (uint64_t)&protocol witness table for UnimplementedAdvertInteractionMetricsReporter;
    v34 = v21;
    *v30 = v21;
    v35 = (uint64_t *)(v29 + v25 + *(int *)(v23 + 48));
    v33();
    v36 = type metadata accessor for SearchAdsAdvertInteractionMetricsReporter();
    v37 = swift_allocObject(v36, 32, 7);
    v38 = (void *)objc_opt_self(ADMetricManager);
    v39 = v51;
    swift_unknownObjectRetain(v51);
    *(_QWORD *)(v37 + 16) = objc_msgSend(v38, "sharedInstance", swift_retain(v34).n128_f64[0]);
    v40 = type metadata accessor for SearchAdsButtonStateProvider();
    v41 = swift_allocObject(v40, 32, 7);
    v42 = v52;
    *(_QWORD *)(v41 + 16) = v39;
    *(_QWORD *)(v41 + 24) = v42;
    *(_QWORD *)(v37 + 24) = v41;
    v35[3] = v36;
    v35[4] = sub_10000E99C((unint64_t *)&qword_1007F7D38, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdsAdvertInteractionMetricsReporter, (uint64_t)byte_10069000C);
    *v35 = v37;
    v43 = sub_10036981C(v28);
    v44 = type metadata accessor for AdvertActionMetricsHandler(0);
    swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    v45 = AdvertActionMetricsHandler.init(reporters:)(v43);
    v46 = v54;
    AdvertActionMetricsHandler.processAdActionMetrics(_:then:)(v54, static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:), 0);
    sub_10000DF3C(&qword_100803510);
    v47 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v57, enum case for ActionOutcome.performed(_:), v58);
    v16 = Promise.__allocating_init(value:)(v47);
    swift_release(v34);
    swift_unknownObjectRelease(v39);
    v48 = swift_release(v45);
    (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v46, v55, v48);
    return v16;
  }
  v50 = sub_10000DF3C(&qword_1007FDEA0);
  result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v50);
  __break(1u);
  return result;
}

uint64_t sub_100098D20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000DF3C(&qword_1007F7D20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ReviewsHorizontalShelf()
{
  return &type metadata for ReviewsHorizontalShelf;
}

uint64_t sub_100098D70(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x88));
  v5 = *v4;
  v6 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  if (swift_unknownObjectRetain(a1))
  {
    if (v5)
      v7 = a1 == v5;
    else
      v7 = 0;
    if (!v7)
      goto LABEL_9;
  }
  else if (v5)
  {
LABEL_9:
    CompoundScrollObserver.removeChild(_:)(v5, v6);
    v8 = *v4;
    v9 = v4[1];
    v10 = swift_unknownObjectRetain(v8);
    CompoundScrollObserver.addChild(_:)(v10, v9);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(a1);
    return swift_unknownObjectRelease(v8);
  }
  swift_unknownObjectRelease(v5);
  v8 = a1;
  return swift_unknownObjectRelease(v8);
}

double sub_100098E30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v2 = sub_10000DF3C(&qword_1007F7D40);
  __chkstk_darwin(v2);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10000DF3C(&qword_1007F7D48);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)((swift_isaMask & *a1) + 0x60);
  v10 = *(_QWORD *)((char *)a1 + v9);
  v11 = *(_QWORD *)(v10 + 48);
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 56);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v11);
    v14 = dispatch thunk of ComponentContainerDelegate.impressionsCalculator.getter(ObjectType, v12);
    if (v14)
    {
      v16 = v14;
      ImpressionsCalculator.isVisible.setter(0);
      v15 = swift_release(v16);
    }
    dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, v12, v15);
    v17 = WritableStateLens.init(_:)(v4, &type metadata for ReviewsHorizontalShelf.ScrollState);
    __chkstk_darwin(v17);
    *(&v30 - 2) = (uint64_t)a1;
    sub_1000996A8();
    WritableStateLens<A>.updateValue(_:)(sub_100099670, v18);
    v19 = swift_unknownObjectRelease(v11);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
    v10 = *(_QWORD *)((char *)a1 + v9);
    v20 = *(_QWORD *)(v10 + 48);
  }
  else
  {
    v20 = 0;
  }
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = 0;
  swift_unknownObjectRelease(v20);
  v21 = (uint64_t *)(*(_QWORD *)((char *)a1 + v9)
                  + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_registeredContextActions);
  swift_beginAccess(v21, v31, 1, 0);
  v22 = *v21;
  *v21 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v22);
  objc_msgSend(a1, "setContentSize:", 0.0, 0.0);
  v23 = *(_QWORD *)((swift_isaMask & *a1) + 0xA0);
  *((_BYTE *)a1 + v23) = 0;
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  objc_msgSend(a1, "setNeedsLayout");
  if (*((_BYTE *)a1 + v23) == 1)
  {
    v25 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0xA8);
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 0;
  }
  else
  {
    objc_msgSend(a1, "setContentOffset:", 0.0, 0.0);
    v26 = (_QWORD *)((char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x88));
    v27 = *v26;
    if (*v26)
    {
      v28 = v26[1];
      v29 = swift_getObjectType();
      swift_unknownObjectRetain(v27);
      dispatch thunk of ScrollObserver.didScroll(in:)(a1, v29, v28);
      *(_QWORD *)&result = swift_unknownObjectRelease(v27).n128_u64[0];
    }
  }
  return result;
}

void sub_100099110(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

BOOL sub_100099118(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

void sub_100099134(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *Strong;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t i;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  char *v37;
  void *v38;
  id v39;
  void *v40;
  _UNKNOWN **v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(__n128);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  _UNKNOWN **v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75[24];
  char v76[24];

  v70 = a8;
  v73 = a7;
  v74 = a4;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000DF3C(&qword_1007F7D40);
  v71 = *(_QWORD *)(v17 - 8);
  v72 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v76, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return;
  v21 = Strong;
  v67 = a6;
  v68 = a1;
  v69 = a5;
  v22 = (char *)Strong + *(_QWORD *)((swift_isaMask & *Strong) + 0xB8);
  swift_beginAccess(v22, v75, 0, 0);
  v23 = *(_QWORD *)v22;
  v26 = *(_QWORD *)(*(_QWORD *)v22 + 64);
  v25 = *(_QWORD *)v22 + 64;
  v24 = v26;
  v27 = 1 << *(_BYTE *)(v23 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v24;
  v30 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain(v23);
  i = 0;
  do
  {
    if (v29)
    {
      v32 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      v33 = v32 | (i << 6);
    }
    else
    {
      v34 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_48:
        __break(1u);
        return;
      }
      if (v34 >= v30)
        goto LABEL_30;
      v35 = *(_QWORD *)(v25 + 8 * v34);
      ++i;
      if (!v35)
      {
        i = v34 + 1;
        if (v34 + 1 >= v30)
          goto LABEL_30;
        v35 = *(_QWORD *)(v25 + 8 * i);
        if (!v35)
        {
          i = v34 + 2;
          if (v34 + 2 >= v30)
            goto LABEL_30;
          v35 = *(_QWORD *)(v25 + 8 * i);
          if (!v35)
          {
            i = v34 + 3;
            if (v34 + 3 >= v30)
              goto LABEL_30;
            v35 = *(_QWORD *)(v25 + 8 * i);
            if (!v35)
            {
              v36 = v34 + 4;
              if (v36 >= v30)
              {
LABEL_30:

                swift_release(v23);
                return;
              }
              v35 = *(_QWORD *)(v25 + 8 * v36);
              for (i = v36; !v35; ++v36)
              {
                i = v36 + 1;
                if (__OFADD__(v36, 1))
                  goto LABEL_48;
                if (i >= v30)
                  goto LABEL_30;
                v35 = *(_QWORD *)(v25 + 8 * i);
              }
            }
          }
        }
      }
      v29 = (v35 - 1) & v35;
      v33 = __clz(__rbit64(v35)) + (i << 6);
    }
  }
  while (*(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * v33) != a2);
  v37 = (char *)*(id *)(*(_QWORD *)(v23 + 56) + 8 * v33);
  swift_release(v23);
  v38 = *(void **)&v37[OBJC_IVAR____TtCC22SubscribePageExtension32ReviewsHorizontalShelfDataSource8CardView_reviewCell];
  if (!v38)
    goto LABEL_26;
  v39 = v38;
  if (objc_msgSend(v39, "isHidden"))
  {

LABEL_26:
    v40 = *(void **)&v37[OBJC_IVAR____TtCC22SubscribePageExtension32ReviewsHorizontalShelfDataSource8CardView_editorsChoiceCell];
    if (!v40)
    {

      return;
    }
    v39 = v40;
    if ((objc_msgSend(v39, "isHidden") & 1) != 0)
    {

      return;
    }
    v41 = &off_1007484E8;
    goto LABEL_34;
  }
  v41 = &off_1007307E8;
LABEL_34:
  v66 = v41;
  v42 = objc_msgSend(v74, "traitCollection");
  v43 = objc_msgSend(v42, "horizontalSizeClass");

  if (v43 == (id)1)
    goto LABEL_42;
  v44 = v69;
  ObjectType = swift_getObjectType();
  v46 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerOverflowDelegate);
  if (v46)
    v47 = v46;
  else
    v47 = 0;
  if (!v46)
    v44 = 0;
  if (!v44)
  {
LABEL_42:
    v74 = v37;
    v54 = swift_getObjectType();
    v55 = *(_QWORD *)((char *)v21 + *(_QWORD *)((swift_isaMask & *v21) + 0x60));
    v56 = sub_10000DF3C((uint64_t *)&unk_1007F7D60);
    v57 = swift_allocObject(v56, 48, 7);
    *(_OWORD *)(v57 + 16) = xmmword_10066F870;
    v58 = v68;
    v59 = *(_QWORD *)(v68 + 40);
    *(_QWORD *)(v57 + 32) = *(_QWORD *)(v55 + 40);
    *(_QWORD *)(v57 + 40) = v59;
    IndexPath.init(arrayLiteral:)(v57);
    v70 = v54;
    v60 = v67;
    dispatch thunk of ComponentContainerDelegate.mutableState(ofSubItemAt:)(v16, v54, v67);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v61 = swift_getObjectType();
    v62 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v66[11])(v58, (uint64_t)v19, v73, v61);
    if ((v62 & 4) != 0)
    {
      objc_msgSend(v21, "setContentSize:", 0.0, 0.0);
      *((_BYTE *)v21 + *(_QWORD *)((swift_isaMask & *v21) + 0xA0)) = 0;
      objc_msgSend(v21, "invalidateIntrinsicContentSize");
      objc_msgSend(v21, "setNeedsLayout");
    }
    v64 = v74;
    if ((v62 & 1) != 0)
      dispatch thunk of ComponentContainerDelegate.propagateSelection(ofItem:)(*(_QWORD *)(v68 + 40), v70, v60, v63);

    swift_unknownObjectRelease(v39);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v19, v72);
  }
  else
  {
    v48 = swift_getObjectType();
    v49 = (void (*)(__n128))(*(uint64_t (**)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8))(*(_QWORD *)(v68 + 40), v37, v73, v70, v48, v47);
    v51 = v50;
    v52 = v69;
    v53 = swift_unknownObjectRetain(v69);
    v49(v53);
    swift_release(v51);

    swift_unknownObjectRelease(v52);
    swift_unknownObjectRelease(v39);
  }
}

id sub_100099670(_QWORD *a1)
{
  uint64_t v1;
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(v1 + 16), "contentOffset");
  *a1 = v4;
  a1[1] = v5;
  return result;
}

unint64_t sub_1000996A8()
{
  unint64_t result;

  result = qword_1007F7D50;
  if (!qword_1007F7D50)
  {
    result = swift_getWitnessTable(&unk_1006732D0, &type metadata for ReviewsHorizontalShelf.ScrollState);
    atomic_store(result, (unint64_t *)&qword_1007F7D50);
  }
  return result;
}

BOOL sub_1000996EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_1000996F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  _QWORD *v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  double *v39;
  void **v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  __n128 v45;
  uint64_t v47;
  uint64_t v48;
  long double v49[2];

  v13 = sub_10000DF3C(&qword_1007F7D40);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000DF3C(&qword_1007F7D58);
  v17 = *(_QWORD *)(v16 - 8);
  v47 = v16;
  v48 = v17;
  *(_QWORD *)&v18 = __chkstk_darwin(v16).n128_u64[0];
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(a6, "snapshotPageTraitEnvironment", v18);
  v22 = swift_allocObject(&unk_100725998, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1007259C0, 64, 7);
  v23[2] = v22;
  v23[3] = v21;
  v23[4] = a4;
  v23[5] = a5;
  v23[6] = a3;
  v23[7] = a1;
  v24 = (_QWORD *)((char *)a7 + *(_QWORD *)((swift_isaMask & *a7) + 0x68));
  v26 = *v24;
  v25 = v24[1];
  *v24 = (uint64_t)sub_100099A44;
  v24[1] = (uint64_t)v23;
  swift_unknownObjectRetain(v21);
  swift_unknownObjectRetain(a4);
  swift_retain(a3);
  swift_retain(a1);
  sub_100019310(v26, v25);
  ObjectType = swift_getObjectType();
  v28 = dispatch thunk of ComponentContainerDelegate.scrollObserver.getter(ObjectType, a5);
  sub_100098D70(v28, v29);
  v30 = v47;
  dispatch thunk of ComponentContainerDelegate.containerState.getter(ObjectType, a5, v31);
  StateLens.init(_:)(v15, &type metadata for ReviewsHorizontalShelf.ScrollState);
  v32 = sub_1000996A8();
  StateLens<A>.currentValue.getter(v49, v30, v32);
  v33 = (_QWORD *)(swift_isaMask & *a7);
  v34 = v49[0];
  v35 = v49[1];
  v36 = *(_QWORD *)((char *)a7 + v33[12])
      + OBJC_IVAR____TtC22SubscribePageExtension32ReviewsHorizontalShelfDataSource_layout;
  v37 = v34 - fmod(v49[0], *(double *)(v36 + 32) + *(double *)(v36 + 48));
  v38 = v35 + 0.0;
  if (*((_BYTE *)a7 + v33[20]) == 1)
  {
    v39 = (double *)((char *)a7 + v33[21]);
    *v39 = v37;
    v39[1] = v38;
    *((_BYTE *)v39 + 16) = 0;
LABEL_5:
    v44 = v21;
    goto LABEL_6;
  }
  objc_msgSend(a7, "setContentOffset:", v37, v38);
  v40 = (void **)((char *)a7 + *(_QWORD *)((swift_isaMask & *a7) + 0x88));
  v41 = *v40;
  if (!*v40)
    goto LABEL_5;
  v42 = v40[1];
  v43 = swift_getObjectType();
  swift_unknownObjectRetain(v41);
  dispatch thunk of ScrollObserver.didScroll(in:)(a7, v43, v42);
  swift_unknownObjectRelease(v21);
  v44 = v41;
LABEL_6:
  v45 = swift_unknownObjectRelease(v44);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v48 + 8))(v20, v30, v45);
}

uint64_t sub_1000999DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100099A00()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_100099A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100099134(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

double sub_100099A54(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  char v13;
  __n128 v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  uint64_t v22;
  double v23;
  id v24;
  id v25;

  v7 = ReviewsContainer.reviews.getter();
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    v9 = _CocoaArrayWrapper.endIndex.getter(v7);
  }
  else
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v9 > 0
    || (v22 = ReviewsContainer.editorsChoice.getter(v10),
        *(_QWORD *)&v23 = swift_release(v22).n128_u64[0],
        v20 = 0.0,
        v22)
    && (v24 = objc_msgSend(a5, "traitCollection", v23),
        v25 = objc_msgSend(v24, "horizontalSizeClass"),
        v24,
        v25 != (id)1))
  {
    v12 = objc_msgSend(a5, "traitCollection", v11);
    v13 = UITraitCollection.prefersAccessibilityLayouts.getter(v12);

    if ((v13 & 1) == 0)
      Shelf.rowsPerColumn.getter();
    PageTraitEnvironment.pageColumnWidth.getter();
    v15 = v14.n128_f64[0];
    if (qword_1007F1940 != -1)
      swift_once(&qword_1007F1940, sub_10028F210);
    v16 = type metadata accessor for ProductReviewLayout.Metrics(0, v14);
    v17 = sub_1000117A8(v16, (uint64_t)qword_100853578);
    v18 = type metadata accessor for ProductReviewLayout(0);
    v19 = sub_100099C4C();
    dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v17, a5, v18, v19, v15, 1.79769313e308);
    PageTraitEnvironment.pageColumnMargin.getter();
    objc_msgSend(a5, "pageMarginInsets");
    objc_msgSend(a5, "pageMarginInsets");
    return a1;
  }
  return v20;
}

unint64_t sub_100099C4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007F53F0;
  if (!qword_1007F53F0)
  {
    v1 = type metadata accessor for ProductReviewLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ProductReviewLayout, v1);
    atomic_store(result, (unint64_t *)&qword_1007F53F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewsHorizontalShelf.ScrollState()
{
  return &type metadata for ReviewsHorizontalShelf.ScrollState;
}

unint64_t sub_100099CA8()
{
  unint64_t result;

  result = qword_1007F7D70;
  if (!qword_1007F7D70)
  {
    result = swift_getWitnessTable(&unk_1006732B4, &type metadata for ReviewsHorizontalShelf.ScrollState);
    atomic_store(result, (unint64_t *)&qword_1007F7D70);
  }
  return result;
}

unint64_t sub_100099CF0()
{
  unint64_t result;

  result = qword_1007F7D78;
  if (!qword_1007F7D78)
  {
    result = swift_getWitnessTable(&unk_10067328C, &type metadata for ReviewsHorizontalShelf.ScrollState);
    atomic_store(result, (unint64_t *)&qword_1007F7D78);
  }
  return result;
}

void *sub_100099D34()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController);
  v2 = v1;
  return v1;
}

void sub_100099D64(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD v25[4];
  char v26;

  v3 = OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController;
  v4 = *(void **)&v1[OBJC_IVAR____TtC22SubscribePageExtension29StoreCollectionViewController_overlayViewController];
  v5 = v4;
  v6 = a1;
  static ViewControllerContainment.remove(_:)(v4);

  v7 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v24 = v6;

  v8 = *(void **)&v1[v3];
  v9 = v8;
  v10 = objc_msgSend(v1, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "bounds");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    v25[0] = v13;
    v25[1] = v15;
    v25[2] = v17;
    v25[3] = v19;
    v26 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v8, v1, v25);

    v20 = *(void **)&v1[v3];
    if (!v20)
    {
      v23 = v24;
      goto LABEL_6;
    }
    v21 = objc_msgSend(v20, "view");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "setInsetsLayoutMarginsFromSafeArea:", 0);

      v23 = v22;
LABEL_6:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100099EA8(void *a1, uint64_t a2)
{
  objc_class *ObjectType;
  id v4;
  id v5;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  v5 = a1;
  if (objc_msgSend(v5, "isViewLoaded"))
  {

  }
  else
  {
    v6.receiver = v5;
    v6.super_class = ObjectType;
    objc_msgSendSuper2(&v6, "loadView");
    v4 = objc_msgSend(v5, "navigationItem");
    objc_msgSend(v4, "setTitle:", 0);

  }
}

void sub_100099F50(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v14.receiver = a1;
  v14.super_class = ObjectType;
  v6 = a1;
  objc_msgSendSuper2(&v14, "viewWillAppear:", a3);
  v7 = objc_msgSend(v6, "view", sub_10009D4EC(0, 0, a3), v14.receiver, v14.super_class);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "bounds");
    v10 = v9;
    v12 = v11;

    v13 = sub_10000E99C(&qword_1007F83B0, type metadata accessor for ArcadeDiffablePageViewController, (uint64_t)byte_10067F0C0);
    ShelfBasedCollectionViewController.updateGlobalSupplementaries(fitting:)(ObjectType, v13, v10, v12);

  }
  else
  {
    __break(1u);
  }
}

void sub_10009A034(char a1)
{
  char *v1;
  char *v2;
  uint64_t *v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "viewDidAppear:", a1 & 1);
  v4 = (uint64_t *)&v2[qword_1007F7D90];
  v5 = *(void (**)(__n128))&v2[qword_1007F7D90];
  if (v5)
  {
    v6 = v4[1];
    v7 = swift_retain(v6);
    v5(v7);
    sub_100019310((uint64_t)v5, v6);
    v8 = *v4;
  }
  else
  {
    v8 = 0;
  }
  v9 = v4[1];
  *v4 = 0;
  v4[1] = 0;
  v10 = sub_100019310(v8, v9);
  if ((ArcadeDiffablePagePresenter.didFetchPage.getter(v10) & 1) != 0)
    sub_10009A0EC();
}

